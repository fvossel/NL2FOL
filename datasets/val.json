[
    {
        "NL": "A doctor diagnoses patients and prescribes medication if necessary.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → (Diagnoses(x, y) ∧ (NeedsMedication(y) → Prescribes(x, y))))"
    },
    {
        "NL": "Natural disasters can damage infrastructure and disrupt essential services.",
        "FOL": "∀x (NaturalDisaster(x) → (DamageInfrastructure(x) ∨ DisruptEssentialServices(x)))"
    },
    {
        "NL": "A planet with liquid water, a stable atmosphere, and a suitable temperature range can potentially support life.",
        "FOL": "∀x∀y∀z (Planet(x) ∧ LiquidWater(x, y) ∧ StableAtmosphere(x, z) ∧ SuitableTemperatureRange(x) → PotentiallySupportsLife(x))"
    },
    {
        "NL": "If a person is an athlete, they participate in sports.",
        "FOL": "∀x (Person(x) ∧ Athlete(x) → ParticipateInSports(x))"
    },
    {
        "NL": "If a plant is a type of grass, then it is not a tree.",
        "FOL": "∀x (Grass(x) → ¬Tree(x))"
    },
    {
        "NL": "Every kitten is an animal, but not all animals are kittens.",
        "FOL": "∀x (Kitten(x) → Animal(x)) ∧ ¬∀x (Animal(x) → Kitten(x))"
    },
    {
        "NL": "Some books are interesting.",
        "FOL": "∃x (Book(x) ∧ Interesting(x))"
    },
    {
        "NL": "If a celestial body is a planet, it orbits a star and has a spherical shape.",
        "FOL": "∀x (CelestialBody(x) ∧ Planet(x) → OrbitsStar(x) ∧ SphericalShape(x))"
    },
    {
        "NL": "A book is part of a series if it shares the same universe, characters, or storylines with other books in the series.",
        "FOL": "∀x∀y (Book(x) ∧ Book(y) ∧ (SharesUniverse(x, y) ∨ SharesCharacters(x, y) ∨ SharesStorylines(x, y)) → PartOfSeries(x))"
    },
    {
        "NL": "A kite flies in the sky, whereas a submarine navigates under the sea.",
        "FOL": "∀x (Kite(x) → FliesInSky(x)) ∧ ∀y (Submarine(y) → NavigatesUnderSea(y))"
    },
    {
        "NL": "Artists who create visual art, such as painters and sculptors, express ideas and emotions through their work.",
        "FOL": "∀x (VisualArtist(x) → (Painter(x) ∨ Sculptor(x)) ∧ ExpressesIdeas(x) ∧ ExpressesEmotions(x))"
    },
    {
        "NL": "Rainforests, characterized by high levels of rainfall and biodiversity, provide a habitat for a multitude of plant and animal species, while also playing a crucial role in regulating the Earth's climate by absorbing and storing carbon dioxide.",
        "FOL": "∀x∀y∀z (Rainforest(x) ∧ HighRainfall(x) ∧ Biodiversity(x) ∧ PlantAndAnimalSpecies(y) ∧ EarthsClimate(z) → (ProvidesHabitat(x, y) ∧ RegulatesEarthsClimate(x, z) ∧ AbsorbsAndStoresCarbonDioxide(x, z)))"
    },
    {
        "NL": "If all the lessons are not interesting, then there is a test all exams are about.",
        "FOL": "¬∀x (Lesson(x) → Interesting(x)) → ∃y (Test(y) ∧ ∀z (Exam(z) → About(z, y)))"
    },
    {
        "NL": "A secure password has upper and lowercase letters, numbers, and special characters.",
        "FOL": "∀x (Password(x) → (Secure(x) ↔ (HasUppercase(x) ∧ HasLowercase(x) ∧ HasNumbers(x) ∧ HasSpecialCharacters(x))))"
    },
    {
        "NL": "Sculptors create art from materials like stone, wood, or clay, while painters use canvas and colors.",
        "FOL": "∀x ∀y (Sculptor(x) ∧ Painter(y) → (CreatesArtFromStone(x) ∨ CreatesArtFromWood(x) ∨ CreatesArtFromClay(x) ⊕ UsesCanvas(y) ∧ UsesColors(y)))"
    },
    {
        "NL": "An athlete wins a gold medal if they finish first, a silver medal if they finish second, and a bronze medal if they finish third.",
        "FOL": "∀x (Athlete(x) → ((WinsGold(x) ↔ FinishFirst(x)) ⊕ (WinsSilver(x) ↔ FinishSecond(x)) ⊕ (WinsBronze(x) ↔ FinishThird(x))))"
    },
    {
        "NL": "A vehicle that uses solar energy as its primary power source is considered a solar-powered vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ PrimaryPowerSource(x, solarEnergy) → SolarPoweredVehicle(x))"
    },
    {
        "NL": "Some scientists are astronauts.",
        "FOL": "∃x (Scientist(x) ∧ Astronaut(x))"
    },
    {
        "NL": "Musicians play multiple instruments, like guitar or piano, and collaborate with other artists for performances or recordings.",
        "FOL": "∀x ∀y ∀z (Musician(x) ∧ Instrument(y) ∧ (Guitar(y) ∨ Piano(y)) ∧ Artist(z) → (Plays(x, y) ∧ CollaboratesWith(x, z) ∧ (Performance(z) ∨ Recording(z))))"
    },
    {
        "NL": "There is a man who cares for all and only the animals who do not care for themselves.",
        "FOL": "∃x (Man(x) ∧ ∀y (Animal(y) → (Care(x, y) ↔ ¬Care(y, y))))"
    },
    {
        "NL": "A successful party must have either a live band or a DJ playing music, but not both, and must also serve food and drinks.",
        "FOL": "∀x (Party(x) ∧ Successful(x) ↔ ((LiveBand(x) ⊕ DJ(x)) ∧ ServesFood(x) ∧ ServesDrinks(x)))"
    },
    {
        "NL": "It's false that every dog is friendly.",
        "FOL": "¬∀x (Dog(x) → Friendly(x))"
    },
    {
        "NL": "An author writes a book, and a publisher publishes it.",
        "FOL": "∀x∀y∀z (Author(x) ∧ Book(y) ∧ Publisher(z) → (Writes(x, y) ∧ Publishes(z, y)))"
    },
    {
        "NL": "Lucas is a programmer and Lily is a nurse.",
        "FOL": "Programmer(lucas) ∧ Nurse(lily)"
    },
    {
        "NL": "All students are not lazy or untidy.",
        "FOL": "∃x (Students(x) ∧ (¬Lazy(x) ∨ ¬Untidy(x)))"
    },
    {
        "NL": "A farmer grows crops, a rancher raises livestock, and a fisherman catches fish.",
        "FOL": "∀x∀y∀z (Farmer(x) ∧ Rancher(y) ∧ Fisherman(z) → (GrowsCrops(x) ∧ RaisesLivestock(y) ∧ CatchesFish(z)))"
    },
    {
        "NL": "If there is a poisonous substance, then every organism needs antidotes.",
        "FOL": "∃x (Poisonous(x) → ∀y ∃z (Antidote(z) ∧ Needs(y, z)))"
    },
    {
        "NL": "An electronic device is considered a wearable if it is designed to be worn on the body and provides functionality related to fitness, health, or communication.",
        "FOL": "∀x (ElectronicDevice(x) ∧ DesignedToBeWorn(x) ∧ (ProvidesFitnessFunctionality(x) ∨ ProvidesHealthFunctionality(x) ∨ ProvidesCommunicationFunctionality(x)) → Wearable(x))"
    },
    {
        "NL": "There isn't a student who has completed each project in the course.",
        "FOL": "¬∃x (Student(x) ∧ ∀y (Project(y) ∧ InCourse(y) → Completed(x, y)))"
    },
    {
        "NL": "When a plant receives adequate sunlight and proper nutrients, it has the potential to grow more vigorously.",
        "FOL": "∀x ∀y (Plant(x) ∧ ReceivesAdequateSunlight(x) ∧ ProperNutrients(x) → HasPotentialToGrowMoreVigorously(y))"
    },
    {
        "NL": "A sport is a team sport if it involves two or more teams, requires cooperation among team members, and has a scoring system.",
        "FOL": "∀x (Sport(x) ∧ InvolvesTeams(x) ∧ RequiresCooperation(x) ∧ HasScoringSystem(x) → TeamSport(x))"
    },
    {
        "NL": "Every doctor is a professional, but not every professional is a doctor.",
        "FOL": "∀x (Doctor(x) → Professional(x)) ∧ ¬∀x (Professional(x) → Doctor(x))"
    },
    {
        "NL": "Some cars are red and some cars are blue, but there are no cars that are both red and blue.",
        "FOL": "∃x (Red(x)) ∧ ∃x (Blue(x)) ∧ ¬∃x (Red(x) ∧ Blue(x))"
    },
    {
        "NL": "A cake is delicious if it is moist and sweet.",
        "FOL": "∀x (Cake(x) ∧ Moist(x) ∧ Sweet(x) → Delicious(x))"
    },
    {
        "NL": "A bus travels on roads, whereas a submarine sails under water.",
        "FOL": "∀x (Bus(x) → TravelsOnRoad(x)) ∧ ∀y (Submarine(y) → SailsUnderWater(y))"
    },
    {
        "NL": "A beverage is considered refreshing if it contains mint or lemon.",
        "FOL": "∀x (Beverage(x) ∧ (HasMint(x) ∨ HasLemon(x)) → Refreshing(x))"
    },
    {
        "NL": "Some plants are both flowering and have medicinal properties.",
        "FOL": "∃x (Plant(x) ∧ Flowering(x) ∧ MedicinalProperties(x))"
    },
    {
        "NL": "A movie is thrilling if it has intense scenes and dramatic twists.",
        "FOL": "∀x (Movie(x) ∧ HasIntenseScenes(x) ∧ HasDramaticTwists(x) → Thrilling(x))"
    },
    {
        "NL": "A beverage can be identified as tea if it is made by infusing hot water with leaves from the Camellia sinensis plant and optionally adding flavorings or sweeteners.",
        "FOL": "∀x (Beverage(x) ∧ HotWaterInfusion(x) ∧ CamelliaSinensisLeaves(x) ∧ (OptionalFlavorings(x) ⊕ OptionalSweeteners(x)) → Tea(x))"
    },
    {
        "NL": "A tiger is chasing a rabbit in the woods.",
        "FOL": "∃x ∃y (Tiger(x) ∧ Rabbit(y) ∧ Chasing(x, y) ∧ InTheWoods(x))"
    },
    {
        "NL": "An animal that hibernates and lives in a forest belongs to the category of wild animals.",
        "FOL": "∀x (Hibernates(x) ∧ LivesIn(x, Forest) → WildAnimal(x))"
    },
    {
        "NL": "Phones allow users to make calls and send messages.",
        "FOL": "∀x∀y (Phone(x) ∧ User(y) → (MakesCalls(y, x) ∧ SendsMessages(y, x)))"
    },
    {
        "NL": "A gardener grows flowers by providing sunlight, water, and nutrients.",
        "FOL": "∀x (Gardener(x) → Grows(x, flowers, sunlight, water, nutrients))"
    },
    {
        "NL": "A website is secure if it uses encryption, has strong authentication measures, and regularly updates its software.",
        "FOL": "∀x (Website(x) ∧ UsesEncryption(x) ∧ StrongAuthenticationMeasures(x) ∧ RegularSoftwareUpdates(x) → Secure(x))"
    },
    {
        "NL": "A carnivorous animal hunts, captures, and eats prey for nutrients.",
        "FOL": "∀x (CarnivorousAnimal(x) → ∀y (Prey(y) → (HuntsForNutrients(x, y) ∧ CapturesForNutrients(x, y) ∧ EatsForNutrients(x, y))))"
    },
    {
        "NL": "A cat is sleeping on a mat.",
        "FOL": "∃x ∃y (Cat(x) ∧ Mat(y) ∧ SleepingOn(x, y))"
    },
    {
        "NL": "Every bird can fly, but not every flying creature is a bird.",
        "FOL": "∀x (Bird(x) → CanFly(x)) ∧ ¬∀x (CanFly(x) → Bird(x))"
    },
    {
        "NL": "A toy is suitable for children if it is not dangerous and not fragile, but it is not suitable if it has small parts.",
        "FOL": "∀x (Toy(x) → (SuitableForChildren(x) ↔ ((¬Dangerous(x) ∧ ¬Fragile(x)) ∧ ¬HasSmallParts(x))))"
    },
    {
        "NL": "If an animal is a bird, it has wings and can fly, except for flightless birds.",
        "FOL": "∀x (Bird(x) → (HasWings(x) ∧ (CanFly(x) ∨ Flightless(x))))"
    },
    {
        "NL": "A planet is habitable if it has a stable climate and supports liquid water.",
        "FOL": "∀x (Planet(x) → (StableClimate(x) ∧ SupportsLiquidWater(x) → Habitable(x)))"
    },
    {
        "NL": "A secure password is a combination of upper and lowercase letters, numbers, and special characters.",
        "FOL": "∀x (Password(x) → (Secure(x) ↔ (UpperLowercaseLetters(x) ∧ Numbers(x) ∧ SpecialCharacters(x))))"
    },
    {
        "NL": "In a chemistry lab, chemists use test tubes for mixing chemicals, beakers for heating liquids, and a fume hood for safely handling volatile substances.",
        "FOL": "∀x ∀y ∀z (ChemistryLab(x) ∧ (Chemist(y) ∧ (TestTubes(y) ∧ MixingChemicals(x, y)) ∧ (Beakers(y) ∧ HeatingLiquids(x, y)) ∧ (FumeHood(z) ∧ SafelyHandlingVolatileSubstances(x, z))))"
    },
    {
        "NL": "No cows are eating.",
        "FOL": "¬∃x (Cow(x) ∧ Eating(x))"
    },
    {
        "NL": "Every person who admires someone is admired by someone.",
        "FOL": "∀x (Person(x) ∧ ∃y (Person(y) ∧ Admires(x, y)) → ∃z (Person(z) ∧ Admires(z, x)))"
    },
    {
        "NL": "A person is considered a meteorologist if they study the atmosphere and forecast weather conditions.",
        "FOL": "∀x (Person(x) ∧ StudiesAtmosphere(x) ∧ ForecastsWeatherConditions(x) → Meteorologist(x))"
    },
    {
        "NL": "A thriving ecosystem consists of diverse species, a stable food web, and a balanced interaction between biotic and abiotic factors.",
        "FOL": "∀x (Ecosystem(x) ∧ DiverseSpecies(x) ∧ StableFoodWeb(x) ∧ BalancedInteractionBetweenBioticAndAbioticFactors(x) → Thriving(x))"
    },
    {
        "NL": "All dogs bark, but not all barking creatures are dogs.",
        "FOL": "∀x (Dog(x) → Bark(x)) ∧ ¬∀x (Bark(x) → Dog(x))"
    },
    {
        "NL": "Parks can be closed for maintenance, or they can be open but with restricted areas.",
        "FOL": "∀x (Park(x) → (ClosedForMaintenance(x) ∨ (Open(x) ∧ RestrictedAreas(x))))"
    },
    {
        "NL": "A painting is either abstract or realistic, but not both",
        "FOL": "∀x (Painting(x) → (Abstract(x) ⊕ Realistic(x)))"
    },
    {
        "NL": "A fan rotates.",
        "FOL": "∀x (Fan(x) → Rotates(x))"
    },
    {
        "NL": "Every doctor who is compassionate is respected by all patients.",
        "FOL": "∀x (Doctor(x) ∧ Compassionate(x) → ∀y (Patient(y) → Respects(y, x)))"
    },
    {
        "NL": "An object submerged in water experiences an upward force called buoyancy.",
        "FOL": "∀x (Object(x) ∧ SubmergedInWater(x) → ExperiencesUpwardForce(x, buoyancy))"
    },
    {
        "NL": "Farmers grow crops on fertile land.",
        "FOL": "∀x∀y (Farmer(x) ∧ FertileLand(y) → GrowsCropsOn(x, y))"
    },
    {
        "NL": "A device is considered a computer if it can process data, operate software, and has a keyboard.",
        "FOL": "∀x ((Device(x) ∧ CanProcessData(x) ∧ OperateSoftware(x) ∧ HasKeyboard(x)) → Computer(x))"
    },
    {
        "NL": "A smartphone is considered waterproof if it can be submerged in water without suffering any damage.",
        "FOL": "∀x (Smartphone(x) ∧ CanBeSubmerged(x) ∧ NoWaterDamage(x) → Waterproof(x))"
    },
    {
        "NL": "A person is considered a freelancer if they work independently and are not permanently employed by a single company.",
        "FOL": "∀x (WorksIndependently(x) ∧ ¬PermanentlyEmployedBySingleCompany(x) → Freelancer(x))"
    },
    {
        "NL": "When a person is a parent and a grandparent, they have at least two generations of descendants.",
        "FOL": "∀x ((Parent(x) ∧ Grandparent(x)) → AtLeastTwoGenerations(x))"
    },
    {
        "NL": "Photographers capture images of different subjects, such as landscapes or portraits, and use various techniques for artistic expression.",
        "FOL": "∀x ∀y ∀z (Photographer(x) ∧ Subject(y) ∧ (Landscape(y) ∨ Portrait(y)) ∧ Technique(z) → (Captures(x, y) ∧ Uses(x, z)))"
    },
    {
        "NL": "A guitar has six strings, a violin has four strings, and a piano has numerous strings.",
        "FOL": "∀x∀y∀z (Guitar(x) ∧ Violin(y) ∧ Piano(z) → (HasSixStrings(x) ∧ HasFourStrings(y) ∧ HasNumerousStrings(z)))"
    },
    {
        "NL": "A chef uses a knife for cutting ingredients.",
        "FOL": "∀x∀y (Chef(x) ∧ Knife(y) → UsesForCuttingIngredients(x, y))"
    },
    {
        "NL": "A room can be either a bedroom, a living room, or a kitchen, but not a combination of these.",
        "FOL": "∀x (Room(x) → (Bedroom(x) ⊕ LivingRoom(x) ⊕ Kitchen(x)))"
    },
    {
        "NL": "When a flower is blooming, it is not wilting.",
        "FOL": "∀x (Flower(x) ∧ Blooming(x) → ¬Wilting(x))"
    },
    {
        "NL": "Some painters either use acrylic or oil, but do not use both.",
        "FOL": "∃x (Painter(x) ∧ (UseAcrylic(x) ⊕ UseOil(x)))"
    },
    {
        "NL": "A person who eats a balanced diet, exercises regularly, and gets enough sleep is likely to have good physical health.",
        "FOL": "∀x ((EatsBalancedDiet(x) ∧ ExercisesRegularly(x) ∧ GetsEnoughSleep(x)) → GoodPhysicalHealth(x))"
    },
    {
        "NL": "An essay is a chronicle if it captures the life's journey of a certain person, penned down by the same person.",
        "FOL": "∀x ∃y (Essay(x) ∧ Person(y) ∧ CapturesLifeJourney(x, y) ∧ PennedBy(x, y) → Chronicle(x))"
    },
    {
        "NL": "A movie is engaging if it has an intriguing plot and memorable characters.",
        "FOL": "∀x (Movie(x) ∧ IntriguingPlot(x) ∧ MemorableCharacters(x) → Engaging(x))"
    },
    {
        "NL": "Triangles are not quadrilaterals.",
        "FOL": "∀x (Triangle(x) → ¬Quadrilateral(x))"
    },
    {
        "NL": "Every writer who authored a book and all were best sellers, either becomes a critics favourite or gets invited to a literary festival.",
        "FOL": "∀x (Writer(x) ∧ ∀y (Book(y) ∧ Authored(x, y) ∧ BestSellers(y)) → (BecomesCriticsFavourite(x) ∨ GetsInvitedToLiteraryFestival(x)))"
    },
    {
        "NL": "A race car starts at the beginning of the track and finishes at the end without stopping in any pitstops.",
        "FOL": "∃x ∃y ∃z (RaceCar(x) ∧ StartTrack(y) ∧ FinishTrack(z) → StartsAt(x, y) ∧ FinishesAt(x, z) ∧ ¬∃w (Pitstop(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "An object that floats on water and is used for transportation across a body of water is a boat.",
        "FOL": "∀x∀y (Object(x) ∧ FloatsOnWater(x) ∧ BodyOfWater(y) ∧ UsedForTransportationAcross(x, y) → Boat(x))"
    },
    {
        "NL": "Unless an object is neither a bicycle nor a car, it is a chair.",
        "FOL": "∀x ((Bicycle(x) ∨ Car(x)) → Chair(x))"
    },
    {
        "NL": "A jacket is suitable for cold weather if it is insulated or windproof.",
        "FOL": "∀x (Jacket(x) → (Insulated(x) ∨ Windproof(x)) → SuitableForColdWeather(x))"
    },
    {
        "NL": "Desert plants, such as cacti, store water in their tissues to survive long periods of drought.",
        "FOL": "∀x ∀y ∀z (DesertPlant(x) ∧ Cactus(y) ∧ Drought(z) → StoresWaterToSurvive(x, y, z))"
    },
    {
        "NL": "A movie is considered a blockbuster if it has a large budget and high box office revenue.",
        "FOL": "∀x (Blockbuster(x) ↔ (Movie(x) ∧ LargeBudget(x) ∧ HighBoxOfficeRevenue(x)))"
    },
    {
        "NL": "A tornado forms when warm, moist air collides with cold, dry air, causing a rotating column of air to touch the ground.",
        "FOL": "∀x∀y∀z (Tornado(x) → (FormsWhenAirCollides(x, y, z) ∧ WarmMoistAir(y) ∧ ColdDryAir(z) ∧ RotatingColumnOfAirTouchesGround(x)))"
    },
    {
        "NL": "Mechanics repair vehicles, and technicians assist them.",
        "FOL": "∀x ∀y ∀z (Mechanic(x) ∧ Vehicle(y) ∧ Technician(z) → Repairs(x, y) ∧ Assists(z, x))"
    },
    {
        "NL": "If a restaurant serves Italian cuisine, then it offers pasta dishes.",
        "FOL": "∀x (Restaurant(x) ∧ ServesItalianCuisine(x) → OffersPastaDishes(x))"
    },
    {
        "NL": "A healthy diet includes fruits and vegetables, but not excessive amounts of sugar and fat.",
        "FOL": "∀x (HealthyDiet(x) ↔ (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ ¬ExcessiveSugar(x) ∧ ¬ExcessiveFat(x)))"
    },
    {
        "NL": "During a chess game, players move pieces like knights, bishops, and rooks on the chessboard according to the game's rules.",
        "FOL": "∀x∀y∀z (ChessGame(x) ∧ Player(y) ∧ (Piece(z) ∧ (IsKnight(z) ∨ IsBishop(z) ∨ IsRook(z))) → MovesAccordingToRules(y, x, z))"
    },
    {
        "NL": "A parallelogram has two pairs of parallel sides, whereas a rhombus has all sides equal in length.",
        "FOL": "∀x∀y (Parallelogram(x) ∧ Rhombus(y) → (TwoPairsParallelSides(x) ∧ AllSidesEqual(y)))"
    },
    {
        "NL": "In arid regions, cacti and succulents have adapted to store water in their fleshy leaves and stems, allowing them to survive long periods of drought.",
        "FOL": "∀x ∀y (Cactus(x) ∧ Succulent(y) → (AridRegionAdaptation(x) ∧ AridRegionAdaptation(y) ∧ StoresWater(x) ∧ StoresWater(y) ∧ SurvivesDrought(x) ∧ SurvivesDrought(y)))"
    },
    {
        "NL": "Something is a happy dog, and something is a lazy cat.",
        "FOL": "∃x (Happy(x) ∧ Dog(x)) ∧ ∃x (Lazy(x) ∧ Cat(x))"
    },
    {
        "NL": "A detective investigates crimes by collecting evidence and questioning witnesses.",
        "FOL": "∀x ∀y ∀z (Detective(x) ∧ Crime(y) ∧ Investigates(x, y) → (CollectsEvidence(x, z) ∧ QuestionsWitnesses(x, z)))"
    },
    {
        "NL": "A type of beverage can be either hot or cold.",
        "FOL": "∀x (BeverageType(x) → Hot(x) ⊕ Cold(x))"
    },
    {
        "NL": "An artistic creation that visually represents a subject, uses paint as a medium, and is applied on a flat surface is a painting.",
        "FOL": "∀x∀y (ArtisticCreation(x) ∧ VisuallyRepresentsSubject(x) ∧ Paint(y) ∧ UsesMedium(x, y) ∧ AppliedOnFlatSurface(x) → Painting(x))"
    },
    {
        "NL": "There is a green plant, and there is a red flower.",
        "FOL": "∃x (Green(x) ∧ Plant(x)) ∧ ∃x (Red(x) ∧ Flower(x))"
    },
    {
        "NL": "A tool used for cutting that is not a knife can be a pair of scissors, a saw, or a chisel.",
        "FOL": "∀x (CuttingTool(x) ∧ ¬Knife(x) → Scissors(x) ∨ Saw(x) ∨ Chisel(x))"
    },
    {
        "NL": "All spiders spin, trap, and kill flies for nourishment.",
        "FOL": "∀x (Spider(x) → ∀y (Fly(y) → (SpinsForNourishment(x, y) ∧ TrapsForNourishment(x, y) ∧ KillsForNourishment(x, y))))"
    },
    {
        "NL": "A movie is a thriller if it has suspense, excitement, and a surprise ending.",
        "FOL": "∀x (Movie(x) ∧ Suspense(x) ∧ Excitement(x) ∧ SurpriseEnding(x) → Thriller(x))"
    },
    {
        "NL": "Nobody is a quick runner or a slow walker.",
        "FOL": "¬∃x ((Quick(x) ∧ Runner(x)) ∨ (Slow(x) ∧ Walker(x)))"
    },
    {
        "NL": "No triangles are small.",
        "FOL": "∀x (Triangle(x) → ¬Small(x))"
    },
    {
        "NL": "Not all plants need sunlight.",
        "FOL": "¬(∀x (Plant(x) → NeedsSunlight(x)))"
    },
    {
        "NL": "A restaurant is successful if it has a good location or a talented chef, but not if it has poor service.",
        "FOL": "∀x (Restaurant(x) ∧ Successful(x) ↔ ((GoodLocation(x) ∨ TalentedChef(x)) ∧ ¬PoorService(x)))"
    },
    {
        "NL": "Isabella and Sophia are writers.",
        "FOL": "Writer(isabella) ∧ Writer(sophia)"
    },
    {
        "NL": "A bird is perched on a tree.",
        "FOL": "∃x ∃y (Bird(x) ∧ Tree(y) ∧ PerchedOn(x, y))"
    },
    {
        "NL": "Frost forms when the temperature falls below the freezing point of water and moisture is present.",
        "FOL": "∀x (Frost(x) → (TemperatureBelowFreezing(x) ∧ MoisturePresent(x)))"
    },
    {
        "NL": "A museum that displays historical artifacts, offers interactive exhibits, and organizes educational programs can engage visitors and promote cultural understanding.",
        "FOL": "∀x ∀y (Museum(x) ∧ DisplaysHistoricalArtifacts(x) ∧ OffersInteractiveExhibits(x) ∧ OrganizesEducationalPrograms(x) → EngagesVisitors(y) ∧ PromotesCulturalUnderstanding(y))"
    },
    {
        "NL": "A plant is medicinal if and only if it has leaves and roots.",
        "FOL": "∀x (Plant(x) → (Medicinal(x) ↔ HasLeaf(x) ∧ HasRoot(x)))"
    },
    {
        "NL": "A triangle with all sides of equal length is equilateral, while a triangle with two sides of equal length is isosceles.",
        "FOL": "∀x (Triangle(x) → ((AllSidesEqual(x) → Equilateral(x)) ∧ (TwoSidesEqual(x) ∧ ¬AllSidesEqual(x) → Isosceles(x))))"
    },
    {
        "NL": "Every film that is engaging and well-directed becomes a blockbuster.",
        "FOL": "∀x (Film(x) ∧ Engaging(x) ∧ WellDirected(x) → Blockbuster(x))"
    },
    {
        "NL": "A material is an insulator if it resists the flow of electric current.",
        "FOL": "∀x (Material(x) ∧ ResistsFlowOfElectricCurrent(x) → Insulator(x))"
    },
    {
        "NL": "A company x wins a contract y if it submits a successful proposal z that meets the requirements and outperforms competing proposals.",
        "FOL": "∀x ∀y ∀z (Company(x) ∧ Contract(y) ∧ Proposal(z) ∧ SubmittedBy(z, x) ∧ MeetsRequirements(z, y) ∧ OutperformsCompetingProposals(z) → WinsContract(x, y))"
    },
    {
        "NL": "No systems are there that can neither process nor store data.",
        "FOL": "¬∃x (System(x) ∧ ¬Process(x) ∧ ¬Store(x))"
    },
    {
        "NL": "A phone can make calls or send messages only if it is charged and has a signal.",
        "FOL": "∀x∀y∀z (Phone(x) ∧ (Call(y) ∨ Message(y)) ∧ (Charged(x) ∧ Signal(z)) → CanPerform(x, y, z))"
    },
    {
        "NL": "A museum can be dedicated to art, history, or science, and offer guided tours or self-guided exploration.",
        "FOL": "∀x (Museum(x) → ((DedicatedToArt(x) ∨ DedicatedToHistory(x) ∨ DedicatedToScience(x)) ∧ (GuidedTours(x) ∨ SelfGuidedExploration(x))))"
    },
    {
        "NL": "A dessert is delicious if and only if it is sweet and not spicy.",
        "FOL": "∀x (Dessert(x) → (Delicious(x) ↔ (Sweet(x) ∧ ¬Spicy(x))))"
    },
    {
        "NL": "All doctors treat some disease they diagnose and diagnose some disease they do not treat.",
        "FOL": "∀x (Doctor(x) → (∃y (Diagnose(x, y) ∧ Treat(x, y)) ∧ ∃z (Diagnose(x, z) ∧ ¬Treat(x, z))))"
    },
    {
        "NL": "A store is open if it's currently operating and not closed.",
        "FOL": "∀x (Store(x) ∧ CurrentlyOperating(x) ∧ ¬Closed(x) → Open(x))"
    },
    {
        "NL": "If a car is not an electric car, it uses fuel, and it emits smoke.",
        "FOL": "∀x (Car(x) ∧ ¬Electric(x) → (UsesFuel(x) ∧ EmitsSmoke(x)))"
    },
    {
        "NL": "If all teachers who will be promoted are experienced, then some janitors will not be promoted.",
        "FOL": "∀x (Teacher(x) ∧ Promoted(x) → Experienced(x)) → ∃y (Janitor(y) ∧ ¬Promoted(y))"
    },
    {
        "NL": "Elephants have tusks and are the largest land animals, while giraffes have long necks and are the tallest land animals.",
        "FOL": "∀x (Elephant(x) → (HasTusks(x) ∧ LargestLandAnimal(x))) ∧ ∀y (Giraffe(y) → (HasLongNeck(y) ∧ TallestLandAnimal(y)))"
    },
    {
        "NL": "An artist either paints or sculpts, but does not do both.",
        "FOL": "∀x (Artist(x) → (Paints(x) ⊕ Sculpts(x)))"
    },
    {
        "NL": "There isn't a singer who has performed in each country.",
        "FOL": "¬∃x (Singer(x) ∧ ∀y (Country(y) → PerformedIn(x, y)))"
    },
    {
        "NL": "A vaccine guards against a certain virus by provoking the immune system to produce a specific response.",
        "FOL": "∀x ∃y (Vaccine(x) ∧ Virus(y) ∧ ProvokesImmuneSystem(x) ∧ ProducesSpecificResponse(x, y) → GuardsAgainst(x, y))"
    },
    {
        "NL": "A credit card allows users to make online purchases and earn rewards.",
        "FOL": "∀x (CreditCard(x) → (AllowsOnlinePurchases(x) ∧ AllowsEarningRewards(x)))"
    },
    {
        "NL": "If a person is kind and honest, they are considered a good person.",
        "FOL": "∀x (Person(x) ∧ Kind(x) ∧ Honest(x) → GoodPerson(x))"
    },
    {
        "NL": "Fish thrive in environments where the water is clean, and the temperature is suitable.",
        "FOL": "∀x (Fish(x) → (Thrives(x) ↔ (CleanWater(x) ∧ SuitableTemperature(x))))"
    },
    {
        "NL": "A book is a mystery novel when the story revolves around solving a crime or uncovering secrets.",
        "FOL": "∀x (Book(x) ∧ (SolvingCrime(x) ∨ UncoveringSecrets(x)) → MysteryNovel(x))"
    },
    {
        "NL": "An animal x adapts to habitat y by developing traits that increase its chances of survival and reproduction in that environment.",
        "FOL": "∀x ∀y (Animal(x) ∧ Habitat(y) ∧ DevelopsTraits(x, y) ∧ IncreasesSurvival(x, y) ∧ IncreasesReproduction(x, y) → AdaptsTo(x, y))"
    },
    {
        "NL": "No dogs enjoy loud noise.",
        "FOL": "∀x ∀y (Dogs(x) ∧ LoudNoise(y) → ¬Enjoy(x, y))"
    },
    {
        "NL": "If a person is a journalist, they report news.",
        "FOL": "∀x (Journalist(x) → ReportsNews(x))"
    },
    {
        "NL": "Countries with stable politics, diverse industries, and rich natural resources usually have solid financial status.",
        "FOL": "∀x (Country(x) ∧ HasStablePolitics(x) ∧ HasDiverseIndustries(x) ∧ HasRichNaturalResources(x) → HasSolidFinancialStatus(x))"
    },
    {
        "NL": "If a vehicle runs on electricity, it does not directly emit greenhouse gases.",
        "FOL": "∀x (Vehicle(x) ∧ RunsOnElectricity(x) → ¬DirectlyEmitsGreenhouseGases(x))"
    },
    {
        "NL": "A house can be built from bricks, wood, or concrete, and may have a garden or a garage.",
        "FOL": "∀x (House(x) → ((BuiltFrom(x, \"bricks\") ∨ BuiltFrom(x, \"wood\") ∨ BuiltFrom(x, \"concrete\")) ∧ (HasGarden(x) ∨ HasGarage(x))))"
    },
    {
        "NL": "A type of container that is designed to hold and protect a person's money, credit cards, identification, and other small personal items is a wallet.",
        "FOL": "∀x (Container(x) ∧ DesignedToHoldMoney(x) ∧ DesignedToHoldCreditCards(x) ∧ DesignedToHoldIdentification(x) ∧ DesignedToHoldSmallPersonalItems(x) → Wallet(x))"
    },
    {
        "NL": "A flourishing garden receives adequate sunlight, proper watering, and regular maintenance.",
        "FOL": "∀x (Garden(x) ∧ AdequateSunlight(x) ∧ ProperWatering(x) ∧ RegularMaintenance(x) → Flourishing(x))"
    },
    {
        "NL": "The apple is a fruit.",
        "FOL": "∀x (Apple(x) → Fruit(x))"
    },
    {
        "NL": "A player can shoot with left foot or right foot.",
        "FOL": "∀x (Player(x) → (ShootLeftFoot(x) ⊕ ShootRightFoot(x)))"
    },
    {
        "NL": "If a device is frequently updated, then it runs smoother and stays reliable.",
        "FOL": "∀x (Device(x) ∧ FrequentlyUpdated(x) → RunsSmoother(x) ∧ StaysReliable(x))"
    },
    {
        "NL": "A car can either be a compact car with great fuel efficiency and affordable maintenance, or a luxury vehicle with high-performance engine and premium amenities.",
        "FOL": "∀x (Car(x) → ((CompactCar(x) ∧ FuelEfficiency(x) ∧ AffordableMaintenance(x)) ⊕ (LuxuryVehicle(x) ∧ HighPerformanceEngine(x) ∧ PremiumAmenities(x))))"
    },
    {
        "NL": "Erosion and weathering processes can gradually wear down mountains, forming sediments that are transported and deposited elsewhere.",
        "FOL": "∀x ∀y (Mountain(x) ∧ Erosion(y) ∧ Weathering(y) → (WearsDown(y, x) ∧ FormsSediments(y, x) ∧ TransportsAndDepositsElsewhere(y, x)))"
    },
    {
        "NL": "Ethan is a dentist and Olivia is a veterinarian.",
        "FOL": "Dentist(ethan) ∧ Veterinarian(olivia)"
    },
    {
        "NL": "A smartphone can connect to the internet using Wi-Fi or mobile data.",
        "FOL": "∀x (Smartphone(x) → (ConnectsToInternetUsing(x, Wi-Fi) ∨ ConnectsToInternetUsing(x, MobileData)))"
    },
    {
        "NL": "Certain plants, such as succulents, store water in their leaves to survive in arid environments.",
        "FOL": "∀x (Plant(x) ∧ Succulent(x) → StoresWaterInLeavesToSurviveInAridEnvironments(x))"
    },
    {
        "NL": "Every actor who values an actor is valued by that actor.",
        "FOL": "∀x ∀y (Actor(x) ∧ Actor(y) ∧ Values(x, y) → Values(y, x))"
    },
    {
        "NL": "If an animal is tamed, that animal is manageable.",
        "FOL": "∀x (Animal(x) ∧ Tamed(x) → Manageable(x))"
    },
    {
        "NL": "A building that is old and has no elevator is not wheelchair accessible.",
        "FOL": "∀x (Building(x) ∧ Old(x) ∧ ¬Elevator(x) → ¬WheelchairAccessible(x))"
    },
    {
        "NL": "It isn't true that all fruits are sweet.",
        "FOL": "¬∀x (Fruit(x) → Sweet(x))"
    },
    {
        "NL": "A child is building a sandcastle at the beach.",
        "FOL": "∃x ∃y (Child(x) ∧ Sandcastle(y) ∧ Building(x, y) ∧ AtTheBeach(x))"
    },
    {
        "NL": "A landform that extends above the surrounding terrain, has a peak, and is formed by tectonic forces or volcanic activity is a mountain.",
        "FOL": "∀x (Landform(x) ∧ ExtendsAboveSurroundingTerrain(x) ∧ HasPeak(x) ∧ (FormedByTectonicForces(x) ∨ FormedByVolcanicActivity(x)) → Mountain(x))"
    },
    {
        "NL": "If a dog is playful, that dog is lively.",
        "FOL": "∀y (Dog(y) ∧ Playful(y) → Lively(y))"
    },
    {
        "NL": "Soil fertility depends on the presence of essential nutrients, organic matter, and a diverse community of microorganisms that contribute to nutrient cycling and decomposition processes.",
        "FOL": "∀x∀y∀z (Soil(x) ∧ Fertility(y) ∧ EssentialComponents(z) → (DependsOn(y, x) ↔ PresenceOf(z, EssentialNutrients, OrganicMatter, DiverseCommunityOfMicroorganisms)))"
    },
    {
        "NL": "A student passes a course if they score at least 60 percent and attend at least 75 percent of the classes.",
        "FOL": "∀x (Student(x) ∧ ScoreAtLeast60Percent(x) ∧ AttendAtLeast75PercentClasses(x) → Pass(x))"
    },
    {
        "NL": "A drink is refreshing or energizing.",
        "FOL": "∀x (Drink(x) → (Refreshing(x) ∨ Energizing(x)))"
    },
    {
        "NL": "A chef can specialize in French, Italian, or Japanese cuisine, but not in all three.",
        "FOL": "∀x (Chef(x) → ((SpecializesInFrenchCuisine(x) ∨ SpecializesInItalianCuisine(x) ∨ SpecializesInJapaneseCuisine(x)) ∧ ¬(SpecializesInFrenchCuisine(x) ∧ SpecializesInItalianCuisine(x) ∧ SpecializesInJapaneseCuisine(x))))"
    },
    {
        "NL": "A printer prints documents and uses ink or toner.",
        "FOL": "∀x (Printer(x) → (PrintsDocuments(x) ∧ (UsesInk(x) ∨ UsesToner(x))))"
    },
    {
        "NL": "Emma is an architect, poet, and sailor.",
        "FOL": "Architect(emma) ∧ Poet(emma) ∧ Sailor(emma)"
    },
    {
        "NL": "Every artist who is either happy or sad inspires either a big audience or a small group.",
        "FOL": "∀x ((Artist(x) ∧ (Happy(x) ∨ Sad(x))) → ∃y ((Big(y) ∧ Audience(y)) ∨ (Small(y) ∧ Group(y)) ∧ Inspire(x, y)))"
    },
    {
        "NL": "Countries with coastlines have access to the sea.",
        "FOL": "∀x (Country(x) ∧ HasCoastline(x) → HasAccessToSea(x))"
    },
    {
        "NL": "A mountain is tall, while a valley is low.",
        "FOL": "∀x ∀y (Mountain(x) ∧ Valley(y) → (Tall(x) ∧ Low(y)))"
    },
    {
        "NL": "A plant is considered a succulent if it has thick leaves or stems that store water.",
        "FOL": "∀x (Plant(x) ∧ (ThickLeaves(x) ∨ ThickStems(x)) ∧ StoresWater(x) → Succulent(x))"
    },
    {
        "NL": "A teacher will pass the student only if he completes his homework.",
        "FOL": "∀x (Teacher(x) ∧ PassStudent(x) → CompleteHomework(x))"
    },
    {
        "NL": "A city has a mayor and a city council.",
        "FOL": "∀x (City(x) → (∃y∃z (Mayor(x, y) ∧ CityCouncil(x, z))))"
    },
    {
        "NL": "A television can display images in color, but if it can only display black and white images, it's considered an old model.",
        "FOL": "∀x (Television(x) → (DisplaysColor(x) ∨ (DisplaysBlackAndWhite(x) ∧ OldModel(x))))"
    },
    {
        "NL": "All nurses who are attentive are appreciated by every single patient.",
        "FOL": "∀x (Nurse(x) ∧ Attentive(x) → ∀y (Patient(y) → Appreciates(y, x)))"
    },
    {
        "NL": "A vehicle can be categorized as either a car, a truck, or a motorcycle.",
        "FOL": "∀x (Vehicle(x) → Car(x) ⊕ Truck(x) ⊕ Motorcycle(x))"
    },
    {
        "NL": "An athlete may participate in individual sports, team sports, or neither.",
        "FOL": "∀x (Athlete(x) → (IndividualSport(x) ∨ TeamSport(x) ∨ (¬IndividualSport(x) ∧ ¬TeamSport(x))))"
    },
    {
        "NL": "In a basketball game, scoring a three-pointer requires shooting the ball from beyond the three-point line.",
        "FOL": "∀x∀y (BasketballGame(y) ∧ ShootsBall(x, y) ∧ BeyondThreePointLine(x, y) → ScoresThreePointer(x, y))"
    },
    {
        "NL": "Regular exercise promotes mental well-being.",
        "FOL": "∀y (RegularExercise(y) → PromotesWellBeing(y))"
    },
    {
        "NL": "A book that is a mystery can intrigue readers.",
        "FOL": "∀x ∀y (Book(x) ∧ Mystery(x) ∧ Reader(y) → CanIntrigue(x, y))"
    },
    {
        "NL": "An ecosystem is balanced when populations of various species coexist without causing harm to one another.",
        "FOL": "∀x∀y∀z (Ecosystem(x) ∧ Species(y) ∧ Species(z) → (Balanced(x) ↔ (CoexistWithoutHarm(x, y, z))))"
    },
    {
        "NL": "A person who creates and designs buildings and other structures is called an architect.",
        "FOL": "∀x (CreatesAndDesignsBuildingsAndStructures(x) → Architect(x))"
    },
    {
        "NL": "A ship sails from a departure port and docks at an arrival port without anchoring at any other ports.",
        "FOL": "∃x ∃y ∃z (Ship(x) ∧ DeparturePort(y) ∧ ArrivalPort(z) → SailsFrom(x, y) ∧ DocksAt(x, z) ∧ ¬∃w (Port(w) ∧ AnchorsAt(x, w)))"
    },
    {
        "NL": "An ecosystem that has diverse plant and animal species, a stable climate, and ample resources is considered healthy.",
        "FOL": "∀x (Ecosystem(x) ∧ DiversePlantSpecies(x) ∧ DiverseAnimalSpecies(x) ∧ StableClimate(x) ∧ AmpleResources(x) → Healthy(x))"
    },
    {
        "NL": "A bird can fly or swim, but not both.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ⊕ CanSwim(x)))"
    },
    {
        "NL": "An electronic device can be in standby mode or active mode, but not both.",
        "FOL": "∀x (ElectronicDevice(x) → (StandbyMode(x) ⊕ ActiveMode(x)))"
    },
    {
        "NL": "A device is a smartphone if it can make phone calls, send messages, and access the internet.",
        "FOL": "∀x (Smartphone(x) ↔ (CanMakePhoneCalls(x) ∧ CanSendMessages(x) ∧ CanAccessInternet(x)))"
    },
    {
        "NL": "A planet is in the solar system or the milky way.",
        "FOL": "∀x (Planet(x) → InSolarSystem(x) ∨ InMilkyWay(x))"
    },
    {
        "NL": "A door is locked if it is closed and has a key, but it is unlocked if it is open or has no key.",
        "FOL": "∀x (Door(x) → ((Closed(x) ∧ HasKey(x) ∧ ¬Open(x) → Locked(x)) ⊕ (Open(x) ∨ ¬HasKey(x) → Unlocked(x))))"
    },
    {
        "NL": "If some dogs cannot fetch, then all parks are crowded or some cats are sleepy.",
        "FOL": "∃x (Dog(x) ∧ ¬CanFetch(x)) → ∀y (Park(y) ∧ Crowded(y)) ∨ ∃z (Cat(z) ∧ Sleepy(z))"
    },
    {
        "NL": "A movie is either a comedy and funny, or a drama and serious, but not both.",
        "FOL": "∀x ((Movie(x) ∧ Comedy(x) ∧ Funny(x)) ⊕ (Movie(x) ∧ Drama(x) ∧ Serious(x)))"
    },
    {
        "NL": "A room appears brighter when illuminated by a light source with a higher color temperature.",
        "FOL": "∀x ∀y (Room(x) ∧ LightSource(y) ∧ HigherColorTemperature(y) ∧ Illuminates(y, x) → AppearsBrighter(x))"
    },
    {
        "NL": "A castle has a moat.",
        "FOL": "∀x (Castle(x) → HasMoat(x))"
    },
    {
        "NL": "A being is a human if and only if every being related to it is intelligent.",
        "FOL": "∀x (Human(x) ↔ ∀y (RelatedTo(y, x) → Intelligent(y)))"
    },
    {
        "NL": "A film is captivating if it has a compelling plot, features strong performances, and boasts excellent cinematography, or if it addresses relevant social issues, but not if it relies heavily on clichés.",
        "FOL": "∀x (Film(x) → (Captivating(x) ↔ (((CompellingPlot(x) ∧ StrongPerformances(x) ∧ ExcellentCinematography(x)) ∨ AddressesRelevantSocialIssues(x)) ∧ ¬ReliesOnCliches(x))))"
    },
    {
        "NL": "A camera can capture images using a lens, a sensor, and a shutter.",
        "FOL": "∀x ∀y ∀z ∀w (Camera(x) → (CapturesImages(x, y) ∧ UsesLens(x, y, z) ∧ UsesSensor(x, y, w) ∧ UsesShutter(x, y)))"
    },
    {
        "NL": "A musical piece is a symphony if it reflects the composer's life events.",
        "FOL": "∀x ∃y (MusicPiece(x) ∧ Composer(y) ∧ ReflectsLifeEvents(x, y) → Symphony(x))"
    },
    {
        "NL": "Rice is a staple food in Asia, while corn is a staple in the Americas.",
        "FOL": "∀x ∀y (Rice(x) ∧ Corn(y) → (StapleFood(x, Asia) ∧ StapleFood(y, Americas)))"
    },
    {
        "NL": "An ice cream melts when exposed to high temperatures.",
        "FOL": "∀x (IceCream(x) ∧ HighTemperature(y) → MeltsWhenExposedTo(x, y))"
    },
    {
        "NL": "Cities have buildings.",
        "FOL": "∀x∀y (City(x) ∧ Building(y) → Has(x, y))"
    },
    {
        "NL": "All dogs are mammals.",
        "FOL": "∀x (Dog(x) → Mammal(x))"
    },
    {
        "NL": "If not all balls are round, there is a target that every arrow points to.",
        "FOL": "¬∀x (Ball(x) → Round(x)) → ∃y (Target(y) ∧ ∀z (Arrow(z) → PointsTo(z, y)))"
    },
    {
        "NL": "A film can be classified as a comedy, drama, or action, but not a combination of these genres.",
        "FOL": "∀x (Film(x) → (Comedy(x) ⊕ Drama(x) ⊕ Action(x)))"
    },
    {
        "NL": "A painting is considered abstract if and only if it has geometric shapes and vivid colors.",
        "FOL": "∀x (Painting(x) → (Abstract(x) ↔ HasGeometricShapes(x) ∧ HasVividColors(x)))"
    },
    {
        "NL": "In a marine ecosystem, coral reefs provide shelter for various fish species, while plankton serves as a food source for many marine animals.",
        "FOL": "∀x ∀y (MarineEcosystem(x) ∧ (CoralReefs(x, y) ∧ ProvidesShelterForFishSpecies(y)) ∧ (Plankton(x) ∧ ServesAsFoodSource(x)))"
    },
    {
        "NL": "A mode of transportation that operates on a specific schedule, follows a predetermined route, and is commonly used for commuting within a city is typically a public transit system.",
        "FOL": "∀x∀y∀z (ModeOfTransportation(x) ∧ OperatesOnSchedule(x) ∧ SpecificSchedule(y) ∧ PredeterminedRoute(z) ∧ Follows(x, z) ∧ CommonlyUsedForCommuting(x) → PublicTransitSystem(x))"
    },
    {
        "NL": "Fish swim in water and breathe through gills.",
        "FOL": "∀x ∀y (Fish(x) ∧ Water(y) → (SwimIn(x, y) ∧ BreatheThroughGills(x)))"
    },
    {
        "NL": "Mike is not a pilot if and only if he is a pilot.",
        "FOL": "¬Pilot(mike) ↔ Pilot(mike)"
    },
    {
        "NL": "A planet is habitable if it has a stable orbit around a star and supports liquid water.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) ∧ StableOrbit(x, y) ∧ SupportsLiquidWater(x) → Habitable(x))"
    },
    {
        "NL": "A liquid that evaporates quickly at room temperature is a volatile substance.",
        "FOL": "∀x (Liquid(x) ∧ EvaporatesQuicklyAtRoomTemperature(x) → VolatileSubstance(x))"
    },
    {
        "NL": "A movie is considered a box office success if it generates a substantial profit compared to its production budget.",
        "FOL": "∀x (Movie(x) ∧ GeneratesProfit(x, p) ∧ ProductionBudget(x, b) ∧ SubstantialProfit(p, b) → BoxOfficeSuccess(x))"
    },
    {
        "NL": "A musician plays an instrument if they have skill and are not fatigued.",
        "FOL": "∀x∀y (Musician(x) ∧ Instrument(y) → (Plays(x, y) ↔ (Skilled(x) ∧ ¬Fatigued(x))))"
    },
    {
        "NL": "A train station has trains.",
        "FOL": "∀x ∃y (TrainStation(x) ∧ Train(y) ∧ LocatedAt(y, x))"
    },
    {
        "NL": "A restaurant with live music or a sports bar setting attracts customers looking for entertainment or socializing.",
        "FOL": "∀x ∀y (Restaurant(x) ∧ (LiveMusic(x) ∨ SportsBarSetting(x)) ∧ Customer(y) ∧ (SeekingEntertainment(y) ∨ SeekingSocializing(y)) → Attracts(x, y))"
    },
    {
        "NL": "All students pass the test if there is not a teacher who is not experienced.",
        "FOL": "¬∃x (Teacher(x) ∧ ¬Experienced(x)) → ∀y (Student(y) → Pass(y))"
    },
    {
        "NL": "A student who studies consistently, attends classes, and gets sufficient rest performs well.",
        "FOL": "∀x (Student(x) ∧ StudiesConsistently(x) ∧ AttendsClasses(x) ∧ GetsSufficientRest(x) → PerformsWell(x))"
    },
    {
        "NL": "All prime numbers are greater than one and divisible only by one and themselves.",
        "FOL": "∀x (PrimeNumber(x) → (GreaterThanOne(x) ∧ DivisibleOnlyByOneAndSelf(x)))"
    },
    {
        "NL": "An aquarium exhibits diverse marine life, including fish, mammals, and invertebrates, and features interactive displays and educational programs for visitors.",
        "FOL": "∀x (Aquarium(x) ∧ (Fish(x) ∨ MarineMammals(x) ∨ Invertebrates(x)) → FeaturesInteractiveDisplaysAndEducationalPrograms(x))"
    },
    {
        "NL": "A holiday can either be a beach holiday with sunny weather and water activities, or a city break with sightseeing opportunities and cultural experiences.",
        "FOL": "∀x (Holiday(x) → ((BeachHoliday(x) ∧ SunnyWeather(x) ∧ WaterActivities(x)) ⊕ (CityBreak(x) ∧ SightseeingOpportunities(x) ∧ CulturalExperiences(x))))"
    },
    {
        "NL": "A chemical element x is a noble gas if it has a full outer electron shell and exhibits low chemical reactivity.",
        "FOL": "∀x (ChemicalElement(x) ∧ FullOuterElectronShell(x) ∧ LowChemicalReactivity(x) → NobleGas(x))"
    },
    {
        "NL": "A flower blooms when it receives enough sunlight, warmth, and nutrients.",
        "FOL": "∀x (Flower(x) → (ReceivesSunlight(x) ∧ ReceivesWarmth(x) ∧ ReceivesNutrients(x, y) → Blooms(x)))"
    },
    {
        "NL": "A radio station can be received clearly when it broadcasts at the correct frequency, the listener is within range, and there is minimal interference.",
        "FOL": "∀x (RadioStation(x) ∧ CorrectFrequency(x) ∧ ListenerWithinRange(x) ∧ MinimalInterference(x) → ReceivedClearly(x))"
    },
    {
        "NL": "A person is considered an electrician if they install, maintain, and repair electrical systems, wiring, and equipment in residential, commercial, and industrial buildings.",
        "FOL": "∀x (Electrician(x) ↔ (InstallsMaintainsAndRepairsElectricalSystemsWiringAndEquipment(x) ∧ InResidentialCommercialAndIndustrialBuildings(x)))"
    },
    {
        "NL": "A computer is slow if it takes a long time to process tasks.",
        "FOL": "∀x (Computer(x) ∧ LongProcessingTime(x) → Slow(x))"
    },
    {
        "NL": "A medication x treats condition y if it targets the root cause of the condition and has been approved by the appropriate regulatory authority.",
        "FOL": "∀x ∀y (Medication(x) ∧ Condition(y) ∧ TargetsRootCause(x, y) ∧ ApprovedByAuthority(x) → Treats(x, y))"
    },
    {
        "NL": "A camera can be digital or analog.",
        "FOL": "∀x (Camera(x) → (Digital(x) ∨ Analog(x)))"
    },
    {
        "NL": "A prism disperses white light into a spectrum of colors.",
        "FOL": "∀x∀y (Prism(x) ∧ WhiteLight(y) → DispersesIntoSpectrumOfColors(x, y))"
    },
    {
        "NL": "A car is considered powerful if it has a fast engine and a large fuel tank.",
        "FOL": "∀x (Car(x) ∧ HasFastEngine(x) ∧ HasLargeFuelTank(x) → Powerful(x))"
    },
    {
        "NL": "Humans breathe air.",
        "FOL": "∀x ∀y (Human(x) ∧ Air(y) → Breathe(x, y))"
    },
    {
        "NL": "Plants are succulents if they are not trees.",
        "FOL": "∀w (¬Tree(w) → Succulent(w))"
    },
    {
        "NL": "A bank offers financial services such as loans, savings accounts, and investment options.",
        "FOL": "∀x (Bank(x) → (OffersLoans(x) ∨ OffersSavingsAccounts(x) ∨ OffersInvestmentOptions(x)))"
    },
    {
        "NL": "A recipe is easy to follow if it has clear instructions and few ingredients, but not if it requires specialized equipment.",
        "FOL": "∀x (Recipe(x) → (EasyToFollow(x) ↔ ((ClearInstructions(x) ∧ FewIngredients(x)) ∧ ¬RequiresSpecializedEquipment(x))))"
    },
    {
        "NL": "A tree sheds its leaves during autumn and grows new ones in spring.",
        "FOL": "∀x (Tree(x) → (ShedsLeavesDuringAutumn(x) ∧ GrowsNewLeavesInSpring(x)))"
    },
    {
        "NL": "A film is directed by a director, and it can have a cast that includes actors and actresses.",
        "FOL": "∀x∀y∀z (Film(x) ∧ Director(y) ∧ CastMember(z) → (DirectedBy(x, y) ∧ IncludesCast(x, z)))"
    },
    {
        "NL": "All musicians are creative, but not all creative people are musicians.",
        "FOL": "∀x (Musician(x) → Creative(x)) ∧ ¬∀x (Creative(x) → Musician(x))"
    },
    {
        "NL": "A chemical element is either a metal, a non-metal, or a metalloid.",
        "FOL": "∀x (ChemicalElement(x) → (Metal(x) ⊕ NonMetal(x) ⊕ Metalloid(x)))"
    },
    {
        "NL": "A student graduates with honors if they maintain a GPA of 3.5 or higher and participate in extracurricular activities.",
        "FOL": "∀x (Student(x) → (GraduatesWithHonors(x) ↔ (HasGPA(x, threePointFiveOrHigher) ∧ ParticipatesInExtracurricular(x))))"
    },
    {
        "NL": "A planet has a gravitational force.",
        "FOL": "∀x (Planet(x) → HasGravitationalForce(x))"
    },
    {
        "NL": "When a plant is either a flower or a tree, it needs sunlight and water to grow.",
        "FOL": "∀x ((Flower(x) ⊕ Tree(x)) → (NeedsSunlight(x) ∧ NeedsWater(x)))"
    },
    {
        "NL": "A chef uses ingredients to prepare a dish according to a recipe.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Ingredients(y) ∧ Dish(z) ∧ Recipe(z) → Prepares(x, y, z))"
    },
    {
        "NL": "A planet has a habitable environment if it has a stable climate, liquid water, and an atmosphere that supports life.",
        "FOL": "∀x (Planet(x) ∧ StableClimate(x) ∧ LiquidWater(x) ∧ SupportsLifeAtmosphere(x) → HabitableEnvironment(x))"
    },
    {
        "NL": "A polygon can be classified as either regular or irregular, but not both.",
        "FOL": "∀x (Polygon(x) → (Regular(x) ⊕ Irregular(x)))"
    },
    {
        "NL": "A desert biome supports a variety of plant and animal species that have adapted to the harsh, arid conditions and limited water resources.",
        "FOL": "∀x∀y∀z (DesertBiome(x) ∧ SupportsVarietyOfPlantSpecies(x, y) ∧ SupportsVarietyOfAnimalSpecies(x, y) ∧ AdaptedToHarshConditions(x, z) ∧ LimitedWaterResources(x, z) → Thrives(x, y, z))"
    },
    {
        "NL": "A desert is a region with low precipitation, causing a scarcity of vegetation, and often characterized by extreme temperatures during the day and night.",
        "FOL": "∀x∀y (Desert(x) ∧ (LowPrecipitation(y) ∧ ScarcityOfVegetation(z)) → CharacterizedByExtremeTemperatures(x, y, z))"
    },
    {
        "NL": "A teacher who educates a pupil will be assisted by someone.",
        "FOL": "∀x ∃y (Teacher(x) ∧ Pupil(y) ∧ Educates(x, y) → ∃z (Person(z) ∧ WillAssist(z, x)))"
    },
    {
        "NL": "Every athlete is not disciplined.",
        "FOL": "¬∀x (Athlete(x) → Disciplined(x))"
    },
    {
        "NL": "A tree grows taller, develops branches and leaves, and may produce fruit or flowers.",
        "FOL": "∀x (Tree(x) → (GrowsTaller(x) ∧ DevelopsBranches(x) ∧ DevelopsLeaves(x) ∧ (ProducesFruit(x) ∨ ProducesFlowers(x))))"
    },
    {
        "NL": "A person is considered an interpreter if they translate spoken language between two or more parties in real-time.",
        "FOL": "∀x (Person(x) ∧ TranslatesSpokenLanguageInRealTime(x) → Interpreter(x))"
    },
    {
        "NL": "An organism is classified as a carnivore if its diet consists primarily of other animals.",
        "FOL": "∀x (Organism(x) ∧ DietConsistsPrimarilyOfAnimals(x) → Carnivore(x))"
    },
    {
        "NL": "An employee who exceeds their sales targets may receive a bonus or a promotion.",
        "FOL": "∀x (Employee(x) ∧ ExceedsSalesTargets(x) → (ReceivesBonus(x) ∨ ReceivesPromotion(x)))"
    },
    {
        "NL": "If a plant is watered, then it grows well and produces beautiful flowers.",
        "FOL": "∀x (Plant(x) ∧ Watered(x) → GrowsWell(x) ∧ ProducesBeautifulFlowers(x))"
    },
    {
        "NL": "A book is a bestseller if it has sold a large number of copies and received widespread critical acclaim.",
        "FOL": "∀x (Bestseller(x) ↔ (Book(x) ∧ LargeNumberOfCopies(x) ∧ ∀y (CriticalAcclaim(y) → Received(x, y))))"
    },
    {
        "NL": "A musical instrument produces sound by the vibration of a resonant body or air column.",
        "FOL": "∀x (MusicalInstrument(x) ∧ (VibratesResonantBody(x) ∨ VibratesAirColumn(x)) → ProducesSound(x))"
    },
    {
        "NL": "Toasters toast bread by heating it.",
        "FOL": "∀x∀y (Toaster(x) ∧ Bread(y) → ToastsByHeating(x, y))"
    },
    {
        "NL": "An organism that decomposes organic material and returns nutrients to the environment is a decomposer.",
        "FOL": "∀x (Organism(x) ∧ DecomposesOrganicMaterial(x) ∧ ReturnsNutrientsToEnvironment(x) → Decomposer(x))"
    },
    {
        "NL": "A sandwich is satisfying if it has ham or turkey.",
        "FOL": "∀x (Sandwich(x) ∧ (HasHam(x) ∨ HasTurkey(x)) → Satisfying(x))"
    },
    {
        "NL": "A building is considered an architectural landmark if it has a unique design, historical significance, and cultural value.",
        "FOL": "∀x (ArchitecturalLandmark(x) ↔ (Building(x) ∧ UniqueDesign(x) ∧ HistoricalSignificance(x) ∧ CulturalValue(x)))"
    },
    {
        "NL": "A film festival is prestigious if it showcases diverse films, attracts talented filmmakers, and receives positive media coverage.",
        "FOL": "∀x∀y (FilmFestival(x) ∧ DiverseFilms(x) ∧ TalentedFilmmakers(y) ∧ Attracts(x, y) ∧ PositiveMediaCoverage(x) → Prestigious(x))"
    },
    {
        "NL": "In a forest ecosystem, trees provide shelter for animals, while plants provide food and help to filter air.",
        "FOL": "∀x∀y∀z (ForestEcosystem(x) ∧ Tree(y) ∧ Plant(z) → (ProvidesShelter(y, Animal) ∧ ProvidesFood(z, Animal) ∧ HelpsFilterAir(z)))"
    },
    {
        "NL": "A scientist has made a breakthrough discovery if they have published a high-impact paper and received widespread recognition from their peers.",
        "FOL": "∀x (Scientist(x) ∧ HighImpactPaper(x) ∧ WidespreadRecognition(x) → BreakthroughDiscovery(x))"
    },
    {
        "NL": "A film that features a fictional narrative, explores human emotions and relationships, and is characterized by a dramatic storyline is a drama film.",
        "FOL": "∀x ∀y ∀z (Film(x) ∧ FictionalNarrative(y) ∧ HumanEmotionsAndRelationships(z) ∧ Features(x, y) ∧ Explores(x, z) ∧ CharacterizedByDramaticStoryline(x) → DramaFilm(x))"
    },
    {
        "NL": "A fruit is not both ripe and unripe.",
        "FOL": "∀x (Fruit(x) → ¬(Ripe(x) ∧ Unripe(x)))"
    },
    {
        "NL": "Every day has 24 hours.",
        "FOL": "∀x (Day(x) → HasTwentyFourHours(x))"
    },
    {
        "NL": "A bank is reliable if it offers secure services and has a good reputation.",
        "FOL": "∀x (Bank(x) ∧ Reliable(x) ↔ (SecureServices(x) ∧ GoodReputation(x)))"
    },
    {
        "NL": "A cake is delicious if it is moist and has the right amount of sweetness, or it can be delicious if it has an appealing texture and a balanced flavor profile.",
        "FOL": "∀x (Cake(x) ∧ Moist(x) ∧ RightSweetness(x) → Delicious(x)) ∨ (Cake(x) ∧ AppealingTexture(x) ∧ BalancedFlavor(x) → Delicious(x))"
    },
    {
        "NL": "A reptile is classified as a snake if it lacks limbs and has a long, slender body, and as a lizard if it has limbs and a tail.",
        "FOL": "∀x (Reptile(x) → ((LacksLimbs(x) ∧ LongSlenderBody(x) → Snake(x)) ∧ (HasLimbs(x) ∧ HasTail(x) → Lizard(x))))"
    },
    {
        "NL": "An object submerged in water displaces a volume of water equal to the volume of the object.",
        "FOL": "∀x ∀y (SubmergedInWater(x, y) → DisplacesWaterVolume(x, y))"
    },
    {
        "NL": "An electronic device is energy-efficient when it consumes minimal power, generates little heat, and has a long battery life.",
        "FOL": "∀x (ElectronicDevice(x) ∧ MinimalPowerConsumption(x) ∧ LowHeatGeneration(x) ∧ LongBatteryLife(x) → EnergyEfficient(x))"
    },
    {
        "NL": "A smartphone records videos and displays them when needed for sharing.",
        "FOL": "∀x (Smartphone(x) → (RecordsVideos(x) ∧ (IsNeededForSharing(x) → DisplaysVideos(x))))"
    },
    {
        "NL": "A car is a sedan or a convertible.",
        "FOL": "∀x (Car(x) → (Sedan(x) ∨ Convertible(x)))"
    },
    {
        "NL": "Carnivorous plants obtain nutrients by trapping and digesting insects, which helps them thrive in nutrient-poor environments.",
        "FOL": "∀x ∀y (CarnivorousPlant(x) ∧ Insect(y) ∧ NutrientPoorEnvironment(z) → TrapsAndDigests(x, y, z))"
    },
    {
        "NL": "All cells have a nucleus, except for prokaryotic cells.",
        "FOL": "∀x (Cell(x) → (HasNucleus(x) ∨ Prokaryotic(x)))"
    },
    {
        "NL": "An electronic device malfunctions if it experiences a power surge or gets exposed to moisture.",
        "FOL": "∀x (ElectronicDevice(x) ∧ (PowerSurge(x) ∨ ExposedToMoisture(x)) → Malfunctions(x))"
    },
    {
        "NL": "In a solar system, planets orbit a star, and moons orbit planets.",
        "FOL": "∀x ∀y ∀z (SolarSystem(x) ∧ Planet(y) ∧ Moon(z) ∧ InSolarSystem(y, x) ∧ InSolarSystem(z, x) → (OrbitsStar(y) ∧ OrbitsPlanet(z, y)))"
    },
    {
        "NL": "The Earth orbits the Sun, while the Moon orbits the Earth.",
        "FOL": "∃x ∃y ∃z (Earth(x) ∧ Sun(y) ∧ Moon(z) ∧ (Orbits(x, y) ∧ Orbits(z, x)))"
    },
    {
        "NL": "Either Ryan is not a painter or Lily is a teacher, but not both.",
        "FOL": "¬Painter(ryan) ⊕ Teacher(lily)"
    },
    {
        "NL": "A geological formation is a volcano if it has a vent connected to the Earth's mantle, has erupted in the past, and contains magma.",
        "FOL": "∀x (GeologicalFormation(x) ∧ VentConnectedToMantle(x) ∧ PastEruption(x) ∧ ContainsMagma(x) → Volcano(x))"
    },
    {
        "NL": "A piano creates music through striking strings, while a guitar produces music by plucking strings.",
        "FOL": "∀x∀y (Piano(x) ∧ Guitar(y) → (StrikesStrings(x) ∧ CreatesMusic(x) ∧ PlucksStrings(y) ∧ ProducesMusic(y)))"
    },
    {
        "NL": "An oven cooks food and may have a convection or conventional mode.",
        "FOL": "∀x (Oven(x) → (CooksFood(x) ∧ (Convection(x) ⊕ Conventional(x))))"
    },
    {
        "NL": "A dessert is sweet or sour, but not both.",
        "FOL": "∀x (Dessert(x) → ((Sweet(x) ⊕ Sour(x)) ∧ ¬(Sweet(x) ∧ Sour(x))))"
    },
    {
        "NL": "A substance is either a hot coffee or a cold tea, and it is brown no matter what.",
        "FOL": "∃x (((Hot(x) ∧ Coffee(x)) ∨ (Cold(x) ∧ Tea(x))) ∧ Brown(x))"
    },
    {
        "NL": "A microwave oven heats food by emitting microwaves that agitate water molecules, producing heat through friction.",
        "FOL": "∀x (MicrowaveOven(x) → (EmitsMicrowaves(x) ∧ AgitatesWaterMolecules(x) ∧ ProducesHeatThroughFriction(x) ∧ HeatsFood(x)))"
    },
    {
        "NL": "A school teaches students, employs teachers, and has classrooms.",
        "FOL": "∀x (School(x) → (TeachesStudents(x) ∧ EmploysTeachers(x) ∧ HasClassrooms(x)))"
    },
    {
        "NL": "An omnivore devours both plants and animals, while a detritivore thrives on dead organic matter.",
        "FOL": "∀x ∀y (Omnivore(x) ∧ (Plant(y) ∨ Animal(y)) → DevoursBoth(x, y)) ∧ ∀z ∀w (Detritivore(z) ∧ DeadOrganicMatter(w) → ThrivesOn(z, w))"
    },
    {
        "NL": "A vehicle needs fuel, air, and space to function correctly.",
        "FOL": "∀x (Vehicle(x) → (HasFuel(x) ∧ GetsAir(x) ∧ HasSpace(x)) → FunctionsCorrectly(x))"
    },
    {
        "NL": "A person is peaceful if and only if they are calm and have a hobby.",
        "FOL": "∀x (Person(x) → (Peaceful(x) ↔ (Calm(x) ∧ HasHobby(x))))"
    },
    {
        "NL": "If an event is a wedding, it celebrates the union of two people.",
        "FOL": "∀x (Event(x) ∧ Wedding(x) → CelebratesUnionOfTwoPeople(x))"
    },
    {
        "NL": "An animal is either a mammal or a bird if it is not a reptile.",
        "FOL": "∀x (Animal(x) ∧ ¬Reptile(x) → (Mammal(x) ∨ Bird(x)))"
    },
    {
        "NL": "Cars that are clean and fast are desired.",
        "FOL": "∀x (Car(x) ∧ Clean(x) ∧ Fast(x) → Desired(x))"
    },
    {
        "NL": "A place is a park if it is an outdoor area, is designed for recreation and relaxation, and contains features such as green spaces, playgrounds, or sports facilities.",
        "FOL": "∀x (Place(x) ∧ OutdoorArea(x) ∧ DesignedForRecreationAndRelaxation(x) ∧ (ContainsGreenSpaces(x) ∨ ContainsPlaygrounds(x) ∨ ContainsSportsFacilities(x)) → Park(x))"
    },
    {
        "NL": "A photographer captures images, while a graphic designer creates visuals using software tools.",
        "FOL": "∀x∀y∀z (Photographer(x) ∧ Image(y) → Captures(x, y)) ∧ (GraphicDesigner(x) ∧ Visual(y) ∧ SoftwareTool(z) → CreatesUsing(x, y, z))"
    },
    {
        "NL": "A gardener cultivates plants and maintains a garden.",
        "FOL": "∀x∀y∀z (Gardener(x) ∧ Plant(y) ∧ Garden(z) → (Cultivates(x, y) ∧ Maintains(x, z)))"
    },
    {
        "NL": "A device that can receive, store, and transmit data wirelessly while being powered by a battery is considered a portable communication device.",
        "FOL": "∀x∀y∀z (Device(x) ∧ CanReceiveData(x, y) ∧ CanStoreData(x, y) ∧ CanTransmitData(x, y) ∧ Wireless(x) ∧ BatteryPowered(x, z) → PortableCommunicationDevice(x))"
    },
    {
        "NL": "A glacier is a massive, slow-moving body of ice that forms when snow accumulates over time, compressing into dense ice and reshaping the landscape as it moves.",
        "FOL": "∀x∀y (Glacier(x) ∧ Snow(y) ∧ DenseIce(z) ∧ Landscape(w) → FormsAndReshapesLandscape(x, y, z, w))"
    },
    {
        "NL": "An organization can be a nonprofit, a governmental entity, or a private sector firm.",
        "FOL": "∀x (Organization(x) → (Nonprofit(x) ∨ GovernmentalEntity(x) ∨ PrivateSectorFirm(x)))"
    },
    {
        "NL": "Writers pen books, while illustrators sketch drawings.",
        "FOL": "∀x ∀y (Writer(x) ∧ Book(y) → Pens(x, y)) ∧ ∀z ∀w (Illustrator(z) ∧ Drawing(w) → Sketches(z, w))"
    },
    {
        "NL": "No dogs like sweet food.",
        "FOL": "∀x ∀y (Dog(x) ∧ Sweet(y) → ¬Like(x, y))"
    },
    {
        "NL": "A painting is valuable if it is created by a famous artist, preserved in good condition, and has a unique style.",
        "FOL": "∀x∀y (Painting(x) ∧ FamousArtist(y) ∧ CreatedBy(x, y) ∧ GoodCondition(x) ∧ UniqueStyle(x) → Valuable(x))"
    },
    {
        "NL": "Racoons are nocturnal and forage at night, while squirrels are diurnal and forage during the day.",
        "FOL": "∀x (Racoon(x) → (Nocturnal(x) ∧ ForagesAtNight(x))) ∧ ∀y (Squirrel(y) → (Diurnal(y) ∧ ForagesDuringDay(y)))"
    },
    {
        "NL": "Each person that is neither rich nor poor is a celebrity if and only if they are famous.",
        "FOL": "∀x (¬Rich(x) ∧ ¬Poor(x) → (Celebrity(x) ↔ Famous(x)))"
    },
    {
        "NL": "A tourist can be from Asia, Europe, or America.",
        "FOL": "∀x (Tourist(x) → (FromAsia(x) ∨ FromEurope(x) ∨ FromAmerica(x)))"
    },
    {
        "NL": "An athlete is health conscious if they abstain from smoking, alcohol, and fast food.",
        "FOL": "∀z (Athlete(z) → ¬Smoke(z) ∧ ¬DrinkAlcohol(z) ∧ ¬EatFastFood(z) → HealthConscious(z))"
    },
    {
        "NL": "A bachelor has never been married, and a widow has been married but lost their spouse.",
        "FOL": "∀x ((Bachelor(x) → ¬Married(x)) ∧ (Widow(x) → (Married(x) ∧ LostSpouse(x))))"
    },
    {
        "NL": "A piece is an autobiography if it portrays the life experience of the creator himself.",
        "FOL": "∀x ∃y (Piece(x) ∧ Creator(y) ∧ PortraysLifeExperience(x, y) → Autobiography(x))"
    },
    {
        "NL": "A book becomes a bestseller when it attracts a large readership, receives positive reviews from critics, and generates significant sales revenue.",
        "FOL": "∀x (Book(x) ∧ LargeReadership(x) ∧ PositiveReviewsFromCritics(x) ∧ GeneratesSignificantSalesRevenue(x) → Bestseller(x))"
    },
    {
        "NL": "A movie could be praised for best screenplay, best costumes, or best special effects, but not all simultaneously.",
        "FOL": "∀x (Movie(x) ∧ BePraised(x) → (BestScreenplayAward(x) ⊕ BestCostumesAward(x) ⊕ BestSpecialEffectsAward(x)))"
    },
    {
        "NL": "A factory produces a high-quality product if it uses advanced manufacturing techniques, superior materials, and has strict quality control measures.",
        "FOL": "∀x ∀y ∀z (Factory(x) ∧ Product(y) ∧ AdvancedManufacturingTechniques(x) ∧ SuperiorMaterials(y) ∧ StrictQualityControl(z, y) → HighQualityProduct(x, y, z))"
    },
    {
        "NL": "Every ball is either red or blue.",
        "FOL": "∀x (Ball(x) → (Red(x) ⊕ Blue(x)))"
    },
    {
        "NL": "An object is an isosceles triangle if it has two sides of equal length and two equal angles.",
        "FOL": "∀x (IsoscelesTriangle(x) ↔ (Object(x) ∧ TwoSidesEqualLength(x) ∧ TwoEqualAngles(x)))"
    },
    {
        "NL": "An event is successful if it generates a positive atmosphere, attracts a large audience, or fosters meaningful connections.",
        "FOL": "∀x (Event(x) ∧ (PositiveAtmosphere(x) ∨ AttractsLargeAudience(x) ∨ FostersMeaningfulConnections(x)) → Successful(x))"
    },
    {
        "NL": "An athlete's performance is influenced by factors such as physical fitness, mental focus, and proper coaching.",
        "FOL": "∀x (Athlete(x) → (PhysicalFitness(x) ∧ MentalFocus(x) ∧ ProperCoaching(x)) ↔ GoodPerformance(x))"
    },
    {
        "NL": "A gadget may use battery power, solar power, or wired electricity.",
        "FOL": "∀x (Gadget(x) → (UsesBatteryPower(x) ∨ UsesSolarPower(x) ∨ UsesWiredElectricity(x)))"
    },
    {
        "NL": "A national park may have both forested areas and grasslands but is not located in urban areas.",
        "FOL": "∀x (NationalPark(x) → (HasForestedAreas(x) ∨ HasGrasslands(x)) ∧ ¬LocatedInUrbanArea(x))"
    },
    {
        "NL": "A city is a capital if it serves as the political, cultural, and economic center of a country.",
        "FOL": "∀x (City(x) ∧ PoliticalCenter(x) ∧ CulturalCenter(x) ∧ EconomicCenter(x) → Capital(x))"
    },
    {
        "NL": "A museum displays artifacts, artwork, or specimens for public viewing and education.",
        "FOL": "∀x (Museum(x) → (DisplayArtifacts(x) ∨ DisplayArtwork(x) ∨ DisplaySpecimens(x)) ∧ PublicViewing(x) ∧ Education(x))"
    },
    {
        "NL": "A cell is a eukaryotic cell if it has a nucleus enclosed by a membrane and contains membrane-bound organelles.",
        "FOL": "∀x (EukaryoticCell(x) → (Cell(x) ∧ Nucleus(x) ∧ MembraneEnclosed(x) ∧ MembraneBoundOrganelles(x)))"
    },
    {
        "NL": "Eating a diet rich in fruits, vegetables, and whole grains contributes to a healthy lifestyle and reduces the risk of chronic diseases.",
        "FOL": "∀x (Diet(x) ∧ RichInFruits(x) ∧ RichInVegetables(x) ∧ RichInWholeGrains(x) → (HealthyLifestyle(x) ∧ ReducesRiskOfChronicDiseases(x)))"
    },
    {
        "NL": "A film director oversees the production of a movie, collaborating with actors and crew members.",
        "FOL": "∀x∀y∀z (FilmDirector(x) ∧ Movie(y) ∧ ActorsAndCrew(z) → (OverseesProduction(x, y) ∧ CollaboratesWith(x, z)))"
    },
    {
        "NL": "A meal is healthy when it is low in fat and rich in nutrients.",
        "FOL": "∀x (Meal(x) ∧ (LowFat(x) ∧ RichInNutrients(x)) → Healthy(x))"
    },
    {
        "NL": "A planet in the solar system has a moon if it has a strong gravitational force.",
        "FOL": "∀x∀y (Planet(x) ∧ InSolarSystem(x) ∧ StrongGravitationalForce(x) → (Moon(y) ∧ HasMoon(x, y)))"
    },
    {
        "NL": "If a person is a painter, they create visual art using paint as a medium.",
        "FOL": "∀x (Painter(x) → CreatesVisualArtWithPaint(x))"
    },
    {
        "NL": "If a car is electric, it emits less carbon and is eco-friendly.",
        "FOL": "∀x (Car(x) ∧ IsElectric(x) → EmitsLessCarbon(x) ∧ IsEcofriendly(x))"
    },
    {
        "NL": "Fruits that are soft and red usually taste better.",
        "FOL": "∀x (Fruit(x) ∧ Soft(x) ∧ Red(x) → TasteBetter(x))"
    },
    {
        "NL": "Some birds can fly.",
        "FOL": "∃x (Bird(x) ∧ Fly(x))"
    },
    {
        "NL": "When a chemical compound is highly reactive, it readily forms new bonds, can be dangerous to handle, and may require special storage conditions.",
        "FOL": "∀x (ChemicalCompound(x) ∧ HighlyReactive(x) → ReadilyFormsNewBonds(x) ∧ CanBeDangerousToHandle(x) ∧ MayRequireSpecialStorageConditions(x))"
    },
    {
        "NL": "No meals are fully healthy, but, it is satisfying to prepare meals.",
        "FOL": "¬∀x (Meal(x) → FullyHealthy(x)) ∧ ∀y (Meal(y) → SatisfyingToPrepare(y))"
    },
    {
        "NL": "All turtles are slow.",
        "FOL": "∀x (Turtle(x) → Slow(x))"
    },
    {
        "NL": "A room with a television is not a quiet room, and a quiet room does not have a television.",
        "FOL": "∀x (Room(x) → ((HasTelevision(x) ∧ ¬Quiet(x)) ∨ (¬HasTelevision(x) ∧ Quiet(x))))"
    },
    {
        "NL": "If a person is a nurse, they care for patients.",
        "FOL": "∀x (Person(x) ∧ Nurse(x) → CareForPatients(x))"
    },
    {
        "NL": "There are authors who praise only those poets who are more creative than they.",
        "FOL": "∃x ∀y (Author(x) ∧ Poet(y) ∧ MoreCreativeThan(y, x) → Praise(x, y))"
    },
    {
        "NL": "Not all bridges are suspension or arch bridges.",
        "FOL": "¬∀x (Bridge(x) → (Suspension(x) ∨ Arch(x)))"
    },
    {
        "NL": "An email is marked as spam if it contains suspicious links, originates from an unknown sender, or has a misleading subject line.",
        "FOL": "∀x (Email(x) ∧ Spam(x) ↔ (SuspiciousLinks(x) ∨ UnknownSender(x) ∨ MisleadingSubject(x)))"
    },
    {
        "NL": "A vehicle is considered a bicycle if it has two wheels, is powered by human effort, and is ridden by a rider who sits on a seat and uses handlebars for steering.",
        "FOL": "∀x (Vehicle(x) ∧ TwoWheels(x) ∧ PoweredByHumanEffort(x) ∧ RiderSitsOnSeatAndUsesHandlebars(x) → Bicycle(x))"
    },
    {
        "NL": "There doesn't exist a river that crosses all large islands.",
        "FOL": "¬∃x (River(x) ∧ ∀y (Large(y) ∧ Island(y) → Crosses(x, y)))"
    },
    {
        "NL": "An event is a conference if it involves multiple presentations on a specific topic and is attended by professionals.",
        "FOL": "∀x (Event(x) ∧ MultiplePresentationsOnSpecificTopic(x) ∧ AttendedByProfessionals(x) → Conference(x))"
    },
    {
        "NL": "Nothing is a pink pentagon.",
        "FOL": "¬∃x (Pentagon(x) ∧ Pink(x))"
    },
    {
        "NL": "A company is environmentally responsible if it reduces waste, conserves energy, and minimizes its ecological footprint.",
        "FOL": "∀x (EnvironmentallyResponsible(x) ↔ (Company(x) ∧ ∀y (Waste(y) ∧ ProducedBy(y, x) → Reduces(x, y)) ∧ ∀z (Energy(z) ∧ UsedBy(x, z) → Conserves(x, z)) ∧ MinimizesEcologicalFootprint(x)))"
    },
    {
        "NL": "A car that runs on hydrogen fuel, can be refueled quickly, and emits only water vapour is a hydrogen vehicle.",
        "FOL": "∀x (Car(x) ∧ RunsOnHydrogenFuel(x) ∧ CanBeRefueledQuickly(x) ∧ EmitsOnlyWaterVapour(x) → HydrogenVehicle(x))"
    },
    {
        "NL": "A person who creates and designs garments and accessories for the fashion industry is a fashion designer.",
        "FOL": "∀x (Person(x) ∧ CreatesGarments(x) ∧ DesignsGarments(x) ∧ DesignsAccessories(x) → FashionDesigner(x))"
    },
    {
        "NL": "An event that occurs when the Moon passes between the Earth and the Sun, casting a shadow on the Earth's surface, is a solar eclipse.",
        "FOL": "∀x∀y∀z (Event(x) ∧ MoonPassesBetween(x, y, z) ∧ Earth(y) ∧ Sun(z) ∧ CastsShadowOnSurface(x, y) → SolarEclipse(x))"
    },
    {
        "NL": "Not all cars are expensive.",
        "FOL": "¬∀x (Car(x) → Expensive(x))"
    },
    {
        "NL": "Not every book is fascinating, but every fascinating book contains wisdom.",
        "FOL": "¬∀x (Book(x) → Fascinating(x)) ∧ ∀y (Fascinating(y) ∧ Book(y) → ContainsWisdom(y))"
    },
    {
        "NL": "An athlete who participates in triathlons must swim, cycle, and run.",
        "FOL": "∀x (Athlete(x) ∧ ParticipatesInTriathlons(x) → (CanSwim(x) ∧ CanCycle(x) ∧ CanRun(x)))"
    },
    {
        "NL": "A parent has children.",
        "FOL": "∀x ∃y (Parent(x) → HasChild(x, y))"
    },
    {
        "NL": "A vehicle is gas-powered if it uses a gas engine instead of an electric motor.",
        "FOL": "∀x (Vehicle(x) ∧ HasGasEngine(x) ∧ ¬HasElectricMotor(x) → GasPowered(x))"
    },
    {
        "NL": "A movie is successful if it has an engaging plot, good acting, and innovative cinematography.",
        "FOL": "∀x (Movie(x) ∧ HasEngagingPlot(x) ∧ GoodActing(x) ∧ InnovativeCinematography(x) → IsSuccessful(x))"
    },
    {
        "NL": "A pharmacist dispenses medication and provides information about drug interactions.",
        "FOL": "∀x ∀y ∀z (Pharmacist(x) ∧ DispensesMedication(x, y) → ProvidesInformationAboutDrugInteractions(x, y, z))"
    },
    {
        "NL": "A student is diligent if they always do their homework.",
        "FOL": "∀x ∃y (Student(x) ∧ Homework(y) ∧ Does(x, y) → Diligent(x))"
    },
    {
        "NL": "A restaurant attracts customers when it serves delicious food and maintains a clean environment, but not if the service is consistently slow.",
        "FOL": "∀x (Restaurant(x) ∧ AttractsCustomers(x) ↔ (DeliciousFood(x) ∧ CleanEnvironment(x) ∧ ¬SlowService(x)))"
    },
    {
        "NL": "An object is classified as a gemstone if it is a naturally occurring mineral or rock that is cut and polished for use in jewelry or other decorative items.",
        "FOL": "∀x (Object(x) ∧ (NaturallyOccurringMineral(x) ∨ NaturallyOccurringRock(x)) ∧ CutAndPolished(x) ∧ UsedInJewelryOrDecorativeItems(x) → Gemstone(x))"
    },
    {
        "NL": "Fires generate heat and emit smoke, while ice is cold and can cause frostbite.",
        "FOL": "∀x ((Fire(x) → (GeneratesHeat(x) ∧ EmitsSmoke(x))) ∧ (Ice(x) → (IsCold(x) ∧ CanCauseFrostbite(x))))"
    },
    {
        "NL": "Some beverages are alcoholic, while others are non-alcoholic, and they can be served cold or hot.",
        "FOL": "∃x (Beverage(x) ∧ Alcoholic(x)) ∧ ∃y (Beverage(y) ∧ ¬Alcoholic(y)) ∧ ∀z (Beverage(z) → (ServedCold(z) ∨ ServedHot(z)))"
    },
    {
        "NL": "An airplane has wings and an engine.",
        "FOL": "∀x (Airplane(x) → (∃y WingsOf(x, y) ∧ ∃z EngineOf(x, z)))"
    },
    {
        "NL": "A person is an artist if they create visual or performing arts.",
        "FOL": "∀x (Person(x) ∧ Artist(x) ↔ (CreatesVisualArts(x) ∨ CreatesPerformingArts(x)))"
    },
    {
        "NL": "A chef can cook meals, prepare desserts, or create beverages.",
        "FOL": "∀x (Chef(x) → ∃y ∃z ∃w (CookMeal(x, y) ∨ PrepareDessert(x, z) ∨ CreateBeverage(x, w)))"
    },
    {
        "NL": "If a person is a gardener, they must plant, cultivate, and maintain gardens and landscapes.",
        "FOL": "∀x (Gardener(x) → (PlantsGardens(x) ∧ CultivatesGardens(x) ∧ MaintainsLandscapes(x)))"
    },
    {
        "NL": "A bicycle has two wheels, and it can be ridden on paved roads or unpaved trails.",
        "FOL": "∀x (Bicycle(x) → (HasTwoWheels(x) ∧ (∃y (PavedRoad(y) ∨ UnpavedTrail(y)) ∧ RiddenOn(x, y))))"
    },
    {
        "NL": "A computer keyboard can be mechanical or membrane.",
        "FOL": "∀x (ComputerKeyboard(x) → (Mechanical(x) ⊕ Membrane(x)))"
    },
    {
        "NL": "A landscape with fertile soil, a reliable water source, and suitable climatic conditions is conducive to successful agricultural activities.",
        "FOL": "∀x (Landscape(x) ∧ FertileSoil(x) ∧ ReliableWaterSource(x) ∧ SuitableClimaticConditions(x) → ConduciveToSuccessfulAgriculture(x))"
    },
    {
        "NL": "A scientist discovers a material that is lightweight and durable.",
        "FOL": "∀x ∀y (Scientist(x) ∧ Material(y) ∧ Discovers(x, y) → (Lightweight(y) ∧ Durable(y)))"
    },
    {
        "NL": "An athlete is qualified for a competition if they have a coach and they have either completed rigorous training or achieved outstanding results.",
        "FOL": "∀x (Athlete(x) ∧ Coach(x) ∧ (RigorousTraining(x) ∨ OutstandingResults(x)) → Qualified(x))"
    },
    {
        "NL": "A number is odd when it is not divisible by 2.",
        "FOL": "∀x (Number(x) ∧ ¬DivisibleBy(x, 2) → Odd(x))"
    },
    {
        "NL": "An organism belongs to the plant kingdom if it is autotrophic, has cell walls made of cellulose, and reproduces by spores or seeds.",
        "FOL": "∀x (PlantKingdom(x) ↔ (Organism(x) ∧ Autotrophic(x) ∧ CellWallsMadeOfCellulose(x) ∧ (ReproducesBySpores(x) ∨ ReproducesBySeeds(x))))"
    },
    {
        "NL": "A scientific theory becomes widely accepted when it is supported by extensive empirical evidence, withstands rigorous scrutiny, and provides explanatory power.",
        "FOL": "∀x (ScientificTheory(x) ∧ ExtensiveEmpiricalEvidence(x) ∧ WithstandsRigorousScrutiny(x) ∧ ExplanatoryPower(x) → WidelyAccepted(x))"
    },
    {
        "NL": "A dog owner is responsible for providing food, shelter, and veterinary care for their dog, while ensuring it is well-trained and socialized.",
        "FOL": "∀x∀y (DogOwner(x) ∧ Dog(y) ∧ ResponsibleFor(x, y) ↔ (ProvidesFood(x, y) ∧ ProvidesShelter(x, y) ∧ ProvidesVeterinaryCare(x, y) ∧ WellTrained(y) ∧ Socialized(y)))"
    },
    {
        "NL": "A triangle consists of three points connected by three non-collinear lines.",
        "FOL": "∀x ∀y ∀z (Triangle(x) ∧ Point(y) ∧ Line(z) → (ConsistsOfThreePoints(x, y) ∧ ConnectedByNonCollinearLines(x, z)))"
    },
    {
        "NL": "A student passes a test if they achieve a minimum required score and complete all sections.",
        "FOL": "∀x (Student(x) ∧ AchievesMinimumScore(x) ∧ CompletesAllSections(x) → PassesTest(x))"
    },
    {
        "NL": "An oasis, located in a desert, is a fertile area with a natural water source, which supports plant and animal life and can serve as a vital resource for humans and animals traveling through the desert.",
        "FOL": "∀x (Oasis(x) → (LocatedInDesert(x) ∧ FertileArea(x) ∧ NaturalWaterSource(x) ∧ SupportsPlantAndAnimalLife(x) ∧ VitalResourceForTravelers(x)))"
    },
    {
        "NL": "A scientist either works in a laboratory or in the field, and they study living organisms or non-living matter.",
        "FOL": "∀x (Scientist(x) → (((WorksInLab(x) ∧ ¬WorksInField(x)) ∨ (¬WorksInLab(x) ∧ WorksInField(x))) ∧ (StudiesLivingOrganisms(x) ∨ StudiesNonLivingMatter(x))))"
    },
    {
        "NL": "A coat provides warmth if it is made of insulating material and fits well.",
        "FOL": "∀x (Coat(x) ∧ InsulatingMaterial(x) ∧ FitsWell(x) → ProvidesWarmth(x))"
    },
    {
        "NL": "Rivers, lakes, and oceans are all bodies of water.",
        "FOL": "∀x (River(x) ∨ Lake(x) ∨ Ocean(x) → BodyOfWater(x))"
    },
    {
        "NL": "Every cook who teaches someone is taught by someone.",
        "FOL": "∀x (Cook(x) ∧ ∃y (Cook(y) ∧ Teaches(x, y)) → ∃z (Cook(z) ∧ Teaches(z, x)))"
    },
    {
        "NL": "A triangle has three sides and three angles, while a square has four sides and four angles, but a circle has no sides or angles.",
        "FOL": "∀x∀y∀z (Triangle(x) ∧ Square(y) ∧ Circle(z) → (HasThreeSides(x) ∧ HasThreeAngles(x) ∧ HasFourSides(y) ∧ HasFourAngles(y) ∧ ¬HasSides(z) ∧ ¬HasAngles(z)))"
    },
    {
        "NL": "A bird flies, has feathers, and lays eggs.",
        "FOL": "∀x (Bird(x) → (Flies(x) ∧ HasFeathers(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A figure is a square if and only if every figure it connects to is small.",
        "FOL": "∀x (Square(x) ↔ ∀y (ConnectsTo(x, y) → Small(y)))"
    },
    {
        "NL": "A song that is soothing can calm people's nerves.",
        "FOL": "∀x ∀y (Song(x) ∧ Soothing(x) ∧ Person(y) → CanCalmNerves(x, y))"
    },
    {
        "NL": "In a democracy, citizens elect representatives who make decisions on their behalf.",
        "FOL": "∀x∀y∀z (Democracy(x) ∧ Citizen(y) ∧ Representative(z) → (Elects(y, z) ∧ MakesDecisionsOnBehalfOf(z, y)))"
    },
    {
        "NL": "A triangle points to a square only if that square points back to it.",
        "FOL": "∀x (Triangle(x) → ∀y (Square(y) ∧ PointsTo(x, y) → PointsTo(y, x)))"
    },
    {
        "NL": "A publishing house writes, edits, and publishes books catering to various literary genres and reader’s tastes.",
        "FOL": "∀x ∃y ∃z ∃w (PublishingHouse(x) → Book(y) ∧ LiteraryGenre(z) ∧ ReaderTaste(w) ∧ Writes(x, y) ∧ Edits(x, y) ∧ Publishes(x, y) ∧ Caters(x, z) ∧ Caters(x, w))"
    },
    {
        "NL": "If not every bird sings, there exists a tree that every bird flies to.",
        "FOL": "¬∀x (Bird(x) → Sing(x)) → ∃y (Tree(y) ∧ ∀z (Bird(z) → FliesTo(z, y)))"
    },
    {
        "NL": "A document containing a detailed plan for a journey is an itinerary.",
        "FOL": "∀x (Document(x) ∧ ContainsDetailedPlan(x) ∧ JourneyRelated(x) → Itinerary(x))"
    },
    {
        "NL": "A book is borrowed from a library by a patron if the patron checks out the book and returns it within the due date.",
        "FOL": "∀x∀y∀z (Book(x) ∧ Library(y) ∧ Patron(z) ∧ ChecksOut(z, x) ∧ ReturnsWithinDueDate(z, x) → BorrowedFrom(x, y, z))"
    },
    {
        "NL": "A company is either a startup or an established business, and can be either profitable or unprofitable.",
        "FOL": "∀x (Company(x) → (Startup(x) ⊕ Established(x)) ∧ (Profitable(x) ⊕ Unprofitable(x)))"
    },
    {
        "NL": "A spacecraft x docks with a space station y when it reaches the correct approach speed and establishes a secure connection.",
        "FOL": "∀x ∀y (Spacecraft(x) ∧ SpaceStation(y) ∧ CorrectApproachSpeed(x) ∧ SecureConnection(x, y) → Docks(x, y))"
    },
    {
        "NL": "If a plant needs full sunlight and well-drained soil to thrive, it is a sun-loving plant.",
        "FOL": "∀x (Plant(x) ∧ NeedsFullSunlight(x) ∧ NeedsWellDrainedSoil(x) → SunLovingPlant(x))"
    },
    {
        "NL": "Nobody on the team trusts either Coach Carter or Teammate Jackson.",
        "FOL": "¬∃x (Player(x) ∧ OnTeam(x) ∧ (Trust(x, carter) ∨ Trust(x, jackson)))"
    },
    {
        "NL": "If a person is a photographer, they either work for a magazine or are freelance.",
        "FOL": "∀x (Person(x) ∧ Photographer(x) → WorkForMagazine(x) ⊕ Freelance(x))"
    },
    {
        "NL": "An athlete can participate in a marathon if they have undergone proper training and possess the required stamina, but not if they are injured or ill.",
        "FOL": "∀x (Athlete(x) → (ParticipateInMarathon(x) ↔ (ProperTraining(x) ∧ RequiredStamina(x) ∧ ¬Injured(x) ∧ ¬Ill(x))))"
    },
    {
        "NL": "A dessert is indulgent when it is rich in flavor and has a smooth texture, but it's not excessively caloric or overly heavy.",
        "FOL": "∀x (Dessert(x) ∧ Indulgent(x) ↔ (RichFlavor(x) ∧ SmoothTexture(x) ∧ ¬ExcessiveCalories(x) ∧ ¬OverlyHeavy(x)))"
    },
    {
        "NL": "A cylinder is pink or signals a black object.",
        "FOL": "∀x (Cylinder(x) → (Pink(x) ∨ ∃y (Black(y) ∧ Signals(x, y))))"
    },
    {
        "NL": "Some moons orbit planets, while other celestial bodies orbit stars.",
        "FOL": "∃x ∃y (Moon(x) ∧ CelestialBody(y) ∧ (OrbitsPlanet(x) ∧ OrbitsStar(y)))"
    },
    {
        "NL": "A singer sings or dances.",
        "FOL": "∀x (Singer(x) → (Sings(x) ∨ Dances(x)))"
    },
    {
        "NL": "There is no highest integer, and no lowest integer.",
        "FOL": "∀x (Integer(x) → (∃y (Integer(y) ∧ Higher(y, x)) ∧ ∃z (Integer(z) ∧ Lower(z, x))))"
    },
    {
        "NL": "An operating system manages hardware resources, provides a user interface, and supports the execution of application software.",
        "FOL": "∀x (OperatingSystem(x) → (ManagesHardwareResources(x) ∧ ProvidesUserInterface(x) ∧ SupportsExecutionOfApplicationSoftware(x)))"
    },
    {
        "NL": "A celestial object that emits light due to nuclear reactions in its core, has a gravitational pull, and is the primary source of light and heat for a planetary system is a star.",
        "FOL": "∀x (CelestialObject(x) ∧ EmitsLightFromNuclearReactions(x) ∧ GravitationalPull(x) ∧ PrimaryLightAndHeatSourceForPlanetarySystem(x) → Star(x))"
    },
    {
        "NL": "If Sophie is not a pilot then Dylan is a nurse.",
        "FOL": "¬Pilot(sophie) → Nurse(dylan)"
    },
    {
        "NL": "A solar panel converts sunlight into electricity, contributing to sustainable energy production and reducing reliance on fossil fuels.",
        "FOL": "∀x ∀y (SolarPanel(x) → (ConvertsSunlightIntoElectricity(x, y) ∧ ContributesToSustainableEnergyProduction(x) ∧ ReducesRelianceOnFossilFuels(x)))"
    },
    {
        "NL": "A dog is a service animal if it is trained to perform tasks for the benefit of an individual with a disability.",
        "FOL": "∀x (ServiceAnimal(x) ↔ (Dog(x) ∧ TrainedToPerformTasks(x) ∧ ∀y (Individual(y) ∧ HasDisability(y) → Benefits(x, y))))"
    },
    {
        "NL": "An animal that burrows underground, has large incisors, and gathers acorns is most likely a squirrel.",
        "FOL": "∀x (Animal(x) ∧ BurrowsUnderground(x) ∧ HasLargeIncisors(x) ∧ GathersAcorns(x) → Squirrel(x))"
    },
    {
        "NL": "A scientific experiment can produce reliable results when its methodology is sound, the data is collected accurately, and the analysis is unbiased.",
        "FOL": "∀x (ScientificExperiment(x) ∧ SoundMethodology(x) ∧ AccurateDataCollection(x) ∧ UnbiasedAnalysis(x) → ReliableResults(x))"
    },
    {
        "NL": "A musical instrument produces a harmonious sound if it is properly tuned and played with the correct technique.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProperlyTuned(x) ∧ CorrectTechnique(x) → HarmoniousSound(x))"
    },
    {
        "NL": "If a person is a tailor, they either alter or create clothing.",
        "FOL": "∀x (Person(x) ∧ Tailor(x) → AlterClothing(x) ⊕ CreateClothing(x))"
    },
    {
        "NL": "In a democracy, political power is held by elected representatives, political parties, or citizens, but not by dictators.",
        "FOL": "∀x (Democracy(x) → (HoldsPower(x, y) → (ElectedRepresentative(y) ∨ PoliticalParty(y) ∨ Citizen(y)) ∧ ¬Dictator(y)))"
    },
    {
        "NL": "One factory manufactures toys, while another factory manufactures furniture.",
        "FOL": "∃x ∃y (Factory(x) ∧ Toy(y) ∧ Manufacture(x, y)) ∧ ∃z ∃w (Factory(z) ∧ Furniture(w) ∧ Manufacture(z, w))"
    },
    {
        "NL": "Stars emit light, and planets orbit them.",
        "FOL": "∀x ∀y (Star(x) ∧ Light(y) → Emits(x, y)) ∧ ∀z (Planet(z) ∧ Star(x) → Orbits(z, x))"
    },
    {
        "NL": "Cars that are eco-friendly are usually expensive.",
        "FOL": "∀x (Car(x) ∧ EcoFriendly(x) → Expensive(x))"
    },
    {
        "NL": "A camera captures images on film or digitally.",
        "FOL": "∀x∀y (Camera(x) ∧ (Film(y) ∨ Digital(y)) → CapturesImagesOn(x, y))"
    },
    {
        "NL": "A smartphone is user-friendly if it has an intuitive interface, not cluttered with unnecessary features, and offers either a large screen or long battery life.",
        "FOL": "∀x (Smartphone(x) → (IntuitiveInterface(x) ∧ ¬ClutteredFeatures(x) ∧ (LargeScreen(x) ∨ LongBatteryLife(x)) ↔ UserFriendly(x)))"
    },
    {
        "NL": "A vacuum cleaner uses suction to remove dirt and debris from surfaces.",
        "FOL": "∀x∀y (VacuumCleaner(x) ∧ Suction(x, y) → RemovesDirtAndDebris(x, y))"
    },
    {
        "NL": "An element is either a metal or a non-metal, but cannot be both.",
        "FOL": "∀x (Element(x) → (Metal(x) ⊕ NonMetal(x)))"
    },
    {
        "NL": "An astronaut explores space while a diver explores underwater.",
        "FOL": "∀x (Astronaut(x) → ExploresSpace(x)) ∧ (Diver(x) → ExploresUnderwater(x))"
    },
    {
        "NL": "A painting is valuable if it is created by a renowned artist, exhibits a unique style, and either portrays historical events or evokes strong emotions.",
        "FOL": "∀x (Painting(x) ∧ RenownedArtist(x) ∧ UniqueStyle(x) → (PortraysHistoricalEvents(x) ∨ EvokesStrongEmotions(x)) ∧ Valuable(x))"
    },
    {
        "NL": "Every student studies either Math or Science.",
        "FOL": "∀x (Student(x) → Study(x, Math) ⊕ Study(x, Science))"
    },
    {
        "NL": "Provided that all systems are not operational, there is an algorithm that every algorithm refers to.",
        "FOL": "¬∀x (System(x) → Operational(x)) → ∃y (Algorithm(y) ∧ ∀z (Algorithm(z) → RefersTo(z, y)))"
    },
    {
        "NL": "Chefs cook meals in a kitchen.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Kitchen(z) → CooksIn(x, y, z))"
    },
    {
        "NL": "A robot x navigates through a maze y when it successfully identifies and follows the correct path without encountering any dead ends.",
        "FOL": "∀x ∀y (Robot(x) ∧ Maze(y) ∧ IdentifiesCorrectPath(x, y) ∧ FollowsPathWithoutDeadEnds(x, y) → Navigates(x, y))"
    },
    {
        "NL": "A mammal gives birth to live young, while a bird lays eggs.",
        "FOL": "∀x (Mammal(x) ∧ LiveYoung(y) → GivesBirthTo(x, y)) ∧ ∀z (Bird(z) ∧ Eggs(e) → Lays(z, e))"
    },
    {
        "NL": "There is no scientist who has researched both physics and chemistry but has never published a research paper.",
        "FOL": "¬∃x (Scientist(x) ∧ ResearchPhysics(x) ∧ ResearchChemistry(x) ∧ ¬PublishedResearch(x))"
    },
    {
        "NL": "A hippo rests in mud, whereas a cat sleeps on furniture.",
        "FOL": "∀x (Hippo(x) → RestsInMud(x)) ∧ ∀y (Cat(y) → SleepsOnFurniture(y))"
    },
    {
        "NL": "If one flower is blooming, then all roses are beautiful or some tulips are vibrant.",
        "FOL": "∃x (Flower(x) ∧ Blooming(x)) → ∀y (Rose(y) → Beautiful(y)) ∨ ∃z (Tulip(z) ∧ Vibrant(z))"
    },
    {
        "NL": "A location is suitable for solar power generation if it experiences abundant sunlight, has low cloud cover, and is not frequently affected by extreme weather events.",
        "FOL": "∀x (Location(x) ∧ AbundantSunlight(x) ∧ LowCloudCover(x) ∧ ¬FrequentExtremeWeatherEvents(x) → SuitableForSolarPowerGeneration(x))"
    },
    {
        "NL": "A doctor diagnoses and treats patients with diseases.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) ∧ Disease(z) → (Diagnoses(x, y, z) ∧ Treats(x, y, z)))"
    },
    {
        "NL": "A thriller is considered a movie if it entails suspense and is produced with elements of surprise, fear, or excitement.",
        "FOL": "∀x (Thriller(x) ∧ EntailsSuspense(x) ∧ (ProducedWithSurprise(x) ∨ ProducedWithFear(x) ∨ ProducedWithExcitement(x)) → Movie(x))"
    },
    {
        "NL": "A musical instrument with strings can be a guitar or a violin.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) → (Guitar(x) ∨ Violin(x)))"
    },
    {
        "NL": "An insect has six legs and a pair of antennae.",
        "FOL": "∀x (Insect(x) → (SixLegs(x) ∧ PairOfAntennae(x)))"
    },
    {
        "NL": "A meal that includes a starter, main course, and dessert is a three-course meal.",
        "FOL": "∀x (Meal(x) ∧ IncludesStarter(x) ∧ IncludesMainCourse(x) ∧ IncludesDessert(x) → ThreeCourseMeal(x))"
    },
    {
        "NL": "An instrument is either stringed or not stringed.",
        "FOL": "∀x (Instrument(x) → (Stringed(x) ∨ ¬Stringed(x)))"
    },
    {
        "NL": "A chemical element belongs to a specific group and period in the periodic table based on its atomic number and electronic configuration.",
        "FOL": "∀x∀y∀z (ChemicalElement(x) ∧ AtomicNumber(x, y) ∧ ElectronicConfiguration(x, z) → BelongsToGroupAndPeriod(x))"
    },
    {
        "NL": "All objects are large squares if and only if they are not yellow.",
        "FOL": "∀x (Large(x) ∧ Square(x) ↔ ¬Yellow(x))"
    },
    {
        "NL": "A company offers a bonus to employees who have completed a project successfully or exceeded sales targets.",
        "FOL": "∀x ∀y (Company(x) ∧ Employee(y) ∧ (CompletedProjectSuccessfully(y) ∨ ExceededSalesTargets(y)) → OffersBonus(x, y))"
    },
    {
        "NL": "A volcano becomes active when there is an increase in seismic activity or magma rises to the surface.",
        "FOL": "∀x (Volcano(x) ∧ (IncreasedSeismicActivity(x) ∨ MagmaRisesToSurface(x)) → Active(x))"
    },
    {
        "NL": "A triangle has exactly three sides.",
        "FOL": "∀x (Triangle(x) → ThreeSides(x))"
    },
    {
        "NL": "Bicycles have two wheels, tricycles have three wheels, and unicycles have one wheel.",
        "FOL": "∀x (Bicycle(x) → HasTwoWheels(x)) ∧ ∀y (Tricycle(y) → HasThreeWheels(y)) ∧ ∀z (Unicycle(z) → HasOneWheel(z))"
    },
    {
        "NL": "If a person is a veterinarian, they must treat and diagnose illnesses in animals.",
        "FOL": "∀x (Veterinarian(x) → (TreatsAnimalIllnesses(x) ∧ DiagnosesAnimalIllnesses(x)))"
    },
    {
        "NL": "A machine that can print, scan, and copy documents is commonly referred to as an all-in-one printer.",
        "FOL": "∀x (Machine(x) ∧ CanPrint(x) ∧ CanScan(x) ∧ CanCopy(x) → AllInOnePrinter(x))"
    },
    {
        "NL": "A healthy diet consists of fruits, vegetables, and whole grains, while avoiding excessive sugar and unhealthy fats.",
        "FOL": "∀x (Diet(x) ∧ ContainsFruits(x) ∧ ContainsVegetables(x) ∧ ContainsWholeGrains(x) ∧ ¬ExcessiveSugar(x) ∧ ¬UnhealthyFats(x) → Healthy(x))"
    },
    {
        "NL": "An insect has wings and can fly, whereas a slug does not have wings and cannot fly.",
        "FOL": "∀x (Insect(x) → HasWings(x) ∧ CanFly(x)) ∧ ∀y (Slug(y) → ¬HasWings(y) ∧ ¬CanFly(y))"
    },
    {
        "NL": "A substance is considered a solid if it maintains a fixed shape and volume at room temperature.",
        "FOL": "∀x (Substance(x) ∧ MaintainsFixedShapeAtRoomTemperature(x) ∧ MaintainsFixedVolumeAtRoomTemperature(x) → Solid(x))"
    },
    {
        "NL": "A book is available in either paperback or hardcover format, but not both formats simultaneously.",
        "FOL": "∀x (Book(x) → (Paperback(x) ⊕ Hardcover(x)))"
    },
    {
        "NL": "Not every meal is tasty, but every tasty meal grants satisfaction.",
        "FOL": "¬∀x (Meal(x) → Tasty(x)) ∧ ∀y (Tasty(y) ∧ Meal(y) → GrantsSatisfaction(y))"
    },
    {
        "NL": "A mountain is a natural formation and has a high elevation, while a lake is a natural formation and has a low elevation.",
        "FOL": "∀x∀y (Mountain(x) ∧ Lake(y) → (IsNaturalFormation(x) ∧ HasHighElevation(x) ∧ IsNaturalFormation(y) ∧ HasLowElevation(y)))"
    },
    {
        "NL": "Any loud sound leads to a thing that leads exclusively to silent sounds.",
        "FOL": "∀x (Loud(x) → ∃y (Leads(x, y) ∧ ¬∃z (Leads(y, z) ∧ ¬Silent(z))))"
    },
    {
        "NL": "If all cars that will race are checked thoroughly, then some drivers will not quit.",
        "FOL": "∀x (Car(x) ∧ Race(x) → CheckedThoroughly(x)) → ∃y (Driver(y) ∧ ¬Quit(y))"
    },
    {
        "NL": "John enjoys a Tolkien book if and only if it was released before 1955.",
        "FOL": "∀x (Book(x) ∧ WrittenBy(x, tolkien) → (ReleasedBeforeNineteenFiftyFive(x) ↔ Enjoys(john, x)))"
    },
    {
        "NL": "Every scientist who has researched every element and either publishes papers or gives lectures, but not both, has either received a grant or never worked in a renowned university.",
        "FOL": "∀x (Scientist(x) ∧ ∀y (Element(y) → Researched(x, y)) ∧ (PublishesPapers(x) ⊕ GivesLectures(x)) → (ReceivedGrant(x) ∨ ¬WorkedInRenownedUniversity(x)))"
    },
    {
        "NL": "Artworks that feature vivid colors, intricate designs, and engaging themes can evoke strong emotions and spark lively discussions among viewers.",
        "FOL": "∀x (Artwork(x) ∧ VividColors(x) ∧ IntricateDesigns(x) ∧ EngagingThemes(x) → (EvokeStrongEmotions(x) ∧ SparkLivelyDiscussions(x)))"
    },
    {
        "NL": "A robot x can navigate a maze if it is equipped with a pathfinding algorithm.",
        "FOL": "∀x (Robot(x) ∧ EquippedWithPathfindingAlgorithm(x) → CanNavigateMaze(x))"
    },
    {
        "NL": "A tree provides shade by blocking sunlight with its branches and leaves.",
        "FOL": "∀x (Tree(x) ∧ BlocksSunlight(x, BranchesAndLeaves) → ProvidesShade(x))"
    },
    {
        "NL": "A bird needs wings, feathers and air to fly.",
        "FOL": "∀x (Bird(x) → (NeedsWings(x) ∧ NeedsFeathers(x) ∧ NeedsAir(x)) → Fly(x))"
    },
    {
        "NL": "A hammer is used to drive nails.",
        "FOL": "∀x∀y (Hammer(x) ∧ Nail(y) → Drives(x, y))"
    },
    {
        "NL": "Writers write novels, while poets write poems.",
        "FOL": "∀x ∀y (Writer(x) ∧ Novel(y) → Writes(x, y)) ∧ ∀z ∀w (Poet(z) ∧ Poem(w) → Writes(z, w))"
    },
    {
        "NL": "A pizza is either spicy or sweet, but not both.",
        "FOL": "∀z (Pizza(z) → (Spicy(z) ⊕ Sweet(z)))"
    },
    {
        "NL": "An animal that possesses a backbone, a skull, and an endoskeleton is classified as a vertebrate.",
        "FOL": "∀x (Animal(x) ∧ Backbone(x) ∧ Skull(x) ∧ Endoskeleton(x) → Vertebrate(x))"
    },
    {
        "NL": "A celestial object that orbits a star and has cleared its orbit of other debris is considered a planet.",
        "FOL": "∀x (CelestialObject(x) ∧ OrbitsStar(x) ∧ ClearedOrbit(x) → Planet(x))"
    },
    {
        "NL": "An athlete practices a sport professionally, and their performance level can improve, decline, or remain consistent over time.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Sport(y) ∧ PracticesProfessionally(x, y) → (ImprovesPerformance(x) ⊕ DeclinesPerformance(x) ⊕ ConsistentPerformance(x)))"
    },
    {
        "NL": "Birds that lay eggs in other birds' nests are known as brood parasites.",
        "FOL": "∀x∀y (Bird(x) ∧ Bird(y) ∧ LaysEggsInNest(x, y) → BroodParasite(x))"
    },
    {
        "NL": "A type of electronic device can be either a consumer or an industrial device.",
        "FOL": "∀x (ElectronicDevice(x) → (ConsumerDevice(x) ⊕ IndustrialDevice(x)))"
    },
    {
        "NL": "A bicycle has two wheels and is manually powered, while a motorcycle has two wheels and is motorized.",
        "FOL": "∀x ((Bicycle(x) → (HasTwoWheels(x) ∧ ManuallyPowered(x))) ∧ (Motorcycle(x) → (HasTwoWheels(x) ∧ Motorized(x))))"
    },
    {
        "NL": "A painting is considered valuable when it is created by a renowned artist, has historical significance, and is aesthetically pleasing.",
        "FOL": "∀x ∀y ∀z (Painting(x) ∧ CreatedByRenownedArtist(x, y) ∧ HasHistoricalSignificance(x, z) ∧ AestheticallyPleasing(x) → Valuable(x))"
    },
    {
        "NL": "A film is a documentary if it covers the real-life experience of a particular individual, filmed by the individual themselves.",
        "FOL": "∀x ∃y (Film(x) ∧ Individual(y) ∧ CoversRealLifeExperience(x, y) ∧ FilmedBy(x, y) → Documentary(x))"
    },
    {
        "NL": "An electronic component that can amplify a signal while requiring a small amount of input energy is called an active component.",
        "FOL": "∀x∀y∀z (ElectronicComponent(x) ∧ CanAmplifySignal(x, y) ∧ RequiresSmallAmountOfInputEnergy(x, z) → ActiveComponent(x))"
    },
    {
        "NL": "A computer that can process complex calculations must have a powerful processor and sufficient memory.",
        "FOL": "∀x (Computer(x) ∧ CanProcessComplexCalculations(x) → (PowerfulProcessor(x) ∧ SufficientMemory(x)))"
    },
    {
        "NL": "A political candidate is electable when they exhibit strong leadership qualities, possess a clear vision, and address the concerns of the public.",
        "FOL": "∀x (PoliticalCandidate(x) → (Electable(x) ↔ (StrongLeadershipQualities(x) ∧ ClearVision(x) ∧ AddressesPublicConcerns(x))))"
    },
    {
        "NL": "If a person is a software developer, they must write code.",
        "FOL": "∀x (SoftwareDeveloper(x) → WritesCode(x))"
    },
    {
        "NL": "All cars are not expensive.",
        "FOL": "¬∀x (Car(x) → Expensive(x))"
    },
    {
        "NL": "Every student has a mentor.",
        "FOL": "∀x ∃y (Student(x) → Mentor(y) ∧ Has(x, y))"
    },
    {
        "NL": "A financial instrument is considered an investment if it has the potential to generate returns, involves an element of risk, and requires the allocation of capital.",
        "FOL": "∀x∀y∀z (FinancialInstrument(x) ∧ PotentialToGenerateReturns(x, y) ∧ InvolvesRisk(x, z) ∧ RequiresCapitalAllocation(x) → Investment(x))"
    },
    {
        "NL": "In a bakery, cakes, cookies, and pastries are made using flour, sugar, and other ingredients under the supervision of a baker.",
        "FOL": "∀x∀y∀z∀w (Bakery(x) ∧ (Cakes(y) ∨ Cookies(y) ∨ Pastries(y)) ∧ (Flour(z) ∧ Sugar(z) ∧ OtherIngredients(z)) ∧ Baker(w) ∧ Supervises(w, x) → MadeWith(y, z))"
    },
    {
        "NL": "An object is a type of furniture if it is designed to support various human activities, such as sitting, sleeping, or storage.",
        "FOL": "∀x (Object(x) ∧ (DesignedForSitting(x) ∨ DesignedForSleeping(x) ∨ DesignedForStorage(x)) → Furniture(x))"
    },
    {
        "NL": "A smartphone has a touchscreen, can access the internet, and make phone calls, while a tablet has a touchscreen, can access the internet, and does not make phone calls.",
        "FOL": "∀x ∀y (Smartphone(x) ∧ Tablet(y) → ((HasTouchscreen(x) ∧ AccessesInternet(x) ∧ MakesPhoneCalls(x)) ∧ (HasTouchscreen(y) ∧ AccessesInternet(y) ∧ ¬MakesPhoneCalls(y))))"
    },
    {
        "NL": "During photosynthesis, plants convert carbon dioxide and water into glucose and oxygen.",
        "FOL": "∀x (Plant(x) ∧ CarbonDioxide(y) ∧ Water(z) ∧ Photosynthesis(x, y, z) → (Glucose(x) ∧ Oxygen(x)))"
    },
    {
        "NL": "A fruit is ripe if it is soft or if it changes color.",
        "FOL": "∀x (Fruit(x) ∧ Ripe(x) ↔ (Soft(x) ∨ ChangesColor(x)))"
    },
    {
        "NL": "A day is sunny or rainy, but not both.",
        "FOL": "∀x (Day(x) → (Sunny(x) ⊕ Rainy(x)))"
    },
    {
        "NL": "No one in the hall knows either Smith or Johnson.",
        "FOL": "¬∃x (Person(x) ∧ InHall(x) ∧ (Know(x, smith) ∨ Know(x, johnson)))"
    },
    {
        "NL": "An art gallery exhibits artworks created by artists, and visitors come to appreciate and learn about the pieces.",
        "FOL": "∀x∀y∀z (ArtGallery(x) ∧ Artwork(y) ∧ Artist(a) ∧ Visitor(z) → (Exhibits(x, y, a) ∧ Appreciates(z, y) ∧ LearnsAbout(z, y)))"
    },
    {
        "NL": "Television dramas often portray complex narratives and character development, while sitcoms typically focus on humor and lighter storylines.",
        "FOL": "∀x ∀y (TVdrama(x) ∧ Sitcom(y) → (ComplexNarrative(x) ∧ CharacterDevelopment(x) ∧ ¬HumorFocus(x) ∧ ¬LightStoryline(x)) ∧ (¬ComplexNarrative(y) ∧ ¬CharacterDevelopment(y) ∧ HumorFocus(y) ∧ LightStoryline(y)))"
    },
    {
        "NL": "A restaurant achieves culinary excellence when it serves delicious dishes, maintains an inviting atmosphere, and employs a talented culinary team.",
        "FOL": "∀x (Restaurant(x) ∧ DeliciousDishes(x) ∧ InvitingAtmosphere(x) ∧ TalentedCulinaryTeam(x) → CulinaryExcellence(x))"
    },
    {
        "NL": "An object can be categorized as a musical instrument if it is designed to produce musical sounds, requires manipulation by a performer, and is used in the creation of music.",
        "FOL": "∀x (Object(x) ∧ DesignedToProduceMusicalSounds(x) ∧ RequiresManipulationByPerformer(x) ∧ UsedInCreationOfMusic(x) → MusicalInstrument(x))"
    },
    {
        "NL": "A room is well-lit if it has multiple light sources or natural light from windows.",
        "FOL": "∀x (Room(x) ∧ (MultipleLightSources(x) ∨ NaturalLightFromWindows(x)) → WellLit(x))"
    },
    {
        "NL": "A train arrives at a station if it follows the correct route and is on time.",
        "FOL": "∀x (Train(x) ∧ CorrectRoute(x) ∧ OnTime(x) → ArrivesAtStation(x))"
    },
    {
        "NL": "An airplane can fly if it has enough fuel and functioning engines.",
        "FOL": "∀x (Airplane(x) ∧ HasEnoughFuel(x) ∧ FunctioningEngines(x) → CanFly(x))"
    },
    {
        "NL": "Every dog barks at the mailman or hides.",
        "FOL": "∀x (Dog(x) → (BarksAtMailman(x) ∨ Hides(x)))"
    },
    {
        "NL": "A scientific theory gains acceptance when it provides testable predictions and withstands rigorous scrutiny from experts.",
        "FOL": "∀x (ScientificTheory(x) → (GainsAcceptance(x) ↔ (ProvidesTestablePredictions(x) ∧ WithstandsExpertScrutiny(x))))"
    },
    {
        "NL": "If something is a tree, then all things are adjacent to a petite item.",
        "FOL": "∃x (Tree(x)) → ∀y ∃z (Petite(z) ∧ Adjacent(y, z))"
    },
    {
        "NL": "A specimen is oval if and only if it signals to a minute particle.",
        "FOL": "∀x (Oval(x) ↔ ∃y (Minute(y) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "An alloy is a mixture of two or more metallic elements, resulting in a material with improved properties, such as increased strength or corrosion resistance.",
        "FOL": "∀x (Alloy(x) → (MixtureOfTwoOrMoreMetallicElements(x) ∧ ResultsInMaterialWithImprovedProperties(x)))"
    },
    {
        "NL": "A garden is well-maintained when it has trimmed grass and healthy plants.",
        "FOL": "∀x (Garden(x) ∧ TrimmedGrass(x) ∧ HealthyPlants(x) → WellMaintained(x))"
    },
    {
        "NL": "If a plant is a flower and purple, then it attracts at least one orange plant unless it is a tree.",
        "FOL": "∀x ((Flower(x) ∧ Purple(x)) → ∃y (Orange(y) ∧ Attracts(x, y) ∨ Tree(x)))"
    },
    {
        "NL": "A film that combines elements of suspense, drama, and comedy can create a unique viewing experience that appeals to a broad range of moviegoers.",
        "FOL": "∀x (Film(x) ∧ CombinesSuspense(x) ∧ CombinesDrama(x) ∧ CombinesComedy(x) → (UniqueViewingExperience(x) ∧ AppealsToBroadRangeOfMoviegoers(x)))"
    },
    {
        "NL": "Certain computer programming languages, like Python, Java, and C++, are widely used in various industries, including web development, software engineering, and data analysis.",
        "FOL": "∀x∀y∀z ((Python(x) ∨ Java(x) ∨ CPlusPlus(x)) ∧ (WebDevelopment(y) ∨ SoftwareEngineering(y) ∨ DataAnalysis(y)) → WidelyUsedInIndustry(x, y, z))"
    },
    {
        "NL": "An electric vehicle relies on an electric motor and rechargeable batteries for power, producing zero tailpipe emissions and contributing less to air pollution.",
        "FOL": "∀x (ElectricVehicle(x) → (ElectricMotor(x) ∧ RechargeableBatteries(x) ∧ ZeroTailpipeEmissions(x) ∧ ContributesLessToAirPollution(x)))"
    },
    {
        "NL": "A vehicle is a car if it has four wheels, an engine, and can transport people.",
        "FOL": "∀x (Vehicle(x) ∧ HasFourWheels(x) ∧ HasEngine(x) ∧ CanTransportPeople(x) → Car(x))"
    },
    {
        "NL": "A substance that has a fixed volume, takes the shape of its container, and flows under pressure is a liquid.",
        "FOL": "∀x (Substance(x) ∧ FixedVolume(x) ∧ TakesShapeOfContainer(x) ∧ FlowsUnderPressure(x) → Liquid(x))"
    },
    {
        "NL": "A movie is either exciting or dull.",
        "FOL": "∀x (Movie(x) → (Exciting(x) ∨ Dull(x)))"
    },
    {
        "NL": "A student passes a course if they complete all assignments and pass the final exam or have perfect attendance.",
        "FOL": "∀x∀y (Student(x) ∧ Course(y) ∧ (CompleteAssignments(x, y) ∧ PassFinalExam(x, y) ∨ PerfectAttendance(x, y)) → PassCourse(x, y))"
    },
    {
        "NL": "A smartphone features a touchscreen interface, internet access, and the ability to download and run applications.",
        "FOL": "∀x (Smartphone(x) ↔ (Phone(x) ∧ TouchscreenInterface(x) ∧ InternetAccess(x) ∧ DownloadAndRunApplications(x)))"
    },
    {
        "NL": "A refrigerator keeps food cold by removing heat from the interior and releasing it outside.",
        "FOL": "∀x ∀y (Refrigerator(x) ∧ Food(y) → (RemovesHeat(x) ∧ ReleasesHeatOutside(x) → KeepsCold(x, y)))"
    },
    {
        "NL": "A student is an undergraduate if they haven't received their degree yet.",
        "FOL": "∀x (Student(x) ∧ ¬ReceivedDegree(x) → Undergraduate(x))"
    },
    {
        "NL": "A laptop connects to Wi-Fi and enables users to browse webpages and check emails.",
        "FOL": "∀x (Laptop(x) → (ConnectsToWifi(x) ∧ EnablesBrowseWebpages(x) ∧ EnablesCheckEmails(x)))"
    },
    {
        "NL": "An apple tree is a type of tree that produces apples, a cherry tree is a type of tree with blossoms, and a spruce tree is a type of tree with needles and cones.",
        "FOL": "∀x ∃y (AppleTree(x) → Apple(y) ∧ Produce(x,y)) ∧ ∀z (CherryTree(z) → HasBlossoms(z)) ∧ ∀w (SpruceTree(w) → HasNeedle(w) ∧ HasCone(w))"
    },
    {
        "NL": "No living organisms are inanimate objects.",
        "FOL": "∀x (LivingOrganism(x) → ¬InanimateObject(x))"
    },
    {
        "NL": "An object is considered a vehicle accessory if it is designed to enhance the appearance, functionality, or safety of a vehicle.",
        "FOL": "∀x (Object(x) ∧ DesignedToEnhanceVehicleAppearanceOrFunctionalityOrSafety(x) → VehicleAccessory(x))"
    },
    {
        "NL": "A substance becomes a solid when its temperature decreases below its freezing point.",
        "FOL": "∀x (Substance(x) ∧ DecreaseTemperature(x) ∧ BelowFreezingPoint(x) → Solid(x))"
    },
    {
        "NL": "If a person is a doctor, they have a medical degree.",
        "FOL": "∀x (Doctor(x) → HasMedicalDegree(x))"
    },
    {
        "NL": "A manipulative businessman influences, fools, and exploits his clients.",
        "FOL": "∀x (Businessman(x) ∧ Manipulative(x) → ∀y (Client(y) → (InfluencesForGain(x, y) ∧ FoolsForGain(x, y) ∧ ExploitsForGain(x, y))))"
    },
    {
        "NL": "No artist who paints either landscapes or portraits is mediocre, and not each one of them is a recognized painter.",
        "FOL": "¬∃x (Artist(x) ∧ (PaintsLandscapes(x) ∨ PaintsPortraits(x)) ∧ Mediocre(x)) ∧ ¬∀y (Artist(y) → RecognizedPainter(y))"
    },
    {
        "NL": "A food item is either sweet or savory, but not both.",
        "FOL": "∀x (FoodItem(x) ∧ (Sweet(x) ⊕ Savory(x)))"
    },
    {
        "NL": "A guitar has strings and produces sound, while a piano has keys and also produces sound.",
        "FOL": "∀x ((Guitar(x) → (HasStrings(x) ∧ ProducesSound(x))) ∧ (Piano(x) → (HasKeys(x) ∧ ProducesSound(x))))"
    },
    {
        "NL": "A function is injective if distinct elements in the domain map to distinct elements in the codomain.",
        "FOL": "∀x∀y∀z (Function(x) ∧ Domain(x, y) ∧ Codomain(x, z) ∧ Distinct(y) → (Injective(x) ↔ Distinct(z)))"
    },
    {
        "NL": "A region with a high population density is urban, while a region with a low population density is rural.",
        "FOL": "∀x (Region(x) → ((HighPopulationDensity(x) → Urban(x)) ∧ (LowPopulationDensity(x) → Rural(x))))"
    },
    {
        "NL": "Plants that grow in the desert have adapted to survive with minimal water and high temperatures.",
        "FOL": "∀x (Plant(x) ∧ GrowsInDesert(x) → AdaptedToMinimalWater(x) ∧ AdaptedToHighTemperatures(x))"
    },
    {
        "NL": "Any chef who has been cooking for over forty years and either writes cookbooks or conducts culinary classes, but not both, must either have received a culinary prize or be affiliated with an international chef association.",
        "FOL": "∀x (Chef(x) ∧ CookedForOverFortyYears(x) ∧ (WritesCookbooks(x) ⊕ ConductsCulinaryClasses(x)) → (ReceivedCulinaryPrize(x) ∨ AffiliatedWithInternationalChefAssociation(x)))"
    },
    {
        "NL": "A tram runs on tracks, whereas a bus moves on roads.",
        "FOL": "∀x (Tram(x) → RunsOnTracks(x)) ∧ ∀y (Bus(y) → MovesOnRoads(y))"
    },
    {
        "NL": "In a leap year, February has 29 days, while in a common year, February has 28 days.",
        "FOL": "∀x (LeapYear(x) → FebruaryHasDays(x, 29)) ∧ ∀y (CommonYear(y) → FebruaryHasDays(y, 28))"
    },
    {
        "NL": "Movies can be watched at a cinema, on a television, or streamed online, but not all three options are available for every film.",
        "FOL": "∃x (Movie(x) ∧ ((WatchedAtCinema(x) ∨ WatchedOnTelevision(x) ∨ StreamedOnline(x)) ∧ ¬(WatchedAtCinema(x) ∧ WatchedOnTelevision(x) ∧ StreamedOnline(x))))"
    },
    {
        "NL": "Unless a song is neither happy nor sad, it is a melody.",
        "FOL": "∀x ((Happy(x) ∨ Sad(x)) → Melody(x))"
    },
    {
        "NL": "A species that plays a key role in shaping the structure of an ecosystem is referred to as a keystone species, and its removal may have cascading effects on the ecosystem's stability and biodiversity.",
        "FOL": "∀x∀y (KeystoneSpecies(x) ∧ ShapesEcosystemStructure(x, y) → (RemovalEffectsStability(x, y) ∧ RemovalEffectsBiodiversity(x, y)))"
    },
    {
        "NL": "A park contains green spaces, playgrounds, and may have sports facilities.",
        "FOL": "∀x ∀y ∀z (Park(x) ∧ GreenSpace(y) ∧ Playground(z) → (Contains(x, y) ∧ Contains(x, z) ∧ (∃w (SportsFacility(w) ∧ Contains(x, w)))))"
    },
    {
        "NL": "A meal is healthy if it includes either vegetables or proteins.",
        "FOL": "∀x (Meal(x) ∧ (IncludesVegetables(x) ∨ IncludesProteins(x)) → Healthy(x))"
    },
    {
        "NL": "A telescope aids in observing celestial bodies.",
        "FOL": "∀x ∀y (Telescope(x) ∧ CelestialBody(y) → AidInObserving(x, y))"
    },
    {
        "NL": "All roses are flowers, but not all flowers are roses.",
        "FOL": "∀x (Rose(x) → Flower(x)) ∧ ¬∀x (Flower(x) → Rose(x))"
    },
    {
        "NL": "An artist is talented if and only if he is not uninspired or is innovative.",
        "FOL": "∀x (Artist(x) → (Talented(x) ↔ (¬Uninspired(x) ∨ Innovative(x))))"
    },
    {
        "NL": "A ship sails on water, whereas a tank moves on rugged terrains.",
        "FOL": "∀x (Ship(x) → SailsOnWater(x)) ∧ ∀y (Tank(y) → MovesOnRuggedTerrains(y))"
    },
    {
        "NL": "A vehicle requires maintenance when its engine performance deteriorates, tires show wear, or the braking system becomes less responsive.",
        "FOL": "∀x (Vehicle(x) ∧ (DeterioratingEnginePerformance(x) ∨ WornTires(x) ∨ LessResponsiveBrakingSystem(x)) → RequiresMaintenance(x))"
    },
    {
        "NL": "Not all athletes who train either football or basketball have won a trophy or coach youth teams.",
        "FOL": "¬∀x (Athlete(x) ∧ (TrainFootball(x) ∨ TrainBasketball(x)) → (WonTrophy(x) ∨ CoachYouth(x)))"
    },
    {
        "NL": "A student passes the course if they score at least 60% on the final exam.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) ∧ Score(x, y, z) ∧ GreaterOrEqual(z, 60) → Passes(x, y))"
    },
    {
        "NL": "A natural landform that rises above its surroundings, has a distinct summit, and is formed by geological processes is a mountain.",
        "FOL": "∀x (NaturalLandform(x) ∧ RisesAboveSurroundings(x) ∧ DistinctSummit(x) ∧ FormedByGeologicalProcesses(x) → Mountain(x))"
    },
    {
        "NL": "A structure is a bridge or a tunnel.",
        "FOL": "∀x (Structure(x) → (Bridge(x) ∨ Tunnel(x)))"
    },
    {
        "NL": "Something is a giant star only if it is not yellow.",
        "FOL": "∀x (Giant(x) ∧ Star(x) → ¬Yellow(x))"
    },
    {
        "NL": "A circle has no corners, a rectangle has four corners, and a triangle has three corners.",
        "FOL": "∀x∀y∀z (Circle(x) ∧ Rectangle(y) ∧ Triangle(z) → (NoCorners(x) ∧ FourCorners(y) ∧ ThreeCorners(z)))"
    },
    {
        "NL": "A novel becomes a bestseller if it sells a large number of copies within a short period of time.",
        "FOL": "∀x (Novel(x) → (Bestseller(x) ↔ (SellsLargeNumberOfCopies(x) ∧ ShortPeriodOfTime(x))))"
    },
    {
        "NL": "Some toys are electronic, while others are mechanical.",
        "FOL": "∃x (Toy(x) ∧ Electronic(x)) ∧ ∃y (Toy(y) ∧ Mechanical(y))"
    },
    {
        "NL": "A flower is either a monocot or a dicot.",
        "FOL": "∀x (Flower(x) → (Monocot(x) ⊕ Dicot(x)))"
    },
    {
        "NL": "In a chemistry lab, a scientist mixes two chemicals to create a reaction if they are compatible and the conditions are suitable.",
        "FOL": "∀x ∀y ∀z (ChemistryLab(x) ∧ Scientist(y) ∧ Chemicals(z) ∧ Compatible(z) ∧ SuitableConditions(x) → CreatesReaction(y, z))"
    },
    {
        "NL": "Deciduous trees lose their leaves annually, typically during the fall season, as an adaptation to colder climates and reduced sunlight.",
        "FOL": "∀x (DeciduousTree(x) → (LosesLeavesAnnually(x) ∧ FallSeason(x) ∧ AdaptationToColderClimates(x) ∧ ReducedSunlight(x)))"
    },
    {
        "NL": "Rainforests are rich in biodiversity, polar regions have extreme cold temperatures, and grasslands are characterized by vast open areas; these ecosystems do not overlap in the same location.",
        "FOL": "∀x∀y∀z (Rainforest(x) ∧ PolarRegion(y) ∧ Grassland(z) → (RichInBiodiversity(x) ∧ ExtremeColdTemperatures(y) ∧ VastOpenAreas(z)) ∧ ¬(OverlapsLocation(x, y) ∨ OverlapsLocation(x, z) ∨ OverlapsLocation(y, z)))"
    },
    {
        "NL": "Actors perform in movies, and singers record songs.",
        "FOL": "∀x∀y (Actor(x) ∧ Singer(y) → (PerformsInMovies(x) ∧ RecordsSongs(y)))"
    },
    {
        "NL": "A school is excellent if it has experienced teachers and good facilities.",
        "FOL": "∀x (School(x) ∧ HasExperiencedTeachers(x) ∧ HasGoodFacilities(x) → Excellent(x))"
    },
    {
        "NL": "A type of candy that is made by dissolving sugar in water, boiling the mixture, and allowing it to cool and harden is hard candy.",
        "FOL": "∀x (Candy(x) ∧ MadeByDissolvingSugar(x) ∧ BoilingMixture(x) ∧ CoolingAndHardening(x) → HardCandy(x))"
    },
    {
        "NL": "A student graduates from a school when they complete all required courses.",
        "FOL": "∀x∀y (Student(x) ∧ School(y) ∧ CompletesRequiredCourses(x, y) → GraduatesFrom(x, y))"
    },
    {
        "NL": "A park is ideal for jogging if it has a well-maintained path and is not crowded or located in a high-crime area.",
        "FOL": "∀x (Park(x) → (IdealForJogging(x) ↔ (WellMaintainedPath(x) ∧ ¬Crowded(x) ∧ ¬HighCrimeArea(x))))"
    },
    {
        "NL": "A student who meets all academic requirements and completes their coursework can graduate.",
        "FOL": "∀x (Student(x) ∧ MeetsAcademicRequirements(x) ∧ CompletesCoursework(x) → CanGraduate(x))"
    },
    {
        "NL": "A child is playing with a ball, and a parent is reading a book.",
        "FOL": "∃x ∃y (Child(x) ∧ Ball(y) ∧ PlayingWith(x, y)) ∧ ∃z ∃w (Parent(z) ∧ Book(w) ∧ Reading(z, w))"
    },
    {
        "NL": "No actors are popular unless they are talented, but all of them want to succeed.",
        "FOL": "∀x (Actor(x) → (¬Popular(x) ∨ Talented(x))) ∧ ∀y (Actor(y) → WantToSucceed(y))"
    },
    {
        "NL": "A cell phone can be charged using a cable, a wireless charging pad, or a solar charger.",
        "FOL": "∀x (CellPhone(x) → (ChargedByCable(x) ∨ ChargedByWirelessPad(x) ∨ ChargedBySolar(x)))"
    },
    {
        "NL": "A song can be a catchy pop tune, full of catchy rhythms, showcasing sparkling lyrics, or it can be a blues song, centered on the melancholic melody, and achieve chart-topping status.",
        "FOL": "∀x (Song(x) → ((PopTune(x) ∧ CatchyRhythms(x) ∧ SparklingLyrics(x)) ⊕ (BluesSong(x) ∧ MelancholicMelody(x) ∧ ChartTopping(x))))"
    },
    {
        "NL": "There are waters that several fish live in.",
        "FOL": "∃x ∃y (Water(x) ∧ Fish(y) ∧ LiveIn(y, x))"
    },
    {
        "NL": "If a person plays a musical instrument and sings, they are considered a musician.",
        "FOL": "∀x ((PlaysMusicalInstrument(x) ∨ Sings(x)) → Musician(x))"
    },
    {
        "NL": "A smartphone is ideal for photography if it has a high-resolution camera, ample storage capacity, and a long-lasting battery.",
        "FOL": "∀x ∀y ∀z (Smartphone(x) ∧ HighResolutionCamera(x, y) ∧ AmpleStorageCapacity(x, z) ∧ LongLastingBattery(x) → IdealForPhotography(x))"
    },
    {
        "NL": "A language is easy to learn if it has simple grammar and familiar vocabulary.",
        "FOL": "∀x (Language(x) ∧ (SimpleGrammar(x) ∧ FamiliarVocabulary(x)) → EasyToLearn(x))"
    },
    {
        "NL": "Some athletes are champions.",
        "FOL": "∃x (Athlete(x) ∧ Champion(x))"
    },
    {
        "NL": "If a protein is essential, then it contributes to body growth and improves immunity.",
        "FOL": "∀x (Protein(x) ∧ Essential(x) → ContributesToBodyGrowth(x) ∧ ImprovesImmunity(x))"
    },
    {
        "NL": "Not all birds fly, implying there is a species on which all other species are dependent.",
        "FOL": "¬∀x (Bird(x) → Flies(x)) → ∃y (Species(y) ∧ ∀z (Species(z) → DependsOn(z, y)))"
    },
    {
        "NL": "A teacher is giving a lecture in a crowded room.",
        "FOL": "∃x ∃y (Teacher(x) ∧ GiveLecture(x) ∧ CrowdedRoom(y) ∧ In(x, y))"
    },
    {
        "NL": "A tool is not useful unless it is durable or easy to use.",
        "FOL": "∀x (Tool(x) ∧ ¬Useful(x) → (Durable(x) ∨ EasyToUse(x)))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote for their leaders.",
        "FOL": "∀x∀y (Democracy(x) ∧ Citizen(y) → RightToVote(y, x))"
    },
    {
        "NL": "A type of photography can be either digital or film.",
        "FOL": "∀x (Photography(x) → (Digital(x) ⊕ Film(x)))"
    },
    {
        "NL": "A museum exhibits artifacts and artworks related to history, culture, and science.",
        "FOL": "∀x∀y (Museum(x) ∧ (Artifact(y) ∨ Artwork(y)) ∧ (RelatedToHistory(y) ∨ RelatedToCulture(y) ∨ RelatedToScience(y)) → Exhibits(x, y))"
    },
    {
        "NL": "All engineers who are diligent are appreciated by every manager.",
        "FOL": "∀x (Engineer(x) ∧ Diligent(x) → ∀y (Manager(y) → Appreciates(y, x)))"
    },
    {
        "NL": "No student who studies diligently fails the exam, but those who fail the exam didn't study diligently.",
        "FOL": "¬∀x (StudiesDiligently(x) → ¬FailsExam(x)) ∧ ∀y (FailsExam(y) → ¬StudiesDiligently(y))"
    },
    {
        "NL": "Every cat that is playful is loved by all children.",
        "FOL": "∀x (Cat(x) ∧ Playful(x) → ∀y (Child(y) → Loves(y, x)))"
    },
    {
        "NL": "Every book in the library is either a fiction or a non-fiction.",
        "FOL": "∀x (BookInLibrary(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "Everything blue is round unless it is small.",
        "FOL": "∀x (Blue(x) → (¬Small(x) → Round(x)))"
    },
    {
        "NL": "Film enthusiasts appreciate movies with thought-provoking themes, original plots, and masterful acting.",
        "FOL": "∀x (Movie(x) ∧ ThoughtProvokingThemes(x) ∧ OriginalPlots(x) ∧ MasterfulActing(x) → AppreciatedByFilmEnthusiasts(x))"
    },
    {
        "NL": "Some materials are heat-resistant, while others are cold-resistant, but no material is both.",
        "FOL": "∃x (Material(x) ∧ (HeatResistant(x) ⊕ ColdResistant(x)))"
    },
    {
        "NL": "A movie is a comedy if it has a humorous plot and is intended to make the audience laugh.",
        "FOL": "∀x (Movie(x) ∧ HumorousPlot(x) ∧ IntendedToMakeAudienceLaugh(x) → Comedy(x))"
    },
    {
        "NL": "A combustion reaction occurs when a substance, typically a hydrocarbon, reacts with oxygen, generating heat and light energy, and producing water and carbon dioxide as byproducts.",
        "FOL": "∀x∀y∀z (CombustionReaction(x) ∧ Substance(y) ∧ Hydrocarbon(y) ∧ Oxygen(z) → (ReactsWithOxygen(y, z) ∧ GeneratesHeatAndLightEnergy(x) ∧ ProducesWaterAndCarbonDioxideAsByproducts(x)))"
    },
    {
        "NL": "A wind instrument that produces sound by vibrating a column of air, has a resonating chamber, and is typically made of metal or wood is a flute.",
        "FOL": "∀x (WindInstrument(x) ∧ ProducesSoundByVibratingAirColumn(x) ∧ HasResonatingChamber(x) ∧ (MadeOfMetal(x) ∨ MadeOfWood(x)) → Flute(x))"
    },
    {
        "NL": "An organization can be labeled as a non-profit when it operates for the benefit of the public, does not distribute profits to owners, and has a mission-driven purpose.",
        "FOL": "∀x (Organization(x) ∧ OperatesForPublicBenefit(x) ∧ DoesNotDistributeProfitsToOwners(x) ∧ HasMissionDrivenPurpose(x) → NonProfit(x))"
    },
    {
        "NL": "An area that is populated by trees, plants, and wildlife is a forest.",
        "FOL": "∀x (Area(x) ∧ PopulatedByTrees(x) ∧ PopulatedByPlants(x) ∧ PopulatedByWildlife(x) → Forest(x))"
    },
    {
        "NL": "All circles are large.",
        "FOL": "∀x (Circle(x) → Large(x))"
    },
    {
        "NL": "A movie can be a comedy, drama, or action genre, but not a combination of them.",
        "FOL": "∀x (Movie(x) → (Comedy(x) ⊕ Drama(x) ⊕ Action(x)))"
    },
    {
        "NL": "In a painting, the color palette represents the range of colors used, the composition refers to the arrangement of visual elements, and the style indicates the artist's characteristic manner of expression.",
        "FOL": "∀x∀y∀z (Painting(x) ∧ ColorPalette(y) ∧ Composition(z) → (RepresentsRangeOfColors(x, y) ∧ RefersToArrangementOfVisualElements(x, z) ∧ IndicatesStyle(x)))"
    },
    {
        "NL": "An object is considered buoyant if it can float on water or in the air.",
        "FOL": "∀x (Object(x) ∧ (FloatsOnWater(x) ∨ FloatsInAir(x)) → Buoyant(x))"
    },
    {
        "NL": "A solid with flat faces, straight edges, and sharp corners is a polyhedron, while a solid with a curved surface is a non-polyhedron.",
        "FOL": "∀x (Solid(x) ∧ FlatFaces(x) ∧ StraightEdges(x) ∧ SharpCorners(x) → Polyhedron(x)) ∧ (Solid(x) ∧ CurvedSurface(x) → NonPolyhedron(x))"
    },
    {
        "NL": "Cats prowl in the evening and sleep in the morning, while roosters are active in the morning and sleep at night.",
        "FOL": "∀x (Cat(x) → (ProwlsInEvening(x) ∧ SleepsInMorning(x))) ∧ ∀y (Rooster(y) → (ActiveInMorning(y) ∧ SleepsAtNight(y)))"
    },
    {
        "NL": "Not every music genre is popular and originated in the 20th century.",
        "FOL": "¬∀x (MusicGenre(x) → (Popular(x) ∧ OriginatedIn20thCentury(x)))"
    },
    {
        "NL": "Every city is either coastal or inland.",
        "FOL": "∀v (City(v) → (Coastal(v) ∨ Inland(v)))"
    },
    {
        "NL": "If a person works in a library and manages its collections, they are considered a librarian.",
        "FOL": "∀x (WorksInLibraryAndManagesCollections(x) → Librarian(x))"
    },
    {
        "NL": "Ice cream is served cold, while coffee is served hot.",
        "FOL": "∀x (IceCream(x) → ServedCold(x)) ∧ ∀y (Coffee(y) → ServedHot(y))"
    },
    {
        "NL": "A LLC can be a member-managed, a manager-managed, or a family-owned.",
        "FOL": "∀x (LLC(x) → (MemberManaged(x) ∨ ManagerManaged(x) ∨ FamilyOwned(x)))"
    },
    {
        "NL": "A building is eco-friendly if it utilizes solar power or wind power, and has efficient insulation.",
        "FOL": "∀x (Building(x) → (EcoFriendly(x) ↔ ((UtilizesSolarPower(x) ∨ UtilizesWindPower(x)) ∧ EfficientInsulation(x))))"
    },
    {
        "NL": "A library has books, magazines, and newspapers available for people to read.",
        "FOL": "∀x (Library(x) → (HasBooks(x) ∧ HasMagazines(x) ∧ HasNewspapers(x)))"
    },
    {
        "NL": "A library lends books to patrons, a bookstore sells books to customers, and a book club is a group where members discuss books.",
        "FOL": "∀x ∀y ∀z (Library(x) ∧ Bookstore(y) ∧ BookClub(z) → (LendsBooks(x) ∧ ToPatrons(x) ∧ SellsBooks(y) ∧ ToCustomers(y) ∧ GroupForDiscussion(z) ∧ DiscussesBooks(z)))"
    },
    {
        "NL": "A drink that is hot or cold but not both is a beverage.",
        "FOL": "∀x (Drink(x) ∧ (Hot(x) ⊕ Cold(x)) → Beverage(x))"
    },
    {
        "NL": "A mountain range consists of multiple mountains connected by their peaks, formed by geological processes, and affects the climate of the surrounding area.",
        "FOL": "∀x∀y∀z (MountainRange(x) ∧ Mountain(y) ∧ Peak(z) ∧ ConnectedByPeaks(x, y, z) ∧ FormedByGeologicalProcesses(x) → AffectsClimateOfSurroundingArea(x))"
    },
    {
        "NL": "A robot can lift a heavy object, but it cannot lift it and run at the same time.",
        "FOL": "∃x ∃y (Robot(x) ∧ HeavyObject(y) ∧ Lifts(x, y) ∧ ¬(Lifts(x, y) ∧ Runs(x)))"
    },
    {
        "NL": "An appliance is efficient if it has a low power consumption, durable materials, and user-friendly features.",
        "FOL": "∀x (Appliance(x) → (Efficient(x) ↔ (LowPowerConsumption(x) ∧ DurableMaterials(x) ∧ UserFriendlyFeatures(x))))"
    },
    {
        "NL": "A successful novel captivates readers with engaging characters, a compelling plot, and a well-paced narrative.",
        "FOL": "∀x (Novel(x) → (Successful(x) ↔ (CaptivatesReaders(x) ∧ EngagingCharacters(x) ∧ CompellingPlot(x) ∧ WellPacedNarrative(x))))"
    },
    {
        "NL": "A shopping mall houses multiple retail stores, food outlets, and entertainment options, and may offer services like free Wi-Fi, parking, or a children's play area.",
        "FOL": "∀x (ShoppingMall(x) → ((RetailStores(x) ∧ FoodOutlets(x) ∧ EntertainmentOptions(x)) ∧ (FreeWifiService(x) ∨ ParkingService(x) ∨ ChildrenPlayAreaService(x))))"
    },
    {
        "NL": "A company produces goods and provides services to its customers.",
        "FOL": "∀x∀y∀z (Company(x) ∧ Good(y) ∧ Customer(z) → (Produces(x, y) ∧ ProvidesServices(x, z)))"
    },
    {
        "NL": "If a person is an engineer, they design and build structures or machines.",
        "FOL": "∀x (Person(x) ∧ Engineer(x) → (DesignStructures(x) ∨ DesignMachines(x)))"
    },
    {
        "NL": "Each car has an engine, but no car has a larger engine than itself.",
        "FOL": "∀x ∃y (Has(x, y)) ∧ ¬∃z ∃w (Has(z, w) ∧ LargerThan(w, z))"
    },
    {
        "NL": "If a train is not an electric train, it operates on coal, and it contributes to global warming.",
        "FOL": "∀x (Train(x) ∧ ¬Electric(x) → (OperatesCoal(x) ∧ ContributesWarming(x)))"
    },
    {
        "NL": "Maria is a doctor, Claire is a nurse, and Derek is a pilot.",
        "FOL": "Doctor(maria) ∧ Nurse(claire) ∧ Pilot(derek)"
    },
    {
        "NL": "A hamster is appropriate for toddlers if and only if it is not fierce and overly energetic.",
        "FOL": "∀w (Hamster(w) → (AppropriateForToddlers(w) ↔ ¬Fierce(w) ∧ ¬OverlyEnergetic(w)))"
    },
    {
        "NL": "If an object is a laptop, it must be a portable computer with a screen, keyboard, and built-in processing unit.",
        "FOL": "∀x ((PortableComputer(x) ∧ Screen(x) ∧ Keyboard(x) ∧ BuiltInProcessingUnit(x)) → Laptop(x))"
    },
    {
        "NL": "A cuisine x includes dish y when the dish is prepared using ingredients and cooking techniques characteristic of that cuisine.",
        "FOL": "∀x ∀y (Cuisine(x) ∧ Dish(y) ∧ CharacteristicIngredients(x, y) ∧ CharacteristicTechniques(x, y) → Includes(x, y))"
    },
    {
        "NL": "A computer program is user-friendly if it has an intuitive interface, clear instructions, and offers prompt customer support.",
        "FOL": "∀x (ComputerProgram(x) ∧ IntuitiveInterface(x) ∧ ClearInstructions(x) ∧ PromptCustomerSupport(x) → UserFriendly(x))"
    },
    {
        "NL": "Despite every book relating to a topic, no book corresponds to anything broader than its primary subject.",
        "FOL": "∀x ∃y (RelatesTo(x, y)) ∧ ¬∃z ∃w (CorrespondsTo(z, w) ∧ BroaderThan(w, z))"
    },
    {
        "NL": "A comfortable chair has soft cushions, ergonomic design, and provides lumbar support.",
        "FOL": "∀x (Chair(x) → (SoftCushions(x) ∧ ErgonomicDesign(x) ∧ LumbarSupport(x) → Comfortable(x)))"
    },
    {
        "NL": "Every child at the playground plays either football or basketball.",
        "FOL": "∀x (Child(x) ∧ AtPlayground(x) → Play(x, football) ∧ Play(x, basketball))"
    },
    {
        "NL": "A trumpet is a brass instrument played by blowing air, a guitar is a string instrument played by plucking strings, and a drum is a percussion instrument played by striking the drumhead.",
        "FOL": "∀x ∀y ∀z (Trumpet(x) ∧ Guitar(y) ∧ Drum(z) → (BrassInstrument(x) ∧ PlayedByBlowingAir(x) ∧ StringInstrument(y) ∧ PlayedByPluckingStrings(y) ∧ PercussionInstrument(z) ∧ PlayedByStrikingDrumhead(z)))"
    },
    {
        "NL": "A student is acknowledged as smart if they exhibit curiosity and demonstrate good problem-solving.",
        "FOL": "∀x (Student(x) ∧ ExhibitsCuriosity(x) ∧ DemonstratesProblemSolving(x) → Smart(x))"
    },
    {
        "NL": "A carrot is an edible root, while a potato is an edible tuber and not a root.",
        "FOL": "∀x ∀y (Carrot(x) ∧ Potato(y) → (EdibleRoot(x) ∧ (EdibleTuber(y) ∧ ¬EdibleRoot(y))))"
    },
    {
        "NL": "All animals that are carnivorous and fast catch their prey.",
        "FOL": "∀x (Animal(x) ∧ Carnivorous(x) ∧ Fast(x) → CatchPrey(x))"
    },
    {
        "NL": "A fabric x is waterproof if it resists the penetration of water and keeps the wearer dry.",
        "FOL": "∀x (Fabric(x) ∧ ResistsWaterPenetration(x) ∧ KeepsWearerDry(x) → Waterproof(x))"
    },
    {
        "NL": "Large buildings have elevator, while small buildings have stairs.",
        "FOL": "∀x (Building(x) ∧ Large(x) → HasElevator(x)) ∧ ∀y (Building(y) ∧ Small(y) → HasStairs(y))"
    },
    {
        "NL": "A book is a bestseller if it has sold a large number of copies and received positive reviews from critics and readers.",
        "FOL": "∀x (Bestseller(x) ↔ (Book(x) ∧ SoldLargeNumberOfCopies(x) ∧ ∃y (Critic(y) ∧ ReceivedPositiveReviewFrom(x, y)) ∧ ∃z (Reader(z) ∧ ReceivedPositiveReviewFrom(x, z))))"
    },
    {
        "NL": "A volcanic eruption occurs when magma rises to the Earth's surface, releasing gases, ash, and molten rock, which can result in the formation of new land, destruction of habitats, or changes to climate.",
        "FOL": "∀x ∀y ∀z (VolcanicEruption(x) ∧ Magma(y) → (RisesToSurface(y) ∧ ReleasesGasesAshMoltenRock(x) ∧ (FormationOfNewLand(x, z) ∨ DestructionOfHabitats(x, z) ∨ ChangesToClimate(x, z))))"
    },
    {
        "NL": "A doctor can specialize in surgery, while a nurse can specialize in pediatrics.",
        "FOL": "∃x ∃y (Doctor(x) ∧ Nurse(y) ∧ SurgerySpecialist(x) ∧ PediatricSpecialist(y))"
    },
    {
        "NL": "All triangles with equal sides have equal angles.",
        "FOL": "∀x (Triangle(x) ∧ EqualSides(x) → EqualAngles(x))"
    },
    {
        "NL": "A song is classical or pop.",
        "FOL": "∀x (Song(x) → (Classical(x) ∨ Pop(x)))"
    },
    {
        "NL": "An electronic device that captures and stores images, uses a lens to focus light, and is operated manually or automatically is classified as a camera.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CapturesAndStoresImages(x) ∧ UsesLensToFocusLight(x) ∧ (OperatedManually(x) ∨ OperatedAutomatically(x)) → Camera(x))"
    },
    {
        "NL": "Some doctors are also authors.",
        "FOL": "∃x (Doctor(x) ∧ Author(x))"
    },
    {
        "NL": "In an electrical circuit, resistors limit the flow of current, protecting components from damage due to excessive current.",
        "FOL": "∀x∀y (ElectricalCircuit(x) ∧ Resistor(y) → (LimitsFlowOfCurrent(y, x) ∧ ProtectsComponentsFromDamage(y, x)))"
    },
    {
        "NL": "A car is either expensive or cheap.",
        "FOL": "∀x (Car(x) → (Expensive(x) ⊕ Cheap(x)))"
    },
    {
        "NL": "A person is considered an accountant if they prepare and examine financial records and ensure their accuracy.",
        "FOL": "∀x (Person(x) ∧ PreparesFinancialRecords(x) ∧ ExaminesFinancialRecords(x) ∧ EnsuresAccuracy(x) → Accountant(x))"
    },
    {
        "NL": "The determined alone deserve success.",
        "FOL": "∀x (¬Determined(x) → ¬DeserveSuccess(x))"
    },
    {
        "NL": "A type of motion can be either linear or rotational.",
        "FOL": "∀x (Motion(x) → (Linear(x) ⊕ Rotational(x)))"
    },
    {
        "NL": "Lakes can be formed by the damming of rivers, glacial retreats, or volcanic activity.",
        "FOL": "∀x (Lake(x) → ∃y (River(y) ∧ Damming(d) ∨ GlacialRetreat(g) ∨ VolcanicActivity(v)) ∧ FormedBy(x, y, d, g, v))"
    },
    {
        "NL": "An exercise routine is effective for weight loss if it includes both cardio workouts and strength training sessions.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ CardioWorkouts(x) ∧ StrengthTraining(x) → EffectiveForWeightLoss(x))"
    },
    {
        "NL": "A shape can be either convex or concave, but not both.",
        "FOL": "∀x (Shape(x) → (Convex(x) ⊕ Concave(x)))"
    },
    {
        "NL": "No students in the class completed the test.",
        "FOL": "¬∃x (Student(x) ∧ InClass(x) ∧ CompletedTest(x))"
    },
    {
        "NL": "An artist who creates paintings or sculptures is a visual artist.",
        "FOL": "∀x (Artist(x) ∧ (CreatesPaintings(x) ∨ CreatesSculptures(x)) → VisualArtist(x))"
    },
    {
        "NL": "Airplanes can fly, while submarines can't, but both can transport passengers.",
        "FOL": "∀x ∀y (Airplane(x) ∧ Submarine(y) → (CanFly(x) ∧ ¬CanFly(y) ∧ CanTransportPassengers(x) ∧ CanTransportPassengers(y)))"
    },
    {
        "NL": "A tornado forms in severe thunderstorms and causes extreme wind damage.",
        "FOL": "∀x (Tornado(x) ↔ (FormsInSevereThunderstorms(x) ∧ CausesExtremeWindDamage(x)))"
    },
    {
        "NL": "If a person is a vegetarian, then he/she does not eat meat.",
        "FOL": "∀x (Vegetarian(x) → ¬EatMeat(x))"
    },
    {
        "NL": "Anything is a large circle only if it is not blue.",
        "FOL": "∀x (Large(x) ∧ Circle(x) → ¬Blue(x))"
    },
    {
        "NL": "Students attend classes.",
        "FOL": "∀x (Student(x) → AttendsClasses(x))"
    },
    {
        "NL": "A vehicle is considered a motorcycle if it has two wheels and is powered by an internal combustion engine.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) ∧ PoweredByInternalCombustionEngine(x) → Motorcycle(x))"
    },
    {
        "NL": "A vehicle is considered a car if it has four wheels and is powered by an internal combustion engine or an electric motor.",
        "FOL": "∀x (Vehicle(x) ∧ FourWheels(x) ∧ (InternalCombustionEngine(x) ∨ ElectricMotor(x)) → Car(x))"
    },
    {
        "NL": "Some engineers are experienced, and some are not.",
        "FOL": "∃x (Engineer(x) ∧ Experienced(x)) ∧ ∃x (Engineer(x) ∧ ¬Experienced(x))"
    },
    {
        "NL": "A photograph is captivating if it has vivid colors, interesting subjects, and a well-balanced composition.",
        "FOL": "∀x (Photograph(x) ∧ VividColors(x) ∧ InterestingSubjects(x) ∧ WellBalancedComposition(x) → Captivating(x))"
    },
    {
        "NL": "Doctors diagnose illnesses, and pharmacists dispense medications.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Pharmacist(y) → (DiagnosesIllnesses(x) ∧ DispensesMedications(y)))"
    },
    {
        "NL": "A chef prepares meals, supervises staff, and maintains a clean kitchen.",
        "FOL": "∀x (Chef(x) → (PreparesMeals(x) ∧ SupervisesStaff(x) ∧ MaintainsCleanKitchen(x)))"
    },
    {
        "NL": "Wind turbines generate electricity when the wind is strong, while solar panels do so when the sun is shining, but neither produces power in darkness.",
        "FOL": "∀x ∀y (WindTurbine(x) ∧ StrongWind(y) → GeneratesElectricity(x)) ⊕ (SolarPanel(x) ∧ SunShining(y) → GeneratesElectricity(x)) ∧ (Darkness(y) → ¬GeneratesElectricity(x))"
    },
    {
        "NL": "An individual is considered bilingual if they can speak and understand two languages fluently.",
        "FOL": "∀x (Individual(x) ∧ CanSpeakTwoLanguages(x) ∧ UnderstandsTwoLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "A type of computer can be either a desktop or a laptop.",
        "FOL": "∀x (ComputerType(x) → Desktop(x) ⊕ Laptop(x))"
    },
    {
        "NL": "A person is considered an astronomer if they study celestial objects, phenomena, and the universe.",
        "FOL": "∀x (Person(x) ∧ StudiesCelestialObjects(x) ∧ StudiesCelestialPhenomenaAndUniverse(x) → Astronomer(x))"
    },
    {
        "NL": "There is an author who writes for all and only the publishers who do not publish for themselves.",
        "FOL": "∃x (Author(x) ∧ ∀y (Publisher(y) → (Write(x, y) ↔ ¬Publish(y, y))))"
    },
    {
        "NL": "Scribes write manuscripts, and scholars study them.",
        "FOL": "∀x ∀y (Scribe(x) ∧ Manuscript(y) → Write(x, y)) ∧ ∀z ∀w (Scholar(z) ∧ Manuscript(w) → Study(z, w))"
    },
    {
        "NL": "A student succeeds academically if they attend classes regularly, complete assignments on time, and participate actively in discussions.",
        "FOL": "∀x (Student(x) → (SucceedsAcademically(x) ↔ (AttendsClassesRegularly(x) ∧ CompletesAssignmentsOnTime(x) ∧ ParticipatesActively(x))))"
    },
    {
        "NL": "A movie attracts a large audience by having an engaging plot, talented actors, and effective marketing.",
        "FOL": "∀x (Movie(x) → (LargeAudience(x) ↔ (EngagingPlot(x) ∧ TalentedActors(x) ∧ EffectiveMarketing(x))))"
    },
    {
        "NL": "Computers that are new and advanced always work efficiently.",
        "FOL": "∀x (Computer(x) ∧ New(x) ∧ Advanced(x) → WorkEfficiently(x))"
    },
    {
        "NL": "A person who is a journalist reports news and information.",
        "FOL": "∀x (Journalist(x) → ReportsNewsAndInformation(x))"
    },
    {
        "NL": "Not everyone who sacrifices achieves, but only those who sacrifice achieve.",
        "FOL": "¬∀x (Sacrifices(x) → Achieves(x)) ∧ ∀y (Achieves(y) → Sacrifices(y))"
    },
    {
        "NL": "A store offers a discount if a customer purchases multiple items and is a loyalty program member, or if it's a holiday sale.",
        "FOL": "∀x∀y∀z (Store(x) ∧ Customer(y) ∧ Purchases(y, z) ∧ MultipleItems(z) ∧ ((LoyaltyMember(y) ∧ HolidaySale(x)) ∨ NonHolidayDiscount(x)) → OffersDiscount(x, y))"
    },
    {
        "NL": "A cake can either be a chocolate delight with rich filling and decorative frosting, or a fruit fantasy with tart flavors and colorful presentation.",
        "FOL": "∀x (Cake(x) → ((ChocolateDelight(x) ∧ RichFilling(x) ∧ DecorativeFrosting(x)) ⊕ (FruitFantasy(x) ∧ TartFlavors(x) ∧ ColorfulPresentation(x))))"
    },
    {
        "NL": "A museum displays artifacts from different cultures and historical periods.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Artifact(y) ∧ Culture(z) ∧ FromCulture(y, z) → Displays(x, y))"
    },
    {
        "NL": "A color can be either primary, secondary, or tertiary.",
        "FOL": "∀x (Color(x) → (Primary(x) ⊕ Secondary(x) ⊕ Tertiary(x)))"
    },
    {
        "NL": "A movie x is a box office success if it generates significant revenue and receives positive reviews.",
        "FOL": "∀x (Movie(x) ∧ GeneratesSignificantRevenue(x) ∧ PositiveReviews(x) → BoxOfficeSuccess(x))"
    },
    {
        "NL": "Either John is a doctor or Mary loves John, but not both",
        "FOL": "Doctor(john) ⊕ Love(mary, john)"
    },
    {
        "NL": "A bicycle is in good condition with properly inflated tires and a well-maintained chain.",
        "FOL": "∀x (Bicycle(x) ∧ ProperlyInflatedTires(x) ∧ WellMaintainedChain(x) → GoodCondition(x))"
    },
    {
        "NL": "A material that can conduct electricity with low resistance and allows the flow of electric charge through it is a conductor.",
        "FOL": "∀x∀y∀z (Material(x) ∧ ConductsElectricity(x, y) ∧ LowResistance(x) ∧ AllowsFlowOfElectricCharge(x, z) → Conductor(x))"
    },
    {
        "NL": "A geological formation that is a volcano consists of a vent, a magma chamber, and can erupt with lava and ash.",
        "FOL": "∀x (GeologicalFormation(x) ∧ Volcano(x) → ConsistsOfVent(x) ∧ ConsistsOfMagmaChamber(x) ∧ CanEruptWithLavaAndAsh(x))"
    },
    {
        "NL": "Not all people are kind.",
        "FOL": "¬∀x (Person(x) → Kind(x))"
    },
    {
        "NL": "A musical instrument is a percussion instrument if it generates sound through striking, shaking, or scraping, and does not require strings or a reed.",
        "FOL": "∀x (MusicalInstrument(x) ∧ GeneratesSoundThroughStrikingShakingOrScraping(x) ∧ ¬RequiresStrings(x) ∧ ¬RequiresReed(x) → PercussionInstrument(x))"
    },
    {
        "NL": "A university student must pay tuition and fees each semester.",
        "FOL": "∀x (UniversityStudent(x) → ∀y (Semester(y) → PaysTuitionAndFees(x, y)))"
    },
    {
        "NL": "An athlete who competes in running events like marathons or sprints typically has a high level of endurance and speed.",
        "FOL": "∀x (Athlete(x) ∧ (CompetesInMarathons(x) ∨ CompetesInSprints(x)) → (HighEndurance(x) ∧ HighSpeed(x)))"
    },
    {
        "NL": "An object is either magnetic or non-magnetic but not both.",
        "FOL": "∀x (Object(x) → (Magnetic(x) ⊕ ¬Magnetic(x)))"
    },
    {
        "NL": "A construction is dubbed a monument if it is grand and possesses more than 80 statues.",
        "FOL": "∀x (Construction(x) ∧ Grand(x) ∧ PossessesMoreThanEightyStatues(x) → Monument(x))"
    },
    {
        "NL": "A concert is sold out if there are no remaining tickets or the venue is at maximum capacity.",
        "FOL": "∀x (Concert(x) → (SoldOut(x) ↔ (NoRemainingTickets(x) ∨ MaxCapacity(x))))"
    },
    {
        "NL": "A computer is portable if it is lightweight, has a compact design, and is easy to carry around.",
        "FOL": "∀x (Computer(x) ∧ Lightweight(x) ∧ CompactDesign(x) ∧ EasyToCarryAround(x) → Portable(x))"
    },
    {
        "NL": "All dogs are either in the house or in the yard.",
        "FOL": "∀x (Dog(x) → (InHouse(x) ⊕ InYard(x)))"
    },
    {
        "NL": "A technological unit can hold datasets, operate datasets, and show datasets.",
        "FOL": "∀x (TechnologicalUnit(x) → HoldDatasets(x) ∧ OperateDatasets(x) ∧ ShowDatasets(x))"
    },
    {
        "NL": "Not every professional athlete is good at teamwork, and not all of them lack teamwork skills.",
        "FOL": "¬(∀x (ProfessionalAthlete(x) → (GoodAtTeamwork(x) ↔ ¬LacksTeamworkSkills(x))))"
    },
    {
        "NL": "Some cities are either bustling or calm, but not both.",
        "FOL": "∃x (City(x) ∧ (Bustling(x) ⊕ Calm(x)))"
    },
    {
        "NL": "An athlete is considered talented if they have achieved success in their sport, possess natural ability, and demonstrate dedication to training, but not if they consistently display poor sportsmanship.",
        "FOL": "∀x (Athlete(x) → ((AchievedSuccess(x) ∧ NaturalAbility(x) ∧ DedicatedToTraining(x) ∧ ¬PoorSportsmanship(x)) → Talented(x)))"
    },
    {
        "NL": "An item is a pentagon if it's not cylindrical.",
        "FOL": "∀x (¬Cylindrical(x) → Pentagon(x))"
    },
    {
        "NL": "Each object that is neither big nor small is a square if and only if it is orange.",
        "FOL": "∀x (¬Big(x) ∧ ¬Small(x) → (Square(x) ↔ Orange(x)))"
    },
    {
        "NL": "There are no dogs that can neither bark nor wag their tail.",
        "FOL": "¬∃x (Dog(x) ∧ ¬CanBark(x) ∧ ¬CanWagTail(x))"
    },
    {
        "NL": "Rain falls from clouds.",
        "FOL": "∀x∀y (Rain(x) ∧ Cloud(y) → FallsFrom(x, y))"
    },
    {
        "NL": "Marathon runners need to pace themselves and maintain hydration throughout the race.",
        "FOL": "∀x (MarathonRunner(x) → (PaceThemselves(x) ∧ MaintainHydration(x)))"
    },
    {
        "NL": "All dogs are mammals, and they can bark.",
        "FOL": "∀x (Dog(x) → (Mammal(x) ∧ CanBark(x)))"
    },
    {
        "NL": "Not all students are studying.",
        "FOL": "¬∀x (Student(x) → Studying(x))"
    },
    {
        "NL": "A novel can be written in first-person or third-person perspective, while a biography is typically written in third-person perspective.",
        "FOL": "∀x (Novel(x) ∧ (FirstPerson(x) ∨ ThirdPerson(x))) ∧ (Biography(x) → ThirdPerson(x))"
    },
    {
        "NL": "Not every astronaut who explores space or studies galaxies has received a medal or written a report on the subject.",
        "FOL": "¬∀x (Astronaut(x) ∧ (ExploresSpace(x) ∨ StudiesGalaxies(x)) → (ReceivedMedal(x) ∨ WriteReportOnSubject(x)))"
    },
    {
        "NL": "A plant with green leaves, capable of producing its food through photosynthesis, and depending on sunlight for growth is an autotroph.",
        "FOL": "∀x (Plant(x) ∧ GreenLeaves(x) ∧ ProducesFoodThroughPhotosynthesis(x) ∧ DependsOnSunlightForGrowth(x) → Autotroph(x))"
    },
    {
        "NL": "A movie becomes a classic if it receives critical acclaim, features an influential director, and has a lasting impact on the audience.",
        "FOL": "∀x (Movie(x) → (ReceivesCriticalAcclaim(x) ∧ InfluentialDirector(x) ∧ LastingImpactOnAudience(x)) → Classic(x))"
    },
    {
        "NL": "A painting secures observer's praise if it has a striking composition, meaningful symbolism, and an unexpected perspective.",
        "FOL": "∀x (Painting(x) ∧ HasStrikingComposition(x) ∧ HasMeaningfulSymbolism(x) ∧ HasUnexpectedPerspective(x) → SecuresObserversPraise(x))"
    },
    {
        "NL": "A city is vibrant if and only if it is bustling and has various attractions.",
        "FOL": "∀x (City(x) → (Vibrant(x) ↔ (Bustling(x) ∧ HasVariousAttractions(x))))"
    },
    {
        "NL": "A rose is always beautiful.",
        "FOL": "∀x (Rose(x) → Beautiful(x))"
    },
    {
        "NL": "A married person has a spouse.",
        "FOL": "∀x (Married(x) → ∃y (Spouse(x, y)))"
    },
    {
        "NL": "A nature reserve preserves wildlife, protecting vulnerable species and their ecosystems, while facilitating opportunities for ecological studies and nature spotting.",
        "FOL": "∀x ∃y ∃z (NatureReserve(x) → (VulnerableSpecies(y) ∧ Ecosystem(z) ∧ Belongs(y, z) ∧ (PreservesWildlife(x) ∧ Protects(x, y) ∧ Protects(x, z) ∧ ProvidesEcologicalStudiesOpportunities(x) ∧ ProvidesNatureSpottingOpportunities(x))))"
    },
    {
        "NL": "Some beverages are both non-alcoholic and carbonated.",
        "FOL": "∃x (Beverage(x) ∧ NonAlcoholic(x) ∧ Carbonated(x))"
    },
    {
        "NL": "If a person is a chef, they have culinary skills.",
        "FOL": "∀x (Chef(x) → HasCulinarySkills(x))"
    },
    {
        "NL": "A beverage may be cold or hot, but not both.",
        "FOL": "∀x (Beverage(x) → (Cold(x) ⊕ Hot(x)))"
    },
    {
        "NL": "A valid passport and visa are required for international travel.",
        "FOL": "∀x∀y (Passport(x) ∧ Visa(y) ∧ IsValid(x) ∧ IsValid(y) → RequiredForInternationalTravel(x, y))"
    },
    {
        "NL": "Dogs can be pets or working animals but are not plants.",
        "FOL": "∀x (Dog(x) → ((Pet(x) ∨ WorkingAnimal(x)) ∧ ¬Plant(x)))"
    },
    {
        "NL": "A cat enjoys playing with a toy mouse or a ball, while a dog prefers a bone or a stick.",
        "FOL": "∃x ∃y (Cat(x) ∧ Dog(y) ∧ ((EnjoysToyMouse(x) ∧ ¬EnjoysBall(x)) ∨ (¬EnjoysToyMouse(x) ∧ EnjoysBall(x))) ∧ ((EnjoysBone(y) ∧ ¬EnjoysStick(y)) ∨ (¬EnjoysBone(y) ∧ EnjoysStick(y))))"
    },
    {
        "NL": "A mammal is a marine mammal if it lives primarily in the ocean and is not a fish.",
        "FOL": "∀x (Mammal(x) → ((LivesInOcean(x) ∧ ¬Fish(x)) ↔ MarineMammal(x)))"
    },
    {
        "NL": "A book is captivating if and only if its plot is intriguing and the characters are well developed, but it isn't overly complicated.",
        "FOL": "∀x (Book(x) ∧ Captivating(x) ↔ (IntriguingPlot(x) ∧ WellDevelopedCharacters(x) ∧ ¬OverlyComplicated(x)))"
    },
    {
        "NL": "Trees absorb carbon dioxide, provide oxygen, and help prevent soil erosion by stabilizing the ground with their roots.",
        "FOL": "∀x∀y∀z∀w (Tree(x) → (Absorbs(x, y) ∧ Provides(x, z) ∧ PreventsSoilErosion(x, w)))"
    },
    {
        "NL": "An object is a chair if it is designed for sitting and has a backrest and a seat.",
        "FOL": "∀x ((DesignedForSitting(x) ∧ HasBackrest(x) ∧ HasSeat(x)) → Chair(x))"
    },
    {
        "NL": "An airplane departs from an airport and lands another airport without stopping at any other airports.",
        "FOL": "∃x ∃y ∃z (Airplane(x) ∧ Airport(y) ∧ Airport(z) → DepartsFrom(x, y) ∧ LandsAt(x, z) ∧ ¬∃w (Airport(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "Every book is interesting unless it is a textbook.",
        "FOL": "∀x (Book(x) → (¬Textbook(x) → Interesting(x)))"
    },
    {
        "NL": "If all vehicles are not fast, then there exists a vehicle that is desired by all.",
        "FOL": "¬∀x (Vehicle(x) → Fast(x)) → ∃y (Vehicle(y) ∧ ∀z (Desire(z, y)))"
    },
    {
        "NL": "A celestial event is a supernova if it involves the explosion of a massive star, resulting in a bright burst of light and the dispersal of stellar material.",
        "FOL": "∀x (Supernova(x) ↔ (CelestialEvent(x) ∧ ExplosionOfMassiveStar(x) ∧ BrightBurstOfLight(x) ∧ DispersalOfStellarMaterial(x)))"
    },
    {
        "NL": "A person who is responsible for creating and maintaining computer software, including designing, coding, testing, and debugging programs, is a software developer.",
        "FOL": "∀x (Person(x) ∧ CreatesSoftware(x) ∧ MaintainsSoftware(x) ∧ DesignsPrograms(x) ∧ CodesPrograms(x) ∧ TestsPrograms(x) ∧ DebugsPrograms(x) → SoftwareDeveloper(x))"
    },
    {
        "NL": "A gardener is planting a tree in the garden, or a painter is painting a portrait in the studio.",
        "FOL": "∃x ∃y (Gardener(x) ∧ Tree(y) ∧ Planting(x, y) ∧ InTheGarden(x)) ∨ ∃z ∃w (Painter(z) ∧ Portrait(w) ∧ Painting(z, w) ∧ InTheStudio(z))"
    },
    {
        "NL": "A celestial event that occurs when one astronomical body moves into the shadow of another is called an eclipse.",
        "FOL": "∀x (CelestialEvent(x) ∧ AstronomicalBodyMovesIntoShadow(x) → Eclipse(x))"
    },
    {
        "NL": "If an event is not indoors, it must be outdoors.",
        "FOL": "∀x (Event(x) ∧ ¬Indoors(x) → Outdoors(x))"
    },
    {
        "NL": "A movie is worth watching if it has a strong story and captivating performances.",
        "FOL": "∀x (Movie(x) ∧ StrongStory(x) ∧ CaptivatingPerformances(x) → WorthWatching(x))"
    },
    {
        "NL": "A person is considered a journalist if they investigate, report, and write news stories.",
        "FOL": "∀x (InvestigatesReportsAndWritesNewsStories(x) → Journalist(x))"
    },
    {
        "NL": "A seed requires suitable conditions, such as moisture, warmth, and oxygen, to germinate and develop into a new plant.",
        "FOL": "∀x (Seed(x) ∧ SuitableConditions(x) ∧ Moisture(x) ∧ Warmth(x) ∧ Oxygen(x) → GerminatesAndDevelops(x))"
    },
    {
        "NL": "An artist can either paint landscapes or portraits, but not both.",
        "FOL": "∀x (Artist(x) → (PaintsLandscapes(x) ⊕ PaintsPortraits(x)))"
    },
    {
        "NL": "A fruit can be ripe, unripe, or overripe.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ∨ Unripe(x) ∨ Overripe(x)))"
    },
    {
        "NL": "A celestial body is a star if it is a massive ball of plasma, held together by its own gravity, and generates energy through nuclear fusion at its core.",
        "FOL": "∀x (CelestialBody(x) ∧ MassiveBallOfPlasma(x) ∧ HeldTogetherByOwnGravity(x) ∧ GeneratesEnergyThroughNuclearFusionAtCore(x) → Star(x))"
    },
    {
        "NL": "Nothing is worth studying but that which is challenging.",
        "FOL": "∀x (WorthStudying(x) ↔ Challenging(x))"
    },
    {
        "NL": "A person is either alive or dead, never both.",
        "FOL": "∀x (Person(x) → (Alive(x) ⊕ Dead(x)))"
    },
    {
        "NL": "Some elements are good conductors of heat, while others are good insulators.",
        "FOL": "∀x (Element(x) → (GoodConductorOfHeat(x) ⊕ GoodInsulator(x)))"
    },
    {
        "NL": "An enzyme catalyzes a specific chemical reaction by binding to a substrate and lowering the activation energy.",
        "FOL": "∀x ∀y (Enzyme(x) ∧ Substrate(y) → CatalyzesSpecificReaction(x, y))"
    },
    {
        "NL": "A dish can either be a dessert with a sweet flavor and creamy texture, or a main course with savory ingredients and rich spices.",
        "FOL": "∀x (Dish(x) → ((Dessert(x) ∧ SweetFlavor(x) ∧ CreamyTexture(x)) ⊕ (MainCourse(x) ∧ SavoryIngredients(x) ∧ RichSpices(x))))"
    },
    {
        "NL": "A vaccine shields from a certain illness by destroying the virus in the system.",
        "FOL": "∀x ∃y (Vaccine(x) ∧ Illness(y) ∧ DestroysVirusOf(x, y) → ShieldsFrom(x, y))"
    },
    {
        "NL": "A tool is a cutting tool if it has a sharp edge.",
        "FOL": "∀x (Tool(x) ∧ SharpEdge(x) → CuttingTool(x))"
    },
    {
        "NL": "A pharmacy dispenses medications prescribed by healthcare professionals, offers over-the-counter drugs, and provides consultation services to patients.",
        "FOL": "∀x∀y (Pharmacy(x) ∧ Medication(y) → (DispensesPrescribedMedication(x, y) ∧ OffersOverTheCounterDrugs(x) ∧ ProvidesConsultationServices(x)))"
    },
    {
        "NL": "Unless a person is neither smart nor dedicated, they are successful.",
        "FOL": "∀y ((Smart(y) ∨ Dedicated(y)) → Successful(y))"
    },
    {
        "NL": "Books that are dog-eared and vintage usually are worth more money.",
        "FOL": "∀x (Book(x) ∧ DogEared(x) ∧ Vintage(x) → WorthMoreMoney(x))"
    },
    {
        "NL": "Some people are good at maths, while others are good at literature.",
        "FOL": "∀x (Person(x) → GoodAtMaths(x) ⊕ GoodAtLiterature(x))"
    },
    {
        "NL": "A parrot is singing in the cage.",
        "FOL": "∃x (Parrot(x) ∧ Singing(x) ∧ InTheCage(x))"
    },
    {
        "NL": "A smartphone connects to the internet, makes calls, and can have a touchscreen or physical keyboard.",
        "FOL": "∀x (Smartphone(x) → (ConnectsToInternet(x) ∧ MakesCalls(x) ∧ (Touchscreen(x) ∨ PhysicalKeyboard(x))))"
    },
    {
        "NL": "A tea is a Green Tea or not a Green Tea.",
        "FOL": "∀x (Tea(x) → (GreenTea(x) ⊕ ¬GreenTea(x)))"
    },
    {
        "NL": "Every person has a mother and a father.",
        "FOL": "∀x∀y∀z (Person(x) → (Mother(y, x) ∧ Father(z, x)))"
    },
    {
        "NL": "Some professional players who play cricket are also skilled in golf.",
        "FOL": "∃x (ProfessionalPlayer(x) ∧ PlayCricket(x) ∧ SkilledInGolf(x))"
    },
    {
        "NL": "If a room is cold, the heater is off, and the window is open, then the room needs to be warmed up.",
        "FOL": "∀x (Room(x) ∧ Cold(x) ∧ HeaterOff(x) ∧ WindowOpen(x) → NeedsWarmingUp(x))"
    },
    {
        "NL": "If an entity is an animal, then it is not a plant.",
        "FOL": "∀x (Animal(x) → ¬Plant(x))"
    },
    {
        "NL": "A predator hunts and kills other animals, called prey, for food.",
        "FOL": "∀x (Predator(x) → (∃y (Animal(y) ∧ HuntsAndKillsForFood(x, y))))"
    },
    {
        "NL": "A cell phone can be either a smartphone or a feature phone.",
        "FOL": "∀x (CellPhone(x) → Smartphone(x) ⊕ FeaturePhone(x))"
    },
    {
        "NL": "A person is a teacher if they instruct and guide students, providing knowledge in a specific subject.",
        "FOL": "∀x (Teacher(x) ↔ (Person(x) ∧ InstructsStudents(x) ∧ GuidesStudents(x) ∧ ProvidesKnowledgeInSubject(x)))"
    },
    {
        "NL": "A smartphone becomes popular due to a user-friendly interface, extensive battery life, and innovative features.",
        "FOL": "∀x (Smartphone(x) ∧ UserFriendlyInterface(x) ∧ ExtensiveBatteryLife(x) ∧ InnovativeFeatures(x) → Popular(x))"
    },
    {
        "NL": "An organism that produces its own food through photosynthesis is a producer.",
        "FOL": "∀x (Organism(x) ∧ ProducesFoodThroughPhotosynthesis(x) → Producer(x))"
    },
    {
        "NL": "A dessert is sweet, contains sugar or a sugar substitute, and is not spicy.",
        "FOL": "∀x (Dessert(x) → (Sweet(x) ∧ (ContainsSugar(x) ∨ ContainsSugarSubstitute(x)) ∧ ¬Spicy(x)))"
    },
    {
        "NL": "An object will float in water if its density is less than the density of water.",
        "FOL": "∀x (Object(x) ∧ DensityLessThanWater(x) → FloatsInWater(x))"
    },
    {
        "NL": "A university offers undergraduate, graduate, and professional programs, but not every student is enrolled in all types of programs.",
        "FOL": "∀x∀y (University(x) ∧ Student(y) → ((Offers(x, undergraduate) ∨ Offers(x, graduate) ∨ Offers(x, professional)) ∧ ¬(EnrolledInAll(y))))"
    },
    {
        "NL": "Doctors diagnose patients with illnesses and recommend treatments.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Illness(z) ∧ Diagnoses(x, y, z) → RecommendsTreatment(x, y, z))"
    },
    {
        "NL": "Cats are mammals and have retractable claws.",
        "FOL": "∀x (Cat(x) → (Mammal(x) ∧ RetractableClaws(x)))"
    },
    {
        "NL": "A person may either study biology or play the violin, but never both simultaneously.",
        "FOL": "∀x (StudyBiology(x) ⊕ PlayViolin(x))"
    },
    {
        "NL": "A plane is either commercial or private if it is not military.",
        "FOL": "∀x (Plane(x) ∧ ¬Military(x) → (Commercial(x) ∨ Private(x)))"
    },
    {
        "NL": "Individuals perceiving life as a journey, deserve happiness.",
        "FOL": "∀x (PerceivesLifeAsJourney(x) → DeservesHappiness(x))"
    },
    {
        "NL": "Not every computer game is an adventure game, and some games offer multiplayer options or support virtual reality devices.",
        "FOL": "¬∀x (ComputerGame(x) → AdventureGame(x)) ∧ ∃y (ComputerGame(y) ∧ (Multiplayer(y) ∨ SupportsVirtualReality(y)))"
    },
    {
        "NL": "A location is a beach if it is a sandy area near a body of water.",
        "FOL": "∀x (Beach(x) ↔ (SandyArea(x) ∧ NearBodyOfWater(x)))"
    },
    {
        "NL": "Farmers grow crops in farms, while miners extract minerals in mines.",
        "FOL": "∀x (Farmer(x) → GrowCropsInFarms(x)) ∧ ∀y (Miner(y) → ExtractMineralsInMines(y))"
    },
    {
        "NL": "A researcher requires access to relevant data and proper tools to conduct a successful study.",
        "FOL": "∀x (Researcher(x) ∧ AccessToRelevantData(x) ∧ ProperTools(x) → CanConductSuccessfulStudy(x))"
    },
    {
        "NL": "A computer network, like the internet or a local area network (LAN), connects devices and allows them to share resources, communicate, and transfer data.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ (Internet(y) ∨ LAN(y)) → (ConnectsDevices(x) ∧ AllowsSharingResources(x, z) ∧ Communicate(x, z) ∧ TransferData(x, z)))"
    },
    {
        "NL": "A dog barks when it is happy, scared, or both, but not when it is neither happy nor scared.",
        "FOL": "∀x (Dog(x) → (Barks(x) ↔ (Happy(x) ∨ Scared(x) ∧ ¬(¬Happy(x) ∧ ¬Scared(x)))))"
    },
    {
        "NL": "There is a chef who cooks for all and only those who do not cook for themselves.",
        "FOL": "∃x (Chef(x) ∧ ∀y (Person(y) → (Cook(x, y) ↔ ¬Cook(y, y))))"
    },
    {
        "NL": "Volcanoes erupt with lava, geysers spout hot water, and glaciers move slowly.",
        "FOL": "∀x (Volcano(x) → EruptsWithLava(x)) ∧ ∀y (Geyser(y) → SpoutsHotWater(y)) ∧ ∀z (Glacier(z) → MovesSlowly(z))"
    },
    {
        "NL": "If a restaurant is popular, then it has more customers and higher ratings.",
        "FOL": "∀x (Restaurant(x) ∧ Popular(x) → HasMoreCustomers(x) ∧ HigherRatings(x))"
    },
    {
        "NL": "A living organism is a mammal if it possesses hair or fur and gives birth to live young.",
        "FOL": "∀x (LivingOrganism(x) ∧ PossessesHairOrFur(x) ∧ GivesBirthToLiveYoung(x) → Mammal(x))"
    },
    {
        "NL": "A scientist researches a specific field, while a journalist reports on various topics.",
        "FOL": "∀x∀y (Scientist(x) ∧ Field(y) → Researches(x, y)) ∧ (Journalist(x) ∧ Topic(y) → Reports(x, y))"
    },
    {
        "NL": "A tiger chases deer for sustenance, whereas a crow munches on the remains of deceased creatures.",
        "FOL": "∀x ∀y (Tiger(x) ∧ Deer(y) → ChasesForSustenance(x, y)) ∧ ∀z ∀w (Crow(z) ∧ DeceasedCreature(w) → MunchesOnRemainsOf(z, w))"
    },
    {
        "NL": "There isn't a writer who has written every story.",
        "FOL": "¬∃x (Writer(x) ∧ ∀y (Story(y) → Written(x, y)))"
    },
    {
        "NL": "Cats chase mice and birds, but not fish.",
        "FOL": "∀x∀y (Cat(x) ∧ (Mouse(y) ∨ Bird(y)) → Chases(x, y)) ∧ (Cat(x) ∧ Fish(y) → ¬Chases(x, y))"
    },
    {
        "NL": "When a vehicle accelerates, its velocity increases over time, causing a change in position as it moves along its trajectory.",
        "FOL": "∀x∀y∀z∀w (Vehicle(x) ∧ Accelerates(x) ∧ Velocity(y) ∧ Time(z) ∧ Position(w) → (IncreasesOverTime(y, z) ∧ CausesChangeInPosition(x, w) ∧ MovesAlongTrajectory(x)))"
    },
    {
        "NL": "If a person is a librarian, they manage and maintain library resources and services.",
        "FOL": "∀x (Librarian(x) → (ManagesLibraryResources(x) ∧ MaintainsLibraryServices(x)))"
    },
    {
        "NL": "A structure with a roof and walls, primarily used for shelter and protection, is a building.",
        "FOL": "∀x (Structure(x) ∧ HasRoof(x) ∧ HasWalls(x) ∧ PrimarilyForShelter(x) ∧ PrimarilyForProtection(x) → Building(x))"
    },
    {
        "NL": "A monkey climbs on tree, whereas a snake crawls on the ground.",
        "FOL": "∀x (Monkey(x) → ClimbsOnTree(x)) ∧ ∀y (Snake(y) → CrawlsOnGround(y))"
    },
    {
        "NL": "Something is either a yellow pentagon or a green hexagon, but not both.",
        "FOL": "∀x ((Yellow(x) ∧ Pentagon(x)) ⊕ (Green(x) ∧ Hexagon(x)))"
    },
    {
        "NL": "A bus leaves from a terminal and reaches a last stop without halting at any transit points.",
        "FOL": "∃x ∃y ∃z (Bus(x) ∧ Terminal(y) ∧ LastStop(z) → LeavesFrom(x, y) ∧ Reaches(x, z) ∧ ¬∃w (TransitPoint(w) ∧ HaltsAt(x, w)))"
    },
    {
        "NL": "There is a song that each musician plays if squares are two dimensional.",
        "FOL": "∀x (Square(x) → TwoDimensional(x)) → ∃y (Song(y) ∧ ∀z (Musician(z) → Plays(z, y)))"
    },
    {
        "NL": "An animal is considered a mammal if it has hair or fur and feeds its young with milk.",
        "FOL": "∀x (Animal(x) ∧ HasHairOrFur(x) ∧ FeedsYoungWithMilk(x) → Mammal(x))"
    },
    {
        "NL": "Believers in a faith all read some scripture by a prophet.",
        "FOL": "∀x (Believer(x) ∧ ∃y (Prophet(y) ∧ ∃z (Scripture(z) ∧ InspiredBy(z, y) → Read(x, z))))"
    },
    {
        "NL": "A product is eligible for a refund if it is returned within 30 days of purchase and is in the same condition as when it was purchased.",
        "FOL": "∀x∀y (Product(x) ∧ ReturnDate(y) ∧ Within30DaysOfPurchase(y) ∧ SameConditionAsPurchased(x) → EligibleForRefund(x))"
    },
    {
        "NL": "No businessman who deals in either stocks or real estate is unsuccessful, and not every one of them is a billionaire.",
        "FOL": "¬∃x (Businessman(x) ∧ (DealsStocks(x) ∨ DealsRealEstate(x)) ∧ Unsuccessful(x)) ∧ ¬∀y (Businessman(y) → Billionaire(y))"
    },
    {
        "NL": "A place is a city or a village.",
        "FOL": "∀x (Place(x) → (City(x) ∨ Village(x)))"
    },
    {
        "NL": "Parents who actively participate in their child's education, offer support, and set high expectations contribute to the child's academic success.",
        "FOL": "∀x∀y (Parent(x) ∧ Child(y) ∧ ActivelyParticipatesInEducation(x, y) ∧ OffersSupport(x, y) ∧ SetsHighExpectations(x, y) → AcademicSuccess(y))"
    },
    {
        "NL": "A supermarket sells fresh produce and packaged goods.",
        "FOL": "∀x (Supermarket(x) → (SellsFreshProduce(x) ∧ SellsPackagedGoods(x)))"
    },
    {
        "NL": "Bicycles have two wheels, while tricycles have three wheels.",
        "FOL": "∀x∀y (Bicycle(x) → HasWheels(x, 2)) ∧ (Tricycle(y) → HasWheels(y, 3))"
    },
    {
        "NL": "A chef who specializes in Italian cuisine does not focus on French nor on Japanese cuisine.",
        "FOL": "∀x∀y (Chef(x) ∧ SpecializesIn(x, y) ∧ ItalianCuisine(y) → (¬FocusOn(x, FrenchCuisine) ∧ ¬FocusOn(x, JapaneseCuisine)))"
    },
    {
        "NL": "A balanced diet includes fruits, vegetables, whole grains, and lean protein sources to meet nutritional needs.",
        "FOL": "∀x (Diet(x) ∧ Balanced(x) → (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesWholeGrains(x) ∧ IncludesLeanProteinSources(x)))"
    },
    {
        "NL": "No animal in the zoo is either a lion or a tiger.",
        "FOL": "¬∃x (Animal(x) ∧ InZoo(x) ∧ (Is(x, lion) ∨ Is(x, tiger)))"
    },
    {
        "NL": "A vacation can be relaxing, expensive, and involve staying at a luxury resort, or it can be adventurous, budget-friendly, and involve camping.",
        "FOL": "∃x (Vacation(x) ∧ ((Relaxing(x) ∧ Expensive(x) ∧ LuxuryResort(x)) ∨ (Adventurous(x) ∧ BudgetFriendly(x) ∧ Camping(x))))"
    },
    {
        "NL": "Cars with high mileage need frequent maintenance, while those with low mileage are not high maintenance.",
        "FOL": "∀x (Car(x) ∧ HighMileage(x) → NeedsFrequentMaintenance(x)) ∧ ∀y (Car(y) ∧ LowMileage(y) → ¬HighMaintenance(y))"
    },
    {
        "NL": "A product is more innovative if it has more patented technologies and a faster development cycle than other products.",
        "FOL": "∀x∀y (Product(x) ∧ Product(y) ∧ MorePatentedTechnologies(x, y) ∧ FasterDevelopmentCycle(x, y) → MoreInnovative(x, y))"
    },
    {
        "NL": "A chef prepares meals in a kitchen using various ingredients.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Kitchen(y) ∧ Ingredient(z) → PreparesMealsIn(x, y, z))"
    },
    {
        "NL": "A human being is a therapist if they provide counseling and promote emotional well-being and self-awareness.",
        "FOL": "∀x (HumanBeing(x) ∧ ProvidesCounseling(x) ∧ PromotesEmotionalWellBeing(x) ∧ PromotesSelfAwareness(x) → Therapist(x))"
    },
    {
        "NL": "Not all politicians are honest or dishonest.",
        "FOL": "¬∀x (Politician(x) → (Honest(x) ∨ Dishonest(x)))"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects, utilizing nutrients from the prey to supplement its growth in nutrient-poor environments.",
        "FOL": "∀x∀y∀z (CarnivorousPlant(x) → (CapturesAndConsumesInsects(x, y) ∧ Insect(y) ∧ UtilizesNutrientsFromPrey(x, y, z) ∧ SupplementGrowthInNutrientPoorEnvironments(x, z)))"
    },
    {
        "NL": "A chemical element possessing the atomic number 79, characterized by being dense, soft, and malleable, and having a bright yellow color when pure is gold.",
        "FOL": "∀x (ChemicalElement(x) ∧ AtomicNumber(x, 79) ∧ Dense(x) ∧ Soft(x) ∧ Malleable(x) ∧ PureBrightYellowColor(x) → Gold(x))"
    },
    {
        "NL": "A table supports objects.",
        "FOL": "∀x (Table(x) → SupportsObjects(x))"
    },
    {
        "NL": "A house is considered spacious if it has a large living room, multiple bedrooms, and ample storage space.",
        "FOL": "∀x (House(x) → (LargeLivingRoom(x) ∧ MultipleBedrooms(x) ∧ AmpleStorageSpace(x) → Spacious(x)))"
    },
    {
        "NL": "A heatwave is extreme if it includes high temperature, lack of rainfall, and the possible occurrence of wildfires or drought.",
        "FOL": "∀x (Heatwave(x) ∧ IncludeHighTemperature(x) ∧ LackOfRainfall(x) ∧ (PossibleOccurrenceOfWildfires(x) ∨ PossibleOccurrenceOfDrought(x)) → Extreme(x))"
    },
    {
        "NL": "A lion roars, while a cheetah does not roar but purrs.",
        "FOL": "∀x ∀y (Lion(x) ∧ Cheetah(y) → (Roars(x) ∧ ¬Roars(y) ∧ Purrs(y)))"
    },
    {
        "NL": "A healthy diet includes fruits and vegetables but excludes excessive amounts of added sugar and processed foods.",
        "FOL": "∀x (Diet(x) ∧ IncludesFruits(x) ∧ IncludesVegetables(x) ∧ ¬(ExcessiveAddedSugar(x) ∧ ProcessedFoods(x)) → Healthy(x))"
    },
    {
        "NL": "Something is a fast car only if it is not damaged.",
        "FOL": "∀x (Fast(x) ∧ Car(x) ↔ ¬Damaged(x))"
    },
    {
        "NL": "An athlete can join a competition if they have registered, met the minimum age requirement, and passed a qualifying round.",
        "FOL": "∀x (Athlete(x) → (Registered(x) ∧ MinimumAgeRequirement(x) ∧ PassedQualifyingRound(x) → CanJoinCompetition(x)))"
    },
    {
        "NL": "A piece of furniture is modular if it is designed to be easily assembled, disassembled, and reconfigured into different layouts or arrangements.",
        "FOL": "∀x ∀y ∀z (Furniture(x) ∧ DesignedForAssembly(x, y) ∧ DesignedForDisassembly(x, z) ∧ Reconfigurable(x) → Modular(x))"
    },
    {
        "NL": "A building that provides temporary accommodations, offers private or shared rooms, and includes common areas for socializing is classified as a hostel.",
        "FOL": "∀x (Building(x) ∧ ProvidesTemporaryAccommodations(x) ∧ (OffersPrivateRooms(x) ∨ OffersSharedRooms(x)) ∧ IncludesCommonAreas(x) → Hostel(x))"
    },
    {
        "NL": "A person can enter a restricted area only if they possess the required authorization or they are accompanied by someone with the required authorization.",
        "FOL": "∀x ∀y (Person(x) ∧ RestrictedArea(y) → (CanEnter(x, y) ↔ (HasAuthorization(x) ∨ AccompaniedByAuthorizedPerson(x))))"
    },
    {
        "NL": "If a building is a skyscraper, it is taller than 100 meters.",
        "FOL": "∀x (Skyscraper(x) → TallerThan100Meters(x))"
    },
    {
        "NL": "A container for liquids that is not a bottle can be a cup or a pitcher.",
        "FOL": "∀x (Container(x) ∧ ForLiquids(x) ∧ ¬Bottle(x) → Cup(x) ⊕ Pitcher(x))"
    },
    {
        "NL": "No student in the class is smarter than every teacher in the school.",
        "FOL": "¬∀x ∀y (Student(x) ∧ In(x, class) ∧ Teacher(y) ∧ In(y, school) → Smarter(x, y))"
    },
    {
        "NL": "Some musicians play only string instruments or percussion instruments, but not both.",
        "FOL": "∃x (Musician(x) ∧ (PlaysStringInstruments(x) ⊕ PlaysPercussionInstruments(x)))"
    },
    {
        "NL": "Planes take off from airports, fly at high altitudes, and land at their destinations.",
        "FOL": "∀x∀y∀z∀w (Plane(x) ∧ Airport(y) ∧ Altitude(z) ∧ Destination(w) → (TakesOffFrom(x, y) ∧ FliesAt(x, z) ∧ LandsAt(x, w)))"
    },
    {
        "NL": "In a library, fiction books are organized alphabetically by author's last name, while nonfiction books are sorted by subject.",
        "FOL": "∀x∀y∀z (Library(x) ∧ FictionBook(y) ∧ NonfictionBook(z) → (OrganizedByAuthorLastName(x, y) ∧ SortedBySubject(x, z)))"
    },
    {
        "NL": "A camera takes high-quality photos if it has a high-resolution sensor, effective image stabilization, and a fast autofocus system.",
        "FOL": "∀x (Camera(x) ∧ HighResolutionSensor(x) ∧ EffectiveImageStabilization(x, y) ∧ FastAutofocus(x, z) → HighQualityPhotos(x))"
    },
    {
        "NL": "A parallelogram has opposite sides that are equal in length and parallel to each other.",
        "FOL": "∀x ∀a ∀b (Parallelogram(x) → ((SideLength(x, a) ∧ SideLength(x, b) ∧ OppositeSides(x, a, b)) → (EqualLength(a, b) ∧ Parallel(a, b))))"
    },
    {
        "NL": "An employee is eligible for a promotion if they have worked for more than three years and have excellent performance.",
        "FOL": "∀x (Employee(x) ∧ EligibleForPromotion(x) → (WorkedMoreThanThreeYears(x) ∧ ExcellentPerformance(x)))"
    },
    {
        "NL": "If a musical instrument is part of a rock band, it is a guitar, drums, or keyboard.",
        "FOL": "∀x (MusicalInstrument(x) ∧ PartOfRockBand(x) → Guitar(x) ∨ Drums(x) ∨ Keyboard(x))"
    },
    {
        "NL": "A village is said to be secure if it experiences a low rate of violence and either a proactive community group or heightened resident vigilance.",
        "FOL": "∀x (Village(x) ∧ HasLowViolenceRate(x) ∧ (HasProactiveCommunityGroup(x) ∨ HasHeightenedResidentVigilance(x)) → Secure(x))"
    },
    {
        "NL": "An ice cream with more sugar is sweeter than one with less sugar.",
        "FOL": "∀x∀y (IceCream(x) ∧ IceCream(y) ∧ MoreSugar(x) ∧ LessSugar(y) → Sweeter(x, y))"
    },
    {
        "NL": "A container is a bottle if it is narrow-necked, holds liquid, and has a cap or lid for sealing.",
        "FOL": "∀x (Container(x) ∧ NarrowNecked(x) ∧ HoldsLiquid(x) ∧ HasCapOrLidForSealing(x) → Bottle(x))"
    },
    {
        "NL": "Not all students are either science enthusiasts or math nerds.",
        "FOL": "¬∀x (Student(x) → (ScienceEnthusiast(x) ∨ MathNerd(x)))"
    },
    {
        "NL": "A color is a primary color if it cannot be created by mixing other colors.",
        "FOL": "∀x (PrimaryColor(x) ↔ (Color(x) ∧ ¬∃y ∃z (CanBeCreatedByMixing(x, y, z))))"
    },
    {
        "NL": "A password is secure if it contains upper and lower case letters, numbers, and special characters.",
        "FOL": "∀x (Password(x) ∧ Secure(x) ↔ (ContainsUpperCaseLetters(x) ∧ ContainsLowerCaseLetters(x) ∧ ContainsNumbers(x) ∧ ContainsSpecialCharacters(x)))"
    },
    {
        "NL": "A desert is a dry region with little vegetation.",
        "FOL": "∀x (Desert(x) → (DryRegion(x) ∧ LittleVegetation(x)))"
    },
    {
        "NL": "Several apples are green and crunchy.",
        "FOL": "∃x (Apple(x) ∧ Green(x) ∧ Crunchy(x))"
    },
    {
        "NL": "Lakes with a large surface area and significant depth are more likely to have diverse ecosystems.",
        "FOL": "∀x (Lake(x) ∧ LargeSurfaceArea(x) ∧ SignificantDepth(x) → DiverseEcosystems(x))"
    },
    {
        "NL": "All mammals are warm-blooded if they are not reptiles.",
        "FOL": "∀x (¬Reptile(x) → WarmBlooded(x))"
    },
    {
        "NL": "A film festival features a variety of movies, such as independent films with thought-provoking narratives or animated films with colorful visuals and imaginative stories.",
        "FOL": "∀x ∀y (FilmFestival(x) ∧ (IndependentFilm(x, y) ∧ ThoughtProvokingNarrative(y) ∨ AnimatedFilm(x, y) ∧ (ColorfulVisuals(y) ∧ ImaginativeStory(y))))"
    },
    {
        "NL": "A movie is a blockbuster if it has earned over 100 million dollars or received rave reviews from critics.",
        "FOL": "∀x (Movie(x) ∧ (EarnedOver100MillionDollars(x) ∨ RaveReviewsFromCritics(x)) → Blockbuster(x))"
    },
    {
        "NL": "Chameleons change color, geckos climb walls, and turtles retract into their shells.",
        "FOL": "∀x (Chameleon(x) → ChangesColor(x)) ∧ ∀y (Gecko(y) → ClimbsWalls(y)) ∧ ∀z (Turtle(z) → RetractsIntoShell(z))"
    },
    {
        "NL": "A software is user-friendly if it has an intuitive interface, responsive design, and supports multiple languages or platforms.",
        "FOL": "∀x∀y∀z (Software(x) ∧ IntuitiveInterface(x, y) ∧ ResponsiveDesign(x, z) ∧ (SupportsMultipleLanguages(x) ∨ SupportsMultiplePlatforms(x)) → UserFriendly(x))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur, is warm-blooded, and usually gives birth to live offspring.",
        "FOL": "∀x (Animal(x) ∧ HasHairOrFur(x) ∧ WarmBlooded(x) ∧ UsuallyGivesBirthToLiveOffspring(x) → Mammal(x))"
    },
    {
        "NL": "A smartphone's battery life satisfies users if it lasts a full day, charges quickly, and has a power-saving mode, but it disappoints them if it degrades rapidly over time.",
        "FOL": "∀x (Smartphone(x) ∧ SatisfiesUsers(x) ↔ (LastsFullDay(x) ∧ ChargesQuickly(x) ∧ PowerSavingMode(x) ∧ ¬DegradesRapidly(x)))"
    },
    {
        "NL": "A novel is a long narrative work of fiction, while a poem is a creative literary work that uses metrical and rhythmic structures to convey emotions and ideas.",
        "FOL": "∀x∀y (Novel(x) ∧ Poem(y) → (LongNarrativeWork(x) ∧ Fiction(x)) ∧ (CreativeLiteraryWork(y) ∧ MetricalAndRhythmicStructures(y) ∧ ConveysEmotionsAndIdeas(y)))"
    },
    {
        "NL": "No cats are reptiles.",
        "FOL": "∀x (Cat(x) → ¬Reptile(x))"
    },
    {
        "NL": "A person is considered a chef if they cook professionally in a restaurant.",
        "FOL": "∀x (CooksProfessionally(x) ∧ InRestaurant(x) → Chef(x))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight, compact, and operates on batteries.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ Compact(x) ∧ BatteryOperated(x) → Portable(x))"
    },
    {
        "NL": "A hurricane is a severe storm characterized by strong winds and heavy rainfall, while a tornado is a violent storm with rapidly rotating winds around a narrow funnel.",
        "FOL": "∀x ∀y (Hurricane(x) → (SevereStorm(x) ∧ StrongWinds(x) ∧ HeavyRainfall(x))) ∧ (Tornado(y) → (ViolentStorm(y) ∧ RotatingWinds(y) ∧ NarrowFunnel(y)))"
    },
    {
        "NL": "A house has a roof.",
        "FOL": "∀x (House(x) → HasRoof(x))"
    },
    {
        "NL": "An athlete performs a sport with proper equipment, training, and a venue.",
        "FOL": "∀x∀y∀z∀w (Athlete(x) ∧ Sport(y) ∧ Equipment(z) ∧ Training(x, z) ∧ Venue(w) → Performs(x, y, z, w))"
    },
    {
        "NL": "A smartphone is versatile if it has a high-quality camera, a fast processor, and doesn't suffer from poor battery life or limited storage capacity.",
        "FOL": "∀x (Smartphone(x) ∧ Versatile(x) ↔ (HighQualityCamera(x) ∧ FastProcessor(x) ∧ ¬PoorBatteryLife(x) ∧ ¬LimitedStorageCapacity(x)))"
    },
    {
        "NL": "Siblings share at least one common parent.",
        "FOL": "∀x∀y (Sibling(x, y) ↔ ∃z (Parent(z, x) ∧ Parent(z, y)))"
    },
    {
        "NL": "A student learns a subject from a teacher only if they're not already proficient in it.",
        "FOL": "∀x∀y∀z (Student(x) ∧ Subject(y) ∧ Teacher(z) ∧ Learns(x, y, z) → ¬(Proficient(x, y)))"
    },
    {
        "NL": "A meal can be either breakfast or dinner.",
        "FOL": "∀x (Meal(x) → Breakfast(x) ⊕ Dinner(x))"
    },
    {
        "NL": "Phones receive calls and messages from other phones.",
        "FOL": "∀x∀y (Phone(x) ∧ Phone(y) → (ReceivesCall(x, y) ∧ ReceivesMessage(x, y)))"
    },
    {
        "NL": "All horses have hooves and a mane.",
        "FOL": "∀x (Horse(x) → (HasHooves(x) ∧ HasMane(x)))"
    },
    {
        "NL": "A vehicle is considered a car if it is primarily designed for transporting passengers and typically has four wheels.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForTransportingPassengers(x) ∧ TypicallyHasFourWheels(x) → Car(x))"
    },
    {
        "NL": "If a city has a river, then it has bridges and riverbanks.",
        "FOL": "∀x (City(x) ∧ HasRiver(x) → HasBridges(x) ∧ HasRiverbanks(x))"
    },
    {
        "NL": "A book is read, a song is heard, and a painting is viewed.",
        "FOL": "∀x∀y∀z (Book(x) → Read(x)) ∧ (Song(y) → Heard(y)) ∧ (Painting(z) → Viewed(z))"
    },
    {
        "NL": "A vehicle is not both a car and a bike.",
        "FOL": "∀x (Vehicle(x) → ¬(Car(x) ∧ Bike(x)))"
    },
    {
        "NL": "A journalist writes articles and reports on events, people, or topics of interest.",
        "FOL": "∀x∀y (Journalist(x) ∧ (Event(y) ∨ Person(y) ∨ TopicOfInterest(y)) → WritesArticlesAndReportsOn(x, y))"
    },
    {
        "NL": "No animal is both a bird and a mammal.",
        "FOL": "¬∃x (Animal(x) ∧ Bird(x) ∧ Mammal(x))"
    },
    {
        "NL": "A wine is old if it's stored for many years and has a well-developed taste.",
        "FOL": "∀x (Wine(x) ∧ StoredForManyYears(x) ∧ HasWellDevelopedTaste(x) → Old(x))"
    },
    {
        "NL": "Cougars are nocturnal and hunt at night, while hares are diurnal and feed during the day.",
        "FOL": "∀x (Cougar(x) → (Nocturnal(x) ∧ HuntsAtNight(x))) ∧ ∀y (Hare(y) → (Diurnal(y) ∧ FeedsDuringDay(y)))"
    },
    {
        "NL": "A fridge maintains food items and provides it when requested for eating.",
        "FOL": "∀x (Fridge(x) → (MaintainsFoodItems(x) ∧ (IsRequestedForEating(x) → ProvidesIt(x))))"
    },
    {
        "NL": "Healthy meals consist of fruits, vegetables, and lean proteins.",
        "FOL": "∀x (HealthyMeal(x) → ContainsFruits(x) ∧ ContainsVegetables(x) ∧ ContainsLeanProteins(x))"
    },
    {
        "NL": "An object is buoyant if it can float in water and has a lower density than water.",
        "FOL": "∀x (Object(x) ∧ CanFloatInWater(x) ∧ LowerDensityThanWater(x) → Buoyant(x))"
    },
    {
        "NL": "All books are informative and interesting and readable.",
        "FOL": "∀x (Book(x) → (Informative(x) ∧ Interesting(x) ∧ Readable(x)))"
    },
    {
        "NL": "A successful marketing campaign generates brand awareness, engages the target audience, and leads to increased sales.",
        "FOL": "∀x (MarketingCampaign(x) ∧ BrandAwareness(x) ∧ EngagesTargetAudience(x) ∧ IncreasedSales(x) → Successful(x))"
    },
    {
        "NL": "A place is considered a theater if it is a venue designed for the performance and viewing of plays, musicals, ballets, operas, or other performing arts.",
        "FOL": "∀x (Theater(x) ↔ (VenueDesignedForPerformanceAndViewing(x) ∧ OfPlaysMusicalsBalletsOperasOrOtherPerformingArts(x)))"
    },
    {
        "NL": "A library contains books and other materials on various subjects, and it offers a quiet place for reading, studying, or conducting research.",
        "FOL": "∀x∀y (Library(x) ∧ Material(y) → (ContainsVariousSubjects(x, y) ∧ OffersQuietPlace(x)))"
    },
    {
        "NL": "A sport that involves kicking a ball into a goal to score points, played between two teams, is soccer.",
        "FOL": "∀x (Sport(x) ∧ InvolvesKickingBall(x) ∧ IntoGoal(x) ∧ PlayedBetweenTwoTeams(x) → Soccer(x))"
    },
    {
        "NL": "A beverage that is carbonated or caffeinated can be considered refreshing.",
        "FOL": "∀x (Beverage(x) ∧ (Carbonated(x) ∨ Caffeinated(x)) → Refreshing(x))"
    },
    {
        "NL": "Rainbows appear after rain when sunlight is refracted by water droplets.",
        "FOL": "∀x∀y (Rainbow(x) ∧ Rain(y) → (AppearsAfter(x, y) ∧ SunlightRefractedByWaterDroplets(x)))"
    },
    {
        "NL": "A body is a hill if and only if every object it overshadows is massive.",
        "FOL": "∀x (Hill(x) ↔ ∀y (Overshadows(x, y) → Massive(y)))"
    },
    {
        "NL": "An ecosystem consists of living organisms, their environment, and the interactions between them.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) ∧ LivingOrganism(y) ∧ Environment(z) ∧ Interaction(i) → ConsistsOfAndInteractions(x, y, z, i))"
    },
    {
        "NL": "A seed can germinate in a suitable environment if it has enough moisture, proper temperature, and adequate oxygen.",
        "FOL": "∀x∀y (Seed(x) ∧ SuitableEnvironment(y) → (Germinates(x, y) ↔ (EnoughMoisture(x, y) ∧ ProperTemperature(x, y) ∧ AdequateOxygen(x, y))))"
    },
    {
        "NL": "A table holds items, a chair provides seating, and a bed supports sleep.",
        "FOL": "∀x (Table(x) → HoldsItems(x)) ∧ (Chair(x) → ProvidesSeating(x)) ∧ (Bed(x) → SupportsSleep(x))"
    },
    {
        "NL": "Buses transport passengers from one location to another.",
        "FOL": "∀x ∀y ∀z (Bus(x) ∧ Location(y) ∧ Location(z) → TransportsPassengers(x, y, z))"
    },
    {
        "NL": "A chemist studies and manipulates chemicals to create new compounds or materials.",
        "FOL": "∀x∀y∀z (Chemist(x) ∧ Chemical(y) ∧ (Compound(z) ∨ Material(z)) → (Studies(x, y) ∧ ManipulatesToCreate(x, y, z)))"
    },
    {
        "NL": "A person is a basketball player if they are tall and good at dribbling.",
        "FOL": "∀x (Person(x) ∧ Tall(x) ∧ GoodAtDribbling(x) → BasketballPlayer(x))"
    },
    {
        "NL": "An airplane can fly a route between two cities if the airplane has adequate fuel, the two cities have airports, and the weather conditions along the route are safe for flying.",
        "FOL": "∀x∀y∀z (Airplane(x) ∧ City(y) ∧ City(z) ∧ AdequateFuel(x) ∧ HasAirport(y) ∧ HasAirport(z) ∧ SafeWeatherConditions(y, z) → CanFlyRoute(x, y, z))"
    },
    {
        "NL": "If there are no great works, then no reviewer appreciates any film.",
        "FOL": "¬∃x (GreatWork(x)) → ¬∃y (Reviewer(y) ∧ ∃z (Film(z) ∧ Appreciate(y, z)))"
    },
    {
        "NL": "A meal is considered healthy when it contains vegetables or fruits, but not when it only consists of fast food.",
        "FOL": "∀x (Meal(x) ∧ (ContainsVegetables(x) ∨ ContainsFruits(x)) ∧ ¬FastFood(x) → Healthy(x))"
    },
    {
        "NL": "In an orchestra, musicians playing various instruments collaborate to create harmonious music.",
        "FOL": "∀x∀y∀z (Orchestra(x) ∧ Musician(y) ∧ Instrument(z) ∧ Plays(y, z) → CollaborateToCreateHarmoniousMusic(x, y, z))"
    },
    {
        "NL": "A person is identified as a chef if they cook professionally or have culinary training.",
        "FOL": "∀x (Person(x) ∧ (CooksProfessionally(x) ∨ HasCulinaryTraining(x)) → Chef(x))"
    },
    {
        "NL": "A scientist conducts research in a laboratory, and the research findings are published in a scientific journal if they are deemed significant.",
        "FOL": "∀x∀y∀z∀w (Scientist(x) ∧ Research(y) ∧ Laboratory(z) ∧ Journal(w) ∧ Conducts(x, y, z) → (DeemedSignificant(y) → PublishedIn(y, w)))"
    },
    {
        "NL": "A book is translated into another language by a translator who understands both the source and target languages.",
        "FOL": "∀x∀y∀z (Book(x) ∧ Language(y) ∧ Translator(z) → (Translated(x, y) ↔ (UnderstandsSource(z) ∧ UnderstandsTarget(z))))"
    },
    {
        "NL": "A car is eco-friendly if it has low emissions, uses renewable energy sources, and is made from sustainable materials.",
        "FOL": "∀x (Car(x) → (LowEmissions(x) ∧ UsesRenewableEnergySources(x) ∧ MadeFromSustainableMaterials(x) → EcoFriendly(x)))"
    },
    {
        "NL": "An artwork that uses light, color, and geometric shapes to create an optical illusion of depth or movement is an example of op art.",
        "FOL": "∀x ∀y ∀z (Artwork(x) ∧ Light(y) ∧ GeometricShapes(z) ∧ Uses(x, y) ∧ Uses(x, z) ∧ OpticalIllusionOfDepthOrMovement(x) → OpArt(x))"
    },
    {
        "NL": "A solar system has a diverse range of celestial bodies if it includes planets, moons, and asteroids with distinct characteristics.",
        "FOL": "∀x (DiverseRangeOfCelestialBodies(x) ↔ (SolarSystem(x) ∧ ∃y ∃z ∃w (Planet(y) ∧ Moon(z) ∧ Asteroid(w) ∧ DistinctCharacteristics(y, z, w) ∧ Includes(x, y, z, w))))"
    },
    {
        "NL": "There is no rectangle that includes all orange sectors.",
        "FOL": "¬∃x (Rectangle(x) ∧ ∀y (Orange(y) ∧ Sector(y) → Includes(x, y)))"
    },
    {
        "NL": "It is not the case that something is a huge sphere if and only if it is green.",
        "FOL": "¬∀x (Huge(x) ∧ Sphere(x) ↔ Green(x))"
    },
    {
        "NL": "A planet with liquid water on its surface is potentially habitable.",
        "FOL": "∀x (Planet(x) ∧ LiquidWaterOnSurface(x) → PotentiallyHabitable(x))"
    },
    {
        "NL": "A document is confidential if it contains sensitive information, and it should be shared only with authorized individuals.",
        "FOL": "∀x ∀y (Document(x) ∧ SensitiveInformation(x) ∧ AuthorizedIndividual(y) → (Confidential(x) ∧ (SharedWith(x, y) ∨ ¬SharedWith(x, y))))"
    },
    {
        "NL": "A game can be played outdoors if it does not require electricity and is not affected by weather conditions.",
        "FOL": "∀x (Game(x) ∧ ¬RequiresElectricity(x) ∧ ¬AffectedByWeather(x) → PlayOutdoors(x))"
    },
    {
        "NL": "A fruit that is not red but has seeds could be a pear, a green apple, or a yellow pepper.",
        "FOL": "∀x (Fruit(x) ∧ ¬Red(x) ∧ Seeds(x) → (Pear(x) ∨ GreenApple(x) ∨ YellowPepper(x)))"
    },
    {
        "NL": "A plant that has a green stem, grows in water, and produces oxygen is an aquatic plant.",
        "FOL": "∀x (Plant(x) ∧ HasGreenStem(x) ∧ GrowsInWater(x) ∧ ProducesOxygen(x) → AquaticPlant(x))"
    },
    {
        "NL": "A scientist x discovers a new species y if they provide evidence supporting the existence of y.",
        "FOL": "∀x ∀y (Scientist(x) ∧ Species(y) ∧ ProvidesEvidence(x, y) → DiscoversNewSpecies(x, y))"
    },
    {
        "NL": "A computer is powerful when it can process large amounts of data quickly and supports multitasking efficiently.",
        "FOL": "∀x (Computer(x) → (Powerful(x) ↔ (ProcessesLargeDataQuickly(x) ∧ SupportsMultitaskingEfficiently(x))))"
    },
    {
        "NL": "A flashlight illuminates a dark area by emitting light from a bulb, while a glowstick illuminates a dark area by emitting light through a chemical reaction.",
        "FOL": "∀x ∀y (Flashlight(x) ∧ DarkArea(y) ∧ Bulb(x) → IlluminatesByEmittingLight(x, y)) ∧ ∀z ∀w (Glowstick(z) ∧ DarkArea(w) ∧ ChemicalReaction(z) → IlluminatesByEmittingLight(z, w))"
    },
    {
        "NL": "A plant needs sunlight for photosynthesis.",
        "FOL": "∀x (Plant(x) → NeedsSunlightForPhotosynthesis(x))"
    },
    {
        "NL": "A construction project involves architects designing structures, engineers ensuring safety, and contractors managing the construction process.",
        "FOL": "∀x∀y∀z∀w (ConstructionProject(x) ∧ Architect(y) ∧ Engineer(z) ∧ Contractor(w) ∧ DesignsStructures(y, x) ∧ EnsuresSafety(z, x) → ManagesConstruction(w, x))"
    },
    {
        "NL": "A tree produces fruit if it is a mature tree and the environmental conditions are favorable.",
        "FOL": "∀x (Tree(x) ∧ Mature(x) ∧ FavorableEnvironment(x) → ProducesFruit(x))"
    },
    {
        "NL": "A successful entrepreneur has innovative ideas and good management skills.",
        "FOL": "∀x (Entrepreneur(x) → (InnovativeIdeas(x) ∧ GoodManagementSkills(x) → Successful(x)))"
    },
    {
        "NL": "A computer program successfully compiles if it has no syntax errors, no semantic errors, and its dependencies are resolved.",
        "FOL": "∀x (Program(x) ∧ ¬SyntaxErrors(x) ∧ ¬SemanticErrors(x) ∧ ResolvedDependencies(x) → Compiles(x))"
    },
    {
        "NL": "Not all reptiles are venomous, but some snakes, lizards, and even a few turtles can be venomous.",
        "FOL": "¬(∀x (Reptile(x) → Venomous(x))) ∧ ∃x (Reptile(x) ∧ (Snake(x) ∨ Lizard(x) ∨ Turtle(x)) ∧ Venomous(x))"
    },
    {
        "NL": "A city has a museum, and the museum displays art.",
        "FOL": "∃x ∃y (City(x) ∧ Museum(y) ∧ LocatedIn(y, x) ∧ DisplaysArt(y))"
    },
    {
        "NL": "Successful businesses generate profits and satisfy customer needs.",
        "FOL": "∀x (SuccessfulBusiness(x) → GeneratesProfits(x) ∧ SatisfiesCustomerNeeds(x))"
    },
    {
        "NL": "A raincoat is waterproof and protects from rain.",
        "FOL": "∀x (Raincoat(x) → (IsWaterproof(x) ∧ ProtectsFromRain(x)))"
    },
    {
        "NL": "A species is endangered if its population declines rapidly and faces a high risk of extinction.",
        "FOL": "∀x (Species(x) ∧ RapidPopulationDecline(x) ∧ HighRiskOfExtinction(x) → Endangered(x))"
    },
    {
        "NL": "Rivers flow into lakes or oceans, while glaciers store freshwater.",
        "FOL": "∀x∀y (River(x) → (FlowsIntoLake(x) ∨ FlowsIntoOcean(x))) ∧ (Glacier(y) → StoresFreshwater(y))"
    },
    {
        "NL": "A mammal that has a pouch for carrying and nourishing its young is a marsupial.",
        "FOL": "∀x ∀y (Mammal(x) ∧ Pouch(y) ∧ CarriesAndNourishesYoung(x, y) → Marsupial(x))"
    },
    {
        "NL": "An organization is non-profit if it has a charitable mission, does not distribute profits to owners, and primarily relies on donations.",
        "FOL": "∀x (Organization(x) ∧ CharitableMission(x) ∧ ¬DistributesProfits(x) ∧ ReliesOnDonations(x) → NonProfit(x))"
    },
    {
        "NL": "A dessert that is low in sugar, contains healthy fats, and incorporates nutrient-rich ingredients can be enjoyed as part of a balanced diet.",
        "FOL": "∀x (Dessert(x) ∧ LowInSugar(x) ∧ ContainsHealthyFats(x) ∧ IncorporatesNutrientRichIngredients(x) → EnjoyedAsPartOfBalancedDiet(x))"
    },
    {
        "NL": "A shape is a pentagon if it has five sides, and none of its angles are more than 180 degrees.",
        "FOL": "∀x (Shape(x) → ((FiveSides(x) ∧ ∀y (Angle(x, y) → ¬MoreThan180Degrees(y))) ↔ Pentagon(x)))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote in elections and express their opinions freely.",
        "FOL": "∀x (Democracy(x) → (RightToVote(x) ∧ FreeExpression(x)))"
    },
    {
        "NL": "All flowers that are roses have thorns.",
        "FOL": "∀x (Flower(x) ∧ Rose(x) → HasThorns(x))"
    },
    {
        "NL": "A tool is a power tool if it is operated using an external power source and is designed for tasks requiring significant force.",
        "FOL": "∀x (PowerTool(x) → (Tool(x) ∧ ∃y (ExternalPowerSource(y) ∧ OperatedUsing(x, y)) ∧ SignificantForceTasks(x)))"
    },
    {
        "NL": "Students studying history learn about wars, inventions, and cultural changes.",
        "FOL": "∀x (Student(x) ∧ Studies(x, History) → (LearnsAbout(x, Wars) ∧ LearnsAbout(x, Inventions) ∧ LearnsAbout(x, CulturalChanges)))"
    },
    {
        "NL": "A tool is a hammer if it is used for driving nails into wood.",
        "FOL": "∀x (Tool(x) ∧ DrivesNailsIntoWood(x) → Hammer(x))"
    },
    {
        "NL": "An art exhibition attracts visitors if it showcases captivating artwork, offers interactive experiences, and has good publicity.",
        "FOL": "∀x∀y (ArtExhibition(x) ∧ Visitor(y) → (Attracts(x, y) ↔ (ShowcasesCaptivatingArtwork(x) ∧ OffersInteractiveExperiences(x) ∧ HasGoodPublicity(x))))"
    },
    {
        "NL": "A solar power plant that employs cutting-edge technology, harnesses sunlight efficiently, and connects to a smart grid delivers clean, renewable energy and reduces dependence on fossil fuels.",
        "FOL": "∀x∀y∀z (SolarPowerPlant(x) ∧ CuttingEdgeTechnology(y) ∧ EfficientSunlightHarnessing(z) ∧ ConnectsToSmartGrid(x) ∧ Employs(x, y) ∧ Harnesses(x, z) → (DeliversCleanRenewableEnergy(x) ∧ ReducesDependenceOnFossilFuels(x)))"
    },
    {
        "NL": "Honeybees collect nectar from flowers to make honey.",
        "FOL": "∀x ∀y (Honeybee(x) ∧ Flower(y) → CollectsNectarForHoney(x, y))"
    },
    {
        "NL": "A musical performance involves a musician playing an instrument on a stage.",
        "FOL": "∀x∀y∀z (MusicalPerformance(x) ∧ Musician(y) ∧ Instrument(z) ∧ Plays(y, z) ∧ OnStage(y, x) → Involves(x, y, z))"
    },
    {
        "NL": "A light switch is either on or off.",
        "FOL": "∀x (LightSwitch(x) → (On(x) ∨ Off(x)))"
    },
    {
        "NL": "Snakes slither, birds fly, and fish swim.",
        "FOL": "∀x∀y∀z (Snake(x) → Slithers(x)) ∧ (Bird(y) → Flies(y)) ∧ (Fish(z) → Swims(z))"
    },
    {
        "NL": "A library offers a variety of resources such as books, magazines, newspapers, and digital media.",
        "FOL": "∀x (Library(x) → (OffersResources(x) ∧ (Books(x) ∨ Magazines(x) ∨ Newspapers(x) ∨ DigitalMedia(x))))"
    },
    {
        "NL": "There is no musician who plays both the drums and the flute but has never performed on a stage.",
        "FOL": "¬∃x (Musician(x) ∧ PlaysDrums(x) ∧ PlaysFlute(x) ∧ ¬PerformedOnStage(x))"
    },
    {
        "NL": "A plant is a deciduous plant if it sheds its leaves annually and undergoes a period of dormancy during the winter months.",
        "FOL": "∀x∀y (Plant(x) ∧ ShedsLeavesAnnually(x, y) ∧ UndergoesDormancy(x, y) ∧ WinterMonths(y) → DeciduousPlant(x))"
    },
    {
        "NL": "A shirt is either short-sleeved or long-sleeved.",
        "FOL": "∀x (Shirt(x) → (ShortSleeved(x) ∨ LongSleeved(x)))"
    },
    {
        "NL": "A hammer is used for nails, a screwdriver is used for screws, and a wrench is used for bolts or nuts.",
        "FOL": "∀x ∀y ∀z (Hammer(x) ∧ Screwdriver(y) ∧ Wrench(z) → (ForNails(x) ∧ ForScrews(y) ∧ (ForBolts(z) ∨ ForNuts(z))))"
    },
    {
        "NL": "A workout routine is effective if it promotes strength, increases endurance, and improves flexibility.",
        "FOL": "∀x (WorkoutRoutine(x) ∧ PromotesStrength(x) ∧ IncreasesEndurance(x) ∧ ImprovesFlexibility(x) → Effective(x))"
    },
    {
        "NL": "An animal that can change its body color to blend with its surroundings for protection from predators is exhibiting camouflage.",
        "FOL": "∀x (Animal(x) ∧ ChangesBodyColor(x) ∧ BlendsWithSurroundings(x) ∧ ProtectionFromPredators(x) → ExhibitsCamouflage(x))"
    },
    {
        "NL": "A password must include at least one uppercase letter, one lowercase letter, and one number.",
        "FOL": "∀x (Password(x) → ∃y∃z∃w (Uppercase(y) ∧ Lowercase(z) ∧ Number(w) ∧ Includes(x, y) ∧ Includes(x, z) ∧ Includes(x, w)))"
    },
    {
        "NL": "Books have pages with printed text.",
        "FOL": "∀x (Book(x) → (Has(y) ∧ Pages(y) ∧ With(z) ∧ PrintedText(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "Not all birds can fly.",
        "FOL": "¬∀x (Bird(x) → Fly(x))"
    },
    {
        "NL": "When a door is locked, it prevents unauthorized access to the room or building it secures.",
        "FOL": "∀x (Door(x) ∧ Locked(x) → PreventsUnauthorizedAccess(x))"
    },
    {
        "NL": "In a competition, participants can be ranked based on their performance, and the top performers receive awards in the form of gold, silver, or bronze medals.",
        "FOL": "∀x ∀y ∀z (Competition(x) ∧ Participant(y) ∧ Performance(y, z) ∧ RankedBasedOnPerformance(x, y, z) → (GoldMedal(y) ⊕ SilverMedal(y) ⊕ BronzeMedal(y)))"
    },
    {
        "NL": "A meal is a breakfast if it's consumed in the morning and typically includes foods like eggs or cereal.",
        "FOL": "∀x (Meal(x) ∧ ConsumedInMorning(x) ∧ (IncludesEggs(x) ∨ IncludesCereal(x)) → Breakfast(x))"
    },
    {
        "NL": "A pharmacy dispenses medication.",
        "FOL": "∀x (Pharmacy(x) → DispensesMedication(x))"
    },
    {
        "NL": "Mobile phones enable communication and offer access to the internet.",
        "FOL": "∀x (MobilePhone(x) → (EnablesCommunication(x) ∧ OffersInternetAccess(x)))"
    },
    {
        "NL": "Every writer who has collaborated with an artist devoid of any international award, has either authored more than three books or participated in all literature seminars.",
        "FOL": "∀x (Writer(x) ∧ ∃y (Artist(y) ∧ ¬WonInternationalAward(y) ∧ CollaboratedWith(x, y)) → (AuthoredMoreThanThreeBooks(x) ∨ ∀z (LiteratureSeminar(z) → ParticipatedIn(x, z))))"
    },
    {
        "NL": "Every cake is either chocolate or vanilla, but not both.",
        "FOL": "∀x (Cake(x) → (Chocolate(x) ⊕ Vanilla(x)))"
    },
    {
        "NL": "If a computer is a laptop, it is portable.",
        "FOL": "∀x (Laptop(x) → Portable(x))"
    },
    {
        "NL": "Not all fruits are sweet.",
        "FOL": "¬∀x (Fruit(x) → Sweet(x))"
    },
    {
        "NL": "A refrigerator maintains a cold environment to preserve food items, while a freezer keeps them frozen.",
        "FOL": "∀x ∀y (Refrigerator(x) ∧ Freezer(y) → (PreservesFood(x) ∧ ColdEnvironment(x) ∧ KeepsFrozen(y)))"
    },
    {
        "NL": "If a creature is nocturnal, then all systems require darkness.",
        "FOL": "∃x (Nocturnal(x) → ∀y ∃z (Darkness(z) ∧ Requires(y, z)))"
    },
    {
        "NL": "A workout is intense if it involves heavy lifting or fast-paced cardio.",
        "FOL": "∀x (Workout(x) ∧ (HeavyLifting(x) ∨ FastPacedCardio(x)) → Intense(x))"
    },
    {
        "NL": "A ship sails on water, a plane flies in the sky, and a car doesn't sail.",
        "FOL": "∀x (Ship(x) → SailsOnWater(x)) ∧ ∀y (Plane(y) → FliesInSky(y)) ∧ ∀z (Car(z) → ¬Sails(z))"
    },
    {
        "NL": "A successful business owner manages finances, oversees operations, and leads a team to achieve company goals.",
        "FOL": "∀x (BusinessOwner(x) ∧ Successful(x) → (ManagesFinances(x) ∧ OverseesOperations(x) ∧ LeadsTeam(x)))"
    },
    {
        "NL": "Hurricanes and tornadoes are powerful atmospheric disturbances that can cause significant damage to infrastructure and pose threats to human life.",
        "FOL": "∀x ∀y (Hurricane(x) ∧ Tornado(y) → (AtmosphericDisturbance(x) ∧ AtmosphericDisturbance(y) ∧ CausesDamage(x) ∧ CausesDamage(y) ∧ PosesThreatToHumanLife(x) ∧ PosesThreatToHumanLife(y)))"
    },
    {
        "NL": "A vaccine can be approved for use when it undergoes successful clinical trials, meets safety standards, and is deemed effective by health authorities.",
        "FOL": "∀x∀y (Vaccine(x) ∧ SuccessfulClinicalTrials(x) ∧ MeetsSafetyStandards(x) ∧ HealthAuthority(y) ∧ DeemedEffective(y, x) → ApprovedForUse(x))"
    },
    {
        "NL": "Some people are introverts, while others are extroverts.",
        "FOL": "∀x (Person(x) → (Introvert(x) ⊕ Extrovert(x)))"
    },
    {
        "NL": "A planet orbits a star but is not a moon.",
        "FOL": "∀x (Planet(x) ↔ (OrbitsStar(x) ∧ ¬Moon(x)))"
    },
    {
        "NL": "A teacher will get promoted only if she evaluates homework.",
        "FOL": "∀x (Teacher(x) ∧ GetPromoted(x) → EvaluateHomework(x))"
    },
    {
        "NL": "A document that provides official information or proof of a person's identity is classified as an identification document.",
        "FOL": "∀x (Document(x) ∧ ProvidesOfficialInformation(x) ∧ ProvesIdentity(x) → IdentificationDocument(x))"
    },
    {
        "NL": "Trees absorb carbon dioxide during photosynthesis, but they release oxygen; algae, on the other hand, can also produce oxygen.",
        "FOL": "∀x ∀y (Tree(x) ∧ CarbonDioxide(y) → (Absorbs(x, y) ∧ ReleasesOxygen(x))) ∨ (Algae(x) ∧ Oxygen(y) → Produces(x, y))"
    },
    {
        "NL": "If a book is informative, then it has more content and valuable information.",
        "FOL": "∀x (Book(x) ∧ Informative(x) → HasMoreContent(x) ∧ ValuableInformation(x))"
    },
    {
        "NL": "Some foods are high in protein and low in fat.",
        "FOL": "∃x (Food(x) ∧ HighProtein(x) ∧ LowFat(x))"
    },
    {
        "NL": "Unless a thing is both large and oval, it is not blue.",
        "FOL": "∀x (¬(Large(x) ∧ Oval(x)) → ¬Blue(x))"
    },
    {
        "NL": "A person is a friend of another person if they know each other and have a positive relationship.",
        "FOL": "∀x ∀y (Knows(x, y) ∧ PositiveRelationship(x, y) → Friends(x, y))"
    },
    {
        "NL": "A diet promotes health when it includes fruits, vegetables, and whole grains, and limits processed foods.",
        "FOL": "∀x (Diet(x) ∧ IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesWholeGrains(x) ∧ LimitsProcessedFoods(x) → PromotesHealth(x))"
    },
    {
        "NL": "A diet is healthy if it includes a variety of fruits and vegetables and limits processed foods and added sugars.",
        "FOL": "∀x (Diet(x) → Healthy(x) ↔ (IncludesVarietyFruitsVegetables(x) ∧ LimitsProcessedFoods(x) ∧ LimitsAddedSugars(x)))"
    },
    {
        "NL": "A seed is planted in the soil, germinates and grows into a plant, which then produces flowers or fruits.",
        "FOL": "∀x ∀y ∀z (Seed(x) ∧ Soil(y) ∧ Plant(z) ∧ PlantedIn(x, y) ∧ GerminatesAndGrowsInto(x, z) → ProducesFlowersOrFruits(z))"
    },
    {
        "NL": "A painter creates a masterpiece, a critic reviews it, and a collector buys it.",
        "FOL": "∃x ∃y ∃z (Painter(x) ∧ Critic(y) ∧ Collector(z) ∧ Creates(x) ∧ Reviews(y) ∧ Buys(z))"
    },
    {
        "NL": "Astronauts explore space in spacecraft, while divers explore the ocean depths in submersibles.",
        "FOL": "∀x ∀y ∀z (Astronaut(x) ∧ Space(s) ∧ Spacecraft(y) → ExploresIn(x, s, y)) ∧ (Diver(z) ∧ OceanDepth(d) ∧ Submersible(w) → ExploresIn(z, d, w))"
    },
    {
        "NL": "A writing instrument that has a thin, cylindrical body, contains ink, and uses a small ball to transfer ink to paper is a ballpoint pen.",
        "FOL": "∀x (WritingInstrument(x) ∧ ThinCylindricalBody(x) ∧ ContainsInk(x) ∧ UsesSmallBall(x) ∧ TransfersInkToPaper(x) → BallpointPen(x))"
    },
    {
        "NL": "In an orchestra, musicians who play string instruments sit on the left side, while musicians who play brass instruments sit on the right side.",
        "FOL": "∀x (Musician(x) ∧ InOrchestra(x) ∧ PlayStringInstrument(x) → SitLeft(x)) ∧ ∀y (Musician(y) ∧ InOrchestra(y) ∧ PlayBrassInstrument(y) → SitRight(y))"
    },
    {
        "NL": "A team wins the championship when it scores more points than all other competing teams, or when it finishes the season with the same number of points as another team but has a better goal difference.",
        "FOL": "∀x (Team(x) ∧ (ScoresMorePoints(x) ∨ (SamePoints(x) ∧ BetterGoalDifference(x))) → WinsChampionship(x))"
    },
    {
        "NL": "A refrigerator is an appliance for preserving food, operates by cooling, and is not a freezer.",
        "FOL": "∀x (Refrigerator(x) ↔ (Appliance(x) ∧ PreservesFood(x) ∧ OperatesByCooling(x) ∧ ¬Freezer(x)))"
    },
    {
        "NL": "A vehicle with a fuel-efficient engine consumes less fuel, reducing both operational costs and greenhouse gas emissions.",
        "FOL": "∀x (Vehicle(x) ∧ FuelEfficientEngine(x) → ReducesOperationalCostsAndGreenhouseGasEmissions(x))"
    },
    {
        "NL": "An organization is perceived as successful if it has a steadily growing revenue and a loyal customer base.",
        "FOL": "∀x (Organization(x) ∧ HasSteadilyGrowingRevenue(x) ∧ HasLoyalCustomerBase(x) → Successful(x))"
    },
    {
        "NL": "A novel that is a romance can make readers cry.",
        "FOL": "∀x ∀y (Novel(x) ∧ Romance(x) ∧ Reader(y) → CanMakeCry(x, y))"
    },
    {
        "NL": "If an animal is a mammal, then it has fur and gives birth to live young.",
        "FOL": "∀x (Animal(x) ∧ Mammal(x) → HasFur(x) ∧ GivesBirthToLiveYoung(x))"
    },
    {
        "NL": "Theater performances entertain audiences with live acting and storytelling.",
        "FOL": "∀x∀y (TheaterPerformance(x) ∧ Audience(y) → (LiveActing(x) ∧ Storytelling(x) ∧ Entertains(x, y)))"
    },
    {
        "NL": "A tram operates on rails, whereas a coach moves on highways.",
        "FOL": "∀x (Tram(x) → OperatesOnRails(x)) ∧ ∀y (Coach(y) → MovesOnHighways(y))"
    },
    {
        "NL": "A student who does not submit their assignments on time will not get an A in the class.",
        "FOL": "∀x (Student(x) ∧ ¬SubmitsAssignmentsOnTime(x) → ¬GradeA(x))"
    },
    {
        "NL": "Not every climber reaches the top, but only climbers reach the top.",
        "FOL": "¬∀x (Climber(x) → Reaches(x)) ∧ ∀y (Reaches(y) → Climber(y))"
    },
    {
        "NL": "No bird flies either day or night.",
        "FOL": "∀x (Bird(x) → ¬Fly(x, day) ∧ ¬Fly(x, night))"
    },
    {
        "NL": "A shopping mall features retail stores selling diverse products, such as clothing, electronics, and home goods, and includes various dining options, like restaurants, food courts, and cafes.",
        "FOL": "∀x∀y∀z (ShoppingMall(x) ∧ (ClothingStore(y) ∨ ElectronicsStore(y) ∨ HomeGoodsStore(y)) ∧ (Restaurant(z) ∨ FoodCourt(z) ∨ Cafe(z)) → FeaturesRetailStoresAndDiningOptions(x, y, z))"
    },
    {
        "NL": "A city experiences traffic congestion if it has a high population density, insufficient public transportation, and limited road infrastructure.",
        "FOL": "∀x (City(x) → (ExperiencesTrafficCongestion(x) ↔ (HighPopulationDensity(x) ∧ InsufficientPublicTransportation(x) ∧ LimitedRoadInfrastructure(x))))"
    },
    {
        "NL": "An instrument that can be strolled effortlessly, dispenses money, has a long-lasting utility, and is relocatable is a mobile ATM.",
        "FOL": "∀x (Instrument(x) ∧ CanBeStrolledEffortlessly(x) ∧ DispensesMoney(x) ∧ HasLongLastingUtility(x) ∧ Relocatable(x) → MobileATM(x))"
    },
    {
        "NL": "A butterfly is resting on a flower, while a bee is collecting pollen on a sunflower.",
        "FOL": "∃x ∃y (Butterfly(x) ∧ Flower(y) ∧ RestingOn(x, y)) ∧ ∃z (Bee(z) ∧ Collecting(z) ∧ OnSunflower(z))"
    },
    {
        "NL": "A lamp illuminates a room when turned on, but a window provides natural light.",
        "FOL": "∀x ∀y (Lamp(x) ∧ Window(y) → (IlluminatesWhenOn(x) ⊕ ProvidesNaturalLight(y)))"
    },
    {
        "NL": "A teacher is satisfied if and only if they are not experienced and have students.",
        "FOL": "∀x (Teacher(x) → (Satisfied(x) ↔ (¬Experienced(x) ∧ HasStudents(x))))"
    },
    {
        "NL": "A rectangle is a square only if all its sides have equal length.",
        "FOL": "∀x ∀y ∀z ∀w (Rectangle(x) ∧ Side(x, y) ∧ Side(x, z) ∧ Side(x, w) ∧ EqualLength(y, z, w) → Square(x))"
    },
    {
        "NL": "A well-designed public transportation system, including buses, trains, and subways, helps reduce traffic congestion, air pollution, and reliance on private vehicles.",
        "FOL": "∀x ∀y ∀z (PublicTransportationSystem(x) → (WellDesigned(x) ∧ Includes(x, y) ∧ (Buses(y) ∨ Trains(y) ∨ Subways(y)) ∧ HelpsReduce(x, z) ∧ (TrafficCongestion(z) ∨ AirPollution(z) ∨ RelianceOnPrivateVehicles(z))))"
    },
    {
        "NL": "Every person is smart unless they are lazy.",
        "FOL": "∀x (Person(x) → (¬Lazy(x) → Smart(x)))"
    },
    {
        "NL": "There is no bird that can eat all types of fruit.",
        "FOL": "¬∃x (Bird(x) ∧ ∀y (Type(y) ∧ Fruit(y) → CanEat(x, y)))"
    },
    {
        "NL": "A train offers a mode of transportation, connecting cities and towns, and providing an energy-efficient alternative to private vehicles.",
        "FOL": "∀x (Train(x) → (TransportationMode(x) ∧ ConnectsCitiesAndTowns(x) ∧ EnergyEfficientAlternative(x)))"
    },
    {
        "NL": "A river flows into a lake or the sea.",
        "FOL": "∀x∀y (River(x) ∧ (Lake(y) ∨ Sea(y)) → FlowsInto(x, y))"
    },
    {
        "NL": "Every athlete who trains in football and basketball, unless they have won a gold medal in the Olympics, has either appeared on popular sports channels or has not coached junior teams.",
        "FOL": "∀x (Athlete(x) ∧ TrainsInFootball(x) ∧ TrainsInBasketball(x) ∨ WonOlympicsGoldMedal(x) → (AppearedOnPopularSportsChannels(x) ∨ ¬CoachedJuniorTeams(x)))"
    },
    {
        "NL": "Venus is hotter than Mercury, even though Mercury is closer to the Sun.",
        "FOL": "∀x∀y∀z (Venus(x) ∧ Mercury(y) ∧ Sun(z) → (HotterThan(x, y) ∧ CloserTo(y, z, x)))"
    },
    {
        "NL": "A chef prepares a dish using ingredients and cooking techniques.",
        "FOL": "∀x ∀y ∀z ∀w (Chef(x) ∧ Dish(y) ∧ Ingredient(z) ∧ CookingTechnique(w) → Prepares(x, y, z, w))"
    },
    {
        "NL": "An object can be solid, liquid, or gas, but not more than one state at the same time.",
        "FOL": "∀x (Object(x) → (((Solid(x) ∨ Liquid(x)) ∨ Gas(x)) ∧ ¬((Solid(x) ∧ Liquid(x)) ∨ (Solid(x) ∧ Gas(x)) ∨ (Liquid(x) ∧ Gas(x)))))"
    },
    {
        "NL": "A park can be a national park or an urban park, but not both.",
        "FOL": "∀x (Park(x) → (NationalPark(x) ⊕ UrbanPark(x)))"
    },
    {
        "NL": "A chef cooks meals, and servers bring those meals to customers.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Server(y) ∧ Meal(z) → (Cooks(x, z) ∧ BringsToCustomer(y, z)))"
    },
    {
        "NL": "A chef is cooking in a bustling restaurant.",
        "FOL": "∃x ∃y (Chef(x) ∧ Cooking(x) ∧ BustlingRestaurant(y) ∧ In(x, y))"
    },
    {
        "NL": "An animal can be considered a mammal if it has hair, produces milk, and gives birth to live young.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ↔ (HasHair(x) ∧ ProducesMilk(x) ∧ GivesBirthToLiveYoung(x))))"
    },
    {
        "NL": "A celestial event where the moon passes between the Earth and the sun, blocking sunlight, is a solar eclipse.",
        "FOL": "∀x (CelestialEvent(x) ∧ MoonPassesBetweenEarthAndSun(x) ∧ BlocksSunlight(x) → SolarEclipse(x))"
    },
    {
        "NL": "In a democracy, citizens elect representatives who make decisions on their behalf, while in an autocracy, power is held by a single ruler with absolute authority.",
        "FOL": "∀x∀y∀z (Government(x) ∧ Citizens(y) ∧ Representatives(z) → ((Democracy(x) → Elects(y, z) ∧ MakesDecisionsOnBehalf(y, z)) ∧ (Autocracy(x) → SingleRulerWithAbsoluteAuthority(x))))"
    },
    {
        "NL": "A solar eclipse occurs when the Moon passes between the Earth and the Sun, casting a shadow on Earth's surface.",
        "FOL": "SolarEclipse(e) ∧ PassesBetween(Moon, Earth, Sun, e) ∧ CastsShadow(Moon, Earth, e)"
    },
    {
        "NL": "A planet supports life when it possesses a suitable atmosphere and the necessary resources for living organisms.",
        "FOL": "∀x (Planet(x) → (SupportsLife(x) ↔ (SuitableAtmosphere(x) ∧ NecessaryResourcesForLivingOrganisms(x))))"
    },
    {
        "NL": "A substance is considered a metal if it has metallic properties, such as being shiny, malleable, and a good conductor of heat and electricity.",
        "FOL": "∀x (MetallicProperties(x) → Metal(x))"
    },
    {
        "NL": "A tree will grow taller if it receives sufficient sunlight and water.",
        "FOL": "∀x (Tree(x) ∧ ReceivesSufficientSunlight(x) ∧ ReceivesSufficientWater(x) → GrowsTaller(x))"
    },
    {
        "NL": "A dessert is delicious when it has a balanced sweetness, a pleasing texture, and an enticing aroma.",
        "FOL": "∀x ∀y ∀z (Dessert(x) ∧ BalancedSweetness(x, y) ∧ PleasingTexture(x, z) ∧ EnticingAroma(x) → Delicious(x))"
    },
    {
        "NL": "A building is safe when it's well-maintained, not in a flood zone, and not near an active volcano.",
        "FOL": "∃x (Building(x) ∧ (WellMaintained(x) ∧ ¬FloodZone(x) ∧ ¬NearActiveVolcano(x) → Safe(x)))"
    },
    {
        "NL": "A planet that orbits the sun and has humans living on it is Earth.",
        "FOL": "∀x (Planet(x) ∧ OrbitsSun(x) ∧ HumansLiveOn(x) → Earth(x))"
    },
    {
        "NL": "A teacher instructs students, assigns homework, and evaluates their performance through exams.",
        "FOL": "∀x∀y (Teacher(x) ∧ Student(y) → (InstructsStudent(x, y) ∧ AssignsHomework(x, y) ∧ EvaluatesPerformance(x, y)))"
    },
    {
        "NL": "A cat enjoys playing with a toy if the toy is colorful or makes noise.",
        "FOL": "∀x∀y (Cat(x) ∧ Toy(y) → (Colorful(y) ∨ MakesNoise(y)) → EnjoysPlaying(x, y))"
    },
    {
        "NL": "Every pen that is neither red nor black, is expensive.",
        "FOL": "∀x ((Red(x) ∨ Black(x)) → Expensive(x))"
    },
    {
        "NL": "If a vegetable is green, it is a cucumber, lettuce or zucchini.",
        "FOL": "∀x (Vegetable(x) ∧ Green(x) → Cucumber(x) ∨ Lettuce(x) ∨ Zucchini(x))"
    },
    {
        "NL": "Every bottle can be filled with juice or water.",
        "FOL": "∀x (Bottle(x) → (FilledJuice(x) ⊕ FilledWater(x)))"
    },
    {
        "NL": "An investment is more profitable if it has a high return rate or low risk, but not if it's affected by market volatility.",
        "FOL": "∃x (Investment(x) ∧ ((HighReturnRate(x) ∨ LowRisk(x)) ∧ ¬AffectedByMarketVolatility(x) → MoreProfitable(x)))"
    },
    {
        "NL": "A bird is a flightless bird if it belongs to the class Aves, has lost its ability to fly, and primarily relies on walking or swimming for locomotion.",
        "FOL": "∀x (Bird(x) ∧ BelongsToClassAves(x) ∧ LostAbilityToFly(x) ∧ (ReliesOnWalking(x) ∨ ReliesOnSwimming(x)) → FlightlessBird(x))"
    },
    {
        "NL": "A country is landlocked if it has no coastline and is surrounded by other countries.",
        "FOL": "∀x (Country(x) → (Landlocked(x) ↔ (NoCoastline(x) ∧ SurroundedByCountries(x))))"
    },
    {
        "NL": "A person is joyful if and only if they are content and have companions.",
        "FOL": "∀x (Person(x) → (Joyful(x) ↔ (Content(x) ∧ HasCompanions(x))))"
    },
    {
        "NL": "A movie can be watched in a theater or at home, but not both at the same time.",
        "FOL": "∀x (Movie(x) ∧ (WatchInTheater(x) ⊕ WatchAtHome(x)))"
    },
    {
        "NL": "A car can be painted in black, red or white color, but not all three simultaneously.",
        "FOL": "∀x (Car(x) ∧ Painted(x) → (BlackPaint(x) ⊕ RedPaint(x) ⊕ WhitePaint(x)))"
    },
    {
        "NL": "A musical instrument is a string instrument if it produces sound by vibrating strings, which can be plucked, struck, or bowed.",
        "FOL": "∀x (MusicalInstrument(x) ∧ VibratingStrings(x) ∧ (CanBePlucked(x) ∨ CanBeStruck(x) ∨ CanBeBowed(x)) → StringInstrument(x))"
    },
    {
        "NL": "If a vehicle is fast, then it is not a truck.",
        "FOL": "∀x (Fast(x) → ¬Truck(x))"
    },
    {
        "NL": "A company can be profitable if it generates more revenue than expenses over a given period.",
        "FOL": "∀x∀y (Company(x) ∧ Period(y) ∧ GeneratesMoreRevenueThanExpenses(x, y) → Profitable(x, y))"
    },
    {
        "NL": "A chef cooks in a kitchen.",
        "FOL": "∀x∀y (Chef(x) ∧ Kitchen(y) → CooksIn(x, y))"
    },
    {
        "NL": "Either Maria is not a doctor or Claire is not a nurse, but not both.",
        "FOL": "¬Doctor(maria) ⊕ ¬Nurse(claire)"
    },
    {
        "NL": "A feather is lightweight, while a rock is heavy.",
        "FOL": "∀x∀y (Feather(x) ∧ Rock(y) → (Lightweight(x) ∨ Heavy(y)))"
    },
    {
        "NL": "A gadget is considered a tablet if it can browse the web, send emails, has a touch screen, and supports apps.",
        "FOL": "∀x ((Gadget(x) ∧ CanBrowseWeb(x) ∧ SendEmails(x) ∧ SupportsApps(x) ∧ HasTouchscreen(x)) → Tablet(x))"
    },
    {
        "NL": "A plant x requires sunlight and a soil type y to grow properly.",
        "FOL": "∀x ∀y (Plant(x) ∧ SoilType(y) → RequiresSunlightAndSoil(x, y))"
    },
    {
        "NL": "An ecosystem is stable if it maintains a balance between the populations of different species and the availability of resources.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) ∧ BalanceBetweenPopulations(x, y) ∧ AvailabilityOfResources(x, z) → Stable(x))"
    },
    {
        "NL": "A bird that cannot fly is either a kiwi or a penguin.",
        "FOL": "∀x (Bird(x) ∧ ¬CanFly(x) → (Kiwi(x) ⊕ Penguin(x)))"
    },
    {
        "NL": "A person can be an athlete, an artist, or a scientist.",
        "FOL": "∀x (Person(x) → (Athlete(x) ∨ Artist(x) ∨ Scientist(x)))"
    },
    {
        "NL": "Either Henry is not an actor or Emma is an engineer, but not both.",
        "FOL": "¬Actor(henry) ⊕ Engineer(emma)"
    },
    {
        "NL": "A vacation destination that isn't safe, offers limited activities, or has poor accommodation options is not a top choice for travelers.",
        "FOL": "∀x (VacationDestination(x) ∧ (¬Safe(x) ∨ LimitedActivities(x) ∨ PoorAccommodations(x)) → ¬TopChoice(x))"
    },
    {
        "NL": "Rainforests are characterized by high biodiversity, receiving substantial rainfall, and hosting a wide variety of plant and animal species.",
        "FOL": "∀x∀y∀z (Rainforest(x) ∧ HighBiodiversity(y) ∧ SubstantialRainfall(z) → (CharacterizedBy(x, y) ∧ Receives(x, z) ∧ HostsWideVarietyOfPlantAndAnimalSpecies(x)))"
    },
    {
        "NL": "If a person embraces change and is open to new experiences, they are more likely to grow and thrive in various aspects of life.",
        "FOL": "∀x (EmbracesChangeAndOpenToNewExperiences(x) → (GrowAndThriveInVariousAspectsOfLife(x)))"
    },
    {
        "NL": "A dessert is considered indulgent when it is rich in flavor, has a high-calorie count, and contains luxurious ingredients.",
        "FOL": "∀x ∀y (Dessert(x) ∧ RichFlavor(y) ∧ HighCalorieCount(x) ∧ LuxuriousIngredients(x) → Indulgent(x))"
    },
    {
        "NL": "A beverage is not alcoholic if it is a soft drink.",
        "FOL": "∀x (Beverage(x) ∧ SoftDrink(x) → ¬Alcoholic(x))"
    },
    {
        "NL": "A restaurant is popular if it has delicious food and a great atmosphere.",
        "FOL": "∀x (Restaurant(x) ∧ HasDeliciousFood(x) ∧ HasGreatAtmosphere(x) → Popular(x))"
    },
    {
        "NL": "A person is a scientist if they study and conduct research in a specific field of science.",
        "FOL": "∀x (Scientist(x) ↔ (Person(x) ∧ ∃y (FieldOfScience(y) ∧ Studies(x, y) ∧ ConductsResearch(x, y))))"
    },
    {
        "NL": "A celestial event is a solar eclipse when the Moon passes between the Earth and the Sun, blocking the Sun's light from reaching the Earth.",
        "FOL": "∀x (CelestialEvent(x) ∧ MoonPassesBetweenEarthAndSun(x) ∧ BlocksSunLightFromReachingEarth(x) → SolarEclipse(x))"
    },
    {
        "NL": "A person is a doctor if they diagnose and treat medical conditions.",
        "FOL": "∀x (Person(x) ∧ Doctor(x) ↔ DiagnosesAndTreatsMedicalConditions(x))"
    },
    {
        "NL": "An entity is classified as an organism if it grows or reproduces.",
        "FOL": "∀x (Organism(x) ↔ (Grows(x) ∨ Reproduces(x)))"
    },
    {
        "NL": "A structure that is built for habitation, provides shelter, and is composed of multiple rooms is a house or an apartment.",
        "FOL": "∀x (Structure(x) ∧ BuiltForHabitation(x) ∧ ProvidesShelter(x) ∧ ComposedOfMultipleRooms(x) → (House(x) ∨ Apartment(x)))"
    },
    {
        "NL": "A pizza is vegetarian if it contains no meat ingredients.",
        "FOL": "∀x (Pizza(x) → (Vegetarian(x) ↔ ¬ContainsMeat(x)))"
    },
    {
        "NL": "The T-rex is carnivorous.",
        "FOL": "∀x (TRex(x) → Carnivorous(x))"
    },
    {
        "NL": "A musician who plays the guitar and sings is a member of a band or a solo artist.",
        "FOL": "∀x (Musician(x) ∧ PlaysGuitar(x) ∧ Sings(x) → (MemberOfBand(x) ∨ SoloArtist(x)))"
    },
    {
        "NL": "A tournament awards a trophy to the winner if the player has the highest score and has not been disqualified.",
        "FOL": "∀x∀y (Tournament(x) ∧ Player(y) → (AwardsTrophy(x, y) ↔ (HighestScore(y) ∧ ¬Disqualified(y))))"
    },
    {
        "NL": "A vehicle that is designed for air travel, has fixed wings, and is powered by one or more jet engines is an airplane.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForAirTravel(x) ∧ HasFixedWings(x) ∧ PoweredByJetEngine(x) ∧ HasOneOrMoreJetEngines(x) → Airplane(x))"
    },
    {
        "NL": "A musical instrument is a percussion instrument if it produces sound by being struck, shaken, or scraped, and does not have strings or a keyboard.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundByStrikingShakingScraping(x) ∧ ¬HasStringsOrKeyboard(x) → PercussionInstrument(x))"
    },
    {
        "NL": "A student receives a scholarship if they excel academically, demonstrate leadership, or contribute significantly to their community.",
        "FOL": "∀x∀y (Student(x) ∧ Scholarship(y) → ((ExcelAcademically(x) ∨ DemonstrateLeadership(x) ∨ ContributeSignificantlyToCommunity(x)) → Receives(x, y)))"
    },
    {
        "NL": "A medicine can prevent a disease by boosting the body's immune response against it.",
        "FOL": "∀x ∀y (Medicine(x) ∧ Disease(y) → (Prevents(x, y) → BoostsImmuneResponse(x, y)))"
    },
    {
        "NL": "A room is comfortable when it is spacious and has either natural light or good artificial lighting, but not both.",
        "FOL": "∀x (Room(x) → (Comfortable(x) ↔ (Spacious(x) ∧ ((NaturalLight(x) ⊕ GoodArtificialLighting(x))))))"
    },
    {
        "NL": "A space mission can succeed when the spacecraft is well-designed, the launch conditions are favorable, and the crew is properly trained.",
        "FOL": "∀x (SpaceMission(x) ∧ WellDesignedSpacecraft(x) ∧ FavorableLaunchConditions(x) ∧ ProperlyTrainedCrew(x) → Successful(x))"
    },
    {
        "NL": "A doctor treats patients, and a pharmacist dispenses medication prescribed by the doctor.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) → Treats(x, y)) ∧ (Pharmacist(z) ∧ Doctor(x) ∧ Medication(y) → Dispenses(z, x, y))"
    },
    {
        "NL": "A gemstone that is red, has a high degree of hardness, and is often used in jewelry is a ruby.",
        "FOL": "∀x (Gemstone(x) ∧ Red(x) ∧ HighDegreeOfHardness(x) ∧ OftenUsedInJewelry(x) → Ruby(x))"
    },
    {
        "NL": "A tool is powered if it requires an external source of energy, such as electricity, gasoline, or compressed air, to function.",
        "FOL": "∀x (Tool(x) ∧ (RequiresElectricity(x) ∨ RequiresGasoline(x) ∨ RequiresCompressedAir(x)) → Powered(x))"
    },
    {
        "NL": "A well-designed website features easy navigation, responsive design, and clear calls to action.",
        "FOL": "∀x (Website(x) ∧ WellDesigned(x) → (EasyNavigation(x) ∧ ResponsiveDesign(x) ∧ ClearCallsToAction(x)))"
    },
    {
        "NL": "If an animal is a reptile, it is cold-blooded.",
        "FOL": "∀x (Reptile(x) → ColdBlooded(x))"
    },
    {
        "NL": "A telescope is an optical instrument that gathers and magnifies light, allowing users to observe distant celestial objects, and is utilized in astronomy for research and discovery.",
        "FOL": "∀x (Telescope(x) → (OpticalInstrument(x) ∧ GathersLight(x) ∧ MagnifiesLight(x) ∧ AllowsObservationOfDistantCelestialObjects(x) ∧ UtilizedInAstronomy(x) ∧ ResearchAndDiscovery(x)))"
    },
    {
        "NL": "A location with a mild climate, abundant natural resources, and a large population is likely a prosperous region.",
        "FOL": "∀x (Location(x) ∧ MildClimate(x) ∧ AbundantNaturalResources(x) ∧ LargePopulation(x) → ProsperousRegion(x))"
    },
    {
        "NL": "A student passes a test only when they study and the test is not too difficult.",
        "FOL": "∀x ∀y (Student(x) ∧ Test(y) → (Passes(x, y) ↔ (Studies(x) ∧ ¬TooDifficult(y))))"
    },
    {
        "NL": "An athlete will join the competition only if they follow the training.",
        "FOL": "∀x (Athlete(x) ∧ JoinCompetition(x) → FollowTraining(x))"
    },
    {
        "NL": "A smartphone has a camera, a screen, and a battery.",
        "FOL": "∀x∀y∀z (Smartphone(x) → (HasCamera(x, y) ∧ HasScreen(x) ∧ HasBattery(x, z)))"
    },
    {
        "NL": "Every vehicle that is either a car or a bike is used in a city that is either busy or calm.",
        "FOL": "∀x ((Vehicle(x) ∧ Car(x)) ∨ (Bike(x)) → ∃y ((Busy(y) ∨ Calm(y)) ∧ Used(x, y)))"
    },
    {
        "NL": "Parents have children, and grandparents have grandchildren.",
        "FOL": "∀x∀y ((Parent(x, y) ∧ Child(y, x)) ∨ (Grandparent(x, y) ∧ Grandchild(y, x)))"
    },
    {
        "NL": "Some restaurants serve spicy food, others serve vegan dishes, and a few offer both options.",
        "FOL": "∃x (Restaurant(x) ∧ ((ServesSpicyFood(x) ∧ ¬ServesVeganDishes(x)) ∨ (¬ServesSpicyFood(x) ∧ ServesVeganDishes(x)) ∨ (ServesSpicyFood(x) ∧ ServesVeganDishes(x))))"
    },
    {
        "NL": "A volcano is active if it has erupted recently or emits gases, but dormant if it has not erupted for a long time and shows no signs of activity.",
        "FOL": "∀x (Volcano(x) → ((Active(x) ↔ (EruptedRecently(x) ∨ EmitsGases(x))) ∧ (Dormant(x) ↔ (¬EruptedRecently(x) ∧ NoActivitySigns(x)))))"
    },
    {
        "NL": "A sandwich contains bread.",
        "FOL": "∀x (Sandwich(x) → ContainsBread(x))"
    },
    {
        "NL": "A building is more eco-friendly if it has solar panels or efficient insulation, but not if it's built on a natural habitat.",
        "FOL": "∃x (Building(x) ∧ ((SolarPanels(x) ∨ EfficientInsulation(x)) ∧ ¬BuiltOnNaturalHabitat(x) → MoreEcoFriendly(x)))"
    },
    {
        "NL": "Scientists research theoretical subjects or conduct experiments, but not both.",
        "FOL": "∀x (Scientist(x) → (ResearchesTheoreticalSubjects(x) ⊕ ConductsExperiments(x)))"
    },
    {
        "NL": "A person is considered a lawyer if they practice law, often representing clients in legal matters, providing legal advice, and advocating for their clients' rights and interests.",
        "FOL": "∀x (Person(x) ∧ PracticesLaw(x) ∧ OftenRepresentsClientsInLegalMatters(x) ∧ ProvidesLegalAdvice(x) ∧ AdvocatesForClientsRightsAndInterests(x) → Lawyer(x))"
    },
    {
        "NL": "A meal is considered healthy if it contains a balanced proportion of nutrients and is low in saturated fats.",
        "FOL": "∀x (Meal(x) ∧ BalancedProportionOfNutrients(x) ∧ LowInSaturatedFats(x) → Healthy(x))"
    },
    {
        "NL": "If a person has a pet dog, they need to provide food, water, and exercise for their pet.",
        "FOL": "∀x∀y (Pet(y, x) ∧ Dog(y) → (ProvideFood(x, y) ∧ ProvideWater(x, y) ∧ ProvideExercise(x, y)))"
    },
    {
        "NL": "A tree grows roots to absorb water and nutrients from the soil, while its leaves capture sunlight for photosynthesis, which produces energy for growth.",
        "FOL": "∀x∀y∀z (Tree(x) → (GrowsRoots(x, y) ∧ AbsorbsWaterAndNutrients(x, y, z) ∧ Soil(z) ∧ CapturesSunlightForPhotosynthesis(x) ∧ ProducesEnergyForGrowth(x)))"
    },
    {
        "NL": "A robust scientific research ecosystem fosters interdisciplinary collaboration, invests in cutting-edge technology, and supports knowledge dissemination to drive innovation and societal progress.",
        "FOL": "∀x∀y∀z (RobustScientificResearchEcosystem(x) ∧ InterdisciplinaryCollaboration(x) ∧ InvestmentInCuttingEdgeTechnology(y) ∧ SupportsKnowledgeDissemination(z) → (DrivesInnovation(x) ∧ SocietalProgress(x)))"
    },
    {
        "NL": "In a chess game, a piece is captured when it occupies the same square as an opponent's piece.",
        "FOL": "∀x∀y∀z (ChessGame(z) ∧ ChessPiece(x) ∧ ChessPiece(y) ∧ OccupiesSameSquare(x, y, z) ∧ Opponents(x, y) → Captured(x))"
    },
    {
        "NL": "A piece of art that is created by applying pigment to a surface, such as canvas or paper, with a brush is usually a painting.",
        "FOL": "∀x (PieceOfArt(x) ∧ CreatedByApplyingPigment(x) ∧ SurfaceCanvasOrPaper(x) ∧ UsesBrush(x) → Painting(x))"
    },
    {
        "NL": "A tree is deemed deciduous if it sheds its leaves annually.",
        "FOL": "∀x (Tree(x) ∧ ShedsLeavesAnnually(x) → Deciduous(x))"
    },
    {
        "NL": "A person is a musician if they perform or compose music.",
        "FOL": "∀x (Person(x) ∧ Musician(x) ↔ (PerformsMusic(x) ∨ ComposesMusic(x)))"
    },
    {
        "NL": "A publisher x releases a book y written by author z if x has the rights to y and z approves the final version.",
        "FOL": "∀x ∀y ∀z (Publisher(x) ∧ Book(y) ∧ Author(z) ∧ HasRights(x, y) ∧ ApprovesFinalVersion(z, y) → Releases(x, y, z))"
    },
    {
        "NL": "A store is successful if it offers a wide range of products and provides excellent customer service.",
        "FOL": "∀x ∀y (Store(x) ∧ WideRangeOfProducts(x, y) ∧ ExcellentCustomerService(x) → Successful(x))"
    },
    {
        "NL": "A person is considered a taxonomist if they classify and describe organisms based on their characteristics and evolutionary relationships.",
        "FOL": "∀x (Person(x) ∧ ClassifiesOrganisms(x) ∧ DescribesOrganismsBasedOnCharacteristicsAndEvolution(x) → Taxonomist(x))"
    },
    {
        "NL": "A computer is portable if it is lightweight and has a long battery life.",
        "FOL": "∀x (Computer(x) ∧ Lightweight(x) ∧ LongBatteryLife(x) → Portable(x))"
    },
    {
        "NL": "An environment is a desert when it has very low precipitation levels, supports limited plant and animal life, and often exhibits extreme temperature fluctuations.",
        "FOL": "∀x (Environment(x) ∧ LowPrecipitationLevels(x) ∧ LimitedPlantAndAnimalLife(x) ∧ ExhibitsExtremeTemperatureFluctuations(x) → Desert(x))"
    },
    {
        "NL": "A medicine is effective against a disease if it has been clinically tested, has a high success rate, and causes minimal side effects.",
        "FOL": "∀x (Medicine(x) ∧ ClinicallyTested(x) ∧ HighSuccessRate(x) ∧ MinimalSideEffects(x) → EffectiveAgainstDisease(x))"
    },
    {
        "NL": "Lawyers represent clients in court, negotiate settlements, and advise on legal matters.",
        "FOL": "∀x∀y∀z∀w (Lawyer(x) ∧ Client(y) ∧ Court(z) ∧ LegalMatter(w) → (RepresentsInCourt(x, y, z) ∧ NegotiatesSettlements(x, y) ∧ AdvisesOn(x, y, w)))"
    },
    {
        "NL": "No house is livable unless it is either well-insulated or well-ventilated, and not all of them are low-priced.",
        "FOL": "¬∃x (House(x) ∧ Livable(x) ∨ (WellInsulated(x) ∨ WellVentilated(x))) ∧ ¬∀y (House(y) → LowPriced(y))"
    },
    {
        "NL": "A job position is appealing if it pays well, offers flexibility, and provides opportunities for growth.",
        "FOL": "∀x (JobPosition(x) ∧ PaysWell(x) ∧ OffersFlexibility(x) ∧ GrowthOpportunities(x) → Appealing(x))"
    },
    {
        "NL": "A chef is a professional if they have completed culinary school and have experience working in a restaurant.",
        "FOL": "∀x (Chef(x) → (Professional(x) ↔ (CompletedCulinarySchool(x) ∧ HasRestaurantExperience(x))))"
    },
    {
        "NL": "There are students who are neither tardy nor unprepared.",
        "FOL": "∃x (Student(x) ∧ ¬(Tardy(x) ∨ Unprepared(x)))"
    },
    {
        "NL": "A bank account may have a minimum balance requirement or charge a monthly fee.",
        "FOL": "∀x (BankAccount(x) → (MinimumBalanceRequirement(x) ∨ MonthlyFee(x)))"
    },
    {
        "NL": "A laptop is considered high-performance if it has a fast processor and sufficient RAM.",
        "FOL": "∀x (Laptop(x) ∧ HasFastProcessor(x) ∧ HasSufficientRAM(x) → HighPerformance(x))"
    },
    {
        "NL": "If a person is a pilot, they fly airplanes.",
        "FOL": "∀x (Person(x) ∧ Pilot(x) → FlyAirplanes(x))"
    },
    {
        "NL": "In a democratic election, each voter casts one vote, and the candidate with the most votes wins.",
        "FOL": "∀x ∀y ∀z (DemocraticElection(x) ∧ Voter(y) ∧ Candidate(z) → (CastsOneVote(y, x) ∧ (MostVotes(z, x) → Wins(z, x))))"
    },
    {
        "NL": "If a fruit is ripe, it has reached its optimal flavor and texture, is usually sweeter than its unripe counterpart, and has a softer consistency.",
        "FOL": "∀x (Fruit(x) ∧ Ripe(x) → OptimalFlavorAndTexture(x) ∧ UsuallySweeterThanUnripeCounterpart(x) ∧ SofterConsistency(x))"
    },
    {
        "NL": "If all cars are not fast, then there is a bike that all bikes are inspired by.",
        "FOL": "¬∀x (Car(x) → Fast(x)) → ∃y (Bike(y) ∧ ∀z (Bike(z) → InspiredBy(z, y)))"
    },
    {
        "NL": "A movie is a blockbuster if it has a large budget, a star-studded cast, and impressive visual effects.",
        "FOL": "∀x (Movie(x) → (Blockbuster(x) ↔ (LargeBudget(x) ∧ StarStuddedCast(x) ∧ ImpressiveVisualEffects(x))))"
    },
    {
        "NL": "A cylinder is not orange and does not extend towards any pink structure.",
        "FOL": "∀x (Cylinder(x) → (¬Orange(x) ∧ ¬∃y (Pink(y) ∧ ExtendsTowards(x, y))))"
    },
    {
        "NL": "A company x launches a product y if the product has undergone successful testing and market research indicates a demand for it.",
        "FOL": "∀x ∀y (Company(x) ∧ Product(y) ∧ SuccessfulTesting(y) ∧ MarketResearchDemand(y) → Launches(x, y))"
    },
    {
        "NL": "Trained chefs have the ability to create unique recipes, prepare meals with complex techniques, and present dishes in an aesthetically pleasing manner.",
        "FOL": "∀x (Chef(x) ∧ Trained(x) → (CreatesUniqueRecipes(x) ∧ PreparesMealsWithComplexTechniques(x) ∧ PresentsDishesAesthetically(x)))"
    },
    {
        "NL": "An item is either fragile or resilient but not both, depending on the material it is made from.",
        "FOL": "∀x (Item(x) → (Fragile(x) ⊕ Resilient(x)))"
    },
    {
        "NL": "Writers write books, and painters create paintings.",
        "FOL": "∀x (Writer(x) → WritesBooks(x)) ∧ ∀y (Painter(y) → CreatesPaintings(y))"
    },
    {
        "NL": "A parrot is talking on a swing, and a horse is neighing at noon.",
        "FOL": "∃x ∃y (Parrot(x) ∧ Swing(y) ∧ TalkingOn(x, y)) ∧ ∃z (Horse(z) ∧ Neighing(z) ∧ AtNoon(z))"
    },
    {
        "NL": "A molecule can be polar or nonpolar, but it cannot possess both properties simultaneously.",
        "FOL": "∀x∀y∀z (Molecule(x) ∧ Polar(y) ∧ Nonpolar(z) → ¬(HasProperty(x, y) ∧ HasProperty(x, z)))"
    },
    {
        "NL": "A fruit that has a sweet taste, is rich in vitamins, and has a juicy texture is considered a nutritious and delicious fruit.",
        "FOL": "∀x (Fruit(x) ∧ SweetTaste(x) ∧ RichInVitamins(x) ∧ JuicyTexture(x) → NutritiousAndDeliciousFruit(x))"
    },
    {
        "NL": "An organism that obtains energy by consuming other organisms and is incapable of producing its own food is a heterotroph.",
        "FOL": "∀x (Organism(x) ∧ ObtainsEnergyByConsumingOrganisms(x) ∧ ¬ProducesOwnFood(x) → Heterotroph(x))"
    },
    {
        "NL": "A fabric is breathable if it allows air to circulate and moisture to evaporate, providing comfort to the wearer.",
        "FOL": "∀x ∀y (Fabric(x) ∧ Wearer(y) ∧ AllowsAirCirculation(x) ∧ AllowsMoistureEvaporation(x) → ProvidesComfort(x, y))"
    },
    {
        "NL": "Not all who train rigorously win races, but only those who train rigorously do.",
        "FOL": "¬∀x (TrainsRigorously(x) → WinsRace(x)) ∧ ∀y (WinsRace(y) → TrainsRigorously(y))"
    },
    {
        "NL": "All planets are either round or flat, but not both.",
        "FOL": "∀x (Planet(x) ∧ (Round(x) ⊕ Flat(x)))"
    },
    {
        "NL": "Natural disasters, such as earthquakes, hurricanes, and floods, can cause significant damage to infrastructure, the environment, and human lives.",
        "FOL": "∀x∀y∀z (NaturalDisaster(x) ∧ Infrastructure(y) ∧ EnvironmentAndHumanLives(z) → (CausesSignificantDamage(x, y, z) ∧ (Earthquakes(x) ∨ Hurricanes(x) ∨ Floods(x))))"
    },
    {
        "NL": "A chemical reaction that is not exothermic can be endothermic or isothermal.",
        "FOL": "∀x (ChemicalReaction(x) ∧ ¬Exothermic(x) → Endothermic(x) ⊕ Isothermal(x))"
    },
    {
        "NL": "A bird with feathers that can fly is an eagle.",
        "FOL": "∀x (Bird(x) ∧ HasFeathers(x) ∧ CanFly(x) → Eagle(x))"
    },
    {
        "NL": "All poems are evocative and lyrical and profound.",
        "FOL": "∀x (Poem(x) → (Evocative(x) ∧ Lyrical(x) ∧ Profound(x)))"
    },
    {
        "NL": "A garden flourishes when it has healthy plants and is free from weeds and pests.",
        "FOL": "∃x (Garden(x) ∧ (HealthyPlants(x) ∧ ¬Weeds(x) ∧ ¬Pests(x) → Flourishes(x)))"
    },
    {
        "NL": "A guitarist is versatile if he plays blues, jazz, and rock music with different techniques.",
        "FOL": "∀x (Guitarist(x) ∧ ∃y ∃z ∃w (BluesMusic(y) ∧ JazzMusic(z) ∧ RockMusic(w) ∧ DifferentTechniques(y, z, w) ∧ Plays(x, y, z, w)) → IsVersatile(x))"
    },
    {
        "NL": "A ship sets sail from its initial port and docks at its final port, calling at numerous ports in between.",
        "FOL": "∃x ∃y ∃z (Ship(x) ∧ InitialPort(y) ∧ FinalPort(z) → SetsSailFrom(x, y) ∧ DocksAt(x, z) ∧ ∃w (Port(w) ∧ CallsAt(x, w)))"
    },
    {
        "NL": "Not all vehicles that can move are cars.",
        "FOL": "¬∀x (Vehicle(x) ∧ CanMove(x) → Car(x))"
    },
    {
        "NL": "A virus infects a host organism, using the host's cellular machinery to replicate itself.",
        "FOL": "∀x ∀y (Virus(x) ∧ HostOrganism(y) → InfectsAndUsesToReplicate(x, y))"
    },
    {
        "NL": "An electronic device that receives, amplifies, and transmits sound through a speaker, converts acoustic energy into electrical energy, and is used in various communication systems is a microphone.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ReceivesAmplifiesTransmitsSound(x) ∧ ConvertsAcousticEnergyToElectricalEnergy(x) ∧ UsedInVariousCommunicationSystems(x) → Microphone(x))"
    },
    {
        "NL": "Any book is interesting only if it is a mystery.",
        "FOL": "∀x (Book(x) → (Interesting(x) → Mystery(x)))"
    },
    {
        "NL": "No transportation is considered sustainable unless it is either pedal-powered or uses wind energy, and not all of them are cheap.",
        "FOL": "¬∃x (Transportation(x) ∧ Sustainable(x) ∨ (PedalPowered(x) ∨ UsesWindEnergy(x))) ∧ ¬∀y (Transportation(y) → Cheap(y))"
    },
    {
        "NL": "A submarine travels underwater by adjusting its buoyancy, using a propulsion system to move through the water and control surfaces to steer its course.",
        "FOL": "∀x ∀y (Submarine(x) ∧ (TravelsUnderwater(x, y) ∧ AdjustsBuoyancy(y)) ∧ (UsesPropulsionSystem(x) ∧ UsesControlSurfaces(x)))"
    },
    {
        "NL": "A structure is deemed a skyscraper if it has multiple floors and constructed with steel and glass.",
        "FOL": "∀w (Structure(w) ∧ HasMultipleFloors(w) ∧ ConstructedBySteelAndGlass(w) → Skyscraper(w))"
    },
    {
        "NL": "A musician can play a song on an instrument, but they need sheet music and a well-tuned instrument to perform it correctly.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Song(y) ∧ Instrument(z) → (Play(x, y, z) ↔ (HasSheetMusic(x, y) ∧ WellTuned(z))))"
    },
    {
        "NL": "Mountains are formed by tectonic forces, volcanic activity, or erosion.",
        "FOL": "∀x (Mountain(x) → (TectonicForces(x) ∨ VolcanicActivity(x) ∨ Erosion(x)))"
    },
    {
        "NL": "A renewable energy source is sustainable, does not deplete natural resources, and produces minimal greenhouse gas emissions.",
        "FOL": "∀x (RenewableEnergySource(x) → (Sustainable(x) ∧ DoesNotDepleteNaturalResources(x) ∧ ProducesMinimalGreenhouseGasEmissions(x)))"
    },
    {
        "NL": "A phone can be a smartphone, a feature phone, or a satellite phone.",
        "FOL": "∀x (Smartphone(x) ∨ FeaturePhone(x) ∨ SatellitePhone(x))"
    },
    {
        "NL": "An object is a cylinder if and only if every object it points to is big.",
        "FOL": "∀x (Cylinder(x) ↔ ∀y (PointsTo(x, y) → Big(y)))"
    },
    {
        "NL": "A scientist makes a breakthrough discovery by conducting thorough research, having access to advanced equipment, and collaborating with experienced peers.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ ThoroughResearch(x, y) ∧ AdvancedEquipment(x, z) ∧ ExperiencedPeers(x) → BreakthroughDiscovery(x))"
    },
    {
        "NL": "A cake is a chocolate cake if it is made with cocoa powder and not made with vanilla extract or fruit flavors.",
        "FOL": "∀x (Cake(x) ∧ MadeWithCocoaPowder(x) ∧ ¬MadeWithVanillaExtract(x) ∧ ¬MadeWithFruitFlavors(x) → ChocolateCake(x))"
    },
    {
        "NL": "Every vehicle is either diesel or petrol, but not both.",
        "FOL": "∀x (Vehicle(x) → (Diesel(x) ⊕ Petrol(x)))"
    },
    {
        "NL": "A vacuum cleaner removes dirt and debris from floors, carpets, and other surfaces through suction.",
        "FOL": "∀x (VacuumCleaner(x) → (RemovesDirt(x) ∧ RemovesDebris(x) ∧ CleansFloors(x) ∧ CleansCarpets(x) ∧ CleansSurfaces(x) ∧ UsesSuction(x)))"
    },
    {
        "NL": "If Sarah is a lawyer then she is not a chef.",
        "FOL": "Lawyer(sarah) → ¬Chef(sarah)"
    },
    {
        "NL": "A laptop is portable because it is lightweight and has a built-in battery.",
        "FOL": "∀x (Portable(x) ↔ (Laptop(x) ∧ Lightweight(x) ∧ BuiltInBattery(x)))"
    },
    {
        "NL": "Cats chase mice, and dogs chase cats.",
        "FOL": "∀x∀y∀z ((Cat(x) ∧ Mouse(y) → Chases(x, y)) ∧ (Dog(z) ∧ Cat(x) → Chases(z, x)))"
    },
    {
        "NL": "A book is not both old and new.",
        "FOL": "∀z (Book(z) → ¬(Old(z) ∧ New(z)))"
    },
    {
        "NL": "A wetland ecosystem with diverse plant life, abundant fish populations, and migratory bird species contributes to high biodiversity.",
        "FOL": "∀x (WetlandEcosystem(x) ∧ DiversePlantLife(x) ∧ AbundantFishPopulations(x) ∧ MigratoryBirdSpecies(x) → HighBiodiversity(x))"
    },
    {
        "NL": "A novel can be written in first-person or third-person perspective, but it cannot be written in both perspectives at once.",
        "FOL": "∀x (Novel(x) → (FirstPersonPerspective(x) ⊕ ThirdPersonPerspective(x)))"
    },
    {
        "NL": "In a theater, actors perform on stage, and audiences watch the performance from seats.",
        "FOL": "∀x ∀y ∀z (Theater(x) ∧ Actor(y) ∧ Audience(z) ∧ InTheater(y, x) ∧ InTheater(z, x) → (PerformsOnStage(y) ∧ WatchesPerformance(z)))"
    },
    {
        "NL": "An event is considered a success if it achieves its goals, generates positive feedback, and doesn't exceed its budget.",
        "FOL": "∀x (SuccessfulEvent(x) ↔ (AchievesGoals(x) ∧ GeneratesPositiveFeedback(x) ∧ ¬ExceedsBudget(x)))"
    },
    {
        "NL": "When a plant receives sunlight, water, and has nutrient-rich soil, it grows.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ Sunlight(y) ∧ Water(z) ∧ NutrientRichSoil(x) → Grows(x))"
    },
    {
        "NL": "A person who trains and coaches athletes is called a sports coach.",
        "FOL": "∀x (TrainsAndCoachesAthletes(x) → SportsCoach(x))"
    },
    {
        "NL": "A bicycle is safe to ride if it has functioning brakes, properly inflated tires, and a working chain, but it's not safe if any of these components are damaged.",
        "FOL": "∀x (Bicycle(x) → (FunctioningBrakes(x) ∧ ProperlyInflatedTires(x) ∧ WorkingChain(x) ↔ Safe(x)) ∧ ¬(FunctioningBrakes(x) ∧ ProperlyInflatedTires(x) ∧ WorkingChain(x)) ↔ NotSafe(x))"
    },
    {
        "NL": "Some lobsters don't swim.",
        "FOL": "∃x (Lobster(x) ∧ ¬Swim(x))"
    },
    {
        "NL": "Roses are red, while violets are blue.",
        "FOL": "∀x (Rose(x) → Red(x)) ∧ ∀y (Violet(y) → Blue(y))"
    },
    {
        "NL": "You're a chef if you love cooking and work in a restaurant.",
        "FOL": "∀x (Person(x) ∧ LovesCooking(x) ∧ WorksInRestaurant(x) → Chef(x))"
    },
    {
        "NL": "A building is energy-efficient if it has insulation, solar panels, and energy-saving appliances.",
        "FOL": "∀x (Building(x) → (IsEnergyEfficient(x) ↔ (HasInsulation(x) ∧ HasSolarPanels(x) ∧ HasEnergySavingAppliances(x))))"
    },
    {
        "NL": "A thriving ecosystem supports diverse species, maintains stable populations, and fosters symbiotic relationships.",
        "FOL": "∀x (Ecosystem(x) → (Thriving(x) ↔ (SupportsDiverseSpecies(x) ∧ StablePopulations(x) ∧ SymbioticRelationships(x))))"
    },
    {
        "NL": "An event occurring annually, featuring live music, and attracting a large audience is a music festival.",
        "FOL": "∀x (Event(x) ∧ OccursAnnually(x) ∧ FeaturesLiveMusic(x) ∧ AttractsLargeAudience(x) → MusicFestival(x))"
    },
    {
        "NL": "Trees are considered deciduous if they lose their leaves seasonally.",
        "FOL": "∀x (Tree(x) ∧ SeasonalLeafLoss(x) → Deciduous(x))"
    },
    {
        "NL": "Birds that lay hard-shelled eggs, possess feathers, and have beaks rather than teeth belong to the class Aves.",
        "FOL": "∀x (Bird(x) ∧ LaysHardShelledEggs(x) ∧ HasFeathers(x) ∧ HasBeakInsteadOfTeeth(x) → ClassAves(x))"
    },
    {
        "NL": "A runner is versatile if they excel in both sprinting and marathon.",
        "FOL": "∀x (Runner(x) ∧ ExcelsInSprinting(x) ∧ ExcelsInMarathon(x) → Versatile(x))"
    },
    {
        "NL": "Mountains have peaks, while valleys have low points.",
        "FOL": "∀x∀y (Mountain(x) ∧ Valley(y) → (HasPeak(x) ∧ HasLowPoint(y)))"
    },
    {
        "NL": "A hurricane forms over warm ocean water and has strong winds, while a tornado forms over land and has rapidly rotating winds.",
        "FOL": "∀x (Hurricane(x) → (FormsOverWarmOceanWater(x) ∧ StrongWinds(x))) ∧ ∀y (Tornado(y) → (FormsOverLand(y) ∧ RapidlyRotatingWinds(y)))"
    },
    {
        "NL": "An investment is profitable if it generates regular income and has low risk or appreciates significantly in value.",
        "FOL": "∀x (Investment(x) → (Profitable(x) ↔ (RegularIncome(x) ∧ LowRisk(x) ∨ AppreciatesSignificantly(x))))"
    },
    {
        "NL": "A person is bilingual if they speak English and French.",
        "FOL": "∀x (Person(x) ∧ SpeaksEnglish(x) ∧ SpeaksFrench(x) → Bilingual(x))"
    },
    {
        "NL": "A language can be written using an alphabet or a logographic system.",
        "FOL": "∀x∀y∀z (Language(x) ∧ (Alphabet(y) ∨ LogographicSystem(z)) → WrittenWith(x, y, z))"
    },
    {
        "NL": "It is not the case that every red square is large.",
        "FOL": "¬∀x (Red(x) ∧ Square(x) → Large(x))"
    },
    {
        "NL": "A designer is counted as proficient if and only if they create designs continually or gather accolades.",
        "FOL": "∀x (Designer(x) → (Proficient(x) ↔ (CreateDesignsContinually(x) ∨ GatherAccolades(x))))"
    },
    {
        "NL": "There is an elephant that every elephant honors, assuming all snakes are not poisonous.",
        "FOL": "¬∀x (Snake(x) → Poisonous(x)) → ∃y (Elephant(y) ∧ ∀z (Elephant(z) → Honors(z, y)))"
    },
    {
        "NL": "A plant could be a tree or a flower but not both.",
        "FOL": "∀x (Plant(x) → (Tree(x) ⊕ Flower(x)))"
    },
    {
        "NL": "Political theories are not beliefs.",
        "FOL": "∀x (PoliticalTheories(x) → ¬Belief(x))"
    },
    {
        "NL": "An artist creates either paintings, sculptures, or both.",
        "FOL": "∀x (Artist(x) → (∃y (Painting(y) ∧ Creates(x, y)) ∨ ∃z (Sculpture(z) ∧ Creates(x, z))))"
    },
    {
        "NL": "A tourist destination is attractive if it has beautiful landscapes, historical sites, or both, but not if it's crowded.",
        "FOL": "∀x (TouristDestination(x) ∧ (BeautifulLandscapes(x) ∨ HistoricalSites(x)) ∧ ¬Crowded(x) → Attractive(x))"
    },
    {
        "NL": "Rivers flow into larger bodies of water, and glaciers melt into water.",
        "FOL": "∀x (River(x) → FlowIntoLargerBodyOfWater(x)) ∧ ∀y (Glacier(y) → MeltIntoWater(y))"
    },
    {
        "NL": "A flashlight emits light when its battery is charged and the switch is turned on.",
        "FOL": "∀x (Flashlight(x) → (BatteryCharged(x) ∧ SwitchOn(x) → EmitsLight(x)))"
    },
    {
        "NL": "An element is a noble gas if it has a full valence electron shell and does not form compounds under normal conditions.",
        "FOL": "∀x (NobleGas(x) → (Element(x) ∧ FullValenceElectronShell(x) ∧ ¬∃y (NormalConditions(y) ∧ FormsCompound(x, y))))"
    },
    {
        "NL": "A bird can fly if its wings are not injured and the weather is suitable.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ↔ (¬InjuredWings(x) ∧ SuitableWeather(x))))"
    },
    {
        "NL": "A musical instrument that produces sound by vibrating strings, can be played by plucking or bowing, and has a distinct resonance chamber for amplification is a stringed instrument.",
        "FOL": "∀x ∀y ∀z (MusicalInstrument(x) ∧ Strings(y) ∧ ResonanceChamber(z) ∧ ProducesSoundByVibrating(x, y) ∧ CanBePlayedByPluckingOrBowing(x) ∧ HasDistinctChamber(x, z) → StringedInstrument(x))"
    },
    {
        "NL": "A bird is either predatory or not predatory.",
        "FOL": "∀x (Bird(x) → (Predatory(x) ⊕ ¬Predatory(x)))"
    },
    {
        "NL": "A city is crowded if it's a metropolis or the population exceeds a million.",
        "FOL": "∀x (City(x) ∧ (Metropolis(x) ∨ PopulationExceedsMillion(x)) → Crowded(x))"
    },
    {
        "NL": "Not all writers are either novelists or poets, and none of them dislikes writing.",
        "FOL": "¬∀x (Writer(x) → (Novelist(x) ∨ Poet(x))) ∧ ∀y (Writer(y) → ¬DislikeWriting(y))"
    },
    {
        "NL": "Insects play essential roles in ecosystems, such as pollinating plants, decomposing organic matter, and serving as a food source for other animals.",
        "FOL": "∀x (Insect(x) → (PollinatesPlants(x) ∧ DecomposesOrganicMatter(x) ∧ ServesAsFoodSource(x)))"
    },
    {
        "NL": "All car is good only if it is new.",
        "FOL": "∀x (Car(x) → (Good(x) → New(x)))"
    },
    {
        "NL": "Everyone who observes the universe as if it were a song, fails to grasp the truth.",
        "FOL": "∀x (ObservesUniverseAsSong(x) → FailsToGraspTruth(x))"
    },
    {
        "NL": "All birds have wings and can fly, while all elephants have no wings and cannot fly.",
        "FOL": "∀x (Bird(x) → HasWings(x) ∧ CanFly(x)) ∧ ∀y (Elephant(y) → ¬HasWings(y) ∧ ¬CanFly(y))"
    },
    {
        "NL": "A vehicle is considered fuel-efficient if it consumes less fuel per mile traveled compared to most other vehicles.",
        "FOL": "∀x∀y (Vehicle(x) ∧ Vehicle(y) ∧ ConsumesLessFuelPerMile(x, y) → FuelEfficient(x))"
    },
    {
        "NL": "A vehicle is hybrid if it uses both an electric motor and a fossil fuel engine.",
        "FOL": "∀x (Vehicle(x) ∧ HasElectricMotor(x) ∧ HasFossilFuelEngine(x) → Hybrid(x))"
    },
    {
        "NL": "All horror novels can frighten every reader.",
        "FOL": "∀x ∀y (Novel(x) ∧ Horror(x) ∧ Reader(y) → CanFrighten(x, y))"
    },
    {
        "NL": "An animal in hibernation conserves energy by significantly reducing its metabolism.",
        "FOL": "∀x (Animal(x) ∧ Hibernation(h) → ConservesEnergyByReducingMetabolism(x, h))"
    },
    {
        "NL": "An elephant is eating a peanut in the zoo.",
        "FOL": "∃x ∃y (Elephant(x) ∧ Peanut(y) ∧ Eating(x, y) ∧ InTheZoo(x))"
    },
    {
        "NL": "A beverage that contains caffeine and is served hot is commonly consumed in the morning.",
        "FOL": "∀x (Beverage(x) ∧ ContainsCaffeine(x) ∧ ServedHot(x) → CommonlyConsumedInTheMorning(x))"
    },
    {
        "NL": "A place is considered a hotel if it provides lodging and accommodations for guests.",
        "FOL": "∀x (Hotel(x) ↔ ProvidesLodgingAndAccommodations(x))"
    },
    {
        "NL": "A beverage that contains alcohol and is derived from fermented grains or fruits is an alcoholic drink.",
        "FOL": "∀x (Beverage(x) ∧ ContainsAlcohol(x) ∧ (DerivedFromFermentedGrains(x) ∨ DerivedFromFermentedFruits(x)) → AlcoholicDrink(x))"
    },
    {
        "NL": "Medicines are used to treat or prevent illnesses by interacting with specific biological targets.",
        "FOL": "∀x ∀y (Medicine(x) ∧ Illness(y) → (InteractWithBiologicalTarget(x, y) ∧ (Treat(x, y) ∨ Prevent(x, y))))"
    },
    {
        "NL": "Some cars are sedans and some cars are SUVs, but there are no cars that are both.",
        "FOL": "∃x (Sedan(x)) ∧ ∃x (SUV(x)) ∧ ¬∃x (Sedan(x) ∧ SUV(x))"
    },
    {
        "NL": "A powerful hurricane can cause widespread destruction, trigger flooding, and lead to power outages, disrupting the lives of people in affected areas.",
        "FOL": "∀x (Hurricane(x) ∧ Powerful(x) → (CausesWidespreadDestruction(x) ∧ TriggersFlooding(x) ∧ LeadsToPowerOutages(x)))"
    },
    {
        "NL": "A student is studying a book in the library.",
        "FOL": "∃x ∃y ∃z (Student(x) ∧ Book(y) ∧ Library(z) ∧ StudyingAt(x, y) ∧ At(x, z) ∧ InTheLibrary(x))"
    },
    {
        "NL": "Not all artists are either painters or sculptors.",
        "FOL": "¬∀x (Artist(x) → (Painter(x) ∨ Sculptor(x)))"
    },
    {
        "NL": "A television displays video, while a radio plays audio.",
        "FOL": "∀x∀y (Television(x) ∧ Video(y) → Displays(x, y)) ∧ (Radio(x) ∧ Audio(y) → Plays(x, y))"
    },
    {
        "NL": "A planet orbits around a star if it is held by the star's gravitational force.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) ∧ HeldByGravitationalForce(x, y) → OrbitsAround(x, y))"
    },
    {
        "NL": "A bird can fly or swim, but not both simultaneously.",
        "FOL": "∃x (Bird(x) ∧ ((Fly(x) ∨ Swim(x)) ∧ ¬(Fly(x) ∧ Swim(x))))"
    },
    {
        "NL": "A movie is a thriller if it has suspenseful scenes and a complex plot.",
        "FOL": "∀x (Movie(x) ∧ (SuspensefulScenes(x) ∧ ComplexPlot(x)) → Thriller(x))"
    },
    {
        "NL": "A student x graduates with honors if they maintain a high grade point average and complete a designated number of advanced courses.",
        "FOL": "∀x (Student(x) ∧ HighGPA(x) ∧ CompletedAdvancedCourses(x) → GraduatesWithHonors(x))"
    },
    {
        "NL": "A musical instrument is in tune if the pitch of its notes matches the standard pitch, but it is out of tune if the pitch deviates from the standard.",
        "FOL": "∀x (MusicalInstrument(x) → ((PitchMatchesStandard(x) → InTune(x)) ⊕ (PitchDeviatesFromStandard(x) → OutOfTune(x))))"
    },
    {
        "NL": "Redwood trees can grow to towering heights, oak trees produce acorns, and maple trees have distinct, lobed leaves.",
        "FOL": "∀x ∀y ∀z (Redwood(x) ∧ Oak(y) ∧ Maple(z) → (ToweringHeight(x) ∧ ProducesAcorns(y) ∧ LobedLeaves(z)))"
    },
    {
        "NL": "A celestial body x is a moon if it orbits a planet y and is not a star.",
        "FOL": "∀x ∀y (CelestialBody(x) ∧ OrbitsPlanet(x, y) ∧ ¬Star(x) → Moon(x))"
    },
    {
        "NL": "A fruit is considered a berry if it has seeds on the inside and is derived from a single ovary.",
        "FOL": "∀x (Fruit(x) ∧ SeedsInside(x) ∧ DerivedFromSingleOvary(x) → Berry(x))"
    },
    {
        "NL": "A dedicated volunteer contributes time, effort, and resources to support community initiatives and create positive change.",
        "FOL": "∀x∀y (DedicatedVolunteer(x) ∧ CommunityInitiative(y) ∧ ContributesTimeEffortResources(x, y) → CreatesPositiveChange(x, y))"
    },
    {
        "NL": "A cat is chasing a mouse in the house.",
        "FOL": "∃x ∃y ∃z (Cat(x) ∧ Mouse(y) ∧ House(z) ∧ Chasing(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A bird can be considered flightless if it is unable to fly.",
        "FOL": "∀x (Bird(x) ∧ UnableToFly(x) → Flightless(x))"
    },
    {
        "NL": "A movie is a box office hit when it receives positive reviews, attracts large audiences, and generates significant revenue.",
        "FOL": "∀x (Movie(x) ∧ PositiveReviews(x) ∧ LargeAudiences(x) ∧ SignificantRevenue(x) → BoxOfficeHit(x))"
    },
    {
        "NL": "Given that not all plants are green, there is a leaf that every leaf is connected to.",
        "FOL": "¬∀x (Plant(x) → Green(x)) → ∃y (Leaf(y) ∧ ∀z (Leaf(z) → ConnectedTo(z, y)))"
    },
    {
        "NL": "Each child plays a game they enjoy and enjoys a game they do not play.",
        "FOL": "∀x (Child(x) → (∃y (Plays(x, y) ∧ Enjoys(x, y)) ∧ ∃z (Enjoys(x, z) ∧ ¬Plays(x, z))))"
    },
    {
        "NL": "A store can sell clothing, electronics, or groceries.",
        "FOL": "∀x (Store(x) → (SellsClothing(x) ∨ SellsElectronics(x) ∨ SellsGroceries(x)))"
    },
    {
        "NL": "Only employees who have completed the training course are allowed to operate the machinery.",
        "FOL": "∀x (Employee(x) ∧ OperatesMachinery(x) → CompletedTrainingCourse(x))"
    },
    {
        "NL": "A building is deemed eco-friendly if it utilizes renewable energy sources, minimizes waste, and incorporates green design elements.",
        "FOL": "∀x (Building(x) ∧ UtilizesRenewableEnergySources(x) ∧ MinimizesWaste(x) ∧ IncorporatesGreenDesignElements(x) → EcoFriendly(x))"
    },
    {
        "NL": "A mountain's altitude decreases as one moves away from its peak.",
        "FOL": "∀x ∀y ∀z (Mountain(x) ∧ Peak(x, y) ∧ MovesAwayFrom(z, y) → DecreasesAltitude(z, x))"
    },
    {
        "NL": "If an event is a concert, it features live music performances.",
        "FOL": "∀x (Event(x) ∧ Concert(x) → FeaturesLiveMusicPerformances(x))"
    },
    {
        "NL": "A painting is impressive if and only if its composition is innovative and the colors are vibrant, but it doesn't depict disturbing scenes.",
        "FOL": "∀x (Painting(x) ∧ Impressive(x) ↔ (InnovativeComposition(x) ∧ VibrantColors(x) ∧ ¬DepictDisturbingScenes(x)))"
    },
    {
        "NL": "A bank allows customers to deposit and withdraw money, as well as providing loans and other financial services.",
        "FOL": "∀x (Bank(x) → (∃y (Customer(y) ∧ Deposits(y, x) ∧ Withdraws(y, x) ∧ ProvidesLoans(x, y) ∧ ProvidesFinancialServices(x, y))))"
    },
    {
        "NL": "A tree loses its leaves during autumn if it is deciduous, while an evergreen tree retains its leaves.",
        "FOL": "∀x∀y (Tree(x) ∧ (Deciduous(x) ∧ Autumn(y) → LosesLeaves(x, y)) ∧ (Evergreen(x) → RetainsLeaves(x)))"
    },
    {
        "NL": "Any red item is rough solely if it's a box.",
        "FOL": "∀x (Red(x) → (Rough(x) → Box(x)))"
    },
    {
        "NL": "A plant thrives in an environment if it has access to sufficient sunlight, adequate water, and appropriate soil nutrients.",
        "FOL": "∀x ∀y (Plant(x) ∧ Environment(y) ∧ SufficientSunlight(x, y) ∧ AdequateWater(x, y) ∧ AppropriateSoilNutrients(x, y) → Thrives(x, y))"
    },
    {
        "NL": "A robust cybersecurity system that employs advanced threat detection, encryption methods, and regular software updates can protect sensitive data and reduce the risk of cyberattacks.",
        "FOL": "∀x (RobustCybersecuritySystem(x) → EmploysAdvancedThreatDetection(x) ∧ EmploysEncryptionMethods(x) ∧ RegularSoftwareUpdates(x) ∧ ProtectsSensitiveData(x) ∧ ReducesRiskOfCyberattacks(x))"
    },
    {
        "NL": "A device is portable if it is lightweight and has a compact design.",
        "FOL": "∀x (Device(x) ∧ Lightweight(x) ∧ CompactDesign(x) → Portable(x))"
    },
    {
        "NL": "A person is considered an archeologist if they study human history and prehistory through the excavation and analysis of artifacts and other physical remains.",
        "FOL": "∀x (Person(x) ∧ StudiesHumanHistory(x) ∧ StudiesPrehistory(x) ∧ AnalyzesArtifactsAndPhysicalRemains(x) → Archeologist(x))"
    },
    {
        "NL": "People who are smart and diligent often secure better jobs.",
        "FOL": "∀x (Person(x) ∧ Smart(x) ∧ Diligent(x) → SecureBetterJobs(x))"
    },
    {
        "NL": "No cat chases all the small mice.",
        "FOL": "¬∃x (Cat(x) ∧ ∀y (Small(y) ∧ Mouse(y) → Chases(x, y)))"
    },
    {
        "NL": "Every car has four wheels.",
        "FOL": "∀x (Car(x) → HasFourWheels(x))"
    },
    {
        "NL": "An animal is classified as an omnivore when it consumes both plants and animals as its primary food sources.",
        "FOL": "∀x ∀y ∀z (Animal(x) ∧ ConsumesPlants(x, y) ∧ ConsumesAnimals(x, z) → Omnivore(x))"
    },
    {
        "NL": "A cat sleeps while a dog barks.",
        "FOL": "∃x ∃y (Cat(x) ∧ Sleeps(x) ∧ Dog(y) ∧ Barks(y))"
    },
    {
        "NL": "A book is engaging if it has a compelling plot.",
        "FOL": "∀x (Book(x) ∧ CompellingPlot(x) → Engaging(x))"
    },
    {
        "NL": "A person is considered a teacher if they instruct and educate students in a particular subject or skill, using various methods and materials to facilitate learning.",
        "FOL": "∀x (Teacher(x) ↔ (InstructsAndEducatesStudentsInParticularSubjectOrSkill(x) ∧ UsingVariousMethodsAndMaterialsToFacilitateLearning(x)))"
    },
    {
        "NL": "A photograph is striking if it has strong composition and either vivid colors or impactful black and white.",
        "FOL": "∀x (Photograph(x) → (StrongComposition(x) ∧ (VividColors(x) ∨ ImpactfulBlackAndWhite(x)) ↔ Striking(x)))"
    },
    {
        "NL": "Rain occurs when clouds are full of moisture and the temperature and atmospheric conditions allow for precipitation.",
        "FOL": "∀x (Cloud(x) ∧ FullOfMoisture(x) ∧ TemperatureCondition(y) ∧ AtmosphericCondition(z) ∧ AllowsPrecipitation(y, z) → Rain(x))"
    },
    {
        "NL": "A greenhouse is a structure used for growing plants in a controlled environment, while a warehouse is a large building used for storing goods and merchandise.",
        "FOL": "∀x∀y (Greenhouse(x) ∧ Warehouse(y) → (GrowingPlantsInControlledEnvironment(x)) ∧ (LargeBuilding(y) ∧ StoringGoodsAndMerchandise(y)))"
    },
    {
        "NL": "A region is a rainforest if it has a high level of biodiversity, receives abundant rainfall, and contains dense vegetation.",
        "FOL": "∀x (Region(x) ∧ HighBiodiversity(x) ∧ AbundantRainfall(x) ∧ DenseVegetation(x) → Rainforest(x))"
    },
    {
        "NL": "Shopping locally, either at a farmer's market or a small business, contributes to stimulating the economy without exploiting workers.",
        "FOL": "∀x (ShopLocally(x) ∧ (FarmersMarket(x) ∨ SmallBusiness(x)) → (StimulatesEconomy(x) ∧ ¬ExploitWorkers(x)))"
    },
    {
        "NL": "Parks provide recreational spaces, where people can participate in activities such as walking, cycling, and playing sports.",
        "FOL": "∀x∀y∀z∀w (Park(x) ∧ RecreationalSpace(y) ∧ Activity(z) ∧ (Walking(w) ∨ Cycling(w) ∨ PlayingSports(w)) → ProvidesSpaceFor(x, y, z, w))"
    },
    {
        "NL": "A piece is labeled as sculpture if it is three-dimensional and formed by carving or molding material.",
        "FOL": "∀v (Piece(v) ∧ ThreeDimensional(v) ∧ FormedByCarvingOrMolding(v) → Sculpture(v))"
    },
    {
        "NL": "A glass panel allows light through when it is clear or shiny.",
        "FOL": "∀x (GlassPanel(x) ∧ (Clear(x) ∨ Shiny(x)) → AllowsLightThrough(x))"
    },
    {
        "NL": "No teachers are successful unless they are knowledgeable, but all of them aspire to educate.",
        "FOL": "∀x (Teacher(x) → (¬Successful(x) ∨ Knowledgeable(x))) ∧ ∀y (Teacher(y) → AspiresToEducate(y))"
    },
    {
        "NL": "An element is a noble gas if it has a full valence electron shell.",
        "FOL": "∀x (Element(x) ∧ FullValenceElectronShell(x) → NobleGas(x))"
    },
    {
        "NL": "A scientific study that is based on a large sample size, utilizes robust methodology, and employs accurate data analysis can produce reliable results.",
        "FOL": "∀x (ScientificStudy(x) ∧ LargeSampleSize(x) ∧ RobustMethodology(x) ∧ AccurateDataAnalysis(x) → ProducesReliableResults(x))"
    },
    {
        "NL": "If a bird doesn't migrate, it could be a resident species or an invasive species.",
        "FOL": "∀x (Bird(x) ∧ ¬Migrates(x) → (ResidentSpecies(x) ∨ InvasiveSpecies(x)))"
    },
    {
        "NL": "A runner wins if they finish first in the race and abide by the rules.",
        "FOL": "∀x (Runner(x) ∧ FinishFirst(x) ∧ AbideRules(x) → Win(x))"
    },
    {
        "NL": "A laptop can perform tasks efficiently if it has a powerful processor and sufficient memory.",
        "FOL": "∀x∀y∀z (Laptop(x) ∧ PowerfulProcessor(x, y) ∧ SufficientMemory(x, z) → PerformsTasksEfficiently(x))"
    },
    {
        "NL": "A dish is a salad if it mainly consists of a mixture of raw or cooked vegetables and is served cold.",
        "FOL": "∀x (Dish(x) ∧ MixtureOfVegetables(x) ∧ ServedCold(x) → Salad(x))"
    },
    {
        "NL": "A device that consumes solar energy for operation, can be refueled through a solar panel, and aids in cutting down carbon emissions is a solar device.",
        "FOL": "∀x ∀y (Device(x) ∧ SolarPanel(y) ∧ ConsumesSolarEnergy(x) ∧ Refuelable(x, y) ∧ AidInCuttingDownCarbonEmissions(x) → SolarDevice(x))"
    },
    {
        "NL": "A dancer performs in a theater if they are part of a dance company and have rehearsed the choreography.",
        "FOL": "∀x∀y (Dancer(x) ∧ Theater(y) ∧ DanceCompany(x) ∧ RehearsedChoreography(x) → PerformsIn(x, y))"
    },
    {
        "NL": "Every small star is blue.",
        "FOL": "∀x (Small(x) ∧ Star(x) → Blue(x))"
    },
    {
        "NL": "A mammal that is nocturnal, hibernates, and eats insects is a bear.",
        "FOL": "∀x (Mammal(x) ∧ IsNocturnal(x) ∧ Hibernates(x) ∧ EatsInsects(x) → Bear(x))"
    },
    {
        "NL": "You need a ticket to enter a museum or a movie theater.",
        "FOL": "∀x∀y (Person(x) ∧ (Museum(y) ∨ MovieTheater(y)) → NeedsTicket(x, y))"
    },
    {
        "NL": "A person is considered a professional athlete if they play a sport and earn a significant income from it.",
        "FOL": "∀x (Person(x) ∧ PlaysSport(x) ∧ EarnsSignificantIncome(x) → ProfessionalAthlete(x))"
    },
    {
        "NL": "A vehicle is electric if it does not require any gasoline.",
        "FOL": "∀x (Vehicle(x) ∧ ¬RequireGasoline(x) → Electric(x))"
    },
    {
        "NL": "All squares are rectangles.",
        "FOL": "∀x (Square(x) → Rectangle(x))"
    },
    {
        "NL": "A chef who specializes in desserts creates pastries, cakes, or ice cream.",
        "FOL": "∀x (Chef(x) ∧ DessertSpecialist(x) → CreatesPastries(x) ∨ CreatesCakes(x) ∨ CreatesIceCream(x))"
    },
    {
        "NL": "An individual is a cousin if they are the child of another individual's aunt or uncle.",
        "FOL": "∀x ∃y ∃z (Individual(x) ∧ Individual(y) ∧ Individual(z) ∧ ChildOf(x, y) ∧ (AuntOf(y, z) ∨ UncleOf(y, z)) → Cousin(x))"
    },
    {
        "NL": "A car is either manual or automatic, but not both.",
        "FOL": "∀w (Car(w) → (Manual(w) ⊕ Automatic(w)))"
    },
    {
        "NL": "Animals can communicate with each other using sounds and gestures.",
        "FOL": "∀x∀y (Animal(x) ∧ Animal(y) → (CommunicatesWithUsingSounds(x, y) ∨ CommunicatesWithUsingGestures(x, y)))"
    },
    {
        "NL": "A building is a library if it houses books, is accessible to everyone, and encourages reading.",
        "FOL": "∀x (Building(x) ∧ HousesBooks(x) ∧ AccessibleToEveryone(x) ∧ EncouragesReading(x) → Library(x))"
    },
    {
        "NL": "A trapezoid reflects a polygon only if that polygon reflects back to it.",
        "FOL": "∀x (Trapezoid(x) → ∀y (Polygon(y) ∧ Reflects(x, y) → Reflects(y, x)))"
    },
    {
        "NL": "If a person is a gardener, they either tend to flowers or vegetables.",
        "FOL": "∀x (Person(x) ∧ Gardener(x) → TendToFlowers(x) ⊕ TendToVegetables(x))"
    },
    {
        "NL": "A bicycle is propelled forward when the rider pedals and the chain transfers motion to the wheels.",
        "FOL": "∀x∀y∀z (Bicycle(x) ∧ Rider(y) ∧ Chain(z) ∧ Pedals(y, x) ∧ TransfersMotion(z, x) → PropelsForward(x))"
    },
    {
        "NL": "All birds have wings and lay eggs.",
        "FOL": "∀x (Bird(x) → (HasWings(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A particle is a subatomic particle if it is smaller than an atom and is a constituent of atomic nuclei or exists outside them.",
        "FOL": "∀x (SubatomicParticle(x) → (Particle(x) ∧ SmallerThanAtom(x) ∧ (∃y (AtomicNucleus(y) ∧ ConstituentOf(x, y)) ∨ ExistsOutsideAtomicNuclei(x))))"
    },
    {
        "NL": "Some birds are small and beautiful.",
        "FOL": "∃x (Bird(x) ∧ Small(x) ∧ Beautiful(x))"
    },
    {
        "NL": "For a planet to be habitable, it must orbit a star and have an atmosphere.",
        "FOL": "∀x (Planet(x) ∧ Habitable(x) → (OrbitsStar(x) ∧ HasAtmosphere(x)))"
    },
    {
        "NL": "Not all apples on the tree are redder than all apples in the basket.",
        "FOL": "¬∀x ∀y (Apple(x) ∧ On(x, tree) ∧ Apple(y) ∧ In(y, basket) → Redder(x, y))"
    },
    {
        "NL": "It is not the case that there exists a rectangle that leads to all small squares.",
        "FOL": "¬∃x (Rectangle(x) ∧ ∀y (Small(y) ∧ Square(y) → LeadsTo(x, y)))"
    },
    {
        "NL": "An event is considered a natural phenomenon if it occurs without human intervention, results from natural processes, and has observable effects on the environment.",
        "FOL": "∀x (Event(x) ∧ OccursWithoutHumanIntervention(x) ∧ ResultsFromNaturalProcesses(x) ∧ ObservableEffectsOnEnvironment(x) → NaturalPhenomenon(x))"
    },
    {
        "NL": "A pharmacy dispenses prescription medications, over-the-counter drugs, and other healthcare products, often providing consultation and advice to customers about their health and wellness.",
        "FOL": "∀x (Pharmacy(x) → DispensesPrescriptionMedicationsAndOTCDrugs(x) ∧ OffersHealthcareProducts(x) ∧ ProvidesConsultationAndAdvice(x))"
    },
    {
        "NL": "When the sky is clear at night, you can see stars, but during the day, they are not visible due to sunlight.",
        "FOL": "∀x ∀y (Sky(x) ∧ Night(y) ∧ Clear(x) → StarsVisible(x, y)) ∧ (Sky(x) ∧ Day(y) ∧ Sunlight(y) → ¬StarsVisible(x, y))"
    },
    {
        "NL": "A trapezoid has one pair of parallel sides.",
        "FOL": "∀x (Trapezoid(x) → HasOnePairOfParallelSides(x))"
    },
    {
        "NL": "A park is crowded if there are many people and no open spaces or it hosts a special event.",
        "FOL": "∀x (Park(x) ∧ (ManyPeople(x) ∧ NoOpenSpaces(x) ∨ SpecialEvent(x)) → Crowded(x))"
    },
    {
        "NL": "Something is dull pentagon only if it is green.",
        "FOL": "∀x (Dull(x) → (Pentagon(x) → Green(x)))"
    },
    {
        "NL": "A game that is played on a board, involves strategy and skill, and has a set of specific rules is a board game.",
        "FOL": "∀x (Game(x) ∧ PlayedOnBoard(x) ∧ InvolvesStrategyAndSkill(x) ∧ HasSpecificRules(x) → BoardGame(x))"
    },
    {
        "NL": "A tree is deciduous if it sheds its leaves annually and regrows them the following season.",
        "FOL": "∀x (Tree(x) ∧ ShedsLeavesAnnually(x) ∧ RegrowsLeavesFollowingSeason(x) → Deciduous(x))"
    },
    {
        "NL": "A movie that is a comedy and a romance must also be a romantic comedy.",
        "FOL": "∀x (Movie(x) ∧ Comedy(x) ∧ Romance(x) → RomanticComedy(x))"
    },
    {
        "NL": "An orchard grows various fruit trees, including apple, pear, and cherry trees.",
        "FOL": "∀x (Orchard(x) → Grow(x, apple_tree) ∨ Grow(x, pear_tree) ∨ Grow(x, cherry_tree))"
    },
    {
        "NL": "A plane can fly if it has a working engine and its fuel tank is not empty.",
        "FOL": "∀x (Plane(x) ∧ WorkingEngine(x) ∧ ¬EmptyFuelTank(x) → CanFly(x))"
    },
    {
        "NL": "A person is considered a hairdresser if they cut, style, and maintain the appearance of hair using various tools, products, and techniques.",
        "FOL": "∀x (Hairdresser(x) ↔ (CutsStylesAndMaintainsHairAppearance(x) ∧ UsingVariousToolsProductsAndTechniques(x)))"
    },
    {
        "NL": "A type of vehicle that is designed for off-road use and has large, rugged tires, a high ground clearance, and often four-wheel drive, is an all-terrain vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForOffRoad(x) ∧ LargeRuggedTires(x) ∧ HighGroundClearance(x) ∧ OftenFourWheelDrive(x) → AllTerrainVehicle(x))"
    },
    {
        "NL": "A building that functions as a school or a hospital does not permit smoking on its premises.",
        "FOL": "∀x (Building(x) ∧ (Function(x, School) ∨ Function(x, Hospital)) → ¬PermitsSmoking(x))"
    },
    {
        "NL": "A song becomes popular if it receives widespread radio play or has a high number of online streams and positive reviews.",
        "FOL": "∀x (Song(x) → (Popular(x) ↔ (WidespreadRadioPlay(x) ∨ (HighNumberOfOnlineStreams(x) ∧ PositiveReviews(x)))))"
    },
    {
        "NL": "There is a habitat that all animals live in.",
        "FOL": "∃x (Habitat(x) ∧ ∀y (Animal(y) → LiveIn(y, x)))"
    },
    {
        "NL": "Not all physicians are either cardiologists or neurologists, and none of them dislikes patients.",
        "FOL": "¬∀x (Physician(x) → (Cardiologist(x) ∨ Neurologist(x))) ∧ ∀y (Physician(y) → ¬DislikePatients(y))"
    },
    {
        "NL": "A runner is triumphant if they finish more laps than their rival.",
        "FOL": "∀x ∀y (Runner(x) ∧ Rival(y) ∧ FinishMoreLaps(x, y) → Triumphant(x))"
    },
    {
        "NL": "A sauce is tangy if it has vinegar or lemon as an ingredient.",
        "FOL": "∀x (Sauce(x) ∧ (HasVinegar(x) ∨ HasLemon(x)) → Tangy(x))"
    },
    {
        "NL": "Cats are feline, while dogs are canine.",
        "FOL": "∀x (Cat(x) → Feline(x)) ∧ ∀y (Dog(y) → Canine(y))"
    },
    {
        "NL": "A smartphone has a touch screen and a camera.",
        "FOL": "∀x (Smartphone(x) → (HasTouchScreen(x) ∧ HasCamera(x)))"
    },
    {
        "NL": "Certain foods are either fruits or vegetables.",
        "FOL": "∃x (Food(x) ∧ (Fruit(x) ⊕ Vegetable(x)))"
    },
    {
        "NL": "A film captivates audiences when it features a compelling story, strong performances, and skillful cinematography.",
        "FOL": "∀x∀y∀z∀w (Film(x) ∧ Story(y) ∧ Performances(z) ∧ Cinematography(w) ∧ Compelling(y) ∧ Strong(z) ∧ Skillful(w) → CaptivatesAudiences(x))"
    },
    {
        "NL": "A food substance that is sweet, is high in calories and is harmful to diabetic patients is sugar.",
        "FOL": "∀x (FoodSubstance(x) ∧ IsSweet(x) ∧ HighInCalories(x) ∧ HarmfulToDiabetics(x) → Sugar(x))"
    },
    {
        "NL": "If all students who will pass are studious, then some classmates will not pass.",
        "FOL": "∀x (Student(x) ∧ Pass(x) → Studious(x)) → ∃y (Classmate(y) ∧ ¬Pass(y))"
    },
    {
        "NL": "Rainforests are home to numerous species of animals, many of which are endangered due to deforestation.",
        "FOL": "∀x ∀y ∀z (Rainforest(x) ∧ Animal(y) ∧ Species(y, z) ∧ LivesIn(y, x) ∧ Deforestation(z) → Endangered(y))"
    },
    {
        "NL": "A cheetah pursues rabbits for nourishment, whereas an eagle consumes the residue of defunct animals.",
        "FOL": "∀x ∀y (Cheetah(x) ∧ Rabbit(y) → PursuesForNourishment(x, y)) ∧ ∀z ∀w (Eagle(z) ∧ DefunctAnimal(w) → ConsumesResidueOf(z, w))"
    },
    {
        "NL": "A library lends books to members who have a valid library card.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Book(y) ∧ Member(z) ∧ HasValidLibraryCard(z) → Lends(x, y, z))"
    },
    {
        "NL": "A triangle is isosceles if two sides have equal length.",
        "FOL": "∀x (Triangle(x) ∧ Isosceles(x) → ∃y ∃z (Side(y, x) ∧ Side(z, x) ∧ EqualLength(y, z)))"
    },
    {
        "NL": "Lions are not always fierce.",
        "FOL": "∃x (Lion(x) ∧ ¬Fierce(x))"
    },
    {
        "NL": "A bird that cannot fly and has a unique waddling gait is a penguin.",
        "FOL": "∀x (Bird(x) ∧ CannotFly(x) ∧ UniqueWaddlingGait(x) → Penguin(x))"
    },
    {
        "NL": "A photograph x is black and white if it has no color and uses grayscale.",
        "FOL": "∀x (Photograph(x) ∧ ¬Color(x) ∧ Grayscale(x) → BlackAndWhite(x))"
    },
    {
        "NL": "A doctor prescribes medication to a patient for a specific illness.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Illness(z) ∧ PrescribesMedicationFor(x, y, z) → Treatment(y, z))"
    },
    {
        "NL": "Birds have feathers, lay eggs, and most species are capable of flight.",
        "FOL": "∀x (Bird(x) → (HasFeathers(x) ∧ LaysEggs(x) ∧ CapableOfFlight(x)))"
    },
    {
        "NL": "Pencils have a graphite core and can be sharpened for writing.",
        "FOL": "∀x∀y∀z (Pencil(x) → (GraphiteCore(y) ∧ Has(x, y)) ∧ (CanBeSharpened(z) ∧ ForWriting(x, z)))"
    },
    {
        "NL": "For a door to be unlocked, it must be closed and either have a key inserted or a valid code entered.",
        "FOL": "∀x∀y∀z (Door(x) ∧ Closed(x) ∧ (HasKey(y) ⊕ ValidCode(z)) → Unlocked(x))"
    },
    {
        "NL": "Some musicians are either violinists or guitarists, but not both.",
        "FOL": "∃x (Musician(x) ∧ (Violinist(x) ⊕ Guitarist(x)))"
    },
    {
        "NL": "Rivers and streams carry water from high elevations to lower elevations, eventually flowing into seas or oceans.",
        "FOL": "∀x ∀y (River(x) ∧ Stream(y) → (CarriesWaterFromHighToLowElevations(x) ∧ FlowsIntoSeasOrOceans(x)))"
    },
    {
        "NL": "A fish swims in fresh or salt water.",
        "FOL": "∀x (Fish(x) → (SwimsIn(x, FreshWater) ∨ SwimsIn(x, SaltWater)))"
    },
    {
        "NL": "Teachers educate students in schools.",
        "FOL": "∀x ∀y ∀z (Teacher(x) ∧ Student(y) ∧ School(z) → EducatesIn(x, y, z))"
    },
    {
        "NL": "An object that is heavier than air and can fly is an airplane if it has wings and is powered by engines.",
        "FOL": "∀x (Object(x) ∧ HeavierThanAir(x) ∧ CanFly(x) ∧ HasWings(x) ∧ PoweredByEngines(x) → Airplane(x))"
    },
    {
        "NL": "An antibiotic is a type of medication that fights bacterial infections by killing bacteria or inhibiting their growth.",
        "FOL": "∀x∀y (Antibiotic(x) ∧ BacterialInfection(y) → (KillsBacteria(x, y) ∨ InhibitsBacterialGrowth(x, y)))"
    },
    {
        "NL": "A wind turbine converts wind energy into electricity by rotating its blades, transferring kinetic energy to a generator, and sending the generated power to a grid.",
        "FOL": "∀x (WindTurbine(x) → (∃y (ConvertsWindEnergyIntoElectricity(x, y) ∧ RotatesBlades(x) ∧ TransfersKineticEnergyToGenerator(x) ∧ SendsGeneratedPowerToGrid(y))))"
    },
    {
        "NL": "A film is considered a box office success if it has a high revenue, positive reviews, and a large number of viewers.",
        "FOL": "∀x ∀y ∀z (Film(x) ∧ HighRevenue(x, y) ∧ PositiveReviews(x, z) ∧ LargeNumberOfViewers(x) → BoxOfficeSuccess(x))"
    },
    {
        "NL": "Countries with a high literacy rate often have a high quality of life.",
        "FOL": "∀x (Country(x) ∧ HighLiteracyRate(x) → HighQualityOfLife(x))"
    },
    {
        "NL": "A person who exercises regularly and follows a balanced diet is more likely to maintain a healthy weight.",
        "FOL": "∀x (Person(x) ∧ ExercisesRegularly(x) ∧ FollowsBalancedDiet(x) → LikelyToMaintainHealthyWeight(x))"
    },
    {
        "NL": "The courier leaves the depot and delivers the parcel to a house without treating any other locations.",
        "FOL": "∃x ∃y ∃z (Courier(x) ∧ Depot(y) ∧ House(z) → LeavesFrom(x, y) ∧ DeliversTo(x, z) ∧ ¬∃w (Location(w) ∧ TreatsAt(x, w)))"
    },
    {
        "NL": "Fish swim.",
        "FOL": "∀x (Fish(x) → Swims(x))"
    },
    {
        "NL": "Every chef is talented or a few mountains are high if and only if there exists a dish which is delicious unless there are no diners.",
        "FOL": "(∀x (Chef(x) → Talented(x)) ∨ ∃y (Mountain(y) ∧ High(y))) ↔ (∃z (Dish(z) ∧ (Delicious(z) ∨ ∀w (¬Diner(w)))))"
    },
    {
        "NL": "Nothing except truth merits trust.",
        "FOL": "∀y (¬Truth(y) → ¬MeritsTrust(y))"
    },
    {
        "NL": "If a tool is a part of a garden set, it is a spade, rake, or hose.",
        "FOL": "∀x (Tool(x) ∧ PartOfGardenSet(x) → Spade(x) ∨ Rake(x) ∨ Hose(x))"
    },
    {
        "NL": "A building is well-maintained if it is clean, has functioning utilities, and is structurally sound.",
        "FOL": "∀x (Building(x) ∧ Clean(x) ∧ FunctioningUtilities(x) ∧ StructurallySound(x) → WellMaintained(x))"
    },
    {
        "NL": "Lavenders are purple, dahlias are red, and petunias are pink.",
        "FOL": "∀x (Lavender(x) → Purple(x)) ∧ ∀y (Dahlia(y) → Red(y)) ∧ ∀z (Petunia(z) → Pink(z))"
    },
    {
        "NL": "All carnivorous animals need to consume meat to survive.",
        "FOL": "∀x (CarnivorousAnimal(x) → NeedsMeatToSurvive(x))"
    },
    {
        "NL": "Sara is a programmer or Noah is a banker or Charlotte is a therapist.",
        "FOL": "Programmer(sara) ∨ Banker(noah) ∨ Therapist(charlotte)"
    },
    {
        "NL": "Not all flowers produce fruit.",
        "FOL": "¬∀x (Flower(x) → ProducesFruit(x))"
    },
    {
        "NL": "A predator hunts and consumes its prey for sustenance and energy.",
        "FOL": "∀x∀y (Predator(x) ∧ Prey(y) → HuntsAndConsumesForSustenanceAndEnergy(x, y))"
    },
    {
        "NL": "Pilots fly airplanes, sailors navigate ships, and astronauts travel to space.",
        "FOL": "∀x ∀y (Pilot(x) → FliesAirplanes(x, y)) ∧ ∀z ∀w (Sailor(z) → NavigatesShips(z, w)) ∧ ∀u (Astronaut(u) → TravelsToSpace(u))"
    },
    {
        "NL": "A programming intern is deemed intelligent if and only if they work overtime or they are an expert.",
        "FOL": "∀x (ProgrammingIntern(x) → (Intelligent(x) ↔ (WorksOvertime(x) ∨ Expert(x))))"
    },
    {
        "NL": "A fruit is ripe if it is both soft and sweet.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ↔ (Soft(x) ∧ Sweet(x))))"
    },
    {
        "NL": "Although all books contain words, no tome contains a chapter that is larger than itself.",
        "FOL": "∀x ∃y (Contains(x, y)) ∧ ¬∃w ∃z (Contains(w, z) ∧ LargerThan(z, w))"
    },
    {
        "NL": "A museum exhibits artifacts, artwork, or other items of historical and cultural significance.",
        "FOL": "∀x (Museum(x) → (ExhibitsArtifacts(x) ∨ ExhibitsArtwork(x) ∨ ExhibitsHistoricalItems(x)))"
    },
    {
        "NL": "An object is a diamond if it shines bright, is hard, and transparent.",
        "FOL": "∀x (Object(x) → ShinesBright(x) ∧ IsHard(x) ∧ IsTransparent(x) → Diamond(x))"
    },
    {
        "NL": "An orchestra delivers a harmonious performance when the musicians are in sync, the conductor is skilled, and the acoustics are balanced.",
        "FOL": "∀x ∀y ∀z (Orchestra(x) ∧ MusiciansInSync(x, y) ∧ SkilledConductor(x, z) ∧ BalancedAcoustics(x) → HarmoniousPerformance(x))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it is powered by batteries and does not use an internal combustion engine.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByBatteries(x) ∧ ¬UsesInternalCombustionEngine(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A person is considered an athlete if they participate in a sport and engage in regular physical training.",
        "FOL": "∀x (Athlete(x) ↔ (Person(x) ∧ ParticipatesInSport(x) ∧ EngagesInRegularPhysicalTraining(x)))"
    },
    {
        "NL": "In a garden, flowers and plants grow, and may be visited by insects such as bees and butterflies for pollination.",
        "FOL": "∀x ∀y (Garden(x) ∧ (Flower(y) ∨ Plant(y)) → (GrowsIn(x, y) ∧ (∃z (Bee(z) ∨ Butterfly(z)) ∧ MayBeVisitedBy(y, z))))"
    },
    {
        "NL": "A student studies mathematics, while a teacher teaches chemistry.",
        "FOL": "∃x ∃y (Student(x) ∧ Teacher(y) ∧ Studies(x, Mathematics) ∧ Teaches(y, Chemistry))"
    },
    {
        "NL": "An animal that is native to a specific region, has a distinct appearance, and plays a crucial role in the ecosystem is typically an endemic species or a keystone species.",
        "FOL": "∀x∀y∀z (Animal(x) ∧ NativeToSpecificRegion(x, y) ∧ DistinctAppearance(x) ∧ CrucialRoleInEcosystem(x, z) → (EndemicSpecies(x) ∨ KeystoneSpecies(x)))"
    },
    {
        "NL": "An athlete is considered fast if they can run 100 meters in under 10 seconds.",
        "FOL": "∀x (Athlete(x) ∧ Runs100MetersUnder10Seconds(x) → Fast(x))"
    },
    {
        "NL": "A museum displays an artifact if the artifact is historically significant, the museum has the rights to display it, and it is properly preserved.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Artifact(y) ∧ HistoricallySignificant(y) ∧ DisplayRights(x, y) ∧ ProperPreservation(z, y) ∧ LocatedIn(z, x) → Displays(x, y))"
    },
    {
        "NL": "A person who avoids consuming processed foods is more likely to have a healthier diet.",
        "FOL": "∀x (AvoidsProcessedFoods(x) → HealthierDiet(x))"
    },
    {
        "NL": "There are altos who respect only those bass who are softer than they.",
        "FOL": "∃x ∀y (Alto(x) ∧ Bass(y) ∧ SofterThan(y, x) → Respect(x, y))"
    },
    {
        "NL": "A volcano that has not erupted for a long time and is unlikely to erupt in the near future is considered dormant.",
        "FOL": "∀x ((Volcano(x) ∧ HasNotEruptedForLongTime(x) ∧ UnlikelyToEruptInNearFuture(x)) → Dormant(x))"
    },
    {
        "NL": "A city with a high population density and an extensive public transportation system is considered urban.",
        "FOL": "∀x (City(x) ∧ HighPopulationDensity(x) ∧ ExtensivePublicTransportation(x) → Urban(x))"
    },
    {
        "NL": "An author writes a book, which is then published by a publisher.",
        "FOL": "∀x ∀y ∀z (Author(x) ∧ Book(y) ∧ Publisher(z) → (Writes(x, y) ∧ PublishedBy(y, z)))"
    },
    {
        "NL": "A library lends books to patrons, while a bookstore sells them.",
        "FOL": "∀x∀y (Library(x) ∧ Bookstore(y) → (LendsBooks(x) ∧ SellsBooks(y)))"
    },
    {
        "NL": "Some trees have broad leaves, while others have needles.",
        "FOL": "∃x (Tree(x) ∧ BroadLeaves(x)) ∧ ∃y (Tree(y) ∧ Needles(y))"
    },
    {
        "NL": "Every movie that is captivating and well-directed becomes a blockbuster.",
        "FOL": "∀x (Movie(x) ∧ Captivating(x) ∧ WellDirected(x) → Blockbuster(x))"
    },
    {
        "NL": "A musical instrument can be a string instrument, wind instrument, or percussion instrument.",
        "FOL": "∀x (MusicalInstrument(x) → (StringInstrument(x) ∨ WindInstrument(x) ∨ PercussionInstrument(x)))"
    },
    {
        "NL": "A seed germinates in the presence of water and sunlight, eventually growing into a mature plant.",
        "FOL": "∀x ∀y ∀z (Seed(x) ∧ Germination(g) ∧ Water(w) ∧ Sunlight(y) ∧ MaturePlant(z) → GerminatesAndGrows(x, g, w, y, z))"
    },
    {
        "NL": "All humans are either male or female.",
        "FOL": "∀x (Human(x) → (Male(x) ⊕ Female(x)))"
    },
    {
        "NL": "An athlete qualifies for a team if they demonstrate skill, discipline, and teamwork.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Team(y) ∧ DemonstratesSkill(x) ∧ DemonstratesDiscipline(x) ∧ DemonstratesTeamwork(x) → QualifiesForTeam(x, y))"
    },
    {
        "NL": "A place where people gather for social or educational purposes, but not for religious activities, can be a community center.",
        "FOL": "∀x (Place(x) ∧ PeopleGatherForSocialOrEducationalPurposes(x) ∧ ¬GatherForReligiousActivities(x) → CommunityCenter(x))"
    },
    {
        "NL": "A cat is chasing a mouse in the barn.",
        "FOL": "∃x ∃y (Cat(x) ∧ Mouse(y) ∧ Chasing(x, y) ∧ InTheBarn(x))"
    },
    {
        "NL": "Not every artist who paints portraits or landscapes has exhibited in a gallery or sold an artwork.",
        "FOL": "¬∀x (Artist(x) ∧ (PaintsPortraits(x) ∨ PaintsLandscapes(x)) → (ExhibitedInGallery(x) ∨ SoldArtwork(x)))"
    },
    {
        "NL": "An animal is nocturnal if it is most active during the night.",
        "FOL": "∀x (Animal(x) ∧ ActiveAtNight(x) → Nocturnal(x))"
    },
    {
        "NL": "A cake is a popular choice for celebrations when it is moist, flavorful, and has an appealing presentation, but it is not ideal for people on a diet.",
        "FOL": "∀x (Cake(x) ∧ PopularForCelebrations(x) ↔ (Moist(x) ∧ Flavorful(x) ∧ AppealingPresentation(x) ∧ ¬OnDiet(x)))"
    },
    {
        "NL": "A type of vehicle that is designed for traveling on snow and ice, typically with skis on the front and tracks on the back, is a snowmobile.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForSnowTravel(x) ∧ DesignedForIceTravel(x) ∧ HasSkisOnFront(x) ∧ HasTracksOnBack(x) → Snowmobile(x))"
    },
    {
        "NL": "If one book is longer than another, then there is a book between them in terms of length.",
        "FOL": "∀x ∀y ∃z (Book(x) ∧ Book(y) ∧ Book(z) ∧ LongerThan(x, y) → BetweenInLength(z, x, y))"
    },
    {
        "NL": "A person is either asleep or awake, never both.",
        "FOL": "∀x (Person(x) → (Asleep(x) ⊕ Awake(x)))"
    },
    {
        "NL": "A medication that effectively treats symptoms and has minimal side effects is more likely to be prescribed by doctors.",
        "FOL": "∀x (Medication(x) ∧ EffectivelyTreatsSymptoms(x) ∧ MinimalSideEffects(x) → MoreLikelyToBePrescribedByDoctors(x))"
    },
    {
        "NL": "A vehicle is considered environmentally friendly if it runs on electricity or uses renewable energy sources.",
        "FOL": "∀x (Vehicle(x) ∧ (RunsOnElectricity(x) ∨ UsesRenewableEnergySources(x)) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "A mechanic is fixing in a busy workshop.",
        "FOL": "∃x ∃y (Mechanic(x) ∧ Fixing(x) ∧ BusyWorkshop(y) ∧ In(x, y))"
    },
    {
        "NL": "A doctor x prescribes a medication y to a patient z if y is appropriate for z's condition and x is licensed.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Medication(y) ∧ Patient(z) ∧ AppropriateForCondition(y, z) ∧ Licensed(x) → Prescribes(x, y, z))"
    },
    {
        "NL": "A city's public transportation system may include buses, trains, or trams.",
        "FOL": "∀x (City(x) ∧ PublicTransportation(x, y) ∧ (Buses(y) ∨ Trains(y) ∨ Trams(y)) → System(x, y))"
    },
    {
        "NL": "Not all cooks master the art of cuisine, but every committed cook provides satisfaction.",
        "FOL": "¬∀x (Cook(x) → MastersArt(x)) ∧ ∀y (Committed(y) ∧ Cook(y) → ProvidesSatisfaction(y))"
    },
    {
        "NL": "A plant relies on pollinators to reproduce if it produces flowers with nectar, has a specific pollinator species, and depends on the pollinator for transferring pollen.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ Flower(y) ∧ Pollinator(z) ∧ ProducesNectar(x, y) ∧ SpecificPollinatorSpecies(x, z) ∧ DependsOnPollinatorForPollenTransfer(x, z) → ReliesOnPollinators(x))"
    },
    {
        "NL": "Mammals give birth to live young and nurse them with milk.",
        "FOL": "∀x (Mammal(x) → (GivesBirthToLiveYoung(x) ∧ NursesWithMilk(x)))"
    },
    {
        "NL": "Kelly fears Leo if and only if Leo fears Kelly.",
        "FOL": "Fear(kelly, leo) ↔ Fear(leo, kelly)"
    },
    {
        "NL": "A movie is loved if it has an engaging plot, brilliant cinematography, and a talented cast.",
        "FOL": "∀x (Movie(x) ∧ HasEngagingPlot(x) ∧ HasBrilliantCinematography(x) ∧ HasTalentedCast(x) → IsLoved(x))"
    },
    {
        "NL": "Some paintings are made by one artist, while others are collaborative works.",
        "FOL": "∀x (Painting(x) → MadeByOneArtist(x) ⊕ CollaborativeWork(x))"
    },
    {
        "NL": "A pilot is flying an airplane in the sky, or a sailor is sailing a ship in the sea.",
        "FOL": "∃x ∃y (Pilot(x) ∧ Airplane(y) ∧ Flying(x, y) ∧ InTheSky(x)) ∨ ∃z ∃w (Sailor(z) ∧ Ship(w) ∧ Sailing(z, w) ∧ InTheSea(z))"
    },
    {
        "NL": "All humans sleep if there is no machine that works.",
        "FOL": "¬∃x (Machine(x) ∧ Works(x)) → ∀y (Human(y) → Sleep(y))"
    },
    {
        "NL": "A transportation system is considered an efficient public transit system if it serves a large number of people, has a high frequency of service, and reduces overall traffic congestion.",
        "FOL": "∀x ∀y ∀z (TransportationSystem(x) ∧ ServesLargeNumberOfPeople(x, y) ∧ HighFrequencyOfService(x) ∧ ReducesTrafficCongestion(x, z) → EfficientPublicTransit(x))"
    },
    {
        "NL": "A book is categorized as a mystery novel if it features a suspenseful plot, includes clues and red herrings, and centers around solving a crime or puzzle.",
        "FOL": "∀x (Book(x) ∧ SuspensefulPlot(x) ∧ IncludesCluesAndRedHerrings(x) ∧ CentersAroundSolvingCrimeOrPuzzle(x) → MysteryNovel(x))"
    },
    {
        "NL": "A city with more green spaces has a higher quality of life.",
        "FOL": "∀x (City(x) ∧ MoreGreenSpaces(x) → HigherQualityOfLife(x))"
    },
    {
        "NL": "Not all newspapers are bought but all of them are not interesting.",
        "FOL": "¬∀x (Newspaper(x) → Bought(x)) ∧ ∀y (Newspaper(y) → ¬Interesting(y))"
    },
    {
        "NL": "Roses or daisies are popular garden flowers.",
        "FOL": "∃x (PopularGardenFlower(x) ∧ (Rose(x) ∨ Daisy(x)))"
    },
    {
        "NL": "A substance is an acid if it donates protons or accepts electrons, while a base accepts protons or donates electrons.",
        "FOL": "∀x (Substance(x) ∧ (DonatesProtons(x) ∨ AcceptsElectrons(x)) → Acid(x)) ∧ ∀y (Substance(y) ∧ (AcceptsProtons(y) ∨ DonatesElectrons(y)) → Base(y))"
    },
    {
        "NL": "A candy is sweet if it contains honey or maple syrup as an ingredient.",
        "FOL": "∀x (Candy(x) ∧ (ContainsHoney(x) ∨ ContainsMapleSyrup(x)) → Sweet(x))"
    },
    {
        "NL": "A city is considered walkable if it has well-maintained sidewalks, safe crossings, and plenty of green spaces.",
        "FOL": "∀x (City(x) ∧ WellMaintainedSidewalks(x) ∧ SafeCrossings(x) ∧ GreenSpaces(x) → Walkable(x))"
    },
    {
        "NL": "Every kid is either at the park or at the school.",
        "FOL": "∀x (Kid(x) → (AtPark(x) ⊕ AtSchool(x)))"
    },
    {
        "NL": "When a cell phone battery is depleted, it needs to be recharged.",
        "FOL": "∀x (CellPhone(x) ∧ BatteryDepleted(x) → NeedsRecharge(x))"
    },
    {
        "NL": "Peter trusts Paul only if Paul trusts Peter back.",
        "FOL": "∀x ∀y (Peter(x) ∧ Paul(y) ∧ (Trusts(x, y) → Trusts(y, x)))"
    },
    {
        "NL": "A book can be fiction, non-fiction, or poetry, but not a mix of these categories.",
        "FOL": "∀x (Book(x) → ((Fiction(x) ∨ NonFiction(x) ∨ Poetry(x)) ∧ ¬(Fiction(x) ∧ NonFiction(x)) ∧ ¬(Fiction(x) ∧ Poetry(x)) ∧ ¬(NonFiction(x) ∧ Poetry(x))))"
    },
    {
        "NL": "An apple tree is a tree that yields fruits, a palm tree is a tree with long fronds, and a fir tree is a tree with thin needles and cones.",
        "FOL": "∀x ∃y (AppleTree(x) → Fruit(y) ∧ Yield(x, y)) ∧ ∀z (PalmTree(z) → HasLongFronds(z)) ∧ ∀w (FirTree(w) → HasThinNeedles(w) ∧ HasCone(w))"
    },
    {
        "NL": "Cats with long hair require more frequent grooming than those with short hair.",
        "FOL": "∀x ∀y (Cat(x) ∧ LongHair(x) ∧ Cat(y) ∧ ShortHair(y) → MoreFrequentGroomingRequired(x, y))"
    },
    {
        "NL": "An object is considered a vehicle if it is designed for transporting people or goods.",
        "FOL": "∀x (Object(x) ∧ DesignedForTransportingPeopleOrGoods(x) → Vehicle(x))"
    },
    {
        "NL": "A forest is a habitat for various species if it contains diverse flora and fauna.",
        "FOL": "∀x (Forest(x) ∧ ∃y (DiverseFlora(y) ∧ Contains(x, y)) ∧ ∃z (DiverseFauna(z) ∧ Contains(x, z)) → HabitatForVariousSpecies(x))"
    },
    {
        "NL": "A vehicle can be a sports car, offer high speed, and receive outstanding reviews, or it can be an SUV, have spacious interiors, and be a family preference.",
        "FOL": "∀x (Vehicle(x) → ((SportsCar(x) ∧ OffersHighSpeed(x) ∧ OutstandingReviews(x)) ⊕ (SUV(x) ∧ SpaciousInteriors(x) ∧ FamilyPreference(x))))"
    },
    {
        "NL": "A scientist is a polymath if they have made significant contributions to at least three distinct fields.",
        "FOL": "∀x (Scientist(x) ∧ Polymath(x) ↔ SignificantContributionsToDistinctFields(x, 3))"
    },
    {
        "NL": "Only swimmers can complete the race.",
        "FOL": "∀x (¬Swimmer(x) → ¬CompleteRace(x))"
    },
    {
        "NL": "A delta is a landform created by sediment deposition where a river flows into an ocean, sea, or lake, and is characterized by a fan-shaped appearance.",
        "FOL": "∀x (Delta(x) → (LandformCreatedBySedimentDeposition(x) ∧ RiverFlowsIntoWaterBody(x) ∧ FanShapedAppearance(x)))"
    },
    {
        "NL": "A meal is satisfying if it's flavorful, has a variety of textures, and doesn't leave one feeling overly full or still hungry.",
        "FOL": "∀x (Meal(x) ∧ Satisfying(x) ↔ (Flavorful(x) ∧ VarietyOfTextures(x) ∧ ¬OverlyFull(x) ∧ ¬StillHungry(x)))"
    },
    {
        "NL": "A home is either modern or vintage if it is not traditional.",
        "FOL": "∀x (Home(x) ∧ ¬Traditional(x) → (Modern(x) ∨ Vintage(x)))"
    },
    {
        "NL": "A tree absorbs carbon dioxide and releases oxygen through a process called photosynthesis.",
        "FOL": "∀x (Tree(x) ∧ (AbsorbsCarbonDioxide(x) ∧ ReleasesOxygen(x) ↔ Photosynthesis(x)))"
    },
    {
        "NL": "An organization can be a non-profit, a government agency or a private company.",
        "FOL": "∀x (Organization(x) → (NonProfit(x) ∨ GovernmentAgency(x) ∨ PrivateCompany(x)))"
    },
    {
        "NL": "A nurse cares for patients by administering medications and monitoring their health.",
        "FOL": "∀x∀y (Nurse(x) ∧ Patient(y) → CaresFor(x, y))"
    },
    {
        "NL": "Each poet who has worked with at least one poet, who regrettably has not been published, has either written more than six poems or participated in all poetry festivals.",
        "FOL": "∀x (Poet(x) ∧ ∃y (Poet(y) ∧ ¬BeenPublished(y) ∧ WorkedWith(x, y)) → (WrittenMoreThanSixPoems(x) ∨ ∀z (PoetryFestival(z) → Participated(x, z))))"
    },
    {
        "NL": "A material that conducts electricity well and is malleable can be used for making electrical wires.",
        "FOL": "∀x (Material(x) ∧ ConductsElectricityWell(x) ∧ Malleable(x) → SuitableForMakingElectricalWires(x))"
    },
    {
        "NL": "A greenhouse creates a controlled environment for plants by maintaining temperature and humidity levels.",
        "FOL": "∀x∀y (Greenhouse(x) ∧ Plant(y) → (CreatesControlledEnvironment(x, y) ∧ MaintainsTemperatureAndHumidity(x, y)))"
    },
    {
        "NL": "Wind can cause waves on the surface of water bodies.",
        "FOL": "∀x ∀y (Wind(x) ∧ WaterBody(y) → CausesWaves(x, y))"
    },
    {
        "NL": "A cellphone is a device for making calls and sending text messages, while a camera is a device for capturing images.",
        "FOL": "∀x∀y (Cellphone(x) ∧ Camera(y) → (MakesCalls(x) ∧ SendsTextMessages(x) ∧ CapturesImages(y)))"
    },
    {
        "NL": "Antibiotics treat a specific disease by promoting the body's ability to create a targeted response.",
        "FOL": "∀x ∃y (Antibiotic(x) ∧ Disease(y) ∧ PromotesBodyAbility(x) ∧ CreatesTargetedResponse(x, y) → Treats(x, y))"
    },
    {
        "NL": "A tourist destination is appealing if it has stunning landscapes or historical landmarks, but not if it has a high crime rate.",
        "FOL": "∀x (Appealing(x) ↔ (TouristDestination(x) ∧ (((∃y (Stunning(y) ∧ Landscape(y) ∧ InDestination(x, y))) ∨ ∃z (Historical(z) ∧ Landmark(z) ∧ InDestination(x, z))) ∧ ¬∃w (High(w) ∧ CrimeRate(w) ∧ InDestination(x, w)))))"
    },
    {
        "NL": "A musical instrument is a string instrument if it produces sound through the vibration of stretched strings and is played by plucking, bowing, or striking the strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundThroughStringVibration(x) ∧ (PlayedByPlucking(x) ∨ PlayedByBowing(x) ∨ PlayedByStriking(x)) → StringInstrument(x))"
    },
    {
        "NL": "A book is engaging if it has a compelling plot and relatable characters.",
        "FOL": "∀x (Book(x) ∧ HasCompellingPlot(x) ∧ HasRelatableCharacters(x) → Engaging(x))"
    },
    {
        "NL": "A squirrel is avoiding a hawk near the tree.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Hawk(y) ∧ Avoiding(x, y) ∧ NearTheTree(y))"
    },
    {
        "NL": "Beaches feature soft sand, attract sunbathers, and allow for water-based activities.",
        "FOL": "∀x (Beach(x) → (FeaturesSoftSand(x) ∧ AttractsSunbathers(x) ∧ AllowsWaterBasedActivities(x)))"
    },
    {
        "NL": "A galaxy consists of a varied array of celestial objects if it includes stars, asteroids, and comets with unique traits.",
        "FOL": "∀x (Galaxy(x) ∧ ∃y ∃z ∃w (Star(y) ∧ Asteroid(z) ∧ Comet(w) ∧ UniqueTraits(y, z, w) ∧ Contains(x, y, z, w)) → HasVariedArrayofCelestialBodies(x))"
    },
    {
        "NL": "A bee pollinates flowers by transferring pollen from the male parts of a flower to the female parts, allowing plants to reproduce and create seeds.",
        "FOL": "∀x∀y (Bee(x) ∧ Flower(y) → (PollinatesFlower(x, y) ∧ TransfersPollen(x, y) ∧ AllowsPlantReproduction(y) ∧ CreatesSeeds(y)))"
    },
    {
        "NL": "A chef prepares meals, while a waiter serves them to customers.",
        "FOL": "∀x (Chef(x) → PreparesMeals(x)) ∧ ∀y (Waiter(y) → ServesMealsToCustomers(y))"
    },
    {
        "NL": "Fossils form when remains of organisms are preserved in sedimentary rock.",
        "FOL": "∀x∀y∀z (Fossil(x) ∧ OrganismRemains(y) ∧ SedimentaryRock(z) → PreservedIn(x, y, z))"
    },
    {
        "NL": "A musical instrument can be either stringed, wind, or percussion.",
        "FOL": "∀x (MusicalInstrument(x) → (Stringed(x) ∨ Wind(x) ∨ Percussion(x)))"
    },
    {
        "NL": "A laptop is a portable device, a desktop computer is stationary, and a server is used for network storage, but none are considered gaming consoles.",
        "FOL": "∀x ∀y ∀z (Laptop(x) ∧ DesktopComputer(y) ∧ Server(z) → (Portable(x) ∧ Stationary(y) ∧ NetworkStorage(z) ∧ ¬GamingConsole(x) ∧ ¬GamingConsole(y) ∧ ¬GamingConsole(z)))"
    },
    {
        "NL": "If a book is part of a library, it is a novel, magazine, or newspaper.",
        "FOL": "∀x (Book(x) ∧ PartOfLibrary(x) → Novel(x) ∨ Magazine(x) ∨ Newspaper(x))"
    },
    {
        "NL": "A type of transportation that operates on rails, carries passengers and cargo, and is powered by an electric or diesel engine is a train.",
        "FOL": "∀x∀y∀z (Transportation(x) ∧ OperatesOnRails(x) ∧ (CarriesPassengers(x) ∧ CarriesCargo(x)) ∧ (ElectricEngine(y) ∨ DieselEngine(y)) ∧ PoweredBy(x, y) → Train(x))"
    },
    {
        "NL": "To be eligible for a specific membership, one must be a student or a teacher but not both, and must not have any outstanding fees.",
        "FOL": "∀x∀m ((Eligible(x, m) ∧ Student(x) ∧ Teacher(x) ∧ OutstandingFees(x)) → ((Student(x) ⊕ Teacher(x)) ∧ ¬OutstandingFees(x)))"
    },
    {
        "NL": "A book that has a cracked spine and folded pages is considered well-read.",
        "FOL": "∀x (Book(x) ∧ CrackedSpine(x) ∧ FoldedPages(x) → WellRead(x))"
    },
    {
        "NL": "A toy is entertaining if it encourages creativity and is interactive.",
        "FOL": "∀x (Toy(x) ∧ EncouragesCreativity(x) ∧ Interactive(x) → Entertaining(x))"
    },
    {
        "NL": "A car can be a sedan, an SUV, or a pickup.",
        "FOL": "∀x (Car(x) → (Sedan(x) ∨ SUV(x) ∨ PickUp(x)))"
    },
    {
        "NL": "A ship is coal-powered if it is driven by a coal engine instead of a nuclear reactor.",
        "FOL": "∀x (Ship(x) ∧ HasCoalEngine(x) ∧ ¬HasNuclearReactor(x) → CoalPowered(x))"
    },
    {
        "NL": "An athlete participates in a sport if they compete in either individual or team events.",
        "FOL": "∀x (Athlete(x) → ParticipatesInSport(x) ↔ (IndividualEvent(x) ∨ TeamEvent(x)))"
    },
    {
        "NL": "People who exercise regularly have better health conditions.",
        "FOL": "∀x (Person(x) ∧ ExercisesRegularly(x) → BetterHealthCondition(x))"
    },
    {
        "NL": "If there are no electric cars, then no mechanic fixes any vehicle.",
        "FOL": "¬∃x (ElectricCar(x)) → ¬∃y (Mechanic(y) ∧ ∃z (Vehicle(z) ∧ Fix(y, z)))"
    },
    {
        "NL": "Rainy weather causes the ground to become wet and slippery.",
        "FOL": "∀x (RainyWeather(x) → (GroundWet(x) ∧ GroundSlippery(x)))"
    },
    {
        "NL": "Trees grow taller by producing new cells in a region called the meristem.",
        "FOL": "∀x (Tree(x) → (∃y (Meristem(y) ∧ ProducesNewCells(x, y) ∧ GrowsTaller(x))))"
    },
    {
        "NL": "A person is considered a grandchild if they have one or more grandparents.",
        "FOL": "∀x∃y (HasGrandparent(x, y) → Grandchild(x))"
    },
    {
        "NL": "In a courtroom, a judge presides over trials, hears evidence, and determines verdicts.",
        "FOL": "∀x∀y∀z (Courtroom(x) ∧ Judge(y) ∧ Trial(z) → (PresidesOver(y, x) ∧ HearsEvidence(y, z) ∧ DeterminesVerdict(y, z)))"
    },
    {
        "NL": "Only artists comprehend beauty.",
        "FOL": "∀x (¬Artist(x) → ¬ComprehendBeauty(x))"
    },
    {
        "NL": "Some doctors are either surgeons or psychiatrists, but not both.",
        "FOL": "∃x (Doctor(x) ∧ (Surgeon(x) ⊕ Psychiatrist(x)))"
    },
    {
        "NL": "If all apples are not fresh, there exists a basket that every fruit fits in.",
        "FOL": "¬∀x (Apple(x) → Fresh(x)) → ∃y (Basket(y) ∧ ∀z (Fruit(z) → FitsIn(z, y)))"
    },
    {
        "NL": "Not all insects can fly, but all birds can, except for ostriches and penguins.",
        "FOL": "∃x (Insect(x) ∧ ¬CanFly(x)) ∧ ∀y (Bird(y) ∧ ¬Ostrich(y) ∧ ¬Penguin(y) → CanFly(y))"
    },
    {
        "NL": "A politician gains popularity if they deliver on promises and communicate effectively with constituents.",
        "FOL": "∀x (Politician(x) ∧ GainsPopularity(x) ↔ (DeliversOnPromises(x) ∧ CommunicatesEffectivelyWithConstituents(x)))"
    },
    {
        "NL": "Medicines are effective in treating illnesses when they are administered in correct dosages and at proper intervals.",
        "FOL": "∀x ∀y (Medicine(x) ∧ Illness(y) ∧ CorrectDosage(x) ∧ ProperInterval(x) → EffectiveInTreating(x, y))"
    },
    {
        "NL": "An eco-friendly product is made from recyclable materials, has a low carbon footprint, and does not harm the environment during its production or disposal.",
        "FOL": "∀x (Product(x) ∧ RecyclableMaterials(x) ∧ LowCarbonFootprint(x) ∧ ¬HarmsEnvironmentInProductionOrDisposal(x) → EcoFriendly(x))"
    },
    {
        "NL": "A student can be a dancer, or enjoy reading Hemingway, but not both.",
        "FOL": "∀x (Dancer(x) ⊕ EnjoyReadingHemingway(x))"
    },
    {
        "NL": "An ecosystem is stable when the populations of its various species remain balanced, and there is a sustainable flow of energy and nutrients.",
        "FOL": "∀x (Ecosystem(x) ∧ BalancedPopulations(x) ∧ SustainableEnergyFlow(x) ∧ SustainableNutrientFlow(x) → Stable(x))"
    },
    {
        "NL": "A software is user-friendly when it has an intuitive interface, clear documentation, and either a responsive support team or an active community.",
        "FOL": "∀x (Software(x) ∧ IntuitiveInterface(x) ∧ ClearDocumentation(x) ∧ (ResponsiveSupportTeam(x) ∨ ActiveCommunity(x)) → UserFriendly(x))"
    },
    {
        "NL": "All plants are either trees or bushes.",
        "FOL": "∀v (Plant(v) → (Tree(v) ⊕ Bush(v)))"
    },
    {
        "NL": "A device is a telescope if it is used for observing distant objects, magnifies images, and collects light.",
        "FOL": "∀x (Device(x) ∧ ObservesDistantObjects(x) ∧ MagnifiesImages(x) ∧ CollectsLight(x) → Telescope(x))"
    },
    {
        "NL": "Everyone who considers life as a basketball match, is destined to be defeated.",
        "FOL": "∀x (ConsidersLifeAsBasketballMatch(x) → DestinedToBeDefeated(x))"
    },
    {
        "NL": "A chef's dish is delightful if the dish has a harmonious blend of flavors, is beautifully presented, and uses fresh ingredients, while a dish with an overpowering taste or a poorly executed recipe fails to impress.",
        "FOL": "∀x (Chef(x) ∧ Dish(y, x) → (Delightful(y) ↔ (HarmoniousFlavors(y) ∧ BeautifulPresentation(y) ∧ FreshIngredients(y)) ∧ ¬(OverpoweringTaste(y) ∨ PoorlyExecuted(y))))"
    },
    {
        "NL": "An email is marked as spam if it contains suspicious links or keywords, but not if it is from a trusted sender.",
        "FOL": "∀x (Email(x) → ((SuspiciousLinks(x) ∨ SuspiciousKeywords(x)) ∧ ¬TrustedSender(x) → MarkedAsSpam(x)))"
    },
    {
        "NL": "Dogs can bark, but cats can purr and do not bark.",
        "FOL": "∀x∀y (Dog(x) → CanBark(x)) ∧ (Cat(y) → (CanPurr(y) ∧ ¬CanBark(y)))"
    },
    {
        "NL": "Every blue object is glowing only if it's a sphere.",
        "FOL": "∀x (Blue(x) → (Glow(x) → Sphere(x)))"
    },
    {
        "NL": "An animal species is endangered if its population declines rapidly, its habitat is threatened, and it faces a high risk of extinction.",
        "FOL": "∀x (AnimalSpecies(x) ∧ RapidPopulationDecline(x) ∧ ThreatenedHabitat(x) ∧ HighRiskOfExtinction(x) → Endangered(x))"
    },
    {
        "NL": "A business thrives if it has an innovative product, effective marketing, and excellent customer service.",
        "FOL": "∀x (Business(x) ∧ HasInnovativeProduct(x) ∧ HasEffectiveMarketing(x) ∧ HasExcellentCustomerService(x) → Thrives(x))"
    },
    {
        "NL": "An efficient supply chain management system integrates modern technology, streamlined logistics, and strong supplier relationships to optimize operations, minimize costs, and improve customer satisfaction.",
        "FOL": "∀x∀y (EfficientSupplyChainManagementSystem(x) ∧ ModernTechnology(x) ∧ StreamlinedLogistics(y) ∧ StrongSupplierRelationships(x) → (OptimizesOperations(x) ∧ MinimizesCosts(x) ∧ ImprovesCustomerSatisfaction(x)))"
    },
    {
        "NL": "A person is considered a singer if they perform vocals for music recordings and live performances.",
        "FOL": "∀x (Singer(x) ↔ PerformsVocals(x))"
    },
    {
        "NL": "A shape can be a polygon or a circle.",
        "FOL": "∀x (Shape(x) → (Polygon(x) ∨ Circle(x)))"
    },
    {
        "NL": "In an orchestra, the conductor coordinates the musicians, adjusting tempo and dynamics to achieve a harmonious performance.",
        "FOL": "∀x∀y (Orchestra(x) ∧ Conductor(y) → (CoordinatesMusicians(y, x) ∧ AdjustsTempoAndDynamics(y) → AchievesHarmoniousPerformance(x)))"
    },
    {
        "NL": "A person is considered an athlete if they compete in sports or physical activities that require strength, speed, or endurance.",
        "FOL": "∀x (Person(x) ∧ CompetesInSportsOrPhysicalActivities(x) ∧ RequiresStrengthSpeedOrEndurance(x) → Athlete(x))"
    },
    {
        "NL": "When an airplane takes off, it gains altitude and increases speed.",
        "FOL": "∀x (Airplane(x) ∧ TakesOff(x) → (GainsAltitude(x) ∧ IncreasesSpeed(x)))"
    },
    {
        "NL": "Contrary to belief, not every dog that can run fast is a hunter, and not a single one of these dogs can survive without human care.",
        "FOL": "¬∀x (Dog(x) ∧ CanRunFast(x) → Hunter(x)) ∧ ¬∃y (Dog(y) ∧ CanRunFast(y) ∧ CanSurviveWithoutHumanCare(y))"
    },
    {
        "NL": "Every number is either even or odd, but it cannot be both.",
        "FOL": "∀x (Number(x) → (Even(x) ⊕ Odd(x)))"
    },
    {
        "NL": "A shirt is deemed a tunic if it is unisex, long, and used in cold weather.",
        "FOL": "∀x (Shirt(x) → Unisex(x) ∧ Long(x) ∧ UsedInColdWeather(x) → Tunic(x))"
    },
    {
        "NL": "A rectangle has four right angles and opposite sides equal in length.",
        "FOL": "∀x (Rectangle(x) → (HasFourRightAngles(x) ∧ OppositeSidesEqual(x)))"
    },
    {
        "NL": "An athlete is an Olympian if they participate in either the Summer or Winter Olympic Games.",
        "FOL": "∀x (Athlete(x) ∧ (SummerOlympics(x) ∨ WinterOlympics(x)) → Olympian(x))"
    },
    {
        "NL": "When a volcano erupts, it can either emit ash clouds or release lava flows, but not both simultaneously.",
        "FOL": "∀x (Volcano(x) ∧ Erupts(x) → (EmitsAshClouds(x) ⊕ ReleasesLavaFlows(x)))"
    },
    {
        "NL": "There is no green car.",
        "FOL": "¬∃x (Car(x) ∧ Green(x))"
    },
    {
        "NL": "Not all artists create masterpieces, but every innovative artist sparks interest.",
        "FOL": "¬∀x (Artist(x) → CreatesMasterpiece(x)) ∧ ∀y (Innovative(y) ∧ Artist(y) → SparksInterest(y))"
    },
    {
        "NL": "A figure is either a wide rectangle or a narrow triangle, but not both.",
        "FOL": "∀x ((Wide(x) ∧ Rectangle(x)) ⊕ (Narrow(x) ∧ Triangle(x)))"
    },
    {
        "NL": "A city is considered a capital if it is the primary seat of government for a country or region.",
        "FOL": "∀x∀y (City(x) ∧ PrimarySeatOfGovernment(x, y) → Capital(x, y))"
    },
    {
        "NL": "A fish swims in water.",
        "FOL": "∀x (Fish(x) → SwimsInWater(x))"
    },
    {
        "NL": "An international flight transports passengers from one country to another by crossing multiple time zones.",
        "FOL": "∀x∀y∀z (InternationalFlight(x) ∧ Passenger(y) ∧ Country(z) ∧ CrossesMultipleTimeZones(x) → TransportsFromTo(x, y, z))"
    },
    {
        "NL": "A hotel offers a discount on room rates for guests staying more than five days and making the reservation at least one month in advance, except for holiday seasons.",
        "FOL": "∀x∀y (Hotel(x) ∧ Guest(y) → (DiscountOnRoomRates(x, y) ↔ (StayingMoreThanFiveDays(y) ∧ ReservationOneMonthInAdvance(y) ∧ ¬HolidaySeason(x))))"
    },
    {
        "NL": "A novel captivates readers when it features an engaging plot, relatable characters, and an immersive setting.",
        "FOL": "∀x (Novel(x) ∧ EngagingPlot(x) ∧ RelatableCharacters(x) ∧ ImmersiveSetting(x) → CaptivatesReaders(x))"
    },
    {
        "NL": "A gardener waters flowers when they are dry and prunes them when they are overgrown.",
        "FOL": "∀x ∀y (Gardener(x) ∧ Flower(y) → ((Dry(y) → Waters(x, y)) ∧ (Overgrown(y) → Prunes(x, y))))"
    },
    {
        "NL": "No athletes are strong unless they are disciplined, but all of them train to win a game.",
        "FOL": "∀x (Athlete(x) → (¬Strong(x) ∨ Disciplined(x))) ∧ ∀y (Athlete(y) → TrainsToWinGame(y))"
    },
    {
        "NL": "A diet consisting of fruits, vegetables, and whole grains provides essential vitamins and minerals.",
        "FOL": "∀x∀y∀z (Diet(x) ∧ (Fruit(y) ∨ Vegetable(y) ∨ WholeGrain(y)) → ProvidesEssentialVitaminsAndMinerals(x, z))"
    },
    {
        "NL": "Every bank has a location in some city.",
        "FOL": "∀x (Bank(x) → ∃y (City(y) ∧ LocatedIn(x, y)))"
    },
    {
        "NL": "If a plant is properly watered, then it grows faster and lives longer.",
        "FOL": "∀x (Plant(x) ∧ ProperlyWatered(x) → GrowsFaster(x) ∧ LivesLonger(x))"
    },
    {
        "NL": "A film is awarded if it receives critical acclaim and wins at least one category in a film festival.",
        "FOL": "∀x (Film(x) ∧ CriticalAcclaim(x) ∧ WinsCategory(x) → Awarded(x))"
    },
    {
        "NL": "A conference attendee can enter a networking event if they have a badge, are a presenter, or have a special invitation.",
        "FOL": "∀x (ConferenceAttendee(x) → (HasBadge(x) ∨ IsPresenter(x) ∨ HasSpecialInvitation(x)))"
    },
    {
        "NL": "A student passes a course if they attend classes regularly, complete assignments, and score well on exams.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) → (Passes(x, y) ↔ (AttendsRegularly(x, y) ∧ CompletesAssignments(x, y) ∧ ScoresWellOnExams(x, y))))"
    },
    {
        "NL": "A software application is considered an operating system if it manages computer hardware and software resources, provides a user interface, and allows for the execution of other software applications.",
        "FOL": "∀x (SoftwareApplication(x) ∧ ManagesHardwareAndSoftwareResources(x) ∧ ProvidesUserInterface(x) ∧ AllowsExecutionOfOtherSoftwareApplications(x) → OperatingSystem(x))"
    },
    {
        "NL": "All birds are either falcons or canaries.",
        "FOL": "∀x (Bird(x) ∧ (Falcon(x) ⊕ Canary(x)))"
    },
    {
        "NL": "Something is a large pyramid only if it is yellow.",
        "FOL": "∀x (Large(x) ∧ Pyramid(x) → Yellow(x))"
    },
    {
        "NL": "A movie attracts more viewers when it has engaging plot or impressive visual effects, but not when it's overly long.",
        "FOL": "∃x (Movie(x) ∧ ((EngagingPlot(x) ∨ ImpressiveVisualEffects(x)) ∧ ¬OverlyLong(x) → MoreViewers(x)))"
    },
    {
        "NL": "A software application used to create, edit, and manage digital documents is a word processor.",
        "FOL": "∀x (SoftwareApplication(x) ∧ CreatesDigitalDocuments(x) ∧ EditsDigitalDocuments(x) ∧ ManagesDigitalDocuments(x) → WordProcessor(x))"
    },
    {
        "NL": "A planet has a moon if the moon orbits the planet and is a natural satellite.",
        "FOL": "∀x ∀y (Planet(x) ∧ Moon(y) ∧ Orbits(y, x) ∧ NaturalSatellite(y) → HasMoon(x, y))"
    },
    {
        "NL": "Eco-friendly products made from recycled materials, using sustainable processes, and minimizing waste benefit the environment and consumers.",
        "FOL": "∀x (EcoFriendlyProduct(x) ∧ RecycledMaterials(x) ∧ SustainableProcesses(x) ∧ MinimizesWaste(x) → (BenefitsEnvironment(x) ∧ BenefitsConsumers(x)))"
    },
    {
        "NL": "A musical instrument is a string instrument if it produces sound by vibrating strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundByVibratingStrings(x) → StringInstrument(x))"
    },
    {
        "NL": "It's not true that every fish that can swim fast is a predator, and no such fish can survive on land.",
        "FOL": "¬∀x (Fish(x) ∧ CanSwimFast(x) → Predator(x)) ∧ ¬∃y (Fish(y) ∧ CanSwimFast(y) ∧ CanSurviveOnLand(y))"
    },
    {
        "NL": "If a person is a veterinarian, they must diagnose and treat health problems in animals.",
        "FOL": "∀x (Veterinarian(x) → (DiagnosesAnimalHealthProblems(x) ∧ TreatsAnimalHealthProblems(x)))"
    },
    {
        "NL": "A machine is classified as a robot if it can perform tasks autonomously, be programmed to execute a series of actions, and interact with its environment.",
        "FOL": "∀x (Machine(x) ∧ PerformsTasksAutonomously(x) ∧ ProgrammableToExecuteActions(x) ∧ InteractsWithEnvironment(x) → Robot(x))"
    },
    {
        "NL": "A house is safe if it has a security system, structural integrity, and fire protection.",
        "FOL": "∀x (House(x) → SecuritySystem(x) ∧ StructuralIntegrity(x) ∧ FireProtection(x) → Safe(x))"
    },
    {
        "NL": "If a person is a historian, they study and analyze the past.",
        "FOL": "∀x (Historian(x) → (StudiesPast(x) ∧ AnalyzesPast(x)))"
    },
    {
        "NL": "A manager leads their team, sets goals, and ensures productivity.",
        "FOL": "∀x ∃y (Manager(x) → TeamMember(y) ∧ Leads(x, y) ∧ SetsGoals(x) ∧ EnsuresProductivity(x))"
    },
    {
        "NL": "An action is legal if it is allowed by the law, while an action is illegal if it is prohibited by the law.",
        "FOL": "∀x (Action(x) → (Legal(x) ↔ AllowedByLaw(x)) ∧ (Illegal(x) ↔ ¬AllowedByLaw(x)))"
    },
    {
        "NL": "Some instruments produce sound without strings or keys.",
        "FOL": "∃x (Instrument(x) ∧ ¬(HasStrings(x) ∨ HasKeys(x)))"
    },
    {
        "NL": "The weather is great for a picnic if it's sunny or partly cloudy and there isn't a high chance of rain.",
        "FOL": "∀x (Weather(x) ∧ ((Sunny(x) ∨ PartlyCloudy(x)) ∧ ¬HighChanceOfRain(x)) → GreatForPicnic(x))"
    },
    {
        "NL": "For a medicine to be effective against a virus, it must either inhibit viral replication or boost the patient's immune system, provided the patient is not allergic to the medicine.",
        "FOL": "∀x∀y∀z (Medicine(x) ∧ Virus(y) ∧ Patient(z) → (EffectiveAgainst(x, y, z) ↔ ((InhibitsViralReplication(x, y) ∨ BoostsImmuneSystem(x, z)) ∧ ¬Allergic(z, x))))"
    },
    {
        "NL": "Not all movies last forever, however, it is entertaining to watch them.",
        "FOL": "¬∀x (Movie(x) → LastsForever(x)) ∧ ∀y (Movie(y) → EntertainingToWatch(y))"
    },
    {
        "NL": "Books containing pictures and targeting young readers are categorized as picture books.",
        "FOL": "∀x (Book(x) ∧ ContainsPictures(x) ∧ TargetsYoungReaders(x) → PictureBook(x))"
    },
    {
        "NL": "Cities with efficient public transportation systems have less traffic congestion than those without.",
        "FOL": "∀x ∀y (City(x) ∧ City(y) ∧ EfficientPublicTransportation(x) ∧ ¬EfficientPublicTransportation(y) → LessTrafficCongestion(x, y))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity, which can be stored in batteries and used to power various electronic devices.",
        "FOL": "∀x∀y∀z (SolarPanel(x) ∧ Sunlight(y) ∧ Electricity(z) → (Converts(x, y, z) ∧ CanBeStoredInBatteriesAndUsedToPowerElectronicDevices(x)))"
    },
    {
        "NL": "A university is highly ranked if it has a strong faculty, a diverse student body, and a high level of research output.",
        "FOL": "∀x ∀y ∀z (HighlyRanked(x) → (University(x) ∧ StrongFaculty(x, y) ∧ DiverseStudentBody(x, y) ∧ HighResearchOutput(x, z)))"
    },
    {
        "NL": "A chef is serving the dinner to his customers in the restaurant.",
        "FOL": "∃x ∃y ∃z (Chef(x) ∧ Dinner(y) ∧ Customer(z) ∧ ServingTo(x, y, z) ∧ InTheRestaurant(x))"
    },
    {
        "NL": "If it is raining and the temperature is below freezing, there will be snow or ice on the ground.",
        "FOL": "∀x (Raining(x) ∧ BelowFreezing(x) → (SnowOnGround(x) ∨ IceOnGround(x)))"
    },
    {
        "NL": "A dog barks when it is excited or senses danger.",
        "FOL": "∀x (Dog(x) ∧ (Excited(x) ∨ SensesDanger(x)) → Barks(x))"
    },
    {
        "NL": "A dog barks at strangers but wags its tail for its owner.",
        "FOL": "∀x ∀y ∀z (Dog(x) ∧ Stranger(y) ∧ Owner(z, x) → (BarksAt(x, y) ∧ WagsTail(x, z)))"
    },
    {
        "NL": "A door is locked with a key or an electronic mechanism.",
        "FOL": "∀x (Door(x) → (LockedWithKey(x) ∨ LockedWithElectronicMechanism(x)))"
    },
    {
        "NL": "Cats are mammals and usually have fur.",
        "FOL": "∀x (Cat(x) → (Mammal(x) ∧ UsuallyHaveFur(x)))"
    },
    {
        "NL": "A meteorological phenomenon is violent if it entails hailstorms, high velocity squalls, and the threat of earthquakes or other chaos.",
        "FOL": "∀x (MeteorologicalPhenomenon(x) ∧ EntailsHailstorms(x) ∧ EntailsHighVelocitySqualls(x) ∧ (ThreatOfEarthquakes(x) ∨ ThreatOfChaos(x)) → Violent(x))"
    },
    {
        "NL": "A computer is portable if it has a battery and does not contain a power cord.",
        "FOL": "∀y (Computer(y) ∧ HasBattery(y) ∧ ¬HasPowerCord(y) → Portable(y))"
    },
    {
        "NL": "An insect is classified as a pollinator if it transfers pollen from one flower to another, facilitating plant reproduction.",
        "FOL": "∀x (Insect(x) ∧ TransfersPollenBetweenFlowers(x) ∧ FacilitatesPlantReproduction(x) → Pollinator(x))"
    },
    {
        "NL": "A sustainable development strategy, like reducing waste or recycling, can improve living standards without harming the environment, and it supports preservation of natural resources.",
        "FOL": "∀x (SustainableDevelopmentStrategy(x) ∧ (ReduceWaste(x) ∨ Recycling(x)) → (ImprovesLivingStandards(x) ∧ ¬HarmsEnvironment(x)) ∧ SupportsPreservationNaturalResources(x))"
    },
    {
        "NL": "A chemical reaction that involves the transfer of electrons between two species is a redox reaction.",
        "FOL": "∀x ∀y ∀z (ChemicalReaction(x) ∧ Species(y) ∧ Species(z) ∧ ElectronTransfer(x) ∧ Between(y, z) → RedoxReaction(x))"
    },
    {
        "NL": "If a dog is happy, then that dog is friendly.",
        "FOL": "∀x (Dog(x) ∧ Happy(x) → Friendly(x))"
    },
    {
        "NL": "A book can be borrowed from a library if it is available and not reserved.",
        "FOL": "∀x ∀y (Book(x) ∧ Library(y) → (Borrowable(x, y) ↔ (Available(x, y) ∧ ¬Reserved(x, y))))"
    },
    {
        "NL": "A fertile agricultural land that features nutrient-rich soil, access to fresh water, and favorable climate conditions can support high crop yields and maintain food security.",
        "FOL": "∀x∀y∀z (FertileAgriculturalLand(x) ∧ NutrientRichSoil(y) ∧ AccessToFreshWater(z) ∧ FavorableClimateConditions(x) ∧ FeaturesElements(x, y, z) → SupportsHighCropYields(x) ∧ MaintainsFoodSecurity(x))"
    },
    {
        "NL": "If an animal has fur and feeds its young with milk, it is considered a mammal.",
        "FOL": "∀x ((HasFur(x) ∧ FeedsYoungWithMilk(x)) → Mammal(x))"
    },
    {
        "NL": "Planets orbit around stars, while moons orbit around planets.",
        "FOL": "∀x (Planet(x) → ∃y (Star(y) ∧ OrbitsAround(x, y))) ∧ ∀z (Moon(z) → ∃w (Planet(w) ∧ OrbitsAround(z, w)))"
    },
    {
        "NL": "A country is considered landlocked when it is entirely surrounded by other countries and does not have direct access to an ocean or a sea.",
        "FOL": "∀x (Country(x) ∧ SurroundedByCountries(x) ∧ ¬DirectAccessToOceanOrSea(x) → Landlocked(x))"
    },
    {
        "NL": "A celestial body is classified as a moon if it orbits a planet.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsPlanet(x) → Moon(x))"
    },
    {
        "NL": "A scientific discovery is made by a researcher when they produce new knowledge in their field.",
        "FOL": "∀x ∀y (Researcher(x) ∧ Field(y) ∧ ProducesNewKnowledge(x, y) → ScientificDiscovery(x, y))"
    },
    {
        "NL": "A good leader is skilled at motivating others and making decisions, while a bad leader lacks these skills.",
        "FOL": "∀x (Leader(x) ∧ Good(x) → (MotivatesOthers(x) ∧ MakesDecisions(x))) ∧ (Leader(x) ∧ ¬Good(x) → ¬(MotivatesOthers(x) ∧ MakesDecisions(x)))"
    },
    {
        "NL": "All movies are thrilling unless they have been directed poorly, but not all of them are critically acclaimed.",
        "FOL": "¬∃x (Movie(x) ∧ Thrilling(x) ∨ DirectedPoorly(x)) ∧ ¬∀y (Movie(y) → CriticallyAcclaimed(y))"
    },
    {
        "NL": "A fence can be made of wood, metal, or plastic.",
        "FOL": "∀x (Fence(x) → (MadeOfWood(x) ∨ MadeOfMetal(x) ∨ MadeOfPlastic(x)))"
    },
    {
        "NL": "Not all flowers bloom in the spring or the summer.",
        "FOL": "¬∀x (Flower(x) → (BloomsInSpring(x) ∨ BloomsInSummer(x)))"
    },
    {
        "NL": "A chef cooks meals with ingredients.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Meal(y) ∧ Ingredient(z) → Cook(x, y, z))"
    },
    {
        "NL": "A person who tutors a student will be tutored by someone.",
        "FOL": "∀x ∃y (Person(x) ∧ Student(y) ∧ Tutors(x, y) → ∃z (Person(z) ∧ WillTutor(z, x)))"
    },
    {
        "NL": "A type of container can be either a box or a bag.",
        "FOL": "∀x (ContainerType(x) → Box(x) ⊕ Bag(x))"
    },
    {
        "NL": "For a film to be a blockbuster, it must have high box office revenue and positive reviews.",
        "FOL": "∀x (Film(x) → (Blockbuster(x) ↔ (HighBoxOfficeRevenue(x) ∧ PositiveReviews(x))))"
    },
    {
        "NL": "It is not true that every cup is round.",
        "FOL": "¬∀x (Cup(x) → Round(x))"
    },
    {
        "NL": "Not every car is fuel efficient.",
        "FOL": "¬∀x (Car(x) → FuelEfficient(x))"
    },
    {
        "NL": "A bakery is renowned for its bread if it offers a wide range of freshly baked loaves, such as sourdough, whole wheat, and rye.",
        "FOL": "∀x (RenownedForBread(x) ↔ (Bakery(x) ∧ ∃y ∃z ∃w (FreshlyBakedLoaf(y) ∧ FreshlyBakedLoaf(z) ∧ FreshlyBakedLoaf(w) ∧ Sourdough(y) ∧ WholeWheat(z) ∧ Rye(w) ∧ Offers(x, y, z, w))))"
    },
    {
        "NL": "A tree has roots that absorb nutrients from the soil, and the tree produces leaves for photosynthesis.",
        "FOL": "∀x (Tree(x) → (HasRoots(x) ∧ AbsorbsNutrients(x, Soil) ∧ ProducesLeaves(x) ∧ Photosynthesis(x)))"
    },
    {
        "NL": "An object is buoyant if it floats on the surface of a liquid.",
        "FOL": "∀x ∀y (Object(x) ∧ Liquid(y) ∧ FloatsOnSurface(x, y) → Buoyant(x))"
    },
    {
        "NL": "Everything is a sphere if it isn't square.",
        "FOL": "∀x (¬Square(x) → Sphere(x))"
    },
    {
        "NL": "Every architect who has drafted for over five years and either publishes architecture manuscripts or conducts architectural seminars, but not both, must either have received an architecture award or be connected to an international association of architects.",
        "FOL": "∀x (Architect(x) ∧ DraftedForOverFiveYears(x) ∧ (PublishesArchitectureManuscripts(x) ⊕ ConductsArchitecturalSeminars(x)) → (ReceivedArchitectureAward(x) ∨ ConnectedToInternationAssociationofArchitects(x)))"
    },
    {
        "NL": "A person is considered a sculptor if they create three-dimensional artwork by shaping materials like stone, clay, or metal.",
        "FOL": "∀x (Sculptor(x) ↔ CreatesThreeDimensionalArtwork(x))"
    },
    {
        "NL": "A fruit is a citrus fruit if it belongs to the Rutaceae family and has a sour or tart taste.",
        "FOL": "∀x (Fruit(x) → ((RutaceaeFamily(x) ∧ (SourTaste(x) ∨ TartTaste(x))) ↔ CitrusFruit(x)))"
    },
    {
        "NL": "A person is considered a chef if they prepare, cook, and present food in a professional setting.",
        "FOL": "∀x (Person(x) ∧ PreparesFoodInProfessionalSetting(x) ∧ CooksAndPresentsFood(x) → Chef(x))"
    },
    {
        "NL": "Mountains are formed by tectonic forces, rivers flow through valleys, and deserts are characterized by arid conditions; no mountains are made of water.",
        "FOL": "∀x∀y∀z (Mountain(x) ∧ River(y) ∧ Desert(z) → (FormedByTectonicForces(x) ∧ FlowsThroughValley(y) ∧ AridConditions(z)) ∧ ¬MadeOfWater(x))"
    },
    {
        "NL": "In basketball, a player scores a three-point field goal when they successfully shoot the ball from behind the three-point line.",
        "FOL": "∀x (BasketballPlayer(x) ∧ SuccessfulShot(x) ∧ BehindThreePointLine(x) → ScoresThreePointFieldGoal(x))"
    },
    {
        "NL": "A liquid boils when its temperature reaches its boiling point.",
        "FOL": "∀x ∀y (Liquid(x) ∧ Temperature(x, y) ∧ BoilingPoint(x, y) → Boils(x))"
    },
    {
        "NL": "A bicycle has wheels.",
        "FOL": "∀x (Bicycle(x) → HasWheels(x))"
    },
    {
        "NL": "A bird can fly, swim, or walk, but it cannot do all three simultaneously.",
        "FOL": "∀x (Bird(x) → ((Fly(x) ∨ Swim(x) ∨ Walk(x)) ∧ ¬(Fly(x) ∧ Swim(x) ∧ Walk(x))))"
    },
    {
        "NL": "Fossils provide evidence of past life forms and help scientists study the history and evolution of life on Earth.",
        "FOL": "∀x (Fossil(x) → (EvidenceOfPastLifeForms(x) ∧ HelpsStudyHistoryAndEvolution(x)))"
    },
    {
        "NL": "A device is a smartphone if it can make phone calls, access the internet, and has a touchscreen.",
        "FOL": "∀x (Device(x) ∧ CanMakePhoneCalls(x) ∧ AccessInternet(x) ∧ HasTouchscreen(x) → Smartphone(x))"
    },
    {
        "NL": "A plant photosynthesizes if it has chlorophyll, absorbs sunlight, and converts carbon dioxide and water into glucose and oxygen.",
        "FOL": "∀x (Photosynthesizes(x) ↔ (Plant(x) ∧ ∃y (Chlorophyll(y) ∧ Has(x, y)) ∧ ∃z (Sunlight(z) ∧ Absorbs(x, z)) ∧ ∃w (CarbonDioxide(w) ∧ Water(w) ∧ Converts(x, w))))"
    },
    {
        "NL": "A vehicle is classified as a bicycle if it has two wheels, is powered by human effort, and uses a pedal-driven mechanism to propel itself.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) ∧ PoweredByHumanEffort(x) ∧ PedalDrivenMechanism(x) → Bicycle(x))"
    },
    {
        "NL": "An object is buoyant in water when its density is lower than the density of water.",
        "FOL": "∀x (Object(x) → (BuoyantInWater(x) ↔ (Density(x, y) ∧ Density(water, z) ∧ LowerDensity(x, water))))"
    },
    {
        "NL": "Artists create artwork in different mediums, and galleries display the pieces for the public to view.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ Artwork(y) ∧ Gallery(z) → (CreatesInMedium(x, y) ∧ Displays(z, y) ∧ PublicViews(z, y)))"
    },
    {
        "NL": "Every bird can fly, unless it is a flightless bird.",
        "FOL": "∀x (Bird(x) ∧ ¬Flightless(x) → CanFly(x))"
    },
    {
        "NL": "An ice cream flavor contains a specific type of milk, a certain amount of sugar, and may include toppings such as nuts, fruit, or chocolate chips.",
        "FOL": "∀x (IceCreamFlavor(x) → (∃y MilkType(y) ∧ ContainsMilk(x, y)) ∧ (∃z SugarAmount(z) ∧ ContainsSugar(x, z)) ∧ (∃w Topping(w) ∧ (HasNuts(w) ∨ HasFruit(w) ∨ HasChocolateChips(w)) ∧ IncludesTopping(x, w)))"
    },
    {
        "NL": "A canyon is a deep, narrow valley with steep sides, typically formed by the erosive activity of a river over geologic time.",
        "FOL": "∀x (Canyon(x) → (DeepNarrowValley(x) ∧ SteepSides(x) ∧ TypicallyFormedByRiverErosion(x)))"
    },
    {
        "NL": "An appliance is either for the kitchen or the laundry room, but not for both.",
        "FOL": "∀x (Appliance(x) → (KitchenAppliance(x) ⊕ LaundryRoomAppliance(x)))"
    },
    {
        "NL": "A student is either studying or playing, but not both.",
        "FOL": "∀x (Student(x) → (Studying(x) ⊕ Playing(x)))"
    },
    {
        "NL": "An appliance can be either running or stationary but not both.",
        "FOL": "∀x (Appliance(x) → (Running(x) ⊕ Stationary(x)))"
    },
    {
        "NL": "A car can either be a sports car with a powerful engine and sleek design, or a family car with spacious interior and child safety features.",
        "FOL": "∀x (Car(x) → ((SportsCar(x) ∧ PowerfulEngine(x) ∧ SleekDesign(x)) ⊕ (FamilyCar(x) ∧ SpaciousInterior(x) ∧ ChildSafetyFeatures(x))))"
    },
    {
        "NL": "An object is a heavy stone, and an object is a light feather.",
        "FOL": "∃x (Heavy(x) ∧ Stone(x)) ∧ ∃x (Light(x) ∧ Feather(x))"
    },
    {
        "NL": "Every doctor is human, but not every human is a doctor.",
        "FOL": "∀x (Doctor(x) → Human(x)) ∧ ¬∀x (Human(x) → Doctor(x))"
    },
    {
        "NL": "A dog is deemed a wolf if it belongs to the Canis genus, has a wild personality, and howls.",
        "FOL": "∀x (Dog(x) → BelongsToCanisGenus(x) ∧ HasWildPersonality(x) ∧ Howls(x) → Wolf(x))"
    },
    {
        "NL": "An object is considered a musical instrument if it is used to produce musical sounds.",
        "FOL": "∀x (Object(x) ∧ UsedToProduceMusicalSounds(x) → MusicalInstrument(x))"
    },
    {
        "NL": "If every performer who is awarded is a professional, then some participants will not be awarded.",
        "FOL": "∀x (Performer(x) ∧ Awarded(x) → Professional(x)) → ∃y (Participant(y) ∧ ¬Awarded(y))"
    },
    {
        "NL": "It is not always the case that every tree is tall if and only if it is old.",
        "FOL": "¬∀x (Tree(x) ∧ Tall(x) ↔ Old(x))"
    },
    {
        "NL": "Doctors prescribe medication to treat illnesses or alleviate symptoms.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Illness(y) ∧ Medication(z) → PrescribesToTreatOrAlleviate(x, y, z))"
    },
    {
        "NL": "A scientist will abandon the project only if he does not receive funding.",
        "FOL": "∀z (Scientist(z) ∧ AbandonProject(z) → ¬ReceiveFunding(z))"
    },
    {
        "NL": "A cat chases mice to catch them.",
        "FOL": "∀x ∀y (Cat(x) ∧ Mouse(y) → ChasesToCatch(x, y))"
    },
    {
        "NL": "Mountains have peaks and valleys, while rivers flow through valleys.",
        "FOL": "∀x ∀y (Mountain(x) ∧ River(y) → (HasPeaks(x) ∧ HasValleys(x) ∧ FlowsThroughValleys(y)))"
    },
    {
        "NL": "A lamp is either on, off, or in sleep mode.",
        "FOL": "∀x (Lamp(x) → (On(x) ∨ Off(x) ∨ SleepMode(x)))"
    },
    {
        "NL": "Some buildings are made of brick, while others are made of wood or concrete.",
        "FOL": "∃x∃y∃z (Building(x) ∧ Building(y) ∧ Building(z) ∧ (MadeOf(x, brick) ∧ MadeOf(y, wood) ∧ MadeOf(z, concrete)))"
    },
    {
        "NL": "A room is well-lit if it has natural light or multiple artificial light sources.",
        "FOL": "∀x (Room(x) → (WellLit(x) ↔ (NaturalLight(x) ∨ MultipleArtificialLightSources(x))))"
    },
    {
        "NL": "Not every city is bustling or ancient.",
        "FOL": "¬∀x (City(x) → (Bustling(x) ∨ Ancient(x)))"
    },
    {
        "NL": "Something is a big hexagon only if it is orange.",
        "FOL": "∀x (Big(x) ∧ Hexagon(x) → Orange(x))"
    },
    {
        "NL": "Frogs consume insects, but toads avoid ants because of their acidity.",
        "FOL": "∀x∀y∀z (Frog(x) ∧ Insect(y) ∧ Ant(z) ∧ Toad(x) → (Consumes(x, y) ∧ ¬(Consumes(x, z))))"
    },
    {
        "NL": "Not every lecture is interesting, but every interesting lecture inspires students.",
        "FOL": "¬∀x (Lecture(x) → Interesting(x)) ∧ ∀y (Interesting(y) ∧ Lecture(y) → InspiresStudents(y))"
    },
    {
        "NL": "An architectural structure that serves as a place of worship, contains stained glass windows, and features a tall, pointed spire is a Gothic cathedral.",
        "FOL": "∀x (ArchitecturalStructure(x) ∧ PlaceOfWorship(x) ∧ ContainsStainedGlassWindows(x) ∧ FeaturesTallPointedSpire(x) → GothicCathedral(x))"
    },
    {
        "NL": "In a solar system, planets and their moons are bound to a central star by gravity.",
        "FOL": "∀x ∀y ∀z (SolarSystem(x) ∧ Planet(y) ∧ Moon(z) → BoundByGravity(x, y, CentralStar) ∧ BoundByGravity(x, z, CentralStar))"
    },
    {
        "NL": "Wind turbines generate electricity by converting the kinetic energy of wind into mechanical power.",
        "FOL": "∀x (WindTurbine(x) ∧ KineticEnergyOfWind(x) → GeneratesElectricity(x))"
    },
    {
        "NL": "A device is functioning if and only if it has at least one fully charged battery.",
        "FOL": "∀x (Functioning(x) ↔ ∃y (Charged(y) ∧ Has(x, y)))"
    },
    {
        "NL": "Birds fly in the sky, and fish swim in the water.",
        "FOL": "∀x ∀y (Bird(x) ∧ Fish(y) → (FliesInTheSky(x) ∧ SwimsInTheWater(y)))"
    },
    {
        "NL": "A person is considered a pharmacist if they dispense prescription medications and provide drug information to patients and healthcare professionals.",
        "FOL": "∀x (Person(x) ∧ DispensesPrescriptionMedications(x) ∧ ProvidesDrugInformation(x) → Pharmacist(x))"
    },
    {
        "NL": "A song is captivating if and only if its melody is enchanting and the lyrics are lucid, but it doesn't incorporate too many complicated verses.",
        "FOL": "∀x (Song(x) ∧ Captivating(x) ↔ (EnchantingMelody(x) ∧ LucidLyrics(x) ∧ ¬IncorporateManyComplicatedVerses(x)))"
    },
    {
        "NL": "There is an author in the cafe writing a convoluted plot.",
        "FOL": "∃x (Author(x) ∧ InTheCafe(x) ∧ WritingConvolutedPlot(x))"
    },
    {
        "NL": "A car that runs on electricity stored in rechargeable batteries and uses an electric motor instead of an internal combustion engine is an electric vehicle.",
        "FOL": "∀x∀y∀z (Car(x) ∧ RunsOnElectricity(x, y) ∧ RechargeableBattery(y) ∧ UsesMotor(x, z) ∧ ElectricMotor(z) ∧ ¬InternalCombustionEngine(z) → ElectricVehicle(x))"
    },
    {
        "NL": "A sport that involves two teams competing against each other by propelling a ball into the opposing team's goal using a long-handled stick is lacrosse.",
        "FOL": "∀x (Sport(x) ∧ InvolvesTwoTeams(x) ∧ CompetesByPropellingBallIntoOpposingGoal(x) ∧ UsesLongHandledStick(x) → Lacrosse(x))"
    },
    {
        "NL": "A violin is played with a bow, a piano is played by pressing keys, and a drum is played by hitting with sticks.",
        "FOL": "∀x∀y∀z (Violin(x) ∧ Piano(y) ∧ Drum(z) → (PlayedWithBow(x) ∨ (PlayedByPressingKeys(y) ∧ PlayedByHittingSticks(z))))"
    },
    {
        "NL": "A car is fuel-efficient when it has low fuel consumption per distance traveled.",
        "FOL": "∀x (Car(x) ∧ LowFuelConsumptionPerDistance(x) → FuelEfficient(x))"
    },
    {
        "NL": "A photographer captures images, and a painter creates paintings.",
        "FOL": "∀x ∀y (Photographer(x) ∧ Image(y) → Captures(x, y)) ∧ ∀z ∀w (Painter(z) ∧ Painting(w) → Creates(z, w))"
    },
    {
        "NL": "In a democratic government, citizens elect representatives to make laws and govern on their behalf.",
        "FOL": "∀x ∀y ∀z (DemocraticGovernment(x) ∧ Citizen(y) ∧ Representative(z) → (Elects(y, z) ∧ MakesLaws(z, x) ∧ Governs(z, x)))"
    },
    {
        "NL": "An amphibian lives both on land and in water and has a moist skin.",
        "FOL": "∀x (Amphibian(x) ↔ (LivesOnLand(x) ∧ LivesInWater(x) ∧ HasMoistSkin(x)))"
    },
    {
        "NL": "If a plant is a succulent, it has thick and fleshy leaves.",
        "FOL": "∀x (Succulent(x) → HasThickAndFleshyLeaves(x))"
    },
    {
        "NL": "An animal is classified as nocturnal if it is primarily active during the night.",
        "FOL": "∀x (Animal(x) ∧ PrimarilyActiveAtNight(x) → Nocturnal(x))"
    },
    {
        "NL": "A show is entertaining if it has a captivating storyline and unforgettable personalities.",
        "FOL": "∀x (Show(x) ∧ HasCaptivatingStoryline(x) ∧ HasUnforgettablePersonalities(x) → Entertaining(x))"
    },
    {
        "NL": "A bird is an insectivore if and only if it eats spiders or worms, but not seeds.",
        "FOL": "∀x (Bird(x) → (Insectivore(x) ↔ (EatsSpiders(x) ∨ EatsWorms(x)) ∧ ¬EatsSeeds(x)))"
    },
    {
        "NL": "A celestial body that is a star generates light and heat through nuclear fusion, has a specific spectral classification, and can form a part of a constellation.",
        "FOL": "∀x (CelestialBody(x) ∧ Star(x) → GeneratesLightAndHeatThroughNuclearFusion(x) ∧ HasSpectralClassification(x) ∧ CanFormPartOfConstellation(x))"
    },
    {
        "NL": "Big ships have deep drafts, while small boats have shallow drafts.",
        "FOL": "∀x (Ship(x) ∧ Big(x) → HasDeepDraft(x)) ∧ ∀y (Boat(y) ∧ Small(y) → HasShallowDraft(y))"
    },
    {
        "NL": "A person is considered a nurse if they provide healthcare services, including assisting doctors, monitoring patients, and administering medication.",
        "FOL": "∀x (Nurse(x) ↔ (ProvidesHealthcareServices(x) ∧ AssistsDoctors(x) ∧ MonitorsPatients(x) ∧ AdministersMedication(x)))"
    },
    {
        "NL": "Every farmer who grows both apples and oranges, unless they are a botanist, has either won a farming award or has not participate in regional contests.",
        "FOL": "∀x (Farmer(x) ∧ GrowsApples(x) ∧ GrowsOranges(x) ∨ Botanist(x) → (WonFarmingAward(x) ∨ ¬ ParticipatedInRegionalContests(x)))"
    },
    {
        "NL": "A person who is an engineer designs, builds, or maintains machines, structures, or systems.",
        "FOL": "∀x (Engineer(x) → DesignsBuildsOrMaintainsMachinesStructuresOrSystems(x))"
    },
    {
        "NL": "An electric car can travel long distances on a single charge when it features an energy-dense battery, employs regenerative braking technology, and utilizes lightweight materials for construction.",
        "FOL": "∀x (ElectricCar(x) ∧ EnergyDenseBattery(x) ∧ RegenerativeBrakingTechnology(x) ∧ LightweightMaterials(x) → LongDistancesSingleCharge(x))"
    },
    {
        "NL": "A solar system is varied in heavenly bodies if it encompasses comets, asteroids, and dwarf planets with special attributes.",
        "FOL": "∀x (SolarSystem(x) ∧ ∃y ∃z ∃w (Comet(y) ∧ Asteroid(z) ∧ DwarfPlanet(w) ∧ SpecialAttributes(y, z, w) ∧ Encompasses(x, y, z, w)) → HasVarietyOfHeavenlyBodies(x))"
    },
    {
        "NL": "A person who is knowledgeable in a subject and enjoys teaching others is a good candidate for a tutor.",
        "FOL": "∀x (Knowledgeable(x) ∧ EnjoysTeaching(x) → GoodTutorCandidate(x))"
    },
    {
        "NL": "Not every employee is a manager.",
        "FOL": "¬∀x (Employee(x) → Manager(x))"
    },
    {
        "NL": "An athlete participates in either team sports or individual sports, but not both.",
        "FOL": "∀x (Athlete(x) → (TeamSports(x) ⊕ IndividualSports(x)))"
    },
    {
        "NL": "A robot is functional if it has power and its components are in working order.",
        "FOL": "∀x (Robot(x) → (HasPower(x) ∧ WorkingComponents(x) ↔ Functional(x)))"
    },
    {
        "NL": "Some artists create sculptures using metal, while others prefer to work with materials like clay or wood.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ (Metal(y) ∧ Sculpture(x, y) → ¬(Clay(z) ∨ Wood(z))) ⊕ (Clay(y) ∨ Wood(y) ∧ Sculpture(x, y) → ¬Metal(z)))"
    },
    {
        "NL": "A healthy diet consists of a balanced intake of proteins, carbohydrates, and fats.",
        "FOL": "∀x (HealthyDiet(x) → BalancedIntake(x, proteins) ∧ BalancedIntake(x, carbohydrates) ∧ BalancedIntake(x, fats))"
    },
    {
        "NL": "A horse has four legs, while a scorpion has eight legs, but an eel lacks legs.",
        "FOL": "∀x (Horse(x) → HasFourLegs(x)) ∧ ∀y (Scorpion(y) → HasEightLegs(y)) ∧ ∀z (Eel(z) → ¬HasLeg(z))"
    },
    {
        "NL": "Anything that is a cat or a dog follows something that is lazy or active.",
        "FOL": "∀x ((Cat(x) ∧ Animal(x)) ∨ (Dog(x) ∧ Animal(x)) → ∃y ((Lazy(y) ∨ Active(y)) ∧ Follows(x, y)))"
    },
    {
        "NL": "A book is popular if it is frequently borrowed from libraries and has many positive reviews.",
        "FOL": "∀x (Book(x) ∧ Popular(x) ↔ (FrequentlyBorrowed(x) ∧ ManyPositiveReviews(x)))"
    },
    {
        "NL": "Some painters are writers.",
        "FOL": "∃x (Painter(x) ∧ Writer(x))"
    },
    {
        "NL": "A room can be either private or shared.",
        "FOL": "∀x (Room(x) → (Private(x) ⊕ Shared(x)))"
    },
    {
        "NL": "A seismograph detects and measures ground motion caused by earthquakes or other geological events.",
        "FOL": "∀x (Seismograph(x) → (DetectsGroundMotion(x) ∧ MeasuresGroundMotion(x) ∧ CausedByEarthquakesOrOtherGeologicalEvents(x)))"
    },
    {
        "NL": "An article is an obituary if it outlines the life journey of the deceased.",
        "FOL": "∀x ∃y (Article(x) ∧ Deceased(y) ∧ OutlinesLifeJourney(x, y) → Obituary(x))"
    },
    {
        "NL": "A restaurant that serves delicious food and provides excellent service attracts customers and receives positive reviews.",
        "FOL": "∀x∀y (Restaurant(x) ∧ ServesDeliciousFood(x) ∧ ProvidesExcellentService(x) → (AttractsCustomers(y, x) ∧ ReceivesPositiveReviews(y, x)))"
    },
    {
        "NL": "A healthy meal includes fruits, vegetables, and lean protein.",
        "FOL": "∀x (Meal(x) → (Healthy(x) ↔ (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesLeanProtein(x))))"
    },
    {
        "NL": "Someone becomes an artist if they study art and create original work.",
        "FOL": "∀x (Person(x) ∧ StudiesArt(x) ∧ CreatesOriginalWork(x) → Artist(x))"
    },
    {
        "NL": "A river flows into a lake or an ocean, while a stream flows into a river.",
        "FOL": "∀x∀y∀z (River(x) ∧ Stream(y) ∧ (Lake(z) ∨ Ocean(z)) → (FlowsInto(x, z) ∧ FlowsInto(y, x)))"
    },
    {
        "NL": "A type of software that is antivirus helps protect a computer against malware and performs regular scans.",
        "FOL": "∀x (SoftwareType(x) ∧ Antivirus(x) → HelpsProtectAgainstMalware(x) ∧ PerformsRegularScans(x))"
    },
    {
        "NL": "Students attend schools to learn subjects from teachers.",
        "FOL": "∀x ∀y ∀z (Student(x) ∧ School(y) ∧ Attends(x, y) → ∃w (Subject(w) ∧ Teacher(z) ∧ LearnsFrom(x, w, z)))"
    },
    {
        "NL": "A parent is a legal guardian of a child.",
        "FOL": "∀x ∀y (Parent(x) ∧ Child(y) → LegalGuardian(x, y))"
    },
    {
        "NL": "In a forest ecosystem, decomposers such as fungi and bacteria play a critical role in breaking down dead organic matter and recycling nutrients, thus maintaining soil fertility.",
        "FOL": "∀x∀y∀z (ForestEcosystem(x) ∧ Decomposer(y) ∧ (Fungi(y) ∨ Bacteria(y)) ∧ BreaksDownOrganicMatter(y, z) ∧ DeadOrganicMatter(z) → MaintainsSoilFertility(x))"
    },
    {
        "NL": "A smartphone stores secure data and harnesses it when mandated to accomplish functions.",
        "FOL": "∀x (Smartphone(x) → (StoresSecureData(x) ∧ (IsMandatedToAccomplishFunctions(x) → HarnessesData(x))))"
    },
    {
        "NL": "An animal is a bird or a fish.",
        "FOL": "∀x (Animal(x) → (Bird(x) ∨ Fish(x)))"
    },
    {
        "NL": "A skyscraper is a tall building with multiple floors and is primarily used for commercial or residential purposes.",
        "FOL": "∀x (Skyscraper(x) → (TallBuilding(x) ∧ MultipleFloors(x) ∧ (CommercialPurpose(x) ∨ ResidentialPurpose(x))))"
    },
    {
        "NL": "A forest is a carbon sink if it absorbs more carbon dioxide than it releases and promotes carbon sequestration.",
        "FOL": "∀x ∀y ∀z (Forest(x) ∧ CarbonDioxide(y) ∧ CarbonSequestration(z) ∧ AbsorbsMoreThanReleases(x, y) ∧ Promotes(x, z) → CarbonSink(x))"
    },
    {
        "NL": "A plant is classified as a succulent if it has thick, fleshy leaves or stems that store water and can survive in arid environments.",
        "FOL": "∀x (Plant(x) ∧ ThickFleshyLeavesOrStems(x) ∧ StoresWater(x) ∧ SurvivesInAridEnvironments(x) → Succulent(x))"
    },
    {
        "NL": "A cow has four legs, while a parrot has two legs, but a jellyfish has no legs.",
        "FOL": "∀x (Cow(x) → HasFourLegs(x)) ∧ ∀y (Parrot(y) → HasTwoLegs(y)) ∧ ∀z (Jellyfish(z) → ¬HasLegs(z))"
    },
    {
        "NL": "There are numbers that are either even or odd, but not both.",
        "FOL": "∃x (Number(x) ∧ (Even(x) ⊕ Odd(x)))"
    },
    {
        "NL": "A flower blooms beautifully when it's healthy or well-watered.",
        "FOL": "∀x (Flower(x) ∧ (Healthy(x) ∨ WellWatered(x)) → BloomsBeautifully(x))"
    },
    {
        "NL": "A book can be classified as a bestseller if it has sold a large number of copies or has received widespread critical acclaim.",
        "FOL": "∀x (Book(x) ∧ (SoldLargeNumberOfCopies(x) ∨ ReceivedWidespreadCriticalAcclaim(x)) → Bestseller(x))"
    },
    {
        "NL": "Voters elect politicians, who then create and enforce laws.",
        "FOL": "∀x ∀y ∀z (Voter(x) ∧ Politician(y) ∧ Elects(x, y) → (CreatesLaws(y, z) ∧ EnforcesLaws(y, z)))"
    },
    {
        "NL": "Not all computers are state-of-the-art, still, it is beneficial to use computers.",
        "FOL": "¬∀x (Computer(x) → StateOfTheArt(x)) ∧ ∀y (Computer(y) → BeneficialToUse(y))"
    },
    {
        "NL": "Not all philosophers are either ethicists or ontologists, and none of the smart ones among them hate logic.",
        "FOL": "¬∀x (Philosopher(x) → (Ethicist(x) ∨ Ontologist(x))) ∧ ∀y (Philosopher(y) ∧ Smart(y) → ¬HateLogic(y))"
    },
    {
        "NL": "A bicycle with gears allows the rider to adjust the level of pedaling resistance, making it easier to ride uphill or maintain a comfortable pace on flat terrain.",
        "FOL": "∀x (Bicycle(x) ∧ HasGears(x) → (AdjustPedalingResistance(x) ∧ (EasierRideUphill(x) ∨ ComfortablePaceFlatTerrain(x))))"
    },
    {
        "NL": "A student can solve a math problem or a physics problem, but not both.",
        "FOL": "∀x (Student(x) ∧ (SolvesMathProblem(x) ⊕ SolvesPhysicsProblem(x)))"
    },
    {
        "NL": "A man is fixing a bike in the workshop.",
        "FOL": "∃x ∃y (Person(x) ∧ Bike(y) ∧ Fixing(x, y) ∧ InTheWorkshop(x))"
    },
    {
        "NL": "A book becomes a bestseller when it has an engaging narrative and receives positive reviews.",
        "FOL": "∀x ∀y (Book(x) ∧ EngagingNarrative(y) ∧ PositiveReviews(x) → Bestseller(x))"
    },
    {
        "NL": "A color can be either primary or secondary, but not tertiary.",
        "FOL": "∀x (Color(x) → (Primary(x) ⊕ Secondary(x)) ∧ ¬Tertiary(x))"
    },
    {
        "NL": "A research laboratory conducts experiments on chemical, biological, and physical phenomena to advance scientific knowledge.",
        "FOL": "∀x∀y∀z (ResearchLaboratory(x) ∧ ChemicalPhenomenon(y) ∧ BiologicalPhenomenon(z) → ConductsExperimentsOn(x, y) ∧ ConductsExperimentsOn(x, z))"
    },
    {
        "NL": "A type of writing system that uses symbols to represent sounds or words, and can be written horizontally or vertically, is classified as a script.",
        "FOL": "∀x (WritingSystem(x) ∧ UsesSymbols(x) ∧ RepresentsSoundsOrWords(x) ∧ (WrittenHorizontally(x) ∨ WrittenVertically(x)) → Script(x))"
    },
    {
        "NL": "A tropical climate has hot temperatures and high humidity, while a polar climate has cold temperatures and low humidity.",
        "FOL": "∀x (TropicalClimate(x) → (HotTemperature(x) ∧ HighHumidity(x))) ⊕ ∀y (PolarClimate(y) → (ColdTemperature(y) ∧ LowHumidity(y)))"
    },
    {
        "NL": "A smartphone stores contacts and accesses them when essential for communication.",
        "FOL": "∀x (Smartphone(x) → (StoresContacts(x) ∧ (IsEssentialForCommunication(x) → AccessContacts(x))))"
    },
    {
        "NL": "A square points to a triangle only if that triangle points back to it.",
        "FOL": "∀x ∀y (Square(x) ∧ Triangle(y) ∧ (PointsTo(x, y) → PointsTo(y, x)))"
    },
    {
        "NL": "If an object can be used for cutting and has a handle, it is a knife.",
        "FOL": "∀x ((CanCut(x) ∧ HasHandle(x)) → Knife(x))"
    },
    {
        "NL": "Chefs cook food.",
        "FOL": "∀x ∀y (Chef(x) ∧ Food(y) → Cook(x, y))"
    },
    {
        "NL": "The sun sets in the west.",
        "FOL": "SunSettingDirection(sun, west)"
    },
    {
        "NL": "A flower could be a rose or a tulip but not both.",
        "FOL": "∀x (Flower(x) → (Rose(x) ⊕ Tulip(x)))"
    },
    {
        "NL": "A snake sheds its skin periodically as it grows, while a turtle has a hard shell that protects its body from predators.",
        "FOL": "∀x∀y (Snake(x) ∧ Turtle(y) → (ShedsSkinPeriodically(x) ∧ Grows(x)) ∧ (HasHardShell(y) ∧ ProtectsFromBodyPredators(y)))"
    },
    {
        "NL": "A book is either read or unread, not both.",
        "FOL": "∀x (Book(x) → (Read(x) ⊕ Unread(x)))"
    },
    {
        "NL": "A predator hunts its prey if it is hungry and the prey is within reach.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) → (Hunts(x, y) ↔ (Hungry(x) ∧ WithinReach(x, y))))"
    },
    {
        "NL": "Someone who assists a human will be assisted by someone.",
        "FOL": "∀x ∃y (Human(x) ∧ Human(y) ∧ Assist(x, y) → ∃z (Human(z) ∧ WillAssist(z, x)))"
    },
    {
        "NL": "A person is considered an employee if they work in a company or a firm",
        "FOL": "∀x (Person(x) ∧ (WorksInCompany(x) ∨ WorksInFirm(x)) → Employee(x))"
    },
    {
        "NL": "Certain cameras can capture images in low light and have interchangeable lenses.",
        "FOL": "∃x (Camera(x) ∧ CapturesInLowLight(x) ∧ InterchangeableLenses(x))"
    },
    {
        "NL": "A mountain is taller than a hill, and a hill is shorter than a mountain.",
        "FOL": "∀x ∀y (Mountain(x) ∧ Hill(y) → (Taller(x, y) ∧ Shorter(y, x)))"
    },
    {
        "NL": "Every mammal either lays eggs or gives birth to live young.",
        "FOL": "∀x (Mammal(x) → (LaysEggs(x) ⊕ GivesBirthToLiveYoung(x)))"
    },
    {
        "NL": "A bakery item is popular if it is made from high-quality ingredients, has a unique flavor, or is visually appealing.",
        "FOL": "∀x (PopularBakeryItem(x) ↔ (BakeryItem(x) ∧ (HighQualityIngredients(x) ∨ UniqueFlavor(x) ∨ VisuallyAppealing(x))))"
    },
    {
        "NL": "There is a concert that every person attends if all guitars are not tuned.",
        "FOL": "¬∀x (Guitar(x) → Tuned(x)) → ∃y (Concert(y) ∧ ∀z (Person(z) → Attends(z, y)))"
    },
    {
        "NL": "A movie that is thrilling can scare people.",
        "FOL": "∀x ∀y (Movie(x) ∧ Thriller(x) ∧ Person(y) → CanScare(x, y))"
    },
    {
        "NL": "A pentagon connects to a rectangle only if that rectangle connects back to it",
        "FOL": "∀x (Pentagon(x) → ∀y (Rectangle(y) ∧ ConnectsTo(x, y) → ConnectsTo(y, x)))"
    },
    {
        "NL": "Only carnivores eat meat or fish.",
        "FOL": "∀x (EatsMeat(x) ∨ EatsFish(x) → Carnivore(x))"
    },
    {
        "NL": "If an element is a metal, it is not a non-metal, and vice versa.",
        "FOL": "∀x (Element(x) → ¬(Metal(x) ∧ NonMetal(x)))"
    },
    {
        "NL": "An item is a weapon if it is designed or used to inflict harm or damage to living beings or structures.",
        "FOL": "∀x (Item(x) ∧ (DesignedToInflictHarm(x) ∨ UsedToInflictHarm(x)) ∧ (TargetsLivingBeings(x) ∨ TargetsStructures(x)) → Weapon(x))"
    },
    {
        "NL": "A computer algorithm that can learn from data, improve its performance over time, and make predictions or decisions is called a machine learning algorithm.",
        "FOL": "∀x (ComputerAlgorithm(x) ∧ LearnsFromData(x) ∧ ImprovesPerformanceOverTime(x) ∧ MakesPredictionsOrDecisions(x) → MachineLearningAlgorithm(x))"
    },
    {
        "NL": "A country is landlocked if it is surrounded by land and has no coastline.",
        "FOL": "∀x (LandlockedCountry(x) ↔ (Country(x) ∧ SurroundedByLand(x) ∧ ¬HasCoastline(x)))"
    },
    {
        "NL": "In a race, participants can either run or walk, but they cannot do both simultaneously.",
        "FOL": "∀x (Participant(x) → (Runs(x) ⊕ Walks(x)))"
    },
    {
        "NL": "A bank provides financial services to customers, such as loans, savings accounts, and investment opportunities.",
        "FOL": "∀x∀y (Bank(x) ∧ Customer(y) → (ProvidesLoans(x, y) ∧ OffersSavingsAccounts(x, y) ∧ PresentsInvestmentOpportunities(x, y)))"
    },
    {
        "NL": "Some children play joyfully.",
        "FOL": "∃x (Child(x) ∧ PlayJoyfully(x))"
    },
    {
        "NL": "Some beverages are sweetened with sugar or artificial sweeteners, but not both.",
        "FOL": "∃x ∃y ∃z (Beverage(x) ∧ Sweetener(y) ∧ Sweetener(z) ∧ Sugar(y) ∧ Artificial(z) ∧ (SweetenedWith(x, y) ⊕ SweetenedWith(x, z)))"
    },
    {
        "NL": "A player plays basketball or volleyball.",
        "FOL": "∀x (Player(x) → (PlaysBasketball(x) ∨ PlaysVolleyball(x)))"
    },
    {
        "NL": "An airplane is supersonic if it can travel faster than the speed of sound.",
        "FOL": "∀x (Airplane(x) → (Supersonic(x) ↔ TravelsFasterThanSound(x)))"
    },
    {
        "NL": "An object is either a high mountain or a deep river, and it is green regardless.",
        "FOL": "∃x (((High(x) ∧ Mountain(x)) ∨ (Deep(x) ∧ River(x))) ∧ Green(x))"
    },
    {
        "NL": "A place is a greenhouse when it is a glass or transparent structure, maintains a controlled environment for growing plants, and often utilizes artificial light and temperature regulation.",
        "FOL": "∀x (Place(x) ∧ GlassOrTransparentStructure(x) ∧ ControlledEnvironmentForGrowingPlants(x) ∧ UtilizesArtificialLightAndTemperatureRegulation(x) → Greenhouse(x))"
    },
    {
        "NL": "A song is a ballad if it tells the story of a particular person, composed by the person themselves.",
        "FOL": "∀x ∃y (Song(x) ∧ Person(y) ∧ TellsStory(x, y) ∧ ComposedBy(x, y) → Ballad(x))"
    },
    {
        "NL": "A vehicle can be a car, offering sophistication and comfort, and fetch a high resale value, or it can be a bike, promising thrill and adventure, and draw significant attention.",
        "FOL": "∀x (Vehicle(x) → ((Car(x) ∧ OfferSophistication(x) ∧ OfferComfort(x) ∧ HighResaleValue(x)) ⊕ (Bike(x) ∧ PromiseThrill(x) ∧ PromiseAdventure(x) ∧ DrawAttention(x))))"
    },
    {
        "NL": "A tree provides shade and habitat for various animals and insects.",
        "FOL": "∀x ∀y (Tree(x) ∧ (Animals(y) ∨ Insects(y)) ∧ ProvidesShade(x) → ProvidesHabitat(x, y))"
    },
    {
        "NL": "If a person consistently sets realistic goals, they are more likely to achieve success and progress in their endeavors.",
        "FOL": "∀x (ConsistentlySetsRealisticGoals(x) → (AchieveSuccess(x) ∧ ProgressInEndeavors(x)))"
    },
    {
        "NL": "There are computers.",
        "FOL": "∃x (Computer(x))"
    },
    {
        "NL": "A song is a self-written piece if it tells the emotional journey of a certain artist, composed by themselves.",
        "FOL": "∀x ∃y (Song(x) ∧ Artist(y) ∧ TellsEmotionalJourney(x, y) ∧ ComposedBy(x, y) → SelfWrittenPiece(x))"
    },
    {
        "NL": "A place is considered a gymnasium if it is designed for sports, exercise, or physical training.",
        "FOL": "∀x (Place(x) ∧ DesignedForSports(x) ∧ DesignedForExercise(x) ∧ DesignedForPhysicalTraining(x) → Gymnasium(x))"
    },
    {
        "NL": "A computer with a powerful processor and a large amount of RAM can handle complex tasks efficiently.",
        "FOL": "∀x (Computer(x) ∧ PowerfulProcessor(x) ∧ LargeAmountOfRAM(x) → HandlesComplexTasksEfficiently(x))"
    },
    {
        "NL": "Musicians who can play multiple instruments and compose their own songs are called multi-talented.",
        "FOL": "∀x (Musician(x) ∧ PlayMultipleInstruments(x) ∧ ComposeOwnSongs(x) → MultiTalented(x))"
    },
    {
        "NL": "Some cities are either big or small, but not both.",
        "FOL": "∃x (City(x) ∧ (Big(x) ⊕ Small(x)))"
    },
    {
        "NL": "No gardener exists who can grow every type of fruit but has never grown a vegetable.",
        "FOL": "¬∃x (Gardener(x) ∧ ∀y (Fruit(y) → CanGrow(x, y)) ∧ ¬∃z (Vegetable(z) ∧ HasGrown(x, z)))"
    },
    {
        "NL": "An artwork is an abstract painting if it uses shapes, colors, and textures to represent subjects in a non-representational manner.",
        "FOL": "∀x (Artwork(x) ∧ Shapes(x) ∧ Colors(x) ∧ Textures(x) ∧ NonRepresentational(x) → AbstractPainting(x))"
    },
    {
        "NL": "All teachers are knowledgeable individuals, but not all knowledgeable individuals are teachers.",
        "FOL": "∀x (Teacher(x) → KnowledgeableIndividual(x)) ∧ ∃y (KnowledgeableIndividual(y) ∧ ¬Teacher(y))"
    },
    {
        "NL": "A florist creates a beautiful arrangement by selecting fresh flowers, using complementary colors, and arranging them artistically.",
        "FOL": "∀x (Florist(x) → (SelectFreshFlowers(x) ∧ UseComplementaryColors(x) ∧ ArrangeArtistically(x) → CreateBeautifulArrangement(x)))"
    },
    {
        "NL": "Each gymnast who competes in both national and international competitions, unless they are an Olympic medalist, has either set a national record or has not participated in state championships.",
        "FOL": "∀x (Gymnast(x) ∧ CompetesInNationalCompetitions(x) ∧ CompetesInInternationalCompetitions(x) ∨ OlympicMedalist(x) → (SetNationalRecord(x) ∨ ¬ParticipatedInStateChampionships(x)))"
    },
    {
        "NL": "A zoo exhibits a variety of animal species from different habitats, such as rainforests, savannas, and deserts, for educational and conservation purposes.",
        "FOL": "∀x ∀y ∀z (Zoo(x) → (ExhibitsAnimalSpecies(x, y) ∧ DifferentHabitats(y) ∧ (Rainforests(y) ∨ Savannas(y) ∨ Deserts(y)) ∧ ForEducationalAndConservationPurposes(x, z)))"
    },
    {
        "NL": "A phone receives a signal.",
        "FOL": "∀x (Phone(x) → ReceivesSignal(x))"
    },
    {
        "NL": "All nurses who administer medication are also competent in patient care.",
        "FOL": "∀x (Nurse(x) ∧ AdministerMedication(x) → CompetentInPatientCare(x))"
    },
    {
        "NL": "Every city is either coastal or inland, but not both.",
        "FOL": "∀x (City(x) → (Coastal(x) ⊕ Inland(x)))"
    },
    {
        "NL": "A bicycle has a chain-driven mechanism, a scooter is propelled by foot, and a skateboard relies on the rider's balance and pushing off with one foot.",
        "FOL": "∀x ∀y ∀z (Bicycle(x) → ChainDrivenMechanism(x)) ∧ (Scooter(y) → PropelledByFoot(y)) ∧ (Skateboard(z) → (RequiresBalance(z) ∧ PushingOffWithOneFoot(z)))"
    },
    {
        "NL": "An author writes books and an artist creates paintings.",
        "FOL": "∀x (Author(x) → WritesBooks(x)) ∧ ∀y (Artist(y) → CreatesPaintings(y))"
    },
    {
        "NL": "A storm occurs when there is rain combined with either thunder or strong winds.",
        "FOL": "∀x (Storm(x) ↔ (∃y (Rain(y) ∧ (Thunder(y) ⊕ StrongWinds(y)))))"
    },
    {
        "NL": "A software engineer designs, develops, and tests software applications, and collaborates with other engineers and stakeholders to deliver functional and reliable software solutions.",
        "FOL": "∀x ∀y ∀z (SoftwareEngineer(x) ∧ SoftwareApplication(y) ∧ Stakeholder(z) → DesignsDevelopsAndTestsSoftware(x, y) ∧ CollaboratesWithOtherEngineersAndStakeholders(x, z))"
    },
    {
        "NL": "A musical performance is mesmerizing when it features talented musicians, displays a high level of technical skill, and evokes strong emotional responses.",
        "FOL": "∀x (MusicalPerformance(x) ∧ FeaturesTalentedMusicians(x) ∧ DisplaysHighLevelOfTechnicalSkill(x) ∧ EvokesStrongEmotionalResponses(x) → Mesmerizing(x))"
    },
    {
        "NL": "A movie becomes a blockbuster when it features a captivating storyline, boasts an exceptional cast, and receives positive reviews from critics.",
        "FOL": "∀x (Movie(x) ∧ CaptivatingStoryline(x) ∧ ExceptionalCast(x) ∧ PositiveReviews(x) → Blockbuster(x))"
    },
    {
        "NL": "If a person consumes excessive amounts of caffeine, they may experience increased anxiety and restlessness.",
        "FOL": "∀x (ExcessiveCaffeineConsumption(x) → (IncreasedAnxiety(x) ∧ Restlessness(x)))"
    },
    {
        "NL": "Some paintings are created using oil paints, while others are made with acrylics or watercolors.",
        "FOL": "∃x∃y∃z (Painting(x) ∧ OilPaints(x) ∧ Painting(y) ∧ Acrylics(y) ∧ Painting(z) ∧ Watercolors(z))"
    },
    {
        "NL": "A sale is active if it has not expired and has available stock.",
        "FOL": "∀x (Sale(x) ∧ ¬Expired(x) ∧ HasAvailableStock(x) → Active(x))"
    },
    {
        "NL": "Healthy individuals do not skip meals.",
        "FOL": "∀x (Individual(x) ∧ Healthy(x) → ¬SkipMeals(x))"
    },
    {
        "NL": "A person cannot be both a child and an adult.",
        "FOL": "¬∃x (Person(x) ∧ Child(x) ∧ Adult(x))"
    },
    {
        "NL": "A bookstore sells different categories of books, such as fiction, non-fiction, and children's books, and provides a variety of formats, including hardcover, paperback, and digital.",
        "FOL": "∀x∀y∀z (Bookstore(x) ∧ (Fiction(y) ∨ NonFiction(y) ∨ ChildrensBook(y)) ∧ (Hardcover(z) ∨ Paperback(z) ∨ Digital(z)) → SellsCategoriesAndProvidesFormats(x, y, z))"
    },
    {
        "NL": "A software application that serves a specific purpose and is compatible with a particular operating system is usually a desktop or a mobile application.",
        "FOL": "∀x∀y∀z (SoftwareApplication(x) ∧ ServesPurpose(x, y) ∧ CompatibleWithOperatingSystem(x, z) → (DesktopApplication(x) ∨ MobileApplication(x)))"
    },
    {
        "NL": "If all humans cherish Lucy then there are people who do not appreciate Tom.",
        "FOL": "¬∀x (Human(x) → Cherish(x, lucy)) → ∃x (Human(x) ∧ ¬Appreciate(x, tom))"
    },
    {
        "NL": "A movie is successful when it has an engaging plot, talented actors, and exceptional special effects.",
        "FOL": "∀x (Movie(x) → (Successful(x) ↔ (EngagingPlot(x) ∧ TalentedActors(x) ∧ ExceptionalSpecialEffects(x))))"
    },
    {
        "NL": "A person who represents clients in legal disputes and provides legal advice is called an attorney.",
        "FOL": "∀x (RepresentsClientsInLegalDisputesAndProvidesLegalAdvice(x) → Attorney(x))"
    },
    {
        "NL": "A computer display can be either a monitor or a projector.",
        "FOL": "∀x (ComputerDisplay(x) → (Monitor(x) ⊕ Projector(x)))"
    },
    {
        "NL": "There exist regions where few children do not play.",
        "FOL": "∃x ∃y (Region(x) ∧ Child(y) ∧¬PlayIn(y, x))"
    },
    {
        "NL": "An electronic device is a camera if it captures images or videos, stores them digitally, and has a lens for focusing.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CapturesImagesOrVideos(x) ∧ StoresDigitally(x) ∧ HasLensForFocusing(x) → Camera(x))"
    },
    {
        "NL": "A bicycle has pedals.",
        "FOL": "∀x (Bicycle(x) → HasPedals(x))"
    },
    {
        "NL": "Any blue object attracts at least one object that attracts only green things.",
        "FOL": "∀x (Blue(x) → ∃y (Attracts(x, y) ∧ ¬∃z (Attracts(y, z) ∧ ¬Green(z))))"
    },
    {
        "NL": "A museum exhibits artworks such as paintings, sculptures, and photographs, along with artifacts from history and culture.",
        "FOL": "∀x (Museum(x) → (ExhibitsPaintings(x) ∧ ExhibitsSculptures(x) ∧ ExhibitsPhotographs(x) ∧ ExhibitsHistoricalArtifacts(x) ∧ ExhibitsCulturalArtifacts(x)))"
    },
    {
        "NL": "A restaurant is deemed excellent if it offers delicious meals and either has a cozy atmosphere or provides top-notch customer service.",
        "FOL": "∀x (Restaurant(x) ∧ OffersDeliciousMeals(x) ∧ (HasCozyAtmosphere(x) ∨ ProvidesTopNotchCustomerService(x)) → Excellent(x))"
    },
    {
        "NL": "If not all people are friendly, then there exists an animal that, according to it, all animals are amicable.",
        "FOL": "¬∀x (Person(x) → Friendly(x)) → ∃y (Animal(y) ∧ ∀z (Animal(z) → AmicableAccordingTo(z, y)))"
    },
    {
        "NL": "House plans are not blueprints.",
        "FOL": "∀z (HousePlan(z) → ¬Blueprint(z))"
    },
    {
        "NL": "All chefs are good cooks, or some cooks are not gourmet experts.",
        "FOL": "∀x (Chef(x) → GoodCook(x)) ∨ ∃y (Cook(y) ∧ ¬GourmetExpert(y))"
    },
    {
        "NL": "A song is considered popular if it frequently tops the charts.",
        "FOL": "∀x (Song(x) ∧ FrequentlyTopsTheCharts(x) → Popular(x))"
    },
    {
        "NL": "A wildfire can generate smoke, heat, or ash.",
        "FOL": "∀x (Wildfire(x) → (GeneratesSmoke(x) ∨ GeneratesHeat(x) ∨ GeneratesAsh(x)))"
    },
    {
        "NL": "A sculpture that is abstract can make onlookers feel puzzled.",
        "FOL": "∀x ∀y (Sculpture(x) ∧ Abstract(x) ∧ Onlooker(y) → CanMakePuzzled(x, y))"
    },
    {
        "NL": "A student who graduates with a high GPA and strong extracurricular achievements has a greater chance of getting into a prestigious university.",
        "FOL": "∀x ((HighGPA(x) ∧ StrongExtracurricularAchievements(x)) → GreaterChanceOfPrestigiousUniversity(x))"
    },
    {
        "NL": "In a market economy, supply and demand influence the price of goods and services, which in turn affects production and consumption.",
        "FOL": "∀x (MarketEconomy(x) → ((Supply(x) ∧ Demand(x)) ↔ (InfluencesPrice(x) ∧ AffectsProduction(x) ∧ AffectsConsumption(x))))"
    },
    {
        "NL": "No diamond is blue.",
        "FOL": "¬∃x (Diamond(x) ∧ Blue(x))"
    },
    {
        "NL": "A person becomes an adult at the age of 18.",
        "FOL": "∀x (Person(x) ∧ Age(x, 18) → Adult(x))"
    },
    {
        "NL": "A phone rings when a call is received or an alarm goes off.",
        "FOL": "∀x (Phone(x) ∧ (ReceivesCall(x) ∨ AlarmGoesOff(x)) → Rings(x))"
    },
    {
        "NL": "A beverage is refreshing when it is cold, hydrating, and has a pleasant taste.",
        "FOL": "∀x ∀y (Beverage(x) ∧ Cold(x, y) ∧ Hydrating(y) ∧ PleasantTaste(x) → Refreshing(x))"
    },
    {
        "NL": "If a musical instrument is a string instrument, it produces sound through the vibration of strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ StringInstrument(x) → ProducesSoundThroughVibrationOfStrings(x))"
    },
    {
        "NL": "A ship can sail from one port to another if the ship is seaworthy, the two ports are connected by navigable waters, and the crew is trained to navigate the route.",
        "FOL": "∀x∀y∀z (Ship(x) ∧ Port(y) ∧ Port(z) ∧ Seaworthy(x) ∧ ConnectedByNavigableWaters(y, z) ∧ TrainedCrew(x, y, z) → CanSail(x, y, z))"
    },
    {
        "NL": "A battery is fully charged when it reaches maximum capacity and cannot store more energy.",
        "FOL": "∀x (Battery(x) → (ReachesMaximumCapacity(x) ∧ ¬CanStoreMoreEnergy(x) → FullyCharged(x)))"
    },
    {
        "NL": "Some bicycles are either single-speed or multi-speed, but not both.",
        "FOL": "∃x (Bicycle(x) ∧ (SingleSpeed(x) ⊕ MultiSpeed(x)))"
    },
    {
        "NL": "A flower blooms when the temperature is warm and it receives adequate sunlight.",
        "FOL": "∀x (Flower(x) ∧ WarmTemperature(x) ∧ AdequateSunlight(x) → Blooms(x))"
    },
    {
        "NL": "A machine that cools the air by removing heat and humidity is an air conditioner.",
        "FOL": "∀x (Machine(x) ∧ CoolsAir(x) ∧ RemovesHeat(x) ∧ RemovesHumidity(x) → AirConditioner(x))"
    },
    {
        "NL": "A man who has a medical degree, practices in a hospital, and provides healthcare is likely a doctor.",
        "FOL": "∀x (Man(x) ∧ HasMedicalDegree(x) ∧ PracticesInHospital(x) ∧ ProvidesHealthcare(x) → Doctor(x))"
    },
    {
        "NL": "All green items are soft only if they are pillows.",
        "FOL": "∀x (Green(x) → (Soft(x) → Pillow(x)))"
    },
    {
        "NL": "A bird is a sparrow or a canary.",
        "FOL": "∀x (Bird(x) → (Sparrow(x) ∨ Canary(x)))"
    },
    {
        "NL": "No horses love salty things.",
        "FOL": "∀x ∀y (Horse(x) ∧ Salty(y) → ¬Love(x, y))"
    },
    {
        "NL": "A book is an autobiography if it narrates the personal life of a specific individual, written by the individual themselves.",
        "FOL": "∀x ∃y (Book(x) ∧ Individual(y) ∧ NarratesPersonalLife(x, y) ∧ WrittenBy(x, y) → Autobiography(x))"
    },
    {
        "NL": "A successful business strategy that emphasizes customer-centricity, data-driven decision-making, and continuous innovation can drive long-term growth and increase market share.",
        "FOL": "∀x (SuccessfulBusinessStrategy(x) → EmphasizesCustomerCentricity(x) ∧ DataDrivenDecisionMaking(x) ∧ ContinuousInnovation(x) ∧ DrivesLongTermGrowth(x) ∧ IncreasesMarketShare(x))"
    },
    {
        "NL": "A volcano is dormant if it hasn't erupted for a long time and shows no signs of imminent eruption.",
        "FOL": "∀x (Volcano(x) ∧ Dormant(x) ↔ (LongTimeNoEruption(x) ∧ NoSignsOfImminentEruption(x)))"
    },
    {
        "NL": "A job candidate can be offered a position if they have relevant experience, strong communication skills, and a positive attitude, but not if they lack teamwork skills.",
        "FOL": "∀x (JobCandidate(x) ∧ OfferedPosition(x) ↔ (RelevantExperience(x) ∧ StrongCommunicationSkills(x) ∧ PositiveAttitude(x) ∧ ¬LackTeamworkSkills(x)))"
    },
    {
        "NL": "A person who is an actor performs in films, theater, or television.",
        "FOL": "∀x (Actor(x) → (PerformsInFilms(x) ∨ PerformsInTheater(x) ∨ PerformsOnTelevision(x)))"
    },
    {
        "NL": "Artificial intelligence systems improve their performance through learning from data.",
        "FOL": "∀x ∀y (AISystem(x) ∧ Data(y) ∧ LearnsFrom(x, y) → ImprovedPerformance(x))"
    },
    {
        "NL": "A pencil is for writing but not for erasing.",
        "FOL": "∀x (Pencil(x) → WriteWith(x)) ∧ ¬(Pencil(x) → EraseWith(x))"
    },
    {
        "NL": "A city is in the eastern or western hemisphere.",
        "FOL": "∀x (City(x) → InEasternHemisphere(x) ∨ InWesternHemisphere(x))"
    },
    {
        "NL": "Tomatoes can be red or green, while oranges are typically orange, and blueberries are usually blue.",
        "FOL": "∀x ∀y ∀z (Tomato(x) → (Red(x) ∨ Green(x))) ∧ (Orange(y) → TypicallyOrange(y)) ∧ (Blueberry(z) → UsuallyBlue(z))"
    },
    {
        "NL": "A garden thrives if it has fertile soil, adequate sunlight, and proper irrigation.",
        "FOL": "∀x (Garden(x) ∧ FertileSoil(x) ∧ AdequateSunlight(x) ∧ ProperIrrigation(x) → Thrives(x))"
    },
    {
        "NL": "A painter creates artwork using canvas, brushes, and paint.",
        "FOL": "∀x∀y∀z∀w (Painter(x) ∧ Artwork(y) ∧ Canvas(z) ∧ Brushes(w) ∧ Paint(w) → Creates(x, y, z, w))"
    },
    {
        "NL": "A door can be opened or closed.",
        "FOL": "∀x (Door(x) → (CanBeOpened(x) ∨ CanBeClosed(x)))"
    },
    {
        "NL": "An animal is classified as a carnivore if it primarily feeds on other animals and has a digestive system adapted for processing meat.",
        "FOL": "∀x (Animal(x) ∧ PrimarilyFeedsOnOtherAnimals(x) ∧ DigestiveSystemAdaptedForProcessingMeat(x) → Carnivore(x))"
    },
    {
        "NL": "A game is addictive if it has challenging levels and stunning graphics.",
        "FOL": "∀x (Game(x) ∧ HasChallengingLevels(x) ∧ HasStunningGraphics(x) → Addictive(x))"
    },
    {
        "NL": "A vacation destination is popular when it offers a variety of activities, attracts tourists, and has a vibrant local culture.",
        "FOL": "∀x (VacationDestination(x) ∧ VarietyOfActivities(x) ∧ AttractsTourists(x) ∧ VibrantLocalCulture(x) → Popular(x))"
    },
    {
        "NL": "A plant produces oxygen and absorbs carbon dioxide through the process of photosynthesis, which converts sunlight, water, and carbon dioxide into glucose and oxygen.",
        "FOL": "∀x (Plant(x) → (ProducesOxygen(x) ∧ AbsorbsCarbonDioxide(x) ∧ ConductsPhotosynthesis(x) ∧ ConvertsSunlightWaterCarbonDioxideToGlucoseAndOxygen(x)))"
    },
    {
        "NL": "A smartphone allows communication, a tablet enables content consumption, and a smartwatch monitors health, but all are portable electronic devices.",
        "FOL": "∀x∀y∀z (Smartphone(x) → AllowsCommunication(x)) ∧ (Tablet(y) → EnablesContentConsumption(y)) ∧ (Smartwatch(z) → MonitorsHealth(z)) ∧ (PortableElectronicDevice(x) ∧ PortableElectronicDevice(y) ∧ PortableElectronicDevice(z))"
    },
    {
        "NL": "A construction project can be delayed due to weather conditions or lack of resources, but not both, while a skilled workforce and proper planning can prevent further delays.",
        "FOL": "∀x (ConstructionProject(x) → (((WeatherDelay(x) ⊕ ResourceDelay(x)) ∧ ¬(WeatherDelay(x) ∧ ResourceDelay(x))) ∧ (SkilledWorkforce(x) ∧ ProperPlanning(x) → ¬FurtherDelay(x))))"
    },
    {
        "NL": "No reptiles have fur.",
        "FOL": "∀x (Reptile(x) → ¬HasFur(x))"
    },
    {
        "NL": "A park is safe during the day, but it might not be safe at night.",
        "FOL": "∀x (Park(x) → (Daytime(x) → Safe(x)) ∧ (Nighttime(x) → ¬NecessarilySafe(x)))"
    },
    {
        "NL": "A device is multifunctional if it can play music and capture photos.",
        "FOL": "∀y (Device(y) ∧ CanPlayMusic(y) ∧ CanCapturePhotos(y) → Multifunctional(y))"
    },
    {
        "NL": "Playing chess involves strategy, while playing poker requires bluffing.",
        "FOL": "∀x ∀y ∀z (Chess(x) ∧ Strategy(y) ∧ (Poker(z) ∨ Bluffing(z)) → (Involves(x, y) ∧ Requires(z)))"
    },
    {
        "NL": "A smartphone is praised by users when it has a long-lasting battery and a high-quality camera, but it may not be well-received if it is too heavy or has limited storage capacity.",
        "FOL": "∀x∀y (Smartphone(x) ∧ User(y) → (Praised(x, y) ↔ ((LongLastingBattery(x) ∧ HighQualityCamera(x)) ∧ ¬(TooHeavy(x) ∨ LimitedStorageCapacity(x)))))"
    },
    {
        "NL": "A store sells fruits or vegetables, but not both.",
        "FOL": "∃x (Store(x) ∧ (Sells(x, \"fruits\") ∧ ¬Sells(x, \"vegetables\")) ∨ (¬Sells(x, \"fruits\") ∧ Sells(x, \"vegetables\")))"
    },
    {
        "NL": "If a dish is part of a chef's menu, it is a soup, salad, or dessert.",
        "FOL": "∀x (Dish(x) ∧ PartOfChefsMenu(x) → Soup(x) ∨ Salad(x) ∨ Dessert(x))"
    },
    {
        "NL": "An electronic device is in standby mode when it is powered on but not in active use.",
        "FOL": "∀x (ElectronicDevice(x) ∧ PoweredOn(x) ∧ ¬ActiveUse(x) → StandbyMode(x))"
    },
    {
        "NL": "A company is multinational if it operates in multiple countries and has a global presence.",
        "FOL": "∀x (Company(x) ∧ OperatesInMultipleCountries(x) ∧ GlobalPresence(x) → Multinational(x))"
    },
    {
        "NL": "Every chef has cooked at least one dish.",
        "FOL": "∀x (Chef(x) → ∃y (Dish(y) ∧ Cooked(x, y)))"
    },
    {
        "NL": "A mountain has a summit and a base.",
        "FOL": "∀x (Mountain(x) → (HasSummit(x) ∧ HasBase(x)))"
    },
    {
        "NL": "A bird that has a beak, can fly, and communicates by singing is a sparrow.",
        "FOL": "∀x (Bird(x) ∧ HasBeak(x) ∧ CanFly(x) ∧ CommunicatesBySinging(x) → Sparrow(x))"
    },
    {
        "NL": "A song becomes popular if it features catchy melodies, showcases exceptional vocal talent, and has memorable lyrics, while a song with monotonous tunes or weak vocal performances is less likely to gain traction.",
        "FOL": "∀x (Song(x) → (BecomesPopular(x) ↔ (CatchyMelodies(x) ∧ ExceptionalVocalTalent(x) ∧ MemorableLyrics(x)) ∧ ¬(MonotonousTunes(x) ∨ WeakVocalPerformances(x))))"
    },
    {
        "NL": "A person is considered a pilot if they operate aircraft, such as airplanes or helicopters, for transportation or other purposes.",
        "FOL": "∀x (Person(x) ∧ OperatesAircraft(x) ∧ (Airplanes(x) ∨ Helicopters(x)) ∧ ForTransportationOrOtherPurposes(x) → Pilot(x))"
    },
    {
        "NL": "A restaurant is successful if it has a consistent stream of customers, positive reviews, or a high return rate.",
        "FOL": "∀x (Restaurant(x) ∧ Successful(x) ↔ (ConsistentCustomerStream(x) ∨ PositiveReviews(x) ∨ HighReturnRate(x)))"
    },
    {
        "NL": "If a bird is in the sky, then some stars are either shining or dull.",
        "FOL": "∃x ∃y (Bird(x) ∧ Sky(y) ∧ In(x, y) → ∃z (Star(z) ∧ (Shining(z) ⊕ Dull(z))))"
    },
    {
        "NL": "A fish is either a salmon or a tuna, but not both.",
        "FOL": "∀x (Fish(x) → (Salmon(x) ⊕ Tuna(x)))"
    },
    {
        "NL": "If a liquid is frozen, its temperature is at or below its freezing point.",
        "FOL": "∀x (Liquid(x) ∧ Frozen(x) → TemperatureAtOrBelowFreezingPoint(x))"
    },
    {
        "NL": "A truck is autonomous if it leverages lidar and deep learning instead of a human pilot.",
        "FOL": "∀x (Truck(x) ∧ LeveragesLidar(x) ∧ LeveragesDeepLearning(x) ∧ ¬LeveragesHumanPilot(x) → AutonomousTruck(x))"
    },
    {
        "NL": "All books in a library are borrowed, reserved, or available.",
        "FOL": "∀x (Book(x) ∧ InLibrary(x) → (Borrowed(x) ∨ Reserved(x) ∨ Available(x)))"
    },
    {
        "NL": "An animal is considered a herbivore if it primarily consumes plants.",
        "FOL": "∀x (Animal(x) → (Herbivore(x) ↔ ∀y (Consumes(x, y) → Plant(y))))"
    },
    {
        "NL": "A mechanic is fixing a car in the garage.",
        "FOL": "∃x ∃y (Mechanic(x) ∧ Car(y) ∧ Fixing(x, y) ∧ InTheGarage(x))"
    },
    {
        "NL": "An entity is an omnivore if and only if it eats meat or plants, but not algae.",
        "FOL": "∀x (Entity(x) → (Omnivore(x) ↔ (EatsMeat(x) ∨ EatsPlants(x)) ∧ ¬EatsAlgae(x)))"
    },
    {
        "NL": "A plant is not both a cactus and a fern.",
        "FOL": "∀x (Plant(x) → ¬(Cactus(x) ∧ Fern(x)))"
    },
    {
        "NL": "A marathon is a long-distance race with a distance of 42.195 kilometers.",
        "FOL": "∀x (Marathon(x) → (LongDistanceRace(x) ∧ DistanceOf(x, 42.195)))"
    },
    {
        "NL": "Fridges keep food cold to slow down the growth of bacteria, whereas ovens heat food to kill bacteria and cook the food.",
        "FOL": "∀x∀y (Fridge(x) ∧ Oven(y) → (KeepsFoodCold(x) ∧ SlowsBacteriaGrowth(x)) ∧ (HeatsFood(y) ∧ KillsBacteriaAndCooks(y)))"
    },
    {
        "NL": "All dogs are either pets or stray animals.",
        "FOL": "∀x (Dog(x) → Pet(x) ⊕ StrayAnimal(x))"
    },
    {
        "NL": "Cats drink milk from bowls.",
        "FOL": "∀x ∀y (Cat(x) ∧ Bowl(y) → DrinkMilkFrom(x, y))"
    },
    {
        "NL": "Vehicles that use solar power as their primary energy source do not emit greenhouse gases.",
        "FOL": "∀x (Vehicle(x) ∧ SolarPowered(x) → ¬EmitsGreenhouseGases(x))"
    },
    {
        "NL": "A volcano erupts if there is an increase in seismic activity and the pressure inside the magma chamber is high.",
        "FOL": "∀x (Volcano(x) → (Erupts(x) ↔ (IncreasedSeismicActivity(x) ∧ HighPressureInMagmaChamber(x))))"
    },
    {
        "NL": "A student is allowed to skip a class if they have a valid excuse or it is a non-mandatory lecture, but not if they have already missed a significant number of classes.",
        "FOL": "∀x ∀y (Student(x) ∧ Class(y) → (AllowedToSkip(x, y) ↔ ((ValidExcuse(x) ∨ NonMandatoryLecture(y)) ∧ ¬MissedSignificantNumberOfClasses(x))))"
    },
    {
        "NL": "A bicycle has two wheels and is ridden by pedaling.",
        "FOL": "∀x (Bicycle(x) → (HasTwoWheels(x) ∧ ∀y (Rides(y, x) → Pedals(y))))"
    },
    {
        "NL": "A novel is written by an author who has a writing style that combines humor, suspense, and romance, but it does not belong to any specific genre.",
        "FOL": "∀x ∀y (Novel(x) ∧ Author(y) ∧ WrittenBy(x, y) → ((HasHumor(y) ∧ HasSuspense(y) ∧ HasRomance(y)) ∧ ¬BelongsToSpecificGenre(x)))"
    },
    {
        "NL": "No car is safe unless it has been tested extensively, but not all of them are easy to drive.",
        "FOL": "¬∃x (Car(x) ∧ (Safe(x) ∨ TestedExtensively(x))) ∧ ¬∀y (Car(y) → EasyToDrive(y))"
    },
    {
        "NL": "Every actor in the play is passionate about the arts or dislikes improvisation.",
        "FOL": "∀x (ActorInPlay(x) → (PassionateAboutArts(x) ∨ DislikesImprovisation(x)))"
    },
    {
        "NL": "A harmonious relationship fosters open communication, promotes mutual respect, and encourages emotional support and understanding.",
        "FOL": "∀x (Relationship(x) ∧ FostersOpenCommunication(x) ∧ PromotesMutualRespect(x) ∧ EncouragesEmotionalSupportAndUnderstanding(x) → Harmonious(x))"
    },
    {
        "NL": "An action is considered legal if it complies with the laws and regulations of a given jurisdiction.",
        "FOL": "∀x∀y (Action(x) ∧ Jurisdiction(y) ∧ CompliesWithLawsAndRegulations(x, y) → Legal(x, y))"
    },
    {
        "NL": "Not every triangle is blue and small.",
        "FOL": "¬∀x (Triangle(x) → Blue(x) ∧ Small(x))"
    },
    {
        "NL": "A house is cozy if it has a fireplace and warm blankets.",
        "FOL": "∀x (House(x) ∧ Fireplace(x) ∧ WarmBlankets(x) → Cozy(x))"
    },
    {
        "NL": "Books can be fiction, non-fiction, or a mix of both, but not all three at once.",
        "FOL": "∀x (Book(x) → ((Fiction(x) ⊕ NonFiction(x)) ⊕ (MixOfBoth(x) ∧ ¬(Fiction(x) ∧ NonFiction(x)))))"
    },
    {
        "NL": "No square has five sides.",
        "FOL": "¬∃x (Square(x) ∧ HasFiveSides(x))"
    },
    {
        "NL": "Climbing mountains requires endurance, while swimming requires both strength and endurance.",
        "FOL": "∀x∀y (MountainClimbing(x) ∧ Swimming(y) → (RequiresEndurance(x) ∧ RequiresStrength(y) ∧ RequiresEndurance(y)))"
    },
    {
        "NL": "A book written by an author and published by a publisher can be found in a bookstore.",
        "FOL": "∀x∀y∀z∀w (Book(x) ∧ Author(y) ∧ Publisher(z) ∧ Bookstore(w) ∧ WrittenBy(x, y) ∧ PublishedBy(x, z) → CanBeFoundIn(x, w))"
    },
    {
        "NL": "A song is a self-composition if it expresses the personal experiences of a particular artist, composed by the artist themselves.",
        "FOL": "∀x ∃y (Song(x) ∧ Artist(y) ∧ ExpressesPersonalExperiences(x, y) ∧ ComposedBy(x, y) → SelfComposition(x))"
    },
    {
        "NL": "A camera takes high-quality photos if it has a good sensor, a sharp lens, and optimal lighting conditions.",
        "FOL": "∀x (Camera(x) → (TakesHighQualityPhotos(x) ↔ (GoodSensor(x) ∧ SharpLens(x) ∧ OptimalLightingConditions(x))))"
    },
    {
        "NL": "An automobile is either a car or a truck.",
        "FOL": "∀x (Automobile(x) ↔ (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "A city with a population over one million is considered a megacity.",
        "FOL": "∀x (City(x) ∧ PopulationOverOneMillion(x) → Megacity(x))"
    },
    {
        "NL": "A computer has a keyboard for input and a screen to display output.",
        "FOL": "∀x (Computer(x) → (HasKeyboard(x) ∧ ForInput(x) ∧ HasScreen(x) ∧ ForDisplay(x)))"
    },
    {
        "NL": "A symbiotic relationship, like mutualism or commensalism, involves two different species interacting, with one or both benefiting, while in parasitism, one species benefits at the expense of the other.",
        "FOL": "∀x ∀y ∀z (SymbioticRelationship(x) ∧ (Mutualism(y) ∨ Commensalism(y)) → (Interacts(x, z) ∧ (BenefitsOneOrBoth(x, z) ∨ (BenefitsOneAtExpenseOfOther(x, z) ∧ Parasitism(z)))))"
    },
    {
        "NL": "A natural disaster that causes extensive damage, disrupts essential services, and displaces a large number of people often requires significant humanitarian aid.",
        "FOL": "∀x (NaturalDisaster(x) ∧ CausesExtensiveDamage(x) ∧ DisruptsEssentialServices(x) ∧ DisplacesLargeNumberOfPeople(x) → RequiresSignificantHumanitarianAid(x))"
    },
    {
        "NL": "Lucas is an artist or Emily is not a lawyer.",
        "FOL": "Artist(lucas) ∨ ¬Lawyer(emily)"
    },
    {
        "NL": "A key unlocks a door only if it matches the lock.",
        "FOL": "∀x∀y (Key(x) ∧ Door(y) ∧ Unlocks(x, y) → MatchesLock(x, y))"
    },
    {
        "NL": "A museum exhibit displays artifacts from ancient civilizations and focuses on either art or history.",
        "FOL": "∀x (MuseumExhibit(x) ∧ DisplaysAncientArtifacts(x) → (FocusesOnArt(x) ∨ FocusesOnHistory(x)))"
    },
    {
        "NL": "Cacti that survive in arid climates have adapted by storing water and having shallow roots.",
        "FOL": "∀x (Cactus(x) ∧ SurvivesInAridClimate(x) → (StoresWater(x) ∧ ShallowRoots(x)))"
    },
    {
        "NL": "Daytime is characterized by sunlight, while nighttime is characterized by darkness.",
        "FOL": "∀x∀y (Daytime(x) → CharacterizedBySunlight(x)) ∧ (Nighttime(y) → CharacterizedByDarkness(y))"
    },
    {
        "NL": "No bridges are safe.",
        "FOL": "∀x (Bridge(x) → ¬Safe(x))"
    },
    {
        "NL": "An athlete who excels in multiple sports is referred to as a multi-sport athlete.",
        "FOL": "∀x (Athlete(x) ∧ ExcelsInMultipleSports(x) → MultiSportAthlete(x))"
    },
    {
        "NL": "A battery stores electrical energy by converting chemical energy into electrical energy, which can then be discharged to power electronic devices.",
        "FOL": "∀x (Battery(x) → (StoresElectricalEnergy(x) ∧ ConvertsChemicalEnergyToElectrical(x) ∧ DischargesEnergyToPowerDevices(x)))"
    },
    {
        "NL": "Charlotte is not a journalist or Daniel is not a firefighter.",
        "FOL": "¬Journalist(charlotte) ∨ ¬Firefighter(daniel)"
    },
    {
        "NL": "A healthy breakfast consists of whole grains, fresh fruits, and protein-rich foods.",
        "FOL": "∀x (Breakfast(x) ∧ Healthy(x) → (WholeGrains(x) ∧ FreshFruits(x) ∧ ProteinRichFoods(x)))"
    },
    {
        "NL": "Investors prefer a stock when its market cap is increasing, and its risk level is lower than alternative stocks.",
        "FOL": "∀x∀y (Stock(x) ∧ Stock(y) ∧ IncreasingMarketCap(x) ∧ LowerRisk(x, y) → PreferredByInvestors(x, y))"
    },
    {
        "NL": "All cats that can climb are not domestic.",
        "FOL": "¬∀x (Cat(x) ∧ CanClimb(x) → Domestic(x))"
    },
    {
        "NL": "A movie is a blockbuster if it earns a significant amount of revenue and attracts a large audience.",
        "FOL": "∀x (Movie(x) ∧ Blockbuster(x) ↔ (EarnsSignificantRevenue(x) ∧ AttractsLargeAudience(x)))"
    },
    {
        "NL": "A fruit that has a hard outer shell, grows on a tree, and has a single large seed inside is a nut.",
        "FOL": "∀x (Fruit(x) ∧ HardOuterShell(x) ∧ GrowsOnTree(x) ∧ SingleLargeSeed(x) → Nut(x))"
    },
    {
        "NL": "There is no large rectangle that is not yellow.",
        "FOL": "¬∃x (Large(x) ∧ Rectangle(x) ∧ ¬Yellow(x))"
    },
    {
        "NL": "A museum exhibits artifacts and artworks if it focuses on cultural or historical themes.",
        "FOL": "∀x (Museum(x) ∧ CulturalOrHistoricalThemes(x) → (ExhibitsArtifacts(x) ∧ ExhibitsArtworks(x)))"
    },
    {
        "NL": "An event is successful if it generates revenue or attracts attendees, and it does not receive negative feedback.",
        "FOL": "∀x (Event(x) ∧ (GeneratesRevenue(x) ∨ AttractsAttendees(x)) ∧ ¬NegativeFeedback(x) → Successful(x))"
    },
    {
        "NL": "A king rules a kingdom, while a president leads a country.",
        "FOL": "∀x∀y (King(x) ∧ President(y) → (RulesKingdom(x) ∧ LeadsCountry(y)))"
    },
    {
        "NL": "A person who writes code to develop software is called a programmer.",
        "FOL": "∀x (WritesCodeForSoftware(x) → Programmer(x))"
    },
    {
        "NL": "A polygon can be regular if all its sides have equal length and all its angles have equal measure, but it cannot be irregular if it meets these conditions.",
        "FOL": "∀x (Polygon(x) → (Regular(x) ↔ (EqualSideLength(x) ∧ EqualAngleMeasure(x))))"
    },
    {
        "NL": "A tool that is used for cutting and has a blade with a serrated edge is a saw.",
        "FOL": "∀x (Tool(x) ∧ UsedForCutting(x) ∧ Blade(x) ∧ SerratedEdge(x) → Saw(x))"
    },
    {
        "NL": "A horse is galloping in the field at dawn.",
        "FOL": "∃x ∃y ∃z (Horse(x) ∧ Field(y) ∧ GallopingIn(x, y) ∧ Dawn(z))"
    },
    {
        "NL": "There is a student who loves mathematics.",
        "FOL": "∃x (Student(x) ∧ LovesMathematics(x))"
    },
    {
        "NL": "A rock is a sedimentary rock if it is formed by the accumulation and cementation of mineral and organic particles on Earth's surface, within bodies of water, or at the margins of continents.",
        "FOL": "∀x (SedimentaryRock(x) → (Rock(x) ∧ FormedByAccumulation(x) ∧ Cementation(x) ∧ (∃y (EarthSurface(y) ∧ On(x, y)) ∨ ∃z (BodyOfWater(z) ∧ Within(x, z)) ∨ ∃w (ContinentMargin(w) ∧ At(x, w)))))"
    },
    {
        "NL": "A fabric is suitable for outdoor use if it is UV-resistant, water-resistant, and durable.",
        "FOL": "∀x (SuitableForOutdoorUse(x) ↔ (Fabric(x) ∧ ∃y (UVResistant(y) ∧ Has(x, y)) ∧ ∃z (WaterResistant(z) ∧ Has(x, z)) ∧ ∃w (Durable(w) ∧ Is(x, w))))"
    },
    {
        "NL": "In a family tree, a grandparent is the parent of a parent.",
        "FOL": "∀x ∀y ∀z (Grandparent(x, z) ↔ (Parent(x, y) ∧ Parent(y, z)))"
    },
    {
        "NL": "An athlete is disqualified from a competition if they violate the rules, test positive for prohibited substances, or display unsportsmanlike behavior.",
        "FOL": "∀x (Athlete(x) ∧ Competition(y) ∧ Participating(x, y) ∧ (ViolatesRules(x, y) ∨ TestsPositiveForProhibitedSubstances(x) ∨ UnsportsmanlikeBehavior(x)) → Disqualified(x, y))"
    },
    {
        "NL": "In a solar system, planets revolve around the central star, while moons revolve around their respective planets.",
        "FOL": "∀x∀y∀z (SolarSystem(x) ∧ Planet(y) ∧ Moon(z) → (RevolvesAround(y, x) ∧ RevolvesAround(z, y)))"
    },
    {
        "NL": "A square can be red, blue, or green, but not more than one color at a time.",
        "FOL": "∀x (Square(x) → ((Red(x) ⊕ Blue(x)) ⊕ Green(x)))"
    },
    {
        "NL": "An area is designated a park if it maintains green space, is open for public, and promotes outdoor activities.",
        "FOL": "∀w (Area(w) ∧ MaintainsGreenSpace(w) ∧ OpenForPublic(w) ∧ PromotesOutdoorActivities(w) → Park(w))"
    },
    {
        "NL": "A tornado forms in severe thunderstorms and can cause extensive damage to structures.",
        "FOL": "∀x∀y∀z (Tornado(x) ∧ SevereThunderstorm(y) ∧ Structure(z) → (FormsIn(x, y) ∧ CausesDamage(x, z)))"
    },
    {
        "NL": "A train is delayed if the tracks are obstructed or the signals malfunction, but not if the crew arrives early.",
        "FOL": "∀x∀y∀z (Train(x) ∧ (TracksObstructed(y) ∨ SignalsMalfunction(z)) ∧ ¬CrewArrivesEarly(x) → Delayed(x))"
    },
    {
        "NL": "A piece of clothing is fashionable if it follows current trends or has a unique design, but not if it's uncomfortable.",
        "FOL": "∀x (Clothing(x) ∧ Fashionable(x) ↔ ((CurrentTrends(x) ∨ UniqueDesign(x)) ∧ ¬Uncomfortable(x)))"
    },
    {
        "NL": "A machine is efficient if and only if every task it performs is finished quickly.",
        "FOL": "∀x (Efficient(x) ↔ ∀y (Performs(x, y) → FinishedQuickly(y)))"
    },
    {
        "NL": "A medical doctor can prescribe medication to patients to treat illnesses or manage symptoms.",
        "FOL": "∀x∀y∀z (MedicalDoctor(x) ∧ Patient(y) ∧ IllnessOrSymptom(z) → CanPrescribeMedication(x, y, z))"
    },
    {
        "NL": "A vehicle is considered electric if it is powered by a battery.",
        "FOL": "∀x (PoweredByBattery(x) → ElectricVehicle(x))"
    },
    {
        "NL": "If all humans are social then there are some humans who appreciate Emily.",
        "FOL": "∀x (Human(x) → Social(x)) → ∃x (Human(x) ∧ Appreciate(x, emily))"
    },
    {
        "NL": "A restaurant is popular if it serves tasty dishes and has a friendly staff, but not if it is unclean.",
        "FOL": "∀x (Restaurant(x) ∧ ((TastyDishes(x) ∧ FriendlyStaff(x)) ∧ ¬Unclean(x) → Popular(x)))"
    },
    {
        "NL": "A celestial body that revolves around a star, has a nearly spherical shape, and has cleared its orbit of other debris is a planet if it has not achieved nuclear fusion in its core.",
        "FOL": "∀x (CelestialBody(x) ∧ RevolvesAroundStar(x) ∧ NearlySphericalShape(x) ∧ ClearedOrbitOfDebris(x) ∧ ¬NuclearFusionInCore(x) → Planet(x))"
    },
    {
        "NL": "An object is a telescope when it is an optical instrument, designed to observe distant objects by collecting and focusing electromagnetic radiation, and is used for studying celestial bodies like stars, planets, and galaxies.",
        "FOL": "∀x (Object(x) ∧ OpticalInstrument(x) ∧ DesignedToObserveDistantObjects(x) ∧ CollectsAndFocusesElectromagneticRadiation(x) ∧ UsedForStudyingCelestialBodies(x, stars, planets, galaxies) → Telescope(x))"
    },
    {
        "NL": "A melody is a lullaby when it is a soothing tune, designed for babies, and induces sleep.",
        "FOL": "∀x (Melody(x) ∧ SoothingTune(x) ∧ DesignedForBabies(x) ∧ InducesSleep(x) → Lullaby(x))"
    },
    {
        "NL": "A person is considered a nurse if they provide care and support to patients in a healthcare setting.",
        "FOL": "∀x (Person(x) ∧ ProvidesCareToPatients(x) ∧ ProvidesSupportToPatients(x) ∧ InHealthcareSetting(x) → Nurse(x))"
    },
    {
        "NL": "Some teachers are scholars.",
        "FOL": "∃x (Teacher(x) ∧ Scholar(x))"
    },
    {
        "NL": "A door can be either open or closed, but not both.",
        "FOL": "∀x (Door(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "A bird protects its nest only if the nest shelters back the bird.",
        "FOL": "∀x ∀y (Bird(x) ∧ Nest(y) ∧ (Protects(x, y) → Shelters(y, x)))"
    },
    {
        "NL": "A computer program can solve complex problems if it uses efficient algorithms and powerful hardware.",
        "FOL": "∀x (ComputerProgram(x) ∧ UsesEfficientAlgorithms(x) ∧ UsesPowerfulHardware(x) → CanSolveComplexProblems(x))"
    },
    {
        "NL": "A human is a parent if they have at least one child.",
        "FOL": "∀x ∃y (Human(x) ∧ Human(y) ∧ ChildOf(y, x) → Parent(x))"
    },
    {
        "NL": "Tom is not a musician if and only if he is a musician.",
        "FOL": "¬Musician(tom) ↔ Musician(tom)"
    },
    {
        "NL": "Reading books expands knowledge.",
        "FOL": "∀x (Reading(x) ∧ Books(x) → ExpandsKnowledge(x))"
    },
    {
        "NL": "An athlete competes in a triathlon if they participate in swimming, cycling, and running events.",
        "FOL": "∀x (Athlete(x) ∧ ParticipatesIn(x, Swimming) ∧ ParticipatesIn(x, Cycling) ∧ ParticipatesIn(x, Running) → CompetesInTriathlon(x))"
    },
    {
        "NL": "A teacher educates students, assigns homework, and evaluates their performance.",
        "FOL": "∀x ∃y (Teacher(x) → Student(y) ∧ Educate(x, y) ∧ AssignHomework(x) ∧ EvaluatePerformance(x, y))"
    },
    {
        "NL": "Lakes that are formed by glacial activity, have high mineral content, and are situated in mountainous regions are often characterized by clear water and vibrant colors.",
        "FOL": "∀x∀y∀z (Lake(x) ∧ FormedByGlacialActivity(x, y) ∧ HighMineralContent(x) ∧ SituatedInMountainousRegion(x, z) → CharacterizedByClearWaterAndVibrantColors(x))"
    },
    {
        "NL": "A tree is either deciduous or not deciduous.",
        "FOL": "∀x (Tree(x) → (Deciduous(x) ⊕ ¬Deciduous(x)))"
    },
    {
        "NL": "A train transports passengers or cargo between stations, using different types of locomotives such as diesel, electric, or steam.",
        "FOL": "∀x ∀y ∀z (Train(x) → (Transports(x, y) ∧ (Passengers(y) ∨ Cargo(y)) ∧ BetweenStations(x) ∧ UsesDifferentLocomotives(x, z) ∧ (Diesel(z) ∨ Electric(z) ∨ Steam(z))))"
    },
    {
        "NL": "A smartphone is not secure if it lacks encryption or has weak passwords, even if it has a fingerprint scanner.",
        "FOL": "∀x (Smartphone(x) ∧ ¬Secure(x) ↔ (¬Encryption(x) ∨ WeakPasswords(x)) ∧ FingerprintScanner(x))"
    },
    {
        "NL": "If all students who enjoy mathematics will pass the exam, then some students who do not enjoy mathematics will also pass the exam.",
        "FOL": "∀x (Student(x) ∧ EnjoyMathematics(x) → PassExam(x)) → ∃y (Student(y) ∧ ¬EnjoyMathematics(y) ∧ PassExam(y))"
    },
    {
        "NL": "Many writers who pen mystery novels are also talented in creating suspense.",
        "FOL": "∃x (Writer(x) ∧ PenMysteryNovels(x) ∧ TalentedInCreatingSuspense(x))"
    },
    {
        "NL": "Every game is exciting if and only if it is either a sport or a puzzle.",
        "FOL": "∀x (Game(x) → (Exciting(x) ↔ (Sport(x) ∨ Puzzle(x))))"
    },
    {
        "NL": "A fish breathes through gills, while a mammal breathes through lungs.",
        "FOL": "∀x (Fish(x) ∧ Breathes(x) → Gills(x)) ∧ (Mammal(y) ∧ Breathes(y) → Lungs(y))"
    },
    {
        "NL": "A dog barks, and a cat meows but does not bark.",
        "FOL": "∀x ∀y ((Dog(x) ∧ Barks(x)) ∧ (Cat(y) ∧ Meows(y) ∧ ¬Barks(y)))"
    },
    {
        "NL": "A firefighter saves a person only if that person thanks the firefighter.",
        "FOL": "∀x (Firefighter(x) → ∀y (Person(y) ∧ Saves(x, y) → Thanks(y, x)))"
    },
    {
        "NL": "All humans require food and water to survive.",
        "FOL": "∀x (Human(x) → (RequiresFood(x) ∧ RequiresWater(x)))"
    },
    {
        "NL": "A door is open or closed.",
        "FOL": "∀x (Door(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "A tree that loses its leaves during winter and grows new ones in spring is a deciduous tree.",
        "FOL": "∀x (Tree(x) ∧ LosesLeavesInWinter(x) ∧ GrowsNewLeavesInSpring(x) → DeciduousTree(x))"
    },
    {
        "NL": "A predator x is effective at hunting prey y in environment z if it has keen senses, speed, and camouflage abilities to blend into z.",
        "FOL": "∀x ∀y ∀z (Predator(x) ∧ Prey(y) ∧ Environment(z) ∧ KeenSenses(x) ∧ Speed(x) ∧ CamouflageAbilities(x, z) → EffectiveAtHunting(x, y, z))"
    },
    {
        "NL": "A lighthouse emits a bright light for navigation, while a buoy floats on water and marks safe or unsafe areas for boats.",
        "FOL": "∀x ∀y (Lighthouse(x) ∧ Buoy(y) → (EmitsBrightLightForNavigation(x) ∧ (FloatsOnWater(y) ∧ MarksSafeOrUnsafeAreas(y))))"
    },
    {
        "NL": "A musical instrument produces a rich sound if it has a well-crafted body, precise tuning mechanisms, and high-quality materials.",
        "FOL": "∀x (MusicalInstrument(x) ∧ WellCraftedBody(x) ∧ PreciseTuningMechanisms(x, y) ∧ HighQualityMaterials(x, z) → RichSound(x))"
    },
    {
        "NL": "Every phone isn't touchscreen.",
        "FOL": "¬∀x (Phone(x) → Touchscreen(x))"
    },
    {
        "NL": "A vehicle is environmentally friendly if it uses electric power, emits no pollutants, or consumes minimal fuel.",
        "FOL": "∀x (Vehicle(x) ∧ (UsesElectricPower(x) ∨ EmitsNoPollutants(x) ∨ ConsumesMinimalFuel(x)) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "A shape is a two-dimensional figure if it has length and width, and a three-dimensional figure if it has length, width, and height.",
        "FOL": "∀x (Shape(x) → ((Length(x) ∧ Width(x) → TwoDimensional(x)) ∧ (Length(x) ∧ Width(x) ∧ Height(x) → ThreeDimensional(x))))"
    },
    {
        "NL": "An energy-efficient appliance that consumes less electricity and has a longer lifespan reduces household energy consumption and lowers energy bills.",
        "FOL": "∀x∀y (EnergyEfficientAppliance(x) ∧ ConsumesLessElectricity(x) ∧ HasLongerLifespan(x) → (ReducesHouseholdEnergyConsumption(y) ∧ LowersEnergyBills(y)))"
    },
    {
        "NL": "A book is considered a novel if it is a long narrative work of fiction with a complex plot.",
        "FOL": "∀x (Book(x) ∧ LongNarrativeWork(x) ∧ Fiction(x) ∧ ComplexPlot(x) → Novel(x))"
    },
    {
        "NL": "If a person is a driver, they operate vehicles.",
        "FOL": "∀x (Driver(x) → OperatesVehicles(x))"
    },
    {
        "NL": "A road is accessible if it is not blocked.",
        "FOL": "∀x (Road(x) → (Accessible(x) ↔ ¬Blocked(x)))"
    },
    {
        "NL": "A restaurant serves different types of cuisine, like Italian, Chinese, or Indian, and can offer dine-in, takeout, or delivery options to customers.",
        "FOL": "∀x (Restaurant(x) → ((ItalianCuisine(x) ∨ ChineseCuisine(x) ∨ IndianCuisine(x)) ∧ (DineIn(x) ∨ Takeout(x) ∨ Delivery(x))))"
    },
    {
        "NL": "A garden is well-maintained if it has trimmed grass and healthy plants, but not if it is full of weeds.",
        "FOL": "∀x (Garden(x) → (WellMaintained(x) ↔ ((TrimmedGrass(x) ∧ HealthyPlants(x)) ∧ ¬FullOfWeeds(x))))"
    },
    {
        "NL": "A chef cooks meals, and a painter creates artwork, but neither performs surgery.",
        "FOL": "∀x∀y (Chef(x) → CooksMeals(x)) ∧ (Painter(y) → CreatesArtwork(y)) ∧ ¬(PerformsSurgery(x) ∨ PerformsSurgery(y))"
    },
    {
        "NL": "Snow is cold and soft, sand is warm and granular, and concrete is hard and solid.",
        "FOL": "∀x ∀y ∀z (Snow(x) ∧ Sand(y) ∧ Concrete(z) → ((Cold(x) ∧ Soft(x)) ∧ (Warm(y) ∧ Granular(y)) ∧ (Hard(z) ∧ Solid(z))))"
    },
    {
        "NL": "A person who operates and maintains aircraft is called an aircraft mechanic.",
        "FOL": "∀x (OperatesAndMaintainsAircraft(x) → AircraftMechanic(x))"
    },
    {
        "NL": "A machine that generates electricity by harnessing the kinetic energy of flowing water is a hydroelectric power generator.",
        "FOL": "∀x∀y (Machine(x) ∧ GeneratesElectricity(x) ∧ HarnessesKineticEnergyOfFlowingWater(x, y) → HydroelectricPowerGenerator(x))"
    },
    {
        "NL": "A museum displays artifacts, artwork, and historical items to educate and engage the public while preserving cultural heritage.",
        "FOL": "∀x (Museum(x) → (DisplaysArtifacts(x) ∧ DisplaysArtwork(x) ∧ DisplaysHistoricalItems(x) ∧ EducatesPublic(x) ∧ PreservesCulturalHeritage(x)))"
    },
    {
        "NL": "Provided every fish doesn't bubble, there is a star towards which all stars shine.",
        "FOL": "¬∀x (Fish(x) → Bubbling(x)) → ∃y (Star(y) ∧ ∀z (Star(z) → ShinesAt(z, y)))"
    },
    {
        "NL": "A password is secure if it contains letters, numbers, and special characters, but not if it is shorter than 8 characters.",
        "FOL": "∀x (Password(x) → (Secure(x) ↔ ((ContainsLetters(x) ∧ ContainsNumbers(x) ∧ ContainsSpecialCharacters(x)) ∧ ¬ShorterThan(x, 8))))"
    },
    {
        "NL": "A product is organic if it's produced without chemical fertilizers and pesticides.",
        "FOL": "∀x (Product(x) ∧ ProducedWithoutChemicalFertilizers(x) ∧ ProducedWithoutPesticides(x) → Organic(x))"
    },
    {
        "NL": "Trees grow in soil and require sunlight and water for photosynthesis.",
        "FOL": "∀x (Tree(x) → (GrowsInSoil(x) ∧ RequiresSunlight(x) ∧ RequiresWater(x) ∧ PerformsPhotosynthesis(x)))"
    },
    {
        "NL": "Ions are atoms that have gained or lost electrons.",
        "FOL": "∀x (Ion(x) ↔ (GainedElectron(x) ∨ LostElectron(x)))"
    },
    {
        "NL": "A few stars are visible.",
        "FOL": "∃x (Star(x) ∧ Visible(x))"
    },
    {
        "NL": "Birds can fly or swim, but not all of them can do both.",
        "FOL": "∀x (Bird(x) → ((Fly(x) ∨ Swim(x)) ∧ ¬(Fly(x) ∧ Swim(x))))"
    },
    {
        "NL": "A museum exhibits historical artifacts and offers guided tours on weekdays, but not on weekends.",
        "FOL": "∀x ∀d (Museum(x) ∧ Weekday(d) → (ExhibitsHistoricalArtifacts(x) ∧ OffersGuidedTours(x, d))) ∧ (Museum(x) ∧ Weekend(d) → ¬OffersGuidedTours(x, d))"
    },
    {
        "NL": "A building is tall if it has more than 10 floors.",
        "FOL": "∀x (Building(x) ∧ Tall(x) ↔ MoreThan10Floors(x))"
    },
    {
        "NL": "A smartphone can perform multiple functions, including communication, internet browsing, and multimedia playback.",
        "FOL": "∀x (Smartphone(x) → (PerformsMultipleFunctions(x) ∧ (Communication(x) ∨ InternetBrowsing(x) ∨ MultimediaPlayback(x))))"
    },
    {
        "NL": "A material that is transparent allows light to pass through, while an opaque material does not.",
        "FOL": "∀x (Material(x) → ((Transparent(x) → AllowsLight(x)) ∧ (Opaque(x) → ¬AllowsLight(x))))"
    },
    {
        "NL": "A restaurant has a dress code if it serves fine dining and is located in an upscale area, but does not apply the dress code for special events.",
        "FOL": "∀x (Restaurant(x) → (HasDressCode(x) ↔ (ServesFineDining(x) ∧ LocatedInUpscaleArea(x) ∧ ¬SpecialEvent(x))))"
    },
    {
        "NL": "A store is open if it is not closed.",
        "FOL": "∀x (Store(x) → (¬Closed(x) → Open(x)))"
    },
    {
        "NL": "A dessert is indulgent if it is rich in flavor and high in calories.",
        "FOL": "∀x (Dessert(x) ∧ RichFlavor(x) ∧ HighCalories(x) → Indulgent(x))"
    },
    {
        "NL": "Not every meal is either spicy or sweet.",
        "FOL": "¬∀x (Meal(x) → (Spicy(x) ∨ Sweet(x)))"
    },
    {
        "NL": "A teacher educates students and evaluates their performance.",
        "FOL": "∀x (Teacher(x) → (EducatesStudents(x) ∧ EvaluatesPerformance(x)))"
    },
    {
        "NL": "A volcanic eruption that releases ash, lava, and gases can cause environmental and economic disruption in nearby areas.",
        "FOL": "∀x ∀y (VolcanicEruption(x) ∧ ReleasesAsh(x) ∧ ReleasesLava(x) ∧ ReleasesGases(x) → CausesEnvironmentalDisruption(y) ∧ CausesEconomicDisruption(y))"
    },
    {
        "NL": "A device is a computer if it can store and process data and execute a set of instructions.",
        "FOL": "∀x (Device(x) ∧ StoresData(x) ∧ ProcessesData(x) ∧ ExecutesInstructions(x) → Computer(x))"
    },
    {
        "NL": "A volcano erupts when molten rock, called magma, rises to the surface, releasing gases, ash, and lava.",
        "FOL": "∀x (Volcano(x) → (MoltenRock(y) ∧ Magma(y) ∧ RisesToSurface(y, x) ∧ ReleasesGases(x) ∧ ReleasesAsh(x) ∧ ReleasesLava(x) → Erupts(x)))"
    },
    {
        "NL": "There is no student who can finish the test in 5 minutes.",
        "FOL": "¬∃x (Student(x) ∧ CanFinishTestInFiveMin(x))"
    },
    {
        "NL": "A region is arid if it receives minimal precipitation and supports limited vegetation.",
        "FOL": "∀x (Region(x) ∧ MinimalPrecipitation(x) ∧ LimitedVegetation(x) → Arid(x))"
    },
    {
        "NL": "A painter uses brushes.",
        "FOL": "∀x∀y (Painter(x) ∧ Brush(y) → Uses(x, y))"
    },
    {
        "NL": "Every student who studies hard gets good grades.",
        "FOL": "∀x (Student(x) ∧ StudiesHard(x) → GetsGoodGrades(x))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains alcohol.",
        "FOL": "∀x (AlcoholicBeverage(x) ↔ ContainsAlcohol(x))"
    },
    {
        "NL": "A type of furniture that is designed for sitting, has a backrest, and may have armrests is classified as a chair.",
        "FOL": "∀x (FurnitureType(x) ∧ DesignedForSitting(x) ∧ HasBackrest(x) ∧ (MayHaveArmrests(x) ∨ ¬HasArmrests(x)) → Chair(x))"
    },
    {
        "NL": "If an object is heavy, then all planets orbit a sun.",
        "FOL": "∃x (Heavy(x) → ∀y ∃z (Sun(z) ∧ Orbits(y, z)))"
    },
    {
        "NL": "A triangle is isosceles if it doesn't have three equal sides, but has at least two equal sides.",
        "FOL": "∀x (Triangle(x) ∧ Isosceles(x) → (¬ThreeEqualSides(x) ∧ AtLeastTwoEqualSides(x)))"
    },
    {
        "NL": "All bread that is fluffy and just baked always taste mouth-watering when consumed immediately.",
        "FOL": "∀x (Bread(x) ∧ Fluffy(x) ∧ JustBaked(x) ∧ ConsumedImmediately(x) → TastesMouthWatering(x))"
    },
    {
        "NL": "A refrigerator preserves food, while a microwave heats food.",
        "FOL": "∀x (Refrigerator(x) → PreservesFood(x)) ∧ ∀y (Microwave(y) → HeatsFood(y))"
    },
    {
        "NL": "No bird can fly over every mountain.",
        "FOL": "¬∃x (Bird(x) ∧ ∀y (Mountain(y) → FlyOver(x, y)))"
    },
    {
        "NL": "A play is a drama if it illustrates the writer's personal experiences.",
        "FOL": "∀x ∃y ∃z (Play(x) ∧ Writer(y) ∧ WriterOf(y, x) ∧ IllustratesPersonalExperiences(x, y) → Drama(x))"
    },
    {
        "NL": "Hurricanes, tornadoes, and blizzards are types of extreme weather events that can cause significant damage.",
        "FOL": "∀x (ExtremeWeatherEvent(x) ↔ (Hurricane(x) ∨ Tornado(x) ∨ Blizzard(x)))"
    },
    {
        "NL": "An organism is a bacteria when it is a single-celled prokaryote, reproduces asexually by binary fission, and may be beneficial or harmful depending on its role in an ecosystem.",
        "FOL": "∀x (Organism(x) ∧ SingleCelledProkaryote(x) ∧ ReproducesAsexuallyByBinaryFission(x) ∧ (BeneficialRole(x) ∨ HarmfulRole(x)) → Bacteria(x))"
    },
    {
        "NL": "Books can be either fiction or nonfiction.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ Nonfiction(x)))"
    },
    {
        "NL": "A car is faulty if and only if it is not operational or is in repair.",
        "FOL": "∀x (Car(x) → (Faulty(x) ↔ (¬Operational(x) ∨ InRepair(x))))"
    },
    {
        "NL": "A person is considered a professional chef if they have culinary training and work in a commercial kitchen.",
        "FOL": "∀x (Person(x) ∧ CulinaryTraining(x) ∧ WorksInCommercialKitchen(x) → ProfessionalChef(x))"
    },
    {
        "NL": "There are islands where certain trees do not grow.",
        "FOL": "∃x ∃y (Island(x) ∧ Tree(y) ∧ ¬GrowIn(y, x))"
    },
    {
        "NL": "A board game that involves strategy requires players to make decisions, plan moves, and adapt to changing circumstances.",
        "FOL": "∀x (BoardGame(x) ∧ InvolvesStrategy(x) → RequiresDecisionMaking(x) ∧ RequiresPlanningMoves(x) ∧ RequiresAdaptingToChange(x))"
    },
    {
        "NL": "Fish live in water, breathe through gills, and have fins.",
        "FOL": "∀x (Fish(x) → (LivesInWater(x) ∧ BreathesThroughGills(x) ∧ HasFins(x)))"
    },
    {
        "NL": "A sandwich contains lettuce, tomato, and bread.",
        "FOL": "∀x∀y∀z (Sandwich(x) → (ContainsLettuce(x, y) ∧ ContainsTomato(x, z) ∧ ContainsBread(x)))"
    },
    {
        "NL": "Refrigerators keep food cold to slow down bacterial growth.",
        "FOL": "∀x ∀y (Refrigerator(x) ∧ Food(y) ∧ KeepsCold(x, y) → SlowsDownBacterialGrowth(y))"
    },
    {
        "NL": "An investor makes a profit when the selling price of their investment exceeds the purchase price, adjusted for fees and taxes.",
        "FOL": "∀x ∀y (Investor(x) ∧ Investment(y) ∧ SellingPriceExceedsAdjustedPurchasePrice(x, y) → MakesProfit(x, y))"
    },
    {
        "NL": "A cat has claws and can climb, while a slug does not have claws and cannot climb.",
        "FOL": "∀x (Cat(x) → HasClaws(x) ∧ CanClimb(x)) ∧ ∀y (Slug(y) → ¬HasClaws(y) ∧ ¬CanClimb(y))"
    },
    {
        "NL": "A smartphone includes features like a touch screen, camera, and GPS, and supports applications for communication, productivity, and entertainment.",
        "FOL": "∀x (Smartphone(x) → (TouchScreen(x) ∧ Camera(x) ∧ GPS(x) ∧ CommunicationApps(x) ∧ ProductivityApps(x) ∧ EntertainmentApps(x)))"
    },
    {
        "NL": "A person needs either a driver's license or a state ID to buy alcohol.",
        "FOL": "∀x (Person(x) ∧ WantsToBuyAlcohol(x) → (HasDriversLicense(x) ⊕ HasStateID(x)))"
    },
    {
        "NL": "A woman is loved by the musician whom every listener adores.",
        "FOL": "∃x ∃y ∀z (Woman(x) ∧ Musician(y) ∧ Listener(z) ∧ Adores(z, y) → LovedBy(x, y))"
    },
    {
        "NL": "A museum is interactive if it offers hands-on exhibits and experiences for visitors.",
        "FOL": "∀x (Museum(x) → (Interactive(x) ↔ HandsOnExhibitsAndExperiences(x)))"
    },
    {
        "NL": "If an engine is a combustion engine, it uses fuel and an oxidizer, converts chemical energy to mechanical energy, and typically releases exhaust gases.",
        "FOL": "∀x (Engine(x) ∧ CombustionEngine(x) → UsesFuelAndOxidizer(x) ∧ ConvertsChemicalEnergyToMechanicalEnergy(x) ∧ ReleasesExhaustGases(x))"
    },
    {
        "NL": "A computer can process and store data using a combination of hardware components, such as the central processing unit (CPU), memory, and storage devices, and software programs.",
        "FOL": "∀x ∀y ∀z (Computer(x) → (CanProcessAndStoreData(x) ∧ UsingCombinationOf(x, y) ∧ (HardwareComponents(y) ∧ (CPU(y) ∨ Memory(y) ∨ StorageDevices(y))) ∧ SoftwarePrograms(x, z)))"
    },
    {
        "NL": "An appliance is tagged as a microwave if it uses radiations to heat food.",
        "FOL": "∀x (Appliance(x) ∧ UsesRadiation(x) ∧ HeatsFood(x) → Microwave(x))"
    },
    {
        "NL": "A student needs to pass all three subjects: math, science, and language to be promoted to the next grade.",
        "FOL": "∀x (Student(x) → ((PassesMath(x) ∧ PassesScience(x) ∧ PassesLanguage(x)) → PromotedToNextGrade(x)))"
    },
    {
        "NL": "Authors write novels, poems, or essays.",
        "FOL": "∀x (Author(x) → Writes(x, y) ∧ (Novel(y) ∨ Poem(y) ∨ Essay(y)))"
    },
    {
        "NL": "Bridges connect landmasses, allowing transportation across bodies of water, such as rivers and lakes.",
        "FOL": "∀x∀y∀z∀w (Bridge(x) ∧ Landmass(y) ∧ BodyOfWater(z) ∧ (River(w) ∨ Lake(w)) → (Connects(x, y) ∧ AllowsTransportation(x, z)))"
    },
    {
        "NL": "For a substance to burn, it needs to react with oxygen and release heat.",
        "FOL": "∀x (Substance(x) ∧ ReactsWithOxygen(x) ∧ ReleasesHeat(x) → Burns(x))"
    },
    {
        "NL": "A tiger hunts antelope for nourishment, while a buzzard picks at the leftovers of deceased creatures.",
        "FOL": "∀x ∀y (Tiger(x) ∧ Antelope(y) → HuntsForNourishment(x, y)) ∧ ∀z ∀w (Buzzard(z) ∧ DeceasedCreature(w) → PicksAtLeftoversOf(z, w))"
    },
    {
        "NL": "No bird with feathers lacks wings.",
        "FOL": "∀x (Bird(x) → (HaveFeather(x) → ¬LackWing(x)))"
    },
    {
        "NL": "A laptop is an electronic device and cannot function underwater.",
        "FOL": "∀x (Laptop(x) → (IsElectronicDevice(x) ∧ ¬FunctionUnderwater(x)))"
    },
    {
        "NL": "A cat is sleeping in a basket near the fireplace.",
        "FOL": "∃x ∃y (Cat(x) ∧ Basket(y) ∧ SleepingIn(x, y) ∧ NearTheFireplace(y))"
    },
    {
        "NL": "Bricks are made of clay, glass is made of sand, and steel is made of iron.",
        "FOL": "∀x∀y∀z (Brick(x) → MadeOfClay(x)) ∧ (Glass(y) → MadeOfSand(y)) ∧ (Steel(z) → MadeOfIron(z))"
    },
    {
        "NL": "A food item is a fruit when it is derived from the mature ovary of a flowering plant, usually sweet or tart in flavor, and often eaten raw or used in cooking and baking.",
        "FOL": "∀x (FoodItem(x) ∧ DerivedFromMatureOvary(x) ∧ FloweringPlant(x) ∧ SweetOrTartFlavor(x) ∧ OftenEatenRawOrUsedInCooking(x) → Fruit(x))"
    },
    {
        "NL": "A destination is ideal for a romantic getaway if it offers privacy, scenic views, and comfortable accommodations, without being overcrowded.",
        "FOL": "∀x (Destination(x) ∧ OffersPrivacy(x) ∧ ScenicViews(x) ∧ ComfortableAccommodations(x) ∧ ¬Overcrowded(x) → IdealForRomanticGetaway(x))"
    },
    {
        "NL": "A social event is enjoyable if it promotes meaningful interactions, has a pleasant atmosphere, and includes either live entertainment or engaging activities.",
        "FOL": "∀x (SocialEvent(x) ∧ MeaningfulInteractions(x) ∧ PleasantAtmosphere(x) → (LiveEntertainment(x) ∨ EngagingActivities(x)) ∧ Enjoyable(x))"
    },
    {
        "NL": "If a city invests in public transportation and promotes cycling, it can reduce traffic congestion and improve air quality.",
        "FOL": "∀x ∀y (City(x) ∧ InvestsInPublicTransportation(x) ∧ PromotesCycling(x) → CanReduceTrafficCongestionAndImproveAirQuality(y))"
    },
    {
        "NL": "An item's price decreases during a sale.",
        "FOL": "∀x (Item(x) ∧ Sale(x) → PriceDecrease(x))"
    },
    {
        "NL": "Not every player in Argentina is better than every player in Brazil.",
        "FOL": "¬∀x ∀y (Player(x) ∧ In(x, Argentina) ∧ Player(y) ∧ In(y, Brazil) → Better(x, y))"
    },
    {
        "NL": "A person is considered an environmentalist if they actively work to protect and preserve the natural environment.",
        "FOL": "∀x (ActivelyWorksToProtectAndPreserveNaturalEnvironment(x) → Environmentalist(x))"
    },
    {
        "NL": "Sarah is not a nurse if and only if she is a nurse.",
        "FOL": "¬Nurse(sarah) ↔ Nurse(sarah)"
    },
    {
        "NL": "A tool that is designed for cutting, gripping, and twisting is a versatile tool.",
        "FOL": "∀x (Tool(x) ∧ DesignedForCutting(x) ∧ DesignedForGripping(x) ∧ DesignedForTwisting(x) → VersatileTool(x))"
    },
    {
        "NL": "A scientist who primarily studies living organisms and their interactions with the environment is a biologist.",
        "FOL": "∀x∀y (Scientist(x) ∧ LivingOrganism(y) ∧ Studies(x, y) ∧ StudiesInteractionsWithEnvironment(x, y) → Biologist(x))"
    },
    {
        "NL": "A device is considered a computer if it processes data and performs calculations according to a set of instructions.",
        "FOL": "∀x (Device(x) ∧ ProcessesData(x) ∧ PerformsCalculations(x) ∧ FollowsInstructions(x) → Computer(x))"
    },
    {
        "NL": "Every engineer or programmer isn't appreciated by Sarah.",
        "FOL": "∀x (Worker(x) ∧ (Engineer(x) ∨ Programmer(x)) → ¬Appreciate(sarah, x))"
    },
    {
        "NL": "An organism can reproduce sexually or asexually.",
        "FOL": "∀x (Organism(x) → (ReproduceSexually(x) ⊕ ReproduceAsexually(x)))"
    },
    {
        "NL": "A music festival is memorable when it presents a lineup of popular performers, offers a variety of genres, and provides a unique experience.",
        "FOL": "∀x (MusicFestival(x) → (Memorable(x) ↔ (PopularPerformersLineup(x) ∧ VarietyOfGenres(x) ∧ UniqueExperience(x))))"
    },
    {
        "NL": "A dog follows a cat only if that cat follows it back.",
        "FOL": "∀x ∀y (Dog(x) ∧ Cat(y) ∧ (Follows(x, y) → Follows(y, x)))"
    },
    {
        "NL": "A job opportunity is appealing to candidates if it offers a high salary, flexible working hours, and opportunities for growth, but it is not attractive to those who seek job stability.",
        "FOL": "∀x (JobOpportunity(x) ∧ AppealingToCandidates(x) ↔ (HighSalary(x) ∧ FlexibleWorkingHours(x) ∧ OpportunitiesForGrowth(x) ∧ ¬SeeksJobStability(x)))"
    },
    {
        "NL": "A restaurant is delightful if and only if it serves savory dishes, the service is courteous, but it doesn't have exorbitant pricing.",
        "FOL": "∀x (Restaurant(x) ∧ Delightful(x) ↔ (ServesSavoryDishes(x) ∧ CourteousService(x) ∧ ¬ExorbitantPricing(x)))"
    },
    {
        "NL": "Some flowers bloom in spring, others in summer or fall, but not in winter.",
        "FOL": "∀x (Flower(x) → (BloomInSpring(x) ∨ BloomInSummer(x) ∨ BloomInFall(x)) ∧ ¬BloomInWinter(x))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it is primarily powered by an electric motor and uses rechargeable batteries.",
        "FOL": "∀x (Vehicle(x) ∧ PrimarilyPoweredByElectricMotor(x) ∧ UsesRechargeableBatteries(x) → ElectricVehicle(x))"
    },
    {
        "NL": "For an investment to yield high returns, it must have significant growth potential, a low initial cost, and limited risk, while not being subject to extreme market fluctuations.",
        "FOL": "∀x (Investment(x) ∧ HighReturns(x) → ((GrowthPotential(x) ∧ LowInitialCost(x) ∧ LimitedRisk(x)) ∧ ¬ExtremeMarketFluctuations(x)))"
    },
    {
        "NL": "A person is considered a photographer if they take and edit photographs, often for artistic, commercial, or journalistic purposes.",
        "FOL": "∀x (Person(x) ∧ TakesAndEditsPhotographs(x) ∧ OftenForArtisticCommercialOrJournalisticPurposes(x) → Photographer(x))"
    },
    {
        "NL": "A telescope gathers light from distant objects, such as stars and galaxies, and focuses the light onto a detector, like a camera or the human eye, for observation.",
        "FOL": "∀x ∀y ∀z (Telescope(x) ∧ DistantObject(y) ∧ Detector(z) → (GathersLight(x, y) ∧ FocusesLightOnto(x, z) ∧ ForObservation(z)))"
    },
    {
        "NL": "An employee who is punctual and completes tasks efficiently is more valuable than an employee lacking these qualities.",
        "FOL": "∀x ∀y (Employee(x) ∧ Employee(y) ∧ Punctual(x) ∧ Efficient(x) ∧ (¬Punctual(y) ∨ ¬Efficient(y)) → MoreValuable(x, y))"
    },
    {
        "NL": "Bicycles are eco-friendly, while cars emit greenhouse gases.",
        "FOL": "∀x (Bicycle(x) → EcoFriendly(x)) ∧ ∀y (Car(y) → EmitsGreenhouseGases(y))"
    },
    {
        "NL": "A sculptor is an artist who creates figures and shapes by carving materials.",
        "FOL": "∀x (Artist(x) → CreatesFigures(x) ∧ CreatesShapes(x) ∧ CarvesMaterials(x) → Sculptor(x))"
    },
    {
        "NL": "A triangle is not blue and does not interact with any yellow object.",
        "FOL": "∀x (Triangle(x) → (¬Blue(x) ∧ ¬∃y (Yellow(y) ∧ InteractWith(x, y))))"
    },
    {
        "NL": "Birds can fly if they have feathers and functional wings.",
        "FOL": "∀x (Bird(x) ∧ HasFeathers(x) ∧ HasFunctionalWings(x) → CanFly(x))"
    },
    {
        "NL": "Something is either an old candy or a new toy, and in all cases, it is not purple.",
        "FOL": "∃x (((Old(x) ∧ Candy(x)) ∨ (New(x) ∧ Toy(x))) ∧ ¬Purple(x))"
    },
    {
        "NL": "A musical instrument produces sound either by vibrating strings or by striking a surface.",
        "FOL": "∀x (MusicalInstrument(x) → (VibratingStrings(x) ⊕ StrikingSurface(x)))"
    },
    {
        "NL": "A ship that can hold over 500 guests and has two or more propellers is designated as a cruise ship.",
        "FOL": "∀z (Ship(z) ∧ CanHoldOverFiveHundredGuests(z) ∧ (HasTwoPropellers(z) ∨ HasMoreThanTwoPropellers(z)) → CruiseShip(z))"
    },
    {
        "NL": "A unit that can generate over 700 watts and has three modes or more is defined as a power supply.",
        "FOL": "∀x (Unit(x) ∧ CanGenerateOverSevenHundredWatts(x) ∧ (HasThreeModes(x) ∨ HasMoreThanThreeModes(x)) → PowerSupply(x))"
    },
    {
        "NL": "A hurricane forms over warm ocean waters when a low-pressure system develops, and wind speeds increase, leading to the formation of a tropical cyclone.",
        "FOL": "∀x ∀y ∀z (Hurricane(x) ∧ WarmOceanWater(y) ∧ LowPressureSystem(z) ∧ DevelopsOverWarmWaterAndIncreasesWindSpeed(x, y, z) → FormsTropicalCyclone(x))"
    },
    {
        "NL": "No cat in the house is sleeping.",
        "FOL": "∀w (Cat(w) ∧ InHouse(w) → ¬Sleeping(w))"
    },
    {
        "NL": "To be a successful entrepreneur, one must possess effective leadership skills, be able to adapt to change, and have a clear vision.",
        "FOL": "∀x (Entrepreneur(x) ∧ EffectiveLeadershipSkills(x) ∧ AdaptsToChange(x) ∧ ClearVision(x) → Successful(x))"
    },
    {
        "NL": "In a triangle, the sum of the three interior angles is equal to 180 degrees.",
        "FOL": "∀x (Triangle(x) → SumOfInteriorAngles(x, 180))"
    },
    {
        "NL": "A hotel is luxurious if it offers spacious rooms, gourmet dining options, and has a five-star rating.",
        "FOL": "∀x (Hotel(x) → (Luxurious(x) ↔ (OffersSpaciousRooms(x) ∧ GourmetDiningOptions(x) ∧ FiveStarRating(x))))"
    },
    {
        "NL": "A region is classified as a desert when it experiences low precipitation, supports little vegetation, and has a dry, arid climate.",
        "FOL": "∀x (Region(x) ∧ ExperiencesLowPrecipitation(x) ∧ SupportsLittleVegetation(x) ∧ DryAridClimate(x) → Desert(x))"
    },
    {
        "NL": "An umbrella protects from rain, but not from wind or snow.",
        "FOL": "∀x∀y∀z∀w (Umbrella(x) ∧ Rain(y) ∧ Wind(z) ∧ Snow(w) → (ProtectsFrom(x, y) ∧ ¬ProtectsFrom(x, z) ∧ ¬ProtectsFrom(x, w)))"
    },
    {
        "NL": "A shape is a square if it is a quadrilateral with all sides equal and all angles equal to 90 degrees.",
        "FOL": "∀x (Shape(x) ∧ Quadrilateral(x) ∧ EqualSides(x) ∧ RightAngles(x) → Square(x))"
    },
    {
        "NL": "A remote control operates electronic devices from a distance.",
        "FOL": "∀x (RemoteControl(x) → OperatesElectronicDevicesFromDistance(x))"
    },
    {
        "NL": "Not every scientist can understand chemistry or physics, and none of them detest mathematical calculations.",
        "FOL": "¬∀x (Scientist(x) → (UnderstandChemistry(x) ∨ UnderstandPhysics(x))) ∧ ∀y (Scientist(y) → ¬DetestMathCalculations(y))"
    },
    {
        "NL": "A type of electronic device that can wirelessly connect to the internet, perform multiple computing tasks, and is often used for communication, entertainment, or productivity purposes is a smartphone.",
        "FOL": "∀x∀y∀z (ElectronicDevice(x) ∧ WirelesslyConnectsToInternet(x) ∧ PerformsMultipleComputingTasks(x, y) ∧ UsedForCommunicationEntertainmentOrProductivity(x, z) → Smartphone(x))"
    },
    {
        "NL": "A museum displays art, historical artifacts, and scientific specimens to educate and inspire visitors.",
        "FOL": "∀x (Museum(x) → (Displays(x, art) ∧ Displays(x, historicalArtifacts) ∧ Displays(x, scientificSpecimens) ∧ EducatesVisitors(x) ∧ InspiresVisitors(x)))"
    },
    {
        "NL": "All fathers are male and have at least one child.",
        "FOL": "∀x (Father(x) → Male(x) ∧ HasAtLeastOneChild(x))"
    },
    {
        "NL": "A garden flourishes when it receives adequate sunlight, is watered regularly, and has nutrient-rich soil.",
        "FOL": "∀x ∀y ∀z (Garden(x) ∧ Sunlight(y) ∧ WateringSchedule(z) ∧ AdequateSunlight(x, y) ∧ RegularlyWatered(x, z) ∧ NutrientRichSoil(x) → Flourishes(x))"
    },
    {
        "NL": "It doesn't hold true that all flowers are fragrant.",
        "FOL": "¬∀x (Flower(x) → Fragrant(x))"
    },
    {
        "NL": "No human having heart lacks emotions.",
        "FOL": "∀x (Human(x) → (HaveHeart(x) → ¬LackEmotions(x)))"
    },
    {
        "NL": "Bees collect pollen from flowers, and bats consume insects.",
        "FOL": "∀x ∀y (Bee(x) ∧ Bat(y) → (CollectsPollenFromFlowers(x) ∧ ConsumesInsects(y)))"
    },
    {
        "NL": "A piece of furniture is portable if it is lightweight and has wheels.",
        "FOL": "∀x (Furniture(x) ∧ Lightweight(x) ∧ HasWheels(x) → Portable(x))"
    },
    {
        "NL": "A bicycle can be ridden uphill or on flat ground, but not both simultaneously.",
        "FOL": "∀x ∀y (Bicycle(x) ∧ (Uphill(y) ⊕ Flat(y)) → CanBeRidden(x, y))"
    },
    {
        "NL": "Every chef who has worked in more than five kitchens or has a culinary degree, but not both, cooks in two different cuisines unless they are a restaurant owner, in which case they manage a kitchen.",
        "FOL": "∀x (Chef(x) ∧ (WorkedInMoreThanFiveKitchens(x) ⊕ HasCulinaryDegree(x)) → (CooksInTwoDifferentCuisines(x) ∨ (RestaurantOwner(x) ∧ ManagesKitchen(x))))"
    },
    {
        "NL": "Authors write books, and literary critics interpret them.",
        "FOL": "∀x ∀y (Author(x) ∧ Book(y) → Write(x, y)) ∧ ∀z ∀w (LiteraryCritic(z) ∧ Book(w) → Interpret(z, w))"
    },
    {
        "NL": "A molecule is polar if it has an uneven distribution of electrons, otherwise, it is nonpolar.",
        "FOL": "∀x (Molecule(x) → (Polar(x) ↔ UnevenDistributionOfElectrons(x) ∨ ¬Polar(x) ∧ NonPolar(x)))"
    },
    {
        "NL": "An event is memorable if it has unique experiences, engaging activities, or beautiful surroundings and is not marred by poor organization.",
        "FOL": "∀x (Event(x) ∧ Memorable(x) ↔ ((UniqueExperiences(x) ∨ EngagingActivities(x) ∨ BeautifulSurroundings(x)) ∧ ¬PoorOrganization(x)))"
    },
    {
        "NL": "A telescope enables the observation of distant celestial objects by gathering and magnifying light.",
        "FOL": "∀x (Telescope(x) → (EnablesObservationOfDistantCelestialObjects(x) ∧ GathersAndMagnifiesLight(x)))"
    },
    {
        "NL": "Earthquakes can activate tsunamis, cause ground shaking, and create cracks.",
        "FOL": "∀x (Earthquake(x) → (ActivatesTsunamis(x) ∧ CausesGroundShaking(x) ∧ CreatesCracks(x)))"
    },
    {
        "NL": "A firefighter extinguishes fires or saves cats.",
        "FOL": "∀x (Firefighter(x) → (ExtinguishesFires(x) ∨ SavesCats(x)))"
    },
    {
        "NL": "A book can be classified as historical fiction if it is set in the past and includes fictional characters, events, or settings.",
        "FOL": "∀x (Book(x) ∧ SetInThePast(x) ∧ (FictionalCharacters(x) ∨ FictionalEvents(x) ∨ FictionalSettings(x)) → HistoricalFiction(x))"
    },
    {
        "NL": "A person is considered bilingual if they are fluent in two different languages.",
        "FOL": "∀x (Person(x) ∧ FluentInTwoDifferentLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "A person is considered a citizen of a country if they hold a passport issued by that country.",
        "FOL": "∀x∀y (HoldsPassport(x, y) → CitizenOf(x, y))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it runs on electricity and does not use any fossil fuels.",
        "FOL": "∀x (Vehicle(x) ∧ RunsOnElectricity(x) ∧ ¬UsesFossilFuels(x) → ElectricVehicle(x))"
    },
    {
        "NL": "If there are no culinary dishes, then no food critic enjoys any dessert.",
        "FOL": "¬∃x (CulinaryDish(x)) → ¬∃y (FoodCritic(y) ∧ ∃z (Dessert(z) ∧ Enjoy(y, z)))"
    },
    {
        "NL": "A farm cultivates crops and raises livestock, and may also produce other goods like honey, wine, or cheese.",
        "FOL": "∀x (Farm(x) → CultivatesCrops(x) ∧ RaisesLivestock(x) ∧ (ProducesHoney(x) ∨ ProducesWine(x) ∨ ProducesCheese(x)))"
    },
    {
        "NL": "A door can open when it is unlocked, free from obstructions, and its hinges are in good condition.",
        "FOL": "∀x (Door(x) ∧ Unlocked(x) ∧ NoObstructions(x) ∧ GoodConditionHinges(x) → CanOpen(x))"
    },
    {
        "NL": "A car is considered an electric vehicle if it primarily uses an electric motor for propulsion.",
        "FOL": "∀x (Car(x) ∧ PrimarilyUsesElectricMotor(x) → ElectricVehicle(x))"
    },
    {
        "NL": "Birds migrate to warmer regions during winter months to find food and suitable nesting grounds.",
        "FOL": "∀x (Bird(x) ∧ WinterMonths(x) → MigratesToWarmerRegions(x) ∧ FindsFood(x) ∧ FindsSuitableNestingGrounds(x))"
    },
    {
        "NL": "A student who actively participates in class discussions is more likely to be engaged in the learning process.",
        "FOL": "∀x (ActiveParticipationInClass(x) → EngagedInLearning(x))"
    },
    {
        "NL": "In a relay race, teams of athletes pass a baton from one runner to the next.",
        "FOL": "∀x ∀y ∀z (RelayRace(x) ∧ Team(y) ∧ ParticipatesIn(y, x) → PassesBaton(y, z))"
    },
    {
        "NL": "Each musical piece suggests at least one piece that suggests only calming pieces.",
        "FOL": "∀x (Music(x) → ∃y (Suggests(x, y) ∧ ∀z (Suggests(y, z) → Calming(z))))"
    },
    {
        "NL": "No writer who pens both novels and poems, unless they have won a celebrated literary award, has published in more than twenty books or has not collaborated with a publishing house.",
        "FOL": "¬∃y (Writer(y) ∧ PensNovels(y) ∧ PensPoems(y) ∨ WonCelebratedLiteraryAward(y) ∧ (PublishedInMoreThanTwentyBooks(y) ∨ ¬CollaboratedWithPublishingHouse(y)))"
    },
    {
        "NL": "A landform with steep slopes and a summit is a mountain.",
        "FOL": "∀x (Landform(x) ∧ SteepSlopes(x) ∧ HasSummit(x) → Mountain(x))"
    },
    {
        "NL": "A creature is defined as a cat if it has four legs, tail, fur, and it meows.",
        "FOL": "∀x ((Creature(x) ∧ HasFourLegs(x) ∧ HasTail(x) ∧ HasFur(x) ∧ Meows(x)) → Cat(x))"
    },
    {
        "NL": "A cat purrs when happy, but a dog wags its tail when excited.",
        "FOL": "∀x (Cat(x) → PurrWhenHappy(x)) ∧ ∀y (Dog(y) → WagTailWhenExcited(y))"
    },
    {
        "NL": "A car is considered fuel-efficient if it has a low fuel consumption rate, utilizes hybrid technology, and produces low emissions.",
        "FOL": "∀x ∀y ∀z (Car(x) ∧ LowFuelConsumptionRate(x, y) ∧ UtilizesHybridTechnology(x, z) ∧ ProducesLowEmissions(x) → FuelEfficient(x))"
    },
    {
        "NL": "A rose has petals, thorns, and is a flowering plant, while a cactus has no petals, has spines, and is a succulent plant.",
        "FOL": "∀x ∀y (Rose(x) ∧ Cactus(y) → ((HasPetals(x) ∧ HasThorns(x) ∧ IsFloweringPlant(x)) ∧ (¬HasPetals(y) ∧ HasSpines(y) ∧ IsSucculentPlant(y))))"
    },
    {
        "NL": "Rainy days are suitable for staying indoors and reading books.",
        "FOL": "∀x (RainyDay(x) → (SuitableForStayingIndoors(x) ∧ SuitableForReadingBooks(x)))"
    },
    {
        "NL": "If a person is tall and kind, then he loves at least one blue object, unless he is a pilot.",
        "FOL": "∀x ((Tall(x) ∧ Kind(x)) → ∃y (Blue(y) ∧ Loves(x, y) ∨ Pilot(x)))"
    },
    {
        "NL": "A musical instrument produces pleasant sounds when it is well-tuned, properly maintained, and played skillfully.",
        "FOL": "∀x ∀y ∀z (MusicalInstrument(x) ∧ WellTuned(x, y) ∧ ProperlyMaintained(x, z) ∧ PlayedSkillfully(x) → PleasantSounds(x))"
    },
    {
        "NL": "An organism that can live in extreme environments, withstand high radiation levels, and survive without oxygen is an extremophile.",
        "FOL": "∀x ((Organism(x) ∧ LivesInExtremeEnvironments(x) ∧ WithstandsHighRadiationLevels(x) ∧ SurvivesWithoutOxygen(x)) → Extremophile(x))"
    },
    {
        "NL": "A valid driver's license is required to operate a motor vehicle on public roads.",
        "FOL": "∀x ∀y (MotorVehicle(x) ∧ OperateOnPublicRoads(x, y) → ValidDriversLicense(y))"
    },
    {
        "NL": "Some teachers appreciate only students who are more diligent than them.",
        "FOL": "∃x ∀y (Teacher(x) ∧ Student(y) ∧ MoreDiligentThan(y, x) → Appreciate(x, y))"
    },
    {
        "NL": "A mountain with an elevation above 8,000 meters and permanent snow is considered part of the \"eight-thousander\" group.",
        "FOL": "∀x (Mountain(x) ∧ ElevationAbove8000Meters(x) ∧ PermanentSnow(x) → EightThousander(x))"
    },
    {
        "NL": "A song earns listener's love if it has a catchy melody, relatable lyrics, and a surprising bridge.",
        "FOL": "∀x (Song(x) ∧ HasCatchyMelody(x) ∧ HasRelatableLyrics(x) ∧ HasSurprisingBridge(x) → EarnsListenersLove(x))"
    },
    {
        "NL": "An app is trustworthy if it respects user privacy, has a transparent data policy, and provides secure data storage.",
        "FOL": "∀x (App(x) → (Trustworthy(x) ↔ (RespectsUserPrivacy(x) ∧ TransparentDataPolicy(x) ∧ ProvidesSecureDataStorage(x))))"
    },
    {
        "NL": "A vehicle's fuel efficiency is measured in miles per gallon or kilometers per liter.",
        "FOL": "∀x (Vehicle(x) → (FuelEfficiencyMeasuredInMilesPerGallon(x) ∨ FuelEfficiencyMeasuredInKilometersPerLiter(x)))"
    },
    {
        "NL": "A refrigerator preserves food, a microwave heats food quickly, and an oven bakes or roasts food.",
        "FOL": "∀x ∀y ∀z (Refrigerator(x) ∧ Microwave(y) ∧ Oven(z) → (PreservesFood(x) ∧ HeatsQuickly(y) ∧ (Bakes(z) ∨ Roasts(z))))"
    },
    {
        "NL": "For a planet to have life, it must orbit within the habitable zone of its star and possess liquid water on its surface.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ Orbit(x, y) → (Life(x) ↔ (HabitableZone(x, y) ∧ LiquidWaterSurface(x))))"
    },
    {
        "NL": "Cats meow to communicate with humans or other cats.",
        "FOL": "∀x (Cat(x) → (MeowsToCommunicate(x, Human) ∨ MeowsToCommunicate(x, Cat)))"
    },
    {
        "NL": "A software program that allows users to create, edit, and manipulate digital images, supports multiple file formats, and offers a variety of tools is a photo editing software.",
        "FOL": "∀x (SoftwareProgram(x) ∧ AllowsCreateEditManipulateDigitalImages(x) ∧ SupportsMultipleFileFormats(x) ∧ OffersVarietyOfTools(x) → PhotoEditingSoftware(x))"
    },
    {
        "NL": "Not all programmers who code in Python or Java have created a software or an application.",
        "FOL": "¬∀x (Programmer(x) ∧ (CodesPython(x) ∨ CodesJava(x)) → (CreatedSoftware(x) ∨ CreatedApplication(x)))"
    },
    {
        "NL": "A hotel provides accommodation and dining options for travelers and tourists.",
        "FOL": "∀x (Hotel(x) → (∃y (Accommodation(y) ∧ Provides(x, y)) ∧ ∃z (DiningOptions(z) ∧ Provides(x, z))))"
    },
    {
        "NL": "A marine ecosystem comprises various biotic and abiotic factors, including living organisms and physical components.",
        "FOL": "∀x (MarineEcosystem(x) ↔ (BioticFactors(x) ∧ AbioticFactors(x) ∧ LivingOrganisms(x) ∧ PhysicalComponents(x)))"
    },
    {
        "NL": "Every computer needs some software to operate.",
        "FOL": "∀x (Computer(x) → ∃y (Software(y) ∧ Needs(x, y)))"
    },
    {
        "NL": "Every gadget is either a phone or a laptop, but it cannot be both.",
        "FOL": "∀x (Gadget(x) → (Phone(x) ⊕ Laptop(x)))"
    },
    {
        "NL": "Musicians who play the piano, violin, or guitar typically perform in concerts, recitals, or festivals.",
        "FOL": "∀x∀y (Musician(x) ∧ (PlaysPiano(x) ∨ PlaysViolin(x) ∨ PlaysGuitar(x)) → PerformsInConcert(x, y) ∧ (Concert(y) ∨ Recital(y) ∨ Festival(y)))"
    },
    {
        "NL": "If a person is a teacher, they either work in a public school or a private school.",
        "FOL": "∀x (Person(x) ∧ Teacher(x) → WorkInPublicSchool(x) ⊕ WorkInPrivateSchool(x))"
    },
    {
        "NL": "A national park preserves biological diversity, securing at-risk wildlife and their ecosystems, whilst offering prospects for scientific research and environmental comprehension.",
        "FOL": "∀x ∃y ∃z (NationalPark(x) → (AtRiskWildlife(y) ∧ Ecosystems(z) ∧ Belongs(y, z) ∧ (PreservesBiologicalDiversity(x) ∧ Secures(x, y) ∧ Secures(x, z) ∧ OffersScientificResearchProspects(x) ∧ OffersEnvironmentalComprehension(x))))"
    },
    {
        "NL": "Every city is crowded.",
        "FOL": "∀x (City(x) → Crowded(x))"
    },
    {
        "NL": "Herbivores eat plants, while carnivores eat meat.",
        "FOL": "∀x ∀y (Herbivore(x) ∧ Plant(y) → Eats(x, y)) ∧ ∀z ∀w (Carnivore(z) ∧ Meat(w) → Eats(z, w))"
    },
    {
        "NL": "A laptop works efficiently when it has a powerful processor, enough storage, and a reliable operating system.",
        "FOL": "∀x ∀y ∀z (Laptop(x) ∧ PowerfulProcessor(x, y) ∧ EnoughStorage(x, z) ∧ ReliableOperatingSystem(x) → WorksEfficiently(x))"
    },
    {
        "NL": "If a city has a subway system, it must have at least one subway station.",
        "FOL": "∀x (City(x) ∧ HasSubwaySystem(x) → ∃y (SubwayStation(y) ∧ InCity(y, x)))"
    },
    {
        "NL": "A song can be a rock anthem, have profound lyrics, and receive multiple awards, or it can be a pop hit, have catchy melodies, and climb the charts.",
        "FOL": "∀x (Song(x) → ((Rock(x) ∧ HasProfoundLyrics(x) ∧ ReceivesMultipleAwards(x)) ⊕ (Pop(x) ∧ HasCatchyMelodies(x) ∧ HitsCharts(x))))"
    },
    {
        "NL": "A painting can be an abstract, filled with vivid colors, conveying an eye-catching theme, or it can be a portrait, beautifully detailed, and gain widespread recognition.",
        "FOL": "∀x (Painting(x) → ((Abstract(x) ∧ VividColors(x) ∧ EyeCatchingTheme(x)) ⊕ (Portrait(x) ∧ BeautifulDetail(x) ∧ WidespreadRecognition(x))))"
    },
    {
        "NL": "A vehicle is fuel-efficient if it consumes a minimal amount of fuel per distance traveled and produces low emissions.",
        "FOL": "∀x (FuelEfficient(x) ↔ (Vehicle(x) ∧ ∀y ∀z (Fuel(y) ∧ Distance(z) → (MinimalConsumption(x, y, z) ∧ LowEmissions(x)))))"
    },
    {
        "NL": "All dogs are furry, but not every furry creature is a dog.",
        "FOL": "∀x (Dog(x) → Furry(x)) ∧ ¬∀x (Furry(x) → Dog(x))"
    },
    {
        "NL": "A car is either old or new.",
        "FOL": "∀x (Car(x) → (Old(x) ⊕ New(x)))"
    },
    {
        "NL": "During a relay race, a team of runners completes a set distance by passing a baton from one runner to the next.",
        "FOL": "∀x ∀y ∀z (Team(x) ∧ Runner(y) ∧ RelayRace(z) ∧ Distance(d) ∧ Baton(b) → (CompletesDistance(y, z, d) ∧ PassesBaton(y, z, b)))"
    },
    {
        "NL": "An elephant is spraying water in the pond, and a monkey is swinging in the jungle.",
        "FOL": "∃x ∃y (Elephant(x) ∧ Pond(y) ∧ SprayingIn(x, y)) ∧ ∃z (Monkey(z) ∧ Swinging(z) ∧ InJungle(z))"
    },
    {
        "NL": "A novel gets recognition if it presents unique characters, an intriguing plot, and imaginative scenery.",
        "FOL": "∀x (Novel(x) ∧ PresentsUniqueCharacters(x) ∧ HasIntriguingPlot(x) ∧ HasImaginativeScenery(x) → GetsRecognition(x))"
    },
    {
        "NL": "A bicycle can carry a person and a backpack but not a refrigerator.",
        "FOL": "∀x ∀y ∀z ∀w (Bicycle(x) ∧ Person(y) ∧ Backpack(z) ∧ Refrigerator(w) → (CanCarry(x, y) ∧ CanCarry(x, z) ∧ ¬CanCarry(x, w)))"
    },
    {
        "NL": "Musicians play instruments, sing, or compose music.",
        "FOL": "∀x (Musician(x) → (PlaysInstrument(x) ∨ Sings(x) ∨ ComposesMusic(x)))"
    },
    {
        "NL": "A beverage can be hot or cold and may contain caffeine.",
        "FOL": "∀x (Beverage(x) → ((Hot(x) ∨ Cold(x)) ∧ MayContainCaffeine(x)))"
    },
    {
        "NL": "A musical work is an opera if it combines singing, acting, and orchestral music in a theatrical setting.",
        "FOL": "∀x (MusicalWork(x) ∧ CombinesSingingActingAndOrchestralMusic(x) ∧ TheatricalSetting(x) → Opera(x))"
    },
    {
        "NL": "A disease is contagious if it can spread from one individual to another through direct contact or indirect transmission.",
        "FOL": "∀x (Disease(x) ∧ (DirectContact(x) ∨ IndirectTransmission(x)) → Contagious(x))"
    },
    {
        "NL": "Glasses or contact lenses correct vision for people with poor eyesight.",
        "FOL": "∀x ∀y (Person(x) ∧ PoorEyesight(x) ∧ (Glasses(y) ∨ ContactLenses(y)) → CorrectsVision(y, x))"
    },
    {
        "NL": "If a fruit is part of a salad, it is an apple or grape.",
        "FOL": "∀x (Fruit(x) ∧ PartOfSalad(x) → Apple(x) ∨ Grape(x))"
    },
    {
        "NL": "A report is a chronicle if it narrates the life events of the reporter.",
        "FOL": "∀x ∃y (Report(x) ∧ Reporter(y) ∧ NarratesLifeEvents(x, y) → Chronicle(x))"
    },
    {
        "NL": "An airplane takes off successfully if the runway is clear, the weather is favorable, and the engines are operating optimally.",
        "FOL": "∀x ∀y ∀z (Airplane(x) ∧ ClearRunway(x, y) ∧ FavorableWeather(x, z) ∧ OptimalEngineOperation(x) → SuccessfulTakeoff(x))"
    },
    {
        "NL": "In a computer network, routers, switches, and firewalls work together to manage traffic, ensure data transmission, and maintain security.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ Routers(x, y) ∧ Switches(x, z) ∧ Firewalls(x) → (ManagesTraffic(x) ∧ EnsuresDataTransmission(x) ∧ MaintainsSecurity(x)))"
    },
    {
        "NL": "A movie becomes successful if it has a gripping story, excellent cinematography, and an acclaimed director.",
        "FOL": "∀x (Movie(x) ∧ HasGrippingStory(x) ∧ HasExcellentCinematography(x) ∧ HasAcclaimedDirector(x) → BecomesSuccessful(x))"
    },
    {
        "NL": "A medical treatment is effective for a specific condition if it alleviates symptoms, improves the patient's overall health, and has minimal side effects.",
        "FOL": "∀x∀y∀z (MedicalTreatment(x) ∧ Condition(y) ∧ Patient(z) → (EffectiveFor(x, y) ↔ (AlleviatesSymptoms(x, y, z) ∧ ImprovesOverallHealth(x, z) ∧ MinimalSideEffects(x))))"
    },
    {
        "NL": "Musicians perform in front of audiences at concerts, festivals, and other live events.",
        "FOL": "∀x (Musician(x) → PerformsInFrontOfAudiences(x))"
    },
    {
        "NL": "A smartphone needs to be charged if the battery level is low and the device is still in use.",
        "FOL": "∀x ∀y (Smartphone(x) ∧ LowBatteryLevel(y) ∧ InUse(x) → NeedsCharging(x))"
    },
    {
        "NL": "If a person is an athlete, they either participate in individual sports or team sports.",
        "FOL": "∀x (Person(x) ∧ Athlete(x) → ParticipatesInIndividualSports(x) ⊕ ParticipatesInTeamSports(x))"
    },
    {
        "NL": "A composer creates music by arranging sounds in time, often using various instruments or voices.",
        "FOL": "∀x (Composer(x) → ArrangesSoundsInTime(x) ∧ (UsesInstruments(x) ∨ UsesVoices(x)))"
    },
    {
        "NL": "Mountains are taller than hills and often have snow at their peaks.",
        "FOL": "∀x∀y (Mountain(x) ∧ Hill(y) → (Taller(x, y) ∧ ∃z (Snow(z) ∧ AtPeak(z, x))))"
    },
    {
        "NL": "A beverage can be either hot or cold.",
        "FOL": "∀x (Beverage(x) → Hot(x) ⊕ Cold(x))"
    },
    {
        "NL": "A television show is not live if it is pre-recorded.",
        "FOL": "∀x (TelevisionShow(x) ∧ PreRecorded(x) → ¬Live(x))"
    },
    {
        "NL": "A cat is sleeping on a mat, and a dog is playing in the yard.",
        "FOL": "∃x ∃y (Cat(x) ∧ Mat(y) ∧ SleepingOn(x, y)) ∧ ∃z (Dog(z) ∧ Playing(z) ∧ InTheYard(z))"
    },
    {
        "NL": "A scientific discovery is groundbreaking when it expands knowledge, has practical applications, and inspires further research.",
        "FOL": "∀x ∀y ∀z (ScientificDiscovery(x) ∧ ExpandsKnowledge(x, y) ∧ PracticalApplications(x, z) ∧ InspiresFurtherResearch(x) → Groundbreaking(x))"
    },
    {
        "NL": "Every item is a tedious trapezoid only if it is black.",
        "FOL": "∀x (Tedious(x) → (Trapezoid(x) → Black(x)))"
    },
    {
        "NL": "An engine that uses advanced materials, operates efficiently, and has low emissions can improve a vehicle's performance and environmental impact.",
        "FOL": "∀x ∀y ∀z (Engine(x) ∧ UsesAdvancedMaterials(x) ∧ OperatesEfficiently(x) ∧ LowEmissions(x) → ImprovesVehiclePerformanceAndEnvironmentalImpact(y, z))"
    },
    {
        "NL": "If a person is a dentist, they must diagnose and treat issues related to teeth and gums.",
        "FOL": "∀x (Dentist(x) → (DiagnosesTeethAndGumIssues(x) ∧ TreatsTeethAndGumIssues(x)))"
    },
    {
        "NL": "In a chemical reaction, elements bond with each other to form compounds, but no element bonds with itself.",
        "FOL": "∀x ∀y ∀z (Element(x) ∧ Element(y) ∧ ChemicalReaction(z) ∧ Participates(x, z) ∧ Participates(y, z) → (FormsCompound(x, y) ∧ ¬Bonds(x, x)))"
    },
    {
        "NL": "A valid passport is required for international travel, but a driver's license is sufficient for domestic flights within the same country.",
        "FOL": "∀x∀y (Person(x) ∧ Travel(y) → ((International(y) ∧ Passport(x) ∧ Valid(x)) ∨ (Domestic(y) ∧ DriversLicense(x))))"
    },
    {
        "NL": "If every actor who is a theater performer gives a stage performance, then some actors who don't perform on television will also give a stage performance.",
        "FOL": "∀x (Actor(x) ∧ TheaterPerformer(x) → StagePerformanceGiven(x)) → ∃y (Actor(y) ∧ ¬TelevisionPerformer(y) ∧ StagePerformanceGiven(y))"
    },
    {
        "NL": "A library loans books, an art gallery exhibits artwork, and a theater showcases performances.",
        "FOL": "∀x∀y∀z (Library(x) ∧ ArtGallery(y) ∧ Theater(z) → (LoansBooks(x) ∧ ExhibitsArtwork(y) ∧ ShowcasesPerformances(z)))"
    },
    {
        "NL": "A chef prepares meals using ingredients and kitchen tools.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Ingredient(y) ∧ KitchenTool(z) → PreparesMeals(x, y, z))"
    },
    {
        "NL": "A well-designed smartphone has a long battery life, fast processing capabilities, and a high-quality camera.",
        "FOL": "∀x (Smartphone(x) ∧ LongBatteryLife(x) ∧ FastProcessing(x) ∧ HighQualityCamera(x) → WellDesigned(x))"
    },
    {
        "NL": "All runners are good athletes, or some athletes are not good players.",
        "FOL": "∀x (Runner(x) → GoodAthlete(x)) ∨ ∃y (Athlete(y) ∧ ¬GoodPlayer(y))"
    },
    {
        "NL": "A person is considered an artist if they create visual, auditory, or performing works of art.",
        "FOL": "∀x (Person(x) ∧ CreatesVisualOrAuditoryOrPerformingArt(x) → Artist(x))"
    },
    {
        "NL": "A movie is recommended for children if it is rated G or PG and has no explicit content.",
        "FOL": "∀x (Movie(x) → ((RatedG(x) ∨ RatedPG(x)) ∧ ¬ExplicitContent(x) → RecommendedForChildren(x)))"
    },
    {
        "NL": "Animals in a zoo are provided with a suitable habitat and receive proper care to ensure their well-being.",
        "FOL": "∀x∀y (Zoo(x) ∧ Animal(y) ∧ LocatedIn(y, x) → (ProvidedSuitableHabitat(y) ∧ ReceivesProperCare(y)))"
    },
    {
        "NL": "A hammer is used for driving nails, while a screwdriver is used for turning screws.",
        "FOL": "∀x∀y (Hammer(x) → DrivesNails(x)) ∧ (Screwdriver(y) → TurnsScrews(y))"
    },
    {
        "NL": "A furniture piece that functions as a chair is not a table nor a bed.",
        "FOL": "∀x (FurniturePiece(x) ∧ FunctionsAs(x, Chair) → (¬FunctionsAs(x, Table) ∧ ¬FunctionsAs(x, Bed)))"
    },
    {
        "NL": "Cats like to play and sleep most of the day.",
        "FOL": "∀x (Cat(x) → (LikesToPlay(x) ∧ SleepMostOfDay(x)))"
    },
    {
        "NL": "A structure is safe during an earthquake if it has a solid foundation, flexible support, and is built with earthquake-resistant materials.",
        "FOL": "∀x∀y∀z (Structure(x) ∧ SolidFoundation(x, y) ∧ FlexibleSupport(x, z) ∧ EarthquakeResistantMaterials(x) → SafeDuringEarthquake(x))"
    },
    {
        "NL": "A valid passport is required for international travel, and travelers may also need a visa depending on the destination country's regulations.",
        "FOL": "∀x (InternationalTravel(x) → (RequiresValidPassport(x) ∧ (RequiresVisa(x) ∨ ¬RequiresVisa(x))))"
    },
    {
        "NL": "A solar panel generates a significant amount of electricity when it is exposed to direct sunlight, has an efficient energy conversion rate, and is properly angled to maximize solar exposure.",
        "FOL": "∀x (SolarPanel(x) ∧ DirectSunlightExposure(x) ∧ EfficientEnergyConversionRate(x) ∧ ProperlyAngled(x) → GeneratesSignificantElectricity(x))"
    },
    {
        "NL": "If a building is tall and commercial, it either has an elevator or an escalator, but not both.",
        "FOL": "∀x (Building(x) ∧ Tall(x) ∧ Commercial(x) → (HasElevator(x) ⊕ HasEscalator(x)))"
    },
    {
        "NL": "There isn't a chef who can cook all French dishes but hasn't ever cooked a vegan meal.",
        "FOL": "¬∃x (Chef(x) ∧ ∀y (FrenchDish(y) → CanCook(x, y)) ∧ ¬∃z (VeganMeal(z) ∧ HasCooked(x, z)))"
    },
    {
        "NL": "A person who designs and builds machines is called an engineer.",
        "FOL": "∀x ((DesignsMachines(x) ∧ BuildsMachines(x)) → Engineer(x))"
    },
    {
        "NL": "There is a forest where some deer roam.",
        "FOL": "∃x ∃y (Forest(x) ∧ Deer(y) ∧ RoamIn(y, x))"
    },
    {
        "NL": "A film can be either a comedy or a tragedy, but it cannot be both.",
        "FOL": "∀x (Film(x) → (Comedy(x) ⊕ Tragedy(x)))"
    },
    {
        "NL": "A material that exhibits superconductivity at room temperature and has practical applications can revolutionize technology and industry.",
        "FOL": "∀x (Material(x) ∧ SuperconductivityAtRoomTemperature(x) ∧ PracticalApplications(x) → RevolutionizesTechnologyAndIndustry(x))"
    },
    {
        "NL": "All are trombones if they are not flutes.",
        "FOL": "∀y (¬Flute(y) → Trombone(y))"
    },
    {
        "NL": "An artist paints pictures, and a gallery displays them.",
        "FOL": "∀x ∀y (Artist(x) ∧ Pictures(y) → Paint(x, y)) ∧ ∀z ∀w (Gallery(z) ∧ Pictures(w) → Display(z, w))"
    },
    {
        "NL": "A plant needs nourishment, light, and good soil to grow well.",
        "FOL": "∀x (Plant(x) → (GetsNourishment(x) ∧ GetsLight(x) ∧ HasGoodSoil(x)) → GrowsWell(x))"
    },
    {
        "NL": "A scientist makes breakthroughs by conducting rigorous experiments and analyzing data.",
        "FOL": "∀x (Scientist(x) ∧ ConductsRigorousExperiments(x) ∧ AnalyzesData(x) → MakesBreakthroughs(x))"
    },
    {
        "NL": "Bears eat honey, while bees make honey.",
        "FOL": "∀x ∀y (Bear(x) ∧ Honey(y) → Eats(x, y)) ∧ ∀z ∀w (Bee(z) ∧ Honey(w) → Makes(z, w))"
    },
    {
        "NL": "A printer can print documents, scan images, and send faxes.",
        "FOL": "∀x (Printer(x) → PrintDocuments(x) ∧ ScanImages(x) ∧ SendFaxes(x))"
    },
    {
        "NL": "A couple has a successful relationship if they communicate openly, trust each other, and support each other's goals.",
        "FOL": "∀x∀y (Couple(x, y) → (SuccessfulRelationship(x, y) ↔ (CommunicatesOpenly(x, y) ∧ TrustsEachOther(x, y) ∧ SupportsGoals(x, y))))"
    },
    {
        "NL": "All birds are animals, but not all animals are birds.",
        "FOL": "∀x (Bird(x) → Animal(x)) ∧ ¬∀x (Animal(x) → Bird(x))"
    },
    {
        "NL": "Cats groom themselves regularly, while dogs rely on their owners for grooming.",
        "FOL": "∀x∀y (Cat(x) ∧ Dog(y) → (GroomsSelf(x) ∧ ReliesOnOwnerForGrooming(y)))"
    },
    {
        "NL": "An artwork is either abstract or representational, but it cannot be both.",
        "FOL": "∀x (Artwork(x) → ((Abstract(x) ∨ Representational(x)) ∧ ¬(Abstract(x) ∧ Representational(x))))"
    },
    {
        "NL": "A dog is friendly if and only if it isn't aggressive or is a golden retriever.",
        "FOL": "∀x (Dog(x) → (Friendly(x) ↔ (¬Aggressive(x) ∨ IsGoldenRetriever(x))))"
    },
    {
        "NL": "A pentagon is not orange and does not point to any blue object",
        "FOL": "∀x (Pentagon(x) → (¬Orange(x) ∧ ¬∃y (Blue(y) ∧ PointsTo(x, y))))"
    },
    {
        "NL": "A student who does not complete their assignments or attend classes regularly is at risk of failing the course.",
        "FOL": "∀x (Student(x) ∧ (¬CompletesAssignments(x) ∨ ¬AttendsClassesRegularly(x)) → AtRiskOfFailing(x))"
    },
    {
        "NL": "A student attends classes or does homework, but not both.",
        "FOL": "∀x (Student(x) → (AttendsClasses(x) ⊕ DoesHomework(x)))"
    },
    {
        "NL": "A software program runs smoothly on a computer when it is compatible with the operating system, utilizes system resources efficiently, and is free of bugs and errors.",
        "FOL": "∀x∀y (SoftwareProgram(x) ∧ Computer(y) ∧ CompatibleWithOperatingSystem(x, y) ∧ EfficientResourceUtilization(x, y) ∧ FreeOfBugsAndErrors(x) → RunsSmoothly(x, y))"
    },
    {
        "NL": "Some instruments are both stringed and played with a bow.",
        "FOL": "∃x (Instrument(x) ∧ Stringed(x) ∧ PlayedWithBow(x))"
    },
    {
        "NL": "A bee can either collect nectar or pollen from a flower but not both at the same time.",
        "FOL": "∀x∀y (Bee(x) ∧ Flower(y) → (CollectsNectar(x, y) ⊕ CollectsPollen(x, y)))"
    },
    {
        "NL": "If an insect is not a butterfly, it cannot fly, but it can crawl.",
        "FOL": "∀x (Insect(x) ∧ ¬Butterfly(x) → (¬CanFly(x) ∧ CanCrawl(x)))"
    },
    {
        "NL": "A music festival features artists from different genres, such as rock, pop, and electronic, and hosts performances at multiple stages or venues.",
        "FOL": "∀x∀y∀z (MusicFestival(x) ∧ (Rock(y) ∨ Pop(y) ∨ Electronic(y)) ∧ (Stage(z) ∨ Venue(z)) → FeaturesArtistsAndHostsPerformances(x, y, z))"
    },
    {
        "NL": "If a vehicle is self-driving, it operates without human intervention.",
        "FOL": "∀x (Vehicle(x) ∧ SelfDriving(x) → OperatesWithoutHumanIntervention(x))"
    },
    {
        "NL": "A person is a firefighter if they are trained and employed to extinguish fires and protect life and property.",
        "FOL": "∀x (Firefighter(x) ↔ (Person(x) ∧ Trained(x) ∧ Employed(x) ∧ ExtinguishesFires(x) ∧ ProtectsLifeAndProperty(x)))"
    },
    {
        "NL": "A car engine combusts fuel in the presence of oxygen, producing heat and mechanical energy to propel the vehicle forward.",
        "FOL": "∀x∀y∀z (CarEngine(x) → (CombustsFuel(x, y) ∧ Fuel(y) ∧ InPresenceOfOxygen(x) ∧ ProducesHeat(x) ∧ ProducesMechanicalEnergy(x, z) ∧ PropelsVehicleForward(z)))"
    },
    {
        "NL": "A play gains popularity if it has a thrilling plot, skillful performances, and creative set design.",
        "FOL": "∀x (Play(x) ∧ HasThrillingPlot(x) ∧ HasSkillfulPerformances(x) ∧ HasCreativeSetDesign(x) → GainsPopularity(x))"
    },
    {
        "NL": "A balanced diet that includes a variety of fruits, vegetables, and lean proteins can provide essential nutrients and promote overall health and wellness.",
        "FOL": "∀x∀y∀z (BalancedDiet(x) ∧ VarietyOfFruits(y) ∧ Vegetables(z) ∧ LeanProteins(x) ∧ IncludesElements(x, y, z) → ProvidesEssentialNutrients(x) ∧ PromotesOverallHealthAndWellness(x))"
    },
    {
        "NL": "Artists create visual artworks, while writers compose written works.",
        "FOL": "∀x∀y (Artist(x) ∧ Writer(y) → (CreatesVisualArtworks(x) ∧ ComposesWrittenWorks(y)))"
    },
    {
        "NL": "Lions are carnivorous, while elephants are herbivorous.",
        "FOL": "∀x∀y (Lion(x) ∧ Elephant(y) → (Carnivorous(x) ∧ ¬Carnivorous(y) ∧ Herbivorous(y) ∧ ¬Herbivorous(x)))"
    },
    {
        "NL": "Some instruments use strings, while others use air.",
        "FOL": "∃x (Instrument(x) ∧ UsesStrings(x)) ∧ ∃y (Instrument(y) ∧ UsesAir(y))"
    },
    {
        "NL": "Cacti store water in their stems, while most other plants store it in their roots.",
        "FOL": "∀x∀y (Cactus(x) → StoresWaterInStem(x)) ∧ (¬Cactus(y) ∧ Plant(y) → StoresWaterInRoots(y))"
    },
    {
        "NL": "A smartphone is considered waterproof if it can be submerged in water up to a certain depth for a specific duration without damage.",
        "FOL": "∀x (Smartphone(x) ∧ Waterproof(x) → (Submergible(x) ∧ SpecificDepth(x) ∧ SpecificDuration(x) ∧ ¬Damage(x)))"
    },
    {
        "NL": "Rain causes floods, wind erodes rocks, and sun evaporates water.",
        "FOL": "∀x∀y∀z (Rain(x) → CausesFloods(x)) ∧ (Wind(y) → ErodesRocks(y)) ∧ (Sun(z) → EvaporatesWater(z))"
    },
    {
        "NL": "A healthy diet consists of consuming fruits, vegetables, and whole grains while avoiding excessive sugar and unhealthy fats.",
        "FOL": "∀x (HealthyDiet(x) ↔ (ConsumesFruits(x) ∧ ConsumesVegetables(x) ∧ ConsumesWholeGrains(x) ∧ AvoidsExcessiveSugar(x) ∧ AvoidsUnhealthyFats(x)))"
    },
    {
        "NL": "Paul appreciates an Picasso painting if and only if it was painted in 1907.",
        "FOL": "∀x (Painting(x) ∧ CreatedBy(x, picasso) → (PaintedIn(x, nineteenseven) ↔ Appreciates(paul, x)))"
    },
    {
        "NL": "In a chemistry lab, safety measures include wearing protective equipment such as gloves, goggles, and lab coats, as well as proper storage of chemicals.",
        "FOL": "∀x (ChemistryLab(x) → (WearGloves(x) ∧ WearGoggles(x) ∧ WearLabCoats(x) ∧ ProperChemicalStorage(x)))"
    },
    {
        "NL": "A creature that walks on four legs, has fur, and barks is a dog.",
        "FOL": "∀x (Creature(x) ∧ WalksOnFourLegs(x) ∧ HasFur(x) ∧ Barks(x) → Dog(x))"
    },
    {
        "NL": "A product becomes a bestseller if it's innovative and meets customer needs.",
        "FOL": "∀x (Product(x) ∧ Innovative(x) ∧ MeetsCustomerNeeds(x) → Bestseller(x))"
    },
    {
        "NL": "A bird will fly only if it doesn't lose its feathers.",
        "FOL": "∀x (Bird(x) ∧ Fly(x) → ¬LoseFeathers(x))"
    },
    {
        "NL": "Every leader who guides any team is revered by everyone.",
        "FOL": "∀x (Leader(x) → ∀y ((Team(y) → Guide(x, y)) → ¬∃z (Person(z) ∧ Revered(z, x))))"
    },
    {
        "NL": "A person is considered a dentist if they diagnose and treat issues related to teeth and oral health.",
        "FOL": "∀x (Person(x) ∧ DiagnosesTeethIssues(x) ∧ TreatsOralHealthIssues(x) → Dentist(x))"
    },
    {
        "NL": "A type of plant that grows in water or in damp, wet conditions and has leaves, stems, and roots that are adapted to an aquatic environment is an aquatic plant.",
        "FOL": "∀x (Plant(x) ∧ GrowsInWater(x) ∨ GrowsInDampConditions(x) ∧ AdaptedToAquaticEnvironment(x) → AquaticPlant(x))"
    },
    {
        "NL": "A scientist makes a breakthrough when their research is innovative and has a significant impact or challenges existing theories.",
        "FOL": "∀x (Scientist(x) → (MakesBreakthrough(x) ↔ (InnovativeResearch(x) ∧ (SignificantImpact(x) ∨ ChallengesTheories(x)))))"
    },
    {
        "NL": "Liam and Daniel are athletes.",
        "FOL": "Athlete(liam) ∧ Athlete(daniel)"
    },
    {
        "NL": "Not all birds in Australia fly higher than every bird in Africa.",
        "FOL": "¬∀x ∀y (Bird(x) ∧ In(x, australia) ∧ Bird(y) ∧ In(y, africa) → Higher(x, y))"
    },
    {
        "NL": "A person is content if and only if they are fit and have companions",
        "FOL": "∀x (Person(x) → (Content(x) ↔ (Fit(x) ∧ HasCompanions(x))))"
    },
    {
        "NL": "An educational program is deemed effective if it fosters critical thinking, promotes collaboration, and enhances problem-solving skills.",
        "FOL": "∀x (EducationalProgram(x) ∧ FostersCriticalThinking(x) ∧ PromotesCollaboration(x) ∧ EnhancesProblemSolvingSkills(x) → Effective(x))"
    },
    {
        "NL": "No leaders are respected unless they are honest, but all of them want to lead.",
        "FOL": "∀x (Leader(x) → (¬Respected(x) ∨ Honest(x))) ∧ ∀y (Leader(y) → WantToLead(y))"
    },
    {
        "NL": "A researcher, knowledgeable in physics and chemistry, investigates materials for use in aerospace or medical industries.",
        "FOL": "∀x ∀y ∀z (Researcher(x) ∧ KnowledgeableInPhysics(x) ∧ KnowledgeableInChemistry(x) ∧ Material(y) ∧ (AerospaceIndustry(z) ∨ MedicalIndustry(z)) → InvestigatesForUseIn(x, y, z))"
    },
    {
        "NL": "Some people are either rich or poor.",
        "FOL": "∃x (Person(x) ∧ (Rich(x) ⊕ Poor(x)))"
    },
    {
        "NL": "A child is playing with a toy.",
        "FOL": "∃x ∃y (Child(x) ∧ Toy(y) ∧ PlayingWith(x, y))"
    },
    {
        "NL": "A person is considered an architect if they design buildings, structures, and spaces, often considering aesthetics, functionality, and structural integrity.",
        "FOL": "∀x (Architect(x) ↔ (DesignsBuildingsStructuresAndSpaces(x) ∧ ConsidersAestheticsFunctionalityAndStructuralIntegrity(x)))"
    },
    {
        "NL": "An athlete trains regularly and competes in sports events, but some athletes specialize in a single sport.",
        "FOL": "∀x (Athlete(x) ∧ TrainsRegularly(x) ∧ CompetesInSportsEvents(x)) ∧ ∃y (Athlete(y) ∧ SpecializesInSingleSport(y))"
    },
    {
        "NL": "A mathematical operation can be either addition, subtraction, multiplication, or division.",
        "FOL": "∀x (MathematicalOperation(x) → (Addition(x) ⊕ Subtraction(x) ⊕ Multiplication(x) ⊕ Division(x)))"
    },
    {
        "NL": "All cars use fuel, but not every fuel user is a car.",
        "FOL": "∀x (Car(x) → UseFuel(x)) ∧ ∃y (UseFuel(y) ∧ ¬Car(y))"
    },
    {
        "NL": "Every black entity is sphere unless it is light.",
        "FOL": "∀x (Black(x) → (¬Light(x) → Sphere(x)))"
    },
    {
        "NL": "An object is a tall tree only if it is old.",
        "FOL": "∀x (Tall(x) ∧ Tree(x) → Old(x))"
    },
    {
        "NL": "A valid email address contains a local part, an \"@\" symbol, and a domain part.",
        "FOL": "∀x (EmailAddress(x) → (LocalPart(x, y) ∧ AtSymbol(x) ∧ DomainPart(x, z) → Valid(x)))"
    },
    {
        "NL": "A thunderstorm produces lightning and thunder.",
        "FOL": "∀x (Thunderstorm(x) → (ProducesLightning(x) ∧ ProducesThunder(x)))"
    },
    {
        "NL": "An animal is a nocturnal creature if it is primarily active during the night, has specialized adaptations for nighttime activity, and rests during the day.",
        "FOL": "∀x∀y∀z (Animal(x) ∧ ActiveDuringNight(x, y) ∧ SpecializedAdaptations(x, y) ∧ NighttimeActivity(y) ∧ RestsDuringDay(x, z) → NocturnalCreature(x))"
    },
    {
        "NL": "An animal can't be both a mammal and a bird.",
        "FOL": "∀x (Animal(x) → ¬(Mammal(x) ∧ Bird(x)))"
    },
    {
        "NL": "If every chef with a Michelin star rating will get a TV show, then some chefs without a James Beard award will also get a TV show.",
        "FOL": "∀x (Chef(x) ∧ MichelinStar(x) → TVShow(x)) → ∃y (Chef(y) ∧ ¬JamesBeardWinner(y) ∧ TVShow(y))"
    },
    {
        "NL": "Air conditioning systems cool and dehumidify indoor spaces, providing comfort during hot and humid conditions.",
        "FOL": "∀x ∀y ∀z (AirConditioningSystem(x) ∧ Cool(c) ∧ Dehumidify(d) ∧ IndoorSpace(y) ∧ HotHumidCondition(z) → CoolsDehumidifiesAndProvidesComfort(x, c, d, y, z))"
    },
    {
        "NL": "Sunglasses protect the eyes from harmful sunlight.",
        "FOL": "∀x (Sunglasses(x) → (ProtectEyes(y) ∧ HarmfulSunlight(z) ∧ FromSunlight(x, y, z)))"
    },
    {
        "NL": "A computer processes information using hardware components like the central processing unit (CPU), memory, and storage devices.",
        "FOL": "∀x∀y (Computer(x) ∧ HardwareComponent(y) ∧ (CPU(y) ∨ Memory(y) ∨ StorageDevice(y)) → ProcessesInformation(x, y))"
    },
    {
        "NL": "A building with efficient insulation, energy-saving appliances, and solar panels can significantly reduce energy consumption.",
        "FOL": "∀x (Building(x) ∧ EfficientInsulation(x) ∧ EnergySavingAppliances(x) ∧ SolarPanels(x) → SignificantlyReduceEnergyConsumption(x))"
    },
    {
        "NL": "An athlete can run and jump.",
        "FOL": "∀x (Athlete(x) → (CanRun(x) ∧ CanJump(x)))"
    },
    {
        "NL": "No athlete who impresses every coach is hated by anyone.",
        "FOL": "∀x (Athlete(x) → ∀y ((Coach(y) → Impress(x, y)) → ¬∃z (Person(z) ∧ Hate(z, x))))"
    },
    {
        "NL": "A movie is considered successful if it has a high rating and either a popular lead actor or large box office earnings.",
        "FOL": "∀x (Movie(x) ∧ HasHighRating(x) ∧ (HasPopularLeadActor(x) ∨ HasLargeBoxOfficeEarnings(x)) → Successful(x))"
    },
    {
        "NL": "A bank allows customers to deposit and withdraw money from their accounts.",
        "FOL": "∀x ∀y (Bank(x) ∧ Customer(y) → (DepositsMoney(y, x) ∨ WithdrawsMoney(y, x)))"
    },
    {
        "NL": "A place is considered a university if it provides higher education and awards degrees.",
        "FOL": "∀x (University(x) ↔ (ProvidesHigherEducation(x) ∧ AwardsDegrees(x)))"
    },
    {
        "NL": "A certain school is where some students study at.",
        "FOL": "∃x ∃y (School(x) ∧ Students(y) ∧ StudyAt(y, x))"
    },
    {
        "NL": "There exist sandwiches that are tasty and nutritious, but not low in calories, or they are low in calories but not tasty and nutritious.",
        "FOL": "∀x (Sandwich(x) → ((Tasty(x) ∧ Nutritious(x) ∧ ¬LowCalorie(x)) ⊕ (LowCalorie(x) ∧ ¬(Tasty(x) ∧ Nutritious(x)))))"
    },
    {
        "NL": "Eagles have sharp vision, and dogs have an acute sense of smell.",
        "FOL": "∀x (Eagle(x) → SharpVision(x)) ∧ ∀y (Dog(y) → AcuteSenseOfSmell(y))"
    },
    {
        "NL": "All species face extinction eventually.",
        "FOL": "∀x (Species(x) → FaceExtinctionEventually(x))"
    },
    {
        "NL": "A valid ticket grants access to an event, while an invalid ticket does not.",
        "FOL": "∀x∀y (Ticket(x) ∧ Event(y) → (Valid(x) → GrantsAccess(x, y)) ∧ (¬Valid(x) → ¬GrantsAccess(x, y)))"
    },
    {
        "NL": "Dogs wag their tails when they are happy or excited.",
        "FOL": "∀x∀y (Dog(x) ∧ (Happy(y) ∨ Excited(y)) → WagsTail(x, y))"
    },
    {
        "NL": "An elephant is playing in the river at noon.",
        "FOL": "∃x ∃y ∃z (Elephant(x) ∧ River(y) ∧ PlayingIn(x, y) ∧ Noon(z))"
    },
    {
        "NL": "Cities with effective waste management, clean energy usage, and advanced public transportation have a better sustainability index.",
        "FOL": "∀v (City(v) ∧ EffectiveWasteManagement(v) ∧ CleanEnergy(v) ∧ AdvancedPublicTransportation(v) → BetterSustainabilityIndex(v))"
    },
    {
        "NL": "A computer program can be efficient and fast if it uses optimized algorithms and has access to sufficient resources.",
        "FOL": "∀x ∀y ∀z (ComputerProgram(x) ∧ OptimizedAlgorithm(y) ∧ SufficientResources(z) → EfficientAndFast(x))"
    },
    {
        "NL": "A city with efficient public transportation and clean streets attracts tourists.",
        "FOL": "∀x (City(x) ∧ EfficientPublicTransportation(x) ∧ CleanStreets(x) → AttractsTourists(x))"
    },
    {
        "NL": "A garden is well-maintained if it has pruned plants, no weeds, and a tidy appearance.",
        "FOL": "∀x (Garden(x) ∧ WellMaintained(x) ↔ (PrunedPlants(x) ∧ NoWeeds(x) ∧ TidyAppearance(x)))"
    },
    {
        "NL": "An object is a parallelogram if it has four sides, opposite sides are parallel, and opposite angles are equal.",
        "FOL": "∀x (Parallelogram(x) ↔ (Object(x) ∧ FourSides(x) ∧ OppositeSidesParallel(x) ∧ OppositeAnglesEqual(x)))"
    },
    {
        "NL": "Every drawing is either a doodle or a sketch, but it cannot be both.",
        "FOL": "∀x (Drawing(x) → (Doodle(x) ⊕ Sketch(x)))"
    },
    {
        "NL": "A vehicle that can transport more than 10 people and has three or more wheels is classified as a minibus.",
        "FOL": "∀x (Vehicle(x) ∧ CanTransportMoreThanTenPeople(x) ∧ (HasThreeWheels(x) ∨ HasMoreThanThreeWheels(x)) → Minibus(x))"
    },
    {
        "NL": "Some insects are winged, while others are wingless.",
        "FOL": "∃x (Insect(x) ∧ Winged(x)) ∧ ∃y (Insect(y) ∧ Wingless(y))"
    },
    {
        "NL": "A drink is soda if and only if it is fizzy and not considered unhealthy.",
        "FOL": "∀x (Drink(x) → (Soda(x) ↔ (Fizzy(x) ∧ ¬ConsideredUnhealthy(x))))"
    },
    {
        "NL": "An electronic device becomes obsolete when it is surpassed by newer technology and is no longer supported by its manufacturer.",
        "FOL": "∀x ∀y (ElectronicDevice(x) ∧ SurpassedByNewerTechnology(x, y) ∧ NoLongerSupportedByManufacturer(x) → Obsolete(x))"
    },
    {
        "NL": "Employees who work overtime generally receive higher pay.",
        "FOL": "∀x (Employee(x) ∧ WorkOvertime(x) → ReceivesHigherPay(x))"
    },
    {
        "NL": "A bicycle can have a bell or a horn for safety.",
        "FOL": "∀x (Bicycle(x) → (HasBell(x) ⊕ HasHorn(x)))"
    },
    {
        "NL": "To become a doctor, an individual must complete medical school and pass a licensing exam.",
        "FOL": "∀x (Doctor(x) → (CompletedMedicalSchool(x) ∧ PassedLicensingExam(x)))"
    },
    {
        "NL": "An appliance that heats food includes an oven, a microwave, or a toaster.",
        "FOL": "∀x (Appliance(x) ∧ HeatsFood(x) → Oven(x) ∨ Microwave(x) ∨ Toaster(x))"
    },
    {
        "NL": "A vehicle's engine converts fuel into mechanical energy, which powers the vehicle's movement.",
        "FOL": "∀x ∀y ∀z (Vehicle(x) ∧ Engine(y) ∧ Fuel(z) ∧ ConvertsToMechanicalEnergy(y, z) → PowersMovement(x, y))"
    },
    {
        "NL": "Not every bird that can fly is an eagle.",
        "FOL": "¬∀x (Bird(x) ∧ CanFly(x) → Eagle(x))"
    },
    {
        "NL": "A museum can be open to the public or private, but not both.",
        "FOL": "∀x (Museum(x) → (OpenToPublic(x) ⊕ Private(x)))"
    },
    {
        "NL": "A bakery sells cakes and pastries only if they are freshly baked.",
        "FOL": "∀x (Bakery(x) ∧ (Cake(y) ∨ Pastry(y)) ∧ FreshlyBaked(y) → Sells(x, y))"
    },
    {
        "NL": "A person is considered a civil engineer if they design, construct, and maintain infrastructure projects like roads, bridges, and buildings.",
        "FOL": "∀x (Person(x) ∧ DesignsInfrastructureProjects(x) ∧ ConstructsAndMaintainsInfrastructure(x) → CivilEngineer(x))"
    },
    {
        "NL": "Doctors diagnose patients and prescribe medication based on their conditions.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Condition(y, z) → (Diagnoses(x, y) ∧ PrescribesMedication(x, y, z)))"
    },
    {
        "NL": "Every painter who has painted for more than ten years and either organizes art exhibitions or visits museums, but not both, should have either received an artistic accomplishment or be a gallery owner.",
        "FOL": "∀x (Painter(x) ∧ PaintedForMoreThanTenYears(x) ∧ (OrganizesArtExhibitions(x) ⊕ VisitsMuseums(x)) → (ReceivedArtisticAccomplishment(x) ∨ GalleryOwner(x)))"
    },
    {
        "NL": "A healthy diet includes fruits, vegetables, and lean proteins, but avoids excessive sugar and saturated fats.",
        "FOL": "∀x (HealthyDiet(x) ↔ (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesLeanProteins(x) ∧ ¬ExcessiveSugar(x) ∧ ¬SaturatedFats(x)))"
    },
    {
        "NL": "If an individual is an athlete, they either train in a gym or a stadium.",
        "FOL": "∀x (Individual(x) ∧ Athlete(x) → TrainInGym(x) ⊕ TrainInStadium(x))"
    },
    {
        "NL": "In a competition, a winner is awarded a gold medal, the runner-up receives a silver medal, and the third place earns a bronze medal.",
        "FOL": "∀x∀y∀z (Winner(x) → GoldMedal(x)) ∧ (RunnerUp(y) → SilverMedal(y)) ∧ (ThirdPlace(z) → BronzeMedal(z))"
    },
    {
        "NL": "An artwork receives praise if it has a unique design, impressive creativity, and beautiful aesthetics.",
        "FOL": "∀x (Artwork(x) ∧ HasUniqueDesign(x) ∧ HasImpressiveCreativity(x) ∧ HasBeautifulAesthetics(x) → ReceivePraise(x))"
    },
    {
        "NL": "A movie theater screens different genres of films, including action, comedy, and drama, while also offering amenities like comfortable seating, a snack bar, and 3D or IMAX experiences.",
        "FOL": "∀x (MovieTheater(x) ∧ (ActionFilm(x) ∨ ComedyFilm(x) ∨ DramaFilm(x)) → OffersAmenities(x))"
    },
    {
        "NL": "Fish are creatures that have gills and lay eggs in water.",
        "FOL": "∀x (Fish(x) → Creature(x) ∧ HasGills(x) ∧ LaysEggsInWater(x))"
    },
    {
        "NL": "An efficient supply chain ensures timely delivery, minimizes inventory costs, and maintains a high level of product quality.",
        "FOL": "∀x (SupplyChain(x) ∧ TimelyDelivery(x) ∧ MinimizedInventoryCosts(x) ∧ HighProductQuality(x) → Efficient(x))"
    },
    {
        "NL": "A television show is popular if it has high viewership and receives positive reviews.",
        "FOL": "∀x (TelevisionShow(x) ∧ HighViewership(x) ∧ PositiveReviews(x) → Popular(x))"
    },
    {
        "NL": "An antivirus program protects a computer by scanning for malware and removing any detected threats.",
        "FOL": "∀x∀y (AntivirusProgram(x) ∧ Computer(y) ∧ ScansForMalware(x, y) ∧ RemovesDetectedThreats(x, y) → Protects(x, y))"
    },
    {
        "NL": "A school has teachers.",
        "FOL": "∀x ∃y (School(x) ∧ Teacher(y) ∧ WorksAt(y, x))"
    },
    {
        "NL": "If a phone is in the hand, then some messages are either urgent or not important.",
        "FOL": "∃x ∃y (Phone(x) ∧ Hand(y) ∧ In(x, y)) → ∃z (Message(z) ∧ (Urgent(z) ⊕ ¬Important(z)))"
    },
    {
        "NL": "A river flows, carries sediment, and can change its course over time.",
        "FOL": "∀x (River(x) → (Flows(x) ∧ CarriesSediment(x) ∧ CanChangeCourseOverTime(x)))"
    },
    {
        "NL": "An island is surrounded by water.",
        "FOL": "∀x (Island(x) → SurroundedByWater(x))"
    },
    {
        "NL": "In a restaurant, a customer orders food from the menu, the kitchen prepares the meal, and a server delivers the meal to the customer's table.",
        "FOL": "∀x ∀y ∀z (Restaurant(x) ∧ Customer(y) ∧ (OrdersFoodFromMenu(y, x) ∧ KitchenPreparesMeal(x, z) ∧ ServerDeliversMeal(z, y)))"
    },
    {
        "NL": "An object is either a wide circle or a narrow rectangle, and in both scenarios, it is not brown.",
        "FOL": "∃x (((Wide(x) ∧ Circle(x)) ∨ (Narrow(x) ∧ Rectangle(x))) ∧ ¬Brown(x))"
    },
    {
        "NL": "A film is a documentary if it presents factual information about a subject.",
        "FOL": "∀x (Documentary(x) ↔ (Film(x) ∧ PresentsFactualInformation(x)))"
    },
    {
        "NL": "Hospitals treat patients with medical professionals and appropriate equipment.",
        "FOL": "∀x∀y (Hospital(x) ∧ Patient(y) → ∃z∃w (MedicalProfessional(z) ∧ Equipment(w) ∧ TreatsWith(x, y, z, w)))"
    },
    {
        "NL": "A profession can be either a medical profession or an engineering profession.",
        "FOL": "∀x (Profession(x) → MedicalProfession(x) ⊕ EngineeringProfession(x))"
    },
    {
        "NL": "A celestial entity that contracts due to its self-pull and morphs into a compressed body is a white dwarf.",
        "FOL": "∀x (CelestialEntity(x) ∧ ContractsDueToSelfPull(x) ∧ MorphsIntoCompressedBody(x) → WhiteDwarf(x))"
    },
    {
        "NL": "A flower is considered fragrant if it produces a pleasant scent and attracts pollinators.",
        "FOL": "∀x (Flower(x) ∧ Fragrant(x) ↔ (ProducesPleasantScent(x) ∧ AttractsPollinators(x)))"
    },
    {
        "NL": "An item is a musical composition if it is a piece of music consisting of multiple sections with different melodies and harmonies.",
        "FOL": "∀x (Item(x) ∧ Music(x) ∧ MultipleSections(x) ∧ DifferentMelodies(x) ∧ DifferentHarmonies(x) → MusicalComposition(x))"
    },
    {
        "NL": "Lions are carnivorous and hunt at night, while cows are herbivorous and graze during the day.",
        "FOL": "∀x (Lion(x) → (Carnivorous(x) ∧ HuntsAtNight(x))) ∧ ∀y (Cow(y) → (Herbivorous(y) ∧ GrazesDuringDay(y)))"
    },
    {
        "NL": "A camera has a zoom lens, a flash, and image stabilization.",
        "FOL": "∃x (Camera(x) ∧ ZoomLens(x) ∧ Flash(x) ∧ ImageStabilization(x))"
    },
    {
        "NL": "A smartphone is deemed high-quality if it features a long-lasting battery, sharp display, and fast processing speed.",
        "FOL": "∀x (Smartphone(x) ∧ LongLastingBattery(x) ∧ SharpDisplay(x) ∧ FastProcessingSpeed(x) → HighQuality(x))"
    },
    {
        "NL": "Some buildings are tall.",
        "FOL": "∃x (Building(x) ∧ Tall(x))"
    },
    {
        "NL": "Some plants are green and some plants are tall, but there are no tall green plants.",
        "FOL": "∃x (Green(x)) ∧ ∃x (Tall(x)) ∧ ¬∃x (Green(x) ∧ Tall(x))"
    },
    {
        "NL": "A bicycle requires maintenance to keep its gears functioning smoothly and prevent rust.",
        "FOL": "∀x (Bicycle(x) → (MaintainGears(x) ∧ PreventRust(x)))"
    },
    {
        "NL": "Every person who adores music plays an instrument.",
        "FOL": "∀x (Person(x) ∧ AdoreMusic(x) → PlayInstrument(x))"
    },
    {
        "NL": "A book is overdue if its return date has passed.",
        "FOL": "∀x (Book(x) ∧ ReturnDatePassed(x) → Overdue(x))"
    },
    {
        "NL": "A garden has a rich array of plants if it consists of flowers, trees, and grasses of different types.",
        "FOL": "∀x (Garden(x) ∧ ∃y ∃z ∃w (Flower(y) ∧ Tree(z) ∧ Grass(w) ∧ DifferentTypes(y, z, w) ∧ ConsistsOf(x, y, z, w)) → HasRichArrayOfPlants(x))"
    },
    {
        "NL": "If a person is a professional musician, they play at least one musical instrument.",
        "FOL": "∀x (Person(x) ∧ ProfessionalMusician(x) → ∃y (MusicalInstrument(y) ∧ Plays(x, y)))"
    },
    {
        "NL": "In a leap year, February has 29 days instead of 28.",
        "FOL": "∀x (LeapYear(x) → (FebruaryHasDays(x, 29)))"
    },
    {
        "NL": "Libraries store and loan books, allowing patrons to access information and knowledge.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Book(y) ∧ Patron(z) → (Stores(x, y) ∧ Loans(x, y, z) ∧ AccessInformation(z) ∧ AccessKnowledge(z)))"
    },
    {
        "NL": "A student is an honor student if they achieve high grades and participate in extracurricular activities.",
        "FOL": "∀x (Student(x) ∧ HonorStudent(x) ↔ (AchievesHighGrades(x) ∧ ParticipatesInExtracurricularActivities(x)))"
    },
    {
        "NL": "A film can be in color or black and white, and it has a director.",
        "FOL": "∀x (Film(x) → ((Color(x) ⊕ BlackAndWhite(x)) ∧ ∃y Director(x, y)))"
    },
    {
        "NL": "Trees produce oxygen during photosynthesis, and humans consume oxygen while breathing.",
        "FOL": "∀x ∀y (Tree(x) → ProducesOxygenDuringPhotosynthesis(x)) ∧ (Human(y) → ConsumesOxygenWhileBreathing(y))"
    },
    {
        "NL": "A vacation destination with beautiful scenery and affordable accommodations attracts tourists.",
        "FOL": "∀x (VacationDestination(x) ∧ BeautifulScenery(x) ∧ AffordableAccommodations(x) → AttractsTourists(x))"
    },
    {
        "NL": "A disease outbreak can lead to a rise in the number of infections, which in turn can cause an increase in demand for medical resources and a strain on healthcare systems.",
        "FOL": "∀x∀y∀z (DiseaseOutbreak(x) ∧ RiseInInfections(x, y) → (IncreaseInDemand(y, z) ∧ MedicalResources(z) ∧ StrainOnHealthcareSystem(y)))"
    },
    {
        "NL": "Flowers attract pollinators, such as bees and butterflies, by producing nectar and displaying bright colors, which in turn helps the plants reproduce through pollination.",
        "FOL": "∀x∀y (Flower(x) ∧ Pollinator(y) → (ProducesNectar(x) ∧ DisplaysBrightColors(x) ∧ Attracts(x, y) ∧ HelpsPlantReproduce(x)))"
    },
    {
        "NL": "A tree provides shade and shelter to animals if it has a large canopy and dense foliage.",
        "FOL": "∀x∀y (Tree(x) ∧ Animal(y) ∧ LargeCanopy(x) ∧ DenseFoliage(x) → ProvidesShadeAndShelter(x, y))"
    },
    {
        "NL": "A person is friendly if and only if they greet others or compliment people, but not both.",
        "FOL": "∀x (Person(x) → (Friendly(x) ↔ (GreetOthers(x) ⊕ ComplimentPeople(x))))"
    },
    {
        "NL": "If a horse gallops on the field, then some rectangles are either pink or orange.",
        "FOL": "∃x ∃y (Horse(x) ∧ Field(y) ∧ GallopsOn(x, y) → ∃z (Rectangle(z) ∧ (Pink(z) ⊕ Orange(z))))"
    },
    {
        "NL": "A squirrel is eating on a branch, and a rabbit is hopping in the garden.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Branch(y) ∧ EatingOn(x, y)) ∧ ∃z (Rabbit(z) ∧ Hopping(z) ∧ InTheGarden(z))"
    },
    {
        "NL": "A film that is based on a true story, features a historical period, and is produced by a specific studio is typically a historical drama.",
        "FOL": "∀x∀y∀z (Film(x) ∧ BasedOnTrueStory(x) ∧ HistoricalPeriod(y) ∧ Features(x, y) ∧ Studio(z) ∧ ProducedBy(x, z) → HistoricalDrama(x))"
    },
    {
        "NL": "An island is a piece of land completely surrounded by water.",
        "FOL": "∀x (Island(x) → (∃y (Land(x) ∧ Water(y) ∧ CompletelySurrounded(x, y))))"
    },
    {
        "NL": "No books are tedious or boring.",
        "FOL": "∀x (Book(x) ∧ (¬Tedious(x) ∨ ¬Boring(x)))"
    },
    {
        "NL": "Every scientist who is diligent and has a critical thinking ability is notable.",
        "FOL": "∀x (Scientist(x) ∧ IsDiligent(x) ∧ HasCriticalThinkingAbility(x) → Notable(x))"
    },
    {
        "NL": "A successful business generates profit, has satisfied customers, and demonstrates consistent growth.",
        "FOL": "∀x (Business(x) → (GeneratesProfit(x) ∧ SatisfiedCustomers(x) ∧ ConsistentGrowth(x) → Successful(x)))"
    },
    {
        "NL": "A student graduates from a university after completing their degree program.",
        "FOL": "∀x∀y (Student(x) ∧ University(y) ∧ CompletesDegreeProgram(x, y) → Graduates(x, y))"
    },
    {
        "NL": "Mammals have hair or fur on their bodies.",
        "FOL": "∀x (Mammal(x) → (HasHair(x) ∨ HasFur(x)))"
    },
    {
        "NL": "A laptop is high-end if and only if it has a powerful processor or high memory capacity.",
        "FOL": "∀x (Laptop(x) → (HighEnd(x) ↔ (PowerfulProcessor(x) ∨ HighMemoryCapacity(x))))"
    },
    {
        "NL": "A dessert is delicious if it's sweet but not overly sweet and has a pleasant texture.",
        "FOL": "DeliciousDessert(x) ↔ (Sweet(x) ∧ ¬OverlySweet(x) ∧ PleasantTexture(x))"
    },
    {
        "NL": "Not all stars are bright and twinkle.",
        "FOL": "¬∀x (Star(x) → (Bright(x) ∧ Twinkle(x)))"
    },
    {
        "NL": "Some planets have life.",
        "FOL": "∃x (Planet(x) ∧ HasLife(x))"
    },
    {
        "NL": "A narrative can be a dystopian tale, emitting a sense of despair, and contain a tragic outcome, or it can be a love story, elucidating passionate emotions, and get rave reviews.",
        "FOL": "∀x (Narrative(x) → ((Dystopian(x) ∧ SenseOfDespair(x) ∧ TragicOutcome(x)) ⊕ (LoveStory(x) ∧ PassionateEmotions(x) ∧ RaveReviews(x))))"
    },
    {
        "NL": "Regular dental checkups help detect cavities early.",
        "FOL": "∀x (RegularDentalCheckup(x) → HelpsDetectCavitiesEarly(x))"
    },
    {
        "NL": "A garden flourishes when it has a variety of plants, adequate sunlight, and consistent watering.",
        "FOL": "∀x ∀y ∀z (Garden(x) ∧ VarietyOfPlants(x, y) ∧ AdequateSunlight(x, z) ∧ ConsistentWatering(x) → Flourishes(x))"
    },
    {
        "NL": "A vehicle is self-driving if it uses sensors, algorithms, and actuators to navigate and control its movements without human intervention.",
        "FOL": "∀x (Vehicle(x) ∧ UsesSensors(x) ∧ UsesAlgorithms(x) ∧ UsesActuators(x) ∧ NoHumanIntervention(x) → SelfDriving(x))"
    },
    {
        "NL": "If a person is an interpreter, they facilitate communication between speakers of different languages.",
        "FOL": "∀x (Interpreter(x) → FacilitatesCommunicationBetweenLanguages(x))"
    },
    {
        "NL": "A fruit is considered ripe when it is soft, sweet, and has a pleasant aroma.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ↔ (Soft(x) ∧ Sweet(x) ∧ PleasantAroma(x))))"
    },
    {
        "NL": "If a person is a dentist, they must diagnose and treat dental issues and provide oral care.",
        "FOL": "∀x (Dentist(x) → (DiagnosesDentalIssues(x) ∧ TreatsDentalIssues(x) ∧ ProvidesOralCare(x)))"
    },
    {
        "NL": "A bicycle is suitable for off-road cycling if it has sturdy tires and a durable frame.",
        "FOL": "∀x (Bicycle(x) → (SuitableForOffRoadCycling(x) ↔ (HasSturdyTires(x) ∧ DurableFrame(x))))"
    },
    {
        "NL": "A password is valid only if it contains uppercase letters, lowercase letters, and numbers.",
        "FOL": "∀x∀y∀z∀w (Password(x) ∧ Uppercase(y) ∧ Lowercase(z) ∧ Number(w) → (Valid(x) ↔ (Contains(x, y) ∧ Contains(x, z) ∧ Contains(x, w))))"
    },
    {
        "NL": "A material is waterproof if it prevents water from passing through and can withstand being submerged in water.",
        "FOL": "∀x (Material(x) ∧ PreventsWaterPassage(x) ∧ WithstandsSubmersion(x) → Waterproof(x))"
    },
    {
        "NL": "An object is a chair if it has four legs, a seat, and a backrest.",
        "FOL": "∀x (Chair(x) ↔ (Object(x) ∧ HasFourLegs(x) ∧ HasSeat(x) ∧ HasBackrest(x)))"
    },
    {
        "NL": "No largest star exists, and no tiniest star exists.",
        "FOL": "∀x (Star(x) → (∃y (Star(y) ∧ Bigger(y, x)) ∧ ∃z (Star(z) ∧ Smaller(z, x))))"
    },
    {
        "NL": "An entity is either a heavy rock or a light feather, and in both scenarios, it is gray.",
        "FOL": "∃x (((Heavy(x) ∧ Rock(x)) ∨ (Light(x) ∧ Feather(x))) ∧ Gray(x))"
    },
    {
        "NL": "Every employee attended at least one meeting.",
        "FOL": "∀x (Employee(x) → ∃y (Meeting(y) ∧ Attended(x, y)))"
    },
    {
        "NL": "An animal is either a herbivore or a carnivore, but not both.",
        "FOL": "∀x (Animal(x) → (Herbivore(x) ⊕ Carnivore(x)))"
    },
    {
        "NL": "If a book is a novel, it either belongs to the genre of fantasy or mystery.",
        "FOL": "∀x (Book(x) ∧ Novel(x) → FantasyGenre(x) ⊕ MysteryGenre(x))"
    },
    {
        "NL": "Maria and Claire love all humans.",
        "FOL": "∀x (Human(x) → Love(maria, x) ∧ Love(claire, x))"
    },
    {
        "NL": "A refrigerator keeps food cold, has a door, and runs on electricity, while a gas stove cooks food, has burners, and runs on gas.",
        "FOL": "∀x ∀y (Refrigerator(x) ∧ GasStove(y) → ((KeepsFoodCold(x) ∧ HasDoor(x) ∧ RunsOnElectricity(x)) ∧ (CooksFood(y) ∧ HasBurners(y) ∧ RunsOnGas(y))))"
    },
    {
        "NL": "Some doctors are writers.",
        "FOL": "∃x (Doctor(x) ∧ Writer(x))"
    },
    {
        "NL": "A journalist writes an article about an event if the event is newsworthy and they are assigned to it.",
        "FOL": "∀x∀y∀z (Journalist(x) ∧ Event(y) ∧ Article(z) ∧ Newsworthy(y) ∧ AssignedTo(x, y) → Write(x, z))"
    },
    {
        "NL": "A player is professional if and only if they play football or basketball, but not both.",
        "FOL": "∀x (Player(x) → (Professional(x) ↔ (PlayFootball(x) ⊕ PlayBasketball(x))))"
    },
    {
        "NL": "A song is a lullaby or a ballad.",
        "FOL": "∀x (Song(x) → (Lullaby(x) ∨ Ballad(x)))"
    },
    {
        "NL": "A plant needs sunlight, water, and nutrients from the soil to grow and thrive.",
        "FOL": "∀x (Plant(x) → NeedsSunlight(x) ∧ NeedsWater(x) ∧ NeedsSoilNutrients(x))"
    },
    {
        "NL": "A hobby is fulfilling if it promotes creativity or fosters social connections.",
        "FOL": "∀x (Hobby(x) ∧ (PromotesCreativity(x) ∨ FostersSocialConnections(x)) → Fulfilling(x))"
    },
    {
        "NL": "A girl is dancing with a ribbon in the studio.",
        "FOL": "∃x ∃y ∃z (Girl(x) ∧ Ribbon(y) ∧ Studio(z) ∧ DancingWith(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A structure is safe to enter if it is stable, free from hazardous materials, and not in a dangerous location.",
        "FOL": "∀x (Structure(x) ∧ Stable(x) ∧ ¬HazardousMaterials(x) ∧ ¬DangerousLocation(x) → SafeToEnter(x))"
    },
    {
        "NL": "A smartphone has multiple functions, including making calls, sending texts, and browsing the internet, while also featuring a high-resolution camera for photography and video recording.",
        "FOL": "∀x (Smartphone(x) ∧ (Calls(x) ∧ Texts(x) ∧ InternetBrowsing(x)) → HighResolutionCamera(x))"
    },
    {
        "NL": "An umbrella shields from rain and a hat protects from sun.",
        "FOL": "∀x∀y (Umbrella(x) ∧ Hat(y) → (ShieldsFromRain(x) ∧ ProtectsFromSun(y)))"
    },
    {
        "NL": "A dog is playing in the park.",
        "FOL": "∃x (Dog(x) ∧ Playing(x) ∧ InThePark(x))"
    },
    {
        "NL": "A microwave heats food through electromagnetic radiation.",
        "FOL": "∀x (Microwave(x) → HeatsFood(x) ∧ UsesElectromagneticRadiation(x))"
    },
    {
        "NL": "Ovens cook food by heating it to a specific temperature.",
        "FOL": "∀x (Oven(x) → (HeatFood(y) ∧ SpecificTemperature(z) ∧ CookFood(x, y, z)))"
    },
    {
        "NL": "An oven bakes bread by warming it gently.",
        "FOL": "∀x ∀y (Oven(x) ∧ Bread(y) ∧ WarmsGently(x, y) → Bake(x, y))"
    },
    {
        "NL": "It's incorrect that all musicians who play the guitar are rockstars, and no such musician can play the piano.",
        "FOL": "¬∀x (Musician(x) ∧ PlaysGuitar(x) → Rockstar(x)) ∧ ¬∃y (Musician(y) ∧ PlaysGuitar(y) ∧ CanPlayPiano(y))"
    },
    {
        "NL": "A carnivorous plant obtains nutrients primarily by trapping and consuming insects or other small animals.",
        "FOL": "∀x (CarnivorousPlant(x) → (ObtainsNutrientsByTrapping(x) ∧ ConsumesInsectsOrSmallAnimals(x)))"
    },
    {
        "NL": "Regular exercise and a nutritious diet promote a healthy lifestyle, reducing the risk of chronic diseases.",
        "FOL": "∀x∀y (RegularExercise(x) ∧ NutritiousDiet(y) → PromotesHealthyLifestyle(x, y) ∧ ReducesRiskOfChronicDiseases(x, y))"
    },
    {
        "NL": "A tool is deemed a hammer if it drives nails and has a handle.",
        "FOL": "∀x (Tool(x) ∧ DrivesNails(x) ∧ HasHandle(x) → Hammer(x))"
    },
    {
        "NL": "A device is portable when its size and weight allow for easy transportation.",
        "FOL": "∀x (Device(x) ∧ (SmallSize(x) ∧ LightWeight(x)) → Portable(x))"
    },
    {
        "NL": "Every mango is sweet, but not every sweet thing is a mango.",
        "FOL": "∀x (Mango(x) → Sweet(x)) ∧ ¬∀x (Sweet(x) → Mango(x))"
    },
    {
        "NL": "A machine that can cut, shape, and assemble materials is a versatile machine.",
        "FOL": "∀x∀y∀z (Machine(x) ∧ CanCut(x, y) ∧ CanShape(x, y) ∧ CanAssemble(x, z) → VersatileMachine(x))"
    },
    {
        "NL": "No cylinder directs to all large rhombi.",
        "FOL": "¬∃x (Cylinder(x) ∧ ∀y (Large(y) ∧ Rhombus(y) → DirectsTo(x, y)))"
    },
    {
        "NL": "A farmer grows crops in a field and harvests them.",
        "FOL": "∀x ∀y (Farmer(x) ∧ Crop(y) → (GrowsIn(x, y, Field) ∧ Harvests(x, y)))"
    },
    {
        "NL": "A rose is a flowering plant with fragrant blooms and thorns, a lily is a flowering plant with large, trumpet-shaped flowers, and an orchid is a flowering plant with exotic, intricate blooms.",
        "FOL": "∀x ∀y ∀z (Rose(x) → (FloweringPlant(x) ∧ FragrantBlooms(x) ∧ HasThorns(x))) ∧ (Lily(y) → (FloweringPlant(y) ∧ LargeTrumpetShapedFlowers(y))) ∧ (Orchid(z) → (FloweringPlant(z) ∧ ExoticIntricateBlooms(z)))"
    },
    {
        "NL": "A car is either old and a sedan or new and a convertible, however, neither can be blue.",
        "FOL": "∃x (((Old(x) ∧ Sedan(x)) ∨ (New(x) ∧ Convertible(x))) ∧ ¬Blue(x))"
    },
    {
        "NL": "A building is eco-friendly if it utilizes solar panels or recycles waste.",
        "FOL": "∀x (Building(x) → (EcoFriendly(x) ↔ (UtilizesSolarPanels(x) ∨ RecyclesWaste(x))))"
    },
    {
        "NL": "A chef cooks a meal using ingredients.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Ingredient(z) → CooksUsing(x, y, z))"
    },
    {
        "NL": "A cat catches a mouse and is fed by an owner.",
        "FOL": "∀x∀y∀z (Cat(x) ∧ Mouse(y) ∧ Owner(z) → Catches(x, y) ∧ FedBy(x, z))"
    },
    {
        "NL": "There is no scientist who has experimented on all substances.",
        "FOL": "¬∃x (Scientist(x) ∧ ∀y (Substance(y) → Experimented(x, y)))"
    },
    {
        "NL": "A film receives a mature rating if it contains explicit language, graphic violence, or adult content.",
        "FOL": "∀x (Film(x) ∧ (ExplicitLanguage(x) ∨ GraphicViolence(x) ∨ AdultContent(x)) → MatureRating(x))"
    },
    {
        "NL": "It is not true that something is a small rectangle only if it is yellow.",
        "FOL": "¬∀x (Small(x) ∧ Rectangle(x) → Yellow(x))"
    },
    {
        "NL": "Cats are domesticated animals that can be kept as pets, groomed, and fed.",
        "FOL": "∀x (Cat(x) → (DomesticatedAnimal(x) ∧ ∃y (Pet(y) ∧ KeptAs(x, y) ∧ Groomed(x) ∧ Fed(x))))"
    },
    {
        "NL": "A productive meeting has a clear agenda, encourages open communication, and results in actionable items.",
        "FOL": "Productive(Meeting) ↔ ClearAgenda(Meeting) ∧ OpenCommunication(Meeting) ∧ ActionableItems(Meeting)"
    },
    {
        "NL": "Every entity that is a novel or a poem refers to a character that is either tragic or comedic.",
        "FOL": "∀x ((Entity(x) ∧ Novel(x)) ∨ (Entity(x) ∧ Poem(x)) → ∃y ((Tragic(y) ∨ Comedic(y)) ∧ RefersTo(x, y)))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the sun and the earth, casting a shadow on the earth's surface.",
        "FOL": "∃x∃y∃z (SolarEclipse(x) ↔ (Moon(y) ∧ Sun(z) ∧ PassesBetween(y, z, x) ∧ CastsShadowOnEarth(y, x)))"
    },
    {
        "NL": "If a liquid is boiling, its temperature is above 100 degrees Celsius.",
        "FOL": "∀x (Liquid(x) ∧ Boiling(x) → TemperatureAbove(x, 100))"
    },
    {
        "NL": "A plant x is a cactus if it is a succulent plant that typically grows in dry environments and has thick, fleshy stems for water storage.",
        "FOL": "∀x (Plant(x) ∧ Succulent(x) ∧ GrowsInDryEnvironments(x) ∧ ThickFleshyStems(x) → Cactus(x))"
    },
    {
        "NL": "A phone rings if it receives a call, is not in silent mode, and has battery life remaining.",
        "FOL": "∀x (Phone(x) → (ReceivesCall(x) ∧ ¬SilentMode(x) ∧ HasBatteryLife(x) → Rings(x)))"
    },
    {
        "NL": "A lever can amplify force by using a fulcrum to create a mechanical advantage.",
        "FOL": "∀x (Lever(x) ∧ UsesFulcrum(x) → AmplifiesForce(x))"
    },
    {
        "NL": "A person is a professional musician if they play a musical instrument and earn money from their performances.",
        "FOL": "∀x (Person(x) ∧ PlaysMusicalInstrument(x) ∧ EarnsMoneyFromPerformances(x) → ProfessionalMusician(x))"
    },
    {
        "NL": "A human has two eyes, but a spider has eight eyes, while a Moth does not have eyes.",
        "FOL": "∀x (Human(x) → HasTwoEyes(x)) ∧ ∀y (Spider(y) → HasEightEyes(y)) ∧ ∀z (Moth(z) → ¬HasEyes(z))"
    },
    {
        "NL": "A trip is considered adventurous if it includes activities such as hiking, camping, or exploring new destinations.",
        "FOL": "∀x (Trip(x) ∧ Adventurous(x) ↔ (Hiking(x) ∨ Camping(x) ∨ ExploringNewDestinations(x)))"
    },
    {
        "NL": "A track that is a pop song make people dance.",
        "FOL": "∀x ∀y (Track(x) ∧ PopSong(x) ∧ Person(y) → CanMakeDance(x, y))"
    },
    {
        "NL": "A bird can migrate long distances if it has strong wings and sufficient energy reserves.",
        "FOL": "∀x ∀y (Bird(x) ∧ StrongWings(x) ∧ SufficientEnergyReserves(y, x) → CanMigrateLongDistances(x, y))"
    },
    {
        "NL": "Any pentagon is not brown and doesn't reference any pink object.",
        "FOL": "∀x (Pentagon(x) → (¬Brown(x) ∧ ¬∃y (Pink(y) ∧ References(x, y))))"
    },
    {
        "NL": "Firefighters extinguish fires and rescue people.",
        "FOL": "∀x∀y∀z (Firefighter(x) ∧ Fire(y) ∧ Person(z) → (Extinguishes(x, y) ∧ Rescues(x, z)))"
    },
    {
        "NL": "A smartphone is a top seller if it has a powerful processor, long battery life, and an excellent camera.",
        "FOL": "∀x (Smartphone(x) ∧ TopSeller(x) ↔ (PowerfulProcessor(x) ∧ LongBatteryLife(x) ∧ ExcellentCamera(x)))"
    },
    {
        "NL": "Roses are red and violets are blue.",
        "FOL": "∀x ∀y (Rose(x) ∧ Violet(y) → (Red(x) ∧ Blue(y)))"
    },
    {
        "NL": "A car is a hybrid if it uses both a gasoline engine and an electric motor.",
        "FOL": "∀x (Car(x) ∧ HasGasolineEngine(x) ∧ HasElectricMotor(x) → Hybrid(x))"
    },
    {
        "NL": "Strong communities are built on trust, open communication, and a shared commitment to the common good.",
        "FOL": "∀x (Community(x) ∧ Trust(x) ∧ OpenCommunication(x) ∧ SharedCommitmentToCommonGood(x) → Strong(x))"
    },
    {
        "NL": "Not every musician is either a violinist or a pianist.",
        "FOL": "¬∀x (Musician(x) → (Violinist(x) ∨ Pianist(x)))"
    },
    {
        "NL": "Pollinators, such as bees and butterflies, transfer pollen between flowers, facilitating plant reproduction.",
        "FOL": "∀x∀y (Pollinator(x) ∧ (Bee(x) ∨ Butterfly(x)) → (TransfersPollenBetweenFlowers(x, y) ∧ FacilitatesPlantReproduction(x, y)))"
    },
    {
        "NL": "A dessert is sweet but can be healthy if it contains fruit and no added sugar.",
        "FOL": "∀x (Dessert(x) ∧ Sweet(x) ∧ ContainsFruit(x) ∧ ¬AddedSugar(x) → Healthy(x))"
    },
    {
        "NL": "A pen writes with ink, whereas a pencil does not write with ink but uses graphite.",
        "FOL": "∀x ∀y (Pen(x) ∧ Pencil(y) → (WritesWithInk(x) ∧ ¬WritesWithInk(y) ∧ UsesGraphite(y)))"
    },
    {
        "NL": "A plant that grows in an arid environment, has shallow roots, and stores water in its leaves or stem is a succulent or a cactus.",
        "FOL": "∀x (Plant(x) ∧ GrowsInAridEnvironment(x) ∧ ShallowRoots(x) ∧ StoresWaterInLeavesOrStem(x) → (Succulent(x) ∨ Cactus(x)))"
    },
    {
        "NL": "If an animal is a mammal, it has hair or fur.",
        "FOL": "∀x (Mammal(x) → (Hair(x) ∨ Fur(x)))"
    },
    {
        "NL": "Some dogs are also hunters.",
        "FOL": "∃x (Dog(x) ∧ Hunter(x))"
    },
    {
        "NL": "A creature that feeds on plants, resides in the jungle, and roars is a lion.",
        "FOL": "∀x (Creature(x) ∧ FeedsOnPlants(x) ∧ ResidesInJungle(x) ∧ Roars(x) → Lion(x))"
    },
    {
        "NL": "A fire extinguisher can suppress flames by removing heat, fuel, or oxygen.",
        "FOL": "∀x (FireExtinguisher(x) → SuppressesFlamesByRemovingHeatFuelOrOxygen(x))"
    },
    {
        "NL": "Mathematicians solve problems by applying theorems or creating new mathematical models.",
        "FOL": "∀x∀y (Mathematician(x) ∧ Problem(y) → (AppliesTheorem(x, y) ∨ CreatesMathematicalModel(x, y)))"
    },
    {
        "NL": "A volcano erupts, releasing lava, ash, and gases.",
        "FOL": "∀x (Volcano(x) → (ReleasesLava(x) ∧ ReleasesAsh(x) ∧ ReleasesGases(x)))"
    },
    {
        "NL": "A technology company invents, designs, and builds devices targeting various technological needs and advancements.",
        "FOL": "∀x ∃y ∃z ∃w (TechCompany(x) → Device(y) ∧ TechnologicalNeed(z) ∧ TechnologicalAdvancement(w) ∧ Invents(x, y) ∧ Designs(x, y) ∧ Builds(x, y) ∧ Targets(x, z) ∧ Targets(x, w))"
    },
    {
        "NL": "Plants that receive proper care, including pruning and pest control, are more likely to thrive and produce higher yields.",
        "FOL": "∀x (Plant(x) ∧ ReceivesProperCareIncludingPruningAndPestControl(x) → (Thrives(x) ∧ ProducesHigherYields(x)))"
    },
    {
        "NL": "A pond has aquatic plants.",
        "FOL": "∀x ∃y (Pond(x) ∧ AquaticPlant(y) ∧ GrowsIn(y, x))"
    },
    {
        "NL": "Any teacher who has taught for over twenty years and either writes books or attends educational seminars, but not both, must have either received an educational award or be a principal of a school.",
        "FOL": "∀x (Teacher(x) ∧ TaughtForOverTwentyYears(x) ∧ (WritesBooks(x) ⊕ AttendsEducationalSeminars(x)) → (ReceivedEducationalAward(x) ∨ PrincipalOfSchool(x)))"
    },
    {
        "NL": "A pizza has a thin crust if it is made with a small amount of dough and not thick dough.",
        "FOL": "∀x (Pizza(x) ∧ SmallAmountOfDough(x) ∧ ¬ThickDough(x) → ThinCrust(x))"
    },
    {
        "NL": "A restaurant is popular if it serves tasty food and has a friendly atmosphere.",
        "FOL": "∀x (Restaurant(x) ∧ Popular(x) → (TastyFood(x) ∧ FriendlyAtmosphere(x)))"
    },
    {
        "NL": "Some people are either vegetarian or vegan, but not both.",
        "FOL": "∃x (Person(x) ∧ (Vegetarian(x) ⊕ Vegan(x)))"
    },
    {
        "NL": "In a race, a participant finishes first if they outrun all the other participants, and finishes last if all the other participants outrun them.",
        "FOL": "∀x∀y (Participant(x) ∧ Race(y) ∧ OutrunAll(x, y) → FirstPlace(x, y)) ∧ (Participant(x) ∧ Race(y) ∧ OutrunByAll(x, y) → LastPlace(x, y))"
    },
    {
        "NL": "An equation is linear if its highest power of the variable is one, and quadratic if it is two.",
        "FOL": "∀x (Equation(x) → ((Linear(x) ∧ HighestPower(x, 1)) ∨ (Quadratic(x) ∧ HighestPower(x, 2))))"
    },
    {
        "NL": "A beaver builds a dam across a stream, creating a pond for its habitat and altering the surrounding ecosystem.",
        "FOL": "∀x (Beaver(x) → (BuildsDam(x) ∧ CreatesPond(x) ∧ AltersEcosystem(x)))"
    },
    {
        "NL": "When a natural disaster occurs, it causes damage to property, loss of life, or disruption of essential services.",
        "FOL": "∀x (NaturalDisaster(x) ∧ Occurs(x) → (CausesPropertyDamage(x) ∨ CausesLossOfLife(x) ∨ DisruptsEssentialServices(x)))"
    },
    {
        "NL": "A bird can fly if it doesn't have broken wings.",
        "FOL": "∀x (Bird(x) ∧ ¬BrokenWings(x) → CanFly(x))"
    },
    {
        "NL": "A plant is classified as a cactus if it is a succulent, has a thick, fleshy stem, and grows in arid environments.",
        "FOL": "∀x (Plant(x) ∧ Succulent(x) ∧ ThickFleshyStem(x) ∧ GrowsInAridEnvironments(x) → Cactus(x))"
    },
    {
        "NL": "If Alex is a chef then Emma is a waiter.",
        "FOL": "Chef(alex) → Waiter(emma)"
    },
    {
        "NL": "Every woman is beautiful.",
        "FOL": "∀x (Woman(x) → Beautiful(x))"
    },
    {
        "NL": "A garden flourishes when it receives sufficient sunlight and is watered regularly.",
        "FOL": "∀x (Garden(x) → (SufficientSunlight(x) ∧ RegularWatering(x) → Flourish(x)))"
    },
    {
        "NL": "A hummingbird is a small bird known for its ability to hover in place and fly in all directions, using its rapidly beating wings to generate lift and thrust.",
        "FOL": "∀x∀y∀z (Hummingbird(x) → (SmallBird(x) ∧ AbilityToHoverInPlace(x) ∧ FlyInAllDirections(x, y) ∧ UsesRapidlyBeatingWings(x, z) ∧ GeneratesLiftAndThrust(z)))"
    },
    {
        "NL": "An email is sent from one user to another if the sender's account is linked to the recipient's account and the message is transmitted.",
        "FOL": "∀x∀y∀z (Email(z) ∧ User(x) ∧ User(y) → (SentFromTo(z, x, y) ↔ (LinkedAccounts(x, y) ∧ Transmitted(z))))"
    },
    {
        "NL": "A balanced diet consists of a variety of foods from different food groups, including fruits, vegetables, grains, proteins, and dairy products, to ensure adequate nutrient intake.",
        "FOL": "∀x (BalancedDiet(x) → (∃y∃z (Fruits(y) ∧ Vegetables(z) ∧ Grains(w) ∧ Proteins(v) ∧ DairyProducts(u)) ∧ EnsuresAdequateNutrientIntake(x, y, z, w, v, u)))"
    },
    {
        "NL": "A device is waterproof if it can resist both water and humidity.",
        "FOL": "∀x (Device(x) ∧ ResistWater(x) ∧ ResistHumidity(x) → Waterproof(x))"
    },
    {
        "NL": "No living organisms are artificial objects.",
        "FOL": "∀x (LivingOrganism(x) → ¬ArtificialObject(x))"
    },
    {
        "NL": "A strong password contains a combination of uppercase letters, lowercase letters, numbers, and symbols.",
        "FOL": "∀x (StrongPassword(x) ↔ (ContainsUppercaseLetters(x) ∧ ContainsLowercaseLetters(x) ∧ ContainsNumbers(x) ∧ ContainsSymbols(x)))"
    },
    {
        "NL": "Birds migrate to warmer regions during winter.",
        "FOL": "∀x ∀y (Bird(x) ∧ Winter(y) → MigratesToWarmerRegions(x, y))"
    },
    {
        "NL": "Teachers educate students in various subjects to help them acquire knowledge and skills.",
        "FOL": "∀x∀y∀z (Teacher(x) ∧ Student(y) ∧ Subject(z) → (EducatesIn(x, y, z) ∧ Acquires(y, Knowledge) ∧ Acquires(y, Skills)))"
    },
    {
        "NL": "A girl is drawing a picture in the art room during the class.",
        "FOL": "∃x ∃y ∃z ∃w (Girl(x) ∧ Picture(y) ∧ ArtRoom(z) ∧ DrawingIn(x, y, z) ∧ Class(w))"
    },
    {
        "NL": "There are no doctors who neither know how to operate nor to prescribe.",
        "FOL": "¬∃x (Doctor(x) ∧ ¬CanOperate(x) ∧ ¬CanPrescribe(x))"
    },
    {
        "NL": "A soup is tasty if it has chicken or noodles and is piping hot.",
        "FOL": "∀x (Soup(x) ∧ (ContainsChicken(x) ∨ ContainsNoodles(x)) ∧ PipingHot(x) → Tasty(x))"
    },
    {
        "NL": "A fruit that's red and has seeds on the outside is a strawberry, but if it's yellow and has a thick skin, it's a banana and not an apple.",
        "FOL": "∀x (Fruit(x) ∧ Red(x) ∧ SeedsOutside(x) → (Strawberry(x) ∧ (Yellow(x) ∧ ThickSkin(x) → (Banana(x) ∧ ¬Apple(x)))))"
    },
    {
        "NL": "A renewable energy source is efficient when it has low environmental impact, high energy output, and is cost-effective.",
        "FOL": "∀x ∀y ∀z (RenewableEnergySource(x) ∧ LowEnvironmentalImpact(x, y) ∧ HighEnergyOutput(x, z) ∧ CostEffective(x) → Efficient(x))"
    },
    {
        "NL": "A cave is a natural underground space large enough for a human to enter, often formed by the dissolution of limestone or other soluble rocks.",
        "FOL": "∀x (Cave(x) → (NaturalUndergroundSpace(x) ∧ LargeEnoughForHuman(x) ∧ OftenFormedByDissolutionOfRocks(x)))"
    },
    {
        "NL": "There is a coach who motivates all and only the players who do not motivate themselves.",
        "FOL": "∃x (Coach(x) ∧ ∀y (Player(y) → (Motivate(x, y) ↔ ¬Motivate(y, y))))"
    },
    {
        "NL": "A bicycle moves forward when the rider pedals and steers.",
        "FOL": "∀x∀y (Bicycle(x) ∧ Rider(y) ∧ Pedals(y, x) ∧ Steers(y, x) → MovesForward(x))"
    },
    {
        "NL": "A student passes a course if they attend at least 75% of the classes, complete assignments on time, and score above a specific threshold.",
        "FOL": "∀x∀y (Student(x) ∧ Course(y) → (Passes(x, y) ↔ (AttendsEnoughClasses(x, y) ∧ CompletesAssignmentsOnTime(x, y) ∧ ScoresAboveThreshold(x, y))))"
    },
    {
        "NL": "It's not accurate that all lions that can roar loud are kings, and no such lion can survive in the desert.",
        "FOL": "¬∀x (Lion(x) ∧ CanRoarLoud(x) → King(x)) ∧ ¬∃y (Lion(y) ∧ CanRoarLoud(y) ∧ CanSurviveInDesert(y))"
    },
    {
        "NL": "A doctor heals patients, while a teacher educates students.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Teacher(y) → (∃z (Patient(z) ∧ Heals(x, z)) ∧ ∃w (Student(w) ∧ Educates(y, w))))"
    },
    {
        "NL": "Beverages can be hot, cold, or room temperature.",
        "FOL": "∀x (Beverage(x) → (Hot(x) ∨ Cold(x) ∨ RoomTemperature(x)))"
    },
    {
        "NL": "A laptop and a desktop are both types of computers, but a laptop is portable while a desktop is not.",
        "FOL": "∀x ∀y (Laptop(x) ∧ Desktop(y) → (Computer(x) ∧ Computer(y) ∧ Portable(x) ∧ ¬Portable(y)))"
    },
    {
        "NL": "Insects have six legs and three body segments, while spiders have eight legs and two body segments.",
        "FOL": "∀x (Insect(x) → (SixLegs(x) ∧ ThreeBodySegments(x))) ∧ ∀y (Spider(y) → (EightLegs(y) ∧ TwoBodySegments(y)))"
    },
    {
        "NL": "Any orange entity is glossy only if it is a pyramid.",
        "FOL": "∀x (Orange(x) → (Glossy(x) → Pyramid(x)))"
    },
    {
        "NL": "A room in a building that is designed for cooking and food preparation is called a kitchen.",
        "FOL": "∀x∀y (Room(x) ∧ InBuilding(x, y) ∧ DesignedForCookingAndFoodPreparation(x) → Kitchen(x))"
    },
    {
        "NL": "Chefs prepare meals, waiters serve meals, and customers enjoy meals at a restaurant.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Waiter(y) ∧ Customer(z) → (PreparesMeals(x) ∧ ServesMeals(y, z) ∧ EnjoysMeals(z)))"
    },
    {
        "NL": "A photographer is taking photos in the forest, or a musician is composing a song in the studio.",
        "FOL": "∃x ∃y (Photographer(x) ∧ Photos(y) ∧ Taking(x, y) ∧ InTheForest(x)) ∨ ∃z ∃w (Musician(z) ∧ Song(w) ∧ Composing(z, w) ∧ InTheStudio(z))"
    },
    {
        "NL": "A dessert is popular in a country if it is sweet, made from local ingredients, and not restricted by cultural or religious beliefs.",
        "FOL": "∀x ∀y (Dessert(x) ∧ Country(y) ∧ Sweet(x) ∧ LocalIngredients(x, y) ∧ ¬Restricted(x, y) → PopularIn(x, y))"
    },
    {
        "NL": "A planet is habitable if it has the necessary conditions to support the existence of liquid water and the potential for life.",
        "FOL": "∀x (Planet(x) ∧ SupportsLiquidWater(x) ∧ PotentialForLife(x) → Habitable(x))"
    },
    {
        "NL": "Electricity powers electronic devices.",
        "FOL": "∀x ∀y (Electricity(x) ∧ ElectronicDevice(y) → Powers(x, y))"
    },
    {
        "NL": "Any engineer who has designed for over three projects and either documents solutions or overtime, but not both, must have either achieved a promotion or be a project manager.",
        "FOL": "∀x (Engineer(x) ∧ DesignedForOverThreeProjects(x) ∧ (DocumentsSolutions(x) ⊕ Overtime(x)) → (AchievedPromotion(x) ∨ ProjectManager(x)))"
    },
    {
        "NL": "A cat chases a mouse, while a dog chases a ball.",
        "FOL": "∀x (Cat(x) → ChasesMouse(x)) ∧ ∀y (Dog(y) → ChasesBall(y))"
    },
    {
        "NL": "A person is an athlete if they participate in sports or other physical activities competitively.",
        "FOL": "∀x (Person(x) ∧ Athlete(x) ↔ ParticipatesInSportsOrPhysicalActivitiesCompetitively(x))"
    },
    {
        "NL": "There are books which are both enlightening and have a historical context, and all the others are suspenseful with a futuristic setting.",
        "FOL": "∀x (Book(x) → (Enlightening(x) ∧ HistoricalContext(x)) ⊕ (Suspenseful(x) ∧ FuturisticSetting(x)))"
    },
    {
        "NL": "A vehicle that is designed for off-road use, has four-wheel drive, and is equipped with rugged tires is an off-road vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForOffRoadUse(x) ∧ HasFourWheelDrive(x) ∧ EquippedWithRuggedTires(x) → OffRoadVehicle(x))"
    },
    {
        "NL": "An athlete competes in a sport and follows a training routine.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Sport(y) → (CompetesIn(x, y) ∧ FollowsTrainingRoutine(x)))"
    },
    {
        "NL": "Chefs cook delicious meals.",
        "FOL": "∀x ∀y (Chef(x) ∧ DeliciousMeal(y) → Cook(x, y))"
    },
    {
        "NL": "A device is energy-efficient if it consumes low amounts of electricity and has a high performance-to-power ratio.",
        "FOL": "∀x (Device(x) ∧ LowElectricityConsumption(x) ∧ HighPerformanceToPowerRatio(x) → EnergyEfficient(x))"
    },
    {
        "NL": "A package is considered fragile if it contains breakable items, such as glass or ceramics, and requires careful handling.",
        "FOL": "∀x (Package(x) ∧ (ContainsGlass(x) ∨ ContainsCeramics(x)) ∧ RequiresCarefulHandling(x) → Fragile(x))"
    },
    {
        "NL": "A vaccine stimulates the immune system to produce an immune response, protecting against a specific pathogen.",
        "FOL": "∀x∀y (Vaccine(x) ∧ Pathogen(y) → (StimulatesImmuneSystem(x) ∧ ProducesImmuneResponse(x) ∧ ProtectsAgainstPathogen(x, y)))"
    },
    {
        "NL": "A user must sign in with a valid username and password, or they can use a social media account to access a website.",
        "FOL": "∀x (User(x) → (ValidUsernameAndPassword(x) ∨ UsesSocialMediaAccount(x)))"
    },
    {
        "NL": "A volcano is dormant if it has not erupted for an extended period of time.",
        "FOL": "∀x (Volcano(x) ∧ NotEruptedForExtendedPeriod(x) → Dormant(x))"
    },
    {
        "NL": "A museum attracts more visitors when it features unique exhibits, offers guided tours, and has interactive displays, but not if it charges exorbitant admission fees.",
        "FOL": "∀x (Museum(x) → (AttractsMoreVisitors(x) ↔ (UniqueExhibits(x) ∧ GuidedTours(x) ∧ InteractiveDisplays(x) ∧ ¬ExorbitantAdmissionFees(x))))"
    },
    {
        "NL": "If a mammal is a marsupial, it gives birth to undeveloped offspring and has a pouch to nurture them.",
        "FOL": "∀x (Mammal(x) ∧ Marsupial(x) → (GivesBirthToUndevelopedOffspring(x) ∧ HasPouch(x)))"
    },
    {
        "NL": "An athlete can participate in a triathlon if they excel in swimming, cycling, and running.",
        "FOL": "∀x (Athlete(x) ∧ ExcelSwimming(x) ∧ ExcelCycling(x) ∧ ExcelRunning(x) → ParticipateTriathlon(x))"
    },
    {
        "NL": "Archaeology uncovers ancient civilizations, linguistics studies languages, and anthropology investigates human societies.",
        "FOL": "∀x ∀y ∀z (Archaeology(x) ∧ Linguistics(y) ∧ Anthropology(z) → (UncoversAncientCivilizations(x) ∧ StudiesLanguages(y) ∧ InvestigatesHumanSocieties(z)))"
    },
    {
        "NL": "A vehicle that uses electricity as its primary source of power is called an electric vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ UsesElectricityAsPrimaryPower(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A vehicle qualifies as an autonomous vehicle if it can navigate and operate without human intervention, utilizing sensors, cameras, and advanced algorithms.",
        "FOL": "∀x (Vehicle(x) ∧ CanNavigateWithoutHumanIntervention(x) ∧ CanOperateWithoutHumanIntervention(x) ∧ UtilizesSensorsCamerasAlgorithms(x) → AutonomousVehicle(x))"
    },
    {
        "NL": "A cat is tame or feral, but not both.",
        "FOL": "∀x (Cat(x) → (Tame(x) ⊕ Feral(x)))"
    },
    {
        "NL": "Children learn language skills by listening, speaking, and reading.",
        "FOL": "∀x ∀y ∀z (Child(x) → (Listening(x, y) ∧ Speaking(x, y) ∧ Reading(x, z) → LanguageSkills(x)))"
    },
    {
        "NL": "A mountain is tall or short, but not both.",
        "FOL": "∀x (Mountain(x) → (Tall(x) ⊕ Short(x)))"
    },
    {
        "NL": "Books can be fiction or non-fiction, and their content is written by authors.",
        "FOL": "∀x ∀y (Book(x) ∧ (Fiction(x) ⊕ NonFiction(x)) ∧ Author(y) → WrittenBy(x, y))"
    },
    {
        "NL": "A book is considered fiction if it tells a story that is not based on real events.",
        "FOL": "∀x (Book(x) ∧ ¬BasedOnRealEvents(x) → Fiction(x))"
    },
    {
        "NL": "Not all vehicles are either cars or motorcycles.",
        "FOL": "¬∀x (Vehicle(x) → (Car(x) ∨ Motorcycle(x)))"
    },
    {
        "NL": "Every bee buzzes, but not everything that buzzes is a bee.",
        "FOL": "∀x (Bee(x) → Buzzes(x)) ∧ ¬∀x (Buzzes(x) → Bee(x))"
    },
    {
        "NL": "Some learners have read every book by an author.",
        "FOL": "∃x (Learner(x) ∧ ∃y (Author(y) ∧ ∀z (Book(z) ∧ WrittenBy(z, y) → Read(x, z))))"
    },
    {
        "NL": "A plant grows well when it has access to adequate sunlight, receives the right amount of water, and is planted in nutrient-rich soil.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ AdequateSunlight(x, y) ∧ RightAmountOfWater(x, z) ∧ NutrientRichSoil(x) → GrowsWell(x))"
    },
    {
        "NL": "If a person is an architect, they must design buildings and structures and oversee their construction.",
        "FOL": "∀x (Architect(x) → (DesignsBuildingsAndStructures(x) ∧ OverseesConstruction(x)))"
    },
    {
        "NL": "A river connects two lakes if it flows from one lake to another.",
        "FOL": "∀x∀y∀z (River(x) ∧ Lake(y) ∧ Lake(z) ∧ FlowsFromTo(x, y, z) → ConnectsLakes(x, y, z))"
    },
    {
        "NL": "Being a large square doesn't necessarily mean you are blue.",
        "FOL": "¬∀x (Large(x) ∧ Square(x) → Blue(x))"
    },
    {
        "NL": "A key opens a lock.",
        "FOL": "∀x ∀y (Key(x) ∧ Lock(y) → Opens(x, y))"
    },
    {
        "NL": "An object is considered a tool if it is designed to perform a specific task or function, often to make work easier or more efficient.",
        "FOL": "∀x (Object(x) ∧ DesignedForSpecificTask(x) ∧ DesignedForSpecificFunction(x) ∧ MakesWorkEasierOrMoreEfficient(x) → Tool(x))"
    },
    {
        "NL": "No cook who prepares every dish is appreciated by anyone.",
        "FOL": "∀x (Cook(x) → ∀y ((Dish(y) → Prepares(x, y)) → ¬∃z (Person(z) ∧ Appreciates(z, x))))"
    },
    {
        "NL": "If a person exercises regularly and maintains a balanced diet, they are more likely to be physically fit and healthy.",
        "FOL": "∀x (ExercisesRegularly(x) ∧ BalancedDiet(x) → (PhysicallyFit(x) ∧ Healthy(x)))"
    },
    {
        "NL": "A carnivore primarily consumes meat by hunting or scavenging for its food, relying on the nutrients from animal tissue.",
        "FOL": "∀x (Carnivore(x) → (ConsumesMeat(x) ∧ (Hunts(x) ∨ Scavenges(x)) ∧ ReliesOnNutrients(x, AnimalTissue)))"
    },
    {
        "NL": "In a room, if a door is open and the light is off, it is safe to assume that no one is inside.",
        "FOL": "∀x (Room(x) ∧ DoorOpen(x) ∧ LightOff(x) → NoOneInside(x))"
    },
    {
        "NL": "A person who travels to different countries for leisure is considered a tourist.",
        "FOL": "∀x (TravelsForLeisure(x) → Tourist(x))"
    },
    {
        "NL": "A product is eco-friendly when it's made of recycled materials, or its manufacturing process reduces waste and pollution.",
        "FOL": "∀x (EcoFriendly(x) ↔ (MadeOfRecycledMaterials(x) ∨ (ReducesWaste(x, Manufacturing) ∧ ReducesPollution(x, Manufacturing))))"
    },
    {
        "NL": "A tablet that has a larger screen is more suitable for watching movies than one with a smaller screen.",
        "FOL": "∀x∀y (Tablet(x) ∧ Tablet(y) ∧ LargerScreen(x) ∧ SmallerScreen(y) → MoreSuitableForWatchingMovies(x, y))"
    },
    {
        "NL": "A machine that operates silently is efficient.",
        "FOL": "∀x (Machine(x) ∧ OperatesSilently(x) → Efficient(x))"
    },
    {
        "NL": "A battery can be fully charged, partially charged, or empty.",
        "FOL": "∀x (Battery(x) → (FullyCharged(x) ∨ PartiallyCharged(x) ∨ Empty(x)))"
    },
    {
        "NL": "A coin lands either heads or tails, but not both.",
        "FOL": "∀x (Coin(x) → (LandsHeads(x) ⊕ LandsTails(x)))"
    },
    {
        "NL": "A material can either be flexible or rigid, but not both.",
        "FOL": "∀x (Material(x) → ((Flexible(x) ∨ Rigid(x)) ∧ ¬(Flexible(x) ∧ Rigid(x))))"
    },
    {
        "NL": "Not all humans hate Alice.",
        "FOL": "¬∀x (Human(x) → Hate(x, alice))"
    },
    {
        "NL": "A squirrel is jumping on the tree.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Tree(y) ∧ JumpingOn(x, y))"
    },
    {
        "NL": "A computer x can run operating system y with hardware component z if the component is compatible with the system and the system meets the minimum requirements.",
        "FOL": "∀x ∀y ∀z (Computer(x) ∧ OperatingSystem(y) ∧ HardwareComponent(z) ∧ Compatible(y, z) ∧ MinimumRequirementsMet(x, y) → CanRun(x, y, z))"
    },
    {
        "NL": "A hurricane is a large, rotating storm system with low pressure at its center, strong winds, and heavy rain, typically forming over warm ocean waters.",
        "FOL": "∀x (Hurricane(x) → (LargeRotatingStormSystem(x) ∧ LowPressureAtCenter(x) ∧ StrongWinds(x) ∧ HeavyRain(x) ∧ FormsOverWarmOceanWaters(x)))"
    },
    {
        "NL": "A company that invests in employee wellness programs is more likely to have a healthier and more productive workforce.",
        "FOL": "∀x (InvestsInEmployeeWellnessPrograms(x) → (HealthierWorkforce(x) ∧ MoreProductiveWorkforce(x)))"
    },
    {
        "NL": "An item of furniture designed for sitting, has a backrest, and consists of four legs is commonly called a chair.",
        "FOL": "∀x (Furniture(x) ∧ DesignedForSitting(x) ∧ HasBackrest(x) ∧ ConsistsOfFourLegs(x) → Chair(x))"
    },
    {
        "NL": "Mammals give birth to live young and produce milk to nourish them.",
        "FOL": "∀x (Mammal(x) → GivesBirthToLiveYoung(x) ∧ ProducesMilk(x))"
    },
    {
        "NL": "A door is open if it is not locked and allows passage between rooms or spaces.",
        "FOL": "∀x (Door(x) ∧ Open(x) ↔ (¬Locked(x) ∧ AllowsPassage(x)))"
    },
    {
        "NL": "All cats are mammals.",
        "FOL": "∀x (Cat(x) → Mammal(x))"
    },
    {
        "NL": "Bicycles have two wheels and are powered by pedaling.",
        "FOL": "∀x (Bicycle(x) → (Has(y) ∧ TwoWheels(y) ∧ PoweredBy(z) ∧ Pedaling(z) ∧ With(x, y, z)))"
    },
    {
        "NL": "A battery holds chemical energy and gives it out when needed to drive machines.",
        "FOL": "∀x (Battery(x) → (HoldsChemicalEnergy(x) ∧ (IsNeededToDriveMachines(x) → GivesOutEnergy(x))))"
    },
    {
        "NL": "A car is user-friendly if and only if it is not complex and highly speedy.",
        "FOL": "∀x (Car(x) → (UserFriendly(x) ↔ ¬Complex(x) ∧ ¬HighlySpeedy(x)))"
    },
    {
        "NL": "A volcano is active if it has frequent eruptions, releases gas and steam, and shows signs of seismic activity.",
        "FOL": "∀x (Volcano(x) ∧ FrequentEruptions(x) ∧ ReleasesGasAndSteam(x, y) ∧ SeismicActivity(x, z) → Active(x))"
    },
    {
        "NL": "In a democratic system, citizens can vote to elect representatives, who then create and enforce laws.",
        "FOL": "∀x ∀y ∀z (DemocraticSystem(x) ∧ Citizen(y) ∧ Representative(z) ∧ Vote(y, z) ∧ Elected(z) → (CreateLaws(z) ∧ EnforceLaws(z)))"
    },
    {
        "NL": "A person is considered a doctor if they have a medical degree and are licensed to practice medicine.",
        "FOL": "∀x (Person(x) ∧ MedicalDegree(x) ∧ LicensedToPracticeMedicine(x) → Doctor(x))"
    },
    {
        "NL": "A building with a modern design is an office or a museum.",
        "FOL": "∀x (Building(x) ∧ ModernDesign(x) → (IsOffice(x) ∨ IsMuseum(x)))"
    },
    {
        "NL": "There are leaders who are neither cruel nor weak.",
        "FOL": "∃x (Leader(x) ∧ ¬(Cruel(x) ∨ Weak(x)))"
    },
    {
        "NL": "Basketball players compete in teams on a court.",
        "FOL": "∀x (BasketballPlayer(x) → (CompetesInTeams(x) ∧ OnCourt(x)))"
    },
    {
        "NL": "It is not the case that something is a big square if and only if it is purple.",
        "FOL": "¬∀x (Big(x) ∧ Square(x) ↔ Purple(x))"
    },
    {
        "NL": "A password is secure if it contains a mix of uppercase, lowercase letters, and numbers.",
        "FOL": "∀x (Password(x) → (UppercaseLetters(x) ∧ LowercaseLetters(x) ∧ Numbers(x) → Secure(x)))"
    },
    {
        "NL": "An endangered species has a small population and is at risk of extinction.",
        "FOL": "∀x (EndangeredSpecies(x) ↔ (SmallPopulation(x) ∧ AtRiskOfExtinction(x)))"
    },
    {
        "NL": "A train runs on tracks and is powered by an engine.",
        "FOL": "∀x (Train(x) → (RunsOnTracks(x) ∧ PoweredByEngine(x)))"
    },
    {
        "NL": "An organism is classified as a parasite if it lives on or inside a host organism and obtains nutrients at the host's expense.",
        "FOL": "∀x∀y (Organism(x) ∧ Organism(y) ∧ LivesOnOrInsideHost(x, y) ∧ ObtainsNutrientsAtHostExpense(x, y) → Parasite(x))"
    },
    {
        "NL": "A smartphone has a good user experience if it features a responsive touch screen, an intuitive interface, and a fast operating system, unless it's outdated.",
        "FOL": "∀x (Smartphone(x) ∧ ((ResponsiveTouchScreen(x) ∧ IntuitiveInterface(x) ∧ FastOperatingSystem(x)) ∧ ¬Outdated(x) → GoodUserExperience(x)))"
    },
    {
        "NL": "If all volunteers who will be appreciated are university students, then some attendees will not be appreciated.",
        "FOL": "∀x (Volunteer(x) ∧ Appreciated(x) → UniversityStudent(x)) → ∃y (Attendee(y) ∧ ¬Appreciated(y))"
    },
    {
        "NL": "A bicycle has two wheels, but a tricycle has three wheels and a unicycle has only one wheel.",
        "FOL": "∀x ∀y ∀z (Bicycle(x) ∧ Tricycle(y) ∧ Unicycle(z) → (TwoWheels(x) ∨ ThreeWheels(y) ∨ OneWheel(z)))"
    },
    {
        "NL": "If a triangle is equilateral, all its sides are equal in length.",
        "FOL": "∀x (EquilateralTriangle(x) → AllSidesEqual(x))"
    },
    {
        "NL": "A beverage is hot if its temperature is above 60 degrees Celsius.",
        "FOL": "∀x (Beverage(x) ∧ Hot(x) ↔ TemperatureAbove60Celsius(x))"
    },
    {
        "NL": "A solar panel absorbs sunlight and converts it into electricity through the photovoltaic effect.",
        "FOL": "∀x (SolarPanel(x) → (AbsorbsSunlight(x) ∧ ConvertsIntoElectricity(x) ∧ ThroughPhotovoltaicEffect(x)))"
    },
    {
        "NL": "Every dog is furry, but not every furry one is a dog.",
        "FOL": "∀x (Dog(x) → Furry(x)) ∧ ¬∀x (Furry(x) → Dog(x))"
    },
    {
        "NL": "A room is well-lit if it has natural light, bright artificial lights, or a combination of both.",
        "FOL": "∀x (Room(x) → (NaturalLight(x) ∨ BrightArtificialLights(x) → WellLit(x)))"
    },
    {
        "NL": "A man is in the kitchen with a sharp knife.",
        "FOL": "∃x (Man(x) ∧ InKitchen(x) ∧ WithSharpKnife(x))"
    },
    {
        "NL": "A type of footwear designed for specific activities or sports, offering support and protection, is called athletic shoes.",
        "FOL": "∀x∀y (Footwear(x) ∧ DesignedForSpecificActivity(x, y) ∧ OffersSupport(x) ∧ OffersProtection(x) → AthleticShoes(x))"
    },
    {
        "NL": "A few cars are red and expensive.",
        "FOL": "∃x (Car(x) ∧ Red(x) ∧ Expensive(x))"
    },
    {
        "NL": "A museum exhibition is successful if it attracts a large number of visitors and receives positive media coverage.",
        "FOL": "∀x (MuseumExhibition(x) ∧ LargeNumberOfVisitors(x) ∧ PositiveMediaCoverage(x) → Successful(x))"
    },
    {
        "NL": "A shoe is comfortable if it has cushioning or proper arch support, and it is not too tight.",
        "FOL": "∀x (Shoe(x) ∧ ((Cushioning(x) ∨ ArchSupport(x)) ∧ ¬TooTight(x)) → Comfortable(x))"
    },
    {
        "NL": "A bee can sting, while a butterfly cannot.",
        "FOL": "∀x (Bee(x) → CanSting(x)) ∧ ∀y (Butterfly(y) → ¬CanSting(y))"
    },
    {
        "NL": "Not all meals are either breakfast or dinner.",
        "FOL": "¬∀x (Meal(x) → (Breakfast(x) ∨ Dinner(x)))"
    },
    {
        "NL": "Actors who practice regularly perform well in their roles.",
        "FOL": "∀x (Actor(x) ∧ PracticeRegularly(x) → PerformWell(x) ∧ InRoles(x))"
    },
    {
        "NL": "A chef cooks meals, and a critic reviews them.",
        "FOL": "∀x ∀y (Chef(x) ∧ Meal(y) → Cook(x, y)) ∧ ∀z ∀w (Critic(z) ∧ Meal(w) → Review(z, w))"
    },
    {
        "NL": "Solar panels on a rooftop convert sunlight into electricity, reducing the dependence on nonrenewable energy sources.",
        "FOL": "∀x (SolarPanelsOnRooftop(x) → ConvertsSunlightToElectricity(x))"
    },
    {
        "NL": "An entity is either a white dog or a black cat, but not both.",
        "FOL": "∀x ((White(x) ∧ Dog(x)) ⊕ (Black(x) ∧ Cat(x)))"
    },
    {
        "NL": "A mammal is considered aquatic if it spends a significant amount of time in water and is adapted for life in water.",
        "FOL": "∀x (Mammal(x) ∧ SpendsTimeInWater(x) ∧ AdaptedForLifeInWater(x) → Aquatic(x))"
    },
    {
        "NL": "An app is user-friendly if and only if it has intuitive interface and quick response time.",
        "FOL": "∀x (App(x) → (UserFriendly(x) ↔ IntuitiveInterface(x) ∧ QuickResponse(x)))"
    },
    {
        "NL": "Lisa eats an Italian dish only when it was cooked by Chef Oliver.",
        "FOL": "∀x (Dish(x) ∧ IsItalian(x) → (CookedByChefOliver(x) ↔ Eats(lisa, x)))"
    },
    {
        "NL": "A person who exercises regularly and maintains a balanced diet is more likely to be in good health.",
        "FOL": "∀x ((ExercisesRegularly(x) ∧ BalancedDiet(x)) → GoodHealth(x))"
    },
    {
        "NL": "A triangle is not black and does not lead to any white object.",
        "FOL": "∀x (Triangle(x) → (¬Black(x) ∧ ¬∃y (White(y) ∧ LeadsTo(x, y))))"
    },
    {
        "NL": "Cows and horses disturb Principal Rodriguez.",
        "FOL": "∀x ((Cow(x) ∨ Horse(x)) → Disturb(x, principalrodriguez))"
    },
    {
        "NL": "A person is bilingual if they are fluent in two languages.",
        "FOL": "∀x (Person(x) ∧ FluentInTwoLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "If a man is at the gym, then some weights are either light or heavy.",
        "FOL": "∃x ∃y (Man(x) ∧ Gym(y) ∧ At(x, y)) → ∃z (Weight(z) ∧ (Light(z) ⊕ Heavy(z)))"
    },
    {
        "NL": "Each scientist who specializes in physics and chemistry, unless they have won a Nobel prize, has either published in top science journals or has not taught at university.",
        "FOL": "∀x (Scientist(x) ∧ SpecializesInPhysics(x) ∧ SpecializesInChemistry(x) ∨ WonNobelPrize(x) → (PublishedInTopScienceJournals(x) ∨ ¬TaughtAtUniversity(x)))"
    },
    {
        "NL": "Some fruits are either ripe or unripe, but not both.",
        "FOL": "∃x (Fruit(x) ∧ (Ripe(x) ⊕ Unripe(x)))"
    },
    {
        "NL": "Organic farming practices, such as composting and crop rotation, contribute to soil health and reduce the need for chemical fertilizers.",
        "FOL": "∀x∀y (OrganicFarmingPractice(x) ∧ (Composting(x) ∨ CropRotation(x)) → (ContributesToSoilHealth(y) ∧ ReducesNeedForChemicalFertilizers(y)))"
    },
    {
        "NL": "Games that involve strategy and competition can be classified as board games or card games.",
        "FOL": "∀x (Game(x) ∧ Strategy(x) ∧ Competition(x) → (BoardGame(x) ∨ CardGame(x)))"
    },
    {
        "NL": "A student is considered to have graduated if they have successfully completed all required courses and received a diploma.",
        "FOL": "∀x (Student(x) ∧ CompletedAllRequiredCourses(x) ∧ ReceivedDiploma(x) → Graduated(x))"
    },
    {
        "NL": "A coat keeps you warm, but it won't protect you from rain unless it's waterproof.",
        "FOL": "∀x (Coat(x) → (KeepWarm(x) ∧ (¬ProtectFromRain(x) ∨ Waterproof(x))))"
    },
    {
        "NL": "A software x is a web application if it runs in a web browser and interacts with users through a web-based interface, such as HTML or JavaScript, denoted by y.",
        "FOL": "∀x ∀y (Software(x) ∧ RunsInWebBrowser(x) ∧ InteractsWithUsers(x) ∧ WebBasedInterface(y) ∧ (HTML(y) ∨ JavaScript(y)) → WebApplication(x))"
    },
    {
        "NL": "A computer can be in sleep, hibernate, or active mode, but not in more than one mode at a time.",
        "FOL": "∀x (Computer(x) → (SleepMode(x) ⊕ HibernateMode(x) ⊕ ActiveMode(x)))"
    },
    {
        "NL": "A knife is used for cutting, while a fork is used for picking up food, and a spoon is used for scooping liquids.",
        "FOL": "∀x∀y∀z (Knife(x) ∧ Fork(y) ∧ Spoon(z) → (UsedForCutting(x) ∧ UsedForPickingUpFood(y) ∧ UsedForScoopingLiquids(z)))"
    },
    {
        "NL": "A vehicle is considered a bicycle if it has two wheels and is powered by human pedaling.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) ∧ PoweredByHumanPedaling(x) → Bicycle(x))"
    },
    {
        "NL": "A smartphone can make calls, take photos, and send messages, but not all functions can be performed simultaneously.",
        "FOL": "∀x (Smartphone(x) → ((CanMakeCalls(x) ∧ ¬(CanTakePhotos(x) ∧ CanSendMessages(x))) ∨ (CanTakePhotos(x) ∧ ¬(CanMakeCalls(x) ∧ CanSendMessages(x))) ∨ (CanSendMessages(x) ∧ ¬(CanMakeCalls(x) ∧ CanTakePhotos(x)))))"
    },
    {
        "NL": "A software application that is user-friendly, constantly updated, and protected against security threats can maintain a high level of user satisfaction.",
        "FOL": "∀x (SoftwareApplication(x) ∧ UserFriendly(x) ∧ ConstantlyUpdated(x) ∧ ProtectedAgainstSecurityThreats(x) → HighLevelOfUserSatisfaction(x))"
    },
    {
        "NL": "A planet is habitable if it has suitable conditions to support the existence of life, such as liquid water, a stable atmosphere, and a suitable temperature range.",
        "FOL": "∀x (Planet(x) ∧ SuitableConditions(x) ∧ LiquidWater(x) ∧ StableAtmosphere(x) ∧ SuitableTemperatureRange(x) → Habitable(x))"
    },
    {
        "NL": "A movie is thrilling if it is unpredictable, full-of-action, and has outstanding performances.",
        "FOL": "∀x (Movie(x) → (Unpredictable(x) ∧ FullOfAction(x) ∧ HasOutstandingPerformances(x)) → Thrilling(x))"
    },
    {
        "NL": "A flight x connects city y to city z if x departs from y, arrives at z, and is operated by an airline that serves both cities.",
        "FOL": "∀x ∀y ∀z (Flight(x) ∧ City(y) ∧ City(z) ∧ DepartsFrom(x, y) ∧ ArrivesAt(x, z) ∧ ServesBothCities(x, y, z) → Connects(x, y, z))"
    },
    {
        "NL": "Every book is engaging if and only if it is either a science fiction or a mystery.",
        "FOL": "∀x (Book(x) → (Engaging(x) ↔ (ScienceFiction(x) ∨ Mystery(x))))"
    },
    {
        "NL": "An animal is a bird if it has feathers, a beak, and typically lays eggs.",
        "FOL": "∀x (Bird(x) ↔ (Animal(x) ∧ HasFeathers(x) ∧ HasBeak(x) ∧ TypicallyLaysEggs(x)))"
    },
    {
        "NL": "Movies in the horror genre usually involve scary elements and suspense.",
        "FOL": "∀x (HorrorMovie(x) → (ScaryElements(x) ∧ Suspense(x)))"
    },
    {
        "NL": "A vehicle is known as a limousine if it is luxurious, large, and used for special events.",
        "FOL": "∀x (Vehicle(x) → Luxurious(x) ∧ Large(x) ∧ UsedForSpecialEvents(x) → Limousine(x))"
    },
    {
        "NL": "An electronic device that is not waterproof will be damaged if submerged in water.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ¬Waterproof(x) ∧ SubmergedInWater(x) → Damaged(x))"
    },
    {
        "NL": "A light switch is on or off.",
        "FOL": "∀x (LightSwitch(x) → (On(x) ∨ Off(x)))"
    },
    {
        "NL": "Mountains are landforms that have high elevations and steep slopes.",
        "FOL": "∀x (Mountain(x) → (Landform(x) ∧ HighElevation(x) ∧ SteepSlope(x)))"
    },
    {
        "NL": "In a forest ecosystem, herbivores consume plants for sustenance, while carnivores prey on herbivores or other carnivores for nourishment.",
        "FOL": "∀x∀y∀z∀w (ForestEcosystem(x) ∧ Herbivore(y) ∧ Plant(z) ∧ Carnivore(w) → (ConsumesForSustenance(y, z) ∧ PreysOnForNourishment(w, y) ∨ PreysOnForNourishment(w, w)))"
    },
    {
        "NL": "If a plant is a flowering plant, it reproduces through seeds and has flowers with reproductive structures.",
        "FOL": "∀x (Plant(x) ∧ FloweringPlant(x) → ReproducesThroughSeeds(x) ∧ HasFlowersWithReproductiveStructures(x))"
    },
    {
        "NL": "A space mission can successfully land on a celestial body if the spacecraft is designed for the environment, has the necessary equipment, and can navigate the landing site.",
        "FOL": "∀x∀y∀z (SpaceMission(x) ∧ Spacecraft(y) ∧ CelestialBody(z) → (SuccessfulLanding(x, y, z) ↔ (DesignedForEnvironment(y, z) ∧ HasNecessaryEquipment(y) ∧ CanNavigateLandingSite(y, z))))"
    },
    {
        "NL": "A smartphone is user-friendly if it has an intuitive interface, responsive touchscreen, and a well-organized app ecosystem.",
        "FOL": "∀x (Smartphone(x) → (UserFriendly(x) ↔ (IntuitiveInterface(x) ∧ ResponsiveTouchscreen(x) ∧ WellOrganizedAppEcosystem(x))))"
    },
    {
        "NL": "If a restaurant serves vegetarian food, then it does not serve meat-based dishes.",
        "FOL": "∀x (Restaurant(x) ∧ ServesVegetarian(x) → ¬ServesMeat(x))"
    },
    {
        "NL": "An effective marketing campaign generates interest, increases brand awareness, and drives sales for a product or service.",
        "FOL": "∀x ∀y ∀z (MarketingCampaign(x) ∧ GeneratesInterest(x, y) ∧ IncreasesBrandAwareness(x, z) ∧ DrivesSales(x) → Effective(x, y, z))"
    },
    {
        "NL": "A renewable energy source can be replenished naturally, while a non-renewable energy source has a finite supply and takes a long time to regenerate.",
        "FOL": "∀x∀y (RenewableEnergy(x) ∧ NonRenewableEnergy(y) → (NaturallyReplenished(x) ⊕ (FiniteSupply(y) ∧ LongRegenerationTime(y))))"
    },
    {
        "NL": "An artist is painting a portrait in the studio, or a writer is drafting a novel in the office.",
        "FOL": "∃x ∃y (Artist(x) ∧ Portrait(y) ∧ Painting(x, y) ∧ InTheStudio(x)) ∨ ∃z ∃w (Writer(z) ∧ Novel(w) ∧ Drafting(z, w) ∧ InTheOffice(z))"
    },
    {
        "NL": "No one at the lecture sees either Madrid or Tokyo.",
        "FOL": "∀x (Person(x) ∧ AtLecture(x) → ¬(See(x, madrid) ∨ See(x, tokyo)))"
    },
    {
        "NL": "A location is a gallery if it exhibits artworks, is accessible to the public, and has a cultural function.",
        "FOL": "∀x (Location(x) ∧ ExhibitsArtworks(x) ∧ AccessibleToPublic(x) ∧ HasCulturalFunction(x) → Gallery(x))"
    },
    {
        "NL": "A place is a marsh if it is a wetland with predominantly herbaceous vegetation.",
        "FOL": "∀x (Marsh(x) ↔ (Place(x) ∧ Wetland(x) ∧ PredominantlyHerbaceousVegetation(x)))"
    },
    {
        "NL": "A person is considered a translator if they convert written or spoken text from one language into another.",
        "FOL": "∀x (Translator(x) ↔ ConvertsTextBetweenLanguages(x))"
    },
    {
        "NL": "All living organisms are made up of cells.",
        "FOL": "∀x (LivingOrganism(x) → MadeUpOfCells(x))"
    },
    {
        "NL": "The car is either moving or parked, not both.",
        "FOL": "∀x (Car(x) → (Moving(x) ⊕ Parked(x)))"
    },
    {
        "NL": "There exists a tall tree that is not green.",
        "FOL": "∃x (Tall(x) ∧ Tree(x) ∧ ¬Green(x))"
    },
    {
        "NL": "A celestial object is a black hole if it has an extremely high gravitational force, distorts spacetime, and prevents even light from escaping its event horizon.",
        "FOL": "∀x∀y∀z (CelestialObject(x) ∧ ExtremelyHighGravitationalForce(x, y) ∧ DistortsSpacetime(x, z) ∧ PreventsLightFromEscapingEventHorizon(x) → BlackHole(x))"
    },
    {
        "NL": "A chef cooks pasta or fish.",
        "FOL": "∀x (Chef(x) → (CooksPasta(x) ∨ CooksFish(x)))"
    },
    {
        "NL": "A smartphone requires charging.",
        "FOL": "∀x (Smartphone(x) → RequiresCharging(x))"
    },
    {
        "NL": "There is no leader that all followers follow if and only if there is a leader who no follower follows.",
        "FOL": "¬∃x (Leader(x) ∧ ∀y (Follower(y) → Follows(y, x))) ↔ ∃z (Leader(z) ∧ ∀w (Follower(w) → ¬Follows(z, w)))"
    },
    {
        "NL": "Some chefs either cook Italian or French cuisine, but do not cook both.",
        "FOL": "∃x (Chef(x) ∧ (CookItalian(x) ⊕ CookFrench(x)))"
    },
    {
        "NL": "Every artist who has won a prestige award and either paints expressionist art or is a cubist, has either exhibited in a famous gallery or has never taught art school.",
        "FOL": "∀x (Artist(x) ∧ WonPrestigeAward(x) ∧ (PaintsExpressionistArt(x) ∨ Cubist(x)) → ∃y (FamousGallery(y) ∧ ExhibitedIn(x, y)) ∨ ¬TaughtArtSchool(x))"
    },
    {
        "NL": "A person is either a morning person or a night owl, but not both.",
        "FOL": "∀x ((MorningPerson(x) ⊕ NightOwl(x)) ∧ ¬(MorningPerson(x) ∧ NightOwl(x)))"
    },
    {
        "NL": "A restaurant is open if it is not during closing hours and there is no private event taking place.",
        "FOL": "∀x (Restaurant(x) ∧ ¬ClosingHours(x, t) ∧ ¬PrivateEvent(x) → Open(x))"
    },
    {
        "NL": "Maria is not a doctor.",
        "FOL": "¬Doctor(maria)"
    },
    {
        "NL": "In an art museum, paintings are displayed on walls, sculptures are placed on pedestals, and photographs are showcased in frames.",
        "FOL": "∀x ∀y ∀z (ArtMuseum(x) ∧ (Painting(y) ∧ DisplayedOnWalls(x, y)) ∧ (Sculpture(z) ∧ PlacedOnPedestals(x, z)) ∧ (Photograph(x) ∧ ShowcasedInFrames(x)))"
    },
    {
        "NL": "A structure is a massive building only if it is modern.",
        "FOL": "∀x (Massive(x) ∧ Building(x) → Modern(x))"
    },
    {
        "NL": "An exercise routine is effective for weight loss if it includes aerobic activities, strength training, and focuses on either high-intensity intervals or calorie-burning exercises.",
        "FOL": "∀x∀y∀z (ExerciseRoutine(x) ∧ IncludesAerobicActivities(x, y) ∧ StrengthTraining(x, z) ∧ (FocusesOnHighIntensityIntervals(x) ∨ CalorieBurningExercises(x)) → EffectiveForWeightLoss(x))"
    },
    {
        "NL": "An email is marked as spam if it is unsolicited and contains promotional content.",
        "FOL": "∀x (Email(x) ∧ Unsolicited(x) ∧ PromotionalContent(x) → Spam(x))"
    },
    {
        "NL": "Some buildings are residential and have balconies.",
        "FOL": "∃x (Building(x) ∧ Residential(x) ∧ HasBalcony(x))"
    },
    {
        "NL": "A woman is dancing in a hall.",
        "FOL": "∃x ∃y (Woman(x) ∧ Hall(y) ∧ DancingIn(x, y))"
    },
    {
        "NL": "Singers sing songs, and fans listen to them.",
        "FOL": "∀x ∀y (Singer(x) ∧ Song(y) → Sing(x, y)) ∧ ∀z ∀w (Fan(z) ∧ Song(w) → Listen(z, w))"
    },
    {
        "NL": "A star is bright if and only if it is not distant, and it points to a blue or green celestial body.",
        "FOL": "∀x (Star(x) → ((Bright(x) ↔ ¬Distant(x)) ∧ ∃y (PointsTo(x, y) → (Blue(y) ∨ Green(y)))))"
    },
    {
        "NL": "Every lawyer who has won more than eight cases and either drafts contracts or works overtime, but not both, will have either earned a partnership or be a legal head.",
        "FOL": "∀x (Lawyer(x) ∧ WonMoreThanEightCases(x) ∧ (DraftsContracts(x) ⊕ Overtime(x)) → (EarnedPartnership(x) ∨ LegalHead(x)))"
    },
    {
        "NL": "A smartphone has a camera and can access the internet.",
        "FOL": "∀x (Smartphone(x) → (HasCamera(x) ∧ CanAccessInternet(x)))"
    },
    {
        "NL": "A country is developed if it possesses cities, industries, and infrastructure of high quality.",
        "FOL": "∀x (Country(x) ∧ ∃y ∃z ∃w (City(y) ∧ Industry(z) ∧ Infrastructure(w) ∧ HighQuality(y, z, w) ∧ Possesses(x, y, z, w)) → Developed(x))"
    },
    {
        "NL": "A dog can be small, medium, or large in size.",
        "FOL": "∀x (Dog(x) → (SmallSize(x) ∨ MediumSize(x) ∨ LargeSize(x)))"
    },
    {
        "NL": "A student studies chemistry or biology.",
        "FOL": "∀x (Student(x) → StudiesChemistry(x) ∨ StudiesBiology(x))"
    },
    {
        "NL": "A bird species that can adapt to a wide range of habitats, has a varied diet, and is resistant to common diseases is more likely to have a large population.",
        "FOL": "∀x (BirdSpecies(x) ∧ AdaptsToWideRangeOfHabitats(x) ∧ VariedDiet(x) ∧ ResistantToCommonDiseases(x) → MoreLikelyLargePopulation(x))"
    },
    {
        "NL": "A room is dark when the curtains are closed and bright when the curtains are open.",
        "FOL": "∀x (Room(x) → (CurtainsClosed(x) → Dark(x)) ∧ (CurtainsOpen(x) → Bright(x)))"
    },
    {
        "NL": "A software is reckoned reliable if it contains minimal errors and either has frequently updated versions or extensive user support.",
        "FOL": "∀x (Software(x) ∧ HasMinimalErrors(x) ∧ (HasFrequentlyUpdatedVersions(x) ∨ HasExtensiveUserSupport(x)) → Reliable(x))"
    },
    {
        "NL": "Each elephant is a mammal, but not every mammal is an elephant.",
        "FOL": "∀x (Elephant(x) → Mammal(x)) ∧ ¬∀x (Mammal(x) → Elephant(x))"
    },
    {
        "NL": "An aquatic animal that breathes through gills, has fins for locomotion, and lives in freshwater or saltwater environments is classified as a fish.",
        "FOL": "∀x (AquaticAnimal(x) ∧ BreathesThroughGills(x) ∧ HasFins(x) ∧ (LivesInFreshwater(x) ∨ LivesInSaltwater(x)) → Fish(x))"
    },
    {
        "NL": "A student can graduate with honors if they have an excellent academic record, demonstrated leadership skills, or made significant contributions to the university community.",
        "FOL": "∀x (Student(x) ∧ (ExcellentAcademicRecord(x) ∨ LeadershipSkills(x) ∨ UniversityContributions(x)) → GraduatesWithHonors(x))"
    },
    {
        "NL": "A triangle has three sides and three angles.",
        "FOL": "∀x (Triangle(x) → (ThreeSides(x) ∧ ThreeAngles(x)))"
    },
    {
        "NL": "A point in Euclidean geometry has no dimensions, while a line has one dimension and a plane has two dimensions.",
        "FOL": "∀x∀y∀z (EuclideanGeometry(x) ∧ Point(y, x) → NoDimensions(y)) ∧ (EuclideanGeometry(x) ∧ Line(z, x) → OneDimension(z)) ∧ (EuclideanGeometry(x) ∧ Plane(y, x) → TwoDimensions(y))"
    },
    {
        "NL": "A mountain range is a series of mountains or hills, often formed by tectonic plate movements or volcanic activity, and characterized by its elevated terrain.",
        "FOL": "∀x (MountainRange(x) → (SeriesOfMountainsOrHills(x) ∧ OftenFormedByTectonicOrVolcanicActivity(x) ∧ ElevatedTerrain(x)))"
    },
    {
        "NL": "A smartphone has a touchscreen display, is capable of connecting to the internet, and can run various applications.",
        "FOL": "∀x (Smartphone(x) → (TouchscreenDisplay(x) ∧ ConnectsToInternet(x) ∧ RunsApplications(x)))"
    },
    {
        "NL": "A type of fuel that is derived from plant or animal sources, can be used as an alternative to fossil fuels, and is biodegradable is a biofuel.",
        "FOL": "∀x (Fuel(x) ∧ DerivedFromPlantOrAnimalSources(x) ∧ AlternativeToFossilFuels(x) ∧ Biodegradable(x) → Biofuel(x))"
    },
    {
        "NL": "A museum is open to the public if it has regular visiting hours and accessible exhibits.",
        "FOL": "∀x (Museum(x) → (OpenToPublic(x) ↔ (RegularVisitingHours(x) ∧ AccessibleExhibits(x))))"
    },
    {
        "NL": "In an orchestra, string instruments produce melodic sounds, while percussion instruments create rhythmic patterns, but both types of instruments cannot be silent.",
        "FOL": "∀x ∀y (Orchestra(x) ∧ StringInstrument(y) → MelodicSound(y)) ⊕ (PercussionInstrument(y) → RhythmicPattern(y)) ∧ ¬Silent(y)"
    },
    {
        "NL": "A type of precipitation that forms when water droplets in the atmosphere freeze into ice crystals is snow.",
        "FOL": "∀x (Precipitation(x) ∧ FormsFromWaterDroplets(x) ∧ FreezesIntoIceCrystals(x) → Snow(x))"
    },
    {
        "NL": "An athlete runs or swims.",
        "FOL": "∀x (Athlete(x) → (Runs(x) ∨ Swims(x)))"
    },
    {
        "NL": "A teacher educates students, a coach trains athletes, and a mentor guides mentees.",
        "FOL": "∀x∀y∀z (Teacher(x) ∧ Coach(y) ∧ Mentor(z) → (EducatesStudents(x) ∧ TrainsAthletes(y) ∧ GuidesMentees(z)))"
    },
    {
        "NL": "An entity is a happy circle if and only if it is not red.",
        "FOL": "∀x (Happy(x) ∧ Circle(x) ↔ ¬Red(x))"
    },
    {
        "NL": "A university may require an entrance exam or a personal essay for admission.",
        "FOL": "∀x ∀y (University(x) ∧ Applicant(y) → (EntranceExamRequired(x) ∨ PersonalEssayRequired(x) → Admission(x, y)))"
    },
    {
        "NL": "A painting is valuable if it is created by a renowned artist, made with high-quality materials, and well-preserved, but not if it is a forgery.",
        "FOL": "∀x (Painting(x) ∧ Valuable(x) ↔ (RenownedArtist(x) ∧ HighQualityMaterials(x) ∧ WellPreserved(x) ∧ ¬Forgery(x)))"
    },
    {
        "NL": "An object is a cube if and only if it has six equal square faces.",
        "FOL": "∀x (Cube(x) ↔ HasSixEqualSquareFaces(x))"
    },
    {
        "NL": "A person is either joyful or stagnant.",
        "FOL": "∀x (Person(x) → (Joyful(x) ⊕ Stagnant(x)))"
    },
    {
        "NL": "Parents are responsible for providing care and support to their children.",
        "FOL": "∀x ∀y (Parent(x, y) → ProvidesCareAndSupport(x, y))"
    },
    {
        "NL": "A movie becomes a cult classic when it has a devoted fanbase, features unconventional themes, or receives critical acclaim, but not all three simultaneously.",
        "FOL": "∀x (Movie(x) ∧ ((DevotedFanbase(x) ∧ ¬(UnconventionalThemes(x) ∧ CriticalAcclaim(x))) ∨ (UnconventionalThemes(x) ∧ ¬(DevotedFanbase(x) ∧ CriticalAcclaim(x))) ∨ (CriticalAcclaim(x) ∧ ¬(DevotedFanbase(x) ∧ UnconventionalThemes(x)))) → CultClassic(x))"
    },
    {
        "NL": "A doctor diagnoses patients, prescribes medicine, and monitors their health.",
        "FOL": "∀x ∃y (Doctor(x) → Patient(y) ∧ Diagnoses(x, y) ∧ PrescribesMedicine(x) ∧ MonitorsHealth(x, y))"
    },
    {
        "NL": "A bee can buzz and pollinate, while a frog cannot buzz nor pollinate.",
        "FOL": "∀x (Bee(x) → CanBuzz(x) ∧ CanPollinate(x)) ∧ ∀y (Frog(y) → ¬CanBuzz(y) ∧ ¬CanPollinate(y))"
    },
    {
        "NL": "A bakery is popular among customers if it is known for its delicious pastries, but not if it has long waiting times.",
        "FOL": "∀x (PopularAmongCustomers(x) ↔ (Bakery(x) ∧ (∃y (Delicious(y) ∧ Pastries(y) ∧ KnownFor(x, y)) ∧ ¬∃z (LongWaitingTime(z) ∧ At(x, z)))))"
    },
    {
        "NL": "A book is a novel if it is a work of fiction, contains a narrative structure, and explores themes such as character development, plot, and setting.",
        "FOL": "∀x (Book(x) ∧ WorkOfFiction(x) ∧ NarrativeStructure(x) ∧ ExploresThemesOfCharacterPlotSetting(x) → Novel(x))"
    },
    {
        "NL": "A pentagon is not yellow and does not point to any blue object",
        "FOL": "∀x (Pentagon(x) → (¬Yellow(x) ∧ ¬∃y (Blue(y) ∧ PointsTo(x, y))))"
    },
    {
        "NL": "A song that is melancholic can make people cry.",
        "FOL": "∀x ∀y (Song(x) ∧ Melancholic(x) ∧ Person(y) → CanMakeCry(x, y))"
    },
    {
        "NL": "A door is unlocked if it is not secured by a key, a combination, or an electronic lock.",
        "FOL": "∀x (Door(x) → (Unlocked(x) ↔ (¬SecuredByKey(x) ∧ ¬SecuredByCombination(x) ∧ ¬SecuredByElectronicLock(x))))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight, compact, and can operate on battery power.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ Compact(x) ∧ OperatesOnBatteryPower(x) → Portable(x))"
    },
    {
        "NL": "A restaurant serves vegan food if all the dishes on its menu contain no animal products.",
        "FOL": "∀x∀y (Restaurant(x) ∧ Menu(x, y) ∧ ∀z (Dish(z, y) → NoAnimalProducts(z)) → ServesVeganFood(x))"
    },
    {
        "NL": "A person is either asleep or awake, not both simultaneously.",
        "FOL": "∀x (Person(x) → (Asleep(x) ⊕ Awake(x)))"
    },
    {
        "NL": "A dessert is luscious if it contains chocolate or cream as an ingredient.",
        "FOL": "∀x (Dessert(x) ∧ (HasChocolate(x) ∨ HasCream(x)) → Luscious(x))"
    },
    {
        "NL": "Someone is recognized as an architect if they design buildings.",
        "FOL": "∀x (Individual(x) ∧ DesignsBuildings(x) → Architect(x))"
    },
    {
        "NL": "A piece of clothing is considered a hat if it is a head covering, often with a brim or visor, and worn for protection or fashion.",
        "FOL": "∀x (Clothing(x) ∧ HeadCovering(x) ∧ OftenWithBrimOrVisor(x) ∧ WornForProtectionOrFashion(x) → Hat(x))"
    },
    {
        "NL": "Some creatures are either terrestrial or marine, but not both.",
        "FOL": "∃x (Creature(x) ∧ (Terrestrial(x) ⊕ Marine(x)))"
    },
    {
        "NL": "A person is tired if and only if they know at least one intelligent person.",
        "FOL": "∀x (Tired(x) ↔ ∃y (Intelligent(y) ∧ Knows(x, y)))"
    },
    {
        "NL": "An artwork that is created using a specific medium and is intended for a particular audience is typically a painting or a sculpture.",
        "FOL": "∀x∀y∀z (Artwork(x) ∧ CreatedWithMedium(x, y) ∧ IntendedForAudience(x, z) → (Painting(x) ∨ Sculpture(x)))"
    },
    {
        "NL": "A hotel is a luxury hotel if it offers five-star accommodations and has amenities such as a spa, gym, or fine dining restaurant.",
        "FOL": "∀x (Hotel(x) → ((FiveStarAccommodations(x) ∧ (Spa(x) ∨ Gym(x) ∨ FineDining(x))) ↔ LuxuryHotel(x)))"
    },
    {
        "NL": "All artists who hold originality and technical proficiency are famous.",
        "FOL": "∀y (Artist(y) ∧ HasOriginality(y) ∧ HasTechnicalProficiency(y) → Famous(y))"
    },
    {
        "NL": "A cat is not sitting on the mat.",
        "FOL": "∃x (Cat(x) ∧ ¬∃y (Mat(y) ∧ SittingOn(x, y)))"
    },
    {
        "NL": "An iceberg is formed from a glacier when a section of ice breaks off and floats in the ocean.",
        "FOL": "∀x∀y∀z (Iceberg(x) ∧ Glacier(y) ∧ Ocean(z) ∧ BreaksOff(y, x) ∧ FloatsIn(x, z) → FormedFrom(x, y))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it is powered by electricity and has a battery.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricity(x) ∧ HasBattery(x) → ElectricVehicle(x))"
    },
    {
        "NL": "Butterflies pollinate plants.",
        "FOL": "∀x ∀y (Butterfly(x) ∧ Plant(y) → Pollinate(x, y))"
    },
    {
        "NL": "A reliable transportation system offers frequent service, convenient connections, and punctual arrivals.",
        "FOL": "∀x (TransportationSystem(x) ∧ FrequentService(x) ∧ ConvenientConnections(x) ∧ PunctualArrivals(x) → Reliable(x))"
    },
    {
        "NL": "Giraffes have long necks, elephants have large ears, and camels have humps.",
        "FOL": "∀x (Giraffe(x) → LongNeck(x)) ∧ ∀y (Elephant(y) → LargeEars(y)) ∧ ∀z (Camel(z) → HasHumps(z))"
    },
    {
        "NL": "Roses are red, violets are blue, and sunflowers are yellow.",
        "FOL": "∀x (Rose(x) → Red(x)) ∧ ∀y (Violet(y) → Blue(y)) ∧ ∀z (Sunflower(z) → Yellow(z))"
    },
    {
        "NL": "A bird is called an eagle if it is from the Accipitriformes family, has sharp eyesight, and soars.",
        "FOL": "∀x (Bird(x) → FromAccipitriformesFamily(x) ∧ HasSharpEyesight(x) ∧ Soars(x) → Eagle(x))"
    },
    {
        "NL": "A tree loses its leaves in the fall and grows new ones in the spring.",
        "FOL": "∀x (Tree(x) → (LosesLeaves(x, Fall) ∧ GrowsLeaves(x, Spring)))"
    },
    {
        "NL": "A bank has a manager and a team of tellers.",
        "FOL": "∀x (Bank(x) → (HasManager(x) ∧ HasTeamOfTellers(x)))"
    },
    {
        "NL": "A coin can show heads or tails, but not both.",
        "FOL": "∀x (Coin(x) → (ShowsHeads(x) ⊕ ShowsTails(x)))"
    },
    {
        "NL": "A bird flies when its wings are spread and it has enough energy.",
        "FOL": "∀x (Bird(x) ∧ WingsSpread(x) ∧ HasEnergy(x) → Flies(x))"
    },
    {
        "NL": "A university is prestigious if it has either an excellent research program or a highly ranked faculty.",
        "FOL": "∀x (University(x) ∧ Prestigious(x) ↔ (ExcellentResearchProgram(x) ∨ HighlyRankedFaculty(x)))"
    },
    {
        "NL": "A key unlocks a lock, can be a traditional key, electronic key, or a combination key, and can be made of metal, plastic, or a combination of materials.",
        "FOL": "∀x (Key(x) → (UnlocksLock(x) ∧ (((TraditionalKey(x) ∧ ¬ElectronicKey(x)) ∨ (¬TraditionalKey(x) ∧ ElectronicKey(x))) ∨ ((¬TraditionalKey(x) ∧ ¬ElectronicKey(x)) ∧ CombinationKey(x))) ∧ (((Metal(x) ∧ ¬Plastic(x)) ∨ (¬Metal(x) ∧ Plastic(x))) ∨ ((¬Metal(x) ∧ ¬Plastic(x)) ∧ CombinationOfMaterials(x)))))"
    },
    {
        "NL": "An element x is a metal if it is a good conductor of heat and electricity and is malleable.",
        "FOL": "∀x (Element(x) ∧ GoodConductorOfHeat(x) ∧ GoodConductorOfElectricity(x) ∧ Malleable(x) → Metal(x))"
    },
    {
        "NL": "Mark respects Linda or Karen.",
        "FOL": "Respect(mark, linda) ∨ Respect(mark, karen)"
    },
    {
        "NL": "If all dogs aren't friendly, there's a neighborhood that every neighborhood connects to.",
        "FOL": "¬∀x (Dog(x) → Friendly(x)) → ∃y (Neighborhood(y) ∧ ∀z (Neighborhood(z) → ConnectsTo(z, y)))"
    },
    {
        "NL": "An object that reflects light, has a smooth surface, and forms an image by the reflection of light rays is a mirror.",
        "FOL": "∀x (Object(x) ∧ ReflectsLight(x) ∧ SmoothSurface(x) ∧ FormsImageByReflectingLight(x) → Mirror(x))"
    },
    {
        "NL": "Hot air balloons fly using hot air.",
        "FOL": "∀x (HotAirBalloon(x) → UsesHotAir(x))"
    },
    {
        "NL": "There exists a dessert that is sweet, cold, and dairy-based.",
        "FOL": "∃x (Dessert(x) ∧ Sweet(x) ∧ Cold(x) ∧ DairyBased(x))"
    },
    {
        "NL": "An object is considered fragile if it is easily broken or damaged.",
        "FOL": "∀x (Object(x) ∧ Fragile(x) ↔ (EasilyBroken(x) ∨ EasilyDamaged(x)))"
    },
    {
        "NL": "A sculpture is made of metal or stone, but not both.",
        "FOL": "∀x (Sculpture(x) → (MadeOfMetal(x) ⊕ MadeOfStone(x)))"
    },
    {
        "NL": "An ecosystem x supports biodiversity if it provides a variety of habitats for different species y.",
        "FOL": "∀x ∀y (Ecosystem(x) ∧ Species(y) ∧ ProvidesVarietyOfHabitats(x, y) → SupportsBiodiversity(x))"
    },
    {
        "NL": "An animal is either a carnivore, herbivore, or omnivore.",
        "FOL": "∀x (Animal(x) → (Carnivore(x) ∨ Herbivore(x) ∨ Omnivore(x)))"
    },
    {
        "NL": "A restaurant serves multiple types of cuisine, such as Italian, Chinese, and Mexican, and provides options for vegetarian and vegan diners.",
        "FOL": "∀x (Restaurant(x) ∧ (ItalianCuisine(x) ∨ ChineseCuisine(x) ∨ MexicanCuisine(x)) → ProvidesVegetarianAndVeganOptions(x))"
    },
    {
        "NL": "Festivals celebrate cultural traditions, bring communities together, and showcase local talent.",
        "FOL": "∀x (Festival(x) → (CelebratesCulturalTraditions(x) ∧ BringsCommunitiesTogether(x) ∧ ShowcasesLocalTalent(x)))"
    },
    {
        "NL": "A plant x is a cactus if it has spines and can store water.",
        "FOL": "∀x (Plant(x) ∧ Spines(x) ∧ CanStoreWater(x) → Cactus(x))"
    },
    {
        "NL": "A person who writes books, stories, or articles is an author.",
        "FOL": "∀x (Person(x) ∧ (WritesBooks(x) ∨ WritesStories(x) ∨ WritesArticles(x)) → Author(x))"
    },
    {
        "NL": "A beverage can be a soda, a coffee, or a tea.",
        "FOL": "∀x (Beverage(x) → (Soda(x) ∨ Coffee(x) ∨ Tea(x)))"
    },
    {
        "NL": "A fruit is ripe or unripe.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ∨ Unripe(x)))"
    },
    {
        "NL": "A parachute slows descent by creating air resistance.",
        "FOL": "∀x (Parachute(x) → (SlowsDescent(x) ∧ CreatesAirResistance(x)))"
    },
    {
        "NL": "A person is considered a manager if they oversee the work of others and make decisions related to the operation of a business or organization.",
        "FOL": "∀x (Person(x) ∧ OverseesWorkOfOthers(x) ∧ MakesOperationalDecisions(x) → Manager(x))"
    },
    {
        "NL": "A chef prepares a meal using different ingredients and culinary techniques based on a recipe.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Recipe(z) ∧ UsesIngredientsAndTechniques(x, z) → Prepares(x, y))"
    },
    {
        "NL": "No chef in the restaurant cooks pasta for either Tom or Lisa.",
        "FOL": "∀x (Chef(x) ∧ InRestaurant(x) → ¬CookPasta(x, tom) ∧ ¬CookPasta(x, lisa))"
    },
    {
        "NL": "A restaurant serves dishes, employs chefs, and has a menu for customers.",
        "FOL": "∀x (Restaurant(x) → (ServesDishes(x) ∧ EmploysChefs(x) ∧ HasMenu(x)))"
    },
    {
        "NL": "A photograph captures the viewer's attention when it features a compelling subject, employs a striking composition, and utilizes appropriate lighting techniques.",
        "FOL": "∀x (Photograph(x) ∧ CompellingSubject(x) ∧ StrikingComposition(x) ∧ AppropriateLightingTechniques(x) → CapturesViewersAttention(x))"
    },
    {
        "NL": "A company is considered innovative if it invests in research and development, encourages creativity among employees, and frequently introduces new products or services.",
        "FOL": "∀x ∀y ∀z (Company(x) ∧ InvestsInResearchAndDevelopment(x, y) ∧ EncouragesCreativity(x, z) ∧ FrequentlyIntroducesNewProductsOrServices(x) → Innovative(x))"
    },
    {
        "NL": "Some fruits have seeds inside.",
        "FOL": "∃x (Fruit(x) ∧ ∃y (Seed(y) ∧ Inside(x, y)))"
    },
    {
        "NL": "A fruit is considered ripe when it has reached its optimal color, texture, and taste.",
        "FOL": "∀x (Fruit(x) ∧ OptimalColor(x) ∧ OptimalTexture(x) ∧ OptimalTaste(x) → Ripe(x))"
    },
    {
        "NL": "A song is captivating if and only if it has meaningful lyrics, compelling melody, but doesn't have too many repetitive hooks.",
        "FOL": "∀x (Song(x) ∧ Captivating(x) ↔ (HasMeaningfulLyrics(x) ∧ HasCompellingMelody(x) ∧ ¬ManyRepetitiveHooks(x)))"
    },
    {
        "NL": "A chef prepares and cooks meals in a kitchen.",
        "FOL": "∀x∀y (Chef(x) ∧ Kitchen(y) → (PreparesMeals(x, y) ∧ CooksMeals(x, y)))"
    },
    {
        "NL": "Lighthouses guide ships at sea with bright lights, while buoys mark navigation channels and hazards in the water.",
        "FOL": "∀x ∀y (Lighthouse(x) → GuidesShips(x, y) ∧ AtSea(y) ∧ BrightLight(x)) ∧ ∀z ∀w (Buoy(z) → MarksNavigationChannelsOrHazards(z, w) ∧ InWater(w))"
    },
    {
        "NL": "Sara watches a movie if and only if it is thrilling.",
        "FOL": "∀x (Movie(x) → (Thrilling(x) ↔ Watches(sara, x)))"
    },
    {
        "NL": "An electronic device that doesn't have a screen can be a speaker or a printer.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ¬HasScreen(x) → Speaker(x) ⊕ Printer(x))"
    },
    {
        "NL": "Mount Everest is the tallest mountain on Earth.",
        "FOL": "TallestMountainOnEarth(mountEverest)"
    },
    {
        "NL": "A shirt is expensive if it's made from silk or cashmere.",
        "FOL": "∀x (Shirt(x) ∧ (MadeFromSilk(x) ∨ MadeFromCashmere(x)) → Expensive(x))"
    },
    {
        "NL": "If a job applicant has relevant experience and good references, they may be hired, but if they lack both, they will likely be rejected.",
        "FOL": "∀x (JobApplicant(x) → ((RelevantExperience(x) ∧ GoodReferences(x) → MayBeHired(x)) ∧ (¬RelevantExperience(x) ∧ ¬GoodReferences(x) → LikelyRejected(x))))"
    },
    {
        "NL": "A software solution is efficient if it optimizes resources, reduces processing time, and improves overall performance.",
        "FOL": "∀x (SoftwareSolution(x) ∧ OptimizesResources(x) ∧ ReducesProcessingTime(x) ∧ ImprovesPerformance(x) → Efficient(x))"
    },
    {
        "NL": "A bakery sells a variety of baked goods, such as bread, pastries, and cakes, and may also offer beverages like coffee and tea.",
        "FOL": "∀x (Bakery(x) → ((SellsBread(x) ∧ SellsPastries(x) ∧ SellsCakes(x)) ∧ (OffersCoffee(x) ∨ OffersTea(x))))"
    },
    {
        "NL": "A country is considered a good place to invest if it's not facing political instability, and it has either low taxes or a growing economy.",
        "FOL": "∀x (Country(x) → (GoodPlaceToInvest(x) ↔ (¬PoliticallyUnstable(x) ∧ (LowTaxes(x) ∨ GrowingEconomy(x)))))"
    },
    {
        "NL": "A machine operates efficiently if it is well-maintained, the operator is skilled, and the machine's components are functioning properly.",
        "FOL": "∀x∀y (OperatesEfficiently(x, y) ↔ (Machine(x) ∧ Operator(y) ∧ WellMaintained(x) ∧ SkilledOperator(y) ∧ FunctioningComponents(x)))"
    },
    {
        "NL": "A celestial body that orbits a star, has a nearly spherical shape, and has cleared its orbit of other debris is a planet.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ Star(y) ∧ Orbits(x, y) ∧ NearlySpherical(x) ∧ ClearedOrbit(x) → Planet(x))"
    },
    {
        "NL": "A locked door prevents unauthorized access.",
        "FOL": "∀x (Door(x) ∧ Locked(x) → PreventsUnauthorizedAccess(x))"
    },
    {
        "NL": "If material is dense, then it is not compressible.",
        "FOL": "∀x (Dense(x) → ¬Compressible(x))"
    },
    {
        "NL": "An airline offers a direct flight between two cities if there is enough demand and the airports are connected by a suitable route.",
        "FOL": "∀x∀y∀z (Airline(x) ∧ City(y) ∧ City(z) ∧ EnoughDemand(y, z) ∧ SuitableRoute(y, z) → OffersDirectFlight(x, y, z))"
    },
    {
        "NL": "A book can be either fiction or non-fiction, but not both.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "An effective team has clear communication, strong collaboration, and shared goals.",
        "FOL": "∀x (Team(x) ∧ ClearCommunication(x) ∧ StrongCollaboration(x) ∧ SharedGoals(x) → Effective(x))"
    },
    {
        "NL": "A hurricane is a powerful tropical storm with strong winds, heavy rain, and often causes coastal flooding and damage.",
        "FOL": "∀x (Hurricane(x) → (PowerfulTropicalStorm(x) ∧ StrongWinds(x) ∧ HeavyRain(x) ∧ CausesCoastalFloodingAndDamage(x)))"
    },
    {
        "NL": "A person is considered a dancer if they practice and perform dance as a form of artistic expression.",
        "FOL": "∀x (PracticesAndPerformsDanceAsArtisticExpression(x) → Dancer(x))"
    },
    {
        "NL": "A screenplay is a script if it outlines the events of a certain character, written by a fellow actor or a known friend.",
        "FOL": "∀x ∃y ∃z (Screenplay(x) ∧ Character(y) ∧ (FellowActor(z) ∨ KnownFriend(z)) ∧ OutlinesEvents(x, y) ∧ WrittenBy(x, z) → Script(x))"
    },
    {
        "NL": "A photographer captures images with a camera, edits them, and sells prints.",
        "FOL": "∀x∀y (Photographer(x) ∧ Camera(y) → (CapturesImagesWith(x, y) ∧ EditsImages(x) ∧ SellsPrints(x)))"
    },
    {
        "NL": "Every car has wheels, but not every wheel belongs to a car.",
        "FOL": "∀x (Car(x) → Wheel(x)) ∧ ¬∀x (Wheel(x) → Car(x))"
    },
    {
        "NL": "A student passes an exam if they studied hard and the difficulty of the exam is low, or if they are naturally talented.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) → (Passes(x, y) ↔ ((StudiedHard(x) ∧ LowDifficulty(y)) ∨ NaturallyTalented(x))))"
    },
    {
        "NL": "Some fruits are either sweet or sour, but not both.",
        "FOL": "∃x (Fruit(x) ∧ (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "A chef prepares meals and creates new recipes.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Recipe(z) → (Prepares(x, y) ∧ Creates(x, z)))"
    },
    {
        "NL": "To qualify for a promotion, an employee must have both excellent performance and good communication skills, or they must have completed a management training course.",
        "FOL": "∀x (QualifyPromotion(x) ↔ ((ExcellentPerformance(x) ∧ GoodCommunicationSkills(x)) ∨ CompletedManagementTraining(x)))"
    },
    {
        "NL": "A camera with a higher resolution captures more detailed images.",
        "FOL": "∀x (Camera(x) ∧ HigherResolution(x) → CapturesMoreDetailedImages(x))"
    },
    {
        "NL": "If an object is round and large, then it points to at least one yellow object, unless it is a pyramid.",
        "FOL": "∀x ((Round(x) ∧ Large(x)) → ∃y (Yellow(y) ∧ PointsTo(x, y) ∨ Pyramid(x)))"
    },
    {
        "NL": "Whales and dolphins are marine mammals that breathe air through a blowhole.",
        "FOL": "∀x ∀y (Whale(x) ∧ Dolphin(y) → (MarineMammal(x) ∧ MarineMammal(y) ∧ BreathesAirThroughBlowhole(x) ∧ BreathesAirThroughBlowhole(y)))"
    },
    {
        "NL": "Birds lay eggs, and most of them can fly.",
        "FOL": "∀x (Bird(x) → (LaysEggs(x) ∧ (CanFly(x) ∨ ¬CanFly(x))))"
    },
    {
        "NL": "A company is profitable if it has increasing revenue, decreasing costs, and a growing market share.",
        "FOL": "∀x (Company(x) ∧ IncreasingRevenue(x) ∧ DecreasingCosts(x) ∧ GrowingMarketShare(x) → Profitable(x))"
    },
    {
        "NL": "A dog that is obedient and friendly makes a good pet.",
        "FOL": "∀x (Dog(x) ∧ Obedient(x) ∧ Friendly(x) → GoodPet(x))"
    },
    {
        "NL": "No employee who worships every leader is admired by anyone.",
        "FOL": "∀x (Employee(x) → ∀y ((Leader(y) → Worship(x, y)) → ¬∃z (Person(z) ∧ Admire(z, x))))"
    },
    {
        "NL": "A vehicle can be powered by an internal combustion engine or an electric motor.",
        "FOL": "∀x (Vehicle(x) → (InternalCombustionEngine(x) ∨ ElectricMotor(x)))"
    },
    {
        "NL": "Some cities are in Europe, while others are in Asia.",
        "FOL": "∀x (City(x) → InEurope(x) ⊕ InAsia(x))"
    },
    {
        "NL": "No student in the class raised questions.",
        "FOL": "∀x (Student(x) ∧ InClass(x) → ¬RaisedQuestion(x))"
    },
    {
        "NL": "A flight requires a departure airport and a destination airport, which cannot be the same location.",
        "FOL": "∀x∀y∀z (Flight(x) ∧ DepartureAirport(x, y) ∧ DestinationAirport(x, z) → ¬SameLocation(y, z))"
    },
    {
        "NL": "If a system is complicated and vast, then it signifies to at least one black component, unless it is a network.",
        "FOL": "∀x ((Complicated(x) ∧ Vast(x)) → ∃y (Black(y) ∧ Signifies(x, y) ∨ Network(x)))"
    },
    {
        "NL": "A flashlight emits light when the batteries are charged and the switch is on.",
        "FOL": "∀x (Flashlight(x) ∧ ChargedBatteries(x) ∧ SwitchOn(x) → EmitsLight(x))"
    },
    {
        "NL": "A software is considered reliable if it has a low crash rate and either regular updates or active user community.",
        "FOL": "∀x (Software(x) ∧ HasLowCrashRate(x) ∧ (HasRegularUpdates(x) ∨ HasActiveUserCommunity(x)) → Reliable(x))"
    },
    {
        "NL": "A bakery prepares and sells a range of baked goods, such as bread, pastries, and cakes, to customers.",
        "FOL": "∀x (Bakery(x) → (PreparesAndSellsBakedGoods(x) ∧ ServesBreadPastriesCakes(x)))"
    },
    {
        "NL": "A creature is either a big cat or a small dog, and regardless, it is white.",
        "FOL": "∃x (((Big(x) ∧ Cat(x)) ∨ (Small(x) ∧ Dog(x))) ∧ White(x))"
    },
    {
        "NL": "There are chefs who are neither inexperienced nor impractical.",
        "FOL": "∃x (Chef(x) ∧ ¬(Inexperienced(x) ∨ Impractical(x)))"
    },
    {
        "NL": "A building can be both tall and old if it is a historic landmark, or it can be modern and have a small size.",
        "FOL": "∃x (Building(x) ∧ ((Tall(x) ∧ Old(x) ∧ HistoricLandmark(x)) ∨ (Modern(x) ∧ SmallSize(x))))"
    },
    {
        "NL": "A black rectangle points to something.",
        "FOL": "∃x (Black(x) ∧ Rectangle(x) → ∃y (Points(x, y)))"
    },
    {
        "NL": "A book becomes a bestseller if it sells a large number of copies and receives widespread acclaim.",
        "FOL": "∀x (Book(x) ∧ SellsLargeNumberOfCopies(x) ∧ WidespreadAcclaim(x) → Bestseller(x))"
    },
    {
        "NL": "A circle has a constant ratio between its circumference and diameter.",
        "FOL": "∀x (Circle(x) → ConstantRatioCircumferenceDiameter(x))"
    },
    {
        "NL": "An article is an autography if it details the work history of a certain professional, written by themselves.",
        "FOL": "∀x ∃y (Article(x) ∧ Professional(y) ∧ DetailsWorkHistory(x, y) ∧ WrittenBy(x, y) → Autography(x))"
    },
    {
        "NL": "An airplane can safely land on a runway if the runway is clear of obstacles and has sufficient length.",
        "FOL": "∀x∀y (Airplane(x) ∧ Runway(y) ∧ ClearOfObstacles(y) ∧ SufficientLength(y) → CanSafelyLandOn(x, y))"
    },
    {
        "NL": "All music is either classical or rock, but it cannot be both.",
        "FOL": "∀x (Music(x) → (Classical(x) ⊕ Rock(x)))"
    },
    {
        "NL": "A machine which uses steam for power is a steam engine.",
        "FOL": "∀x (Machine(x) ∧ UsesSteam(x) → SteamEngine(x))"
    },
    {
        "NL": "An apple is a fruit, spinach is a vegetable, and salmon is a fish.",
        "FOL": "∀x∀y∀z (Apple(x) → Fruit(x)) ∧ (Spinach(y) → Vegetable(y)) ∧ (Salmon(z) → Fish(z))"
    },
    {
        "NL": "A flashlight emits light for illuminating dark areas, while a whistle produces sound for attracting attention.",
        "FOL": "∀x∀y (Flashlight(x) ∧ Whistle(y) → (EmitsLight(x) ∧ ProducesSound(y) ∧ AttractsAttention(y)))"
    },
    {
        "NL": "A camera takes photos, records videos, and has a flash.",
        "FOL": "∀x (Camera(x) → (TakesPhotos(x) ∧ RecordsVideos(x) ∧ HasFlash(x)))"
    },
    {
        "NL": "Some substances are either solid or liquid, but cannot be both.",
        "FOL": "∃x (Substance(x) ∧ (Solid(x) ⊕ Liquid(x)))"
    },
    {
        "NL": "A tree is deciduous if it loses its leaves during a specific season and regrows them the following season.",
        "FOL": "∀x (Deciduous(x) ↔ (Tree(x) ∧ ∃y (SpecificSeason(y) ∧ LosesLeavesDuring(x, y)) ∧ ∃z (FollowingSeason(z) ∧ RegrowsLeavesDuring(x, z))))"
    },
    {
        "NL": "A power plant generates electricity by converting energy from a primary source, such as coal, natural gas, or nuclear fuel.",
        "FOL": "∀x∀y∀z (PowerPlant(x) ∧ (Coal(y) ∨ NaturalGas(y) ∨ NuclearFuel(y)) → GeneratesElectricityByConvertingEnergy(x, y, z))"
    },
    {
        "NL": "A microwave heats meals by radiating them evenly.",
        "FOL": "∀x ∀y (Microwave(x) ∧ Meal(y) ∧ RadiatesEvenly(x, y) → Heat(x, y))"
    },
    {
        "NL": "Every machine that is efficient and well-maintained lasts long.",
        "FOL": "∀x (Machine(x) ∧ Efficient(x) ∧ WellMaintained(x) → LastsLong(x))"
    },
    {
        "NL": "An item is either a tall cylinder or a short prism, but not both.",
        "FOL": "∀x ((Tall(x) ∧ Cylinder(x)) ⊕ (Short(x) ∧ Prism(x)))"
    },
    {
        "NL": "There is a location that every location leads to it if all rectangles are not three dimensional.",
        "FOL": "¬∀x (Rectangle(x) → ThreeDimensional(x)) → ∃y (Location(y) ∧ ∀z (Location(z) → LeadsTo(z, y)))"
    },
    {
        "NL": "In a chess match, a player wins if they checkmate the opponent's king or if the opponent resigns.",
        "FOL": "∀x ∀y (ChessMatch(x) ∧ Player(y) → (Wins(y, x) ↔ (∃z (Opponent(z, y) ∧ (CheckmateKing(x, y, z) ∨ Resigns(x, z))))))"
    },
    {
        "NL": "A film festival accepts a film submission if it meets the eligibility criteria, has a compelling narrative, and showcases strong visual storytelling.",
        "FOL": "∀x (FilmSubmission(x) ∧ EligibilityCriteria(x) ∧ CompellingNarrative(x) ∧ StrongVisualStorytelling(x) → AcceptedInFestival(x))"
    },
    {
        "NL": "A basketball is primarily played indoors, while soccer is primarily played outdoors.",
        "FOL": "∀x∀y (Basketball(x) ∧ Soccer(y) → (PlayedIndoors(x) ∧ PlayedOutdoors(y)))"
    },
    {
        "NL": "An elephant is sleeping in the zoo, and a nightingale is singing at sunset.",
        "FOL": "∃x ∃y (Elephant(x) ∧ Zoo(y) ∧ SleepingIn(x, y)) ∧ ∃z (Nightingale(z) ∧ Singing(z) ∧ AtSunset(z))"
    },
    {
        "NL": "Successful startups require a strong business plan, effective marketing strategies, and dedicated founders to achieve rapid growth.",
        "FOL": "∀x (Startup(x) ∧ StrongBusinessPlan(x) ∧ EffectiveMarketingStrategies(x) ∧ DedicatedFounders(x) → RapidGrowth(x))"
    },
    {
        "NL": "A machine that can perform tasks autonomously without human intervention is a robot.",
        "FOL": "∀x (Machine(x) ∧ PerformsTasksAutonomously(x) ∧ WithoutHumanIntervention(x) → Robot(x))"
    },
    {
        "NL": "There is someone in the garden planting flowers.",
        "FOL": "∃x (Person(x) ∧ InGarden(x) ∧ (Plant(x, flowers)))"
    },
    {
        "NL": "If a person is a gardener, they maintain gardens.",
        "FOL": "∀x (Gardener(x) → MaintainsGardens(x))"
    },
    {
        "NL": "A tree can bear fruit, provide shade, or act as a windbreak.",
        "FOL": "∀x (Tree(x) → (BearsFruit(x) ∨ ProvidesShade(x) ∨ Windbreak(x)))"
    },
    {
        "NL": "A bakery sells delicious pastries if it bakes with fresh ingredients, employs talented bakers, and creates unique recipes.",
        "FOL": "∀x (Bakery(x) → (FreshIngredients(x) ∧ TalentedBakers(x) ∧ UniqueRecipes(x) → SellDeliciousPastries(x)))"
    },
    {
        "NL": "A building can have a gym, a pool, or a garden, but not all buildings have these amenities.",
        "FOL": "∃x (Building(x) ∧ (Gym(x) ∨ Pool(x) ∨ Garden(x)))"
    },
    {
        "NL": "A microwave heats quickly, and an oven heats slowly.",
        "FOL": "∀x ∀y (Microwave(x) ∧ Oven(y) → (HeatsQuickly(x) ∧ HeatsSlowly(y)))"
    },
    {
        "NL": "Medicine can be effective in treating an illness or managing symptoms, but it cannot cure all diseases.",
        "FOL": "∀x ∀y (Medicine(x) ∧ (TreatsIllness(x, y) ∨ ManagesSymptoms(x, y)) → Effective(x, y)) ∧ ¬CuresAllDiseases(x)"
    },
    {
        "NL": "An employee x receives a promotion if their performance is evaluated as outstanding and their supervisor y approves the promotion.",
        "FOL": "∀x ∀y (Employee(x) ∧ Supervisor(y) ∧ EvaluatesPerformanceAsOutstanding(y, x) ∧ ApprovesPromotion(y, x) → ReceivesPromotion(x))"
    },
    {
        "NL": "A device functions as a smartphone if it has the capability to make phone calls, send text messages, access the internet, and run various applications.",
        "FOL": "∀x (Device(x) ∧ MakesPhoneCalls(x) ∧ SendsTextMessages(x) ∧ AccessesInternet(x) ∧ RunsApplications(x) → Smartphone(x))"
    },
    {
        "NL": "Libraries store books and offer study spaces for visitors.",
        "FOL": "∀x (Library(x) → (∃y (Book(y) ∧ Stores(x, y)) ∧ ∃z (StudySpace(z) ∧ OffersToVisitors(x, z))))"
    },
    {
        "NL": "In a competitive market, supply and demand determine the price of goods and services, balancing each other to achieve market equilibrium.",
        "FOL": "∀x (CompetitiveMarket(x) → (Supply(x) ∧ Demand(x) → (DeterminesPrice(x) ∧ BalancesEachOther(x) ∧ AchievesMarketEquilibrium(x))))"
    },
    {
        "NL": "A person who plays a musical instrument as part of an orchestra is called an instrumentalist.",
        "FOL": "∀x (PlaysInstrumentInOrchestra(x) → Instrumentalist(x))"
    },
    {
        "NL": "Earth revolves around the sun, while the moon orbits Earth.",
        "FOL": "∀x∀y∀z ((Earth(x) ∧ Sun(y) → RevolvesAround(x, y)) ∧ (Moon(z) ∧ Earth(x) → Orbits(z, x)))"
    },
    {
        "NL": "All mothers have loved their children.",
        "FOL": "∀x (Mother(x) → ∃y (Child(y) ∧ Loved(x, y)))"
    },
    {
        "NL": "An artist is creating a masterpiece.",
        "FOL": "∃x (Artist(x) ∧ CreateMasterpiece(x))"
    },
    {
        "NL": "A planet with a stable orbit around a star, and liquid water on its surface, has the potential to harbor life.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) ∧ StableOrbit(x, y) ∧ LiquidWater(x) → PotentialForLife(x))"
    },
    {
        "NL": "A musical instrument produces sound through the vibration of a resonating body.",
        "FOL": "∀x (MusicalInstrument(x) ∧ Vibration(x) ∧ ResonatingBody(x) → ProducesSound(x))"
    },
    {
        "NL": "An umbrella provides shade from the sun and shelter from rain, while a parasol offers protection from the sun only.",
        "FOL": "∀x ∀y ∀z (Umbrella(x) ∧ Sun(y) ∧ Rain(z) → (ProvidesShade(x, y) ∧ ProvidesShelter(x, z))) ∧ ∀w ∀u (Parasol(w) ∧ Sun(u) → OffersProtectionFromSun(w, u))"
    },
    {
        "NL": "A musical instrument can be played to produce sound.",
        "FOL": "∀x (MusicalInstrument(x) → CanBePlayedToProduceSound(x))"
    },
    {
        "NL": "A planet with an atmosphere containing oxygen can support human life.",
        "FOL": "∀x (Planet(x) ∧ AtmosphereContainsOxygen(x) → SupportsHumanLife(x))"
    },
    {
        "NL": "All fungi reproduce through spores.",
        "FOL": "∀x (Fungus(x) → ReproducesThroughSpores(x))"
    },
    {
        "NL": "A well-designed park attracts visitors for activities like picnicking or playing sports.",
        "FOL": "∀x ∀y (Park(x) ∧ WellDesigned(x) ∧ Activity(y) → (Picnicking(y) ∨ PlayingSports(y) → AttractsFor(x, y)))"
    },
    {
        "NL": "A hamster is travel-friendly if and only if it is not nervous and quick.",
        "FOL": "∀x (Hamster(x) → (TravelFriendly(x) ↔ ¬Nervous(x) ∧ ¬Quick(x)))"
    },
    {
        "NL": "A smartphone can send text messages and make phone calls.",
        "FOL": "∀x (Smartphone(x) → (SendsTextMessages(x) ∧ MakesPhoneCalls(x)))"
    },
    {
        "NL": "A museum displays paintings or sculptures, but never both in the same room.",
        "FOL": "∀x ∀y (Museum(x) ∧ Room(y) → ((DisplaysPaintings(x, y) ⊕ DisplaysSculptures(x, y)) ∧ ¬(DisplaysPaintings(x, y) ∧ DisplaysSculptures(x, y))))"
    },
    {
        "NL": "Fermentation is a metabolic process in which microorganisms break down complex organic compounds, such as sugars, into simpler substances, like alcohol or lactic acid.",
        "FOL": "∀x∀y∀z (Fermentation(x) ∧ Microorganism(y) ∧ ComplexOrganicCompound(z) → (MetabolicProcess(x) ∧ BreaksDownComplexOrganicCompounds(y, z) ∧ ProducesSimplerSubstances(x)))"
    },
    {
        "NL": "A natural satellite that orbits a planet and is primarily composed of rock and ice is a moon.",
        "FOL": "∀x (NaturalSatellite(x) ∧ OrbitsPlanet(x) ∧ ComposedOfRockAndIce(x) → Moon(x))"
    },
    {
        "NL": "A safe neighborhood features well-lit streets, low crime rates, and a strong sense of community.",
        "FOL": "∀x (Neighborhood(x) ∧ Safe(x) → (WellLitStreets(x) ∧ LowCrimeRates(x) ∧ StrongSenseOfCommunity(x)))"
    },
    {
        "NL": "A pyramid is not purple and does not align with any brown entity.",
        "FOL": "∀x (Pyramid(x) → (¬Purple(x) ∧ ¬∃y (Brown(y) ∧ AlignsWith(x, y))))"
    },
    {
        "NL": "If an object is a massive cube or a tiny pyramid, then it is either red or green, but not both.",
        "FOL": "∀x ((Massive(x) ∧ Cube(x)) ∨ (Tiny(x) ∧ Pyramid(x)) → (Red(x) ⊕ Green(x)))"
    },
    {
        "NL": "A job can be full-time or part-time, but not both at the same time.",
        "FOL": "∀x (Job(x) → (FullTime(x) ⊕ PartTime(x)))"
    },
    {
        "NL": "A drink can be alcoholic or nonalcoholic.",
        "FOL": "∀x (Drink(x) → (Alcoholic(x) ⊕ Nonalcoholic(x)))"
    },
    {
        "NL": "If a person is a pilot, they must be licensed to fly an aircraft.",
        "FOL": "∀x (Pilot(x) → LicensedToFlyAircraft(x))"
    },
    {
        "NL": "A substance is a liquid if it has no fixed shape and takes the shape of its container.",
        "FOL": "∀x (Substance(x) ∧ Liquid(x) ↔ (NoFixedShape(x) ∧ TakesShapeOfContainer(x)))"
    },
    {
        "NL": "A smartphone appeals to consumers if it features a sleek design, offers impressive performance, and boasts a long battery life, while a device with frequent software issues or poor build quality is undesirable.",
        "FOL": "∀x (Smartphone(x) → (AppealsToConsumers(x) ↔ (SleekDesign(x) ∧ ImpressivePerformance(x) ∧ LongBatteryLife(x)) ∧ ¬(FrequentSoftwareIssues(x) ∨ PoorBuildQuality(x))))"
    },
    {
        "NL": "A plant requires water and sunlight to undergo photosynthesis, transforming light energy into chemical energy and producing oxygen.",
        "FOL": "∀x (Plant(x) → ((RequiresWater(x) ∧ RequiresSunlight(x)) → (UndergoesPhotosynthesis(x) ∧ TransformsLightEnergy(x) ∧ ProducesChemicalEnergy(x) ∧ ProducesOxygen(x))))"
    },
    {
        "NL": "Some humans trust Anna.",
        "FOL": "∃x (Human(x) ∧ Trust(x, anna))"
    },
    {
        "NL": "An astronomical event where the Moon passes between the Earth and the Sun, casting a shadow on Earth, is called a solar eclipse.",
        "FOL": "∀x (AstronomicalEvent(x) ∧ MoonPassesBetweenEarthAndSun(x) ∧ CastsShadowOnEarth(x) → SolarEclipse(x))"
    },
    {
        "NL": "A software application is open source if its source code is publicly available, can be modified by anyone, and allows for free redistribution.",
        "FOL": "∀x (SoftwareApplication(x) ∧ SourceCodePubliclyAvailable(x) ∧ ModifiableByAnyone(x) ∧ FreeRedistribution(x) → OpenSource(x))"
    },
    {
        "NL": "A child is playing on a swing, and a mother is reading under a shade.",
        "FOL": "∃x ∃y (Child(x) ∧ Swing(y) ∧ PlayingOn(x, y)) ∧ ∃z (Mother(z) ∧ Reading(z) ∧ UnderTheShade(z))"
    },
    {
        "NL": "Bill listens to a song if and only if it is a pop song.",
        "FOL": "∀x (Music(x) ∧ IsSong(x) → (IsPop(x) ↔ Listens(bill, x)))"
    },
    {
        "NL": "An animal is characterized as a mammal if it possesses hair or fur, is warm-blooded, and gives birth to live offspring.",
        "FOL": "∀x (Animal(x) ∧ PossessesHairOrFur(x) ∧ WarmBlooded(x) ∧ GivesBirthToLiveOffspring(x) → Mammal(x))"
    },
    {
        "NL": "Astronauts travel in spacecraft to explore space and conduct research.",
        "FOL": "∀x∀y∀z (Astronaut(x) ∧ Spacecraft(y) ∧ Space(z) → (TravelsIn(x, y) ∧ Explores(x, z) ∧ ConductsResearch(x, z)))"
    },
    {
        "NL": "A dessert made with chocolate, sugar, and butter is typically rich in flavor and high in calories.",
        "FOL": "∀x (Dessert(x) ∧ MadeWithChocolate(x) ∧ MadeWithSugar(x) ∧ MadeWithButter(x) → RichInFlavor(x) ∧ HighInCalories(x))"
    },
    {
        "NL": "A chef cooks meals, and a waiter serves meals to customers.",
        "FOL": "∀x ∀y (Chef(x) ∧ Meal(y) → Cooks(x, y)) ∧ (Waiter(x) ∧ Meal(y) ∧ Customer(z) → Serves(x, y, z))"
    },
    {
        "NL": "There is a musician who appreciates all and only the artists who do not appreciate themselves.",
        "FOL": "∃x (Musician(x) ∧ ∀y (Artist(y) → (Appreciate(x, y) ↔ ¬Appreciate(y, y))))"
    },
    {
        "NL": "A bicycle has two wheels.",
        "FOL": "HasTwoWheels(bicycle)"
    },
    {
        "NL": "A smartphone has a screen and a battery.",
        "FOL": "∀x (Smartphone(x) → (∃y ScreenOf(x, y) ∧ ∃z BatteryOf(x, z)))"
    },
    {
        "NL": "Not every student is enrolled, suggesting there's a class all other classes are related to.",
        "FOL": "¬∀x (Student(x) → Enrolled(x)) → ∃y (Class(y) ∧ ∀z (Class(z) → RelatedTo(z, y)))"
    },
    {
        "NL": "In a team, a member may be a leader or a follower, but not both.",
        "FOL": "∀x (TeamMember(x) → (Leader(x) ⊕ Follower(x)))"
    },
    {
        "NL": "A bicycle has two wheels and is powered by pedaling, while a skateboard has four wheels and is powered by pushing off the ground.",
        "FOL": "∀x∀y (Bicycle(x) ∧ Skateboard(y) → (TwoWheels(x) ∧ PedalPowered(x) ∧ FourWheels(y) ∧ PushPowered(y)))"
    },
    {
        "NL": "A book is considered a bestseller if it has a high sales volume, receives critical acclaim, and appears on popular bestseller lists.",
        "FOL": "∀x (Book(x) ∧ Bestseller(x) → (HighSalesVolume(x) ∧ CriticalAcclaim(x) ∧ AppearsOnBestsellerLists(x)))"
    },
    {
        "NL": "A vehicle capable of operating both on land and in water, propelled by wheels or tracks, and designed for amphibious transportation is an amphibious vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ OperatesOnLandAndInWater(x) ∧ PropelledByWheelsOrTracks(x) ∧ DesignedForAmphibiousTransportation(x) → AmphibiousVehicle(x))"
    },
    {
        "NL": "An item is a diamond if and only if every item attached to it is precious.",
        "FOL": "∀x (Diamond(x) ↔ ∀y (AttachedTo(y, x) → Precious(y)))"
    },
    {
        "NL": "If a festival celebrates art, it could showcase paintings or sculptures.",
        "FOL": "∀x (Festival(x) ∧ CelebratesArt(x) → (ShowcasesPaintings(x) ∨ ShowcasesSculptures(x)))"
    },
    {
        "NL": "A smartphone allows communication through voice calls, text messages, and internet services.",
        "FOL": "∀x (Smartphone(x) ↔ (VoiceCalls(x) ∧ TextMessages(x) ∧ InternetServices(x)))"
    },
    {
        "NL": "A software is considered efficient if it uses minimal system resources and delivers fast performance.",
        "FOL": "∀x (Software(x) ∧ Efficient(x) ↔ (MinimalSystemResources(x) ∧ FastPerformance(x)))"
    },
    {
        "NL": "A number is not even if it is odd.",
        "FOL": "∀x (Number(x) ∧ Odd(x) → ¬Even(x))"
    },
    {
        "NL": "A book that is both a mystery novel and a bestseller is a popular mystery novel.",
        "FOL": "∀x ((Book(x) ∧ MysteryNovel(x) ∧ Bestseller(x)) → PopularMysteryNovel(x))"
    },
    {
        "NL": "Ice cream melts in the sun.",
        "FOL": "∀x∀y (IceCream(x) ∧ Sun(y) → MeltsIn(x, y))"
    },
    {
        "NL": "A pharmacy dispenses prescription medications and offers over-the-counter products for health and wellness.",
        "FOL": "∀x (Pharmacy(x) → (DispensesPrescriptionMedications(x) ∧ OffersOverTheCounterProducts(x)))"
    },
    {
        "NL": "A microscope magnifies small objects for detailed observation.",
        "FOL": "∀x∀y (Microscope(x) ∧ SmallObject(y) → MagnifiesForDetailedObservation(x, y))"
    },
    {
        "NL": "A student can be classified as undergraduate, graduate, or doctoral, but not all three at the same time.",
        "FOL": "∀x (Student(x) ∧ Classified(x) → (Undergraduate(x) ⊕ Graduate(x) ⊕ Doctoral(x)))"
    },
    {
        "NL": "A meal is delicious when the ingredients are fresh and the flavors are well-balanced.",
        "FOL": "∀x (Meal(x) ∧ FreshIngredients(x) ∧ WellBalancedFlavors(x) → Delicious(x))"
    },
    {
        "NL": "A laptop operates on battery power when it is not connected to an external power source.",
        "FOL": "∀x (Laptop(x) ∧ ¬ConnectedToExternalPowerSource(x) → OperatesOnBatteryPower(x))"
    },
    {
        "NL": "A movie is a blockbuster if it has a high budget and is commercially successful.",
        "FOL": "∀x (Movie(x) ∧ Blockbuster(x) ↔ (HighBudget(x) ∧ CommerciallySuccessful(x)))"
    },
    {
        "NL": "No participant in the meeting understands either Madrid or Lisbon.",
        "FOL": "∀x (Participant(x) ∧ InMeeting(x) → ¬(Understand(x, madrid) ∨ Understand(x, lisbon)))"
    },
    {
        "NL": "A product is recyclable if it is made of paper or plastic, and has a recycling symbol, but not if it is contaminated.",
        "FOL": "∀x (Product(x) ∧ ((MadeOfPaper(x) ∨ MadeOfPlastic(x)) ∧ RecyclingSymbol(x) ∧ ¬Contaminated(x)) → Recyclable(x))"
    },
    {
        "NL": "A musical instrument that has a long neck, strings, and is played by plucking or strumming the strings is a guitar.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasLongNeck(x) ∧ HasStrings(x) ∧ (PlayedByPlucking(x) ∨ PlayedByStrumming(x)) → Guitar(x))"
    },
    {
        "NL": "A refrigerator stores and preserves food.",
        "FOL": "∀x (Refrigerator(x) → (StoresFood(x) ∧ PreservesFood(x)))"
    },
    {
        "NL": "No fish can survive without water.",
        "FOL": "¬∃x (Fish(x) ∧ CanSurvive(x) ∧ ¬InWater(x))"
    },
    {
        "NL": "A flashlight emits light when its switch is turned on, but it doesn't work if its batteries are dead.",
        "FOL": "∀x ∀y (Flashlight(x) ∧ Battery(y) → (SwitchOn(x) ∧ ¬DeadBattery(y) ⊕ (EmitsLight(x) ∧ DeadBattery(y))))"
    },
    {
        "NL": "Books that are old and rare are valuable.",
        "FOL": "∀x (Book(x) ∧ Old(x) ∧ Rare(x) → Valuable(x))"
    },
    {
        "NL": "A drug that effectively treats a disease and has minimal side effects is considered safe and efficacious.",
        "FOL": "∀x ((Drug(x) ∧ EffectivelyTreatsDisease(x) ∧ MinimalSideEffects(x)) → SafeAndEfficacious(x))"
    },
    {
        "NL": "A surgeon performs surgery, while a nurse provides patient care.",
        "FOL": "∀x∀y (Surgeon(x) ∧ Nurse(y) → (PerformsSurgery(x) ∧ ProvidesPatientCare(y)))"
    },
    {
        "NL": "Every movie is interesting if and only if it is either a comedy or a thriller.",
        "FOL": "∀x (Movie(x) → (Interesting(x) ↔ (Comedy(x) ∨ Thriller(x))))"
    },
    {
        "NL": "An exercise routine is beneficial for maintaining health if it includes cardiovascular, strength, and flexibility training, but it is not recommended for individuals with certain medical conditions.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ BeneficialForHealth(x) ↔ (CardiovascularTraining(x) ∧ StrengthTraining(x) ∧ FlexibilityTraining(x) ∧ ¬CertainMedicalConditions(x)))"
    },
    {
        "NL": "An action is moral or not moral.",
        "FOL": "∀x (Action(x) → (Moral(x) ⊕ ¬Moral(x)))"
    },
    {
        "NL": "A mountain can be covered in snow or not, but a beach is never covered in snow.",
        "FOL": "∃x (Mountain(x) ∧ (CoveredInSnow(x) ∨ ¬CoveredInSnow(x))) ∧ ∀y (Beach(y) → ¬CoveredInSnow(y))"
    },
    {
        "NL": "A movie is critically acclaimed if it receives positive reviews or wins major awards, but not if it has low ratings and no awards.",
        "FOL": "∀x (Movie(x) → ((PositiveReviews(x) ∨ MajorAwards(x)) ∧ ¬(LowRatings(x) ∧ NoAwards(x)) → CriticallyAcclaimed(x)))"
    },
    {
        "NL": "A room is dark if there's no natural light, has dim artificial lighting, and isn't bright or sunlit.",
        "FOL": "∀x (Room(x) ∧ Dark(x) ↔ (¬NaturalLight(x) ∧ DimArtificialLighting(x) ∧ ¬Bright(x) ∧ ¬Sunlit(x)))"
    },
    {
        "NL": "A book becomes a bestseller if it's written by a famous author or has an engaging plot, but not both.",
        "FOL": "∀x (Book(x) ∧ (FamousAuthor(x) ⊕ EngagingPlot(x)) → Bestseller(x))"
    },
    {
        "NL": "All cats are not mammals if there is a food that every food leads to it.",
        "FOL": "¬∀x (Cat(x) → Mammal(x)) → ∃y (Food(y) ∧ ∀z (Food(z) → LeadsTo(z, y)))"
    },
    {
        "NL": "If a poem is by Dickinson and it was written before 1890, then Sarah studies it.",
        "FOL": "∀x (Poem(x) ∧ WrittenBy(x, dickinson) → (WrittenBeforeEighteenNinety(x) ↔ Studies(sarah, x)))"
    },
    {
        "NL": "A magazine has a publisher.",
        "FOL": "∀x ∃y (Magazine(x) ∧ Publisher(y) ∧ PublishedBy(x, y))"
    },
    {
        "NL": "Bats are mammals that have wings and can fly.",
        "FOL": "∀x (Bat(x) → Mammal(x) ∧ HasWings(x) ∧ CanFly(x))"
    },
    {
        "NL": "In a gym, cardio machines like treadmills or stationary bikes help improve cardiovascular fitness, while strength training equipment, such as dumbbells or weight machines, assists with muscle building.",
        "FOL": "∀x (GymEquipment(x) ∧ (Treadmill(x) ∨ StationaryBike(x)) → ImprovesCardiovascularFitness(x)) ∧ ∀y (GymEquipment(y) ∧ (Dumbbell(y) ∨ WeightMachine(y)) → AssistsMuscleBuilding(y))"
    },
    {
        "NL": "A material is recyclable if it can be processed and turned into new products.",
        "FOL": "∀x (Material(x) ∧ Processed(x) ∧ NewProducts(x) → Recyclable(x))"
    },
    {
        "NL": "A computer program that is efficient, user-friendly, and compatible with various operating systems can be widely adopted and preferred by users.",
        "FOL": "∀x (ComputerProgram(x) ∧ Efficient(x) ∧ UserFriendly(x) ∧ CompatibleWithVariousOperatingSystems(x) → WidelyAdoptedAndPreferredByUsers(x))"
    },
    {
        "NL": "A microscope magnifies objects.",
        "FOL": "∀x (Microscope(x) → MagnifiesObjects(x))"
    },
    {
        "NL": "Every student who helps a peer is helped by a teacher.",
        "FOL": "∀x (Student(x) ∧ ∃y (Student(y) ∧ Helps(x, y)) → ∃z (Teacher(z) ∧ Helps(z, x)))"
    },
    {
        "NL": "A battery can be either rechargeable or non-rechargeable, but not both.",
        "FOL": "∀x (Battery(x) → (Rechargeable(x) ⊕ NonRechargeable(x)))"
    },
    {
        "NL": "Healthy marine ecosystems with diverse fish populations, vibrant coral reefs, and well-regulated fishing practices contribute to sustainable fishery management and support local economies.",
        "FOL": "∀x∀y∀z (HealthyMarineEcosystem(x) ∧ DiverseFishPopulations(x) ∧ VibrantCoralReefs(y) ∧ WellRegulatedFishingPractices(z) → (ContributesToSustainableFisheryManagement(x) ∧ SupportsLocalEconomies(x)))"
    },
    {
        "NL": "An ecosystem maintains a stable population of predators and prey if it has a sufficient food supply and appropriate living conditions for both.",
        "FOL": "∀x∀y∀z (Ecosystem(x) ∧ Predator(y) ∧ Prey(z) ∧ SufficientFoodSupply(x) ∧ AppropriateLivingConditions(x, y, z) → MaintainsStablePopulation(x, y, z))"
    },
    {
        "NL": "Some cities are both coastal and have a high population density.",
        "FOL": "∃x (City(x) ∧ Coastal(x) ∧ HighPopulationDensity(x))"
    },
    {
        "NL": "A restaurant is popular when it offers delicious dishes, has a welcoming atmosphere, and receives recommendations from food critics or satisfied customers.",
        "FOL": "∀x∀y∀z (Restaurant(x) ∧ DeliciousDishes(x, y) ∧ WelcomingAtmosphere(x, z) ∧ (RecommendationsCritics(x) ∨ RecommendationsCustomers(x)) → Popular(x))"
    },
    {
        "NL": "A library holds books and allows reading and borrowing.",
        "FOL": "∀z (Library(z) → (HoldsBooks(z) ∧ AllowsReading(z) ∧ AllowsBorrowing(z)))"
    },
    {
        "NL": "A car can be a racecar or have autopilot, but they can't be both.",
        "FOL": "∀x (Racecar(x) ⊕ HaveAutopilot(x))"
    },
    {
        "NL": "A microwave can receive instructions, heat food, and provide timers.",
        "FOL": "∀v (Microwave(v) → ReceiveInstructions(v) ∧ HeatFood(v) ∧ ProvideTimers(v))"
    },
    {
        "NL": "An individual is considered bilingual if they can speak two languages fluently.",
        "FOL": "∀x (Individual(x) → (Bilingual(x) ↔ CanSpeakTwoLanguagesFluently(x)))"
    },
    {
        "NL": "A wind turbine generates electricity when the wind speed is above a certain threshold.",
        "FOL": "∀x (WindTurbine(x) ∧ WindSpeedAboveThreshold(x) → GeneratesElectricity(x))"
    },
    {
        "NL": "A rainforest ecosystem contains tall trees that form a dense canopy, providing shade and shelter for a diverse array of plant and animal species.",
        "FOL": "∀x ∀y (RainforestEcosystem(x) ∧ (TallTrees(x, y) ∧ FormsDenseCanopy(y)) ∧ ProvidesShadeAndShelter(x))"
    },
    {
        "NL": "A doctor diagnoses and treats patients' illnesses.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) → (Diagnoses(x, y) ∧ Treats(x, y)))"
    },
    {
        "NL": "A smartphone has a touchscreen, internet access, and the ability to download and run apps.",
        "FOL": "∀x (Smartphone(x) ↔ (HasTouchscreen(x) ∧ HasInternetAccess(x) ∧ CanDownloadAndRunApps(x)))"
    },
    {
        "NL": "If a room is a kitchen, it is used for cooking and preparing food.",
        "FOL": "∀x (Room(x) ∧ Kitchen(x) → UsedForCooking(x) ∧ UsedForPreparingFood(x))"
    },
    {
        "NL": "All doctors who practice surgery are also knowledgeable in anatomy.",
        "FOL": "∀x (Doctor(x) ∧ PracticeSurgery(x) → KnowledgeableInAnatomy(x))"
    },
    {
        "NL": "A horse is galloping in the field, while a sheep is grazing in the meadow.",
        "FOL": "∃x ∃y (Horse(x) ∧ Field(y) ∧ GallopingIn(x, y)) ∧ ∃z (Sheep(z) ∧ Grazing(z) ∧ InTheMeadow(z))"
    },
    {
        "NL": "No celestial bodies are simultaneously comets and asteroids.",
        "FOL": "¬(∃x (CelestialBody(x) ∧ Comet(x) ∧ Asteroid(x)))"
    },
    {
        "NL": "A bakery makes cakes, while a juice company produces juices.",
        "FOL": "∃x ∃y (Bakery(x) ∧ Cake(y) ∧ Make(x, y)) ∧ ∃z ∃w (JuiceCompany(z) ∧ Juice(w) ∧ Produce(z, w))"
    },
    {
        "NL": "A substance can be either acidic or alkaline, but not both.",
        "FOL": "∀x (Substance(x) ∧ (Acidic(x) ⊕ Alkaline(x)))"
    },
    {
        "NL": "Actors are not always successful.",
        "FOL": "∃x (Actor(x) ∧ ¬Successful(x))"
    },
    {
        "NL": "A plant is either a cactus or a fern, but not both.",
        "FOL": "∀x (Plant(x) → (Cactus(x) ⊕ Fern(x)))"
    },
    {
        "NL": "A storm with lightning and heavy rain is dangerous.",
        "FOL": "∀x (Storm(x) ∧ Lightning(x) ∧ HeavyRain(x) → Dangerous(x))"
    },
    {
        "NL": "Birds can fly, except for some flightless species such as ostriches and penguins.",
        "FOL": "∀x (Bird(x) → (¬Ostrich(x) ∧ ¬Penguin(x) → CanFly(x)))"
    },
    {
        "NL": "Paintings are created by applying colors to a surface.",
        "FOL": "∀x (Painting(x) → (CreatedBy(y) ∧ Applying(y) ∧ Colors(y) ∧ To(z) ∧ Surface(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "A chemical element that is a good conductor of electricity, has a metallic luster, and is malleable is a metal if it forms cations in ionic compounds.",
        "FOL": "∀x (ChemicalElement(x) ∧ GoodConductorOfElectricity(x) ∧ MetallicLuster(x) ∧ Malleable(x) ∧ FormsCationsInIonicCompounds(x) → Metal(x))"
    },
    {
        "NL": "A child is joyful if and only if he is not upset or is playing.",
        "FOL": "∀x (Child(x) → (Joyful(x) ↔ (¬Upset(x) ∨ Playing(x))))"
    },
    {
        "NL": "All cooks prepared one dish at least.",
        "FOL": "∀x (Cook(x) → ∃y (Dish(y) ∧ Prepare(x, y)))"
    },
    {
        "NL": "An ecosystem thrives if there is a balance of predators and prey, an adequate supply of nutrients, and no overwhelming pollution.",
        "FOL": "∀x (Ecosystem(x) ∧ BalanceOfPredatorsAndPrey(x) ∧ AdequateNutrients(x) ∧ ¬OverwhelmingPollution(x) → Thrives(x))"
    },
    {
        "NL": "A camera captures images, and a printer prints the images on paper.",
        "FOL": "∀x ∀y (Camera(x) ∧ Captures(x, z) ∧ Image(z) ∧ Printer(y) → PrintsOnPaper(y, z))"
    },
    {
        "NL": "An electronic device that receives and displays television signals, consisting of a screen and components for processing and reproducing images and sound, is a television.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ReceivesTelevisionSignals(x) ∧ DisplaysTelevision(x) ∧ Screen(x) ∧ ImageAndSoundProcessing(x) → Television(x))"
    },
    {
        "NL": "A software update is mandatory if it fixes critical security vulnerabilities.",
        "FOL": "∀x (SoftwareUpdate(x) ∧ FixesCriticalSecurityVulnerabilities(x) → Mandatory(x))"
    },
    {
        "NL": "Every student is studying.",
        "FOL": "∀x (Student(x) → Studying(x))"
    },
    {
        "NL": "A chef cooks meals for customers in a restaurant.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Restaurant(z) ∧ In(y, z) → CooksForCustomers(x, y))"
    },
    {
        "NL": "A substance that dissolves in water is soluble.",
        "FOL": "∀x (Substance(x) ∧ DissolvesInWater(x) → Soluble(x))"
    },
    {
        "NL": "If all houses are not made of brick, there is an island that every island leads to it.",
        "FOL": "¬∀x (House(x) → MadeOfBrick(x)) → ∃y (Island(y) ∧ ∀z (Island(z) → LeadsTo(z, y)))"
    },
    {
        "NL": "An item is a slow train only if it is blue.",
        "FOL": "∀x (Slow(x) ∧ Train(x) → Blue(x))"
    },
    {
        "NL": "An item is considered fragile if it can be easily broken.",
        "FOL": "∀x (Item(x) ∧ EasilyBroken(x) → Fragile(x))"
    },
    {
        "NL": "A pharmacy sells prescription and over-the-counter medications, as well as other healthcare products such as vitamins, supplements, and first-aid supplies.",
        "FOL": "∀x∀y (Pharmacy(x) ∧ (Prescription(y) ∨ OverTheCounter(y)) → SellsMedicationsAndHealthcareProducts(x, y))"
    },
    {
        "NL": "In a triangle, the sum of the interior angles is equal to 180 degrees.",
        "FOL": "∀x (Triangle(x) → SumOfInteriorAngles(x, 180))"
    },
    {
        "NL": "An artist creates sculptures or paintings.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ (Sculpture(y) ∨ Painting(z)) → Creates(x, y) ∨ Creates(x, z))"
    },
    {
        "NL": "Mathematicians who solve complex problems often demonstrate exceptional analytical skills and creativity.",
        "FOL": "∀x (Mathematician(x) ∧ SolvesComplexProblems(x) → (ExceptionalAnalyticalSkills(x) ∧ Creativity(x)))"
    },
    {
        "NL": "A scientist is more influential if they have a higher number of citations and more international collaborations than other scientists.",
        "FOL": "∀x∀y (Scientist(x) ∧ Scientist(y) ∧ HigherNumberOfCitations(x, y) ∧ MoreInternationalCollaborations(x, y) → MoreInfluential(x, y))"
    },
    {
        "NL": "A bird capable of mimicking human speech and kept as a pet is a parrot.",
        "FOL": "∀x (Bird(x) ∧ CanMimicHumanSpeech(x) ∧ KeptAsPet(x) → Parrot(x))"
    },
    {
        "NL": "An artist gains recognition if they create unique work, participate in exhibitions, and receive positive reviews.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Work(y) ∧ Exhibitions(z) → (GainsRecognition(x) ↔ (Unique(y) ∧ ParticipatesIn(x, z) ∧ PositiveReviews(x))))"
    },
    {
        "NL": "Lakes are surrounded by land, while islands are surrounded by water.",
        "FOL": "∀x (Lake(x) → SurroundedByLand(x)) ∧ ∀y (Island(y) → SurroundedByWater(y))"
    },
    {
        "NL": "A park allows dogs if they are on a leash and bans them if they are off the leash.",
        "FOL": "∀x ∀y (Park(x) ∧ Dog(y) → (OnLeash(y) → Allows(x, y)) ∧ (OffLeash(y) → Bans(x, y)))"
    },
    {
        "NL": "A building is a skyscraper if it has a significantly tall structure, is used for commercial or residential purposes, and has multiple floors.",
        "FOL": "∀x (Building(x) ∧ SignificantlyTall(x) ∧ (CommercialPurpose(x) ∨ ResidentialPurpose(x)) ∧ MultipleFloors(x) → Skyscraper(x))"
    },
    {
        "NL": "No device is both a phone and a television.",
        "FOL": "¬∃x (Device(x) ∧ Phone(x) ∧ Television(x))"
    },
    {
        "NL": "An art piece is abstract if it lacks recognizable forms or structures.",
        "FOL": "∀x (ArtPiece(x) ∧ ¬(RecognizableForms(x) ∨ RecognizableStructures(x)) → Abstract(x))"
    },
    {
        "NL": "A predator hunts and eats its prey.",
        "FOL": "∀x∀y (Predator(x) ∧ Prey(y) ∧ Hunts(x, y) → Eats(x, y))"
    },
    {
        "NL": "A dish is sweet if it contains sugar or honey as an ingredient.",
        "FOL": "∀x (Dish(x) ∧ (ContainsSugar(x) ∨ ContainsHoney(x)) → Sweet(x))"
    },
    {
        "NL": "A museum becomes renowned by preserving valuable artifacts, conducting research, and offering educational programs.",
        "FOL": "∀x (Museum(x) ∧ PreservesValuableArtifacts(x) ∧ ConductsResearch(x) ∧ OffersEducationalPrograms(x) → Renowned(x))"
    },
    {
        "NL": "A flower is pollinated by insects if it produces nectar, emits a scent, or displays bright colors to attract insects for pollination.",
        "FOL": "∀x∀y (Flower(x) ∧ (ProducesNectar(x) ∨ EmitsScent(x) ∨ DisplaysBrightColors(x)) ∧ AttractsInsectsForPollination(x, y) → PollinatedByInsects(x))"
    },
    {
        "NL": "Birds can fly, but ostriches cannot.",
        "FOL": "∀x (Bird(x) → (¬Ostrich(x) ∧ CanFly(x)) ∨ (Ostrich(x) ∧ ¬CanFly(x)))"
    },
    {
        "NL": "If every triangle is equilateral, then there is a school every child attends.",
        "FOL": "∀x (Triangle(x) → Equilateral(x)) → ∃y (School(y) ∧ ∀z (Child(z) → Attends(z, y)))"
    },
    {
        "NL": "Doctors treat patients, chefs cook meals, and architects design buildings.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Chef(y) ∧ Architect(z) → (TreatsPatients(x) ∧ CooksMeals(y) ∧ DesignsBuildings(z)))"
    },
    {
        "NL": "A disease is contagious if it can spread from one individual to another through direct or indirect contact.",
        "FOL": "∀x (Disease(x) ∧ (DirectContactSpread(x) ∨ IndirectContactSpread(x)) → Contagious(x))"
    },
    {
        "NL": "A sculptor creates sculptures using materials like marble or bronze.",
        "FOL": "∀x∀y∀z (Sculptor(x) ∧ Sculpture(y) ∧ (Marble(z) ∨ Bronze(z)) → CreatesUsing(x, y, z))"
    },
    {
        "NL": "All squares are polygons, but not all polygons are squares.",
        "FOL": "∀x (Square(x) → Polygon(x)) ∧ ¬∀x (Polygon(x) → Square(x))"
    },
    {
        "NL": "A laptop is in sleep mode when it is not in use and not turned off.",
        "FOL": "∀x (Laptop(x) ∧ SleepMode(x) → ¬InUse(x) ∧ ¬TurnedOff(x))"
    },
    {
        "NL": "A camera captures images, has a lens, and uses a sensor.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∧ HasLens(x) ∧ UsesSensor(x)))"
    },
    {
        "NL": "A movie is a comedy or a drama.",
        "FOL": "∀x (Movie(x) → (Comedy(x) ∨ Drama(x)))"
    },
    {
        "NL": "A boy is reading a book in the library in the evening.",
        "FOL": "∃x ∃y ∃z ∃w (Boy(x) ∧ Book(y) ∧ Library(z) ∧ ReadingIn(x, y, z) ∧ Evening(w))"
    },
    {
        "NL": "Refrigerators keep food cold and preserve its freshness.",
        "FOL": "∀x (Refrigerator(x) → (Keep(y) ∧ Food(y) ∧ Cold(y) ∧ Preserve(z) ∧ Freshness(z) ∧ With(x, y, z)))"
    },
    {
        "NL": "Scientists conduct experiments in laboratories to test hypotheses and gather data to support or refute their theories.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Experiment(y) ∧ Laboratory(z) → (Conducts(x, y, z) ∧ TestsHypotheses(x) ∧ GathersData(x) ∧ (SupportsTheories(x) ∨ RefutesTheories(x))))"
    },
    {
        "NL": "A museum displays historical artifacts, artwork, and scientific exhibits, providing opportunities for learning, cultural enrichment, and entertainment.",
        "FOL": "∀x ∀y (Museum(x) → (Displays(x, y) ∧ (HistoricalArtifacts(y) ∨ Artwork(y) ∨ ScientificExhibits(y)) ∧ ProvidesOpportunities(x, Learning) ∧ ProvidesOpportunities(x, CulturalEnrichment) ∧ ProvidesOpportunities(x, Entertainment)))"
    },
    {
        "NL": "A research project is successful when it produces valuable findings, utilizes rigorous methodologies, and contributes to the academic field.",
        "FOL": "∀x∀y∀z∀w (ResearchProject(x) ∧ Findings(y) ∧ Methodologies(z) ∧ AcademicField(w) ∧ Valuable(y) ∧ Rigorous(z) ∧ Contributes(x, w) → Successful(x))"
    },
    {
        "NL": "It isn't true that every small cat is white.",
        "FOL": "¬∀x (Small(x) ∧ Cat(x) → White(x))"
    },
    {
        "NL": "A chef prepares a dish using ingredients according to a recipe if the ingredients are included in the recipe and the chef follows the recipe's instructions.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Dish(y) ∧ Recipe(z) ∧ IngredientsIncluded(y, z) ∧ FollowsInstructions(x, z) → PreparesDish(x, y, z))"
    },
    {
        "NL": "A beverage that contains alcohol and is consumed for its intoxicating effects is an alcoholic drink.",
        "FOL": "∀x (Beverage(x) ∧ ContainsAlcohol(x) ∧ ConsumedForIntoxicatingEffects(x) → AlcoholicDrink(x))"
    },
    {
        "NL": "A scientific study is valid if the research method is rigorous, the sample size is sufficient, and the results are reproducible by other researchers.",
        "FOL": "∀x∀y (ScientificStudy(x) ∧ Researcher(y) → (Valid(x) ↔ (RigorousMethod(x) ∧ SufficientSampleSize(x) ∧ ReproducibleResults(x, y))))"
    },
    {
        "NL": "Not all beverages are alcoholic or non-alcoholic.",
        "FOL": "¬(∀x (Beverage(x) → (Alcoholic(x) ∨ ¬Alcoholic(x))))"
    },
    {
        "NL": "A snail is crawling on a leaf, while a dragonfly is hovering in the pond.",
        "FOL": "∃x ∃y (Snail(x) ∧ Leaf(y) ∧ CrawlingOn(x, y)) ∧ ∃z (Dragonfly(z) ∧ Hovering(z) ∧ InThePond(z))"
    },
    {
        "NL": "Unless a planet is both big and round, it is not Jupiter.",
        "FOL": "∀z (¬(Big(z) ∧ Round(z)) → ¬Jupiter(z))"
    },
    {
        "NL": "A smartphone can make calls or send text messages.",
        "FOL": "∀x (Smartphone(x) → (MakesCalls(x) ∨ SendsTextMessages(x)))"
    },
    {
        "NL": "A beverage that contains caffeine might be coffee or tea.",
        "FOL": "∀x (Beverage(x) ∧ ContainsCaffeine(x) → (Coffee(x) ∨ Tea(x)))"
    },
    {
        "NL": "An investor invests in a startup if it has a unique product, a strong management team, and a large market potential.",
        "FOL": "∀x∀y (Investor(x) ∧ Startup(y) ∧ UniqueProduct(y) ∧ StrongManagementTeam(y) ∧ LargeMarketPotential(y) → Invests(x, y))"
    },
    {
        "NL": "A landform characterized by steep slopes, a narrow crest, and formed by erosion is a ridge.",
        "FOL": "∀x (Landform(x) ∧ SteepSlopes(x) ∧ NarrowCrest(x) ∧ FormedByErosion(x) → Ridge(x))"
    },
    {
        "NL": "No student is both smart and lazy.",
        "FOL": "¬∃x (Student(x) ∧ Smart(x) ∧ Lazy(x))"
    },
    {
        "NL": "A child loves a toy only if the toy brings joy to the child.",
        "FOL": "∀x (Child(x) → ∀y (Toy(y) ∧ Loves(x, y) → BringsJoy(y, x)))"
    },
    {
        "NL": "All chefs who are creative and meticulous are successful.",
        "FOL": "∀x (Chef(x) ∧ IsCreative(x) ∧ IsMeticulous(x) → IsSuccessful(x))"
    },
    {
        "NL": "A planet x supports life form y if the atmospheric conditions and temperature are suitable for the survival of that life form.",
        "FOL": "∀x ∀y (Planet(x) ∧ LifeForm(y) ∧ SuitableAtmosphericConditions(x, y) ∧ SuitableTemperature(x, y) → Supports(x, y))"
    },
    {
        "NL": "When a volcano erupts, molten rock called magma rises to the surface, where it cools and solidifies, forming new land, while also releasing gases such as sulfur dioxide and carbon dioxide into the atmosphere.",
        "FOL": "∀x∀y∀z (VolcanoEruption(x) ∧ Magma(y) ∧ Surface(z) → (MagmaRisesToSurface(y, z) ∧ CoolsAndSolidifies(y, z) ∧ FormsNewLand(z) ∧ ReleasesSulfurDioxideAndCarbonDioxide(x)))"
    },
    {
        "NL": "A well-functioning public transportation system includes efficient bus routes, reliable train services, and accessible infrastructure for people with disabilities.",
        "FOL": "∀x∀y∀z (PublicTransportationSystem(x) ∧ EfficientBusRoutes(x, y) ∧ ReliableTrainServices(x, y) ∧ AccessibleInfrastructureForPeopleWithDisabilities(x, z) → WellFunctioning(x))"
    },
    {
        "NL": "A coffee shop serves a variety of hot and cold beverages, such as coffee, tea, and smoothies.",
        "FOL": "∀x (CoffeeShop(x) → (ServesHotAndColdBeverages(x) ∧ OffersCoffeeTeaSmoothies(x)))"
    },
    {
        "NL": "If something is a fruit, it is either sweet or sour.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "A road that connects two cities is a highway or an expressway.",
        "FOL": "∀x ∀y ∀z (Road(x) ∧ ConnectsCities(x, y, z) → (Highway(x) ∨ Expressway(x)))"
    },
    {
        "NL": "In a symphony orchestra, musicians play different instruments to create harmonious music.",
        "FOL": "∀x ∀y (SymphonyOrchestra(x) ∧ Musician(y) ∧ MemberOf(y, x) → PlaysInstrument(y) ∧ ContributesToHarmony(y, x))"
    },
    {
        "NL": "No birds are flying.",
        "FOL": "¬∃x (Bird(x) ∧ Flying(x))"
    },
    {
        "NL": "A cat is sleeping on a mat in the living room.",
        "FOL": "∃x ∃y ∃z (Cat(x) ∧ Mat(y) ∧ LivingRoom(z) ∧ SleepingOn(x, y, z) ∧ InTheRoom(x))"
    },
    {
        "NL": "Books are considered fiction if their content is based on imagination and do not represent actual facts.",
        "FOL": "∀x (Book(x) ∧ ImaginationBased(x) ∧ ¬RepresentsFacts(x) → Fiction(x))"
    },
    {
        "NL": "A plant that thrives in environments with ample sunlight, requires a specific type of soil for optimal growth, and produces edible fruit is a fruit-bearing plant.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ Environment(y) ∧ Soil(z) ∧ ThrivesInSunlight(x) ∧ RequiresSpecificSoil(x, z) ∧ GrowsIn(x, y) ∧ ProducesEdibleFruit(x) → FruitBearingPlant(x))"
    },
    {
        "NL": "A rectangle has parallel opposite sides, but a trapezoid has only one pair of parallel sides.",
        "FOL": "∀x∀y (Rectangle(x) ∧ Trapezoid(y) → (HasParallelOppositeSides(x) ∧ ¬HasParallelOppositeSides(y) ∧ HasOnePairParallelSides(y)))"
    },
    {
        "NL": "A space probe gathers data from a celestial object when it orbits the object and has the necessary instruments to collect and transmit information.",
        "FOL": "∀x ∀y (SpaceProbe(x) ∧ CelestialObject(y) ∧ Orbits(x, y) ∧ HasNecessaryInstruments(x) ∧ CanCollectAndTransmitInfo(x) → GathersData(x, y))"
    },
    {
        "NL": "Every car has a powerful engine and is equipped with safety features.",
        "FOL": "∀x (Car(x) → (HasPowerfulEngine(x) ∧ HasSafetyFeatures(x)))"
    },
    {
        "NL": "A smartphone is waterproof if it can withstand immersion in water without suffering damage.",
        "FOL": "∀x (Waterproof(x) ↔ (Smartphone(x) ∧ ∀y (Water(y) ∧ ImmersedIn(x, y) → ¬SuffersDamage(x))))"
    },
    {
        "NL": "A mammal is either a herbivore, carnivore, or omnivore, but cannot be more than one category simultaneously.",
        "FOL": "∀x (Mammal(x) → (Herbivore(x) ⊕ Carnivore(x) ⊕ Omnivore(x)))"
    },
    {
        "NL": "A university has professors who teach students, researchers who conduct studies, and libraries that store resources.",
        "FOL": "∀x ∀y ∀z ∀w (University(x) → (Professor(y) ∧ WorksIn(y, x) ∧ TeachesStudents(y)) ∧ (Researcher(z) ∧ WorksIn(z, x) ∧ ConductsStudies(z)) ∧ (Library(w) ∧ PartOf(w, x) ∧ StoresResources(w)))"
    },
    {
        "NL": "A city is considered safe if the crime rate is low and there is an effective emergency response system.",
        "FOL": "∀x (City(x) → (LowCrimeRate(x) ∧ EffectiveEmergencyResponse(x) → Safe(x)))"
    },
    {
        "NL": "A beverage is either cold and non-alcoholic, or warm and alcoholic.",
        "FOL": "∀x (Beverage(x) → ((Cold(x) ∧ ¬Alcoholic(x)) ⊕ (Warm(x) ∧ Alcoholic(x))))"
    },
    {
        "NL": "An artwork can be created with paint or digital tools, but not both simultaneously.",
        "FOL": "∀x (Artwork(x) → (CreatedWithPaint(x) ⊕ CreatedWithDigitalTools(x)))"
    },
    {
        "NL": "All birds are not flying if it is not a penguin.",
        "FOL": "¬∀x (Bird(x) → ¬(Flying(x) ↔ Penguin(x)))"
    },
    {
        "NL": "An electronic device consumes power when it is turned on and connected to a power source.",
        "FOL": "∀x ∀y (ElectronicDevice(x) ∧ TurnedOn(x) ∧ ConnectedToPowerSource(x, y) → ConsumesPower(x, y))"
    },
    {
        "NL": "A building is a skyscraper if it has numerous floors, is significantly taller than its surrounding structures, and serves as a commercial or residential space.",
        "FOL": "∀x (Building(x) ∧ NumerousFloors(x) ∧ SignificantlyTallerThanSurroundings(x) ∧ (CommercialSpace(x) ∨ ResidentialSpace(x)) → Skyscraper(x))"
    },
    {
        "NL": "A poet writes poems, often using figurative language and expressive imagery to convey emotions or ideas.",
        "FOL": "∀x (Poet(x) → (WritesPoems(x) ∧ UsesFigurativeLanguage(x) ∧ UsesExpressiveImagery(x)))"
    },
    {
        "NL": "A cake is delicious if and only if it is sweet and freshly baked.",
        "FOL": "∀x (Cake(x) → (Delicious(x) ↔ (Sweet(x) ∧ FreshlyBaked(x))))"
    },
    {
        "NL": "An individual is labeled a student if they study in a school or a university.",
        "FOL": "∀x (Individual(x) ∧ (StudiesInSchool(x) ∨ StudiesInUniversity(x)) → Student(x))"
    },
    {
        "NL": "A car needs fuel to move.",
        "FOL": "∀x (Car(x) ∧ NeedsFuelToMove(x))"
    },
    {
        "NL": "There is no sphere that points to all red cubes.",
        "FOL": "¬∃x (Sphere(x) → ∀y (Red(y) ∧ Cube(y) → PointsTo(x, y)))"
    },
    {
        "NL": "Something is a sparkly star, and something is a dull square.",
        "FOL": "∃x (Sparkly(x) ∧ Star(x)) ∧ ∃x (Dull(x) ∧ Square(x))"
    },
    {
        "NL": "A book is written in a specific language, has a certain number of pages, and can be fiction xor non-fiction.",
        "FOL": "∀x (Book(x) → (∃y Language(y) ∧ WrittenIn(x, y) ∧ (∃z NumberOfPages(z) ∧ HasPages(x, z)) ∧ (Fiction(x) ⊕ NonFiction(x))))"
    },
    {
        "NL": "An electronic device is considered a smartphone if it can make calls, send messages, and access the internet.",
        "FOL": "∀x (CanMakeCalls(x) ∧ CanSendMessages(x) ∧ CanAccessInternet(x) → Smartphone(x))"
    },
    {
        "NL": "An electronic device with a low battery life requires more frequent charging.",
        "FOL": "∀x (ElectronicDevice(x) ∧ LowBatteryLife(x) → RequiresMoreFrequentCharging(x))"
    },
    {
        "NL": "There isn't a painter who can paint all French landscapes but hasn't ever painted a Spanish landscape.",
        "FOL": "¬∃x (Painter(x) ∧ ∀y (FrenchLandscape(y) → CanPaint(x, y)) ∧ ¬∃z (SpanishLandscape(z) ∧ Painted(x, z)))"
    },
    {
        "NL": "A musician is versatile if they can play multiple instruments and perform in different genres.",
        "FOL": "∀x (Musician(x) → (Versatile(x) ↔ (PlaysMultipleInstruments(x) ∧ PerformsInDifferentGenres(x))))"
    },
    {
        "NL": "A watch that is waterproof and has a built-in GPS system is useful for outdoor enthusiasts and athletes.",
        "FOL": "∀x (Watch(x) ∧ Waterproof(x) ∧ BuiltInGPS(x) → UsefulForOutdoorEnthusiastsAndAthletes(x))"
    },
    {
        "NL": "A tourist can visit a city for sightseeing or shopping, but not for both purposes during the same trip.",
        "FOL": "∀x∀y (Tourist(x) ∧ City(y) ∧ Visits(x, y) → (ForSightseeing(x, y) ⊕ ForShopping(x, y)))"
    },
    {
        "NL": "A roller coaster is an amusement park ride that consists of a track with tight turns, steep slopes, and sometimes inversions.",
        "FOL": "∀x (RollerCoaster(x) → (AmusementParkRide(x) ∧ ConsistsOfTrack(x) ∧ TightTurns(x) ∧ SteepSlopes(x) ∧ SometimesInversions(x)))"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects for nutrients, enabling it to thrive in nutrient-poor environments.",
        "FOL": "∀x∀y (CarnivorousPlant(x) ∧ CapturesAndConsumes(x, y) ∧ Insect(y) → ThrivesInNutrientPoorEnvironment(x))"
    },
    {
        "NL": "A bus transports multiple passengers, operates on a fixed route, and is not a taxi.",
        "FOL": "∀x (Bus(x) ↔ (TransportsPassengers(x) ∧ FixedRoute(x) ∧ ¬Taxi(x)))"
    },
    {
        "NL": "A fruit is considered ripe when it has reached its full color and has a pleasant taste and aroma.",
        "FOL": "∀x ((ReachedFullColor(x) ∧ PleasantTaste(x) ∧ PleasantAroma(x)) → RipeFruit(x))"
    },
    {
        "NL": "A company that produces electronics and operates globally is a multinational corporation or a startup with rapid growth.",
        "FOL": "∀x (Company(x) ∧ ProducesElectronics(x) ∧ OperatesGlobally(x) → (MultinationalCorporation(x) ∨ RapidGrowthStartup(x)))"
    },
    {
        "NL": "Some trees are tall and some trees are short, but there are no tall short trees.",
        "FOL": "∃x (Tall(x)) ∧ ∃x (Short(x)) ∧ ¬∃x (Tall(x) ∧ Short(x))"
    },
    {
        "NL": "A laptop can be used for work or entertainment, while a television is mainly used for watching shows and movies.",
        "FOL": "∀x∀y (Laptop(x) → (UsedForWork(x) ∨ UsedForEntertainment(x))) ∧ (Television(y) → UsedForWatchingShowsAndMovies(y))"
    },
    {
        "NL": "A vehicle is a bicycle when it has two wheels, is powered by pedals, and doesn't need fuel.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) ∧ IsPoweredByPedals(x) ∧ ¬NeedFuel(x) → Bicycle(x))"
    },
    {
        "NL": "If an individual demonstrates strong leadership skills, they are more likely to motivate and inspire others.",
        "FOL": "∀x (StrongLeadershipSkills(x) → (MotivateOthers(x) ∧ InspireOthers(x)))"
    },
    {
        "NL": "A tree loses its leaves during autumn if it is deciduous.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → LosesLeavesDuringAutumn(x))"
    },
    {
        "NL": "A bicycle has two wheels, and a tricycle has three wheels.",
        "FOL": "∀x ∀y (Bicycle(x) ∧ Tricycle(y) → (Wheels(x, 2) ∧ Wheels(y, 3)))"
    },
    {
        "NL": "A city is considered a metropolis if it has a large population, extensive infrastructure, and a diverse economy.",
        "FOL": "∀x (City(x) → (Metropolis(x) ↔ (LargePopulation(x) ∧ ExtensiveInfrastructure(x) ∧ DiverseEconomy(x))))"
    },
    {
        "NL": "A river flows into a larger body of water, such as a lake or an ocean.",
        "FOL": "∀x∀y (River(x) ∧ (Lake(y) ∨ Ocean(y)) → FlowsInto(x, y))"
    },
    {
        "NL": "Glasses help people see better, whereas hearing aids help people hear better.",
        "FOL": "∀x ∀y ((Glasses(x) → HelpsSeeBetter(x)) ∧ ¬(HearingAid(y) → HelpsSeeBetter(y))) ∨ (HearingAid(y) → HelpsHearBetter(y))"
    },
    {
        "NL": "Microscopes magnify small objects for detailed observation.",
        "FOL": "∀x (Microscope(x) → (Magnify(y) ∧ SmallObjects(y) ∧ DetailedObservation(x, y)))"
    },
    {
        "NL": "A vehicle that uses solar power does not use gasoline.",
        "FOL": "∀x (Vehicle(x) ∧ SolarPower(x) → ¬Gasoline(x))"
    },
    {
        "NL": "A sandwich consists of bread, filling, and optional condiments, but not any other ingredients.",
        "FOL": "∀x (Sandwich(x) → (HasBread(x) ∧ HasFilling(x) ∧ (HasCondiments(x) ⊕ ¬HasCondiments(x)) ∧ ¬HasOtherIngredients(x)))"
    },
    {
        "NL": "All cats are neither threatening nor inactive.",
        "FOL": "∃x (Cat(x) ∧ (¬Threatening(x) ∨ ¬Inactive(x)))"
    },
    {
        "NL": "If a vehicle has two wheels and is powered by a motor, it is considered a motorcycle.",
        "FOL": "∀x ((TwoWheels(x) ∧ PoweredByMotor(x)) → Motorcycle(x))"
    },
    {
        "NL": "A video game becomes a hit if it has engaging gameplay, stunning graphics, and a compelling story.",
        "FOL": "∀x (VideoGame(x) ∧ HasEngagingGameplay(x) ∧ HasStunningGraphics(x) ∧ HasCompellingStory(x) → BecomesHit(x))"
    },
    {
        "NL": "Not every insect that can crawl is a beetle.",
        "FOL": "¬∀x (Insect(x) ∧ CanCrawl(x) → Beetle(x))"
    },
    {
        "NL": "A hotel is luxurious if and only if it is not less than 5 stars or has exactly 5 stars.",
        "FOL": "∀x (Hotel(x) → (Luxurious(x) ↔ (¬LessThanFiveStars(x) ∨ EqualToFiveStars(x))))"
    },
    {
        "NL": "A television displays video content.",
        "FOL": "∀x (Television(x) → DisplaysVideoContent(x))"
    },
    {
        "NL": "An athlete qualifies for a national team if they meet the age criteria, have a minimum level of performance, and adhere to the team's code of conduct.",
        "FOL": "∀x ∀y (Athlete(x) ∧ NationalTeam(y) ∧ MeetsAgeCriteria(x, y) ∧ MinimumPerformance(x, y) ∧ AdheresToCodeOfConduct(x, y) → QualifiesFor(x, y))"
    },
    {
        "NL": "It's incorrect to assume every car that can race is a Ferrari, and no such car can float.",
        "FOL": "¬∀x (Car(x) ∧ CanRace(x) → Ferrari(x)) ∧ ¬∃y (Car(y) ∧ CanRace(y) ∧ CanFloat(y))"
    },
    {
        "NL": "There is not a book that contains all known words.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Word(y) → Contains(x, y)))"
    },
    {
        "NL": "A product is environmentally friendly if it is made from sustainable materials or reduces waste, and it is not harmful to the ecosystem.",
        "FOL": "∀x (Product(x) → ((MadeFromSustainableMaterials(x) ∨ ReducesWaste(x)) ∧ ¬HarmfulToEcosystem(x)) ↔ EnvironmentallyFriendly(x))"
    },
    {
        "NL": "A computer can access the internet if it has an active network connection and is not blocked by a firewall.",
        "FOL": "∀x (Computer(x) → (ActiveNetworkConnection(x) ∧ ¬BlockedByFirewall(x) → CanAccessInternet(x)))"
    },
    {
        "NL": "A triangle points to a circle only if that circle points back to it.",
        "FOL": "∀x (Triangle(x) → ∀y (Circle(y) ∧ Points(x, y) → Points(y, x)))"
    },
    {
        "NL": "A job that requires a degree in engineering or mathematics is often well-paid.",
        "FOL": "∀x (Job(x) ∧ (RequiresDegreeInEngineering(x) ∨ RequiresDegreeInMathematics(x)) → WellPaid(x))"
    },
    {
        "NL": "All dogs have a tail and a snout.",
        "FOL": "∀x (Dog(x) → (HasTail(x) ∧ HasSnout(x)))"
    },
    {
        "NL": "A business is considered profitable if its revenues exceed expenses over a specific period.",
        "FOL": "∀x (Business(x) ∧ RevenuesExceedExpenses(x) → Profitable(x))"
    },
    {
        "NL": "A book is a novel if it is a work of fiction, contains a narrative, and is written in prose.",
        "FOL": "∀x (Book(x) ∧ Fiction(x) ∧ ContainsNarrative(x) ∧ WrittenInProse(x) → Novel(x))"
    },
    {
        "NL": "A thermometer measures temperature by the expansion or contraction of a substance in response to heat.",
        "FOL": "∀x (Thermometer(x) → MeasuresTemperatureByExpansionOrContraction(x))"
    },
    {
        "NL": "Every car honks, but not everything that honks is a car.",
        "FOL": "∀x (Car(x) → Honks(x)) ∧ ¬∀x (Honks(x) → Car(x))"
    },
    {
        "NL": "A plant x pollinates another plant y if x and y belong to the same species and are in close proximity.",
        "FOL": "∀x ∀y (Plant(x) ∧ Plant(y) ∧ SameSpecies(x, y) ∧ CloseProximity(x, y) → Pollinates(x, y))"
    },
    {
        "NL": "A train travels between stations, stopping at each one to allow passengers to board and disembark.",
        "FOL": "∀x (Train(x) → (∃y ∃z (Station(y) ∧ Station(z) ∧ TravelsBetween(x, y, z) ∧ StopsAt(x, y) ∧ BoardDisembarkPassengers(x, y))))"
    },
    {
        "NL": "All cats that are not brown or white are Maine Coons.",
        "FOL": "∀x ((Cat(x) ∧ ¬(Brown(x) ∨ White(x))) → MaineCoon(x))"
    },
    {
        "NL": "A car has a specific make, model, and year of production.",
        "FOL": "∀x (Car(x) → (∃y Make(y) ∧ HasMake(x, y)) ∧ (∃z Model(z) ∧ HasModel(x, z)) ∧ (∃w YearOfProduction(w) ∧ ProducedIn(x, w)))"
    },
    {
        "NL": "No movie is enjoyable except it is thought-provoking.",
        "FOL": "∀x (EnjoyableMovie(x) ↔ ThoughtProvoking(x))"
    },
    {
        "NL": "Something is a large rectangle only if it is red.",
        "FOL": "∀x (Large(x) ∧ Rectangle(x) → Red(x))"
    },
    {
        "NL": "A dog is a domesticated animal.",
        "FOL": "∀x (Dog(x) → DomesticatedAnimal(x))"
    },
    {
        "NL": "A bag can hold a laptop or a tablet, but not both.",
        "FOL": "∃x (Bag(x) ∧ (HoldsLaptop(x) ∧ ¬HoldsTablet(x) ∨ (¬HoldsLaptop(x) ∧ HoldsTablet(x))))"
    },
    {
        "NL": "A document is a passport when it is issued by a government, validating identity and allowing international travel.",
        "FOL": "∀x (Document(x) ∧ IssuedByGovernment(x) ∧ ValidatesIdentity(x) ∧ AllowsInternationalTravel(x) → Passport(x))"
    },
    {
        "NL": "A celestial object that revolves around a planet and does not emit its own light is a moon.",
        "FOL": "∀x∀y (CelestialObject(x) ∧ RevolvesAround(x, y) ∧ Planet(y) ∧ ¬EmitsOwnLight(x) → Moon(x))"
    },
    {
        "NL": "An organism that can produce its own food through photosynthesis is a producer.",
        "FOL": "∀x (Organism(x) ∧ CanProduceOwnFoodThroughPhotosynthesis(x) → Producer(x))"
    },
    {
        "NL": "A candle emits light through flame, while a flashlight does so with a bulb.",
        "FOL": "∀x∀y (Candle(x) ∧ Flashlight(y) → (EmitsLightFlame(x) ∨ EmitsLightBulb(y)))"
    },
    {
        "NL": "A form of government where a single ruler has absolute power is a monarchy.",
        "FOL": "∀x (FormOfGovernment(x) ∧ SingleRuler(x) ∧ HasAbsolutePower(x) → Monarchy(x))"
    },
    {
        "NL": "An astronaut requires a spacesuit to survive in space.",
        "FOL": "∀x ∀y (Astronaut(x) ∧ Space(y) → (RequiresSpacesuit(x) → SurvivesIn(x, y)))"
    },
    {
        "NL": "A school educates students, while a college educates graduates.",
        "FOL": "∃x ∃y (School(x) ∧ Students(y) ∧ Educates(x, y)) ∧ ∃z ∃w (College(z) ∧ Graduates(w) ∧ Educates(z, w))"
    },
    {
        "NL": "All roses are flowering plants.",
        "FOL": "∀x (Rose(x) → FloweringPlant(x))"
    },
    {
        "NL": "Hospitals treat patients and aim to improve their health.",
        "FOL": "∀x∀y (Hospital(x) ∧ Patient(y) → (Treats(x, y) ∧ AimsToImproveHealth(x, y)))"
    },
    {
        "NL": "A crop needs nutrition, light, and fertile ground to grow adequately.",
        "FOL": "∀x (Crop(x) → (ReceivesNutrition(x) ∧ ReceivesLight(x) ∧ OnFertileGround(x)) → GrowsAdequately(x))"
    },
    {
        "NL": "Some materials are conductors of electricity, while all others insulate it.",
        "FOL": "∀x (Material(x) → (Conductor(x) ⊕ Insulator(x)))"
    },
    {
        "NL": "A gadget that is compatible with multiple devices, easy to set up, and provides useful functionality is considered versatile.",
        "FOL": "∀x ∀y ∀z (Gadget(x) ∧ CompatibleWithMultipleDevices(x, y) ∧ EasyToSetUp(x) ∧ ProvidesUsefulFunctionality(x) → ConsideredVersatile(x, z))"
    },
    {
        "NL": "A museum exhibits artworks that are created by artists and curated by experts in a specific field.",
        "FOL": "∀x∀y∀z (Museum(x) ∧ Artwork(y) ∧ Artist(z) ∧ CreatedBy(y, z) ∧ CuratedByExpertsInField(y) → Exhibits(x, y))"
    },
    {
        "NL": "A bicycle is ridden on land and powered by human effort, while a motorboat operates on water and is fueled by a motor.",
        "FOL": "∀x ∀y (Bicycle(x) ∧ Motorboat(y) → ((RiddenOnLand(x) ∧ PoweredByHumanEffort(x)) ∧ (OperatesOnWater(y) ∧ FueledByMotor(y))))"
    },
    {
        "NL": "A recipe is easy to prepare if it requires few ingredients and has simple cooking instructions.",
        "FOL": "∀x (Recipe(x) → (EasyToPrepare(x) ↔ (RequiresFewIngredients(x) ∧ SimpleCookingInstructions(x))))"
    },
    {
        "NL": "An item is fragile or expensive, but not both.",
        "FOL": "∀x (Item(x) → ((Fragile(x) ∨ Expensive(x)) ∧ ¬(Fragile(x) ∧ Expensive(x))))"
    },
    {
        "NL": "Rain can be light, moderate, or heavy, depending on the intensity of the precipitation.",
        "FOL": "∀x (Rain(x) → (Light(x) ⊕ Moderate(x) ⊕ Heavy(x)))"
    },
    {
        "NL": "An object is defined as a musical instrument when it is used to produce musical sounds.",
        "FOL": "∀x (Object(x) ∧ UsedToProduceMusicalSounds(x) → MusicalInstrument(x))"
    },
    {
        "NL": "A chemical element is either a metal or a non-metal, but not both.",
        "FOL": "∀x (ChemicalElement(x) → (Metal(x) ⊕ NonMetal(x)))"
    },
    {
        "NL": "Every actor who acts in both theatre and films, unless they are a director, has either won an award or has not audition for an advertising commercial.",
        "FOL": "∀x (Actor(x) ∧ ActsTheatre(x) ∧ ActsFilms(x) ∨ Director(x) → (WonAward(x) ∨ ¬AuditionedAdvertisingCommercials(x)))"
    },
    {
        "NL": "There is no big square that is not orange.",
        "FOL": "¬∃x (Big(x) ∧ Square(x) ∧ ¬Orange(x))"
    },
    {
        "NL": "Paul values an antique car if and only if it was produced before 1960.",
        "FOL": "∀w (Car(w) ∧ IsAntique(w) → (ProducedBeforenineteensixty(w) ↔ Value(paul, w)))"
    },
    {
        "NL": "A chef can prepare various dishes using different cooking techniques, such as frying, baking, or grilling.",
        "FOL": "∀x∀y (Chef(x) ∧ (Frying(y) ∨ Baking(y) ∨ Grilling(y)) → CanPrepareDishesUsingTechniques(x, y))"
    },
    {
        "NL": "An umbrella protects against rain, while a sunscreen lotion helps prevent sunburn.",
        "FOL": "∀x (Umbrella(x) → ProtectsAgainstRain(x)) ∧ ∀y (SunscreenLotion(y) → PreventsSunburn(y))"
    },
    {
        "NL": "An engaging speaker maintains eye contact, speaks clearly, and tells interesting stories.",
        "FOL": "∀x (Speaker(x) → (MaintainsEyeContact(x) ∧ SpeaksClearly(x) ∧ TellsInterestingStories(x) → Engaging(x)))"
    },
    {
        "NL": "A prism can separate white light into its constituent colors, due to the dispersion of light as it passes through the material.",
        "FOL": "∀x (Prism(x) → (SeparatesWhiteLightIntoConstituentColors(x) ∧ DueToDispersionOfLight(x)))"
    },
    {
        "NL": "Every liquid is mixable in some solid.",
        "FOL": "∀x (Liquid(x) → ∃y (Solid(y) ∧ MixableIn(x, y)))"
    },
    {
        "NL": "A person is a nurse if they are trained and licensed to provide healthcare support to patients under the supervision of doctors or other healthcare professionals.",
        "FOL": "∀x (Nurse(x) ↔ (Person(x) ∧ Trained(x) ∧ Licensed(x) ∧ ProvidesHealthcareSupport(x) ∧ ∃y (HealthcareProfessional(y) ∧ SupervisedBy(x, y))))"
    },
    {
        "NL": "Every tree is a living entity.",
        "FOL": "∀x (Tree(x) → LivingEntity(x))"
    },
    {
        "NL": "All flowers have petals and a reproductive structure.",
        "FOL": "∀x (Flower(x) → (HasPetals(x) ∧ ReproductiveStructure(x)))"
    },
    {
        "NL": "A computer has a motherboard if it can process data, execute programs, and save files.",
        "FOL": "∀x (Computer(x) ∧ CanProcessData(x) ∧ CanExecutePrograms(x) ∧ CanSaveFiles(x) → HasMotherboard(x))"
    },
    {
        "NL": "Snow is cold.",
        "FOL": "∀x (Snow(x) → Cold(x))"
    },
    {
        "NL": "An impressive piece of literature explores thought-provoking themes, showcases the author's unique writing style, and offers strong character development.",
        "FOL": "∀x (Literature(x) ∧ ThoughtProvokingThemes(x) ∧ UniqueWritingStyle(x) ∧ StrongCharacterDevelopment(x) → Impressive(x))"
    },
    {
        "NL": "A musical instrument is suitable for beginners if it is affordable, easy to learn, and has available learning resources.",
        "FOL": "∀x (MusicalInstrument(x) ∧ SuitableForBeginners(x) ↔ (Affordable(x) ∧ EasyToLearn(x) ∧ HasLearningResources(x)))"
    },
    {
        "NL": "Birds can fly, but elephants cannot.",
        "FOL": "∀x (Bird(x) → CanFly(x)) ∧ ∀y (Elephant(y) → ¬CanFly(y))"
    },
    {
        "NL": "A person can be a teacher, a lawyer, or a doctor based on his/her profession.",
        "FOL": "∀x (Person(x) → (Teacher(x) ∨ Lawyer(x) ∨ Doctor(x)))"
    },
    {
        "NL": "A person is a teacher if they educate and instruct students in a specific subject or skill.",
        "FOL": "∀x (Teacher(x) ↔ (Person(x) ∧ Educates(x) ∧ Instructs(x) ∧ ∃y (SubjectOrSkill(y) ∧ Teaches(x, y))))"
    },
    {
        "NL": "If an athlete is part of a team, they play football or basketball.",
        "FOL": "∀x (Athlete(x) ∧ PartOfTeam(x) → Football(x) ∨ Basketball(x))"
    },
    {
        "NL": "A drink is hot, cold, or room temperature, but not two or more at the same time.",
        "FOL": "∀x (Drink(x) → ((IsHot(x) ⊕ IsCold(x) ⊕ IsRoomTemperature(x)) ∧ ¬(IsHot(x) ∧ IsCold(x) ∧ IsRoomTemperature(x))))"
    },
    {
        "NL": "A movie becomes a blockbuster if it has a high budget, an all-star cast, and receives positive reviews.",
        "FOL": "∀x∀y (Movie(x) ∧ HighBudget(x) ∧ AllStarCast(x) ∧ PositiveReview(y, x) → Blockbuster(x))"
    },
    {
        "NL": "If a person is an architect, they must design buildings and oversee their construction.",
        "FOL": "∀x (Architect(x) → (DesignsBuildings(x) ∧ OverseesConstruction(x)))"
    },
    {
        "NL": "A museum that features interactive exhibits, guided tours, and engaging displays can attract more visitors.",
        "FOL": "∀x (Museum(x) ∧ InteractiveExhibits(x) ∧ GuidedTours(x) ∧ EngagingDisplays(x) → AttractsMoreVisitors(x))"
    },
    {
        "NL": "A musical instrument produces sound through strings or percussion, but not both.",
        "FOL": "∀x∀y∀z (MusicalInstrument(x) ∧ Strings(y) ∧ Percussion(z) → (ProducesSound(x, y) ⊕ ProducesSound(x, z)))"
    },
    {
        "NL": "Libraries contain books and offer resources for research and learning.",
        "FOL": "∀x (Library(x) → (ContainsBooks(x) ∧ OffersResearchResources(x) ∧ OffersLearningResources(x)))"
    },
    {
        "NL": "A vehicle is considered an electric car if it runs on electricity and has no internal combustion engine.",
        "FOL": "∀x (Vehicle(x) → (ElectricCar(x) ↔ (RunsOnElectricity(x) ∧ ¬HasInternalCombustionEngine(x))))"
    },
    {
        "NL": "A person who practices law and provides legal advice is called a lawyer.",
        "FOL": "∀x (PracticesLaw(x) ∧ ProvidesLegalAdvice(x) → Lawyer(x))"
    },
    {
        "NL": "Authors write books, and readers read them.",
        "FOL": "∀x ∀y (Author(x) ∧ Book(y) → Writes(x, y)) ∧ ∀z ∀w (Reader(z) ∧ Book(w) → Reads(z, w))"
    },
    {
        "NL": "A person is eligible for senior discounts if they are at least 65 years old or a member of a senior organization.",
        "FOL": "∀x (Person(x) ∧ EligibleForSeniorDiscounts(x) ↔ (AtLeast65YearsOld(x) ∨ MemberOfSeniorOrganization(x)))"
    },
    {
        "NL": "Every book is either on the shelf or in the desk.",
        "FOL": "∀x (Book(x) → (OnShelf(x) ⊕ InDesk(x)))"
    },
    {
        "NL": "An endangered species faces a high risk of extinction.",
        "FOL": "∀x (EndangeredSpecies(x) → HighRiskOfExtinction(x))"
    },
    {
        "NL": "Pollination is a process through which pollen is transferred from the male reproductive organs to the female reproductive organs of a plant, enabling fertilization and seed production.",
        "FOL": "∀x (Pollination(x) ↔ (Process(x) ∧ TransfersPollen(x) ∧ MaleReproductiveOrgan(x) ∧ FemaleReproductiveOrgan(x) ∧ EnablesFertilizationAndSeedProduction(x)))"
    },
    {
        "NL": "A battery provides electrical energy.",
        "FOL": "∀x (Battery(x) → ProvidesElectricalEnergy(x))"
    },
    {
        "NL": "A beach is suitable for swimming if the water is clean and there are no dangerous marine animals.",
        "FOL": "∀x (Beach(x) ∧ SuitableForSwimming(x) → (CleanWater(x) ∧ ¬DangerousMarineAnimals(x)))"
    },
    {
        "NL": "A teacher instructs a student only if that student listens to them.",
        "FOL": "∀x ∀y (Teacher(x) ∧ Student(y) ∧ (Instructs(x, y) → Listens(y, x)))"
    },
    {
        "NL": "An enduring fuel supply is perpetually produced, reducing the likelihood of running out and mitigating hazard to the environment.",
        "FOL": "∀x (EnduringFuelSupply(x) → (PerpetuallyProduced(x) ∧ ReducedLikelihoodOfRunningOut(x) ∧ MitigatedHazardToEnvironment(x)))"
    },
    {
        "NL": "A lake is freshwater, an ocean is saltwater, and a river is freshwater.",
        "FOL": "∀x∀y∀z (Lake(x) → Freshwater(x)) ∧ (Ocean(y) → Saltwater(y)) ∧ (River(z) → Freshwater(z))"
    },
    {
        "NL": "A job is desirable if it has high pay and flexible hours, but not if it requires long commutes.",
        "FOL": "∀x (Job(x) ∧ Desirable(x) ↔ (HighPay(x) ∧ FlexibleHours(x) ∧ ¬LongCommutes(x)))"
    },
    {
        "NL": "A store is appealing if it offers a wide variety of products and has a pleasant shopping environment.",
        "FOL": "∀x (Store(x) ∧ WideVarietyOfProducts(x) ∧ PleasantEnvironment(x) → Appealing(x))"
    },
    {
        "NL": "John owns a cat or a dog, but not both.",
        "FOL": "∃x (Cat(x) ∨ Dog(x)) ∧ (Cat(x) ⊕ Dog(x)) ∧ Owns(John, x)"
    },
    {
        "NL": "A celestial object that is a planet orbits a star and has a stable, nearly round shape.",
        "FOL": "∀x (CelestialObject(x) ∧ Planet(x) → OrbitsStar(x) ∧ StableNearlyRoundShape(x))"
    },
    {
        "NL": "A renewable energy source is constantly produced, decreasing the risk of depletion and lessening ecological damage.",
        "FOL": "∀x (RenewableEnergySource(x) → (ConstantlyProduced(x) ∧ DecreasedRiskOfDepletion(x) ∧ LessenedEcologicalDamage(x)))"
    },
    {
        "NL": "Books in a library are organized by subject and author, making it easier for people to find what they are looking for.",
        "FOL": "∀x∀y (Book(x) ∧ Library(y) ∧ OrganizedBySubjectAndAuthor(x, y) → EasierToFind(x))"
    },
    {
        "NL": "A shelter provides protection when it is sturdy or obscured.",
        "FOL": "∀x (Shelter(x) ∧ (Sturdy(x) ∨ Obscured(x)) → ProvidesProtection(x))"
    },
    {
        "NL": "In a democracy, citizens vote to elect representatives, while in a monarchy, the ruler inherits power.",
        "FOL": "∀x ∀y (Democracy(x) ∧ Monarchy(y) → (CitizensVoteToElectRepresentatives(x) ∧ RulerInheritsPower(y)))"
    },
    {
        "NL": "Something is a rectangular table only if it is brown.",
        "FOL": "∀x (Rectangular(x) ∧ Table(x) → Brown(x))"
    },
    {
        "NL": "A region is a desert if it has low precipitation, high evaporation rates, and supports minimal vegetation.",
        "FOL": "∀x (Region(x) ∧ LowPrecipitation(x) ∧ HighEvaporationRates(x) ∧ SupportsMinimalVegetation(x) → Desert(x))"
    },
    {
        "NL": "A lamp emits light when it is turned on.",
        "FOL": "∀x ∀y (Lamp(x) ∧ Light(y) ∧ TurnedOn(x) → Emit(x, y))"
    },
    {
        "NL": "A writer can use a pen or a keyboard for writing, but not both simultaneously.",
        "FOL": "∀x (Writer(x) → (UsesPen(x) ⊕ UsesKeyboard(x)))"
    },
    {
        "NL": "An object is transparent if it allows the passage of light and does not block visibility.",
        "FOL": "∀w (Object(w) ∧ AllowsLightPassage(w) ∧ ¬BlocksVisibility(w) → Transparent(w))"
    },
    {
        "NL": "No vehicle can travel at the speed of light.",
        "FOL": "¬∃x (Vehicle(x) ∧ TravelsAtSpeedOfLight(x))"
    },
    {
        "NL": "No mammals lay eggs, except for monotremes.",
        "FOL": "∀x (Mammal(x) ∧ ¬Monotreme(x) → ¬LaysEggs(x))"
    },
    {
        "NL": "A company that focuses on providing financial services and products, including lending, investing, and managing assets, is classified as a financial institution.",
        "FOL": "∀x (Company(x) ∧ ProvidesFinancialServices(x) ∧ OffersFinancialProducts(x) ∧ LendingInvestingAssetManagement(x) → FinancialInstitution(x))"
    },
    {
        "NL": "A tool that has a sharp edge, is used for cutting, and has a handle for gripping is a knife.",
        "FOL": "∀x (Tool(x) ∧ SharpEdge(x) ∧ UsedForCutting(x) ∧ HasHandleForGripping(x) → Knife(x))"
    },
    {
        "NL": "An earphone can be wired or wireless.",
        "FOL": "∀x (Earphone(x) → (Wired(x) ⊕ Wireless(x)))"
    },
    {
        "NL": "A movie is a blockbuster if it has a wide release, attracts a large audience, and generates significant revenue, but not if it is a documentary.",
        "FOL": "∀x (Movie(x) → (Blockbuster(x) ↔ (WideRelease(x) ∧ LargeAudience(x) ∧ SignificantRevenue(x) ∧ ¬Documentary(x))))"
    },
    {
        "NL": "A watch displays time in analog or digital format, but not both.",
        "FOL": "∃x (Watch(x) ∧ (AnalogDisplay(x) ∧ ¬DigitalDisplay(x) ∨ (¬AnalogDisplay(x) ∧ DigitalDisplay(x))))"
    },
    {
        "NL": "Nobody in the seminar interacts with either John or Mary.",
        "FOL": "∀x (Person(x) ∧ AtSeminar(x) → ¬Interact(x, john) ∧ ¬Interact(x, mary))"
    },
    {
        "NL": "A movie that wins multiple awards is typically well-received by audiences and critics.",
        "FOL": "∀x (Movie(x) ∧ WinsMultipleAwards(x) → (WellReceivedByAudiences(x) ∧ WellReceivedByCritics(x)))"
    },
    {
        "NL": "Not every cat is sleepy only when it is nighttime.",
        "FOL": "¬∀x (Cat(x) ∧ Nighttime(x) → Sleepy(x))"
    },
    {
        "NL": "A sport played on ice, using skates, and with a goal of scoring points by hitting a puck into the opponent's net is ice hockey.",
        "FOL": "∀x (Sport(x) ∧ PlayedOnIce(x) ∧ UsesSkates(x) ∧ PuckGoal(x) → IceHockey(x))"
    },
    {
        "NL": "A wind turbine produces power by harnessing wind energy and converting it into electricity through the rotation of its blades.",
        "FOL": "∀x (WindTurbine(x) → (ProducesPower(x) ∧ HarnessesWindEnergy(x) ∧ ConvertsWindEnergyToElectricity(x)))"
    },
    {
        "NL": "An argument is persuasive if and only if it has logical reasoning, solid evidence, but doesn't have too many fallacies.",
        "FOL": "∀x (Argument(x) ∧ Persuasive(x) ↔ (HasLogicalReasoning(x) ∧ HasSolidEvidence(x) ∧ ¬ManyFallacies(x)))"
    },
    {
        "NL": "If a room is a bedroom, it contains a bed.",
        "FOL": "∀x (Room(x) ∧ Bedroom(x) → ContainsBed(x))"
    },
    {
        "NL": "A musical instrument that produces sound by vibrating a stretched membrane, is struck or shaken, and is classified as a percussion instrument is a drum.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundByVibratingStretchedMembrane(x) ∧ (Struck(x) ∨ Shaken(x)) ∧ PercussionInstrument(x) → Drum(x))"
    },
    {
        "NL": "A garden can be an herb, flower, or vegetable garden, require full sun or partial shade, and be maintained by a professional gardener or hobbyist.",
        "FOL": "∀x (Garden(x) → ((HerbGarden(x) ∨ FlowerGarden(x) ∨ VegetableGarden(x)) ∧ (FullSun(x) ∨ PartialShade(x)) ∧ (ProfessionalGardener(x) ∨ Hobbyist(x))))"
    },
    {
        "NL": "A bird that is flightless, has a unique beak, and lives in the Galapagos Islands is a Galapagos finch.",
        "FOL": "∀x (Bird(x) ∧ Flightless(x) ∧ UniqueBeak(x) ∧ LivesInGalapagosIslands(x) → GalapagosFinch(x))"
    },
    {
        "NL": "A beverage that contains caffeine can be coffee, tea, or a soft drink.",
        "FOL": "∀x (Beverage(x) ∧ ContainsCaffeine(x) → Coffee(x) ∨ Tea(x) ∨ SoftDrink(x))"
    },
    {
        "NL": "No birds like shiny things.",
        "FOL": "∀x ∀y (Bird(x) ∧ Shiny(y) → ¬Like(x, y))"
    },
    {
        "NL": "A pen with a finer tip produces thinner lines than one with a broader tip.",
        "FOL": "∀x∀y (Pen(x) ∧ Pen(y) ∧ FinerTip(x) ∧ BroaderTip(y) → ThinnerLines(x, y))"
    },
    {
        "NL": "A person who is a painter creates visual art using paint.",
        "FOL": "∀x (Painter(x) → CreatesVisualArtUsingPaint(x))"
    },
    {
        "NL": "A pen writes on paper, but a chalk draws on blackboard.",
        "FOL": "∀x (Pen(x) → WritesOnPaper(x)) ∧ ∀y (Chalk(y) → DrawsOnBlackboard(y))"
    },
    {
        "NL": "Every city that is neither big nor small is a capital if and only if it is crowded.",
        "FOL": "∀x (¬Big(x) ∧ ¬Small(x) → (Capital(x) ↔ Crowded(x)))"
    },
    {
        "NL": "A fridge maintains a low temperature to preserve perishable food items by removing heat from its interior and releasing it to the surrounding environment.",
        "FOL": "∀x∀y∀z (Fridge(x) → (MaintainsLowTemperature(x) ∧ PreservesPerishableFoodItems(x, y) ∧ RemovesHeatAndReleasesToEnvironment(x, z)))"
    },
    {
        "NL": "A hexagon is a polygon with six sides and six angles, where the sum of the interior angles is equal to 720 degrees.",
        "FOL": "∀x (Hexagon(x) → (Polygon(x) ∧ NumberOfSides(x, 6) ∧ NumberOfAngles(x, 6) ∧ SumInteriorAngles(x, 720)))"
    },
    {
        "NL": "A garden is appealing if it displays a variety of flora, has well-maintained pathways, and features either water elements or unique sculptures.",
        "FOL": "∀x (Garden(x) ∧ VarietyOfFlora(x) ∧ WellMaintainedPathways(x) → (WaterElements(x) ∨ UniqueSculptures(x)) ∧ Appealing(x))"
    },
    {
        "NL": "If an animal is a mammal, it is a dog, cat, or elephant.",
        "FOL": "∀x (Animal(x) ∧ Mammal(x) → Dog(x) ∨ Cat(x) ∨ Elephant(x))"
    },
    {
        "NL": "An event is considered an emergency if it poses an immediate threat to health, safety, or property and requires urgent intervention.",
        "FOL": "∀x (Event(x) ∧ ImmediateThreatToHealthOrSafetyOrProperty(x) ∧ RequiresUrgentIntervention(x) → Emergency(x))"
    },
    {
        "NL": "A flight can be delayed due to bad weather or technical issues, but not both.",
        "FOL": "∀x (Delayed(x) ↔ (Flight(x) ∧ ((BadWeather(x) ∨ TechnicalIssues(x)) ∧ ¬(BadWeather(x) ∧ TechnicalIssues(x)))))"
    },
    {
        "NL": "An athlete competes in at least one sport.",
        "FOL": "∀x∃y (Athlete(x) → CompetesIn(x, y))"
    },
    {
        "NL": "A cat is a mammal or not a mammal.",
        "FOL": "∀x (Cat(x) → (Mammal(x) ⊕ ¬Mammal(x)))"
    },
    {
        "NL": "A cat is black or brown.",
        "FOL": "∀x (Cat(x) → (Black(x) ∨ Brown(x)))"
    },
    {
        "NL": "Most reptiles lay eggs, while some give birth to live young.",
        "FOL": "∀x (Reptile(x) → (LayEggs(x) ∨ GiveBirthToLiveYoung(x)))"
    },
    {
        "NL": "Microbes break down organic matter.",
        "FOL": "∀x (Microbe(x) → BreakDownOrganicMatter(x))"
    },
    {
        "NL": "A lion is roaming in the savanna.",
        "FOL": "∃x (Lion(x) ∧ Roaming(x) ∧ InTheSavanna(x))"
    },
    {
        "NL": "Mountains attract more precipitation compared to the surrounding lower areas.",
        "FOL": "∀x∀y∀z (Mountain(x) ∧ LowerArea(y) ∧ Surrounds(y, x) → AttractsMorePrecipitation(x, z) ∧ AttractsLessPrecipitation(y, z))"
    },
    {
        "NL": "People who practice mindfulness meditation regularly tend to experience lower stress levels and improved mental well-being.",
        "FOL": "∀x (RegularMindfulnessMeditation(x) → (LowerStressLevels(x) ∧ ImprovedMentalWellBeing(x)))"
    },
    {
        "NL": "A train arrives at a station, passengers board, and the train departs.",
        "FOL": "∀x∀y∀z (Train(x) ∧ Station(y) ∧ Passenger(z) → (Arrives(x, y) ∧ Boards(z, x) ∧ Departs(x, y)))"
    },
    {
        "NL": "There exists an athlete every athlete respects, given not all couch potatoes are lazy.",
        "FOL": "¬∀x (CouchPotato(x) → Lazy(x)) → ∃y (Athlete(y) ∧ ∀z (Athlete(z) → Respects(z, y)))"
    },
    {
        "NL": "Something is a square box only if it is black.",
        "FOL": "∀x (Square(x) ∧ Box(x) → Black(x))"
    },
    {
        "NL": "A company can be a startup, a corporate, or a small business.",
        "FOL": "∀x (Company(x) → (Startup(x) ∨ Corporate(x) ∨ SmallBusiness(x)))"
    },
    {
        "NL": "An athlete qualifies for the Olympic marathon if they have completed a marathon within a specified qualifying time, passed a drug test, and are a citizen of the country they represent.",
        "FOL": "∀x (Athlete(x) → (QualifiesForOlympicMarathon(x) ↔ (CompletedMarathonWithinQualifyingTime(x) ∧ PassedDrugTest(x) ∧ CitizenOfRepresentedCountry(x))))"
    },
    {
        "NL": "There is no square that surrounds all red circles.",
        "FOL": "¬∃x (Square(x) ∧ ∀y (Red(y) ∧ Circle(y) → Surrounds(x, y)))"
    },
    {
        "NL": "An umbrella protects from rain, sunglasses shield eyes from sunlight, and a coat keeps the wearer warm.",
        "FOL": "∀x∀y∀z (Umbrella(x) ∧ Sunglasses(y) ∧ Coat(z) → (ProtectsFromRain(x) ∧ ShieldsEyesFromSunlight(y) ∧ KeepsWearerWarm(z)))"
    },
    {
        "NL": "A proper diet includes a balance of carbohydrates, proteins, and fats to provide the body with essential nutrients and energy.",
        "FOL": "∀x (Diet(x) → (BalanceOfCarbohydrates(x) ∧ BalanceOfProteins(x) ∧ BalanceOfFats(x) → (ProvidesEssentialNutrients(x) ∧ ProvidesEnergy(x))))"
    },
    {
        "NL": "A scientist discovers a new species if they find an organism that has unique physical characteristics, distinct DNA sequences, and does not belong to any known taxonomic group.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Organism(y) ∧ DNASequence(z) → (DiscoversNewSpecies(x, y) ↔ (UniquePhysicalCharacteristics(y) ∧ DistinctDNASequences(y, z) ∧ NotInKnownTaxonomicGroup(y))))"
    },
    {
        "NL": "In a race, a participant starts at the starting line and finishes at the finish line.",
        "FOL": "∀x∀y∀z (Race(x) ∧ Participant(y) → (StartsAt(y, x, z) ∧ FinishesAt(y, x, z)))"
    },
    {
        "NL": "There are cities in the country that we have not yet visited.",
        "FOL": "∃x (City(x) ∧ InCountry(x) ∧ ¬Visited(x))"
    },
    {
        "NL": "There is a flower every flower points towards, provided all cats are furry.",
        "FOL": "∀x (Cat(x) → Furry(x)) → ∃y (Flower(y) ∧ ∀z (Flower(z) → PointsTowards(z, y)))"
    },
    {
        "NL": "A hotel is considered luxurious if it offers spacious rooms, high-quality amenities, and excellent service.",
        "FOL": "∀x (Hotel(x) ∧ Luxurious(x) ↔ (SpaciousRooms(x) ∧ HighQualityAmenities(x) ∧ ExcellentService(x)))"
    },
    {
        "NL": "Doctors prescribe medications for patients based on their symptoms and medical history.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Medication(z) → (Prescribes(x, z, y) ∧ BasedOnSymptomsAndHistory(y)))"
    },
    {
        "NL": "A laptop operates efficiently if it has a powerful processor and sufficient memory.",
        "FOL": "∀x (Laptop(x) → (Efficient(x) ↔ (PowerfulProcessor(x) ∧ SufficientMemory(x))))"
    },
    {
        "NL": "A river flows into a lake if the river's watercourse leads to the lake and the lake's water level is maintained or increased by the incoming water.",
        "FOL": "∀x∀y (FlowsInto(x, y) ↔ (River(x) ∧ Lake(y) ∧ WatercourseLeadsTo(x, y) ∧ (MaintainsWaterLevel(y) ∨ IncreasesWaterLevel(y))))"
    },
    {
        "NL": "An artist paints or draws.",
        "FOL": "∀x (Artist(x) → (Paints(x) ∨ Draws(x)))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote, allowing them to express their preferences and influence the direction of their government.",
        "FOL": "∀x ∀y (Democracy(x) ∧ Citizen(y) ∧ Right(r) ∧ Vote(v) → ExpressPreferencesAndInfluenceDirection(y, x, r, v))"
    },
    {
        "NL": "A mathematical operation that reverses the sign of a number is called negation.",
        "FOL": "∀x (MathematicalOperation(x) ∧ ReversesSign(x) → Negation(x))"
    },
    {
        "NL": "A train that operates on a high-speed rail network and offers comfortable seating is popular for long-distance travel.",
        "FOL": "∀x (Train(x) ∧ OperatesOnHighSpeedRail(x) ∧ ComfortableSeating(x) → PopularForLongDistanceTravel(x))"
    },
    {
        "NL": "An electronic device that can make calls, send messages, and browse the internet is a smartphone.",
        "FOL": "∀x (ElectronicDevice(x) ∧ MakeCalls(x) ∧ SendMessages(x) ∧ BrowseInternet(x) → Smartphone(x))"
    },
    {
        "NL": "If Daniel is a photographer then Charlotte is a model.",
        "FOL": "Photographer(daniel) → Model(charlotte)"
    },
    {
        "NL": "A book is engaging if it features a relatable protagonist or an intriguing plot.",
        "FOL": "∀x (Book(x) ∧ (RelatableProtagonist(x) ∨ IntriguingPlot(x)) → Engaging(x))"
    },
    {
        "NL": "A pen writes using ink.",
        "FOL": "∀x (Pen(x) → WritesUsingInk(x))"
    },
    {
        "NL": "A computer is fast if and only if it processes at least one graphic design.",
        "FOL": "∀x (Speed(x) ↔ ∃y (Design(y) ∧ Processes(x, y)))"
    },
    {
        "NL": "All athletes who are disciplined and determined are successful.",
        "FOL": "∀x (Athlete(x) ∧ Disciplined(x) ∧ Determined(x) → Successful(x))"
    },
    {
        "NL": "A diet can include meat or be vegetarian, but if it's vegan, it must exclude all animal products and not allow for any exceptions.",
        "FOL": "∀x (Diet(x) → ((MeatIncluded(x) ∨ Vegetarian(x)) ∧ (Vegan(x) → (¬AnimalProducts(x) ∧ ¬ExceptionsAllowed(x)))))"
    },
    {
        "NL": "A restaurant serves dishes from various cuisines, including Italian, Mexican, or Thai.",
        "FOL": "∀x (Restaurant(x) → (ServesCuisine(x, Italian) ∨ ServesCuisine(x, Mexican) ∨ ServesCuisine(x, Thai)))"
    },
    {
        "NL": "An engine that converts heat energy into mechanical work, operates through a cycle of heating and cooling, and uses a working fluid to transfer energy is a heat engine.",
        "FOL": "∀x ∀y ∀z (Engine(x) ∧ HeatEnergy(y) ∧ MechanicalWork(z) ∧ Converts(x, y, z) ∧ OperatesThroughCycle(x) ∧ UsesWorkingFluid(x) → HeatEngine(x))"
    },
    {
        "NL": "Unless a thing is neither green nor yellow, it is a chair.",
        "FOL": "∀x ((Green(x) ∨ Yellow(x)) → Chair(x))"
    },
    {
        "NL": "No physician at the conference voiced concerns.",
        "FOL": "¬∃x (Physician(x) ∧ AtConference(x) ∧ VoicedConcern(x))"
    },
    {
        "NL": "Cats catch mice to eat.",
        "FOL": "∀x∀y (Cat(x) ∧ Mouse(y) → CatchesToEat(x, y))"
    },
    {
        "NL": "An edible plant part, typically consumed as a part of a meal, that is rich in vitamins and minerals is a vegetable.",
        "FOL": "∀x (EdiblePlantPart(x) ∧ ConsumedAsPartOfMeal(x) ∧ RichInVitamins(x) ∧ RichInMinerals(x) → Vegetable(x))"
    },
    {
        "NL": "Some cars are old and some cars are new, but there are no old and new cars.",
        "FOL": "∃x (Old(x)) ∧ ∃x (New(x)) ∧ ¬∃x (Old(x) ∧ New(x))"
    },
    {
        "NL": "A television show can be live or pre-recorded.",
        "FOL": "∀x (TelevisionShow(x) → (Live(x) ∨ PreRecorded(x)))"
    },
    {
        "NL": "Every chef has cooked a recipe from each cookbook by a food critic.",
        "FOL": "∀x (Chef(x) ∧ ∃y (Critic(y) ∧ ∀z (Cookbook(z) ∧ ReviewedBy(z, y) → Cooked(x, z))))"
    },
    {
        "NL": "If an object is round and big, then it indicates to at least one orange object, unless it is a hexagon.",
        "FOL": "∀x ((Round(x) ∧ Big(x)) → ∃y (Orange(y) ∧ Indicates(x, y) ∨ Hexagon(x)))"
    },
    {
        "NL": "A dessert is a sweet dish typically consumed after a meal.",
        "FOL": "∀x (Dessert(x) ↔ (SweetDish(x) ∧ ConsumedAfterMeal(x)))"
    },
    {
        "NL": "A book becomes a bestseller if it has many sales and positive reviews.",
        "FOL": "∀x (Book(x) ∧ ManySales(x) ∧ PositiveReviews(x) → Bestseller(x))"
    },
    {
        "NL": "Humans are creatures who learn languages and use tools.",
        "FOL": "∀x (Human(x) → Creature(x) ∧ LearnLanguages(x) ∧ UseTools(x))"
    },
    {
        "NL": "A mountain is taller than another mountain when its elevation is higher.",
        "FOL": "∀x∀y (Mountain(x) ∧ Mountain(y) ∧ HigherElevation(x, y) → Taller(x, y))"
    },
    {
        "NL": "A pentagon is not both gray and maroon.",
        "FOL": "∀x (Pentagon(x) → ¬(Gray(x) ∧ Maroon(x)))"
    },
    {
        "NL": "Each green item is smooth only if it is a cylinder.",
        "FOL": "∀x (Green(x) → (Smooth(x) → Cylinder(x)))"
    },
    {
        "NL": "A technology becomes trendy if it offers user-friendly interface, performs efficiently, and provides innovative features.",
        "FOL": "∀x (Technology(x) ∧ OffersUserFriendlyInterface(x) ∧ EfficientPerformance(x) ∧ ProvidesInnovativeFeatures(x) → BecomesTrendy(x))"
    },
    {
        "NL": "No one in the class understands either trigonometry or algebra.",
        "FOL": "¬∃x (Student(x) ∧ InClass(x) ∧ (Understand(x, trigonometry) ∨ Understand(x, algebra)))"
    },
    {
        "NL": "Someone who is kind, generous, and empathetic towards others is compassionate.",
        "FOL": "∀x (Person(x) ∧ Kind(x) ∧ Generous(x) ∧ Empathetic(x) → Compassionate(x))"
    },
    {
        "NL": "A film is engaging if it has an intriguing plot and memorable characters.",
        "FOL": "∀x (Film(x) ∧ IntriguingPlot(x) ∧ MemorableCharacters(x) → Engaging(x))"
    },
    {
        "NL": "A tree provides shade and oxygen.",
        "FOL": "∀x (Tree(x) → (ProvidesShade(x) ∧ ProvidesOxygen(x)))"
    },
    {
        "NL": "A store issues a refund for a returned item if the item is undamaged, the original receipt is provided, and the return is made within the specified time frame.",
        "FOL": "∀x∀y (Store(x) ∧ ReturnedItem(y) ∧ Undamaged(y) ∧ OriginalReceipt(y) ∧ WithinTimeFrame(y) → IssuesRefund(x, y))"
    },
    {
        "NL": "No tiny hexagon is black.",
        "FOL": "¬∃v (Tiny(v) ∧ Hexagon(v) ∧ ¬Black(v))"
    },
    {
        "NL": "A person is considered a pilot if they operate and navigate aircraft, such as airplanes or helicopters.",
        "FOL": "∀x (Pilot(x) ↔ OperatesAndNavigatesAircraft(x))"
    },
    {
        "NL": "A substance that changes from solid to gas without becoming liquid first undergoes sublimation.",
        "FOL": "∀x (Substance(x) ∧ SolidToGas(x) ∧ ¬BecomesLiquidFirst(x) → UndergoesSublimation(x))"
    },
    {
        "NL": "A cell is the smallest unit of life, consisting of a nucleus, cytoplasm, and a membrane.",
        "FOL": "∀x (Cell(x) → (SmallestUnitOfLife(x) ∧ HasNucleus(x) ∧ HasCytoplasm(x) ∧ HasMembrane(x)))"
    },
    {
        "NL": "A region experiencing a drought often enforces water usage restrictions.",
        "FOL": "∀x (Region(x) ∧ Drought(x) → WaterUsageRestrictions(x))"
    },
    {
        "NL": "A dessert is popular if it is delicious, visually appealing, or has a unique flavor.",
        "FOL": "∀x (Dessert(x) ∧ (Delicious(x) ∨ VisuallyAppealing(x) ∨ UniqueFlavor(x)) → Popular(x))"
    },
    {
        "NL": "An athlete who wins gold medals in both swimming and running is a multi-sport champion.",
        "FOL": "∀x ((Athlete(x) ∧ GoldMedalSwimming(x) ∧ GoldMedalRunning(x)) → MultiSportChampion(x))"
    },
    {
        "NL": "A transportation system is efficient if it minimizes travel time, reduces traffic congestion, and is accessible to a large portion of the population.",
        "FOL": "∀x ∀y ∀z (Efficient(x) → (TransportationSystem(x) ∧ MinimizesTravelTime(x, y) ∧ ReducesTrafficCongestion(x, y) ∧ AccessibleToLargePopulation(x, z)))"
    },
    {
        "NL": "A chemical compound is an acid if it donates protons or accepts electrons in a chemical reaction and typically has a sour taste or corrosive properties.",
        "FOL": "∀x (ChemicalCompound(x) ∧ (DonatesProtons(x) ∨ AcceptsElectrons(x)) ∧ (HasSourTaste(x) ∨ HasCorrosiveProperties(x)) → Acid(x))"
    },
    {
        "NL": "A professor will finish the research only if he is not on vacation.",
        "FOL": "∀x (Professor(x) ∧ FinishResearch(x) → ¬OnVacation(x))"
    },
    {
        "NL": "A mammal gives birth to live young, and the mother nourishes her offspring with milk produced by her mammary glands.",
        "FOL": "∀x∀y (Mammal(x) ∧ Offspring(y, x) → (GivesBirthToLiveYoung(x) ∧ NourishesWithMilk(x, y)))"
    },
    {
        "NL": "If a game is a board game, then it has pieces and a board.",
        "FOL": "∀x (Game(x) ∧ BoardGame(x) → HasPieces(x) ∧ HasBoard(x))"
    },
    {
        "NL": "A game can be competitive, multiplayer, and played online.",
        "FOL": "∃x (Game(x) ∧ Competitive(x) ∧ Multiplayer(x) ∧ PlayedOnline(x))"
    },
    {
        "NL": "Every bird is either in the sky or in the nest.",
        "FOL": "∀x (Bird(x) → (InSky(x) ⊕ InNest(x)))"
    },
    {
        "NL": "A green energy resource is restored naturally, lowers risk of depletion and lessens environmental effects.",
        "FOL": "∀x (GreenEnergyResource(x) → (RestoredNaturally(x) ∧ LowerRiskOfDepletion(x) ∧ LessensEnvironmentalEffects(x)))"
    },
    {
        "NL": "Instruments can be either stringed or wind, but not percussion.",
        "FOL": "∃x (Instrument(x) ∧ (Stringed(x) ∨ Wind(x)) ∧ ¬Percussion(x))"
    },
    {
        "NL": "Mountains with snow-capped peaks, diverse flora and fauna, and pristine lakes attract nature enthusiasts.",
        "FOL": "∀x ∀y ∀z (Mountain(x) ∧ SnowCappedPeaks(x, y) ∧ DiverseFloraFauna(x, z) ∧ PristineLakes(x) → AttractsNatureEnthusiasts(x))"
    },
    {
        "NL": "An element that reacts with oxygen and forms rust is iron.",
        "FOL": "∀x (Element(x) ∧ ReactsWithOxygen(x) ∧ FormsRust(x) → Iron(x))"
    },
    {
        "NL": "A bird flies or swims.",
        "FOL": "∀x (Bird(x) → (Flies(x) ∨ Swims(x)))"
    },
    {
        "NL": "An engine converts fuel into mechanical energy and powers a vehicle.",
        "FOL": "∀x ∀y (Engine(x) ∧ Vehicle(y) ∧ ConvertsFuel(x) → Powers(x, y))"
    },
    {
        "NL": "A type of fabric that is not synthetic can be cotton, linen, or silk.",
        "FOL": "∀x (Fabric(x) ∧ ¬Synthetic(x) → Cotton(x) ∨ Linen(x) ∨ Silk(x))"
    },
    {
        "NL": "An appliance can be either electric or gas-powered, but it is not a toy.",
        "FOL": "∀x (Appliance(x) → (Electric(x) ⊕ GasPowered(x)) ∧ ¬Toy(x))"
    },
    {
        "NL": "Some marine animals, like dolphins and whales, are mammals that live in the ocean and breathe air.",
        "FOL": "∀x (MarineAnimal(x) ∧ (Dolphin(x) ∨ Whale(x)) → (Mammal(x) ∧ LivesInOcean(x) ∧ BreathesAir(x)))"
    },
    {
        "NL": "A comedy film is intended to make viewers laugh, a drama film tells emotional and serious stories, and a thriller film creates suspense and excitement.",
        "FOL": "∀x∀y∀z (ComedyFilm(x) ∧ DramaFilm(y) ∧ ThrillerFilm(z) → (IntendedToMakeViewersLaugh(x) ∧ TellsEmotionalAndSeriousStories(y) ∧ CreatesSuspenseAndExcitement(z)))"
    },
    {
        "NL": "An animal with a sharp beak, preys on fish, and flies is normally an eagle.",
        "FOL": "∀x (Animal(x) ∧ HasSharpBeak(x) ∧ PreysOnFish(x) ∧ Flies(x) → Eagle(x))"
    },
    {
        "NL": "A teacher is writing a lesson on the blackboard, while a student is studying a book in the library.",
        "FOL": "∃x ∃y (Teacher(x) ∧ Lesson(y) ∧ Writing(x, y) ∧ OnTheBlackboard(x)) ∧ ∃z ∃w (Student(z) ∧ Book(w) ∧ Studying(z, w) ∧ InTheLibrary(z))"
    },
    {
        "NL": "A garden has flowers, trees, and a path.",
        "FOL": "∀x (Garden(x) → (HasFlowers(x) ∧ HasTrees(x) ∧ HasPath(x)))"
    },
    {
        "NL": "Wind turbines generate electricity when wind speed exceeds a certain threshold.",
        "FOL": "∀x∀y∀z (WindTurbine(x) ∧ Electricity(y) ∧ WindSpeed(z) → (ExceedsThreshold(z) → Generates(x, y)))"
    },
    {
        "NL": "A game is engaging if it has a captivating story, immersive gameplay, and visually appealing graphics.",
        "FOL": "∀x (Game(x) → (Engaging(x) ↔ (HasCaptivatingStory(x) ∧ HasImmersiveGameplay(x) ∧ HasVisuallyAppealingGraphics(x))))"
    },
    {
        "NL": "A valid email address must include a username, a domain name, and a top-level domain.",
        "FOL": "∀x∀y∀z∀w (EmailAddress(x) ∧ Username(y) ∧ DomainName(z) ∧ TopLevelDomain(w) → (Valid(x) ↔ (Includes(x, y) ∧ Includes(x, z) ∧ Includes(x, w))))"
    },
    {
        "NL": "A chef prepares meals in a kitchen, and a waiter serves them to the customers in a restaurant.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Kitchen(y) ∧ Meal(z) → PreparesIn(x, y, z)) ∧ ∀a ∀b ∀c (Waiter(a) ∧ Customer(b) ∧ Meal(c) ∧ Restaurant(y) → ServesTo(a, b, c, y))"
    },
    {
        "NL": "A person is a journalist if they research, write, and report news stories for various media outlets.",
        "FOL": "∀x (Journalist(x) ↔ (Person(x) ∧ Researches(x) ∧ WritesNewsStories(x) ∧ ReportsNewsStories(x) ∧ ∃y (MediaOutlet(y) ∧ WorksFor(x, y))))"
    },
    {
        "NL": "An equilateral triangle has three equal sides.",
        "FOL": "∀x (EquilateralTriangle(x) → EqualSides(x, 3))"
    },
    {
        "NL": "People all speak languages.",
        "FOL": "∀x ∀y (Person(x) ∧ Language(y) → Speak(x, y))"
    },
    {
        "NL": "A scientific theory gains acceptance if it has supporting evidence, is falsifiable, and withstands peer review.",
        "FOL": "∀x (ScientificTheory(x) → (SupportingEvidence(x) ∧ Falsifiable(x) ∧ WithstandsPeerReview(x) → GainsAcceptance(x)))"
    },
    {
        "NL": "A city's air quality improves with reduced emissions, increased green spaces, or effective waste management.",
        "FOL": "∀x (City(x) → (ReducedEmissions(x) ∨ IncreasedGreenSpaces(x) ∨ EffectiveWasteManagement(x)) → ImprovedAirQuality(x))"
    },
    {
        "NL": "A movie is considered a comedy if it primarily aims to make the audience laugh.",
        "FOL": "∀x (Comedy(x) ↔ AimsToMakeAudienceLaugh(x))"
    },
    {
        "NL": "Everybody receives something he deserves and deserves something he does not receive.",
        "FOL": "∀x (Person(x) → (∃y (Deserve(x, y) ∧ Receive(x, y)) ∧ ∃z (Deserve(x, z) ∧ ¬Receive(x, z))))"
    },
    {
        "NL": "A figure is either an small cube or a large sphere, but not both.",
        "FOL": "∀x ((Small(x) ∧ Cube(x)) ⊕ (Large(x) ∧ Sphere(x)))"
    },
    {
        "NL": "A university offers various degree programs, such as undergraduate, graduate, and professional degrees, in disciplines like engineering, business, and humanities.",
        "FOL": "∀x∀y (University(x) ∧ (Undergraduate(y) ∨ Graduate(y) ∨ Professional(y)) → OffersDegreePrograms(x, y))"
    },
    {
        "NL": "A musician composes songs, and a radio station plays them.",
        "FOL": "∀x ∀y (Musician(x) ∧ Song(y) → Compose(x, y)) ∧ ∀z ∀w (RadioStation(z) ∧ Song(w) → Play(z, w))"
    },
    {
        "NL": "A restaurant is successful if it serves delicious food, offers excellent service, or has a unique ambiance.",
        "FOL": "∀x (Restaurant(x) ∧ (ServesDeliciousFood(x) ∨ OffersExcellentService(x) ∨ UniqueAmbiance(x)) → Successful(x))"
    },
    {
        "NL": "A galaxy has a wide variety of celestial bodies if it contains stars, planets, and astroids with distinct qualities.",
        "FOL": "∀x (Galaxy(x) ∧ ∃y ∃z ∃w (Star(y) ∧ Planet(z) ∧ Astroid(w) ∧ DistinctQualities(y, z, w) ∧ Contains(x, y, z, w)) → HasVarietyOfCelestialBodies(x))"
    },
    {
        "NL": "Photographers capture images, sculptors shape materials, and painters apply colors.",
        "FOL": "∀x∀y∀z (Photographer(x) ∧ Sculptor(y) ∧ Painter(z) → (CapturesImages(x) ∧ ShapesMaterials(y) ∧ AppliesColors(z)))"
    },
    {
        "NL": "Bicycles have wheels, tables have legs, and lamps have bulbs.",
        "FOL": "∀x ∀y ∀z (Bicycle(x) ∧ Table(y) ∧ Lamp(z) → (HasWheels(x) ∧ HasLegs(y) ∧ HasBulbs(z)))"
    },
    {
        "NL": "A house is an estate or not an estate.",
        "FOL": "∀x (House(x) → (Estate(x) ⊕ ¬Estate(x)))"
    },
    {
        "NL": "A substance that reduces friction between two surfaces when applied is known as a lubricant.",
        "FOL": "∀x∀y∀z (Substance(x) ∧ ReducesFrictionBetween(x, y, z) → Lubricant(x))"
    },
    {
        "NL": "An island is surrounded by water and has its own landmass.",
        "FOL": "∀x (Island(x) → (SurroundedByWater(x) ∧ HasLandmass(x)))"
    },
    {
        "NL": "An email is unread if it has not been opened.",
        "FOL": "∀x (Email(x) ∧ ¬Opened(x) → Unread(x))"
    },
    {
        "NL": "A machine is a robot if it can perform tasks autonomously, has sensors for perception, and can be programmed.",
        "FOL": "∀x (Machine(x) ∧ AutonomousTasks(x) ∧ Sensors(x) ∧ Programmable(x) → Robot(x))"
    },
    {
        "NL": "A beverage contains a certain level of alcohol content.",
        "FOL": "∀x (Beverage(x) → HasAlcoholContent(x, y))"
    },
    {
        "NL": "Not all movies are exciting if and only if they are violent.",
        "FOL": "¬∀x (Movie(x) ∧ Exciting(x) ↔ Violent(x))"
    },
    {
        "NL": "A novel that explores thought-provoking themes, features memorable characters, and demonstrates exceptional writing can captivate readers and garner critical acclaim.",
        "FOL": "∀x (Novel(x) ∧ ExploresThoughtProvokingThemes(x) ∧ FeaturesMemorableCharacters(x) ∧ DemonstratesExceptionalWriting(x) → CaptivatesReadersAndGarnersCriticalAcclaim(x))"
    },
    {
        "NL": "If a person is a real estate agent, they help clients buy, sell, and rent properties.",
        "FOL": "∀x (RealEstateAgent(x) → ∃y (HelpsBuySellRent(x, y)))"
    },
    {
        "NL": "It's not true that there is a doctor who cures all old patients.",
        "FOL": "¬∃x (Doctor(x) ∧ ∀y (Old(y) ∧ Patient(y) → Cures(x, y)))"
    },
    {
        "NL": "If a vehicle is a luxury car, it is a Mercedes, BMW, or Audi.",
        "FOL": "∀x (Vehicle(x) ∧ LuxuryCar(x) → Mercedes(x) ∨ BMW(x) ∨ Audi(x))"
    },
    {
        "NL": "A car can maintain a high fuel efficiency when driven at a constant speed, tire pressure is optimal, and the engine is well-maintained and regularly serviced.",
        "FOL": "∀x∀y∀z (Car(x) ∧ ConstantSpeed(y) ∧ OptimalTirePressure(x, z) ∧ WellMaintainedEngine(x) ∧ RegularlyServiced(x) → HighFuelEfficiency(x))"
    },
    {
        "NL": "Not all planets are habitable or gas giants.",
        "FOL": "¬∀x (Planet(x) → (Habitable(x) ∨ GasGiant(x)))"
    },
    {
        "NL": "Someone who is good at drawing might not excel at painting or sculpting.",
        "FOL": "∃x (GoodAtDrawing(x) ∧ ¬(ExcelsAtPainting(x) ∨ ExcelsAtSculpting(x)))"
    },
    {
        "NL": "A tree provides shade and absorbs carbon dioxide.",
        "FOL": "∀x (Tree(x) → (ProvidesShade(x) ∧ AbsorbsCO2(x)))"
    },
    {
        "NL": "If a student is diligent, they are likely to succeed.",
        "FOL": "∀x (Student(x) ∧ Diligent(x) → LikelyToSucceed(x))"
    },
    {
        "NL": "A robot x is assigned to a task y in a factory z if x is capable of performing y, is available, and z has an open position for that task.",
        "FOL": "∀x ∀y ∀z (Robot(x) ∧ Task(y) ∧ Factory(z) ∧ CapableOfPerforming(x, y) ∧ Available(x) ∧ OpenPosition(y, z) → AssignedTo(x, y, z))"
    },
    {
        "NL": "An object is considered a toy if it is designed for children or adults to play with for entertainment or amusement.",
        "FOL": "∀x (Object(x) ∧ DesignedForPlay(x) ∧ DesignedForEntertainmentOrAmusement(x) → Toy(x))"
    },
    {
        "NL": "A shoe can be for running, walking, or dancing, but not for multiple activities.",
        "FOL": "∃x (Shoe(x) ∧ ((Running(x) ∧ ¬Walking(x) ∧ ¬Dancing(x)) ∨ (¬Running(x) ∧ Walking(x) ∧ ¬Dancing(x)) ∨ (¬Running(x) ∧ ¬Walking(x) ∧ Dancing(x))))"
    },
    {
        "NL": "A musical instrument that is played by striking it, is made of a specific material, and is used in a variety of musical genres is typically a percussion instrument.",
        "FOL": "∀x∀y∀z (MusicalInstrument(x) ∧ PlayedByStriking(x) ∧ SpecificMaterial(y) ∧ MadeOf(x, y) ∧ VarietyOfMusicalGenres(z) ∧ UsedIn(x, z) → PercussionInstrument(x))"
    },
    {
        "NL": "A planet is habitable if it has water and suitable temperature.",
        "FOL": "∀x ∃y ∃z (Planet(x) ∧ Water(y) ∧ SuitableTemperature(z) ∧ Has(x, y) ∧ Has(x, z) → Habitable(x))"
    },
    {
        "NL": "An athlete trains for competitions and follows a healthy diet.",
        "FOL": "∀x (Athlete(x) → (∃y (Competition(y) ∧ TrainsFor(x, y)) ∧ FollowsHealthyDiet(x)))"
    },
    {
        "NL": "During an election, candidates present their policies and ideas to gain support from the voters.",
        "FOL": "∀x ∀y ∀z (Election(x) ∧ Candidate(y) ∧ Voter(z) → (PresentsPoliciesAndIdeas(y, x) ∧ GainsSupport(y, z)))"
    },
    {
        "NL": "A meal is nutritious if it contains adequate amounts of protein, fiber, and essential vitamins and minerals.",
        "FOL": "∀x (Meal(x) ∧ AdequateProtein(x) ∧ AdequateFiber(x) ∧ EssentialVitaminsAndMinerals(x, y, z) → Nutritious(x))"
    },
    {
        "NL": "A cell has a nucleus and cytoplasm.",
        "FOL": "∀x (Cell(x) → (HasNucleus(x) ∧ HasCytoplasm(x)))"
    },
    {
        "NL": "If a person is a parent and has a sibling, their children are cousins with their sibling's children.",
        "FOL": "∀x ∀y ∀z (Parent(x) ∧ Sibling(y, x) ∧ Child(z, x) → ∃w (Child(w, y) ∧ Cousin(z, w)))"
    },
    {
        "NL": "Someone who assists a person will be assisted by someone.",
        "FOL": "∀x ∃y (Person(x) ∧ Person(y) ∧ Assist(x, y) → ∃z (Person(z) ∧ WillAssist(z, x)))"
    },
    {
        "NL": "A phone has internet connection if it can browse websites and has a WiFi system.",
        "FOL": "∀x (Phone(x) ∧ CanBrowseWebsites(x) ∧ HasWiFiSystem(x) → HasInternetConnection(x))"
    },
    {
        "NL": "A location is cold if it has low temperatures and is not near the equator.",
        "FOL": "∀x (Location(x) ∧ LowTemperature(x) ∧ ¬NearEquator(x) → Cold(x))"
    },
    {
        "NL": "Every dog is either a puppy or an adult.",
        "FOL": "∀x (Dog(x) → (Puppy(x) ⊕ Adult(x)))"
    },
    {
        "NL": "Architects design buildings, coordinate construction projects, and collaborate with other professionals, such as engineers and interior designers.",
        "FOL": "∀x ∀y ∀z (Architect(x) ∧ Building(y) ∧ Professional(z) → (DesignsBuildings(x, y) ∧ CoordinatesConstructionProjects(x) ∧ CollaboratesWith(x, z)))"
    },
    {
        "NL": "Rainforests receive a significant amount of rainfall each year.",
        "FOL": "∀x (Rainforest(x) → ReceivesSignificantRainfall(x, Yearly))"
    },
    {
        "NL": "If a person is an architect, they either design residential buildings or commercial buildings.",
        "FOL": "∀x (Person(x) ∧ Architect(x) → DesignResidentialBuildings(x) ⊕ DesignCommercialBuildings(x))"
    },
    {
        "NL": "Rain is wet, while snow is not.",
        "FOL": "∀x∀y (Rain(x) ∧ Snow(y) → (IsWet(x) ∧ ¬IsWet(y)))"
    },
    {
        "NL": "High-quality software must be user-friendly, secure, and maintainable, ensuring that users can safely and efficiently interact with the application.",
        "FOL": "∀x (HighQualitySoftware(x) → (UserFriendly(x) ∧ Secure(x) ∧ Maintainable(x) ∧ EnsuresSafeUserInteraction(x) ∧ EnsuresEfficientUserInteraction(x)))"
    },
    {
        "NL": "An operating system is open-source if its source code is publicly available, modifiable, and freely distributable.",
        "FOL": "∀x (OperatingSystem(x) ∧ OpenSource(x) → (PubliclyAvailableSourceCode(x) ∧ Modifiable(x) ∧ FreelyDistributable(x)))"
    },
    {
        "NL": "A student passes an exam if they achieve a score above the passing threshold, or they have a valid reason for a lower score and the teacher approves.",
        "FOL": "∀x∀y (PassesExam(x, y) ↔ (Student(x) ∧ Exam(y) ∧ ((ScoreAboveThreshold(x, y) ∧ ¬ValidReasonForLowerScore(x, y) ∧ ¬TeacherApproves(x, y)) ⊕ (¬ScoreAboveThreshold(x, y) ∧ ValidReasonForLowerScore(x, y) ∧ TeacherApproves(x, y)))))"
    },
    {
        "NL": "A fish that can survive in a wide range of water temperatures, adapt to different environments, and has a varied diet is more likely to be an invasive species.",
        "FOL": "∀x (Fish(x) ∧ SurvivesInWideRangeOfWaterTemperatures(x) ∧ AdaptsToDifferentEnvironments(x) ∧ HasVariedDiet(x) → MoreLikelyInvasiveSpecies(x))"
    },
    {
        "NL": "A train operates on a fixed track, transporting passengers and goods between stations, while a bus travels on roads and can change its route more flexibly.",
        "FOL": "∀x∀y (Train(x) ∧ Bus(y) → (OperatesOnFixedTrack(x) ∧ TransportsPassengersAndGoods(x) ∧ BetweenStations(x)) ∧ (TravelsOnRoads(y) ∧ FlexibleRouteChange(y)))"
    },
    {
        "NL": "Every chef cooks food, but not every food cook is a chef.",
        "FOL": "∀x (Chef(x) → Cook(x)) ∧ ¬∀x (Cook(x) → Chef(x))"
    },
    {
        "NL": "Rivers flow into lakes, seas, or oceans but do not flow into deserts.",
        "FOL": "∀x∀y (River(x) ∧ FlowsInto(x, y) → ((Lake(y) ∨ Sea(y) ∨ Ocean(y)) ∧ ¬Desert(y)))"
    },
    {
        "NL": "A doctor prescribes medication to a patient to treat an illness.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Illness(z) → ∃w (Medication(w) ∧ Prescribes(x, w, y) ∧ Treats(w, z)))"
    },
    {
        "NL": "A park is well-maintained if its green areas are regularly mowed and it has clean facilities.",
        "FOL": "∀x (WellMaintained(x) → (Park(x) ∧ ((∃y (GreenArea(y) ∧ RegularlyMowed(y) ∧ InPark(x, y))) ∧ (∃z (Facilities(z) ∧ Clean(z) ∧ InPark(x, z))))))"
    },
    {
        "NL": "A world is abundant in diverse life forms if it contains animals, plants, and fungi with distinct characteristics.",
        "FOL": "∀x (World(x) ∧ ∃y ∃z ∃w (Animal(y) ∧ Plant(z) ∧ Fungi(w) ∧ DistinctCharacteristics(y, z, w) ∧ Contains(x, y, z, w)) → HasAbundanceOfLifeForms(x))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote and express their opinions.",
        "FOL": "∀x ∀y (Democracy(y) ∧ Citizen(x) ∧ LivesIn(x, y) → (HasRightToVote(x) ∧ CanExpressOpinions(x)))"
    },
    {
        "NL": "Hurricanes form over warm ocean waters, while tornadoes form over land.",
        "FOL": "∀x ∀y (Hurricane(x) ∧ Tornado(y) → (FormsOverWarmOceanWaters(x) ∧ FormsOverLand(y)))"
    },
    {
        "NL": "A bicycle is powered by human effort, providing a sustainable and environmentally friendly mode of transportation.",
        "FOL": "∀x (Bicycle(x) → (PoweredByHumanEffort(x) ∧ SustainableEnvironmentallyFriendlyTransportation(x)))"
    },
    {
        "NL": "A company is profitable if its revenues exceed its expenses.",
        "FOL": "∀x (Company(x) → (Profitable(x) ↔ RevenuesExceedExpenses(x)))"
    },
    {
        "NL": "An athlete competes in sports and undergoes regular physical training.",
        "FOL": "∀x (Athlete(x) → (CompetesInSports(x) ∧ UndergoesPhysicalTraining(x)))"
    },
    {
        "NL": "Every bird can fly, except for those that are flightless.",
        "FOL": "∀x (Bird(x) ∧ ¬Flightless(x) → CanFly(x))"
    },
    {
        "NL": "A structure is deemed as a skyscraper if it is tall and constructed with steel and glass.",
        "FOL": "∀x (Structure(x) ∧ Tall(x) ∧ ConstructedWithSteel(x) ∧ ConstructedWithGlass(x) → Skyscraper(x))"
    },
    {
        "NL": "A shirt is long-sleeved or short-sleeved, not both.",
        "FOL": "∀x (Shirt(x) → (LongSleeved(x) ⊕ ShortSleeved(x)))"
    },
    {
        "NL": "Eating fruits and vegetables regularly contributes to a healthy diet.",
        "FOL": "∀x (EatsFruitsAndVegetablesRegularly(x) → ContributesToHealthyDiet(x))"
    },
    {
        "NL": "A computer program can be written in multiple programming languages, such as Python or Java.",
        "FOL": "∀x (ComputerProgram(x) → (WrittenInLanguage(x, y) ∨ WrittenInLanguage(x, z)))"
    },
    {
        "NL": "A fish swims in water, but not on land or in the air.",
        "FOL": "∀x∀y∀z∀w (Fish(x) ∧ Water(y) ∧ Land(z) ∧ Air(w) → (SwimsIn(x, y) ∧ ¬SwimsOn(x, z) ∧ ¬SwimsIn(x, w)))"
    },
    {
        "NL": "A treatment can address an illness by diminishing its manifestations.",
        "FOL": "∀x ∀y (Treatment(x) ∧ Illness(y) → (Addresses(x, y) → DiminishesManifestations(x, y)))"
    },
    {
        "NL": "A television show can be classified as drama, comedy, or documentary, but not more than one category at a time.",
        "FOL": "∀x (TelevisionShow(x) → (Drama(x) ⊕ Comedy(x) ⊕ Documentary(x)))"
    },
    {
        "NL": "All cows hate spicy foods.",
        "FOL": "∀x ∀y (Cow(x) ∧ Spicy(y) → ¬Hate(x, y))"
    },
    {
        "NL": "All birds have feathers.",
        "FOL": "∀x (Bird(x) → HasFeathers(x))"
    },
    {
        "NL": "A vehicle is considered a train if it consists of a series of connected cars or carriages, running on rails, and is used for the transportation of passengers or goods.",
        "FOL": "∀x (Vehicle(x) ∧ SeriesOfConnectedCarsOrCarriages(x) ∧ RunsOnRails(x) ∧ TransportsPassengersOrGoods(x) → Train(x))"
    },
    {
        "NL": "A musician composes a song that is later performed by a band.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Song(y) ∧ Band(z) ∧ Composes(x, y) → PerformedBy(y, z))"
    },
    {
        "NL": "All students who attend both maths and physics classes, unless they are part of the chess club, either regularly top their class or haven't taken part in a science fair.",
        "FOL": "∀x (Student(x) ∧ AttendMaths(x) ∧ AttendPhysics(x) ∨ ChessClubMember(x) → (TopClass(x) ∨ ¬ParticipatedInScienceFair(x)))"
    },
    {
        "NL": "A computer can be a desktop or a laptop, but not both.",
        "FOL": "∀x (Computer(x) → (Desktop(x) ⊕ Laptop(x)))"
    },
    {
        "NL": "A pencil can be mechanical or wooden.",
        "FOL": "∀x (Pencil(x) → (Mechanical(x) ∨ Wooden(x)))"
    },
    {
        "NL": "Every song that is catchy becomes a hit.",
        "FOL": "∀x (Song(x) ∧ Catchy(x) → Hit(x))"
    },
    {
        "NL": "A painting that is abstract can make people wonder.",
        "FOL": "∀x ∀y (Painting(x) ∧ Abstract(x) ∧ Person(y) → CanMakeWonder(x, y))"
    },
    {
        "NL": "Each cake isn't sweet, but every sweet cake is delicious.",
        "FOL": "¬∀x (Cake(x) → Sweet(x)) ∧ ∀y (Sweet(y) ∧ Cake(y) → IsDelicious(y))"
    },
    {
        "NL": "All cars are either fast or unreliable.",
        "FOL": "∀x (Car(x) → (Fast(x) ⊕ Unreliable(x)))"
    },
    {
        "NL": "Either a fruit is an apple or a banana, but it cannot be both.",
        "FOL": "∀x (Fruit(x) → (Apple(x) ⊕ Banana(x)))"
    },
    {
        "NL": "No city is a bustling metropolis or a tranquil town.",
        "FOL": "¬∃x ((Bustling(x) ∧ Metropolis(x)) ∨ (Tranquil(x) ∧ Town(x)))"
    },
    {
        "NL": "A material is flame-resistant if it does not easily ignite and can withstand high temperatures.",
        "FOL": "∀x (Material(x) ∧ FlameResistant(x) ↔ (DoesNotEasilyIgnite(x) ∧ CanWithstandHighTemperatures(x)))"
    },
    {
        "NL": "A substance that can dissolve in water, forms a homogeneous mixture, and does not separate over time is a water-soluble substance.",
        "FOL": "∀x∀y (Substance(x) ∧ CanDissolveInWater(x) ∧ FormsHomogeneousMixture(x, y) ∧ DoesNotSeparateOverTime(x) → WaterSolubleSubstance(x))"
    },
    {
        "NL": "A vehicle can be either a car, a motorcycle, a bicycle, or a truck, but not more than one of these types.",
        "FOL": "∀x (Vehicle(x) → ((Car(x) ⊕ Motorcycle(x)) ⊕ (Bicycle(x) ⊕ Truck(x))))"
    },
    {
        "NL": "A medication may be administered orally, topically, or through injections, but not all methods apply to every medication.",
        "FOL": "∀x (Medication(x) → (AdministeredOrally(x) ∨ AdministeredTopically(x) ∨ AdministeredThroughInjections(x)) ∧ ¬(AdministeredOrally(x) ∧ AdministeredTopically(x) ∧ AdministeredThroughInjections(x)))"
    },
    {
        "NL": "Restaurants serve food and drinks to customers.",
        "FOL": "∀x (Restaurant(x) → (Serve(y) ∧ Food(y) ∧ Drinks(y) ∧ To(z) ∧ Customers(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "A detective solves a crime by gathering evidence, questioning suspects, and connecting the information.",
        "FOL": "∀x∀y∀z (Detective(x) ∧ Crime(y) ∧ Suspect(z) → (Solves(x, y) ↔ (GathersEvidence(x, y) ∧ Questions(x, z) ∧ ConnectsInformation(x))))"
    },
    {
        "NL": "Not all athletes who excel in individual sports are good at team sports, and not all athletes who excel in team sports are good at individual sports.",
        "FOL": "¬(∀x (Athlete(x) ∧ ExcelIndividualSports(x) → GoodAtTeamSports(x)) ∧ ∀y (Athlete(y) ∧ ExcelTeamSports(y) → GoodAtIndividualSports(y)))"
    },
    {
        "NL": "A square has four equal sides, a rectangle has four right angles, and a circle has no corners.",
        "FOL": "∀x∀y∀z (Square(x) ∧ Rectangle(y) ∧ Circle(z) → (HasFourEqualSides(x) ∧ HasFourRightAngles(y) ∧ HasNoCorners(z)))"
    },
    {
        "NL": "A music festival features various genres, such as rock bands with electric guitars and powerful vocals, jazz ensembles with improvisational skills, and electronic DJs with energetic beats.",
        "FOL": "∀x ∀y (MusicFestival(x) ∧ (RockBand(x, y) ∧ (ElectricGuitar(y) ∧ PowerfulVocals(y)) ∨ JazzEnsemble(x, y) ∧ ImprovisationalSkills(y) ∨ ElectronicDJ(x, y) ∧ EnergeticBeats(y)))"
    },
    {
        "NL": "Pianos and guitars are musical instruments that can play chords and melodies.",
        "FOL": "∀x ∀y (Piano(x) ∧ Guitar(y) → (MusicalInstrument(x) ∧ MusicalInstrument(y) ∧ CanPlayChords(x) ∧ CanPlayChords(y) ∧ CanPlayMelodies(x) ∧ CanPlayMelodies(y)))"
    },
    {
        "NL": "A printer uses ink or toner.",
        "FOL": "∀x (Printer(x) → (UsesInk(x) ⊕ UsesToner(x)))"
    },
    {
        "NL": "A watch displays time and can be either analog or digital.",
        "FOL": "∀x (Watch(x) → (DisplaysTime(x) ∧ (Analog(x) ⊕ Digital(x))))"
    },
    {
        "NL": "A shape can be a triangle or a square, but it cannot be a triangle and a square simultaneously.",
        "FOL": "∀x∀y∀z (Shape(x) ∧ Triangle(y) ∧ Square(z) → ¬(IsType(x, y) ∧ IsType(x, z)))"
    },
    {
        "NL": "Every doctor who is considerate is trusted by all patients.",
        "FOL": "∀x (Doctor(x) ∧ Considerate(x) → ∀y (Patient(y) → Trusts(y, x)))"
    },
    {
        "NL": "If a person is a software developer, they must design, create, and maintain computer programs and applications.",
        "FOL": "∀x (SoftwareDeveloper(x) → (DesignsComputerProgramsAndApplications(x) ∧ CreatesComputerProgramsAndApplications(x) ∧ MaintainsComputerProgramsAndApplications(x)))"
    },
    {
        "NL": "A window allows light and air to pass through, while a wall provides structural support and privacy.",
        "FOL": "∀x∀y (Window(x) ∧ Wall(y) → (AllowsLight(x) ∧ AllowsAir(x) ∧ StructuralSupport(y) ∧ ProvidesPrivacy(y)))"
    },
    {
        "NL": "A fruit is ripe if it is mature and has reached its optimal stage for consumption.",
        "FOL": "∀x (Fruit(x) ∧ Mature(x) ∧ OptimalForConsumption(x) → Ripe(x))"
    },
    {
        "NL": "A book becomes a bestseller when it receives positive reviews, has a compelling narrative, and gains widespread popularity.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ PositiveReviews(y) ∧ CompellingNarrative(z) ∧ WidespreadPopularity(x) → Bestseller(x))"
    },
    {
        "NL": "A festival can feature music, film, or art, but not all at the same time.",
        "FOL": "∀x (Festival(x) → ((Music(x) ⊕ Film(x)) ⊕ Art(x)))"
    },
    {
        "NL": "An appliance is regarded as energy-efficient if it consumes less power than conventional models and has a high energy star rating.",
        "FOL": "∀x (Appliance(x) ∧ ConsumesLessPowerThanConventionalModels(x) ∧ HighEnergyStarRating(x) → EnergyEfficient(x))"
    },
    {
        "NL": "A smartphone is considered waterproof if it can be submerged in water without suffering damage.",
        "FOL": "∀x (Waterproof(x) → (Smartphone(x) ∧ ∀y (Water(y) → ¬SuffersDamageWhenSubmerged(x, y))))"
    },
    {
        "NL": "If a car's fuel is empty, it cannot run.",
        "FOL": "∀x (Car(x) ∧ EmptyFuel(x) → ¬Run(x))"
    },
    {
        "NL": "A museum displays artifacts and artworks to educate the public about history and culture.",
        "FOL": "∀x∀y∀z (Museum(x) ∧ Artifact(y) ∧ Artwork(z) → (Displays(x, y) ∧ Displays(x, z) ∧ EducatesPublicAboutHistoryAndCulture(x)))"
    },
    {
        "NL": "A mirror reflects light, allowing people to see their own reflection.",
        "FOL": "∀x ∀y (Mirror(x) ∧ ReflectsLight(x) ∧ Person(y) → SeesReflection(y, x))"
    },
    {
        "NL": "No fish likes dry food.",
        "FOL": "∀x ∀y (Fish(x) ∧ DryFood(y) → ¬Like(x, y))"
    },
    {
        "NL": "A lecture is engaging if it is presented by a knowledgeable speaker, covers relevant topics, and encourages audience participation, but not if it is excessively long.",
        "FOL": "∀x (Lecture(x) → (EngagingLecture(x) ↔ (KnowledgeableSpeaker(x) ∧ RelevantTopics(x) ∧ EncouragesParticipation(x) ∧ ¬ExcessivelyLong(x))))"
    },
    {
        "NL": "A door is locked if it is not unlocked.",
        "FOL": "∀x (Door(x) → (Locked(x) ↔ ¬Unlocked(x)))"
    },
    {
        "NL": "If a person is a lawyer, they practice law.",
        "FOL": "∀x (Person(x) ∧ Lawyer(x) → PracticeLaw(x))"
    },
    {
        "NL": "When a film is critically acclaimed and commercially successful, it may have a significant cultural impact.",
        "FOL": "∀x (Film(x) ∧ CriticallyAcclaimed(x) ∧ CommerciallySuccessful(x) → ∃y (Culture(y) ∧ Impact(x, y)))"
    },
    {
        "NL": "A key can unlock a door only when it matches the lock.",
        "FOL": "∀x ∀y (Key(x) ∧ Door(y) ∧ Matches(x, y) → CanUnlock(x, y))"
    },
    {
        "NL": "A room is available if it is not reserved or occupied.",
        "FOL": "∀x (Room(x) ∧ ¬Reserved(x) ∧ ¬Occupied(x) → Available(x))"
    },
    {
        "NL": "An athlete can participate in running or swimming, but not in both events at the same time.",
        "FOL": "∀x (Athlete(x) → (ParticipateInRunning(x) ⊕ ParticipateInSwimming(x)))"
    },
    {
        "NL": "Emily trusts Paul or David.",
        "FOL": "Trust(emily, paul) ∨ Trust(emily, david)"
    },
    {
        "NL": "Paintings are created on surfaces using various mediums like oil, acrylic, or watercolor.",
        "FOL": "∀x (Painting(x) → (CreatedOn(y) ∧ Surface(y) ∧ UsingMedium(z) ∧ (Oil(z) ∨ Acrylic(z) ∨ Watercolor(z)) ∧ With(x, y, z)))"
    },
    {
        "NL": "Trees can convert sunlight into food and they cannot move, while animals cannot convert sunlight into food and can move.",
        "FOL": "∀x (Tree(x) → CanConvertSunlight(x) ∧ ¬CanMove(x)) ∧ ∀y (Animal(y) → ¬CanConvertSunlight(y) ∧ CanMove(y))"
    },
    {
        "NL": "A doctor prescribes medication if a patient requires treatment for an illness.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) ∧ RequiresTreatmentForIllness(y) → PrescribesMedication(x, y))"
    },
    {
        "NL": "A novel is a long fictional narrative, while a short story is a brief work of fiction that typically focuses on a single event or character.",
        "FOL": "∀x ∀y (Novel(x) → (Long(x) ∧ FictionalNarrative(x))) ∧ (ShortStory(y) → (Brief(y) ∧ WorkOfFiction(y) ∧ SingleEventOrCharacterFocus(y)))"
    },
    {
        "NL": "A workout is effective when it combines cardio and strength training exercises.",
        "FOL": "∀x (Workout(x) ∧ (CardioExercises(x) ∧ StrengthTrainingExercises(x)) → Effective(x))"
    },
    {
        "NL": "A smartphone is a mobile phone if it has a touchscreen, internet access, and can run various applications.",
        "FOL": "∀x (Smartphone(x) ∧ Touchscreen(x) ∧ InternetAccess(x) ∧ RunVariousApplications(x) → MobilePhone(x))"
    },
    {
        "NL": "A room is noisy when it has loud sounds or heavy vibrations, but not both, and it disturbs people.",
        "FOL": "∀x (Room(x) ∧ Noisy(x) ↔ ((LoudSounds(x) ⊕ HeavyVibrations(x)) ∧ DisturbPeople(x)))"
    },
    {
        "NL": "If a room is dark and cold, it is not cozy.",
        "FOL": "∀x (Room(x) ∧ Dark(x) ∧ Cold(x) → ¬Cozy(x))"
    },
    {
        "NL": "A vehicle provides a comfortable ride when it has a well-tuned suspension system, offers ample legroom, and features ergonomic seating.",
        "FOL": "∀x (Vehicle(x) ∧ WellTunedSuspension(x) ∧ AmpleLegroom(x) ∧ ErgonomicSeating(x) → ComfortableRide(x))"
    },
    {
        "NL": "An artwork becomes valuable if it is unique, made by a renowned artist, or has historical significance.",
        "FOL": "∀x (Artwork(x) ∧ (Unique(x) ⊕ RenownedArtist(x) ⊕ HistoricalSignificance(x)) → Valuable(x))"
    },
    {
        "NL": "A gadget can be a phone or a tablet.",
        "FOL": "∀x (Gadget(x) → (Phone(x) ∨ Tablet(x)))"
    },
    {
        "NL": "If a person is a hairstylist, they either cut hair or style hair.",
        "FOL": "∀x (Person(x) ∧ Hairstylist(x) → CutHair(x) ⊕ StyleHair(x))"
    },
    {
        "NL": "Coral reefs provide a habitat for a diverse range of marine species, contribute to coastal protection from storms and erosion, and support local economies through tourism and fisheries.",
        "FOL": "∀x∀y∀z (CoralReef(x) ∧ MarineSpecies(y) ∧ LocalEconomy(z) → (ProvidesHabitat(x, y) ∧ ContributesToCoastalProtection(x) ∧ Supports(z, TourismAndFisheries)))"
    },
    {
        "NL": "A region is assessed as secure when it presents a low rate of violent behavior and includes a credible security system or dedicated community collaboration.",
        "FOL": "∀x (Region(x) ∧ LowRateOfViolentBehavior(x) ∧ (IncludesCredibleSecuritySystem(x) ∨ DedicatedCommunityCollaboration(x)) → Secure(x))"
    },
    {
        "NL": "A smartphone is a portable device that combines the functions of a mobile phone, a digital camera, and a personal computer.",
        "FOL": "∀x (Smartphone(x) ↔ (PortableDevice(x) ∧ MobilePhoneFunction(x) ∧ DigitalCameraFunction(x) ∧ PersonalComputerFunction(x)))"
    },
    {
        "NL": "A person is considered a vegetarian if they do not consume meat.",
        "FOL": "∀x (Person(x) ∧ Vegetarian(x) ↔ ¬ConsumesMeat(x))"
    },
    {
        "NL": "A sustainable agricultural system involves crop rotation, organic farming practices, and efficient water management to maintain soil fertility and reduce environmental impacts.",
        "FOL": "∀x∀y∀z (AgriculturalSystem(x) ∧ CropRotation(x, y) ∧ OrganicFarmingPractices(x, y) ∧ EfficientWaterManagement(x, z) → (MaintainsSoilFertility(x) ∧ ReducesEnvironmentalImpacts(x)))"
    },
    {
        "NL": "There does not exist a tree that produces all types of fruits.",
        "FOL": "¬∃x (Tree(x) ∧ ∀y (Fruit(y) → Produces(x, y)))"
    },
    {
        "NL": "A machine that converts electrical energy into mechanical energy through the interaction of magnetic fields is an electric motor.",
        "FOL": "∀x (Machine(x) ∧ ConvertsElectricalEnergyToMechanicalEnergy(x) ∧ InteractsWithMagneticFields(x) → ElectricMotor(x))"
    },
    {
        "NL": "A thriving ecosystem is characterized by a diverse range of species, ample resources, and a stable environment that fosters the survival and reproduction of its inhabitants.",
        "FOL": "∀x (ThrivingEcosystem(x) ↔ (DiverseSpecies(x) ∧ AmpleResources(x) ∧ StableEnvironment(x) ∧ FostersSurvival(x) ∧ FostersReproduction(x)))"
    },
    {
        "NL": "A mushroom is a type of fungi with a cap and stem, grows in moist environments, and is not a plant.",
        "FOL": "∀x (Mushroom(x) ↔ (Fungi(x) ∧ HasCap(x) ∧ HasStem(x) ∧ GrowsInMoistEnvironments(x) ∧ ¬Plant(x)))"
    },
    {
        "NL": "A robot is operational when its battery is charged and its system is functional.",
        "FOL": "∀x (Robot(x) ∧ BatteryCharged(x) ∧ SystemFunctional(x) → Operational(x))"
    },
    {
        "NL": "A musical performance receives a standing ovation if it has exceptional musicianship, captivates the audience, and evokes strong emotions.",
        "FOL": "∀x (MusicalPerformance(x) ∧ ExceptionalMusicianship(x) ∧ CaptivatesAudience(x) ∧ EvokesStrongEmotions(x) → StandingOvation(x))"
    },
    {
        "NL": "A building with proper insulation, energy-efficient windows, and solar panels is considered energy efficient.",
        "FOL": "∀x (Building(x) ∧ ProperInsulation(x) ∧ EnergyEfficientWindows(x) ∧ SolarPanels(x) → EnergyEfficient(x))"
    },
    {
        "NL": "A fish lives in freshwater if it inhabits lakes or rivers.",
        "FOL": "∀x (Fish(x) → (Freshwater(x) ↔ (InhabitsLakes(x) ∨ InhabitsRivers(x))))"
    },
    {
        "NL": "No cats are black.",
        "FOL": "¬∃x (Cat(x) ∧ Black(x))"
    },
    {
        "NL": "Solar panels generate electricity from sunlight, whereas wind turbines harness power from wind.",
        "FOL": "∀x ∀y (SolarPanel(x) ∧ WindTurbine(y) → (GeneratesElectricityFromSunlight(x) ⊕ HarnessesPowerFromWind(y)))"
    },
    {
        "NL": "A painting is admired if it has a unique style, appealing colors, and is often displayed.",
        "FOL": "∀x (Painting(x) ∧ HasUniqueStyle(x) ∧ HasAppealingColors(x) ∧ IsOftenDisplayed(x) → IsAdmired(x))"
    },
    {
        "NL": "A person is teetotaler if they don't consume beer, wine, and liquor.",
        "FOL": "∀x (Person(x) → ¬DrinkBeer(x) ∧ ¬DrinkWine(x) ∧ ¬DrinkLiquor(x) → Teetotaler(x))"
    },
    {
        "NL": "A painting is intriguing when it has complex layers and thought-provoking themes.",
        "FOL": "∀x (Painting(x) ∧ ComplexLayers(x) ∧ ThoughtProvokingThemes(x) → Intriguing(x))"
    },
    {
        "NL": "Some students study mathematics, while others study literature.",
        "FOL": "∃x ∃y (Student(x) ∧ Mathematics(y) ∧ Study(x, y)) ∧ ∃z ∃w (Student(z) ∧ Literature(w) ∧ Study(z, w))"
    },
    {
        "NL": "All cars are expensive if and only if they are either sports or luxury.",
        "FOL": "∀x (Car(x) → (Expensive(x) ↔ (Sports(x) ∨ Luxury(x))))"
    },
    {
        "NL": "A person who performs in plays and other theatrical productions is called an actor.",
        "FOL": "∀x (PerformsInPlaysAndTheatricalProductions(x) → Actor(x))"
    },
    {
        "NL": "If a person practices effective stress management techniques, they are more likely to experience improved mental health and increased productivity.",
        "FOL": "∀x (PracticesEffectiveStressManagementTechniques(x) → (ImprovedMentalHealth(x) ∧ IncreasedProductivity(x)))"
    },
    {
        "NL": "A celestial event where one astronomical object passes in front of another, blocking the view of the latter, is called an occultation.",
        "FOL": "∀x∀y (CelestialEvent(x) ∧ AstronomicalObject(y) ∧ PassesInFrontOf(x, y) ∧ BlocksView(x, y) → Occultation(x))"
    },
    {
        "NL": "A player wins a chess match if they checkmate their opponent's king or their opponent resigns.",
        "FOL": "∀x ∀y (Player(x) ∧ Opponent(y) ∧ (CheckmateKing(x, y) ∨ OpponentResigns(y)) → WinsChessMatch(x))"
    },
    {
        "NL": "Some buildings are tall and have a rooftop garden.",
        "FOL": "∃x (Building(x) ∧ Tall(x) ∧ RooftopGarden(x))"
    },
    {
        "NL": "A fruit is classified as a berry if it has multiple seeds and a fleshy pericarp.",
        "FOL": "∀x (Fruit(x) ∧ HasMultipleSeeds(x) ∧ HasFleshyPericarp(x) → Berry(x))"
    },
    {
        "NL": "A line is not curved and does not intersect any orange figure.",
        "FOL": "∀x (Line(x) → (¬Curved(x) ∧ ¬∃y (Orange(y) ∧ Intersects(x, y))))"
    },
    {
        "NL": "Not all songs are suitable for all ages.",
        "FOL": "¬∀x (Song(x) → SuitableForAllAges(x))"
    },
    {
        "NL": "A student is diligent if and only if they are not failing or have a 3.5 GPA.",
        "FOL": "∀x (Student(x) → (Diligent(x) ↔ (¬Failing(x) ∨ EqualToThreePointFive(x))))"
    },
    {
        "NL": "A plant is classified as a tree if it has a woody trunk, grows taller than 15 feet, and has a branching structure with leaves or needles.",
        "FOL": "∀x (Plant(x) ∧ WoodyTrunk(x) ∧ GrowsTallerThan(x, 15) ∧ BranchingStructure(x) → Tree(x))"
    },
    {
        "NL": "An organization is a charity if it has a non-profit status, focuses on a philanthropic mission, and relies on donations to fund its activities.",
        "FOL": "∀x (Charity(x) ↔ (Organization(x) ∧ NonProfitStatus(x) ∧ FocusesOnPhilanthropicMission(x) ∧ ReliesOnDonations(x)))"
    },
    {
        "NL": "All students are either undergraduates or graduates.",
        "FOL": "∀x (Student(x) → (Undergraduate(x) ∨ Graduate(x)))"
    },
    {
        "NL": "All flowers are either beautiful or scentless.",
        "FOL": "∀x (Flower(x) → (Beautiful(x) ⊕ Scentless(x)))"
    },
    {
        "NL": "A job candidate is selected for an interview if their experience and qualifications match the job requirements, and there are no red flags in their background check.",
        "FOL": "∀x∀y (JobCandidate(x) ∧ Job(y) → (SelectedForInterview(x, y) ↔ (ExperienceMatches(x, y) ∧ QualificationsMatch(x, y) ∧ ¬RedFlags(x))))"
    },
    {
        "NL": "Animals living in a clean and spacious habitat exhibit less stress and have a higher overall well-being.",
        "FOL": "∀x (Animal(x) ∧ CleanAndSpaciousHabitat(x) → LessStressAndHigherWellBeing(x))"
    },
    {
        "NL": "A bat uses echolocation to navigate and find food in the dark.",
        "FOL": "∀x (Bat(x) → (UsesEcholocationToNavigate(x) ∧ UsesEcholocationToFindFood(x)))"
    },
    {
        "NL": "Some engineers who work in robotics are also skilled in programming.",
        "FOL": "∃x (Engineer(x) ∧ WorkInRobotics(x) ∧ SkilledInProgramming(x))"
    },
    {
        "NL": "A conference is productive for attendees if it features relevant speakers, encourages networking, and offers valuable content, but not if the sessions are disorganized or the venue is too noisy.",
        "FOL": "∀x∀y (Conference(x) ∧ Attendees(y) → (ProductiveForAttendees(x, y) ↔ ((RelevantSpeakers(x) ∧ EncouragesNetworking(x) ∧ ValuableContent(x)) ∧ ¬(DisorganizedSessions(x) ∨ NoisyVenue(x)))))"
    },
    {
        "NL": "A door can be locked if it has a keyhole and a key.",
        "FOL": "∀x (Door(x) ∧ HasKeyhole(x) ∧ HasKey(x) → CanBeLocked(x))"
    },
    {
        "NL": "A person is either male or female, but not both.",
        "FOL": "∀x (Person(x) → (Male(x) ⊕ Female(x)))"
    },
    {
        "NL": "A triangle has three sides, while a rectangle has four sides, and a pentagon has five sides.",
        "FOL": "NumSides(triangle, 3) ∧ NumSides(rectangle, 4) ∧ NumSides(pentagon, 5)"
    },
    {
        "NL": "A beverage is refreshing when it is cold and has a balance of sweet and sour flavors.",
        "FOL": "∀x (Beverage(x) ∧ Refreshing(x) → (Cold(x) ∧ Sweet(x) ∧ Sour(x)))"
    },
    {
        "NL": "A film belongs to the science fiction genre if it features futuristic technology, explores extraterrestrial life, or takes place in an alternate reality.",
        "FOL": "∀x (Film(x) ∧ (FuturisticTechnology(x) ∨ ExtraterrestrialLife(x) ∨ AlternateReality(x)) → ScienceFiction(x))"
    },
    {
        "NL": "A dishwasher cleans dishes.",
        "FOL": "∀x (Dishwasher(x) → CleansDishes(x))"
    },
    {
        "NL": "A thermometer measures temperature by the expansion or contraction of a fluid or a solid.",
        "FOL": "∀x ∀y (Thermometer(x) ∧ (Expansion(y) ∨ Contraction(y)) ∧ (Fluid(y) ∨ Solid(y)) → MeasuresTemperature(x, y))"
    },
    {
        "NL": "Nobody in the team communicates with either Alice or Bob.",
        "FOL": "∀x (TeamMember(x) ∧ InTeam(x) → ¬Communicate(x, alice) ∧ ¬Communicate(x, bob))"
    },
    {
        "NL": "A circle is blue if and only if it is not medium and it points to a red or yellow object.",
        "FOL": "∀x (Circle(x) → ((Blue(x) ↔ ¬Medium(x)) ∧ ∃y (PointsTo(x, y) → (Red(y) ∨ Yellow(y)))))"
    },
    {
        "NL": "All dogs are either puppy or adults.",
        "FOL": "∀x (Dog(x) → (Puppy(x) ⊕ Adult(x)))"
    },
    {
        "NL": "A surface can be smooth or rough.",
        "FOL": "∀x (Surface(x) → (Smooth(x) ⊕ Rough(x)))"
    },
    {
        "NL": "A work of art is a sculpture if it is a three-dimensional object made of materials like stone, metal, or clay, and is created by an artist.",
        "FOL": "∀x∀y (WorkOfArt(x) ∧ Artist(y) ∧ ThreeDimensional(x) ∧ (MadeOfStone(x) ∨ MadeOfMetal(x) ∨ MadeOfClay(x)) ∧ CreatedBy(x, y) → Sculpture(x))"
    },
    {
        "NL": "A restaurant serves food prepared by a chef, and customers pay for the meals they order.",
        "FOL": "∀x∀y∀z (Restaurant(x) ∧ Chef(y) ∧ Customer(z) → (ServesFood(x, y) ∧ PaysForMeals(z, x)))"
    },
    {
        "NL": "A film could become a blockbuster if it features well-known actors, has a high production budget, and receives positive critical reviews.",
        "FOL": "∀x (Film(x) ∧ WellKnownActors(x) ∧ HighProductionBudget(x) ∧ PositiveCriticalReviews(x) → Blockbuster(x))"
    },
    {
        "NL": "A fruit is either ripe or unripe, but not both.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ⊕ Unripe(x)))"
    },
    {
        "NL": "An animal is a marsupial if it carries and nourishes its young in a pouch after birth.",
        "FOL": "∀x (Marsupial(x) ↔ (Animal(x) ∧ CarriesYoungInPouch(x) ∧ NourishesYoungInPouch(x)))"
    },
    {
        "NL": "An object is considered a tool if it is designed to help accomplish a specific task or tasks.",
        "FOL": "∀x (Object(x) ∧ DesignedToHelpAccomplishTask(x) → Tool(x))"
    },
    {
        "NL": "A shape is a parallelogram if it has four sides and its opposite sides are parallel.",
        "FOL": "∀x (Shape(x) ∧ FourSides(x) ∧ OppositeSidesParallel(x) → Parallelogram(x))"
    },
    {
        "NL": "An element is a metal if it is a good conductor of heat and electricity.",
        "FOL": "∀x (Element(x) ∧ GoodConductorOfHeatAndElectricity(x) → Metal(x))"
    },
    {
        "NL": "A heatwave that causes dehydration and fatigue or fainting is a scorcher.",
        "FOL": "∀x (Heatwave(x) → (CausesDehydration(x) ∧ CausesFatigue(x) ∨ CausesFainting(x) → Scorcher(x)))"
    },
    {
        "NL": "A phone is on if its screen is lit.",
        "FOL": "∀x (Phone(x) ∧ On(x) ↔ ScreenLit(x))"
    },
    {
        "NL": "Not all recipes are tasty.",
        "FOL": "¬∀x (Recipe(x) → Tasty(x))"
    },
    {
        "NL": "If all dogs are not barking, there is a park that every park is connected to.",
        "FOL": "¬∀x (Dog(x) → Barking(x)) → ∃y (Park(y) ∧ ∀z (Park(z) → ConnectedTo(z, y)))"
    },
    {
        "NL": "A violinist plays the violin, a cellist performs on the cello, and a pianist practices the piano.",
        "FOL": "∀x∀y∀z (Violinist(x) ∧ Cellist(y) ∧ Pianist(z) → (PlaysViolin(x) ∧ PerformsCello(y) ∧ PracticesPiano(z)))"
    },
    {
        "NL": "A square has four sides of equal length, while a rectangle has four sides with opposite sides equal in length.",
        "FOL": "∀x (Square(x) → (FourSides(x) ∧ EqualLengthSides(x))) ∧ (Rectangle(x) → (FourSides(x) ∧ OppositeSidesEqual(x)))"
    },
    {
        "NL": "A movie theater typically shows movies and has comfortable seating for the audience.",
        "FOL": "∀x (MovieTheater(x) ↔ (ShowsMovies(x) ∧ HasComfortableSeating(x)))"
    },
    {
        "NL": "In a museum, paintings are preserved under controlled temperature and humidity.",
        "FOL": "∀x (Museum(x) ∧ ∀y (Painting(y) → PreservedUnderControlledConditions(x, y)))"
    },
    {
        "NL": "A kite is flown in the wind, a remote control car is driven on the ground, and a toy boat is played with in water.",
        "FOL": "∀x∀y∀z (Kite(x) → FlownInWind(x)) ∧ (RemoteControlCar(y) → DrivenOnGround(y)) ∧ (ToyBoat(z) → PlayedWithInWater(z))"
    },
    {
        "NL": "A molecule that consists of a particular arrangement of atoms, exhibits specific chemical properties, and participates in certain biological processes is typically an enzyme or a hormone.",
        "FOL": "∀x∀y∀z (Molecule(x) ∧ ConsistsOfArrangementOfAtoms(x, y) ∧ ExhibitsChemicalProperties(x, z) ∧ ParticipatesInBiologicalProcesses(x) → (Enzyme(x) ∨ Hormone(x)))"
    },
    {
        "NL": "A book is either a hardcover or a paperback, but not both, and it's either fiction or non-fiction, but not both.",
        "FOL": "∀x (Book(x) → ((Hardcover(x) ⊕ Paperback(x)) ∧ (Fiction(x) ⊕ NonFiction(x))))"
    },
    {
        "NL": "A vehicle with four wheels used for transportation is a car.",
        "FOL": "∀x (Vehicle(x) ∧ HasFourWheels(x) ∧ UsedForTransportation(x) → Car(x))"
    },
    {
        "NL": "There is no greatest natural number, and no least natural number.",
        "FOL": "∀x (NaturalNumber(x) → (∃y (NaturalNumber(y) ∧ Greater(y, x)) ∧ ∃z (NaturalNumber(z) ∧ Less(z, x))))"
    },
    {
        "NL": "A bird sings melodies.",
        "FOL": "∀x ∀y (Bird(x) ∧ Melody(y) → Sing(x, y))"
    },
    {
        "NL": "An aircraft that has a fixed-wing structure, uses jet engines for propulsion, and is designed for long-range travel is a jet airliner.",
        "FOL": "∀x (Aircraft(x) ∧ FixedWingStructure(x) ∧ UsesJetEngines(x) ∧ DesignedForLongRangeTravel(x) → JetAirliner(x))"
    },
    {
        "NL": "Adults and teenagers irritate Professor Green.",
        "FOL": "∀x ((Adult(x) ∨ Teenager(x)) → Irritate(x, professorgreen))"
    },
    {
        "NL": "A smartphone has advanced computing capabilities and includes features not found in feature phones.",
        "FOL": "∀x (Smartphone(x) → (HasAdvancedComputing(x) ∧ IncludesNonFeaturePhoneFeatures(x)))"
    },
    {
        "NL": "Not every song is a ballad.",
        "FOL": "¬∀x (Song(x) → Ballad(x))"
    },
    {
        "NL": "A poem is an autobiographical poem if it reflects the personal experiences of a certain poet, written by the poet themselves.",
        "FOL": "∀x ∃y (Poem(x) ∧ Poet(y) ∧ ReflectsExperiences(x, y) ∧ WrittenBy(x, y) → AutobiographicalPoem(x))"
    },
    {
        "NL": "A home is cozy if and only if it's warm or inviting.",
        "FOL": "∀x (Cozy(x) ↔ (Warm(x) ∨ Inviting(x)))"
    },
    {
        "NL": "If a meal is a main course, then it is either spicy or bland, but not both.",
        "FOL": "∀x (MainCourse(x) → (Spicy(x) ⊕ Bland(x)))"
    },
    {
        "NL": "If a vehicle is a motorcycle, it has two wheels.",
        "FOL": "∀x (Motorcycle(x) → NumberOfWheels(x, 2))"
    },
    {
        "NL": "Renewable energy sources, such as solar power, wind power, and hydropower, help reduce greenhouse gas emissions and reliance on fossil fuels.",
        "FOL": "∀x∀y∀z (RenewableEnergySources(x) ∧ (SolarPower(x) ∨ WindPower(x) ∨ Hydropower(x)) → (ReducesGreenhouseGasEmissions(y) ∧ ReducesRelianceOnFossilFuels(z)))"
    },
    {
        "NL": "Fungi decompose organic matter by releasing enzymes that break down complex molecules.",
        "FOL": "∀x ∀y (Fungus(x) ∧ OrganicMatter(y) → (ReleaseEnzymes(x) ∧ Decompose(x, y)))"
    },
    {
        "NL": "A human is seen as an employee if they are hired by a company or work remotely.",
        "FOL": "∀x (Human(x) ∧ (HiredByCompany(x) ∨ WorkRemotely(x)) → Employee(x))"
    },
    {
        "NL": "A product is successful if it is valued for its quality or features.",
        "FOL": "∀x (Product(x) ∧ (ValuedForQuality(x) ∨ ValuedForFeatures(x)) → Successful(x))"
    },
    {
        "NL": "Every software developer is either a tester or a designer, but not both.",
        "FOL": "∀x (SoftwareDeveloper(x) → (Tester(x) ⊕ Designer(x)))"
    },
    {
        "NL": "A table is brown if and only if it is not light and it supports a pink or a purple object.",
        "FOL": "∀x (Table(x) → ((Brown(x) ↔ ¬Light(x)) ∧ ∃y (Supports(x, y) → (Pink(y) ∨ Purple(y)))))"
    },
    {
        "NL": "A film that receives positive reviews and high box office revenue is considered successful.",
        "FOL": "∀x (Film(x) ∧ PositiveReviews(x) ∧ HighBoxOfficeRevenue(x) → Successful(x))"
    },
    {
        "NL": "If all scientists who are biologists will research, then some scientists who are not biologists will also research.",
        "FOL": "∀x (Scientist(x) ∧ Biologist(x) → Research(x)) → ∃y (Scientist(y) ∧ ¬Biologist(y) ∧ Research(y))"
    },
    {
        "NL": "A car is at the garage only if the mechanic is there.",
        "FOL": "∀x ∀y (Car(x) ∧ Mechanic(y) ∧ (At(x, y) → At(y, x)))"
    },
    {
        "NL": "Every chef who has trained apprentices, all of whom have mastered their craft and appreciated the chef, either has won an award or has been praised by all their coworkers.",
        "FOL": "∀x (Chef(x) ∧ ∀y (Apprentice(y) ∧ Trained(x, y) ∧ MasteredCraft(y) ∧ Appreciated(y, x)) → (WonAward(x) ∨ ∀z (Coworker(z, x) → Praised(z, x))))"
    },
    {
        "NL": "A liquid is called a solvent when it can dissolve other substances.",
        "FOL": "∀x (Liquid(x) ∧ CanDissolveSubstances(x) → Solvent(x))"
    },
    {
        "NL": "A vehicle can be classified as an electric vehicle if it is powered by an electric motor and has a rechargeable battery.",
        "FOL": "∀x (Vehicle(x) ∧ ElectricMotor(x) ∧ RechargeableBattery(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A watch displays the time, date, and has a stopwatch function.",
        "FOL": "∀x (Watch(x) → (DisplaysTime(x) ∧ DisplaysDate(x) ∧ HasStopwatchFunction(x)))"
    },
    {
        "NL": "No planets are stars.",
        "FOL": "¬∃x (Planet(x) ∧ Star(x))"
    },
    {
        "NL": "A school provides education to students by offering courses, organizing extracurricular activities, and employing qualified teachers.",
        "FOL": "∀x∀y (School(x) ∧ Student(y) ∧ OffersCourses(x) ∧ OrganizesExtracurricularActivities(x) ∧ EmploysQualifiedTeachers(x) → ProvidesEducation(x, y))"
    },
    {
        "NL": "A pill can fight an infection by lessening its indications.",
        "FOL": "∀x ∀y (Pill(x) ∧ Infection(y) → (Fights(x, y) → LessensIndications(x, y)))"
    },
    {
        "NL": "A polygon with five sides is called a pentagon.",
        "FOL": "∀x (Polygon(x) ∧ HasSides(x, 5) → Pentagon(x))"
    },
    {
        "NL": "Birds can eat seeds or insects as part of their diet.",
        "FOL": "∀x ∀y (Bird(x) ∧ (Seed(y) ∨ Insect(y)) → Eats(x, y))"
    },
    {
        "NL": "No one at the meeting greets either Bob or Alice.",
        "FOL": "∀x (Person(x) ∧ AtMeeting(x) → ¬Greet(x, bob) ∧ ¬Greet(x, alice))"
    },
    {
        "NL": "A seed germinates in soil when it receives water and warmth.",
        "FOL": "∀x ∀y ∀z ∀w (Seed(x) ∧ Soil(y) ∧ Water(z) ∧ Warmth(w) → (Germinates(x, y) ↔ Receives(x, z, w)))"
    },
    {
        "NL": "If all flowers are not colorful, then there is a tree that all trees grow towards.",
        "FOL": "¬∀x (Flower(x) → Colorful(x)) → ∃y (Tree(y) ∧ ∀z (Tree(z) → GrowsTowards(z, y)))"
    },
    {
        "NL": "Flowers need sunlight and soil to grow.",
        "FOL": "∀x (Flower(x) → (Sunlight(y) ∧ Soil(z) → Needs(x, y, z)))"
    },
    {
        "NL": "The object is a chair or not a chair.",
        "FOL": "∀x (Object(x) → (Chair(x) ⊕ ¬Chair(x)))"
    },
    {
        "NL": "A dog is classified as a hound if it has long ears and hunts by scent.",
        "FOL": "∀x (Dog(x) ∧ HasLongEars(x) ∧ HuntsByScent(x) → Hound(x))"
    },
    {
        "NL": "Bicycles are eco-friendly modes of transportation that require human power to operate.",
        "FOL": "∀x (Bicycle(x) → (EcoFriendly(x) ∧ HumanPowered(x)))"
    },
    {
        "NL": "Smartphones with long battery life, high-resolution cameras, and fast processors are highly demanded.",
        "FOL": "∀x ∀y ∀z (Smartphone(x) ∧ LongBatteryLife(x, y) ∧ HighResolutionCamera(x, z) ∧ FastProcessor(x) → HighlyDemanded(x))"
    },
    {
        "NL": "Every student who enjoys a book is praised by a teacher.",
        "FOL": "∀x (Student(x) ∧ ∃y (Book(y) ∧ Enjoys(x, y)) → ∃z (Teacher(z) ∧ Praises(z, x)))"
    },
    {
        "NL": "A vehicle is classified as a bicycle when it has two wheels and is powered by human pedaling.",
        "FOL": "∀x (Vehicle(x) ∧ TwoWheels(x) ∧ PoweredByHumanPedaling(x) → Bicycle(x))"
    },
    {
        "NL": "A dog is suitable for adoption if it is vaccinated, socialized, and not aggressive towards humans or other animals.",
        "FOL": "∀x (Dog(x) ∧ Vaccinated(x) ∧ Socialized(x) ∧ ¬AggressiveTowardsHumansOrAnimals(x) → SuitableForAdoption(x))"
    },
    {
        "NL": "A person who repairs and maintains electronic equipment is called an electronics technician.",
        "FOL": "∀x (RepairsAndMaintainsElectronicEquipment(x) → ElectronicsTechnician(x))"
    },
    {
        "NL": "A lion can roar and hunt, while a rabbit cannot roar nor hunt.",
        "FOL": "∀x (Lion(x) → CanRoar(x) ∧ CanHunt(x)) ∧ ∀y (Rabbit(y) → ¬CanRoar(y) ∧ ¬CanHunt(y))"
    },
    {
        "NL": "The process of evaporation occurs when a liquid is heated and turns into vapor.",
        "FOL": "∀x ∀y (Liquid(x) ∧ Heated(x) → (Evaporation(x) ↔ TurnsIntoVapor(x, y)))"
    },
    {
        "NL": "Birds have feathers, wings, and beaks.",
        "FOL": "∀x (Bird(x) → (HasFeathers(x) ∧ HasWings(x) ∧ HasBeak(x)))"
    },
    {
        "NL": "A body of water x is a lake if it is a large, inland, and typically freshwater body of water.",
        "FOL": "∀x (BodyOfWater(x) ∧ Large(x) ∧ Inland(x) ∧ TypicallyFreshwater(x) → Lake(x))"
    },
    {
        "NL": "In a rectangle, opposite sides are equal in length and parallel.",
        "FOL": "∀x (Rectangle(x) → (EqualLength(x, side1, side3) ∧ EqualLength(x, side2, side4) ∧ Parallel(x, side1, side3) ∧ Parallel(x, side2, side4)))"
    },
    {
        "NL": "A drawing is a sketch or a painting.",
        "FOL": "∀x (Drawing(x) → (Sketch(x) ∨ Painting(x)))"
    },
    {
        "NL": "An umbrella keeps you dry during rain or snow.",
        "FOL": "∀x ∀y (Umbrella(x) ∧ (Raining(y) ∨ Snowing(y)) → KeepsDry(x, y))"
    },
    {
        "NL": "A beverage is either a stimulating coffee or a calming tea, but not both.",
        "FOL": "∀x ((Stimulating(x) ∧ Coffee(x)) ⊕ (Calming(x) ∧ Tea(x)))"
    },
    {
        "NL": "A computer operates efficiently when it runs on a fast processor, contains sufficient memory, and has an up-to-date operating system.",
        "FOL": "∀x∀y∀z∀w (Computer(x) ∧ Processor(y) ∧ Memory(z) ∧ OperatingSystem(w) ∧ Fast(y) ∧ Sufficient(z) ∧ UpToDate(w) → OperatesEfficiently(x))"
    },
    {
        "NL": "A scientist who discovers a new species contributes to the field of biology.",
        "FOL": "∀x ∀y (Scientist(x) ∧ DiscoversNewSpecies(x, y) → ContributesToBiology(x))"
    },
    {
        "NL": "Not every athlete is either a cricketer or a footballer.",
        "FOL": "¬∀x (Athlete(x) → (Cricketer(x) ∨ Footballer(x)))"
    },
    {
        "NL": "A beverage may be hot, cold, or room temperature.",
        "FOL": "∀x (Beverage(x) → Hot(x) ∨ Cold(x) ∨ RoomTemperature(x))"
    },
    {
        "NL": "A substance is a gas if it has no fixed shape or volume and expands to fill its container.",
        "FOL": "∀x (Substance(x) ∧ NoFixedShape(x) ∧ NoFixedVolume(x) ∧ ExpandsToFillContainer(x) → Gas(x))"
    },
    {
        "NL": "A laptop is suitable for gaming if it has a dedicated graphics card, sufficient RAM, and a powerful processor.",
        "FOL": "∀x ∀y ∀z (Laptop(x) ∧ DedicatedGraphicsCard(x, y) ∧ SufficientRAM(x, z) ∧ PowerfulProcessor(x) → SuitableForGaming(x))"
    },
    {
        "NL": "A botanic garden preserves plant species, protecting endangered plants and their ecosystems, while providing opportunities for botanical research and plant sighting endeavors.",
        "FOL": "∀x ∃y ∃z (BotanicGarden(x) → (EndangeredPlants(y) ∧ Ecosystem(z) ∧ LivesIn(y, z) ∧ (PreservesPlantSpecies(x) ∧ Protects(x, y) ∧ Protects(x, z) ∧ ProvidesBotanicalResearchOpportunities(x) ∧ ProvidesPlantSightingOpportunities(x))))"
    },
    {
        "NL": "A creature is a winged raven only if it is black.",
        "FOL": "∀x (Winged(x) ∧ Raven(x) → Black(x))"
    },
    {
        "NL": "A smartphone is secure if it has strong encryption and either receives regular updates or uses biometric authentication.",
        "FOL": "∀x (Smartphone(x) → (Secure(x) ↔ (StrongEncryption(x) ∧ (RegularUpdates(x) ∨ BiometricAuthentication(x)))))"
    },
    {
        "NL": "A company can offer a job to an applicant if the applicant meets the job requirements and the company has an open position for the role.",
        "FOL": "∀x∀y (Company(x) ∧ Applicant(y) ∧ MeetsRequirements(y, x) ∧ OpenPosition(x) → CanOfferJob(x, y))"
    },
    {
        "NL": "A type of metal can be either ferrous or non-ferrous.",
        "FOL": "∀x (Metal(x) → (Ferrous(x) ⊕ NonFerrous(x)))"
    },
    {
        "NL": "A spot is a library if it offers books, opens for public reading, and has a scholarly intent.",
        "FOL": "∀x (Spot(x) ∧ OffersBooks(x) ∧ OpensForPublicReading(x) ∧ HasScholarlyIntent(x) → Library(x))"
    },
    {
        "NL": "A dog is barking in a yard near the house.",
        "FOL": "∃x ∃y (Dog(x) ∧ Yard(y) ∧ BarkingIn(x, y) ∧ NearTheHouse(y))"
    },
    {
        "NL": "A university offers courses in science, arts, and engineering.",
        "FOL": "∃x (University(x) ∧ OffersScienceCourses(x) ∧ OffersArtsCourses(x) ∧ OffersEngineeringCourses(x))"
    },
    {
        "NL": "Toasters are used for toasting bread and bagels.",
        "FOL": "∀x (Toaster(x) → (ToastsBread(x) ∧ ToastsBagels(x)))"
    },
    {
        "NL": "A tree has roots and leaves.",
        "FOL": "∀x (Tree(x) → (HasRoots(x) ∧ HasLeaves(x)))"
    },
    {
        "NL": "In a forest ecosystem, herbivores consume plants, and carnivores prey on herbivores.",
        "FOL": "∀x ∀y ∀z (ForestEcosystem(x) ∧ Herbivore(y) ∧ Carnivore(z) → (ConsumesPlants(y, x) ∧ PreysOn(z, y)))"
    },
    {
        "NL": "Diseases caused by bacteria can be treated with antibiotics.",
        "FOL": "∀x (Disease(x) ∧ CausedByBacteria(x) → TreatableWithAntibiotics(x))"
    },
    {
        "NL": "Athletes who train intensely often encounter injuries.",
        "FOL": "∀x (Athlete(x) ∧ TrainIntensely(x) → EncounterInjuries(x))"
    },
    {
        "NL": "A key unlocks a lock if it matches the lock's specific pattern.",
        "FOL": "∀x ∀y (Key(x) ∧ Lock(y) ∧ MatchesPattern(x, y) → Unlocks(x, y))"
    },
    {
        "NL": "A phone rings when someone calls, and it vibrates if it is on silent mode.",
        "FOL": "∀x∀y (Phone(x) ∧ ((Rings(x) ∧ Calls(y, x)) ∨ (Vibrates(x) ∧ SilentMode(x))))"
    },
    {
        "NL": "Vegetarians eat vegetables, while vegans avoid all animal products.",
        "FOL": "∀x ∀y (Vegetarian(x) ∧ Vegetable(y) → Eats(x, y)) ∧ ∀z ∀w (Vegan(z) ∧ AnimalProduct(w) → Avoids(z, w))"
    },
    {
        "NL": "A shape is either a circle, a square, or a triangle.",
        "FOL": "∃x (Shape(x) ∧ (Circle(x) ∨ Square(x) ∨ Triangle(x)))"
    },
    {
        "NL": "A tropical rainforest has a high level of biodiversity, receives significant rainfall, and is characterized by consistently warm temperatures.",
        "FOL": "∀x (TropicalRainforest(x) → (HighBiodiversity(x) ∧ SignificantRainfall(x) ∧ ConsistentlyWarmTemperatures(x)))"
    },
    {
        "NL": "Not every planet has a moon, but all planets orbit a star.",
        "FOL": "¬∀x (Planet(x) → HasMoon(x)) ∧ ∀y (Planet(y) → OrbitsStar(y))"
    },
    {
        "NL": "A fabric that is breathable and made from natural fibers or synthetic materials with moisture-wicking properties is comfortable.",
        "FOL": "∀x (Fabric(x) ∧ Breathable(x) ∧ (NaturalFibers(x) ∨ MoistureWickingSynthetics(x)) → Comfortable(x))"
    },
    {
        "NL": "A scientist studies the behavior of a certain species if they observe their interaction with the environment and other species, and then document their findings.",
        "FOL": "∀x∀y (Scientist(x) ∧ Species(y) → (ObservesInteractionWithEnvironment(x, y) ∧ ObservesInteractionWithOtherSpecies(x, y) ∧ DocumentsFindings(x, y) → StudiesBehavior(x, y)))"
    },
    {
        "NL": "Either it is sunny or rainy, but not both.",
        "FOL": "∀x (Weather(x) → (Sunny(x) ⊕ Rainy(x)))"
    },
    {
        "NL": "There exists a river where every sheeps graze if not each rectangle has four sides.",
        "FOL": "¬∀x (Rectangle(x) → FourSides(x)) → ∃y (River(y) ∧ ∀z (Sheep(z) → GrazesAt(z, y)))"
    },
    {
        "NL": "An element that has a specific atomic number and exhibits a particular set of properties is usually a metal or a nonmetal.",
        "FOL": "∀x∀y∀z (Element(x) ∧ HasAtomicNumber(x, y) ∧ ExhibitsProperties(x, z) → (Metal(x) ∨ Nonmetal(x)))"
    },
    {
        "NL": "There is no artist who paints with both oil and watercolor but not talented.",
        "FOL": "¬∃x (Artist(x) ∧ PaintsWithOil(x) ∧ PaintsWithWatercolor(x) ∧ ¬Talented(x))"
    },
    {
        "NL": "Rachel watches a Hitchcock film if and only if it was released in 1960.",
        "FOL": "∀x (Film(x) ∧ DirectedBy(x, hitchcock) → (ReleasedIn(x, nineteensixty) ↔ Watches(rachel, x)))"
    },
    {
        "NL": "If a fruit is sweet, then it is not sour.",
        "FOL": "∀x (Fruit(x) ∧ Sweet(x) → ¬Sour(x))"
    },
    {
        "NL": "If a person is a veterinarian, they diagnose and treat health problems in animals.",
        "FOL": "∀x (Veterinarian(x) → (DiagnosesAnimalHealthProblems(x) ∧ TreatsAnimalHealthProblems(x)))"
    },
    {
        "NL": "An entity is labeled as a professional if they are enrolled in a university or a trade school.",
        "FOL": "∀x (Entity(x) ∧ (EnrolledInUniversity(x) ∨ EnrolledInTradeSchool(x)) → Professional(x))"
    },
    {
        "NL": "No books are boring.",
        "FOL": "¬∀x (Book(x) → Boring(x))"
    },
    {
        "NL": "A rooster crows that every hen hears, assuming not all humans are animals.",
        "FOL": "¬∀x (Human(x) → Animal(x)) → ∃y (Rooster(y) ∧ ∀z (Hen(z) → Hears(z, y)))"
    },
    {
        "NL": "Every dolphin is intelligent.",
        "FOL": "∀x (Dolphin(x) → Intelligent(x))"
    },
    {
        "NL": "If a planet has liquid water and an atmosphere, it can potentially support life.",
        "FOL": "∀x ((Planet(x) ∧ LiquidWater(x) ∧ Atmosphere(x)) → CanSupportLife(x))"
    },
    {
        "NL": "If a book is a mystery, it contains suspenseful elements and revolves around solving a crime or puzzle.",
        "FOL": "∀x (Book(x) ∧ Mystery(x) → (ContainsSuspensefulElements(x) ∧ RevolvesAroundSolvingCrimeOrPuzzle(x)))"
    },
    {
        "NL": "A gardener will have a beautiful garden only if she waters regularly.",
        "FOL": "∀x (Gardener(x) ∧ HaveBeautifulGarden(x) → WaterRegularly(x))"
    },
    {
        "NL": "An umbrella protects from rain, while a sunscreen protects from sunlight.",
        "FOL": "∀x ∀y (Umbrella(x) ∧ Rain(y) → ProtectsFrom(x, y)) ∧ ∀z ∀w (Sunscreen(z) ∧ Sunlight(w) → ProtectsFrom(z, w))"
    },
    {
        "NL": "A recycling program reduces waste and conserves resources, mitigating the environmental impact of human activities and supporting sustainable practices.",
        "FOL": "∀x (RecyclingProgram(x) → (ReducesWaste(x) ∧ ConservesResources(x) ∧ MitigatesEnvironmentalImpact(x) ∧ SupportsSustainablePractices(x)))"
    },
    {
        "NL": "A volcano is active if it has erupted recently or shows signs of imminent eruption.",
        "FOL": "∀x (Volcano(x) ∧ (EruptedRecently(x) ∨ ImminentEruption(x)) → Active(x))"
    },
    {
        "NL": "When two substances react chemically and produce a new substance, a chemical reaction occurs.",
        "FOL": "∀x ∀y ∀z (Substance(x) ∧ Substance(y) ∧ ReactsChemically(x, y, z) ∧ NewSubstance(z) → ChemicalReaction(x, y, z))"
    },
    {
        "NL": "A planet is habitable when it has a stable orbit, is in the habitable zone, and has an atmosphere.",
        "FOL": "∀x (Planet(x) ∧ StableOrbit(x) ∧ HabitableZone(x) ∧ Atmosphere(x) → Habitable(x))"
    },
    {
        "NL": "All architects who work with modern and gothic designs, unless they have obtained a Pritzker Prize, have either been featured in prominent architecture journals or have not guided architecture students.",
        "FOL": "∀x (Architect(x) ∧ WorksInModernDesign(x) ∧ WorksInGothicDesign(x) ∨ ReceivedPritzkerPrize(x) → (FeaturedInProminentArchitectureJournals(x) ∨ ¬GuidedArchitectureStudents(x)))"
    },
    {
        "NL": "Everyone receives something she merits and merits something she does not receive.",
        "FOL": "∀x (Person(x) → (∃y (Merits(x, y) ∧ Receive(x, y)) ∧ ∃z (Merits(x, z) ∧ ¬Receive(x, z))))"
    },
    {
        "NL": "A cobra is a snake that has fangs, carries venom, and lives in the wild.",
        "FOL": "∀x (Cobra(x) → Snake(x) ∧ HasFangs(x) ∧ CarriesVenom(x) ∧ LivesInWild(x))"
    },
    {
        "NL": "The concert is canceled only if the main performer is sick or there is severe weather, but not both.",
        "FOL": "∀x∀y (Concert(x) ∧ MainPerformer(y) → (Canceled(x) ↔ (Sick(y) ⊕ SevereWeather(x))))"
    },
    {
        "NL": "Unless a book is both informative and easy to read, it is not valuable.",
        "FOL": "∀x (¬(Informative(x) ∧ EasyToRead(x)) → ¬Valuable(x))"
    },
    {
        "NL": "A place is considered a zoo if it houses and displays a collection of animals for public viewing.",
        "FOL": "∀x (Place(x) ∧ HousesCollectionOfAnimals(x) ∧ DisplaysAnimalsForPublicViewing(x) → Zoo(x))"
    },
    {
        "NL": "A decision is either right or wrong, but not both.",
        "FOL": "∀x (Decision(x) → (Right(x) ⊕ Wrong(x)))"
    },
    {
        "NL": "A plant is flowering or fruiting, but not both.",
        "FOL": "∀x (Plant(x) → (Flowering(x) ⊕ Fruiting(x)))"
    },
    {
        "NL": "A locomotive that can transport over 200 passengers and has ten or more carriages is deemed as a long-haul train.",
        "FOL": "∀v (Locomotive(v) ∧ CanTransportOverTwoHundredPassengers(v) ∧ (HasTenCarriages(v) ∨ HasMoreThanTenCarriages(v)) → LongHaulTrain(v))"
    },
    {
        "NL": "Some birds sing beautifully.",
        "FOL": "∃x (Bird(x) ∧ SingBeautifully(x))"
    },
    {
        "NL": "No athlete who wins every game is celebrated by any fan.",
        "FOL": "∀x (Athlete(x) → ∀y ((Game(y) → Win(x, y)) → ¬∃z (Fan(z) ∧ Celebrate(z, x))))"
    },
    {
        "NL": "A vehicle is considered a classic car if it is older than 25 years and is well-maintained.",
        "FOL": "∀x (Vehicle(x) ∧ ClassicCar(x) ↔ (OlderThan25Years(x) ∧ WellMaintained(x)))"
    },
    {
        "NL": "Every fish in the tank swims.",
        "FOL": "∀x (Fish(x) ∧ InTank(x) → Swim(x))"
    },
    {
        "NL": "A person is monolingual if and only if they speak French or German, but not both.",
        "FOL": "∀x (Person(x) → (Monolingual(x) ↔ (SpeakFrench(x) ⊕ SpeakGerman(x))))"
    },
    {
        "NL": "A violin is a bowed string instrument with four strings, whereas a piano is a keyboard instrument with 88 keys that produce sound by striking strings.",
        "FOL": "∀x∀y (Violin(x) ∧ Piano(y) → (BowedStringInstrument(x) ∧ FourStrings(x)) ∧ (KeyboardInstrument(y) ∧ EightyEightKeys(y) ∧ StrikesStrings(y)))"
    },
    {
        "NL": "If a person is a dentist, they treat teeth and oral health.",
        "FOL": "∀x (Person(x) ∧ Dentist(x) → (TreatTeeth(x) ∧ TreatOralHealth(x)))"
    },
    {
        "NL": "To complete a marathon, one must run 42.195 kilometers.",
        "FOL": "∀x (Marathon(x) → RunDistance(x, 42.195))"
    },
    {
        "NL": "In a bakery, bread is baked, pastries are made, and cakes are decorated.",
        "FOL": "∀x∀y∀z (Bakery(x) ∧ Bread(y) ∧ Pastry(z) → (Bakes(x, y) ∧ Makes(x, z) ∧ Decorates(x, z)))"
    },
    {
        "NL": "Every square is a rectangle, but not every rectangle is a square.",
        "FOL": "∀x (Square(x) → Rectangle(x)) ∧ ∃y (Rectangle(y) ∧ ¬Square(y))"
    },
    {
        "NL": "A tree absorbs carbon dioxide and releases oxygen, while a human inhales oxygen and exhales carbon dioxide.",
        "FOL": "∀x∀y (Tree(x) ∧ Human(y) → (AbsorbsCarbonDioxide(x) ∧ ReleasesOxygen(x) ∧ InhalesOxygen(y) ∧ ExhalesCarbonDioxide(y)))"
    },
    {
        "NL": "A successful athlete displays determination, possesses physical skills, and demonstrates mental toughness.",
        "FOL": "∀x (Athlete(x) → (Successful(x) ↔ (DisplaysDetermination(x) ∧ PossessesPhysicalSkills(x) ∧ DemonstratesMentalToughness(x))))"
    },
    {
        "NL": "A scientist is not working in a certain lab.",
        "FOL": "∃x (Scientist(x) ∧ ¬∃y (Lab(y) ∧ WorkingIn(x, y)))"
    },
    {
        "NL": "An animal is classified as a mammal if it has hair or fur, gives birth to live young, and produces milk.",
        "FOL": "∀x (Animal(x) ∧ HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x) → Mammal(x))"
    },
    {
        "NL": "An instrument that consists of strings and is played by striking is a percussion instrument.",
        "FOL": "∀x (Instrument(x) ∧ HasStrings(x) ∧ PlayedByStriking(x) → PercussionInstrument(x))"
    },
    {
        "NL": "A movie consists of scenes, actors, and a script.",
        "FOL": "∀x (Movie(x) → ConsistsOfScenes(x) ∧ HasActors(x) ∧ HasScript(x))"
    },
    {
        "NL": "Writers compose stories, poems, or articles, while editors review and revise the content.",
        "FOL": "∀x ∀y (Writer(x) ∧ Editor(y) → (ComposesStories(x) ∨ ComposesPoems(x) ∨ ComposesArticles(x) ⊕ ReviewsContent(y) ∧ RevisesContent(y)))"
    },
    {
        "NL": "Every player in the tournament won a match.",
        "FOL": "∀x (Player(x) ∧ InTournament(x) → WonMatch(x))"
    },
    {
        "NL": "A liquid turns into a gas if it reaches its boiling point.",
        "FOL": "∀x (Liquid(x) ∧ ReachesBoilingPoint(x) → Gas(x))"
    },
    {
        "NL": "A student reads books and takes notes.",
        "FOL": "∀x∀y∀z (Student(x) ∧ Book(y) ∧ Note(z) → (Reads(x, y) ∧ Takes(x, z)))"
    },
    {
        "NL": "An event is a festival if it is a public celebration that typically includes various cultural, artistic, or recreational activities.",
        "FOL": "∀x (Event(x) ∧ PublicCelebration(x) ∧ IncludesCulturalActivities(x) ∧ IncludesArtisticActivities(x) ∧ IncludesRecreationalActivities(x) → Festival(x))"
    },
    {
        "NL": "A chair must have at least three legs to be stable.",
        "FOL": "∀x (Chair(x) ∧ Stable(x) → AtLeastThreeLegs(x))"
    },
    {
        "NL": "An item is a small pentagon if and only if it isn't purple.",
        "FOL": "∀x (Small(x) ∧ Pentagon(x) ↔ ¬Purple(x))"
    },
    {
        "NL": "Traditional mail requires postage stamps, while email does not.",
        "FOL": "∀x ∀y (TraditionalMail(x) ∧ Email(y) → (RequiresPostageStamps(x) ∧ ¬RequiresPostageStamps(y)))"
    },
    {
        "NL": "A payment method is a credit card if it is not a debit card and not cash.",
        "FOL": "∀x (PaymentMethod(x) ∧ ¬DebitCard(x) ∧ ¬Cash(x) → CreditCard(x))"
    },
    {
        "NL": "Houses can be heated using a furnace, a heat pump, or a fireplace.",
        "FOL": "∀x (House(x) → (HeatedByFurnace(x) ∨ HeatedByHeatPump(x) ∨ HeatedByFireplace(x)))"
    },
    {
        "NL": "A machine is a computer if and only if it processes data and has memory storage.",
        "FOL": "∀x (Machine(x) → (Computer(x) ↔ (ProcessesData(x) ∧ HasMemoryStorage(x))))"
    },
    {
        "NL": "A student studies math, literature, or history, but not all subjects in the same semester.",
        "FOL": "∀x (Student(x) → ((StudiesMath(x) ∨ StudiesLiterature(x) ∨ StudiesHistory(x)) ∧ ¬(StudiesMath(x) ∧ StudiesLiterature(x) ∧ StudiesHistory(x))))"
    },
    {
        "NL": "A fish x is a predator if it primarily consumes other fish or aquatic creatures.",
        "FOL": "∀x (Fish(x) ∧ (ConsumesOtherFish(x) ∨ ConsumesAquaticCreatures(x)) → Predator(x))"
    },
    {
        "NL": "Every computer in the office is turned on.",
        "FOL": "∀x (InOffice(x) ∧ Computer(x) → TurnedOn(x))"
    },
    {
        "NL": "A fruit is considered ripe if it has reached its full maturity, has optimal flavor and texture, and is ready to be consumed.",
        "FOL": "∀x (RipeFruit(x) ↔ (Fruit(x) ∧ ReachedFullMaturity(x) ∧ OptimalFlavorAndTexture(x) ∧ ReadyToBeConsumed(x)))"
    },
    {
        "NL": "A comet is a celestial object with a nucleus of ice and dust, an asteroid is a small rocky object orbiting the sun, and a meteoroid is a small particle from a comet or asteroid orbiting the sun.",
        "FOL": "∀x ∀y ∀z (Comet(x) ∧ Asteroid(y) ∧ Meteoroid(z) → (CelestialObject(x) ∧ NucleusOfIceAndDust(x) ∧ SmallRockyObject(y) ∧ OrbitsSun(y) ∧ SmallParticle(z) ∧ FromCometOrAsteroid(z) ∧ OrbitsSun(z)))"
    },
    {
        "NL": "A pen writes with ink, while a pencil writes with graphite, but a marker uses a felt tip.",
        "FOL": "∀x (Pen(x) → WritesWithInk(x)) ∧ (Pencil(x) → WritesWithGraphite(x)) ∧ (Marker(x) → UsesFeltTip(x))"
    },
    {
        "NL": "A television show can be broadcasted live or pre-recorded.",
        "FOL": "∀x (TelevisionShow(x) → (BroadcastedLive(x) ∨ PreRecorded(x)))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the sun and Earth, blocking the sun's light.",
        "FOL": "∀x (SolarEclipse(x) ↔ (MoonPassesBetween(x) ∧ SunAndEarth(x) ∧ BlocksSunLight(x)))"
    },
    {
        "NL": "Some languages are spoken in multiple countries, while others are spoken in only one country.",
        "FOL": "∃x ∃y (Language(x) ∧ Language(y) ∧ SpokenInMultipleCountries(x) ∧ SpokenInOneCountry(y))"
    },
    {
        "NL": "There is a scientist who studies all and only the organisms that do not study themselves.",
        "FOL": "∃x (Scientist(x) ∧ ∀y (Organism(y) → (Study(x, y) ↔ ¬Study(y, y))))"
    },
    {
        "NL": "Birds build nests to lay eggs.",
        "FOL": "∀x (Bird(x) → (∃y (Nest(y) ∧ Builds(x, y)) ∧ ∃z (Egg(z) ∧ Lays(x, z))))"
    },
    {
        "NL": "A bird can fly or swim, but not do both.",
        "FOL": "∀x (Bird(x) → (Fly(x) ⊕ Swim(x)))"
    },
    {
        "NL": "A minute has sixty seconds.",
        "FOL": "HasSeconds(minute, 60)"
    },
    {
        "NL": "A digital camera can capture still images or record videos, but not if it's designed for professional photography or if it's a vintage film camera.",
        "FOL": "∀x (DigitalCamera(x) ∧ ¬(DesignedForProfessionalPhotography(x) ∨ VintageFilmCamera(x)) → (CapturesStillImages(x) ∨ RecordsVideos(x)))"
    },
    {
        "NL": "A doctor prescribes medication to a patient based on their symptoms.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Medication(z) ∧ HasSymptoms(y) → Prescribes(x, y, z))"
    },
    {
        "NL": "A door is locked and closed, or it is open and accessible.",
        "FOL": "∀x (Door(x) → ((Locked(x) ∧ Closed(x)) ∨ (Open(x) ∧ Accessible(x))))"
    },
    {
        "NL": "A place is a canyon if it is a deep gorge with steep sides, typically carved by a river.",
        "FOL": "∀x (Canyon(x) ↔ (Place(x) ∧ DeepGorge(x) ∧ SteepSides(x) ∧ TypicallyCarvedByRiver(x)))"
    },
    {
        "NL": "The bird is flying or sitting, never both.",
        "FOL": "∀x (Bird(x) → (Flying(x) ⊕ Sitting(x)))"
    },
    {
        "NL": "A car can be a sports model, have a powerful engine, and win various races, or it can be a family model, have more space, and be highly rated.",
        "FOL": "∀x (Car(x) → ((SportsModel(x) ∧ PowerfulEngine(x) ∧ WinVariousRaces(x)) ⊕ (FamilyModel(x) ∧ HasMoreSpace(x) ∧ HighlyRated(x))))"
    },
    {
        "NL": "A habitat is a wetland if it is characterized by the presence of water, saturated soils, and supports aquatic or water-loving plants.",
        "FOL": "∀x (Habitat(x) ∧ PresenceOfWater(x) ∧ SaturatedSoils(x) ∧ SupportsAquaticPlants(x) ∧ SupportsWaterLovingPlants(x) → Wetland(x))"
    },
    {
        "NL": "An object is considered a musical instrument if it is designed to produce music by being played or manipulated by a musician.",
        "FOL": "∀x (Object(x) ∧ DesignedToProduceMusic(x) ∧ PlayedOrManipulatedByMusician(x) → MusicalInstrument(x))"
    },
    {
        "NL": "A rose has thorns, while a tulip does not have thorns.",
        "FOL": "∀x ∀y ((Rose(x) ∧ HasThorns(x)) ∧ (Tulip(y) ∧ ¬HasThorns(y)))"
    },
    {
        "NL": "Eating a balanced diet and exercising regularly contribute to a healthy lifestyle.",
        "FOL": "∀x ∀y (EatsBalancedDiet(x) ∧ ExercisesRegularly(y) → HealthyLifestyle(x, y))"
    },
    {
        "NL": "An electronic device can be a smartphone, a tablet, or a laptop.",
        "FOL": "∀x (ElectronicDevice(x) → Smartphone(x) ∨ Tablet(x) ∨ Laptop(x))"
    },
    {
        "NL": "A bridge connects two land masses if it spans the body of water or gap between them.",
        "FOL": "∀x∀y∀z (Bridge(x) ∧ LandMass(y) ∧ LandMass(z) ∧ Spans(x, y, z) → Connects(x, y, z))"
    },
    {
        "NL": "An animal can be wild or domestic.",
        "FOL": "∀x (Animal(x) → (Wild(x) ∨ Domestic(x)))"
    },
    {
        "NL": "A shape is a triangle if it has three sides and three angles that add up to 180 degrees.",
        "FOL": "∀x (Shape(x) ∧ ThreeSides(x) ∧ ThreeAngles(x) ∧ AngleSum(x, 180) → Triangle(x))"
    },
    {
        "NL": "A restaurant is popular if it has delicious food, good service and a friendly atmosphere.",
        "FOL": "∀x (Restaurant(x) ∧ HasDeliciousFood(x) ∧ GoodService(x) ∧ FriendlyAtmosphere(x) → IsPopular(x))"
    },
    {
        "NL": "An employee can be a manager, a clerk, or a janitor.",
        "FOL": "∀x (Employee(x) → (Manager(x) ∨ Clerk(x) ∨ Janitor(x)))"
    },
    {
        "NL": "A plane takes off from terminal A and lands in terminal B without stopping at any other terminals.",
        "FOL": "∃x ∃y ∃z (Plane(x) ∧ TerminalA(y) ∧ TerminalB(z) → TakesOffFrom(x, y) ∧ LandsAt(x, z) ∧ ¬∃w (Terminal(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A beverage that's carbonated and cold isn't a hot tea; if it's alcoholic, it can be either a beer or a cocktail, but not both.",
        "FOL": "∀x (Beverage(x) ∧ Carbonated(x) ∧ Cold(x) → (¬HotTea(x) ∧ (Alcoholic(x) → (Beer(x) ⊕ Cocktail(x)))))"
    },
    {
        "NL": "A language is classified as a sign language if it relies on visual gestures and movements to convey meaning and is used primarily by deaf or hard-of-hearing individuals.",
        "FOL": "∀x (Language(x) ∧ ReliesOnVisualGesturesAndMovements(x) ∧ UsedByDeafOrHardOfHearingIndividuals(x) → SignLanguage(x))"
    },
    {
        "NL": "Musicians play instruments, and singers perform vocals.",
        "FOL": "∀x ∀y (Musician(x) → PlaysInstruments(x)) ∧ (Singer(y) → PerformsVocals(y))"
    },
    {
        "NL": "A toy is safe for children aged between 3 and 5 if it does not have small parts, sharp edges, or toxic materials.",
        "FOL": "∀x (Toy(x) ∧ AgeInRange(x, 3, 5) → (¬SmallParts(x) ∧ ¬SharpEdges(x) ∧ ¬ToxicMaterials(x)))"
    },
    {
        "NL": "A person is considered a programmer if they write and develop computer software.",
        "FOL": "∀x (Person(x) ∧ WritesComputerSoftware(x) ∧ DevelopsComputerSoftware(x) → Programmer(x))"
    },
    {
        "NL": "A camera is suitable for professional photography if it has high resolution and interchangeable lenses.",
        "FOL": "∀x (Camera(x) → (SuitableForProfessionalPhotography(x) ↔ (HighResolution(x) ∧ InterchangeableLenses(x))))"
    },
    {
        "NL": "A film studio produces movies, while a music company produces songs.",
        "FOL": "∃x ∃y (FilmStudio(x) ∧ Movie(y) ∧ Produce(x, y)) ∧ ∃z ∃w (MusicCompany(z) ∧ Song(w) ∧ Produce(z, w))"
    },
    {
        "NL": "An airplane can fly if it has functional wings and engines.",
        "FOL": "∀x (Airplane(x) ∧ FunctionalWings(x) ∧ FunctionalEngines(x) → CanFly(x))"
    },
    {
        "NL": "Unless a creature is both tiny and fluffy, it is not a kitten.",
        "FOL": "∀x (¬(Tiny(x) ∧ Fluffy(x)) → ¬Kitten(x))"
    },
    {
        "NL": "A painter creates art by applying colors to a canvas.",
        "FOL": "∀x∀y (Painter(x) ∧ Canvas(y) ∧ AppliesColors(x, y) → CreatesArt(x))"
    },
    {
        "NL": "A building that serves as the official residence and workplace of a head of state is a palace.",
        "FOL": "∀x ∀y (Building(x) ∧ HeadOfState(y) ∧ OfficialResidenceAndWorkplace(x, y) → Palace(x))"
    },
    {
        "NL": "A film can be categorized as a comedy, drama, or documentary, but it cannot belong to more than one category.",
        "FOL": "∀x (Film(x) → ((Comedy(x) ⊕ Drama(x) ⊕ Documentary(x)) ∧ ¬(Comedy(x) ∧ Drama(x) ∧ Documentary(x))))"
    },
    {
        "NL": "If a building is a skyscraper, then it has more than 50 floors.",
        "FOL": "∀x (Skyscraper(x) → MoreThanFiftyFloors(x))"
    },
    {
        "NL": "Every plant is either a fern or a conifer, but it cannot be both.",
        "FOL": "∀x (Plant(x) → (Fern(x) ⊕ Conifer(x)))"
    },
    {
        "NL": "Supposing that not every book is enlightening, there exists a method that every author adopts.",
        "FOL": "¬∀x (Book(x) → Enlightening(x)) → ∃y (Method(y) ∧ ∀z (Author(z) → Adopts(z, y)))"
    },
    {
        "NL": "A film that features superheroes, is based on a comic book, and includes a plot involving saving the world is a superhero movie.",
        "FOL": "∀x (Film(x) ∧ FeaturesSuperheroes(x) ∧ BasedOnComicBook(x) ∧ SavingTheWorldPlot(x) → SuperheroMovie(x))"
    },
    {
        "NL": "Consistent studying enhances understanding and improves grades.",
        "FOL": "∀x (ConsistentStudying(x) → (EnhancesUnderstanding(x) ∧ ImprovesGrades(x)))"
    },
    {
        "NL": "An area is thought safe when it demonstrates a lesser frequency of unlawful acts and offers a good police presence or solid neighborhood watch.",
        "FOL": "∀x (Area(x) ∧ HasLesserFrequencyOfUnlawfulActs(x) ∧ (OffersGoodPolicePresence(x) ∨ SolidNeighborhoodWatch(x)) → Safe(x))"
    },
    {
        "NL": "A computer can be either a desktop, a laptop, a tablet, or a smartphone, but not more than one of these types.",
        "FOL": "∀x (Computer(x) → ((Desktop(x) ⊕ Laptop(x)) ⊕ (Tablet(x) ⊕ Smartphone(x))))"
    },
    {
        "NL": "Birds are warm-blooded vertebrates that have feathers, lay eggs, and possess a beak without teeth.",
        "FOL": "∀x (Bird(x) → WarmBlooded(x) ∧ Vertebrate(x) ∧ HasFeathers(x) ∧ LaysEggs(x) ∧ PossessesBeakWithoutTeeth(x))"
    },
    {
        "NL": "An airplane can transport passengers, cargo, or both, depending on its design.",
        "FOL": "∀x (Airplane(x) → ((TransportPassengers(x) ∧ TransportCargo(x)) ∨ TransportPassengers(x) ∨ TransportCargo(x)))"
    },
    {
        "NL": "A balanced diet that includes nutrient-dense foods, adequate hydration, and moderate portion sizes supports overall health, promotes weight management, and reduces the risk of chronic diseases.",
        "FOL": "∀x∀y∀z (BalancedDiet(x) ∧ NutrientDenseFoods(x) ∧ AdequateHydration(y) ∧ ModeratePortionSizes(z) → (SupportsOverallHealth(x) ∧ PromotesWeightManagement(x) ∧ ReducesRiskOfChronicDiseases(x)))"
    },
    {
        "NL": "Artists create paintings using brushes and paints.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Painting(y) ∧ Brushes(z) → Creates(x, y, z))"
    },
    {
        "NL": "Greenhouses use solar energy to maintain a warm environment, but not all structures that use solar energy are greenhouses.",
        "FOL": "∀x (Greenhouse(x) → (UsesSolarEnergy(x) ∧ ¬∀y (UsesSolarEnergy(y) → Greenhouse(y))))"
    },
    {
        "NL": "A book is an autobiography if it narrates the life history of the author himself.",
        "FOL": "∀x ∃y (Book(x) ∧ Author(y) ∧ NarratesLifeHistory(x, y) → Autobiography(x))"
    },
    {
        "NL": "A car is fast if it can exceed 100 miles per hour.",
        "FOL": "∀x (Car(x) ∧ CanExceedHundredMiles(x) → Fast(x))"
    },
    {
        "NL": "A parrot is recommended for kids if and only if it is not nosey and restless.",
        "FOL": "∀x (Parrot(x) → (RecommendedForKids(x) ↔ ¬Nosey(x) ∧ ¬Restless(x)))"
    },
    {
        "NL": "A planet orbits a star and has its own gravitational field.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) → (Orbits(x, y) ∧ HasGravitationalField(x)))"
    },
    {
        "NL": "A machine can operate if it is maintained and supplied with power, but if it's broken or without power, it cannot operate.",
        "FOL": "∀x (Machine(x) → ((Maintained(x) ∧ SuppliedWithPower(x) → Operates(x)) ∧ ((Broken(x) ∨ ¬SuppliedWithPower(x)) → ¬Operates(x))))"
    },
    {
        "NL": "A large celestial body that generates energy through nuclear fusion in its core and emits light and heat is a star.",
        "FOL": "∀x (LargeCelestialBody(x) ∧ GeneratesEnergyThroughNuclearFusion(x) ∧ EmitsLight(x) ∧ EmitsHeat(x) → Star(x))"
    },
    {
        "NL": "A train goes on rails, whereas a plane flies in the air.",
        "FOL": "∀y (Train(y) → GoesOnRails(y)) ∧ ∀x (Plane(x) → FliesInTheAir(x))"
    },
    {
        "NL": "An electronic device stops working when its power source is depleted or disconnected.",
        "FOL": "∀x (ElectronicDevice(x) ∧ (PowerSourceDepleted(x) ∨ PowerSourceDisconnected(x)) → StopsWorking(x))"
    },
    {
        "NL": "A concert is deemed successful if it is sold out or receives positive reviews, but not both.",
        "FOL": "∀x (Successful(x) ↔ (Concert(x) ∧ ((∃y (SoldOut(y) ∧ IsEvent(x, y)) ∧ ¬∃z (PositiveReview(z) ∧ About(x, z))) ∨ (¬∃w (SoldOut(w) ∧ IsEvent(x, w)) ∧ ∃v (PositiveReview(v) ∧ About(x, v))))))"
    },
    {
        "NL": "Either Elena is a singer or Tom envies Elena, but not both",
        "FOL": "Singer(elena) ⊕ Envy(tom, elena)"
    },
    {
        "NL": "Each vehicle uses a fuel type, but no vehicle uses a fuel type more expensive than it.",
        "FOL": "∀x ∃y (UsesFuelType(x, y)) ∧ ¬∃z ∃w (UsesFuelType(z, w) ∧ MoreExpensiveThan(w, z))"
    },
    {
        "NL": "Apples are fruits.",
        "FOL": "∀x (Apple(x) → Fruit(x))"
    },
    {
        "NL": "A bird builds a nest using twigs and leaves.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ Nest(y) ∧ TwigsAndLeaves(z) → BuildsUsing(x, y, z))"
    },
    {
        "NL": "A business owner will support the mandate only if he does not pay his bills.",
        "FOL": "∀x (BusinessOwner(x) ∧ SupportMandate(x) → ¬PayBills(x))"
    },
    {
        "NL": "A story that is a horror can make people scared.",
        "FOL": "∀x ∀y (Story(x) ∧ Horror(x) ∧ Person(y) → CanMakeScared(x, y))"
    },
    {
        "NL": "An individual who donates blood regularly and follows a healthy lifestyle can contribute to saving lives.",
        "FOL": "∀x (RegularBloodDonor(x) ∧ HealthyLifestyle(x) → ContributesToSavingLives(x))"
    },
    {
        "NL": "Companies with innovative products, skilled workforce, and efficient management are usually successful.",
        "FOL": "∀x (Company(x) ∧ InnovativeProduct(x) ∧ SkilledWorkforce(x) ∧ EfficientManagement(x) → Successful(x))"
    },
    {
        "NL": "A bird's size and feather coloration can affect its ability to camouflage, while its habitat determines its survival rate.",
        "FOL": "∃x ∃y ∃z ∃w (Bird(x) ∧ Size(x, y) ∧ FeatherColoration(x, z) ∧ Habitat(x, w) ∧ (Camouflage(x) ↔ (SizeOrColor(y, z))) ∧ (SurvivalRate(x) ↔ Habitat(w)))"
    },
    {
        "NL": "A vehicle can be a car or a truck, but not both at the same time.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "A tourist destination attracts visitors with breathtaking scenery, rich cultural heritage, and a wide range of activities.",
        "FOL": "∀x (TouristDestination(x) ∧ BreathtakingScenery(x) ∧ RichCulturalHeritage(x) ∧ WideRangeOfActivities(x) → AttractsVisitors(x))"
    },
    {
        "NL": "Every car in the parking lot is blue.",
        "FOL": "∀x (Car(x) ∧ InParkingLot(x) → Blue(x))"
    },
    {
        "NL": "A sports team wins championships if they train consistently, have talented players, and work well together.",
        "FOL": "∀x (SportsTeam(x) → (WinsChampionships(x) ↔ (TrainsConsistently(x) ∧ TalentedPlayers(x) ∧ WorksWellTogether(x))))"
    },
    {
        "NL": "A celestial event in which one celestial body passes directly in front of another and obscures it from view is called an eclipse.",
        "FOL": "∀x∀y∀z (CelestialEvent(x) ∧ PassesInFrontOf(x, y, z) ∧ CelestialBody(y) ∧ CelestialBody(z) ∧ ObscuresFromView(x, y, z) → Eclipse(x))"
    },
    {
        "NL": "A pesticide x is suitable for use on crop y in region z if it is effective against local pests and does not harm the environment or ecosystem of z.",
        "FOL": "∀x ∀y ∀z (Pesticide(x) ∧ Crop(y) ∧ Region(z) ∧ EffectiveAgainstLocalPests(x, y, z) ∧ NotHarmfulToEnvironment(x, z) → SuitableForUseOnCrop(x, y, z))"
    },
    {
        "NL": "The sun rises in the east.",
        "FOL": "Rises(sun, east)"
    },
    {
        "NL": "A movie becomes a romantic comedy when the story focuses on love, humor, and the relationships between the characters.",
        "FOL": "∀x (Movie(x) ∧ StoryFocusOnLove(x) ∧ StoryFocusOnHumor(x) ∧ StoryFocusOnRelationships(x) → RomanticComedy(x))"
    },
    {
        "NL": "Every liquid can dissolve in some solvent.",
        "FOL": "∀x (Liquid(x) → ∃y (Solvent(y) ∧ DissolveIn(x, y)))"
    },
    {
        "NL": "A musical instrument belongs to the string family if it produces sound through vibrating strings.",
        "FOL": "∀x (StringInstrument(x) → (MusicalInstrument(x) ∧ ∃y (String(y) ∧ Vibrates(x, y))))"
    },
    {
        "NL": "A toy is safe for children if it is not made of hazardous materials and has no sharp edges.",
        "FOL": "∀x (Toy(x) ∧ ¬HazardousMaterials(x) ∧ ¬SharpEdges(x) → SafeForChildren(x))"
    },
    {
        "NL": "A river is a natural flowing watercourse, usually freshwater, that flows towards an ocean, a sea, a lake, or another river, and can serve as a habitat for various aquatic species.",
        "FOL": "∀x (River(x) → NaturalFlowingWatercourse(x) ∧ UsuallyFreshwater(x) ∧ FlowsTowardsOceanSeaLakeOrAnotherRiver(x) ∧ ServesAsHabitatForAquaticSpecies(x))"
    },
    {
        "NL": "Hiking trails can be easy or challenging, and their difficulty depends on factors like elevation and terrain.",
        "FOL": "∀x (HikingTrail(x) → (Easy(x) ⊕ Challenging(x)) ∧ DifficultyDependsOnFactors(x))"
    },
    {
        "NL": "A photo album contains photos and may have captions.",
        "FOL": "∀x (PhotoAlbum(x) → (∃y PhotoIn(x, y) ∧ ∃z (CaptionOf(x, z) ∨ ¬CaptionOf(x, z))))"
    },
    {
        "NL": "Students are not always diligent.",
        "FOL": "∃x (Student(x) ∧ ¬Diligent(x))"
    },
    {
        "NL": "A person is considered a plumber if they install, repair, and maintain plumbing systems, often in residential, commercial, or industrial settings.",
        "FOL": "∀x (Person(x) ∧ InstallsRepairsAndMaintainsPlumbingSystems(x) ∧ OftenInResidentialCommercialOrIndustrialSettings(x) → Plumber(x))"
    },
    {
        "NL": "A flashlight emits light and a fan generates airflow, but both require batteries to operate.",
        "FOL": "∀x∀y (Flashlight(x) → EmitsLight(x)) ∧ (Fan(y) → GeneratesAirflow(y)) ∧ (RequiresBatteries(x) ∧ RequiresBatteries(y))"
    },
    {
        "NL": "Not all insects are harmful; some are beneficial for pollination or pest control.",
        "FOL": "¬(∀x (Insect(x) → Harmful(x))) ∧ ∃x (Insect(x) ∧ (Pollination(x) ∨ PestControl(x)))"
    },
    {
        "NL": "A room is well lit if it has natural light or is illuminated by artificial lights, but not if the lights are too dim.",
        "FOL": "∀x (Room(x) ∧ (NaturalLight(x) ∨ ArtificialLights(x)) ∧ ¬DimLights(x) → WellLit(x))"
    },
    {
        "NL": "A device is a computer if and only if every device connected to it is advanced.",
        "FOL": "∀x (Computer(x) ↔ ∀y (ConnectedTo(y, x) → Advanced(y)))"
    },
    {
        "NL": "A person is considered an employee when they are hired by a company or firm.",
        "FOL": "∀x (Person(x) ∧ (HiredByCompany(x) ∨ HiredByFirm(x)) → Employee(x))"
    },
    {
        "NL": "A scientist analyzes a sample when it's from an unknown source and requires further study.",
        "FOL": "∀x∀y (Scientist(x) ∧ Sample(y) → (Analyzes(x, y) ↔ (UnknownSource(y) ∧ RequiresStudy(y))))"
    },
    {
        "NL": "A garden thrives if it receives sunlight and has rich soil, and it is either watered regularly or located in a rainy area.",
        "FOL": "∀x (Garden(x) ∧ Sunlight(x) ∧ RichSoil(x) ∧ (WateredRegularly(x) ∨ RainyArea(x)) → Thrives(x))"
    },
    {
        "NL": "A television show is airing if the current time is within its scheduled time and the channel is broadcasting, but not if the current time is outside its scheduled time or the channel is experiencing technical difficulties.",
        "FOL": "∀x (TelevisionShow(x) → (Airing(x) ↔ (WithinScheduledTime(x) ∧ BroadcastingChannel(x) ∧ ¬OutsideScheduledTime(x) ∧ ¬TechnicalDifficulties(x))))"
    },
    {
        "NL": "Hurricanes cause strong winds, heavy rain, and sometimes lead to flooding.",
        "FOL": "∀x (Hurricane(x) → (CausesStrongWinds(x) ∧ CausesHeavyRain(x) ∧ ∃y (Flooding(y) ∧ SometimesLeadsTo(x, y))))"
    },
    {
        "NL": "A flashlight emits light when batteries are inserted and the switch is turned on.",
        "FOL": "∀x (Flashlight(x) → (BatteriesInserted(x) ∧ SwitchTurnedOn(x)) → EmitsLight(x))"
    },
    {
        "NL": "No scholar who studies mathematics and physics, unless they have received a Nobel prize, has written more than fifty research papers or has not held a conference speech.",
        "FOL": "¬∃x (Scholar(x) ∧ StudiesMathematics(x) ∧ StudiesPhysics(x) ∨ WonNobelPrize(x) ∧ (WrittenMoreThanFiftyResearchPapers(x) ∨ ¬HeldConferenceSpeech(x)))"
    },
    {
        "NL": "A mammal can be carnivorous, herbivorous, or omnivorous.",
        "FOL": "∀x (Mammal(x) → (Carnivorous(x) ∨ Herbivorous(x) ∨ Omnivorous(x)))"
    },
    {
        "NL": "If a vehicle has two wheels, it is a bike or a motorcycle.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) → (Bike(x) ⊕ Motorcycle(x)))"
    },
    {
        "NL": "A food corporation develops, produces, and supplies products addressing various nutritional needs and enhancements.",
        "FOL": "∀x ∃y ∃z ∃w (FoodCorporation(x) → Product(y) ∧ NutritionalNeed(z) ∧ NutritionalEnhancement(w) ∧ Develops(x, y) ∧ Produces(x, y) ∧ Supplies(x, y) ∧ Addresses(x, z) ∧ Addresses(x, w))"
    },
    {
        "NL": "A painter is painting a portrait in a filled studio.",
        "FOL": "∃x ∃y (Painter(x) ∧ PaintingAPortrait(x) ∧ FilledStudio(y) ∧ In(x, y))"
    },
    {
        "NL": "A musical instrument can be classified as a string instrument if it has strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) → StringInstrument(x))"
    },
    {
        "NL": "Eating expired food may cause food poisoning or an upset stomach.",
        "FOL": "∀x (ExpiredFood(x) → (FoodPoisoning(x) ∨ UpsetStomach(x)))"
    },
    {
        "NL": "A lawyer represents clients in court, negotiates settlements, and advises on legal matters.",
        "FOL": "∀x (Lawyer(x) → (∃y ∃z (Client(y) ∧ Court(z) ∧ Represents(x, y, z) ∧ NegotiatesSettlements(x, y) ∧ AdvisesOnLegalMatters(x, y))))"
    },
    {
        "NL": "A software project is successful if it meets the deadline, stays within budget, and fulfills the requirements.",
        "FOL": "∀x (SoftwareProject(x) → (Successful(x) ↔ (MeetsDeadline(x) ∧ StaysWithinBudget(x) ∧ FulfillsRequirements(x))))"
    },
    {
        "NL": "All dogs are either small or large, but not both.",
        "FOL": "∀x (Dog(x) → (Small(x) ⊕ Large(x)))"
    },
    {
        "NL": "A sport is either football or basketball.",
        "FOL": "∀x (Sport(x) → (Football(x) ⊕ Basketball(x)))"
    },
    {
        "NL": "A song is sad or happy.",
        "FOL": "∀x (Song(x) → (Sad(x) ∨ Happy(x)))"
    },
    {
        "NL": "A pair of shoes is comfortable for wearers if it provides ample cushioning, breathable materials, and arch support, but it does not please those who prioritize fashion over comfort.",
        "FOL": "∀x (Shoes(x) ∧ ComfortableForWearers(x) ↔ (AmpleCushioning(x) ∧ BreathableMaterials(x) ∧ ArchSupport(x) ∧ ¬PrioritizesFashionOverComfort(x)))"
    },
    {
        "NL": "Sara venerates a Tarantino film if and only if it was documented in 1994.",
        "FOL": "∀x (Movie(x) ∧ DirectedBy(x, tarantino) → (DocumentedInNineteenninetyfour(x) ↔ Venerates(sara, x)))"
    },
    {
        "NL": "All fruits that are not sweet are sour or bitter.",
        "FOL": "∀x (Fruit(x) ∧ ¬Sweet(x) → (Sour(x) ∨ Bitter(x)))"
    },
    {
        "NL": "A cake is made of ingredients like flour, sugar, and eggs, and can be decorated with frosting or other toppings.",
        "FOL": "∀x ∀y ∀z (Cake(x) → (MadeOfIngredients(x, y) ∧ (Flour(y) ∨ Sugar(y) ∨ Eggs(y)) ∧ DecoratedWith(x, z) ∧ (Frosting(z) ∨ OtherToppings(z))))"
    },
    {
        "NL": "A planet is habitable for humans if it has a similar temperature to Earth, an atmosphere with oxygen, and liquid water.",
        "FOL": "∀x (Planet(x) ∧ SimilarTemperature(x, Earth) ∧ AtmosphereWithOxygen(x) ∧ LiquidWater(x) → HabitableForHumans(x))"
    },
    {
        "NL": "A dog that is a service animal assists individuals with disabilities and typically undergoes specialized training.",
        "FOL": "∀x (Dog(x) ∧ ServiceAnimal(x) → AssistsIndividualsWithDisabilities(x) ∧ UndergoesSpecializedTraining(x))"
    },
    {
        "NL": "A business strategy is successful if it increases revenue or reduces costs, but it is not successful if it harms the company's reputation or results in legal troubles.",
        "FOL": "∀x (BusinessStrategy(x) ∧ (IncreasesRevenue(x) ∨ ReducesCosts(x)) ∧ ¬HarmsReputation(x) ∧ ¬ResultsInLegalTroubles(x) → Successful(x))"
    },
    {
        "NL": "A book is a comedy or not a comedy.",
        "FOL": "∀x (Book(x) → (Comedy(x) ⊕ ¬Comedy(x)))"
    },
    {
        "NL": "Each student is smart, but not every smart person is a student.",
        "FOL": "∀x (Student(x) → Smart(x)) ∧ ¬∀x (Smart(x) → Student(x))"
    },
    {
        "NL": "Mathematicians solve equations using logic and algebra.",
        "FOL": "∀x (Mathematician(x) → (Solves(x, equations) ∧ Uses(x, logic, algebra)))"
    },
    {
        "NL": "Robert is an engineer and Emily is an engineer.",
        "FOL": "Engineer(robert) ∧ Engineer(emily)"
    },
    {
        "NL": "Mountains have peaks, and valleys have low points.",
        "FOL": "∀x ∀y (Mountain(x) → HasPeak(x)) ∧ (Valley(y) → HasLowPoint(y))"
    },
    {
        "NL": "A person is a yoga instructor if they guide in yoga poses and promote relaxation and mindfulness",
        "FOL": "∀x (Person(x) ∧ GuidesInYogaPoses(x) ∧ PromotesRelaxation(x) ∧ PromotesMindfulness(x) → YogaInstructor(x))"
    },
    {
        "NL": "A person is deemed an athlete if they have good physical health, excellent stamina and participate in sports.",
        "FOL": "∀x (Person(x) ∧ HasGoodPhysicalHealth(x) ∧ HasExcellentStamina(x) ∧ ParticipatesInSports(x) → Athlete(x))"
    },
    {
        "NL": "A versatile tool has multiple functions, is easy to operate, and can be used in various situations.",
        "FOL": "∀x (Tool(x) → (MultipleFunctions(x) ∧ EasyToOperate(x) ∧ UsableInVariousSituations(x) → Versatile(x)))"
    },
    {
        "NL": "A chef prepares food in a kitchen, while a gardener tends to plants outdoors.",
        "FOL": "∀x∀y (Chef(x) ∧ Gardener(y) → (PreparesFood(x) ∧ WorksInKitchen(x) ∧ TendsToPlants(y) ∧ WorksOutdoors(y)))"
    },
    {
        "NL": "A book is thrilling if it has unexpected twists or suspenseful plot.",
        "FOL": "∀x (Book(x) ∧ (HasUnexpectedTwists(x) ∨ HasSuspensefulPlot(x)) → Thrilling(x))"
    },
    {
        "NL": "Each apple is a fruit, but not every fruit is an apple.",
        "FOL": "∀x (Apple(x) → Fruit(x)) ∧ ¬∀x (Fruit(x) → Apple(x))"
    },
    {
        "NL": "A moon is round if and only if it revolves around a dwarf planet.",
        "FOL": "∀x (Round(x) ↔ ∃y (Dwarf(y) ∧ RevolvesAround(x, y)))"
    },
    {
        "NL": "A person who is a painter creates visual art using colors and brushes.",
        "FOL": "∀x (Painter(x) → CreatesVisualArtWithColorsAndBrushes(x))"
    },
    {
        "NL": "A dog is obedient if it follows commands consistently and shows a submissive behavior.",
        "FOL": "∀x (Obedient(x) → (Dog(x) ∧ FollowsCommandsConsistently(x) ∧ SubmissiveBehavior(x)))"
    },
    {
        "NL": "A scientist studies the natural world and collects data through observation and experimentation.",
        "FOL": "∀x (Scientist(x) → (∃y (NaturalWorld(y) ∧ Studies(x, y)) ∧ CollectsData(x) ∧ Observes(x) ∧ Experiments(x)))"
    },
    {
        "NL": "A kitten is ideal for seniors if and only if it is not grumpy and hyperactive.",
        "FOL": "∀x (Kitten(x) → (IdealForSeniors(x) ↔ ¬Grumpy(x) ∧ ¬Hyperactive(x)))"
    },
    {
        "NL": "All writers are creative, but not every creative person is a writer.",
        "FOL": "∀x (Writer(x) → Creative(x)) ∧ ¬∀x (Creative(x) → Writer(x))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur, gives birth to live young, and produces milk to feed its young.",
        "FOL": "∀x (Mammal(x) ↔ (Animal(x) ∧ HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x)))"
    },
    {
        "NL": "A mountain is a natural landform characterized by a steep elevation above surrounding terrain, while a desert is a vast, arid region with sparse vegetation and low precipitation.",
        "FOL": "∀x∀y (Mountain(x) ∧ Desert(y) → (SteepElevationAboveSurroundingTerrain(x)) ∧ (VastAridRegion(y) ∧ SparseVegetation(y) ∧ LowPrecipitation(y)))"
    },
    {
        "NL": "Historical monuments, constructed in various architectural styles, are symbols of cultural heritage.",
        "FOL": "∀x∀y (HistoricalMonument(x) ∧ ConstructedInVariousStyles(x) → SymbolOfCulturalHeritage(x, y))"
    },
    {
        "NL": "People who eat a balanced diet and exercise regularly tend to have better overall health.",
        "FOL": "∀x (Person(x) ∧ EatsBalancedDiet(x) ∧ ExercisesRegularly(x) → BetterOverallHealth(x))"
    },
    {
        "NL": "A scientific research paper is accepted for publication if it passes a peer review process and meets the journal's quality standards.",
        "FOL": "∀x∀y (ResearchPaper(x) ∧ Journal(y) → (PassesPeerReview(x) ∧ MeetsQualityStandards(x, y) → AcceptedForPublication(x, y)))"
    },
    {
        "NL": "Not all students in this class are prepared for the test.",
        "FOL": "¬(∀x (StudentInClass(x) → PreparedForTest(x)))"
    },
    {
        "NL": "A baker is baking bread in an oven.",
        "FOL": "∃x ∃y (Baker(x) ∧ Bread(y) ∧ BakingInOven(x, y))"
    },
    {
        "NL": "An animal is classified as a herbivore if its diet consists only of plants.",
        "FOL": "∀x (Animal(x) ∧ ∀y (Consumes(x, y) → Plant(y)) → Herbivore(x))"
    },
    {
        "NL": "A fish that breathes through gills and has fins is an aquatic vertebrate.",
        "FOL": "∀x (Fish(x) ∧ BreathesThroughGills(x) ∧ HasFins(x) → AquaticVertebrate(x))"
    },
    {
        "NL": "A telescope is used to observe celestial objects.",
        "FOL": "∀x ∀y (Telescope(x) ∧ CelestialObject(y) → UsedToObserve(x, y))"
    },
    {
        "NL": "In a forest, trees provide shelter for animals, and animals can find food sources.",
        "FOL": "∀x ∀y ∀z (Forest(x) ∧ Tree(y) ∧ Animal(z) → (ProvideShelter(y, z) ∧ FindFoodSources(z, x)))"
    },
    {
        "NL": "A smartphone app can be developed by a programmer, belongs to a category like productivity or gaming, and is downloaded by users.",
        "FOL": "∀x ∀y ∀z ∀w (SmartphoneApp(x) ∧ Programmer(y) ∧ (Productivity(z) ∨ Gaming(z)) ∧ User(w) → (DevelopedBy(x, y) ∧ BelongsToCategory(x, z) ∧ DownloadedBy(x, w)))"
    },
    {
        "NL": "A type of animal that has a backbone, a three-layered body structure, and a complex nervous system is a vertebrate.",
        "FOL": "∀x (Animal(x) ∧ HasBackbone(x) ∧ ThreeLayeredBodyStructure(x) ∧ ComplexNervousSystem(x) → Vertebrate(x))"
    },
    {
        "NL": "If an animal is a dog, then it is either black or white, but not both.",
        "FOL": "∀x (Animal(x) ∧ Dog(x) → (Black(x) ⊕ White(x)))"
    },
    {
        "NL": "A weather phenomenon that involves a visible mass of condensed water vapor suspended in the atmosphere, usually close to the Earth's surface, is fog.",
        "FOL": "∀x (WeatherPhenomenon(x) ∧ VisibleMassOfCondensedWaterVapor(x) ∧ SuspendedInAtmosphere(x) ∧ CloseToEarthSurface(x) → Fog(x))"
    },
    {
        "NL": "A vending machine keeps snacks and dispenses them when desired for consumers.",
        "FOL": "∀x (VendingMachine(x) → (KeepsSnacks(x) ∧ (IsDesiredForConsumers(x) → DispensesSnacks(x))))"
    },
    {
        "NL": "A hurricane is larger than a tornado, but a tornado is more intense than a hurricane.",
        "FOL": "∀x ∀y (Hurricane(x) ∧ Tornado(y) → (Larger(x, y) ∧ MoreIntense(y, x)))"
    },
    {
        "NL": "A successful startup demonstrates an innovative product, effective management, and a scalable business model.",
        "FOL": "∀x (Startup(x) ∧ InnovativeProduct(x) ∧ EffectiveManagement(x) ∧ ScalableBusinessModel(x) → Successful(x))"
    },
    {
        "NL": "A planet orbits around a star.",
        "FOL": "∀x (Planet(x) → ∃y (Star(y) ∧ OrbitsAround(x, y)))"
    },
    {
        "NL": "A chef can cook some meals, prepares desserts, and makes drinks.",
        "FOL": "∀x ∃y (Chef(x) → Meal(y) ∧ Cooks(x, y) ∧ PreparesDessert(x) ∧ MakesDrinks(x))"
    },
    {
        "NL": "An art form that involves the use of colors, is applied to a surface, and can represent real or abstract subjects is a painting if it is created using various painting techniques.",
        "FOL": "∀x (ArtForm(x) ∧ InvolvesColors(x) ∧ AppliedToSurface(x) ∧ RepresentsRealOrAbstractSubjects(x) ∧ CreatedUsingVariousPaintingTechniques(x) → Painting(x))"
    },
    {
        "NL": "A book that is a mystery can cause people to think.",
        "FOL": "∀x ∀y (Book(x) ∧ Mystery(x) ∧ Person(y) → CanCauseThink(x, y))"
    },
    {
        "NL": "A person is considered a composer if they create original music, often by writing it down in musical notation.",
        "FOL": "∀x (Composer(x) ↔ CreatesOriginalMusic(x))"
    },
    {
        "NL": "If a person is a sailor, they navigate boats or ships.",
        "FOL": "∀x (Person(x) ∧ Sailor(x) → (NavigateBoats(x) ∨ NavigateShips(x)))"
    },
    {
        "NL": "A zebra has stripes and can run, while a frog does not have stripes and cannot run.",
        "FOL": "∀x (Zebra(x) → HasStripes(x) ∧ CanRun(x)) ∧ ∀y (Frog(y) → ¬HasStripes(y) ∧ ¬CanRun(y))"
    },
    {
        "NL": "An artist creates paintings and exhibits them in a gallery.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ Painting(y) ∧ Gallery(z) → (Creates(x, y) ∧ ExhibitsIn(x, y, z)))"
    },
    {
        "NL": "A dentist examines teeth and treats dental issues.",
        "FOL": "∀x (Dentist(x) → ∃y∃z (Teeth(y) ∧ DentalIssue(z) ∧ Examines(x, y) ∧ Treats(x, z)))"
    },
    {
        "NL": "Some authors have written every book for a publisher.",
        "FOL": "∃x (Author(x) ∧ ∃y (Publisher(y) ∧ ∀z (Book(z) ∧ PublishedBy(z, y) → Written(x, z))))"
    },
    {
        "NL": "A computer is reliable if it has a stable operating system, sufficient memory, and robust hardware components.",
        "FOL": "∀x (Computer(x) ∧ Reliable(x) ↔ (StableOperatingSystem(x) ∧ SufficientMemory(x) ∧ RobustHardwareComponents(x)))"
    },
    {
        "NL": "A food that is high in fiber, low in calories, and rich in nutrients is considered a healthy food option.",
        "FOL": "∀x ((Food(x) ∧ HighInFiber(x) ∧ LowInCalories(x) ∧ RichInNutrients(x)) → HealthyFoodOption(x))"
    },
    {
        "NL": "A mountain range is a series of mountains connected by high ground and formed by geological processes.",
        "FOL": "∀x (MountainRange(x) ↔ (SeriesOfMountains(x) ∧ ConnectedByHighGround(x) ∧ ∀y (Mountain(y) ∧ FormedByGeologicalProcesses(y))))"
    },
    {
        "NL": "A location is a tourist attraction if it has historical or cultural significance and is accessible to the public.",
        "FOL": "∀x (Location(x) ∧ HistoricalOrCulturalSignificance(x) ∧ AccessibleToPublic(x) → TouristAttraction(x))"
    },
    {
        "NL": "A doctor prescribes medication if the patient's condition requires it.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) ∧ ConditionRequiresMedication(y) → PrescribesMedication(x, y))"
    },
    {
        "NL": "There is no pentagon that indicates all matte squares.",
        "FOL": "¬∃x (Pentagon(x) ∧ ∀y (Matte(y) ∧ Square(y) → Indicates(x, y)))"
    },
    {
        "NL": "A successful crowdfunding campaign reaches its funding goal by presenting a compelling pitch, offering attractive rewards, and engaging with potential backers.",
        "FOL": "∀x (CrowdfundingCampaign(x) ∧ CompellingPitch(x) ∧ AttractiveRewards(x) ∧ EngagesWithBackers(x) → ReachesFundingGoal(x))"
    },
    {
        "NL": "A plant that can survive in arid conditions, store water in its leaves, and has a shallow root system is a desert plant.",
        "FOL": "∀x (Plant(x) ∧ SurvivesInAridConditions(x) ∧ StoresWaterInLeaves(x) ∧ ShallowRootSystem(x) → DesertPlant(x))"
    },
    {
        "NL": "A submarine can travel both on the surface of the water and underwater.",
        "FOL": "∀x (Submarine(x) → (TravelsOnSurface(x) ∧ TravelsUnderwater(x)))"
    },
    {
        "NL": "All humans admire Peter",
        "FOL": "∀x (Human(x) → Admire(x, peter))"
    },
    {
        "NL": "A book can be published when it is written, edited, formatted, and a publishing company agrees to release it.",
        "FOL": "∀x∀y (Book(x) ∧ Written(x) ∧ Edited(x) ∧ Formatted(x) ∧ PublishingCompany(y) ∧ AgreesToRelease(y, x) → CanBePublished(x))"
    },
    {
        "NL": "A meal is delicious if it includes flavorful ingredients and skilled preparation.",
        "FOL": "∀x (Meal(x) ∧ FlavorfulIngredients(x) ∧ SkilledPreparation(x) → Delicious(x))"
    },
    {
        "NL": "All artists are not ingenious.",
        "FOL": "¬∀x (Artist(x) → Ingenious(x))"
    },
    {
        "NL": "A cat is suitable for seniors if and only if it is not wild and energetic.",
        "FOL": "∀y (Cat(y) → (SuitableForSeniors(y) ↔ ¬Wild(y) ∧ ¬Energetic(y)))"
    },
    {
        "NL": "A student is admired by every teacher who is knowledgeable.",
        "FOL": "∃x ∀y (Student(x) ∧ Teacher(y) ∧ Knowledgeable(y) → Admires(y, x))"
    },
    {
        "NL": "An airport facilitates air travel, has various terminals or gates, and may provide amenities like shopping, dining, or lounge access for travelers.",
        "FOL": "∀x (Airport(x) → (FacilitatesAirTravel(x) ∧ (Terminals(x) ∨ Gates(x)) ∧ (ShoppingAmenities(x) ∨ DiningAmenities(x) ∨ LoungeAccessAmenities(x))))"
    },
    {
        "NL": "When a volcano is active, it either emits lava or releases ash and gases into the atmosphere.",
        "FOL": "∀x (Volcano(x) ∧ IsActive(x) → (EmitsLava(x) ⊕ ReleasesAshAndGases(x)))"
    },
    {
        "NL": "A smartphone can be charged.",
        "FOL": "∃x (Smartphone(x) ∧ CanBeCharged(x))"
    },
    {
        "NL": "A teacher instructs students, and a librarian assists with finding books and information.",
        "FOL": "∀x∀y (Teacher(x) ∧ Student(y) → Instructs(x, y)) ∧ (Librarian(x) ∧ BookOrInformation(y) → Assists(x, y))"
    },
    {
        "NL": "A vehicle is a sports car when it is a type of high-performance automobile, features a sleek design, and is built for speed.",
        "FOL": "∀x (Vehicle(x) ∧ HighPerformanceAutomobile(x) ∧ FeaturesSleekDesign(x) ∧ BuiltForSpeed(x) → SportsCar(x))"
    },
    {
        "NL": "A book is captivating if it has a compelling narrative, relatable characters, and an unpredictable plot.",
        "FOL": "∀x (Book(x) ∧ CompellingNarrative(x) ∧ RelatableCharacters(x) ∧ UnpredictablePlot(x) → Captivating(x))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, and is powered by pedaling.",
        "FOL": "∀x (Bicycle(x) → (TwoWheels(x) ∧ Frame(x) ∧ PoweredByPedaling(x)))"
    },
    {
        "NL": "Adam buys a car if and only if it was manufactured before 2000.",
        "FOL": "∀z (Car(z) → (ManufacturedBeforetwothousand(z) ↔ Buys(adam, z)))"
    },
    {
        "NL": "An electronic device qualifies as a gaming console if it is specifically designed for playing video games, can connect to a display, and allows user input through dedicated controllers.",
        "FOL": "∀x∀y∀z (ElectronicDevice(x) ∧ DesignedForPlayingVideoGames(x) ∧ ConnectsToDisplay(x, y) ∧ AllowsUserInput(x, z) ∧ DedicatedController(z) → GamingConsole(x))"
    },
    {
        "NL": "A ball is blue if and only if it is not heavy and it hits a green or a yellow object.",
        "FOL": "∀x (Ball(x) → ((Blue(x) ↔ ¬Heavy(x)) ∧ ∃y (Hits(x, y) → (Green(y) ∨ Yellow(y)))))"
    },
    {
        "NL": "If a smartphone is connected to Wi-Fi, it is not using mobile data.",
        "FOL": "∀x (Smartphone(x) ∧ ConnectedToWiFi(x) → ¬UsingMobileData(x))"
    },
    {
        "NL": "Unless a computer is both powerful and user-friendly, it is not profitable.",
        "FOL": "∀x (¬(Powerful(x) ∧ UserFriendly(x)) → ¬Profitable(x))"
    },
    {
        "NL": "A cat is an indoor cat if it stays inside and does not go outside.",
        "FOL": "∀x (Cat(x) ∧ StaysInside(x) ∧ ¬GoesOutside(x) → IndoorCat(x))"
    },
    {
        "NL": "A doctor will prescribe the medication only if she examines the patient.",
        "FOL": "∀x (Doctor(x) ∧ PrescribeMedication(x) → ExaminePatient(x))"
    },
    {
        "NL": "A diet can be recognized as a vegetarian diet when it excludes the consumption of meat, relies on plant-based foods, and may include dairy products and eggs.",
        "FOL": "∀x (Diet(x) ∧ ExcludesMeatConsumption(x) ∧ ReliesOnPlantBasedFoods(x) ∧ (IncludesDairyProducts(x) ∨ IncludesEggs(x)) → VegetarianDiet(x))"
    },
    {
        "NL": "A location experiences summer when the average temperature is above 25 degrees Celsius and winter when the average temperature is below 5 degrees Celsius.",
        "FOL": "∀x∀y (Location(x) ∧ AvgTemperature(x, y) ∧ GreaterThan(y, 25) → Summer(x)) ∧ (Location(x) ∧ AvgTemperature(x, y) ∧ LessThan(y, 5) → Winter(x))"
    },
    {
        "NL": "All humans are mortal beings, but not all mortal beings are humans.",
        "FOL": "∀x (Human(x) → MortalBeing(x)) ∧ ∃y (MortalBeing(y) ∧ ¬Human(y))"
    },
    {
        "NL": "A fruit is an apple if and only if every substance it contains is sweet.",
        "FOL": "∀x (Apple(x) ↔ ∀y (Contains(x, y) → Sweet(y)))"
    },
    {
        "NL": "A venue is a concert hall if it hosts live music, is welcoming for audiences, and holds a cultural significance.",
        "FOL": "∀x (Venue(x) ∧ HostsLiveMusic(x) ∧ WelcomingForAudiences(x) ∧ HoldsCulturalSignificance(x) → ConcertHall(x))"
    },
    {
        "NL": "An animal that primarily eats insects is an insectivore.",
        "FOL": "∀x (Animal(x) ∧ PrimarilyEatsInsects(x) → Insectivore(x))"
    },
    {
        "NL": "A fruit is classified as a berry if it has a fleshy exocarp, a single ovary, and multiple seeds.",
        "FOL": "∀x (Fruit(x) ∧ FleshyExocarp(x) ∧ SingleOvary(x) ∧ MultipleSeeds(x) → Berry(x))"
    },
    {
        "NL": "A software application that enables users to create, edit, and manage digital content, incorporates multimedia elements, and supports various file formats is a content creation tool.",
        "FOL": "∀x∀y∀z (SoftwareApplication(x) ∧ EnablesUsersToCreateEditAndManageDigitalContent(x) ∧ IncorporatesMultimediaElements(x, y) ∧ SupportsVariousFileFormats(x, z) → ContentCreationTool(x))"
    },
    {
        "NL": "A fabric that is breathable is not waterproof.",
        "FOL": "∀x (Fabric(x) ∧ Breathable(x) → ¬Waterproof(x))"
    },
    {
        "NL": "A room is dark if no lights are on and the curtains are closed.",
        "FOL": "∀x (Room(x) ∧ ¬LightsOn(x) ∧ CurtainsClosed(x) → Dark(x))"
    },
    {
        "NL": "Maria and Claire are not doctors.",
        "FOL": "¬Doctor(maria) ∧ ¬Doctor(claire)"
    },
    {
        "NL": "A scientist performs experiments to test hypotheses.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Experiment(y) ∧ Hypothesis(z) → PerformsTest(x, y, z))"
    },
    {
        "NL": "There is no animal that all predators aim to eat if and only if there exists an animal that no predator aims to eat.",
        "FOL": "¬∃x (Animal(x) ∧ ∀y (Predator(y) → AimsToEat(y, x))) ↔ ∃z (Animal(z) ∧ ∀w (Predator(w) → ¬AimsToEat(z, w)))"
    },
    {
        "NL": "All birds are either parrots or sparrows, but not both.",
        "FOL": "∀x (Bird(x) ∧ (Parrot(x) ⊕ Sparrow(x)))"
    },
    {
        "NL": "If a person has a strong sense of self-awareness, they are more likely to develop effective coping strategies and maintain healthy relationships.",
        "FOL": "∀x (StrongSenseOfSelfAwareness(x) → (DevelopEffectiveCopingStrategies(x) ∧ MaintainHealthyRelationships(x)))"
    },
    {
        "NL": "A cat is sleeping on the rug late at night.",
        "FOL": "∃x ∃y ∃z (Cat(x) ∧ Rug(y) ∧ SleepingOn(x, y) ∧ LateNight(z))"
    },
    {
        "NL": "Vaccines help protect individuals from infectious diseases by stimulating their immune system to produce a response.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ InfectiousDisease(y) ∧ Individual(z) → StimulatesImmuneSystem(x, z, y))"
    },
    {
        "NL": "A vehicle is either a car or a motorcycle.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Motorcycle(x)))"
    },
    {
        "NL": "A smartphone has a touch screen and can access the internet.",
        "FOL": "∀x (Smartphone(x) → (HasTouchScreen(x) ∧ CanAccessInternet(x)))"
    },
    {
        "NL": "Instruments like the violin or cello require regular maintenance to ensure optimal sound quality.",
        "FOL": "∀x (Instrument(x) ∧ (Violin(x) ∨ Cello(x)) → RequiresRegularMaintenance(x))"
    },
    {
        "NL": "An element is a metal if it is a good conductor of heat and electricity and is malleable.",
        "FOL": "∀x (Element(x) ∧ GoodHeatConductor(x) ∧ GoodElectricityConductor(x) ∧ Malleable(x) → Metal(x))"
    },
    {
        "NL": "Even though every particle attracts some other, no particle attracts anything heavier than itself.",
        "FOL": "∀x ∃y (Attracts(x, y)) ∧ ¬∃z ∃w (Attracts(z, w) ∧ HeavierThan(w, z))"
    },
    {
        "NL": "Every elephant is walking.",
        "FOL": "∀x (Elephant(x) → Walking(x))"
    },
    {
        "NL": "A book is child-appropriate if it does not contain explicit scenes.",
        "FOL": "∀x (Book(x) ∧ ¬ContainExplicitScenes(x) → ChildAppropriate(x))"
    },
    {
        "NL": "A river forms a delta when it deposits sediment into a body of water as it enters, causing the water to slow and spread out.",
        "FOL": "∀x ∀y (River(x) ∧ DepositsSedimentIntoBodyOfWater(x, y) ∧ WaterSlowsAndSpreads(y) → FormsDelta(x))"
    },
    {
        "NL": "Lions hunt for prey in the savannah.",
        "FOL": "∀x ∀y ∀z (Lion(x) ∧ Prey(y) ∧ Savannah(z) → HuntsIn(x, y, z))"
    },
    {
        "NL": "An ice cream flavor becomes popular when it offers a unique taste, has appealing visual presentation, and is available at a reasonable price.",
        "FOL": "∀x (IceCreamFlavor(x) ∧ UniqueTaste(x) ∧ AppealingVisualPresentation(x) ∧ ReasonablePrice(x) → Popular(x))"
    },
    {
        "NL": "Investments in renewable energy infrastructure, such as solar and wind power, contribute to reducing dependency on fossil fuels, lower greenhouse gas emissions, and support sustainable development.",
        "FOL": "∀x∀y (Investment(x) ∧ RenewableEnergyInfrastructure(x) ∧ SolarOrWindPower(x, y) ∧ ReducesDependencyOnFossilFuels(x, y) ∧ LowersGreenhouseGasEmissions(x, y) → SupportsSustainableDevelopment(x, y))"
    },
    {
        "NL": "A movie becomes a blockbuster if it is well-reviewed and earns over 100 million dollars.",
        "FOL": "∀x ∀y ∀z (Movie(x) ∧ WellReviewed(y, x) ∧ Earns(z, x) ∧ GreaterThan100MillionDollars(z) → Blockbuster(x))"
    },
    {
        "NL": "Organisms that can produce their own food through photosynthesis, provide energy for other organisms, and do not consume other organisms are primary producers.",
        "FOL": "∀x (Organism(x) ∧ CanProduceOwnFoodThroughPhotosynthesis(x) ∧ ProvidesEnergyForOtherOrganisms(x) ∧ ¬ConsumesOtherOrganisms(x) → PrimaryProducer(x))"
    },
    {
        "NL": "A place is an island if it is a piece of land completely surrounded by water.",
        "FOL": "∀x (Island(x) ↔ (Place(x) ∧ Land(x) ∧ SurroundedByWater(x)))"
    },
    {
        "NL": "There is no location that all locations lead to if and only if there exists a location that leads to no location.",
        "FOL": "¬∃x (Location(x) ∧ ∀y (Location(y) → LeadTo(y, x))) ↔ ∃z (Location(z) ∧ ∀w (Location(w) → ¬LeadTo(z, w)))"
    },
    {
        "NL": "In chess, a pawn can only move forward, while a knight moves in an L-shape.",
        "FOL": "∀x ∀y (Pawn(x) ∧ ChessPiece(x) ∧ Knight(y) ∧ ChessPiece(y) → (MovesForward(x) ∧ MovesInLShape(y)))"
    },
    {
        "NL": "An animal is considered a mammal if it has hair, gives birth to live young, and produces milk.",
        "FOL": "∀x (Mammal(x) ↔ (HasHair(x) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x)))"
    },
    {
        "NL": "A student excels in mathematics if they understand algebra, geometry, or both, and have good problem-solving skills.",
        "FOL": "∀x (Student(x) → (ExcelsInMathematics(x) ↔ ((UnderstandsAlgebra(x) ∨ UnderstandsGeometry(x)) ∧ GoodProblemSolvingSkills(x))))"
    },
    {
        "NL": "The traffic light is either green or red, not both.",
        "FOL": "∀x (TrafficLight(x) → (Green(x) ⊕ Red(x)))"
    },
    {
        "NL": "Artists are not always recognized.",
        "FOL": "∃x (Artist(x) ∧ ¬Recognized(x))"
    },
    {
        "NL": "A software update is successful if it downloads without errors, installs without issues, and doesn't cause any new problems in the system.",
        "FOL": "∀x (SoftwareUpdate(x) ∧ (DownloadsNoErrors(x) ∧ InstallsNoIssues(x) ∧ NoNewProblems(x)) → Successful(x))"
    },
    {
        "NL": "A vehicle is an airplane if it is designed for air travel and has fixed wings.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForAirTravel(x) ∧ HasFixedWings(x) → Airplane(x))"
    },
    {
        "NL": "An author writes novels, essays, or poetry.",
        "FOL": "∀x (Author(x) → (WritesNovels(x) ∨ WritesEssays(x) ∨ WritesPoetry(x)))"
    },
    {
        "NL": "A planet in the solar system orbits around the sun and has a natural satellite.",
        "FOL": "∀x∀y (Planet(x) ∧ SolarSystem(y) ∧ NaturalSatellite(z) → (OrbitsAround(x, y) ∧ HasNaturalSatellite(x, z)))"
    },
    {
        "NL": "No device is considered efficient unless it is either solar-powered or uses renewable energy, and not all of them are durable.",
        "FOL": "¬∃x (Device(x) ∧ Efficient(x) ∨ (SolarPowered(x) ∨ UsesRenewableEnergy(x))) ∧ ¬∀y (Device(y) → Durable(y))"
    },
    {
        "NL": "Cats and dogs are common pets, while crocodiles and sharks are not.",
        "FOL": "∀x (Cat(x) ∨ Dog(x) → CommonPet(x)) ∧ ∀y (Crocodile(y) ∨ Shark(y) → ¬CommonPet(y))"
    },
    {
        "NL": "Ducks are animals that have feathers and can swim.",
        "FOL": "∀x (Duck(x) → Animal(x) ∧ HasFeathers(x) ∧ CanSwim(x))"
    },
    {
        "NL": "If a device is part of a computer set, it is a mouse, keyboard, or monitor.",
        "FOL": "∀x (Device(x) ∧ PartOfComputerSet(x) → Mouse(x) ∨ Keyboard(x) ∨ Monitor(x))"
    },
    {
        "NL": "If Zoe is not a scientist then Mark is a teacher.",
        "FOL": "¬Scientist(zoe) → Teacher(mark)"
    },
    {
        "NL": "A performer dances ballet or hiphop",
        "FOL": "∀x (Performer(x) → (DancesBallet(x) ∨ DancesHipHop(x)))"
    },
    {
        "NL": "Museums display artifacts.",
        "FOL": "∀x (Museum(x) → DisplayArtifact(x))"
    },
    {
        "NL": "Cities with a higher population density have more traffic congestion than cities with a lower population density.",
        "FOL": "∀x∀y (City(x) ∧ City(y) ∧ HigherPopulationDensity(x, y) → MoreTrafficCongestion(x, y))"
    },
    {
        "NL": "A vehicle requires fuel, such as gasoline or electricity, to power its engine and move.",
        "FOL": "∀x∀y (Vehicle(x) ∧ (Gasoline(y) ∨ Electricity(y)) → RequiresFuelToPowerEngineAndMove(x, y))"
    },
    {
        "NL": "A game can be single-player or multiplayer, and it can be cooperative or competitive, allowing for various gameplay styles.",
        "FOL": "∀x (Game(x) → ((SinglePlayer(x) ∨ Multiplayer(x)) ∧ (Cooperative(x) ∨ Competitive(x))))"
    },
    {
        "NL": "A skilled teacher effectively communicates knowledge to students, while adapting to their learning styles.",
        "FOL": "∀x ∀y (Teacher(x) ∧ Student(y) → (EffectivelyCommunicateKnowledge(x, y) ∧ AdaptToLearningStyles(x, y)))"
    },
    {
        "NL": "A meal is considered healthy if it contains a balanced mix of carbohydrates, proteins, and fats, and is low in sugar and salt.",
        "FOL": "∀x (Meal(x) ∧ Healthy(x) ↔ (BalancedCarbohydrates(x) ∧ BalancedProteins(x) ∧ BalancedFats(x) ∧ LowSugar(x) ∧ LowSalt(x)))"
    },
    {
        "NL": "A game is a draw if neither player wins nor loses.",
        "FOL": "∀x (Game(x) ∧ ¬PlayerWins(x) ∧ ¬PlayerLoses(x) → Draw(x))"
    },
    {
        "NL": "No dish is a pasta unless it is Italian.",
        "FOL": "∀x (Dish(x) → (¬Pasta(x) ∨ Italian(x)))"
    },
    {
        "NL": "People who eat quickly may experience digestion problems.",
        "FOL": "∀x (Person(x) ∧ EatsQuickly(x) → MayExperienceDigestionProblems(x))"
    },
    {
        "NL": "A creature is a bird if and only if it can fly or lay eggs.",
        "FOL": "∀x (Bird(x) ↔ (CanFly(x) ∨ LayEggs(x)))"
    },
    {
        "NL": "A person is a grandchild if they are the offspring of another person's child.",
        "FOL": "∀x (Grandchild(x) ↔ ∃y ∃z (Person(y) ∧ Person(z) ∧ Child(y, z) ∧ Offspring(x, y)))"
    },
    {
        "NL": "A mountain is volcanic if it has a magma chamber and an opening to the Earth's surface.",
        "FOL": "∀x (Mountain(x) ∧ HasMagmaChamber(x) ∧ OpeningToSurface(x) → Volcanic(x))"
    },
    {
        "NL": "Every happy person knows at least one person who only knows sad people.",
        "FOL": "∀x (Happy(x) → ∃y (Knows(x, y) ∧ ¬∃z (Knows(y, z) ∧ ¬Sad(z))))"
    },
    {
        "NL": "A fire burns if there is fuel, an ignition source, and oxygen, but not when it is extinguished.",
        "FOL": "∀x (Fire(x) ∧ Fuel(x) ∧ IgnitionSource(x) ∧ Oxygen(x) ∧ ¬Extinguished(x) → Burns(x))"
    },
    {
        "NL": "A fire extinguisher is used to put out fires by releasing a fire suppressant.",
        "FOL": "∀x∀y (FireExtinguisher(x) ∧ Fire(y) ∧ ReleasesFireSuppressant(x) → PutsOut(x, y))"
    },
    {
        "NL": "A bicycle has two wheels and can be ridden by an individual.",
        "FOL": "∀x (Bicycle(x) → (∃y (TwoWheels(y) ∧ Has(x, y) ∧ ∃z (Individual(z) ∧ Ride(z, x)))))"
    },
    {
        "NL": "Plants in a garden need sunlight and water to grow, but cacti only need sunlight.",
        "FOL": "∀x∀y (Plant(x) ∧ Garden(y) ∧ InGarden(x, y) ∧ Sunlight(x) ∧ ¬Cactus(x) → Water(x))"
    },
    {
        "NL": "A bicycle helmet protects the head during a fall, while a life jacket provides buoyancy in water.",
        "FOL": "∀x (BicycleHelmet(x) → ProtectsHeadDuringFall(x)) ∧ ∀y (LifeJacket(y) → ProvidesBuoyancyInWater(y))"
    },
    {
        "NL": "There are humans who love Maria and Claire.",
        "FOL": "∃x (Human(x) ∧ Love(x, maria) ∧ Love(x, claire))"
    },
    {
        "NL": "A square is not green and does not lead to any purple body.",
        "FOL": "∀x (Square(x) → (¬Green(x) ∧ ¬∃y (Purple(y) ∧ LeadsTo(x, y))))"
    },
    {
        "NL": "A computer program may be considered efficient if it has a low memory footprint and short execution time.",
        "FOL": "∀x (ComputerProgram(x) ∧ (LowMemoryFootprint(x) ∧ ShortExecutionTime(x)) → Efficient(x))"
    },
    {
        "NL": "A room with more windows has better natural light than one with fewer windows.",
        "FOL": "∀x∀y (Room(x) ∧ Room(y) ∧ MoreWindows(x) ∧ FewerWindows(y) → BetterNaturalLight(x, y))"
    },
    {
        "NL": "An individual is recognized as a mathematician if they specialize in numbers, have theoretical knowledge, and often create logical systems.",
        "FOL": "∀x (Person(x) → SpecializeInNumbers(x) ∧ TheoreticalKnowledge(x) ∧ CreateLogicalSystems(x) → Mathematician(x))"
    },
    {
        "NL": "Omar plays soccer or Omar is a scientist.",
        "FOL": "PlaySoccer(omar) ∨ Scientist(omar)"
    },
    {
        "NL": "When a player scores a goal in soccer, their team's score increases by one, but the opposing team's score remains unchanged.",
        "FOL": "∀x∀y∀z (Player(x) ∧ Team(y) ∧ OpposingTeam(z) ∧ ScoresGoal(x) ∧ BelongsToTeam(x, y) → (IncrementScoreByOne(y) ∧ ¬IncrementScoreByOne(z)))"
    },
    {
        "NL": "Every artist who paints both portraits and landscapes, unless they host an exhibition, has either won an art competition or never worked in an art gallery.",
        "FOL": "∀x (Artist(x) ∧ PaintsPortraits(x) ∧ PaintsLandscapes(x) ∨ HostsExhibition(x) → (WonArtCompetition(x) ∨ ¬WorkedInGallery(x)))"
    },
    {
        "NL": "If a fish swims in the tank, then some hexagons are either silver or gold.",
        "FOL": "∃x ∃y (Fish(x) ∧ Tank(y) ∧ SwimsIn(x, y) → ∃z (Hexagon(z) ∧ (Silver(z) ⊕ Gold(z))))"
    },
    {
        "NL": "A bakery sells fresh bread when it is baked daily on the premises.",
        "FOL": "∀x (Bakery(x) → (SellsFreshBread(x) ↔ BakedDailyOnPremises(x)))"
    },
    {
        "NL": "A person is considered a writer if they create written works such as novels, essays, or screenplays.",
        "FOL": "∀x (Person(x) ∧ (CreatesNovels(x) ∨ CreatesEssays(x) ∨ CreatesScreenplays(x)) → Writer(x))"
    },
    {
        "NL": "A chemical compound x reacts with another chemical compound y if x and y form a new substance when combined.",
        "FOL": "∀x ∀y (ChemicalCompound(x) ∧ ChemicalCompound(y) ∧ FormsNewSubstance(x, y) → ReactsWith(x, y))"
    },
    {
        "NL": "A house has a roof and walls.",
        "FOL": "∀x (House(x) → (Has(x, Roof) ∧ Has(x, Walls)))"
    },
    {
        "NL": "Mathematicians solve problems using logic, while physicists apply their knowledge to understand natural phenomena.",
        "FOL": "∀x (Mathematician(x) ∧ SolveProblems(x) → UseLogic(x)) ∧ ∀y (Physicist(y) ∧ UnderstandPhenomena(y) → ApplyKnowledge(y))"
    },
    {
        "NL": "A chair is for sitting, while a table is for placing objects on it.",
        "FOL": "∀x (Chair(x) → ForSitting(x)) ∧ (Table(x) → ForPlacingObjects(x))"
    },
    {
        "NL": "An electronic device is considered a smartphone if it can make phone calls, send text messages, and access the internet.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CanMakePhoneCalls(x) ∧ SendTextMessages(x) ∧ AccessInternet(x) → Smartphone(x))"
    },
    {
        "NL": "An object is considered a cleaning tool if it is designed to remove dirt, dust, or stains from surfaces or materials.",
        "FOL": "∀x (Object(x) ∧ DesignedToRemoveDirtDustOrStains(x) → CleaningTool(x))"
    },
    {
        "NL": "A flower that blooms at night and closes during the day is called a nocturnal flower.",
        "FOL": "∀x ((Flower(x) ∧ BloomsAtNight(x) ∧ ClosesDuringDay(x)) → NocturnalFlower(x))"
    },
    {
        "NL": "A payment method can be either cash or card, but not both, and either contactless or with contact, but not both.",
        "FOL": "∀x (PaymentMethod(x) → ((Cash(x) ⊕ Card(x)) ∧ (Contactless(x) ⊕ WithContact(x))))"
    },
    {
        "NL": "A person is considered a teacher if they provide instruction and guidance to students in an educational setting.",
        "FOL": "∀x (Person(x) ∧ ProvidesInstructionToStudents(x) ∧ ProvidesGuidanceToStudents(x) ∧ InEducationalSetting(x) → Teacher(x))"
    },
    {
        "NL": "All planets in the solar system orbit the Sun.",
        "FOL": "∀x (PlanetInSolarSystem(x) → OrbitsSun(x))"
    },
    {
        "NL": "A piece of furniture that is designed for sitting, has a backrest, and may have armrests is a chair or a bench.",
        "FOL": "∀x (Furniture(x) ∧ DesignedForSitting(x) ∧ HasBackrest(x) ∧ (MayHaveArmrests(x) ∨ NoArmrests(x)) → (Chair(x) ∨ Bench(x)))"
    },
    {
        "NL": "An entity is identified as a printer if it can print documents, connect to a computer, scan images, and use ink cartridges.",
        "FOL": "∀x ((Entity(x) ∧ CanPrintDocuments(x) ∧ ConnectToComputer(x) ∧ ScanImages(x) ∧ UseInkCartridges(x)) → Printer(x))"
    },
    {
        "NL": "A living organism can be either a plant or an animal.",
        "FOL": "∀x (LivingOrganism(x) → (Plant(x) ⊕ Animal(x)))"
    },
    {
        "NL": "A vehicle can be classified as a car, motorcycle, or truck based on its size, purpose, and design.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Motorcycle(x) ∨ Truck(x)))"
    },
    {
        "NL": "Some houses are made of bricks, while others are made of wood or concrete.",
        "FOL": "∀x (House(x) → (MadeOfBricks(x) ⊕ MadeOfWood(x) ⊕ MadeOfConcrete(x)))"
    },
    {
        "NL": "A political candidate wins an election if they receive more votes than their opponent and meet the required conditions.",
        "FOL": "∀x∀y∀z (PoliticalCandidate(x) ∧ Election(y) ∧ Opponent(z) ∧ ReceivesMoreVotesThan(x, z) ∧ MeetsRequiredConditions(x) → WinsElection(x, y))"
    },
    {
        "NL": "A place is considered a museum if it exhibits and preserves artifacts, artwork, or other objects of historical, cultural, or scientific importance.",
        "FOL": "∀x (Place(x) ∧ ExhibitsArtifacts(x) ∧ PreservesObjects(x) ∧ (HistoricalImportance(x) ∨ CulturalImportance(x) ∨ ScientificImportance(x)) → Museum(x))"
    },
    {
        "NL": "An asteroid is a small rocky body orbiting the sun, a comet is a celestial object consisting of a nucleus of ice and dust and orbiting the sun, and a meteor is a small celestial body that burns upon entering Earth's atmosphere.",
        "FOL": "∀x∀y∀z (Asteroid(x) ∧ Comet(y) ∧ Meteor(z) → (SmallRockyBodyOrbitingSun(x) ∧ NucleusOfIceAndDust(y) ∧ OrbitingSun(y) ∧ SmallCelestialBody(z) ∧ BurnsUponEnteringAtmosphere(z)))"
    },
    {
        "NL": "A fruit is considered ripe if it has a sweet taste, a pleasant aroma, and a vibrant color.",
        "FOL": "∀x (Fruit(x) ∧ SweetTaste(x) ∧ PleasantAroma(x) ∧ VibrantColor(x) → Ripe(x))"
    },
    {
        "NL": "A carpenter is building a house on a plot.",
        "FOL": "∃x ∃y ∃z (Carpenter(x) ∧ House(y) ∧ Plot(z) ∧ Building(x, y) ∧ On(x, z))"
    },
    {
        "NL": "Sunglasses protect the eyes from sunlight and reduce glare.",
        "FOL": "∀x (Sunglasses(x) → (ProtectsFromSunlight(x) ∧ ReducesGlare(x)))"
    },
    {
        "NL": "Plants release oxygen through photosynthesis and absorb carbon dioxide.",
        "FOL": "∀x (Plant(x) → (ReleasesOxygen(x) → Photosynthesis(x)) ∧ AbsorbsCarbonDioxide(x))"
    },
    {
        "NL": "A parallelepiped has six faces, each a parallelogram.",
        "FOL": "∀x (Parallelepiped(x) → (HasSixFaces(x) ∧ FacesAreParallelograms(x)))"
    },
    {
        "NL": "An innovative company invests in research and development, encourages creative problem-solving among employees, and adapts to evolving market demands.",
        "FOL": "∀x∀y (Company(x) ∧ Employee(y, x) ∧ InvestsInResearchAndDevelopment(x) ∧ EncouragesCreativeProblemSolving(x, y) ∧ AdaptsToEvolvingMarketDemands(x) → Innovative(x))"
    },
    {
        "NL": "A patch can mitigate pain by addressing its cause.",
        "FOL": "∀x ∀y (Patch(x) ∧ Pain(y) → (Mitigates(x, y) → AddressesCause(x, y)))"
    },
    {
        "NL": "An athlete is successful if they consistently win competitions and maintain a high level of fitness or have a strong fan base, but not if they engage in unsportsmanlike conduct or violate anti-doping rules.",
        "FOL": "∀x (Athlete(x) ∧ ConsistentlyWinsCompetitions(x) ∧ (HighLevelOfFitness(x) ∨ StrongFanBase(x)) ∧ ¬UnsportsmanlikeConduct(x) ∧ ¬ViolatesAntiDopingRules(x) → Successful(x))"
    },
    {
        "NL": "A substance is considered acidic if it has a pH value less than 7 and reacts with bases to form salts.",
        "FOL": "∀x (Substance(x) ∧ PHValueLessThanSeven(x) ∧ ReactsWithBasesToFormSalts(x) → Acidic(x))"
    },
    {
        "NL": "A botanical garden contains a variety of plant species, such as trees, flowers, and ferns, and is designed for educational and recreational purposes.",
        "FOL": "∀x∀y (BotanicalGarden(x) ∧ (Tree(y) ∨ Flower(y) ∨ Fern(y)) → ContainsPlantSpeciesAndDesignedFor(x, y))"
    },
    {
        "NL": "A train is a mode of transportation that travels on tracks, can carry passengers or cargo, and is powered by various means, such as diesel engines or electric motors.",
        "FOL": "∀x ∀y (Train(x) ∧ Transportation(y) → TravelsOnTracks(x) ∧ (CarriesPassengers(x) ∨ CarriesCargo(x)) ∧ (PoweredByDieselEngine(x, y) ∨ PoweredByElectricMotor(x, y)))"
    },
    {
        "NL": "A pentagon is a polygon with five sides and five angles.",
        "FOL": "∀x (Pentagon(x) → (Polygon(x) ∧ Sides(x, 5) ∧ Angles(x, 5)))"
    },
    {
        "NL": "Something is an ancient artifact only if it is old.",
        "FOL": "∀x (Ancient(x) ∧ Artifact(x) → Old(x))"
    },
    {
        "NL": "A computer system is secure if it employs encryption, has a strong authentication mechanism, and regularly updates its software.",
        "FOL": "∀x (ComputerSystem(x) ∧ Encryption(x) ∧ StrongAuthentication(x) ∧ RegularSoftwareUpdates(x) → Secure(x))"
    },
    {
        "NL": "If a movie is a thriller, then it is not a comedy.",
        "FOL": "∀x (Thriller(x) → ¬Comedy(x))"
    },
    {
        "NL": "A bird is called a pet if it is owned by a family or individual.",
        "FOL": "∀x (Bird(x) ∧ (OwnedByFamily(x) ∨ OwnedByIndividual(x)) → Pet(x))"
    },
    {
        "NL": "A movie is family-friendly if it doesn't contain violence or profanity.",
        "FOL": "∀x (Movie(x) ∧ ¬ContainViolence(x) ∧ ¬ContainProfanity(x) → FamilyFriendly(x))"
    },
    {
        "NL": "In a music concert, a singer performs songs accompanied by musicians who play instruments like guitar, drums, or keyboard.",
        "FOL": "∀x ∀y (Singer(x) ∧ MusicConcert(y) → (PerformsSongs(x, y) ∧ AccompaniedByMusicians(x, y) ∧ PlaysInstruments(y, guitar, drums, keyboard)))"
    },
    {
        "NL": "A museum displays artifacts, paintings, sculptures, and other works of art, usually grouped by theme, time period, or artist.",
        "FOL": "∀x ∀y (Museum(x) ∧ ArtWork(y) ∧ InMuseum(y, x) → (Artifact(y) ∨ Painting(y) ∨ Sculpture(y) ∧ GroupedByThemeTimePeriodArtist(y)))"
    },
    {
        "NL": "A renewable energy source, such as solar or wind power, can be replenished naturally in a relatively short period of time and is considered more sustainable than non-renewable sources like fossil fuels.",
        "FOL": "∀x∀y (RenewableEnergySource(x) ∧ NonRenewableEnergySource(y) → (ReplenishedNaturally(x) ∧ MoreSustainable(x, y)))"
    },
    {
        "NL": "A raincoat protects from rain and wind but not from snow.",
        "FOL": "∀x ∀y ∀z ∀w (Raincoat(x) ∧ Rain(y) ∧ Wind(z) ∧ Snow(w) → (ProtectsFrom(x, y) ∧ ProtectsFrom(x, z) ∧ ¬ProtectsFrom(x, w)))"
    },
    {
        "NL": "An element is a noble gas if it has a full outer electron shell or it is not reactive.",
        "FOL": "∀x (Element(x) ∧ (FullOuterShell(x) ∨ ¬Reactive(x)) → NobleGas(x))"
    },
    {
        "NL": "A fruit that is ripe and undamaged can be eaten.",
        "FOL": "∀x (Fruit(x) ∧ Ripe(x) ∧ ¬Damaged(x) → CanBeEaten(x))"
    },
    {
        "NL": "A software becomes popular if it's user-friendly, efficient, and has advanced features.",
        "FOL": "∀x (Software(x) ∧ IsUserFriendly(x) ∧ IsEfficient(x) ∧ HasAdvancedFeatures(x) → BecomesPopular(x))"
    },
    {
        "NL": "A company hires an applicant if they possess relevant skills, work experience, or a strong network.",
        "FOL": "∀x∀y (Company(x) ∧ Applicant(y) → (RelevantSkills(y) ∨ WorkExperience(y) ∨ StrongNetwork(y)) → Hires(x, y))"
    },
    {
        "NL": "A factory worker is regarded as industrious if and only if they work double shifts or they are highly skilled.",
        "FOL": "∀x (FactoryWorker(x) → (Industrious(x) ↔ (WorksDoubleShifts(x) ∨ HighlySkilled(x))))"
    },
    {
        "NL": "A battery stores electrical energy that can be converted into power to run electronic devices.",
        "FOL": "∀x ∀y ∀z (Battery(x) ∧ ElectricalEnergy(y) ∧ ElectronicDevice(z) → (Store(x, y) ∧ ConvertToPower(x, z)))"
    },
    {
        "NL": "A museum houses a collection of artifacts, provides educational programs, and hosts exhibitions to promote cultural understanding and appreciation.",
        "FOL": "∀x∀y∀z (Museum(x) ∧ HousesCollectionOfArtifacts(x, y) ∧ ProvidesEducationalPrograms(x, z) ∧ HostsExhibitions(x, z) → PromotesCulturalUnderstandingAndAppreciation(x, y, z))"
    },
    {
        "NL": "Bread can become stale when exposed to air, and milk can spoil when exposed to warmth.",
        "FOL": "∀x (Bread(x) ∧ ExposedToAir(x) → BecomeStale(x)) ∧ ∀y (Milk(y) ∧ ExposedToWarmth(y) → Spoil(y))"
    },
    {
        "NL": "Nations with constant governance, robust economies, and efficient infrastructures have a superior living standard.",
        "FOL": "∀x (Nation(x) ∧ ConstantGovernance(x) ∧ RobustEconomy(x) ∧ EfficientInfrastructure(x) → HaveSuperiorLivingStandard(x))"
    },
    {
        "NL": "A bird is considered a migratory bird if it moves between different habitats during different seasons.",
        "FOL": "∀x (Bird(x) ∧ MovesBetweenHabitatsInDifferentSeasons(x) → MigratoryBird(x))"
    },
    {
        "NL": "An electronic device requires power to function and may need software updates.",
        "FOL": "∀x (ElectronicDevice(x) ∧ RequiresPower(x) ∧ (NeedsSoftwareUpdates(x) ∨ ¬NeedsSoftwareUpdates(x)) → Functions(x))"
    },
    {
        "NL": "A novel is a type of book with a fictional story, while a textbook is a type of book with educational content.",
        "FOL": "∀x ∀y (Novel(x) ∧ Textbook(y) → (Book(x) ∧ FictionalStory(x) ∧ Book(y) ∧ EducationalContent(y)))"
    },
    {
        "NL": "An email is unread and marked as important.",
        "FOL": "∃x (Email(x) ∧ Unread(x) ∧ MarkedAsImportant(x))"
    },
    {
        "NL": "A national park protects ecosystems and wildlife, and offers recreational activities for visitors.",
        "FOL": "∀x (NationalPark(x) → (Protects(x) ∧ (Ecosystems(x) ∨ Wildlife(x)) ∧ OffersRecreationalActivities(x)))"
    },
    {
        "NL": "A software application is user-friendly when it has an intuitive interface, offers helpful guidance, and is easily customizable.",
        "FOL": "∀x ∀y (SoftwareApplication(x) ∧ IntuitiveInterface(x, y) ∧ HelpfulGuidance(y) ∧ EasilyCustomizable(x) → UserFriendly(x))"
    },
    {
        "NL": "Not all books are read but all of them are not engaging.",
        "FOL": "¬∀x (Book(x) → Read(x)) ∧ ∀y (Book(y) → ¬Engaging(y))"
    },
    {
        "NL": "A prime number is divisible only by 1 and itself, and it is greater than 1.",
        "FOL": "∀x (PrimeNumber(x) ↔ DivisibleOnlyBy(x, 1) ∧ DivisibleOnlyBy(x, x) ∧ GreaterThan(x, 1))"
    },
    {
        "NL": "A system is secure if it has strong encryption or two-factor authentication, but not both.",
        "FOL": "∀x (System(x) ∧ Secure(x) ↔ (StrongEncryption(x) ⊕ TwoFactorAuthentication(x)))"
    },
    {
        "NL": "Birds that can fly long distances usually have large wings and strong muscles.",
        "FOL": "∀x (Bird(x) ∧ CanFlyLongDistances(x) → (LargeWings(x) ∧ StrongMuscles(x)))"
    },
    {
        "NL": "If a person is an engineer, they must design, build, and maintain various systems and structures.",
        "FOL": "∀x (Engineer(x) → (DesignsSystemsAndStructures(x) ∧ BuildsSystemsAndStructures(x) ∧ MaintainsSystemsAndStructures(x)))"
    },
    {
        "NL": "Predators hunt other animals for food, while herbivores eat plants.",
        "FOL": "∀x (Predator(x) → HuntOtherAnimalsForFood(x)) ∧ ∀y (Herbivore(y) → EatPlants(y))"
    },
    {
        "NL": "A telescope is used for observing distant objects by collecting and magnifying light.",
        "FOL": "∀x (Telescope(x) ↔ (ObservesDistantObjects(x) ∧ CollectsLight(x) ∧ MagnifiesLight(x)))"
    },
    {
        "NL": "A microwave oven heats food using microwaves, while a conventional oven heats food using convection and doesn't use microwaves.",
        "FOL": "∀x∀y (MicrowaveOven(x) ∧ ConventionalOven(y) → (HeatsFoodUsingMicrowaves(x) ∧ HeatsFoodUsingConvection(y) ∧ ¬UsesMicrowaves(y)))"
    },
    {
        "NL": "A type of music can be either classical or modern.",
        "FOL": "∀x (MusicType(x) → Classical(x) ⊕ Modern(x))"
    },
    {
        "NL": "In an educational setting, active engagement with course materials leads to a deeper understanding of the subject matter.",
        "FOL": "∀x (EducationalSetting(x) ∧ ActiveEngagement(x) → DeeperUnderstanding(x))"
    },
    {
        "NL": "A ladder helps reach higher places and is used by leaning it against a support.",
        "FOL": "∀x∀y (Ladder(x) ∧ Support(y) → (HelpsReachHigherPlaces(x) ∧ LeansAgainst(x, y)))"
    },
    {
        "NL": "Substances can exist in different states of matter, such as solid, liquid, or gas, depending on their temperature and pressure conditions.",
        "FOL": "∀x ∀y (Substance(x) ∧ StatesOfMatter(y) → (Solid(x) ∨ Liquid(x) ∨ Gas(x) ∧ DependsOnTemperatureAndPressureConditions(x, y)))"
    },
    {
        "NL": "Some athletes excel in speed and endurance.",
        "FOL": "∃x (Athlete(x) ∧ ExcelInSpeed(x) ∧ ExcelInEndurance(x))"
    },
    {
        "NL": "Everyone ate a fruit.",
        "FOL": "∀x (Person(x) → ∃y (Fruit(y) ∧ Ate(x, y)))"
    },
    {
        "NL": "A leaf is dry or wet, but not both.",
        "FOL": "∀x (Leaf(x) → (Dry(x) ⊕ Wet(x)))"
    },
    {
        "NL": "A medication is safe to administer when it effectively treats the condition, has been thoroughly tested, and exhibits minimal side effects, but does not lead to addiction or other harmful consequences.",
        "FOL": "∀x (Medication(x) ∧ SafeToAdminister(x) → ((EffectivelyTreatsCondition(x) ∧ ThoroughlyTested(x) ∧ MinimalSideEffects(x)) ∧ ¬(Addiction(x) ∨ HarmfulConsequences(x))))"
    },
    {
        "NL": "Wind turbines generate electricity by converting the kinetic energy of the wind into mechanical power, which is then transformed into electrical power.",
        "FOL": "∀x (WindTurbine(x) → (GeneratesElectricity(x) ∧ ConvertsKineticEnergyOfWindToMechanicalPower(x) ∧ TransformsMechanicalPowerToElectricalPower(x)))"
    },
    {
        "NL": "An electronic device used to receive, process, and transmit information, featuring a display screen and input devices, is a computer.",
        "FOL": "∀x∀y∀z (ElectronicDevice(x) ∧ ReceiveProcessAndTransmitInformation(x, y) ∧ DisplayScreenAndInputDevices(x, z) → Computer(x))"
    },
    {
        "NL": "A worker is either an engineer or a doctor unless he's a manager.",
        "FOL": "∀x ((Engineer(x) ∨ Doctor(x)) → Manager(x))"
    },
    {
        "NL": "Only the optimists survive.",
        "FOL": "∀x (¬Optimist(x) → ¬Survive(x))"
    },
    {
        "NL": "A city can be crowded, polluted, or noisy, but not all three at once.",
        "FOL": "∀x (City(x) → ¬(IsCrowded(x) ∧ IsPolluted(x) ∧ IsNoisy(x)))"
    },
    {
        "NL": "A restaurant offers outdoor seating if it has a patio or a terrace that can accommodate customers.",
        "FOL": "∀x (Restaurant(x) ∧ (HasPatio(x) ∨ HasTerrace(x)) ∧ AccommodatesCustomers(x) → OffersOutdoorSeating(x))"
    },
    {
        "NL": "Whales migrate to warmer waters to breed and give birth.",
        "FOL": "∀x∀y (Whale(x) ∧ WarmerWater(y) → (MigrateTo(x, y) ∧ Breed(x) ∧ GiveBirth(x)))"
    },
    {
        "NL": "A movie director creates films, while an actor performs in them, and the audience watches them.",
        "FOL": "∀x∀y∀z (MovieDirector(x) ∧ Actor(y) ∧ Audience(z) ∧ CreatesFilm(x) ∧ PerformsInFilm(y) → WatchesFilm(z))"
    },
    {
        "NL": "A molecule can have a positive or negative charge, but not both at the same time.",
        "FOL": "∀x (Molecule(x) → (PositiveCharge(x) ⊕ NegativeCharge(x)))"
    },
    {
        "NL": "A film festival accepts a submission if it is a feature film, a documentary, or an animated film, but not if it is a combination of these categories.",
        "FOL": "∀x (FilmFestival(x) → ∀y (FilmSubmission(y) → (IsFeatureFilm(y) ⊕ IsDocumentary(y) ⊕ IsAnimatedFilm(y))))"
    },
    {
        "NL": "A person has a birthday.",
        "FOL": "∀x (Person(x) → HasBirthday(x))"
    },
    {
        "NL": "A store is convenient if it has a nearby location and extended hours.",
        "FOL": "∀x (Store(x) ∧ NearbyLocation(x) ∧ ExtendedHours(x) → Convenient(x))"
    },
    {
        "NL": "A city is considered safe if it has a low crime rate, well-maintained public spaces, and a responsive emergency services system.",
        "FOL": "∀x (City(x) → (Safe(x) ↔ (LowCrimeRate(x) ∧ WellMaintainedPublicSpaces(x) ∧ ResponsiveEmergencyServices(x))))"
    },
    {
        "NL": "Smartphones connect to the internet using Wi-Fi or mobile data.",
        "FOL": "∀x (Smartphone(x) → (Connect(y) ∧ Internet(y) ∧ Using(z) ∧ Wi-Fi(z) ∨ MobileData(z) ∧ To(x, y, z)))"
    },
    {
        "NL": "A microwave will heat food if the timer is set, and the door is closed, but not if the power is off.",
        "FOL": "∀x ∀y ∀z (Microwave(x) ∧ Food(y) ∧ TimerSet(x) ∧ DoorClosed(x) ∧ ¬PowerOff(x) → Heats(x, y))"
    },
    {
        "NL": "Poisonous substances can cause harm.",
        "FOL": "∀x (PoisonousSubstance(x) → CausesHarm(x))"
    },
    {
        "NL": "A roller coaster offers an adrenaline-filled ride by moving along a track with steep inclines, sharp turns, and high speeds.",
        "FOL": "∀x (RollerCoaster(x) → (AdrenalineFilledRide(x) ∧ MovesAlongTrackWithInclinesTurnsAndSpeed(x)))"
    },
    {
        "NL": "A person can play a musical instrument if they have the necessary skills and knowledge.",
        "FOL": "∀x∀y (Person(x) ∧ MusicalInstrument(y) ∧ HasNecessarySkills(x) ∧ HasNecessaryKnowledge(x) → CanPlay(x, y))"
    },
    {
        "NL": "All whales are mammals.",
        "FOL": "∀x (Whale(x) → Mammal(x))"
    },
    {
        "NL": "A flower is a pollinator if it draws bees or butterflies.",
        "FOL": "∀x ∃y ∃z (Flower(x) ∧ (Bees(y) ∨ Butterflies(z)) ∧ Draws(x, y, z) → Pollinator(x))"
    },
    {
        "NL": "A bicycle rider must wear a helmet for protection, unless they are in a designated area where helmets are not required.",
        "FOL": "∀x∀y (Rider(x) ∧ Bicycle(y) → (WearsHelmet(x) ∨ DesignatedAreaWithoutHelmetRequirement(y)))"
    },
    {
        "NL": "To qualify for a discount, customers must purchase a minimum number of items or spend a minimum amount of money.",
        "FOL": "∀x ∀y (Customer(x) ∧ Purchase(y) ∧ (MinItems(y) ∨ MinAmount(y)) → Discount(x, y))"
    },
    {
        "NL": "A book that is written in the mystery genre, has over 300 pages, and features a detective as the protagonist is a detective novel.",
        "FOL": "∀x (Book(x) ∧ MysteryGenre(x) ∧ Over300Pages(x) ∧ FeaturesDetectiveProtagonist(x) → DetectiveNovel(x))"
    },
    {
        "NL": "A work of art x is a sculpture if it is a three-dimensional representation and is made of materials like stone, wood, or metal.",
        "FOL": "∀x (Artwork(x) ∧ ThreeDimensionalRepresentation(x) ∧ MadeOfSculptureMaterials(x) → Sculpture(x))"
    },
    {
        "NL": "When a person knows how to ride a bike and owns a bike, they can go cycling.",
        "FOL": "∀x (Person(x) ∧ KnowsHowToRideBike(x) ∧ OwnsBike(x) → CanGoCycling(x))"
    },
    {
        "NL": "A planet x supports life form y when it possesses the necessary conditions, such as a stable climate and resources, for the life form to thrive.",
        "FOL": "∀x ∀y (Planet(x) ∧ LifeForm(y) ∧ StableClimate(x) ∧ Resources(x) ∧ NecessaryConditions(x, y) → SupportsLifeForm(x, y))"
    },
    {
        "NL": "An artist paints on a canvas.",
        "FOL": "∀x ∀y (Artist(x) ∧ Canvas(y) → PaintsOn(x, y))"
    },
    {
        "NL": "A bird is chirping on a branch, and a squirrel is eating under the tree.",
        "FOL": "∃x ∃y (Bird(x) ∧ Branch(y) ∧ ChirpingOn(x, y)) ∧ ∃z (Squirrel(z) ∧ Eating(z) ∧ UnderTheTree(z))"
    },
    {
        "NL": "An animal is nocturnal if it is active primarily during the night.",
        "FOL": "∀x (Animal(x) ∧ ActiveDuringNight(x) → Nocturnal(x))"
    },
    {
        "NL": "A circle is blue if and only if it is not large, and it refers to a white or black object.",
        "FOL": "∀x (Circle(x) → ((Blue(x) ↔ ¬Large(x)) ∧ ∃y (Refers(x, y) → (White(y) ∨ Black(y)))))"
    },
    {
        "NL": "Doctors cure diseases, while pharmacists dispense medications.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Disease(y) → Cures(x, y)) ∧ ∀z ∀w (Pharmacist(z) ∧ Medication(w) → Dispenses(z, w))"
    },
    {
        "NL": "All cars are mechanical devices, but not all mechanical devices are cars.",
        "FOL": "∀x (Car(x) → MechanicalDevice(x)) ∧ ∃y (MechanicalDevice(y) ∧ ¬Car(y))"
    },
    {
        "NL": "A smartphone typically has a touchscreen interface, multiple applications, and connectivity features like Wi-Fi, Bluetooth, and cellular data.",
        "FOL": "∀x (Smartphone(x) → (TouchscreenInterface(x) ∧ MultipleApplications(x) ∧ (WifiConnectivity(x) ∧ BluetoothConnectivity(x) ∧ CellularDataConnectivity(x))))"
    },
    {
        "NL": "A university degree is either undergraduate or postgraduate, but not both.",
        "FOL": "∀x (UniversityDegree(x) → (Undergraduate(x) ⊕ Postgraduate(x)))"
    },
    {
        "NL": "If an object is large, then each signal implies a rectangle.",
        "FOL": "∃x (Large(x) → ∀y ∃z (Rectangle(z) ∧ Implies(y, z)))"
    },
    {
        "NL": "Bees collect nectar from flowers, whereas spiders weave webs.",
        "FOL": "∀x (Bee(x) → CollectsNectarFromFlowers(x)) ∧ ∀y (Spider(y) → WeavesWebs(y))"
    },
    {
        "NL": "An owl is hooting on a rooftop, and a fox is barking at sunset.",
        "FOL": "∃x ∃y (Owl(x) ∧ Rooftop(y) ∧ HootingOn(x, y)) ∧ ∃z (Fox(z) ∧ Barking(z) ∧ AtSunset(z))"
    },
    {
        "NL": "A governor is chosen if they secure more support than their contender.",
        "FOL": "∀x ∀y (Governor(x) ∧ Governor(y) ∧ MoreSupport(x, y) → Chosen(x))"
    },
    {
        "NL": "A star connects to a decagon only if that decagon connects back to it.",
        "FOL": "∀x (Star(x) → ∀y (Decagon(y) ∧ ConnectsTo(x, y) → ConnectsTo(y, x)))"
    },
    {
        "NL": "Not every song is soothing or rhythmic.",
        "FOL": "¬∀x (Song(x) → (Soothing(x) ∨ Rhythmic(x)))"
    },
    {
        "NL": "A painting is abstract if it does not depict recognizable objects or subjects, and it emphasizes colors, shapes, or textures.",
        "FOL": "∀x (AbstractPainting(x) ↔ (Painting(x) ∧ ¬DepictsRecognizableObjects(x) ∧ EmphasizesColorsShapesTextures(x)))"
    },
    {
        "NL": "It's not true that every animal that can jump is a kangaroo, and no such animal can fly.",
        "FOL": "¬∀x (Animal(x) ∧ CanJump(x) → Kangaroo(x)) ∧ ¬∃y (Animal(y) ∧ CanJump(y) ∧ CanFly(y))"
    },
    {
        "NL": "A spider is weaving a web.",
        "FOL": "∃x ∃y (Spider(x) ∧ Web(y) ∧ Weaving(x, y))"
    },
    {
        "NL": "A fossil fuel formed from the remains of ancient plants and animals trapped in rock layers is classified as coal.",
        "FOL": "∀x (FossilFuel(x) ∧ FormedFromAncientRemains(x) ∧ TrappedInRockLayers(x) → Coal(x))"
    },
    {
        "NL": "A volcano is active if it has erupted recently or is emitting gas and steam.",
        "FOL": "∀x (Volcano(x) ∧ (EruptedRecently(x) ∨ EmittingGasAndSteam(x)) → Active(x))"
    },
    {
        "NL": "A successful business strategy that focuses on customer satisfaction, efficient operations, and innovative product development can drive long-term growth.",
        "FOL": "∀x (BusinessStrategy(x) ∧ FocusesOnCustomerSatisfaction(x) ∧ EfficientOperations(x) ∧ InnovativeProductDevelopment(x) → DrivesLongTermGrowth(x))"
    },
    {
        "NL": "An athlete participates in a triathlon if they swim, bike, and run consecutively in a single event.",
        "FOL": "∀x∀y (Athlete(x) ∧ Triathlon(y) → ParticipatesIn(x, y) ↔ (Swims(x, y) ∧ Bikes(x, y) ∧ Runs(x, y) ∧ Consecutively(x)))"
    },
    {
        "NL": "A bird can fly and sing, or it cannot fly but can still sing.",
        "FOL": "∀x (Bird(x) → ((CanFly(x) ∧ CanSing(x)) ∨ (¬CanFly(x) ∧ CanSing(x))))"
    },
    {
        "NL": "A book is translated into a language if it is available in that language and has been adapted from its original version.",
        "FOL": "∀x ∀y (Book(x) ∧ Language(y) ∧ AvailableIn(x, y) ∧ AdaptedFromOriginal(x) → TranslatedInto(x, y))"
    },
    {
        "NL": "No child is happy if every toy is broken.",
        "FOL": "∀x (Toy(x) → Broken(x)) → ¬∃y (Child(y) ∧ Happy(y))"
    },
    {
        "NL": "Every chef who is skilled in Italian and French cuisine, unless they have been awarded a Michelin Star, has either been reviewed in leading food blogs or has not mentored culinary students.",
        "FOL": "∀x (Chef(x) ∧ SkilledInItalianCuisine(x) ∧ SkilledInFrenchCuisine(x) ∨ AwardedMichelinStar(x) → (ReviewedInLeadingFoodBlogs(x) ∨ ¬MentoredCulinaryStudents(x)))"
    },
    {
        "NL": "A tree that loses leaves in autumn is deciduous, while a tree that remains green all year is evergreen.",
        "FOL": "∀x (Tree(x) ∧ (LosesLeavesInAutumn(x) → Deciduous(x)) ∧ (RemainsGreenAllYear(x) → Evergreen(x)))"
    },
    {
        "NL": "Research institutions focus on scientific inquiry, technological advancements, and interdisciplinary collaborations to foster innovation and solve global challenges.",
        "FOL": "∀x (ResearchInstitution(x) → (FocusesOnScientificInquiry(x) ∧ FocusesOnTechnologicalAdvancements(x) ∧ PromotesInterdisciplinaryCollaborations(x) ∧ FostersInnovation(x) ∧ SolvesGlobalChallenges(x)))"
    },
    {
        "NL": "A beverage is alcoholic if it contains ethanol, which is produced through the fermentation of sugars by yeast.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) ∧ ProducedByFermentationOfSugars(x) ∧ InvolvesYeast(x) → Alcoholic(x))"
    },
    {
        "NL": "When a person is a professional athlete, they usually practice their sport for several hours a day.",
        "FOL": "∀x (Person(x) ∧ ProfessionalAthlete(x) → UsuallyPracticesForSeveralHoursADay(x))"
    },
    {
        "NL": "Some paintings are both landscapes and created with oil paint.",
        "FOL": "∃x (Painting(x) ∧ Landscape(x) ∧ CreatedWithOilPaint(x))"
    },
    {
        "NL": "A game is fun if and only if it has intricate levels and responsive controls, but it doesn't include many ads.",
        "FOL": "∀x (Game(x) → (Fun(x) ↔ (IntricateLevels(x) ∧ ResponsiveControls(x) ∧ ¬IncludeManyAds(x))))"
    },
    {
        "NL": "An employee is satisfied if and only if they are paid well and get holidays.",
        "FOL": "∀x (Employee(x) → (Satisfied(x) ↔ (PaidWell(x) ∧ GetHolidays(x))))"
    },
    {
        "NL": "A polymer is a large molecule composed of repeating structural units connected by covalent bonds.",
        "FOL": "∀x (Polymer(x) → (LargeMolecule(x) ∧ RepeatingStructuralUnits(x) ∧ ConnectedByCovalentBonds(x)))"
    },
    {
        "NL": "A vehicle with four wheels is either a car or a truck.",
        "FOL": "∀x (Vehicle(x) ∧ HasFourWheels(x) → (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "A car can drive on a road if the road is paved and the car has functioning wheels.",
        "FOL": "∀x∀y∀z (Car(x) ∧ Road(y) ∧ Wheels(z) ∧ Paved(y) ∧ Functioning(z) ∧ Has(x, z) → CanDriveOn(x, y))"
    },
    {
        "NL": "Animals with a thick fur coat are better adapted to survive in cold climates, providing insulation and warmth.",
        "FOL": "∀x ∀y (Animal(x) ∧ ThickFurCoat(f) ∧ ColdClimate(c) ∧ Insulation(i) ∧ Warmth(y) → BetterAdapted(x, f, c, i, y))"
    },
    {
        "NL": "A bird can fly because it has wings and lightweight bones.",
        "FOL": "∀x (Bird(x) ↔ (CanFly(x) ∧ HasWings(x) ∧ HasLightweightBones(x)))"
    },
    {
        "NL": "Employees work in different departments, such as marketing, finance, or human resources.",
        "FOL": "∀x (Employee(x) → (Department(x, marketing) ∨ Department(x, finance) ∨ Department(x, human_resources)))"
    },
    {
        "NL": "If a substance is solid at room temperature, it does not flow and has a fixed shape.",
        "FOL": "∀x (Substance(x) ∧ SolidAtRoomTemperature(x) ↔ (¬Flows(x) ∧ HasFixedShape(x)))"
    },
    {
        "NL": "A book is interesting if and only if it contains at least one adventurous story.",
        "FOL": "∀x (Interesting(x) ↔ ∃y (Adventure(y) ∧ Contains(x, y)))"
    },
    {
        "NL": "All birds are blue and can fly.",
        "FOL": "∀x (Bird(x) → (Blue(x) ∧ Fly(x)))"
    },
    {
        "NL": "A orchestra is presenting a symphony at an auditorium.",
        "FOL": "∃x ∃y ∃z (Orchestra(x) ∧ Symphony(y) ∧ Auditorium(z) ∧ PresentingAt(x, y, z))"
    },
    {
        "NL": "A painting can be awarded for best composition, best color use, or best originality, but not all three simultaneously",
        "FOL": "∀x (Painting(x) ∧ Awarded(x) → (BestCompositionAward(x) ⊕ BestColorUseAward(x) ⊕ BestOriginalityAward(x)))"
    },
    {
        "NL": "All dogs are either loyal or aggressive.",
        "FOL": "∀x (Dog(x) → (Loyal(x) ⊕ Aggressive(x)))"
    },
    {
        "NL": "A person is considered a biologist if they study living organisms and their relationships to their environments.",
        "FOL": "∀x (Person(x) ∧ StudiesLivingOrganisms(x) ∧ StudiesOrganismEnvironmentRelationships(x) → Biologist(x))"
    },
    {
        "NL": "An athlete claims victory if they run faster than the others.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Athlete(y) ∧ RunsFaster(x, y) → ClaimsVictory(x))"
    },
    {
        "NL": "There are planets where certain animals cannot survive.",
        "FOL": "∃x ∃y (Planet(x) ∧ Animal(y) ∧ ¬SurviveIn(y, x))"
    },
    {
        "NL": "A building is considered eco-friendly if it utilizes renewable energy sources and has green spaces, but it is not constructed from non-sustainable materials.",
        "FOL": "∀x (Building(x) ∧ EcoFriendly(x) ↔ (RenewableEnergy(x) ∧ GreenSpaces(x) ∧ ¬NonSustainableMaterials(x)))"
    },
    {
        "NL": "All animals that breathe air, live in water, and have fins are fish.",
        "FOL": "∀x ((Animal(x) ∧ BreathesAir(x) ∧ LivesInWater(x) ∧ HasFins(x)) → Fish(x))"
    },
    {
        "NL": "Antibiotics kill bacteria to treat infections.",
        "FOL": "∀x∀y∀z (Antibiotic(x) ∧ Bacteria(y) ∧ Infection(z) → (Kills(x, y) ∧ Treats(x, z)))"
    },
    {
        "NL": "An ice cream flavor is either fruity or chocolatey, but not both.",
        "FOL": "∀x (IceCreamFlavor(x) → (Fruity(x) ⊕ Chocolatey(x)))"
    },
    {
        "NL": "A mechanical device that converts energy from one form to another, typically from potential energy to kinetic energy, is known as a machine.",
        "FOL": "∀x (MechanicalDevice(x) ∧ ConvertsEnergy(x) ∧ PotentialEnergyToKineticEnergy(x) → Machine(x))"
    },
    {
        "NL": "No book is useful to read unless it is informative.",
        "FOL": "∀x (UsefulToRead(x) ↔ Informative(x))"
    },
    {
        "NL": "A restaurant serves pasta and pizza, but not both in the same dish.",
        "FOL": "∀x ∀y (Restaurant(x) ∧ Dish(y) → ((ServesPasta(x, y) ∨ ServesPizza(x, y)) ∧ ¬(ServesPasta(x, y) ∧ ServesPizza(x, y))))"
    },
    {
        "NL": "An exercise routine is effective if it improves physical fitness and enhances mental wellbeing.",
        "FOL": "∀x (ExerciseRoutine(x) → (Effective(x) ↔ (ImprovesPhysicalFitness(x) ∧ EnhancesMentalWellbeing(x))))"
    },
    {
        "NL": "Some athletes have competed in every sports event organized by a committee.",
        "FOL": "∃x (Athlete(x) ∧ ∃y (Committee(y) ∧ ∀z (SportsEvent(z) ∧ OrganizedBy(z, y) → CompetedIn(x, z))))"
    },
    {
        "NL": "A thing is a ball if and only if every object it rolls on is heavy.",
        "FOL": "∀x (Ball(x) ↔ ∀y (RollsOn(x, y) → Heavy(y)))"
    },
    {
        "NL": "An underwater ecosystem characterized by the presence of coral reefs, a diverse array of marine species, and warm, shallow waters is called a coral reef ecosystem.",
        "FOL": "∀x (UnderwaterEcosystem(x) ∧ CoralReefsPresent(x) ∧ DiverseMarineSpecies(x) ∧ WarmShallowWaters(x) → CoralReefEcosystem(x))"
    },
    {
        "NL": "A predator x hunts prey y if x has adaptations for capturing y and y is a suitable food source for x.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) ∧ HasAdaptationsForCapturing(x, y) ∧ SuitableFoodSource(y, x) → Hunts(x, y))"
    },
    {
        "NL": "In a zoo, carnivores eat meat, while herbivores consume plant-based food.",
        "FOL": "∀x ∀y ∀z (Zoo(z) ∧ Carnivore(x) ∧ Meat(m) → Eats(x, m, z)) ∧ (Herbivore(y) ∧ PlantBasedFood(p) → Consumes(y, p, z))"
    },
    {
        "NL": "A movie is engaging when it has a unique storyline, talented actors, or captivating visuals.",
        "FOL": "∀x (Movie(x) → (Engaging(x) ↔ (UniqueStoryline(x) ∨ TalentedActors(x) ∨ CaptivatingVisuals(x))))"
    },
    {
        "NL": "A dessert is sweet if it includes sugar or honey.",
        "FOL": "∀x (Dessert(x) ∧ (HasSugar(x) ∨ HasHoney(x)) → Sweet(x))"
    },
    {
        "NL": "A beverage is considered refreshing when it is cold, has a pleasant taste, and quenches thirst.",
        "FOL": "∀x∀y∀z (Beverage(x) ∧ Cold(x) ∧ PleasantTaste(x, y) ∧ QuenchesThirst(x, z) → Refreshing(x))"
    },
    {
        "NL": "A dog barks when it is excited or scared.",
        "FOL": "∀x (Dog(x) → ((Excited(x) ∨ Scared(x)) → Barks(x)))"
    },
    {
        "NL": "A key opens a lock when it matches the lock's internal mechanism.",
        "FOL": "∀x∀y (Key(x) ∧ Lock(y) → OpensWhenMatchesMechanism(x, y))"
    },
    {
        "NL": "Vaccines stimulate the immune system to produce a protective response.",
        "FOL": "∀x∀y (Vaccine(x) ∧ ImmuneSystem(y) → StimulateResponse(x, y))"
    },
    {
        "NL": "A solar eclipse happens when the moon passes between the sun and the Earth.",
        "FOL": "∀x (SolarEclipse(x) ↔ (MoonPassesBetween(x, sun, earth)))"
    },
    {
        "NL": "A pharmacist can prescribe some medicines, checks symptoms, and provides advice.",
        "FOL": "∀x ∃y (Pharmacist(x) → Medicine(y) ∧ Prescribes(x, y) ∧ ChecksSymptoms(x) ∧ ProvidesAdvice(x))"
    },
    {
        "NL": "A chef prepares meals in a restaurant's kitchen.",
        "FOL": "∀x ∀y (Chef(x) ∧ Restaurant(y) → PreparesMealsInKitchen(x, y))"
    },
    {
        "NL": "Hardworking students always study.",
        "FOL": "∀x (Student(x) ∧ Hardworking(x) → Study(x))"
    },
    {
        "NL": "A student will pass a course if they have a final grade above 60% and have attended at least 80% of the classes.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) ∧ FinalGradeAbove(x, y, 0.6) ∧ AttendanceAbove(x, y, 0.8) → Pass(x, y))"
    },
    {
        "NL": "A country that borders both China and Russia is Mongolia.",
        "FOL": "BordersChina(mongolia) ∧ BordersRussia(mongolia) ∧ Country(mongolia)"
    },
    {
        "NL": "Superstitions are not scientifically proven facts.",
        "FOL": "∀x (Superstition(x) → ¬Scientificallyprovenfact(x))"
    },
    {
        "NL": "A computer processes data when it has a functioning CPU and sufficient memory capacity.",
        "FOL": "∀x∀y∀z (Computer(x) ∧ Data(y) ∧ CPU(z) ∧ Functioning(z) ∧ SufficientMemoryCapacity(x) → Processes(x, y))"
    },
    {
        "NL": "A museum exhibits various artifacts, artwork, or historical items, and it may host educational programs, guided tours, or special events.",
        "FOL": "∀x (Museum(x) → ((ExhibitsArtifacts(x) ∨ ExhibitsArtwork(x) ∨ ExhibitsHistoricalItems(x)) ∧ (HostsEducationalPrograms(x) ∨ HostsGuidedTours(x) ∨ HostsSpecialEvents(x))))"
    },
    {
        "NL": "Plants that are green and healthy always need more sunlight.",
        "FOL": "∀x (Plant(x) ∧ Green(x) ∧ Healthy(x) → NeedMoreSunlight(x))"
    },
    {
        "NL": "Fruits are ripened when their color changes, their aroma becomes more intense, and they have a slightly soft texture.",
        "FOL": "∀x (Fruit(x) ∧ ColorChange(x) ∧ IntenseAroma(x) ∧ SlightlySoftTexture(x) → Ripened(x))"
    },
    {
        "NL": "Musicians play instruments to create music, and music evokes emotions in listeners.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Instrument(y) ∧ Music(z) ∧ Plays(x, y) ∧ Creates(x, z) → EvokesEmotion(z, w))"
    },
    {
        "NL": "There is no small triangle that isn't red.",
        "FOL": "¬∃y (Small(y) ∧ Triangle(y) ∧ ¬Red(y))"
    },
    {
        "NL": "A scientific theory must be testable, based on empirical evidence, and subject to revision or rejection upon new evidence.",
        "FOL": "∀x (ScientificTheory(x) → (Testable(x) ∧ BasedOnEmpiricalEvidence(x) ∧ SubjectToRevisionOrRejection(x)))"
    },
    {
        "NL": "If all humans are curious then there are some humans who cherish Isabella.",
        "FOL": "∀x (Human(x) → Curious(x)) → ∃x (Human(x) ∧ Cherish(x, isabella))"
    },
    {
        "NL": "A phone's battery drains quickly when the screen brightness is high and many apps are running.",
        "FOL": "∀x (Phone(x) ∧ HighScreenBrightness(x) ∧ ManyAppsRunning(x) → QuickBatteryDrain(x))"
    },
    {
        "NL": "If it is not daytime, then it is either dusk, night, or dawn.",
        "FOL": "¬Daytime(x) → (Dusk(x) ∨ Night(x) ∨ Dawn(x))"
    },
    {
        "NL": "A chef cooks meals, a waiter serves food, and a busser clears tables.",
        "FOL": "∀x ∀y ∀z ((Chef(x) ∧ CooksMeals(x)) ∧ (Waiter(y) ∧ ServesFood(y)) ∧ (Busser(z) ∧ ClearsTables(z)))"
    },
    {
        "NL": "A landscape is deemed mountainous if it features elevated terrain, steep slopes, and significant differences in elevation between adjacent areas.",
        "FOL": "∀x (Landscape(x) ∧ ElevatedTerrain(x) ∧ SteepSlopes(x) ∧ SignificantElevationDifferences(x) → Mountainous(x))"
    },
    {
        "NL": "A room is dark if there are no lights on.",
        "FOL": "∀x (Room(x) ∧ ¬LightsOn(x) → Dark(x))"
    },
    {
        "NL": "A song can be praised for best lyrics, best melody, or best rhythm, but not all three at the same time.",
        "FOL": "∀x (Song(x) ∧ Praised(x) → (BestLyricsPraise(x) ⊕ BestMelodyPraise(x) ⊕ BestRhythmPraise(x)))"
    },
    {
        "NL": "Every red object leads to a minimum of one black object that leads to solely white objects.",
        "FOL": "∀x (Red(x) → ∃y (Black(y) ∧ LeadsTo(x, y) ∧ ¬∃z (LeadsTo(y, z) ∧ ¬White(z))))"
    },
    {
        "NL": "A vegetarian does not eat meat but consumes dairy products, while a vegan avoids all animal-derived products.",
        "FOL": "∀x∀y (Vegetarian(x) ∧ Vegan(y) → (¬EatsMeat(x) ∧ ConsumesDairyProducts(x) ∧ ¬ConsumesAnimalDerivedProducts(y)))"
    },
    {
        "NL": "All birds lay eggs, but not all mammals lay eggs.",
        "FOL": "∀x (Bird(x) → LaysEggs(x)) ∧ ∃y (Mammal(y) ∧ ¬LaysEggs(y))"
    },
    {
        "NL": "If a person is a photographer, they take photographs.",
        "FOL": "∀x (Person(x) ∧ Photographer(x) → TakePhotographs(x))"
    },
    {
        "NL": "There is no teacher who teaches all chemistry classes.",
        "FOL": "¬∃x (Teacher(x) ∧ ∀y (Chemistry(y) ∧ Class(y) → Teaches(x, y)))"
    },
    {
        "NL": "A doctor treats patients, while a pharmacist dispenses medication.",
        "FOL": "∀x∀y (Doctor(x) ∧ Pharmacist(y) → (TreatsPatients(x) ∧ DispensesMedication(y)))"
    },
    {
        "NL": "Every entrepreneur who has guided protégés, all of whom have succeeded in business and shown recognition, either has received an entrepreneur of the year award or has been vouched for by all their partners.",
        "FOL": "∀x (Entrepreneur(x) ∧ ∀y (Protégé(y) ∧ Guided(x, y) ∧ SucceededBusiness(y) ∧ ShownRecognition(y, x)) → (ReceivedEntrepreneurOfYearAward(x) ∨ ∀z (Partner(z, x) → VouchedFor(z, x))))"
    },
    {
        "NL": "A student passes an exam if they study diligently, attend classes regularly, and submit assignments on time.",
        "FOL": "∀x (Student(x) ∧ StudyDiligently(x) ∧ AttendClasses(x) ∧ SubmitAssignments(x) → PassesExam(x))"
    },
    {
        "NL": "A tablet connects to the wifi and enables users to use various applications and tools.",
        "FOL": "∀x (Tablet(x) → (ConnectsToWifi(x) ∧ EnablesUseOfApplications(x) ∧ EnablesUseOfTools(x)))"
    },
    {
        "NL": "A scientist studies phenomena using tools.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Phenomenon(y) ∧ Tool(z) → StudiesUsing(x, y, z))"
    },
    {
        "NL": "All cats aren't playful.",
        "FOL": "¬∀x (Cat(x) → Playful(x))"
    },
    {
        "NL": "A spider has eight legs and can weave a web, while an ant does not have eight legs and cannot weave a web.",
        "FOL": "∀x (Spider(x) → HasEightLegs(x) ∧ CanWeaveWeb(x)) ∧ ∀y (Ant(y) → ¬HasEightLegs(y) ∧ ¬CanWeaveWeb(y))"
    },
    {
        "NL": "Every entity that is either a fast cheetah or a slow tortoise lives in a place that is either hot or cold.",
        "FOL": "∀x ((Fast(x) ∧ Cheetah(x)) ∨ (Slow(x) ∧ Tortoise(x)) → ∃y (Hot(y) ∨ Cold(y) ∧ LivesIn(x, y)))"
    },
    {
        "NL": "A car is luxurious if it provides a comfortable ride, high speed, and has leather interior or cutting-edge technology.",
        "FOL": "∀x (Car(x) ∧ ProvidesComfortableRide(x) ∧ HighSpeed(x) ∧ (LeatherInterior(x) ∨ CuttingEdgeTechnology(x)) → Luxurious(x))"
    },
    {
        "NL": "A job is fulfilling if it promotes creativity and offers a work-life balance.",
        "FOL": "∀x (Job(x) ∧ (PromotesCreativity(x) ∧ WorkLifeBalance(x)) → Fulfilling(x))"
    },
    {
        "NL": "An object designed to hold liquid, has a handle, and is used for drinking is a mug or a cup.",
        "FOL": "∀x (Object(x) ∧ DesignedToHoldLiquid(x) ∧ HasHandle(x) ∧ UsedForDrinking(x) → (Mug(x) ∨ Cup(x)))"
    },
    {
        "NL": "A laptop runs software and stores data, while a printer produces hard copies of documents.",
        "FOL": "∀x (Laptop(x) ∧ (RunsSoftware(x) ∧ StoresData(x)) ∧ Printer(x) ∧ ProducesHardCopies(x))"
    },
    {
        "NL": "There is a bird in the sky with a long feather.",
        "FOL": "∃x (Bird(x) ∧ InSky(x) ∧ WithLongFeather(x))"
    },
    {
        "NL": "A novel is a romance if it showcases an engaging love story, written by the individuals in love.",
        "FOL": "∀x ∃y (Novel(x) ∧ Individual(y) ∧ ShowcasesLoveStory(x, y) ∧ WrittenBy(x, y) → Romance(x))"
    },
    {
        "NL": "If a movie is a blockbuster, it is either an action film or a science fiction film.",
        "FOL": "∀x (Movie(x) ∧ Blockbuster(x) → ActionFilm(x) ∨ ScienceFictionFilm(x))"
    },
    {
        "NL": "A computer network is secure if it employs encryption, authentication, and access control measures to protect data and prevent unauthorized access.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ Encryption(y) ∧ AuthenticationAndAccessControl(z) ∧ ProtectsData(x, y) ∧ PreventsUnauthorizedAccess(x, z) → SecureNetwork(x))"
    },
    {
        "NL": "Trees with flowers that emit a pleasant scent attract pollinators.",
        "FOL": "∀x∀y (Tree(x) ∧ Flower(y) ∧ OnTree(y, x) ∧ PleasantScent(y) → AttractsPollinators(x))"
    },
    {
        "NL": "A dessert can be ice cream or cake, but not both.",
        "FOL": "∀x (Dessert(x) → (IceCream(x) ⊕ Cake(x)))"
    },
    {
        "NL": "An event is successful if it attracts a large audience, generates revenue, or both, and leaves a lasting impression.",
        "FOL": "∀x (Event(x) → (Successful(x) ↔ ((LargeAudience(x) ∨ GeneratesRevenue(x)) ∧ LastingImpression(x))))"
    },
    {
        "NL": "A bakery sells baked goods like bread, cakes, and cookies.",
        "FOL": "∀x (Bakery(x) → Sells(x, y) ∧ (Bread(y) ∨ Cake(y) ∨ Cookie(y)))"
    },
    {
        "NL": "A wind turbine generates electricity by converting kinetic energy from wind into electrical power.",
        "FOL": "∀x (WindTurbine(x) → (GeneratesElectricity(x) ∧ ConvertsKineticEnergyFromWind(x) ∧ ProducesElectricalPower(x)))"
    },
    {
        "NL": "A meteorite impact on a planet can cause significant environmental changes, such as altering the climate or causing the extinction of species.",
        "FOL": "∀x∀y (MeteoriteImpact(x) ∧ Planet(y) ∧ ImpactOn(x, y) → (AltersClimate(y) ∨ CausesExtinctionOfSpecies(y)))"
    },
    {
        "NL": "An entity is characterized as a furniture if it furnishes a space and is compiled from substances such as wood, fabric, or leather.",
        "FOL": "∀x (Entity(x) ∧ FurnishesSpace(x) ∧ (CompiledFromWood(x) ∨ CompiledFromFabric(x) ∨ CompiledFromLeather(x)) → Furniture(x))"
    },
    {
        "NL": "A cell is identified as a eukaryote if it contains membrane-bound organelles, a nucleus with linear DNA, and undergoes mitosis for cell division.",
        "FOL": "∀x (Cell(x) ∧ MembraneBoundOrganelles(x) ∧ NucleusWithLinearDNA(x) ∧ UndergoesMitosis(x) → Eukaryote(x))"
    },
    {
        "NL": "A gadget requires charging if its battery level is low.",
        "FOL": "∀x (Gadget(x) ∧ RequiresCharging(x) ↔ LowBatteryLevel(x))"
    },
    {
        "NL": "A painting is considered abstract if it does not depict a recognizable object or scene and emphasizes colors, shapes, or textures.",
        "FOL": "∀x (Painting(x) ∧ ¬DepictsRecognizableObjectOrScene(x) ∧ (EmphasizesColors(x) ∨ EmphasizesShapes(x) ∨ EmphasizesTextures(x)) → Abstract(x))"
    },
    {
        "NL": "Birds migrate to warmer climates when the temperature drops in their original habitat.",
        "FOL": "∀x ∀y (Bird(x) ∧ TemperatureDrop(y) ∧ OriginalHabitat(x, y) → MigrateToWarmerClimate(x))"
    },
    {
        "NL": "A plant is considered a flower if it has reproductive organs and is typically surrounded by colorful petals.",
        "FOL": "∀x (Plant(x) ∧ HasReproductiveOrgans(x) ∧ SurroundedByColorfulPetals(x) → Flower(x))"
    },
    {
        "NL": "Dogs wag their tails when they are happy or excited, and cats purr when they are content or comfortable.",
        "FOL": "∀x∀y (Dog(x) ∧ Cat(y) → ((Happy(x) ∨ Excited(x)) → WagsTail(x)) ∧ ((Content(y) ∨ Comfortable(y)) → Purrs(y)))"
    },
    {
        "NL": "A room is considered well-lit if it has natural light, sufficient artificial light, and no areas of excessive darkness.",
        "FOL": "∀x (Room(x) ∧ WellLit(x) ↔ (NaturalLight(x) ∧ SufficientArtificialLight(x) ∧ ¬ExcessiveDarkness(x)))"
    },
    {
        "NL": "Solar panels convert sunlight into electricity, which can be used to power homes and other buildings.",
        "FOL": "∀x∀y∀z (SolarPanel(x) ∧ Sunlight(y) ∧ (Home(z) ∨ Building(z)) → (ConvertsSunlightToElectricity(x, y) ∧ Powers(x, z)))"
    },
    {
        "NL": "A tool can be manual, electric, or pneumatic, and can be used for cutting, drilling, or fastening.",
        "FOL": "∀x∀y∀z (Tool(x) ∧ ((Manual(x, y) ∨ Electric(x, y) ∨ Pneumatic(x, z)) ∧ (UsedForCutting(x, z) ∨ UsedForDrilling(x, z) ∨ UsedForFastening(x, z))))"
    },
    {
        "NL": "Plants with green leaves perform photosynthesis during daylight hours.",
        "FOL": "∀x (Plant(x) ∧ HasGreenLeaves(x) → PerformsPhotosynthesisDuringDaylight(x))"
    },
    {
        "NL": "In a supermarket, customers buy groceries, such as fruits, vegetables, and dairy products.",
        "FOL": "∀x ∀y ∀z (Supermarket(x) ∧ Customer(y) ∧ (Fruit(z) ∨ Vegetable(z) ∨ DairyProduct(z)) → Buys(y, x, z))"
    },
    {
        "NL": "Books can be categorized as fiction when they tell invented stories, while non-fiction books present factual information or real events.",
        "FOL": "∀x (Book(x) → ((InventedStories(x) → Fiction(x)) ∧ (FactualInformationOrRealEvents(x) → NonFiction(x))))"
    },
    {
        "NL": "A bicycle has two wheels and can be ridden on various terrains.",
        "FOL": "∀x (Bicycle(x) → ((∃y∃z (Wheel(x, y) ∧ Wheel(x, z))) ∧ (∃w Terrain(x, w))))"
    },
    {
        "NL": "All items are either gifts or toys.",
        "FOL": "∀x (Item(x) ∧ (Gift(x) ⊕ Toy(x)))"
    },
    {
        "NL": "Paintings can be created using various techniques, such as oil, acrylic, or watercolor, and displayed in galleries or museums.",
        "FOL": "∀x (Painting(x) → (∃y Technique(y) ∧ CreatedWith(x, y)) ∧ (DisplayedInGallery(x) ∨ DisplayedInMuseum(x)))"
    },
    {
        "NL": "A drink is spicy if it contains pepper or chilli as an ingredient.",
        "FOL": "∀x (Drink(x) ∧ (ContainsPepper(x) ∨ ContainsChilli(x)) → Spicy(x))"
    },
    {
        "NL": "Cats and toddlers annoy Mrs. Brown.",
        "FOL": "∀x ((Cat(x) ∨ Toddlers(x)) → Annoy(x, mrsbrown))"
    },
    {
        "NL": "A book becomes a bestseller if it receives positive reviews, generates word-of-mouth buzz, and has a compelling plot, but not if the writing style is convoluted.",
        "FOL": "∀x (Book(x) ∧ Bestseller(x) ↔ (PositiveReviews(x) ∧ WordOfMouthBuzz(x) ∧ CompellingPlot(x) ∧ ¬ConvolutedWritingStyle(x)))"
    },
    {
        "NL": "It can't be said that all cars are fast only if they are sports cars.",
        "FOL": "¬∀x (Car(x) ∧ Fast(x) → SportsCar(x))"
    },
    {
        "NL": "A snake is venomous if it has fangs and its bite injects toxins.",
        "FOL": "∀x (Snake(x) → (Venomous(x) ↔ (HasFangs(x) ∧ BiteInjectsToxins(x))))"
    },
    {
        "NL": "Wind is the result of air moving from areas of high pressure to areas of low pressure.",
        "FOL": "∀x∀y (Wind(x) ∧ HighPressureArea(y) ∧ LowPressureArea(z) → AirMovesFromTo(x, y, z))"
    },
    {
        "NL": "An art piece x is created by an artist y if y uses various techniques and materials to produce x, expressing their ideas, emotions, or concepts.",
        "FOL": "∀x ∀y (ArtPiece(x) ∧ Artist(y) ∧ UsesTechniquesAndMaterials(y) ∧ Produces(x, y) ∧ ExpressesIdeasOrEmotionsOrConcepts(y) → CreatedBy(x, y))"
    },
    {
        "NL": "Birds disperse seeds.",
        "FOL": "∀x ∀y (Bird(x) ∧ Seed(y) → Disperse(x, y))"
    },
    {
        "NL": "A carnivorous plant attracts, captures, and digests insects for nutrients.",
        "FOL": "∀x∀y∀z (CarnivorousPlant(x) ∧ Insect(y) ∧ Nutrient(z) → (Attracts(x, y) ∧ Captures(x, y) ∧ DigestsForNutrients(x, y, z)))"
    },
    {
        "NL": "A recipe is vegan if it contains no animal products, such as meat, dairy, or eggs.",
        "FOL": "∀x (Recipe(x) ∧ ¬∃y (AnimalProduct(y) ∧ (Meat(y) ∨ Dairy(y) ∨ Eggs(y)) ∧ Contains(x, y)) → Vegan(x))"
    },
    {
        "NL": "All chefs are skillful or some dogs are black if and only if there exists a meal which is delicious unless there are no anxieties.",
        "FOL": "(∀x (Chef(x) → Skillful(x)) ∨ ∃y (Dog(y) ∧ Black(y))) ↔ (∃z (Meal(z) ∧ (Delicious(z) ∨ ∀w (¬Anxiety(w)))))"
    },
    {
        "NL": "A mathematical theorem is proven if it can be derived from axioms or previously proven theorems using valid inference rules.",
        "FOL": "∀x (Theorem(x) ∧ (∃y (Axiom(y) ∧ DerivedFrom(x, y)) ∨ ∃z (ProvenTheorem(z) ∧ DerivedFrom(x, z))) → Proven(x))"
    },
    {
        "NL": "Cats are curious and hunt small prey, but they are not herbivorous.",
        "FOL": "∀x (Cat(x) → (Curious(x) ∧ HuntsSmallPrey(x) ∧ ¬Herbivorous(x)))"
    },
    {
        "NL": "A person is considered bilingual if they can fluently speak and understand two languages.",
        "FOL": "∀x (Person(x) ∧ FluentInTwoLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "A person is considered a nutritionist if they advise clients on dietary choices and create meal plans to improve health and well-being.",
        "FOL": "∀x (Person(x) ∧ AdvisesOnDietaryChoices(x) ∧ CreatesMealPlans(x) → Nutritionist(x))"
    },
    {
        "NL": "Musicians play instruments in a band or an orchestra.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Instrument(y) ∧ (Band(z) ∨ Orchestra(z)) → PlaysIn(x, y, z))"
    },
    {
        "NL": "Some universities offer online courses and have renowned professors, but not all of them provide scholarships or require standardized test scores for admission.",
        "FOL": "∃x (University(x) ∧ Offers(x, OnlineCourses) ∧ RenownedProfessors(x) ∧ ¬(Provides(x, Scholarships) ∨ Requires(x, StandardizedTestScores)))"
    },
    {
        "NL": "Trees absorb carbon dioxide and release oxygen through photosynthesis.",
        "FOL": "∀x∀y∀z (Tree(x) ∧ CarbonDioxide(y) ∧ Oxygen(z) → (Absorbs(x, y) ∧ Releases(x, z) ∧ ThroughPhotosynthesis(x)))"
    },
    {
        "NL": "Robert is a lawyer and Emily is a pilot.",
        "FOL": "Lawyer(robert) ∧ Pilot(emily)"
    },
    {
        "NL": "A building with modern architecture and energy-efficient features or solar panels is eco-friendly.",
        "FOL": "∀x (Building(x) ∧ ModernArchitecture(x) ∧ (EnergyEfficientFeatures(x) ∨ SolarPanels(x)) → EcoFriendly(x))"
    },
    {
        "NL": "If a vehicle is part of a race, it is a car, motorcycle, or bicycle.",
        "FOL": "∀x (Vehicle(x) ∧ PartOfRace(x) → Car(x) ∨ Motorcycle(x) ∨ Bicycle(x))"
    },
    {
        "NL": "In a museum, visitors can observe exhibits displaying historical artifacts and artwork.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Visitor(y) ∧ (HistoricalArtifact(z) ∨ Artwork(z)) → ObservesExhibit(y, x, z))"
    },
    {
        "NL": "Some books are written in English, while others are written in Spanish.",
        "FOL": "∀x (Book(x) → WrittenInEnglish(x) ⊕ WrittenInSpanish(x))"
    },
    {
        "NL": "A dish is cuisine if and only if it is flavorful or nutritionally balanced.",
        "FOL": "∀x (Dish(x) → (Cuisine(x) ↔ (Flavorful(x) ∨ NutritionallyBalanced(x))))"
    },
    {
        "NL": "All musicians who are proficient in classical and jazz music, unless they have won a Grammy Award, have either performed in renowned music concerts or have not trained emerging artists.",
        "FOL": "∀x (Musician(x) ∧ ProficientInClassicalMusic(x) ∧ ProficientInJazzMusic(x) ∨ WonGrammyAward(x) → (PerformedInRenownedMusicConcerts(x) ∨ ¬TrainedEmergingArtists(x)))"
    },
    {
        "NL": "A television series is considered binge-worthy if it has an addictive plot or a strong fan base, but not if it also has inconsistent quality.",
        "FOL": "∀x (BingeWorthy(x) ↔ (TelevisionSeries(x) ∧ (((∃y (Addictive(y) ∧ Plot(y) ∧ InSeries(x, y))) ∨ ∃z (Strong(z) ∧ FanBase(z) ∧ ForSeries(x, z))) ∧ ¬∃w (Inconsistent(w) ∧ Quality(w) ∧ InSeries(x, w)))))"
    },
    {
        "NL": "Every green item is cubical unless it is light.",
        "FOL": "∀x (Green(x) → (¬Light(x) → Cubical(x)))"
    },
    {
        "NL": "Chickens are omnivores and eat during the day, while raccoons are nocturnal and eat at night.",
        "FOL": "∀x (Chicken(x) → (Omnivore(x) ∧ EatsDuringDay(x))) ∧ ∀y (Raccoon(y) → (Nocturnal(y) ∧ EatsAtNight(y)))"
    },
    {
        "NL": "A student studies or sleeps.",
        "FOL": "∀x (Student(x) → (Studies(x) ∨ Sleeps(x)))"
    },
    {
        "NL": "If Lucas is not a dentist then Chloe is a painter.",
        "FOL": "¬Dentist(lucas) → Painter(chloe)"
    },
    {
        "NL": "No student is both a freshman and a senior.",
        "FOL": "¬∃x (Student(x) ∧ Freshman(x) ∧ Senior(x))"
    },
    {
        "NL": "Insects have six legs and a body divided into three main parts: the head, thorax, and abdomen.",
        "FOL": "∀x (Insect(x) → (HasLegs(x, 6) ∧ BodyParts(x, Head) ∧ BodyParts(x, Thorax) ∧ BodyParts(x, Abdomen)))"
    },
    {
        "NL": "A doctor who treats a patient will be treated by a specialist.",
        "FOL": "∀x ∃y (Doctor(x) ∧ Patient(y) ∧ Treat(x, y) → ∃z (Specialist(z) ∧ WillTreat(z, x)))"
    },
    {
        "NL": "If a person is a software developer, they must design, write, test, and maintain computer programs and applications to solve problems and perform tasks.",
        "FOL": "∀x (SoftwareDeveloper(x) → (DesignsWritesTestsAndMaintainsComputerProgramsAndApplications(x) ∧ ToSolveProblemsAndPerformTasks(x)))"
    },
    {
        "NL": "A trip can be short, medium, or long.",
        "FOL": "∀x (Trip(x) → Short(x) ∨ Medium(x) ∨ Long(x))"
    },
    {
        "NL": "A writer composes stories, essays, or poems on paper or digitally.",
        "FOL": "∀x∀y∀z (Writer(x) ∧ (Story(y) ∨ Essay(y) ∨ Poem(y)) ∧ (Paper(z) ∨ Digital(z)) → ComposesOn(x, y, z))"
    },
    {
        "NL": "Cats can climb trees, while dogs can dig holes.",
        "FOL": "∀x (Cat(x) → CanClimbTrees(x)) ∧ ∀y (Dog(y) → CanDigHoles(y))"
    },
    {
        "NL": "A person is tall or short, but not both.",
        "FOL": "∀x (Person(x) → (Tall(x) ⊕ Short(x)))"
    },
    {
        "NL": "All chefs who are passionate and skilled are successful.",
        "FOL": "∀x (Chef(x) ∧ Passionate(x) ∧ Skilled(x) → Successful(x))"
    },
    {
        "NL": "All engineers have tested every part of a machine.",
        "FOL": "∀x (Engineer(x) ∧ ∃y (Machine(y) ∧ ∀z (Part(z) ∧ OfMachine(z, y) → Tested(x, z))))"
    },
    {
        "NL": "People in high-income group pay more tax, while those in the low-income group pay less tax.",
        "FOL": "∀x (Person(x) ∧ HighIncome(x) → PaysMoreTax(x)) ∧ ∀y (Person(y) ∧ LowIncome(y) → PaysLessTax(y))"
    },
    {
        "NL": "A vehicle is deemed a sports car if it can drive at high speeds, has a spoiler, or a sporty look.",
        "FOL": "∀x (Vehicle(x) ∧ DrivesAtHighSpeed(x) ∨ HasSpoiler(x) ∨ SportyLook(x) → SportsCar(x))"
    },
    {
        "NL": "Fridges are used for preserving food.",
        "FOL": "∀x (Fridge(x) → PreservesFood(x))"
    },
    {
        "NL": "Not every lake in Asia is deeper than every lake in Africa.",
        "FOL": "¬∀x ∀y (Lake(x) ∧ In(x, asia) ∧ Lake(y) ∧ In(y, africa) → Deeper(x, y))"
    },
    {
        "NL": "In a basketball game, a player can score points by making a two-point field goal, a three-point field goal, or a free throw, but not by more than one method at the same time.",
        "FOL": "∀x ∀y (BasketballGame(x) ∧ Player(y) → (TwoPointFieldGoal(y, x) ⊕ ThreePointFieldGoal(y, x) ⊕ FreeThrow(y, x)))"
    },
    {
        "NL": "Tulips are pink, a lavender is purple, and daisies are white.",
        "FOL": "∀x (Tulip(x) → Pink(x)) ∧ ∀y (Lavender(y) → Purple(y)) ∧ ∀z (Daisy(z) → White(z))"
    },
    {
        "NL": "All humans breathe air.",
        "FOL": "∀x (Human(x) → BreatheAir(x))"
    },
    {
        "NL": "A restaurant is vegan and has outdoor seating.",
        "FOL": "∃x (Restaurant(x) ∧ Vegan(x) ∧ OutdoorSeating(x))"
    },
    {
        "NL": "There is no country all citizens have visited if and only if there is a country none of the citizens have visited.",
        "FOL": "¬∃x (Country(x) ∧ ∀y (Citizen(y) → HasVisited(y, x))) ↔ ∃z (Country(z) ∧ ∀w (Citizen(w) → ¬HasVisited(z, w)))"
    },
    {
        "NL": "Different types of clouds, such as cumulus and stratus, can indicate varying weather conditions, including sunny skies or overcast days.",
        "FOL": "∀x ∀y (Cloud(x) ∧ (Cumulus(x) ∨ Stratus(x)) ∧ WeatherCondition(y) → (Indicates(x, y) ∧ (SunnySkies(y) ∨ OvercastDays(y))))"
    },
    {
        "NL": "A scientist may be a physicist or a chemist, but not both.",
        "FOL": "∃x (Scientist(x) ∧ (Physicist(x) ⊕ Chemist(x)))"
    },
    {
        "NL": "Isabella is a veterinarian, Michael is a pilot, and Grace is a nurse.",
        "FOL": "Veterinarian(isabella) ∧ Pilot(michael) ∧ Nurse(grace)"
    },
    {
        "NL": "A person is considered an athlete if they participate in competitive sports and maintain a high level of physical fitness.",
        "FOL": "∀x (Person(x) ∧ ParticipatesInCompetitiveSports(x) ∧ HighLevelOfPhysicalFitness(x) → Athlete(x))"
    },
    {
        "NL": "Not every student will pass only if they study diligently.",
        "FOL": "¬∀x (Student(x) ∧ Pass(x) → StudyDiligently(x))"
    },
    {
        "NL": "During photosynthesis, plants convert carbon dioxide and sunlight into oxygen and glucose.",
        "FOL": "∀x∀y∀z (Photosynthesis(x) ∧ Plant(y) ∧ CarbonDioxide(z) → (Converts(y, z, x) ∧ Sunlight(x) ∧ Produces(y, Oxygen, Glucose)))"
    },
    {
        "NL": "Chefs prepare meals, while bakers bake pastries.",
        "FOL": "∀x ∀y (Chef(x) ∧ Meal(y) → Prepares(x, y)) ∧ ∀z ∀w (Baker(z) ∧ Pastry(w) → Bakes(z, w))"
    },
    {
        "NL": "Lions are carnivorous and hunt for food, while koalas are herbivorous and eat eucalyptus leaves.",
        "FOL": "∀x (Lion(x) → (Carnivorous(x) ∧ HuntForFood(x))) ∧ ∀y (Koala(y) → (Herbivorous(y) ∧ EatEucalyptusLeaves(y)))"
    },
    {
        "NL": "A musical instrument that uses strings and is not a guitar can be a violin or a cello.",
        "FOL": "∀x (MusicalInstrument(x) ∧ UsesStrings(x) ∧ ¬Guitar(x) → Violin(x) ∨ Cello(x))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight, compact, and has a long-lasting battery life.",
        "FOL": "∀x (ElectronicDevice(x) → (Lightweight(x) ∧ Compact(x) ∧ LongLastingBatteryLife(x) → Portable(x)))"
    },
    {
        "NL": "A vehicle is classified as a car if it has four wheels and runs on land, whereas a boat does not have wheels and does not run on land.",
        "FOL": "∀x (Vehicle(x) → (Car(x) → HasFourWheels(x) ∧ RunsOnLand(x))) ∧ ∀y (Boat(y) → ¬HasFourWheels(y) ∧ ¬RunsOnLand(y))"
    },
    {
        "NL": "All engineers are trained, but not all trained individuals are engineers.",
        "FOL": "∀x (Engineer(x) → Trained(x)) ∧ ¬∀x (Trained(x) → Engineer(x))"
    },
    {
        "NL": "Cities with high population density often experience traffic congestion and limited parking availability.",
        "FOL": "∀x (City(x) ∧ HighPopulationDensity(x) → (TrafficCongestion(x) ∧ LimitedParking(x)))"
    },
    {
        "NL": "A gardener cultivates plants in a garden to enhance the appearance of the landscape and promote healthy growth.",
        "FOL": "∀x∀y (Gardener(x) ∧ Garden(y) → (CultivatesPlants(x, y) ∧ EnhanceAppearance(y) ∧ PromoteHealthyGrowth(y)))"
    },
    {
        "NL": "A healthy diet consists of fruits, vegetables, and grains, but not excessive sugar.",
        "FOL": "∀x (HealthyDiet(x) ↔ (ContainsFruits(x) ∧ ContainsVegetables(x) ∧ ContainsGrains(x) ∧ ¬ExcessiveSugar(x)))"
    },
    {
        "NL": "None of the dogs can fly.",
        "FOL": "¬∃y (Dog(y) ∧ CanFly(y))"
    },
    {
        "NL": "An invention is patented when its inventor submits a successful application and meets the legal requirements for protection.",
        "FOL": "∀x ∀y (Invention(x) ∧ Inventor(y) ∧ SubmitsSuccessfulApplication(y, x) ∧ MeetsLegalRequirements(y, x) → Patented(x))"
    },
    {
        "NL": "A substance is a gas if it has no fixed shape or volume and can expand to fill its container.",
        "FOL": "∀x (Substance(x) ∧ NoFixedShape(x) ∧ NoFixedVolume(x) ∧ CanExpandToFillContainer(x) → Gas(x))"
    },
    {
        "NL": "A computer program is secure when it is resistant to unauthorized access, has strong encryption, and has been thoroughly tested for vulnerabilities.",
        "FOL": "∀x ∀y ∀z (ComputerProgram(x) ∧ ResistantToUnauthorizedAccess(x, y) ∧ StrongEncryption(x, z) ∧ ThoroughlyTestedForVulnerabilities(x) → Secure(x))"
    },
    {
        "NL": "Not every bird in America is faster than every bird in Australia.",
        "FOL": "¬∀x ∀y (Bird(x) ∧ In(x, America) ∧ Bird(y) ∧ In(y, Australia) → Faster(x, y))"
    },
    {
        "NL": "A person is considered a collector if they acquire and keep a variety of items related to a specific interest.",
        "FOL": "∀x (AcquiresAndKeepsVarietyOfItemsRelatedToSpecificInterest(x) → Collector(x))"
    },
    {
        "NL": "A vehicle is a car or truck.",
        "FOL": "∀x (Vehicle(x) → Car(x) ∨ Truck(x))"
    },
    {
        "NL": "An individual can be a vegetarian if they do not eat meat or fish.",
        "FOL": "∀x (¬(EatsMeat(x) ∨ EatsFish(x)) → Vegetarian(x))"
    },
    {
        "NL": "If a plant needs sunlight, water, and carbon dioxide, it undergoes photosynthesis.",
        "FOL": "∀x (Plant(x) ∧ NeedsSunlight(x) ∧ NeedsWater(x) ∧ NeedsCarbonDioxide(x) → UndergoesPhotosynthesis(x))"
    },
    {
        "NL": "A cat is black if and only if it is not little, and it associates with a white or silver object.",
        "FOL": "∀x (Cat(x) → ((Black(x) ↔ ¬Little(x)) ∧ ∃y (AssociatesWith(x, y) → (White(y) ∨ Silver(y)))))"
    },
    {
        "NL": "A ship with sails moved by the wind is a sailing vessel.",
        "FOL": "∀x (Ship(x) ∧ HasSails(x) ∧ MovedByWind(x) → SailingVessel(x))"
    },
    {
        "NL": "An individual who is skilled in conflict resolution is more likely to foster a positive and harmonious environment.",
        "FOL": "∀x (SkilledInConflictResolution(x) → FosterPositiveAndHarmoniousEnvironment(x))"
    },
    {
        "NL": "A bird can be a predator or a prey, but not both.",
        "FOL": "∀x (Bird(x) → ((Predator(x) ⊕ Prey(x))))"
    },
    {
        "NL": "A smartphone is a handheld electronic device that combines the functions of a mobile phone, camera, and computer, enabling users to communicate, access the internet, and use various applications.",
        "FOL": "∀x (Smartphone(x) ↔ (HandheldElectronicDevice(x) ∧ CombinesMobilePhoneFunction(x) ∧ CombinesCameraFunction(x) ∧ CombinesComputerFunction(x) ∧ EnablesCommunication(x) ∧ AccessInternet(x) ∧ UseVariousApplications(x)))"
    },
    {
        "NL": "A supermarket sells groceries and household items to shoppers.",
        "FOL": "∀x∀y (Supermarket(x) ∧ Shopper(y) → (SellsGroceries(x, y) ∧ SellsHouseholdItems(x, y)))"
    },
    {
        "NL": "A type of cleaning tool can be either a broom or a mop.",
        "FOL": "∀x (CleaningToolType(x) → Broom(x) ⊕ Mop(x))"
    },
    {
        "NL": "Certain artists either paint landscapes or portraits, but do not paint both.",
        "FOL": "∃x (Artist(x) ∧ (PaintLandscape(x) ⊕ PaintPortrait(x)))"
    },
    {
        "NL": "A dog barks while a cat meows.",
        "FOL": "∃x ∃y (Dog(x) ∧ Barks(x) ∧ Cat(y) ∧ Meows(y))"
    },
    {
        "NL": "A vehicle with four wheels, a combustion engine, and designed for transportation on roads is an automobile.",
        "FOL": "∀x∀y∀z∀w (Vehicle(x) ∧ FourWheels(x, y) ∧ CombustionEngine(x, z) ∧ DesignedForRoadTransportation(x, w) → Automobile(x))"
    },
    {
        "NL": "A medical procedure that involves using a hollow needle to extract fluid, often for diagnostic purposes, is known as aspiration.",
        "FOL": "∀x (MedicalProcedure(x) ∧ UtilizesHollowNeedle(x) ∧ ExtractsFluid(x) ∧ OftenForDiagnosticPurposes(x) → Aspiration(x))"
    },
    {
        "NL": "An event is enjoyable if the music is pleasant, the atmosphere is lively, and it doesn't get too crowded.",
        "FOL": "∀x (Event(x) → (Enjoyable(x) ↔ (PleasantMusic(x) ∧ LivelyAtmosphere(x) ∧ ¬TooCrowded(x))))"
    },
    {
        "NL": "Every horse runs a race if no cube is a three-dimensional object.",
        "FOL": "¬∀x (Cube(x) → ThreeDimensional(x)) → ∀y (Horse(y) → ∃z (Race(z) ∧ Runs(y, z)))"
    },
    {
        "NL": "A house has windows and a door.",
        "FOL": "∀x (House(x) → (∃y ∃z (Windows(y) ∧ Door(z) ∧ Has(x, y) ∧ Has(x, z))))"
    },
    {
        "NL": "A substance is flammable if it can ignite and burn rapidly in the presence of heat.",
        "FOL": "∀x ∀y (Substance(x) ∧ Heat(y) ∧ CanIgnite(x, y) ∧ BurnRapidly(x, y) → Flammable(x))"
    },
    {
        "NL": "A mountain forms from tectonic forces, has an elevation, and can be climbed.",
        "FOL": "∀x (Mountain(x) → (FormsFromTectonicForces(x) ∧ HasElevation(x) ∧ CanBeClimbed(x)))"
    },
    {
        "NL": "If all flowers aren't colorful, there's a field that each field links to.",
        "FOL": "¬∀x (Flower(x) → Colorful(x)) → ∃y (Field(y) ∧ ∀z (Field(z) → ConnectsTo(z, y)))"
    },
    {
        "NL": "In a competition, if a participant achieves the highest score, they win the first prize, while the participant with the second-highest score wins the second prize.",
        "FOL": "∀x ∀y ∀z (Participant(x) ∧ Participant(y) ∧ Competition(z) ∧ InCompetition(x, z) ∧ InCompetition(y, z) → ((HighestScore(x, z) → WinsPrize(x, first)) ∧ (SecondHighestScore(y, z) → WinsPrize(y, second))))"
    },
    {
        "NL": "An animal is considered domesticated if it is kept as a pet or used for agricultural purposes.",
        "FOL": "∀x (Animal(x) → (Domesticated(x) ↔ (Pet(x) ∨ AgriculturalPurpose(x))))"
    },
    {
        "NL": "A plant is considered a succulent if it has thick, fleshy leaves or stems that store water.",
        "FOL": "∀x (Plant(x) ∧ ThickFleshyLeavesOrStems(x) ∧ StoresWater(x) → Succulent(x))"
    },
    {
        "NL": "John is a teacher or a mechanic.",
        "FOL": "Teacher(john) ∨ Mechanic(john)"
    },
    {
        "NL": "A meal can be vegetarian or include meat, but not both.",
        "FOL": "∀x (Meal(x) → (Vegetarian(x) ⊕ IncludesMeat(x)))"
    },
    {
        "NL": "A book primarily containing a collection of recipes, cooking techniques, and tips on food preparation is a cookbook.",
        "FOL": "∀x∀y∀z (Book(x) ∧ Recipes(x, y) ∧ CookingTechniquesAndTips(x, z) → Cookbook(x))"
    },
    {
        "NL": "Not all games are appropriate for all players.",
        "FOL": "¬∀x (Game(x) → AppropriateForAllPlayers(x))"
    },
    {
        "NL": "A car is eco-friendly if and only if it uses electric power and recycles waste, but not gasoline.",
        "FOL": "∀x (Car(x) → (EcoFriendly(x) ↔ (UsesElectricPower(x) ∧ RecyclesWaste(x)) ∧ ¬UsesGasoline(x)))"
    },
    {
        "NL": "A gemstone is precious if it is rare and valuable.",
        "FOL": "∀x (Gemstone(x) → (Precious(x) ↔ (Rare(x) ∧ Valuable(x))))"
    },
    {
        "NL": "Cell phones not connected to a Wi-Fi network consume more data when streaming video content.",
        "FOL": "∀x∀y (CellPhone(x) ∧ VideoContent(y) ∧ ¬ConnectedToWiFi(x) → ConsumesMoreData(x, y))"
    },
    {
        "NL": "A substance is a gas if it has no fixed shape and easily diffuses to fill any available space.",
        "FOL": "∀x (Substance(x) ∧ NoFixedShape(x) ∧ EasilyDiffuses(x) → Gas(x))"
    },
    {
        "NL": "A bachelor is an unmarried adult man.",
        "FOL": "∀x (Bachelor(x) ↔ (Adult(x) ∧ Man(x) ∧ ¬∃y (Married(x, y))))"
    },
    {
        "NL": "Trees can grow in different environments like forests, parks, or gardens.",
        "FOL": "∀x ∀y (Tree(x) ∧ (Forest(y) ∨ Park(y) ∨ Garden(y)) → GrowsInEnvironment(x, y))"
    },
    {
        "NL": "An animal can be either a mammal, a bird, a reptile, an amphibian, or a fish, but not more than one of these categories.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ⊕ Bird(x) ⊕ Reptile(x) ⊕ Amphibian(x) ⊕ Fish(x)))"
    },
    {
        "NL": "A train travels along a network of tracks, connecting different stations and transporting passengers or goods from one location to another.",
        "FOL": "∀x∀y∀z (Train(x) → (TravelsAlongNetworkOfTracks(x) ∧ ConnectsDifferentStations(x, y) ∧ Station(y) ∧ TransportsPassengersOrGoods(x, z) ∧ Location(z)))"
    },
    {
        "NL": "Volcanoes erupt due to pressure and magma buildup.",
        "FOL": "∀x∀y∀z (Volcano(x) ∧ Pressure(y) ∧ MagmaBuildup(z) → Erupt(x))"
    },
    {
        "NL": "A refrigerator preserves food by cooling it.",
        "FOL": "∀x (Refrigerator(x) → PreservesFood(x, Cooling))"
    },
    {
        "NL": "Cars that are fast and powerful always need a skilled driver.",
        "FOL": "∀x (Car(x) ∧ Fast(x) ∧ Powerful(x) → NeedSkilledDriver(x))"
    },
    {
        "NL": "A cell is either prokaryotic or eukaryotic, but not both.",
        "FOL": "∀x (Cell(x) → (Prokaryotic(x) ⊕ Eukaryotic(x)))"
    },
    {
        "NL": "No device is both a phone and a laptop.",
        "FOL": "¬∃x (Device(x) ∧ Phone(x) ∧ Laptop(x))"
    },
    {
        "NL": "A student graduates with honors if they have a high GPA and complete a thesis or capstone project.",
        "FOL": "∀x (Student(x) ∧ HighGPA(x) ∧ (Thesis(x) ∨ CapstoneProject(x)) → GraduatesWithHonors(x))"
    },
    {
        "NL": "Angela is not a pharmacist.",
        "FOL": "¬Pharmacist(angela)"
    },
    {
        "NL": "A person is labeled as a professional if they are trained or licensed in a specific field.",
        "FOL": "∀x (Person(x) ∧ (TrainedInField(x) ∨ LicensedInField(x)) → Professional(x))"
    }
]