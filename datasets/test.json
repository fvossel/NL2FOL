[
    {
        "NL": "If an individual actively seeks feedback, they are more likely to improve their performance and grow professionally.",
        "FOL": "∀x (ActivelySeeksFeedback(x) → (ImprovePerformance(x) ∧ ProfessionalGrowth(x)))"
    },
    {
        "NL": "A cat loves to play, whereas a dog loves to bark.",
        "FOL": "∀x (Cat(x) → LovesToPlay(x)) ∧ ∀y (Dog(y) → LovesToBark(y))"
    },
    {
        "NL": "In a solar system, planets orbit around a central star, and moons orbit around planets.",
        "FOL": "∀x∀y∀z (SolarSystem(x) ∧ Planet(y) ∧ Moon(z) → (OrbitsAround(y, x) ∧ OrbitsAround(z, y)))"
    },
    {
        "NL": "Nothing is a long river or a short mountain.",
        "FOL": "¬∃x ((Long(x) ∧ River(x)) ∨ (Short(x) ∧ Mountain(x)))"
    },
    {
        "NL": "Either a person is an introvert or an extrovert.",
        "FOL": "∀x (Introvert(x) ⊕ Extrovert(x))"
    },
    {
        "NL": "All metals are not conductive.",
        "FOL": "¬∀x (Metal(x) → Conductive(x))"
    },
    {
        "NL": "An athlete qualifies for the national team if they meet the minimum performance standard and pass the medical examination.",
        "FOL": "∀x (Athlete(x) ∧ MeetsMinimumPerformanceStandard(x) ∧ PassesMedicalExamination(x) → QualifiesForNationalTeam(x))"
    },
    {
        "NL": "A room with a TV and a sofa is a living room.",
        "FOL": "∀x (Room(x) ∧ HasTV(x) ∧ HasSofa(x) → LivingRoom(x))"
    },
    {
        "NL": "All squares are shapes, but not all shapes are squares.",
        "FOL": "∀x (Square(x) → Shape(x)) ∧ ¬∀x (Shape(x) → Square(x))"
    },
    {
        "NL": "A package is delivered within 2 days if shipped domestically and not delayed due to weather.",
        "FOL": "∀x ∀y (Package(x) ∧ ShippedTo(y) ∧ Domestic(y) ∧ ¬WeatherDelay(x) → DeliveredWithin2Days(x, y))"
    },
    {
        "NL": "Nothing is valuable unless it's rare.",
        "FOL": "∀x (Valuable(x) ↔ Rare(x))"
    },
    {
        "NL": "A museum displays an artwork if it is authentic and not being restored.",
        "FOL": "∀x∀y (Museum(x) ∧ Artwork(y) ∧ Authentic(y) ∧ ¬BeingRestored(y) → Display(x, y))"
    },
    {
        "NL": "A key unlocks a door by turning in a lock.",
        "FOL": "∀x ∀y ∀z (Key(x) ∧ Door(y) ∧ Lock(z) → Unlocks(x, y, z))"
    },
    {
        "NL": "There is a tree that all squirrels climb if not all pentagons have ten sides.",
        "FOL": "¬∀x (Pentagon(x) → TenSides(x)) → ∃y (Tree(y) ∧ ∀z (Squirrel(z) → ClimbsOn(z, y)))"
    },
    {
        "NL": "In a healthy diet, a balance of carbohydrates, proteins, and fats is essential for providing energy and maintaining overall wellness.",
        "FOL": "∀x (HealthyDiet(x) → (BalanceOfCarbohydratesProteinsFats(x) ↔ (ProvidesEnergy(x) ∧ MaintainsOverallWellness(x))))"
    },
    {
        "NL": "There isn't a musician who has played every instrument in the orchestra.",
        "FOL": "¬∃x (Musician(x) ∧ ∀y (Instrument(y) ∧ InOrchestra(y) → Played(x, y)))"
    },
    {
        "NL": "Tomatoes are red and round, while cucumbers are green and elongated.",
        "FOL": "∀x∀y (Tomato(x) → (Red(x) ∧ Round(x))) ∧ (Cucumber(y) → (Green(y) ∧ Elongated(y)))"
    },
    {
        "NL": "A citizen is seen as a voter if they are registered or have cast a vote.",
        "FOL": "∀x (Citizen(x) ∧ (IsRegistered(x) ∨ HasVoted(x)) → Voter(x))"
    },
    {
        "NL": "A film qualifies as a documentary if it presents factual information, often covers real-life events or subjects, and aims to educate or inform its audience.",
        "FOL": "∀x (Film(x) ∧ PresentsFactualInformation(x) ∧ OftenCoversRealLifeEventsOrSubjects(x) ∧ AimsToEducateOrInform(x) → Documentary(x))"
    },
    {
        "NL": "Astronauts explore space, conduct research on planets, and perform experiments on space stations.",
        "FOL": "∀x∀y∀z∀w (Astronaut(x) ∧ Space(y) ∧ Planet(z) ∧ SpaceStation(w) → (Explores(x, y) ∧ ConductsResearchOn(x, z) ∧ PerformsExperimentsOn(x, w)))"
    },
    {
        "NL": "If a person is a lawyer, they either practice criminal law or civil law.",
        "FOL": "∀x (Person(x) ∧ Lawyer(x) → PracticeCriminalLaw(x) ⊕ PracticeCivilLaw(x))"
    },
    {
        "NL": "The process of photosynthesis, occurring in plants and some bacteria, involves the absorption of sunlight and the conversion of carbon dioxide and water into glucose and oxygen.",
        "FOL": "∀x ∀y (Photosynthesis(x) ∧ (Plant(y) ∨ Bacteria(y)) → (AbsorbsSunlight(x) ∧ ConvertsCarbonDioxideAndWaterIntoGlucoseAndOxygen(x, y)))"
    },
    {
        "NL": "Cars that are red and sporty always go fast.",
        "FOL": "∀x (Car(x) ∧ Red(x) ∧ Sporty(x) → GoFast(x))"
    },
    {
        "NL": "A drone is an unmanned aerial vehicle that can be remotely controlled or programmed to fly autonomously, often used for surveillance, photography, or delivery purposes.",
        "FOL": "∀x (Drone(x) → (UnmannedAerialVehicle(x) ∧ RemotelyControlledOrAutonomous(x) ∧ UsedForSurveillancePhotographyDelivery(x)))"
    },
    {
        "NL": "Oranges grow on trees, while strawberries grow on plants close to the ground.",
        "FOL": "∀x ∀y (Orange(x) → GrowsOnTrees(x)) ∧ (Strawberry(y) → GrowsOnGroundPlants(y))"
    },
    {
        "NL": "A drought is a prolonged period of abnormally low precipitation, leading to a shortage of water and negatively affecting agriculture and ecosystems.",
        "FOL": "∀x (Drought(x) → (ProlongedPeriodOfAbnormallyLowPrecipitation(x) ∧ LeadsToWaterShortage(x) ∧ NegativelyAffectsAgricultureAndEcosystems(x)))"
    },
    {
        "NL": "A tree provides shade when it has large branches and dense foliage.",
        "FOL": "∀x (Tree(x) ∧ LargeBranches(x) ∧ DenseFoliage(x) → ProvidesShade(x))"
    },
    {
        "NL": "An artist can create an artwork in a studio using a specific material if the artist is skilled in using the material, the studio has the necessary tools, and the studio has enough space for the artwork.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ Studio(y) ∧ Material(z) ∧ SkilledInUsingMaterial(x, z) ∧ HasNecessaryTools(y, z) ∧ EnoughSpace(y) → CanCreateArtwork(x, y, z))"
    },
    {
        "NL": "A movie is a blockbuster if it has a high box office revenue, receives positive reviews, and stars famous actors.",
        "FOL": "∀x (Movie(x) → Blockbuster(x) ↔ (HighBoxOfficeRevenue(x) ∧ PositiveReviews(x) ∧ StarsFamousActors(x)))"
    },
    {
        "NL": "A bike is suitable for off-road adventures if it features a durable frame, suspension forks, and wide tires, but it does not cater to those who prefer road cycling.",
        "FOL": "∀x (Bike(x) ∧ SuitableForOffRoadAdventures(x) ↔ (DurableFrame(x) ∧ SuspensionForks(x) ∧ WideTires(x) ∧ ¬PrefersRoadCycling(x)))"
    },
    {
        "NL": "A healthy diet includes fruits, vegetables, and a limited amount of processed foods.",
        "FOL": "∀x (HealthyDiet(x) ↔ (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ LimitedProcessedFoods(x)))"
    },
    {
        "NL": "An antibiotic shields us from bacterial diseases by strengthening our body's immunity against them.",
        "FOL": "∀x ∃y (Antibiotic(x) ∧ BacterialDisease(y) ∧ StrengthensImmunityAgainst(x, y) → ShieldsFrom(x, y))"
    },
    {
        "NL": "A painter is drawing a portrait in the studio.",
        "FOL": "∃x ∃y ∃z (Painter(x) ∧ Portrait(y) ∧ Studio(z) ∧ DrawingIn(x, y, z))"
    },
    {
        "NL": "A garment is considered waterproof if it prevents water from penetrating the material.",
        "FOL": "∀x (Garment(x) ∧ PreventsWaterPenetration(x) → Waterproof(x))"
    },
    {
        "NL": "A recipe is considered healthy if it contains low-fat ingredients, a high amount of fiber, and a balanced proportion of nutrients.",
        "FOL": "∀x ∀y ∀z (Recipe(x) ∧ ContainsLowFatIngredients(x, y) ∧ HighAmountOfFiber(x, z) ∧ BalancedProportionOfNutrients(x) → Healthy(x))"
    },
    {
        "NL": "There are paintings that are created with oil paints and are displayed in galleries, but not all of them are for sale or have been restored.",
        "FOL": "∃x (Painting(x) ∧ CreatedWith(x, OilPaint) ∧ DisplayedIn(x, Gallery) ∧ ¬(ForSale(x) ∨ Restored(x)))"
    },
    {
        "NL": "If a book is a bestseller, it has a high number of sales and positive reviews.",
        "FOL": "∀x (Book(x) ∧ Bestseller(x) → (HighNumberOfSales(x) ∧ PositiveReviews(x)))"
    },
    {
        "NL": "All birds are feathered and can fly.",
        "FOL": "∀x (Bird(x) → (Feathered(x) ∧ CanFly(x)))"
    },
    {
        "NL": "An object can be either a square or a circle but not both.",
        "FOL": "∀x (Object(x) → (Square(x) ⊕ Circle(x)))"
    },
    {
        "NL": "A person who designs and creates video games is called a game developer.",
        "FOL": "∀x (DesignsAndCreatesVideoGames(x) → GameDeveloper(x))"
    },
    {
        "NL": "A novel is a memoir if it narrates the writer's personal life.",
        "FOL": "∀x ∃y ∃z (Novel(x) ∧ Writer(y) ∧ WriterOf(y, x) ∧ NarratesPersonalLife(x, y) → Memoir(x))"
    },
    {
        "NL": "An art museum displays various works of art, including paintings, sculptures, and photography, for the public to appreciate and study.",
        "FOL": "∀x∀y∀z (ArtMuseum(x) ∧ (Painting(y) ∨ Sculpture(y) ∨ Photography(y)) → (DisplaysWorkOfArt(x, y, z) ∧ PublicAppreciationAndStudy(x)))"
    },
    {
        "NL": "A vacation can be relaxing or adventurous.",
        "FOL": "∀x (Vacation(x) → (Relaxing(x) ∨ Adventurous(x)))"
    },
    {
        "NL": "Every painter who has exhibited with at least one painter, who has not received any art award, has either created more than six paintings or visited all art festivals.",
        "FOL": "∀x (Painter(x) ∧ ∃y (Painter(y) ∧ ¬ReceivedArtAward(y) ∧ ExhibitedWith(x, y)) → (CreatedMoreThanSixPaintings(x) ∨ ∀z (ArtFestival(z) → Visited(x, z ))))"
    },
    {
        "NL": "A surface can be either smooth or rough.",
        "FOL": "∀x (Surface(x) → (Smooth(x) ⊕ Rough(x)))"
    },
    {
        "NL": "There is a show every dancer appears in if some rectangles do not have four corners.",
        "FOL": "¬∀x (Rectangle(x) → FourCorners(x)) → ∃y (Show(y) ∧ ∀z (Dancer(z) → AppearsIn(z, y)))"
    },
    {
        "NL": "There is at least one developer in every tech company who knows multiple coding languages.",
        "FOL": "∀y (TechCompany(y) → ∃x (Developer(x) ∧ WorksAt(x, y) ∧ KnowsMultipleCodingLanguages(x)))"
    },
    {
        "NL": "An object is a small pentagon only if it is not pink.",
        "FOL": "∀x (Small(x) ∧ Pentagon(x) → ¬Pink(x))"
    },
    {
        "NL": "A company thrives in the market when it offers quality products or exceptional customer service.",
        "FOL": "∀x (Company(x) ∧ (QualityProducts(x) ∨ ExceptionalCustomerService(x)) → ThrivesInMarket(x))"
    },
    {
        "NL": "A musical instrument produces sound through vibrating strings, air columns, or membranes.",
        "FOL": "∀x (MusicalInstrument(x) ↔ (ProducesSound(x) ∧ (VibratingStrings(x) ∨ AirColumns(x) ∨ Membranes(x))))"
    },
    {
        "NL": "A vehicle is an electric car if it uses an electric motor for propulsion and is powered by a rechargeable battery.",
        "FOL": "∀x (Vehicle(x) ∧ ElectricMotor(x) ∧ RechargeableBattery(x) → ElectricCar(x))"
    },
    {
        "NL": "An academic program is interdisciplinary if it combines knowledge from multiple fields of study.",
        "FOL": "∀x (AcademicProgram(x) ∧ CombinesKnowledgeFromMultipleFields(x) → Interdisciplinary(x))"
    },
    {
        "NL": "It's incorrect that every dog that can bark is a guard dog, and none of these dogs can jump.",
        "FOL": "¬∀x (Dog(x) ∧ CanBark(x) → GuardDog(x)) ∧ ¬∃y (Dog(y) ∧ CanBark(y) ∧ CanJump(y))"
    },
    {
        "NL": "A park that offers various recreational facilities, has well-maintained green spaces, and provides safety measures attracts visitors and encourages outdoor activities.",
        "FOL": "∀x (Park(x) ∧ OffersRecreationalFacilities(x) ∧ WellMaintainedGreenSpaces(x) ∧ ProvidesSafetyMeasures(x) → (AttractsVisitors(x) ∧ EncouragesOutdoorActivities(x)))"
    },
    {
        "NL": "Mountains are tall, valleys are low, and plateaus are flat.",
        "FOL": "∀x ∀y ∀z (Mountain(x) → Tall(x)) ∧ (Valley(y) → Low(y)) ∧ (Plateau(z) → Flat(z))"
    },
    {
        "NL": "There isn't a book that is interesting.",
        "FOL": "¬∃x (Book(x) ∧ Interesting(x))"
    },
    {
        "NL": "A jacket keeps a person warm if it is made of insulating material and fits well.",
        "FOL": "∀x ∀y (Jacket(x) ∧ Person(y) ∧ MadeOfInsulatingMaterial(x) ∧ FitsWell(x, y) → KeepsWarm(x, y))"
    },
    {
        "NL": "A cellular organism that lacks a nucleus and other membrane-bound organelles is a prokaryote.",
        "FOL": "∀x (CellularOrganism(x) ∧ LacksNucleus(x) ∧ LacksMembraneBoundOrganelles(x) → Prokaryote(x))"
    },
    {
        "NL": "A number is even, odd, or neither.",
        "FOL": "∀x (Number(x) → (Even(x) ∨ Odd(x) ∨ ¬(Even(x) ∨ Odd(x))))"
    },
    {
        "NL": "A horse has four legs, while a bat has two legs, but a fish has no legs.",
        "FOL": "∀x (Horse(x) → HasFourLegs(x)) ∧ ∀y (Bat(y) → HasTwoLegs(y)) ∧ ∀z (Fish(z) → ¬HasLegs(z))"
    },
    {
        "NL": "Peter doesn't envy any Russian or Chinese.",
        "FOL": "∀x (Person(x) ∧ (From(x, russia) ∨ From(x, china)) → ¬Envy(peter, x))"
    },
    {
        "NL": "No tree is a mover.",
        "FOL": "¬∃x (Tree(x) ∧ Mover(x))"
    },
    {
        "NL": "All humans, dogs, and cats have four limbs.",
        "FOL": "∀x (Human(x) ∨ Dog(x) ∨ Cat(x) → FourLimbs(x))"
    },
    {
        "NL": "Automobiles that are more fuel-efficient produce fewer greenhouse gas emissions and have a lower impact on the environment.",
        "FOL": "∀x (Automobile(x) ∧ MoreFuelEfficient(x) → FewerGreenhouseGasEmissionsAndLowerEnvironmentalImpact(x))"
    },
    {
        "NL": "No football players that can run fast are goalkeepers.",
        "FOL": "¬∀x (FootballPlayer(x) ∧ CanRunFast(x) → Goalkeeper(x))"
    },
    {
        "NL": "An aquarium conserves fish species, securing endangered types and their habitats, while offering chances for marine biology research and fish observation.",
        "FOL": "∀x ∃y ∃z (Aquarium(x) → (EndangeredTypes(y) ∧ Habitat(z) ∧ Belongs(y, z) ∧ (ConservesFishSpecies(x) ∧ Secures(x, y) ∧ Secures(x, z) ∧ ProvidesMarineBiologyResearchOpportunities(x) ∧ ProvidesFishObservationOpportunities(x))))"
    },
    {
        "NL": "Cacti can survive harsh desert conditions.",
        "FOL": "∀x (Cacti(x) → (Survives(x) → HarshCondition(x)) ∧ Desert(x))"
    },
    {
        "NL": "A place is considered a stadium if it is a large, enclosed or semi-enclosed venue designed for sporting events, concerts, or other large gatherings.",
        "FOL": "∀x (Stadium(x) ↔ (LargeVenue(x) ∧ DesignedForSportingEventsConcertsAndLargeGatherings(x)))"
    },
    {
        "NL": "A well-reviewed movie with an engaging plot may disappoint viewers if it has excessive violence, lacks character development, or has a predictable ending.",
        "FOL": "∀x ∀y (Movie(x) ∧ WellReviewed(x) ∧ EngagingPlot(x) ∧ Viewer(y) ∧ (ExcessiveViolence(x) ∨ LacksCharacterDevelopment(x) ∨ PredictableEnding(x)) → Disappoints(y, x))"
    },
    {
        "NL": "A building is eco-friendly when it relies on solar power and doesn't use plastic materials.",
        "FOL": "∀x (Building(x) ∧ SolarPower(x) ∧ ¬UsesPlasticMaterials(x) → EcoFriendly(x))"
    },
    {
        "NL": "A comet consists of a nucleus, a coma, and a tail, where the tail always points away from the sun.",
        "FOL": "∀x (Comet(x) → (HasNucleus(x) ∧ HasComa(x) ∧ HasTail(x) ∧ TailPointsAwayFromSun(x)))"
    },
    {
        "NL": "Some vegetables are either sweet or spicy, but not both.",
        "FOL": "∃x (Vegetable(x) ∧ (Sweet(x) ⊕ Spicy(x)))"
    },
    {
        "NL": "A musician is playing a melody in a spacious hall.",
        "FOL": "∃x ∃y (Musician(x) ∧ PlayMelody(x) ∧ SpaciousHall(y) ∧ In(x, y))"
    },
    {
        "NL": "A plane takes off from the origin airport and lands at the destination airport without landing at any other airports.",
        "FOL": "∃x ∃y ∃z (Plane(x) ∧ OriginAirport(y) ∧ DestinationAirport(z) → TakesOffFrom(x, y) ∧ LandsAt(x, z) ∧ ¬∃w (Airport(w) ∧ LandsAt(x, w)))"
    },
    {
        "NL": "Eagles are predatory birds, they have sharp talons and excellent vision.",
        "FOL": "∀x (Eagle(x) → (PredatoryBird(x) ∧ HasSharpTalons(x) ∧ HasExcellentVision(x)))"
    },
    {
        "NL": "A fire alarm activates when the sensor detects smoke, the siren sounds, and the emergency lights flash.",
        "FOL": "∀x ∀y ∀z (FireAlarm(x) ∧ Sensor(y) ∧ DetectsSmoke(y) ∧ Siren(z) ∧ Sounds(z) ∧ EmergencyLightsFlash(x) → Activates(x))"
    },
    {
        "NL": "A celestial event where a celestial body passes directly between two other celestial bodies, blocking the light from one to the other, is an eclipse.",
        "FOL": "∀x∀y∀z (CelestialEvent(x) ∧ CelestialBodyPassesDirectlyBetween(x, y, z) ∧ BlocksLightFromOneToAnother(x, y, z) → Eclipse(x))"
    },
    {
        "NL": "A public park may host outdoor concerts or yoga sessions, but not both on the same day, to avoid overcrowding and noise pollution.",
        "FOL": "∀x (PublicPark(x) ∧ ((HostsOutdoorConcerts(x) ⊕ HostsYogaSessions(x)) ∧ ¬(HostsOutdoorConcerts(x) ∧ HostsYogaSessions(x))))"
    },
    {
        "NL": "A dentist diagnoses and treats oral health issues, such as cavities or gum disease.",
        "FOL": "∀x∀y (Dentist(x) ∧ (Cavities(y) ∨ GumDisease(y)) → DiagnosesAndTreats(x, y))"
    },
    {
        "NL": "A metal conducts heat if its thermal conductivity is above a certain threshold.",
        "FOL": "∀x (Metal(x) ∧ ThermalConductivityAboveThreshold(x) → ConductsHeat(x))"
    },
    {
        "NL": "A square is yellow if and only if it is not small and it points to a blue or green object.",
        "FOL": "∀x (Square(x) → ((Yellow(x) ↔ ¬Small(x)) ∧ ∃y (PointsTo(x, y) → (Blue(y) ∨ Green(y)))))"
    },
    {
        "NL": "A beverage is classified as alcoholic if it contains ethanol.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) → Alcoholic(x))"
    },
    {
        "NL": "An instrument can be played with hands, a bow, or a pick, but not all instruments are compatible with every method.",
        "FOL": "∀x (Instrument(x) → (PlayedWithHands(x) ∨ PlayedWithBow(x) ∨ PlayedWithPick(x)) ∧ ¬(PlayedWithHands(x) ∧ PlayedWithBow(x) ∧ PlayedWithPick(x)))"
    },
    {
        "NL": "A park has a playground if it includes play structures and is not a nature reserve or a botanical garden.",
        "FOL": "∀x (Park(x) ∧ IncludesPlayStructures(x) ∧ ¬NatureReserve(x) ∧ ¬BotanicalGarden(x) → Playground(x))"
    },
    {
        "NL": "Jewelers craft rings and necklaces.",
        "FOL": "∀x∀y∀z (Jeweler(x) ∧ (Ring(y) ∨ Necklace(z)) → Crafts(x, y) ∨ Crafts(x, z))"
    },
    {
        "NL": "A movie captivates audiences when it features a compelling plot, talented actors, and exceptional cinematography, but not if it has a weak ending.",
        "FOL": "∀x (Movie(x) ∧ CaptivatesAudiences(x) ↔ (CompellingPlot(x) ∧ TalentedActors(x) ∧ ExceptionalCinematography(x) ∧ ¬WeakEnding(x)))"
    },
    {
        "NL": "A vacation is enjoyable if it offers relaxation or adventure, and takes place in a beautiful location.",
        "FOL": "∀x (Vacation(x) → (Enjoyable(x) ↔ ((OffersRelaxation(x) ∨ OffersAdventure(x)) ∧ BeautifulLocation(x))))"
    },
    {
        "NL": "An orchestra performs a symphony, with musicians playing various instruments under the direction of a conductor.",
        "FOL": "∀x ∀y ∀z (Orchestra(x) ∧ Symphony(y) ∧ Musician(z) ∧ Instrument(w) ∧ Conductor(u) → (Performs(x, y) ∧ Plays(z, w) ∧ DirectedBy(x, u)))"
    },
    {
        "NL": "A seatbelt can safeguard a passenger by lessening the force of crash.",
        "FOL": "∀x ∀y (Seatbelt(x) ∧ Passenger(y) → (Safeguards(x, y) → LessensForce(x, y)))"
    },
    {
        "NL": "A style of music characterized by the use of electronic instruments, repetitive beats, and synthesized sounds is electronic dance music.",
        "FOL": "∀x (MusicStyle(x) ∧ ElectronicInstruments(x) ∧ RepetitiveBeats(x) ∧ SynthesizedSounds(x) → ElectronicDanceMusic(x))"
    },
    {
        "NL": "A substance that dissolves in water is soluble, while substances that do not dissolve are insoluble.",
        "FOL": "∀x (Substance(x) ∧ (DissolvesInWater(x) ↔ Soluble(x)) ∧ (¬DissolvesInWater(x) ↔ Insoluble(x)))"
    },
    {
        "NL": "An artwork is an original if it is not a reproduction or copy.",
        "FOL": "∀x (Artwork(x) ∧ ¬ReproductionOrCopy(x) → Original(x))"
    },
    {
        "NL": "A shirt can be red or blue, and pants can be black or white, but not all clothing items share these color options.",
        "FOL": "∃x ∃y (Shirt(x) ∧ Pants(y) ∧ (Red(x) ∨ Blue(x)) ∧ (Black(y) ∨ White(y)))"
    },
    {
        "NL": "The sun is a star.",
        "FOL": "∀x (Sun(x) → Star(x))"
    },
    {
        "NL": "No individual in the conference knows either Helen or Julia.",
        "FOL": "∀x (Individual(x) ∧ AtConference(x) → ¬Know(x, helen) ∧ ¬Know(x, julia))"
    },
    {
        "NL": "A vacuum cleaner removes dirt and dust from surfaces by creating suction and using a filtering system.",
        "FOL": "∀x (VacuumCleaner(x) → (RemovesDirtAndDust(x) ∧ CreatesSuction(x) ∧ UsesFilteringSystem(x)))"
    },
    {
        "NL": "Puppies are cute, kittens are adorable, and cubs are fluffy.",
        "FOL": "∀x (Puppy(x) → Cute(x)) ∧ ∀y (Kitten(y) → Adorable(y)) ∧ ∀z (Cub(z) → Fluffy(z))"
    },
    {
        "NL": "A device is called a smartphone if it has touchscreen.",
        "FOL": "∀x (Device(x) ∧ HasTouchscreen(x) → Smartphone(x))"
    },
    {
        "NL": "A car facilitates transportation and operates using gasoline.",
        "FOL": "∀x (Car(x) → (FacilitatesTransportation(x) ∧ OperatesUsingGasoline(x)))"
    },
    {
        "NL": "A scientist studies a phenomenon using an instrument.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Phenomenon(y) ∧ Instrument(z) → StudiesUsing(x, y, z))"
    },
    {
        "NL": "A train is delayed when there are technical issues or when the weather is severe.",
        "FOL": "∀x (Train(x) ∧ (TechnicalIssues(x) ∨ SevereWeather(x)) → Delayed(x))"
    },
    {
        "NL": "A photosynthetic organism, such as a plant or algae, uses sunlight, water, and carbon dioxide to produce glucose and oxygen.",
        "FOL": "∀x ∀y ∀z (PhotosyntheticOrganism(x) ∧ (Plant(x) ∨ Algae(x)) ∧ Sunlight(y) ∧ WaterAndCarbonDioxide(z) → ProducesGlucoseAndOxygen(x, y, z))"
    },
    {
        "NL": "No car with wheels lacks an engine.",
        "FOL": "∀x (Car(x) → (HaveWheels(x) → ¬LackEngine(x)))"
    },
    {
        "NL": "Paintings can be created with oil or acrylic as a medium, but not both.",
        "FOL": "∀x (Painting(x) → (CreatedWithOil(x) ⊕ CreatedWithAcrylic(x)))"
    },
    {
        "NL": "A carnivorous animal primarily eats other animals.",
        "FOL": "∀x ∀y (CarnivorousAnimal(x) ∧ Animal(y) → PrimarilyEats(x, y))"
    },
    {
        "NL": "Rainy days cause wet streets and increase the chance of traffic accidents.",
        "FOL": "∀x ∀y ∀z (Day(x) ∧ Rainy(x) → (Street(y) ∧ Wet(y) ∧ TrafficAccident(z) ∧ IncreasedChance(z)))"
    },
    {
        "NL": "Every dancer who practices daily wins the competition.",
        "FOL": "∀x (Dancer(x) ∧ PracticeDaily(x) → WinsCompetition(x))"
    },
    {
        "NL": "A company can be identified as a startup when it is in the early stages of development, typically has limited revenue, and focuses on creating innovative products or services.",
        "FOL": "∀x (Company(x) ∧ EarlyStagesOfDevelopment(x) ∧ TypicallyHasLimitedRevenue(x) ∧ FocusesOnInnovativeProductsOrServices(x) → Startup(x))"
    },
    {
        "NL": "An educational program that incorporates diverse teaching methods, focuses on real-world applications, and fosters critical thinking can enhance student learning outcomes.",
        "FOL": "∀x (EducationalProgram(x) ∧ DiverseTeachingMethods(x) ∧ FocusesOnRealWorldApplications(x) ∧ FostersCriticalThinking(x) → EnhancesStudentLearningOutcomes(x))"
    },
    {
        "NL": "An electronic device is a smartphone if it can make calls, send messages, and access the internet.",
        "FOL": "∀x (ElectronicDevice(x) ∧ MakeCalls(x) ∧ SendMessages(x) ∧ AccessInternet(x) → Smartphone(x))"
    },
    {
        "NL": "A garment that can cover the body and is made of fabric is defined as a cloth.",
        "FOL": "∀x (Garment(x) ∧ CanCoverBody(x) ∧ IsMadeOfFabric(x) → Cloth(x))"
    },
    {
        "NL": "A scientist conducts an experiment under controlled conditions to test a hypothesis and collect data.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Experiment(y) ∧ Hypothesis(z) ∧ ControlledConditions(y) → (Conducts(x, y) ∧ Tests(x, z) ∧ CollectsData(x, y)))"
    },
    {
        "NL": "Every architect has designed all buildings for a client.",
        "FOL": "∃x (Architect(x) ∧ ∃y (Client(y) ∧ ∀z (Building(z) ∧ For(z, y) → Designed(x, z))))"
    },
    {
        "NL": "Humans have the ability to talk and they can walk, while horses do not have the ability to talk and can walk.",
        "FOL": "∀x (Human(x) → CanTalk(x) ∧ CanWalk(x)) ∧ ∀y (Horse(y) → ¬CanTalk(y) ∧ CanWalk(y))"
    },
    {
        "NL": "An object is a large car only if it is red.",
        "FOL": "∀x (Large(x) ∧ Car(x) → Red(x))"
    },
    {
        "NL": "A doctor diagnoses and treats illnesses or injuries in patients.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) → (DiagnosesIllnessesOrInjuries(x, y) ∧ TreatsIllnessesOrInjuries(x, y)))"
    },
    {
        "NL": "A red ball bounces everywhere.",
        "FOL": "∃x (Red(x) ∧ Ball(x) → ∃y (Bounces(x, y)))"
    },
    {
        "NL": "A musician plays an instrument to produce melody and harmony.",
        "FOL": "∀x ∀y ∀z (Musician(x) ∧ Instrument(y) ∧ MelodyHarmony(z) → PlaysToProduce(x, y, z))"
    },
    {
        "NL": "A runner participates in marathons, whereas a swimmer competes in swimming competitions, but not both.",
        "FOL": "∀x ∀y (Runner(x) ∧ Swimmer(y) → (ParticipatesInMarathons(x) ⊕ CompetesInSwimmingCompetitions(y)))"
    },
    {
        "NL": "A person is a photographer if they take photographs using a camera as a profession or hobby.",
        "FOL": "∀x (Photographer(x) ↔ (Person(x) ∧ TakesPhotographs(x) ∧ UsesCamera(x)))"
    },
    {
        "NL": "Cacti store water in their thick stems, allowing them to survive in arid environments.",
        "FOL": "∀x∀y∀z (Cactus(x) ∧ Water(y) ∧ ThickStems(z) → StoresAndSurvives(x, y, z))"
    },
    {
        "NL": "Whoever perceives life as if it were a movie, fails to understand the actuality.",
        "FOL": "∀x (PerceivesLifeAsMovie(x) → FailsUnderstandActuality(x))"
    },
    {
        "NL": "A well-designed public transportation system can reduce traffic congestion, decrease pollution, and contribute to a more sustainable urban environment.",
        "FOL": "∀x∀y∀z (PublicTransportationSystem(x) ∧ UrbanEnvironment(y) ∧ Benefits(z) → (WellDesigned(x) → (ReducesTrafficCongestion(x, z) ∧ DecreasesPollution(x, z) ∧ ContributesToSustainability(x, y))))"
    },
    {
        "NL": "A fruit is either a drupe with a single hard seed or a berry with multiple soft seeds.",
        "FOL": "∀x (Fruit(x) → (Drupe(x) ⊕ Berry(x)) ∧ ((Drupe(x) → SingleHardSeed(x)) ∧ (Berry(x) → MultipleSoftSeeds(x))))"
    },
    {
        "NL": "A book x is written in language y and is popular in country z if x's content is in y and a large number of copies are sold in z.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ Language(y) ∧ Country(z) ∧ ContentInLanguage(x, y) ∧ LargeNumberOfCopiesSold(x, z) → WrittenInAndPopular(x, y, z))"
    },
    {
        "NL": "A tree provides shade when it has a large canopy, dense foliage, and is tall enough to block sunlight.",
        "FOL": "∀x ∀y (Tree(x) ∧ LargeCanopy(x, y) ∧ DenseFoliage(y) ∧ TallEnoughToBlockSunlight(x) → ProvidesShade(x))"
    },
    {
        "NL": "A book is praised if it possesses an interesting plot, rich characters, and an imaginative author.",
        "FOL": "∀x (Book(x) ∧ HasInterestingPlot(x) ∧ HasRichCharacters(x) ∧ HasImaginativeAuthor(x) → Praised(x))"
    },
    {
        "NL": "A tree grows in soil, while a whale lives in the ocean.",
        "FOL": "∀x (Tree(x) → GrowsInSoil(x)) ∧ ∀y (Whale(y) → LivesInOcean(y))"
    },
    {
        "NL": "A red car is always fast.",
        "FOL": "∀x (Red(x) ∧ Car(x) → Fast(x))"
    },
    {
        "NL": "A living space can be furnished with various types of furniture, and the arrangement and size of the furniture influence the overall functionality and aesthetics of the space.",
        "FOL": "∀x ∀y ∀z (LivingSpace(x) ∧ Furniture(y) ∧ FurnishedWith(x, y) ∧ ArrangementAndSize(y, z) → (FunctionalAndAestheticSpace(x) ⊕ NonFunctionalOrAestheticSpace(x)))"
    },
    {
        "NL": "An animal adapts to its environment if it has advantageous physical traits, behavioral adaptations, and can find sufficient food sources.",
        "FOL": "∀x (Animal(x) → (AdaptsToEnvironment(x) ↔ (AdvantageousPhysicalTraits(x) ∧ BehavioralAdaptations(x) ∧ SufficientFoodSources(x))))"
    },
    {
        "NL": "An architect designs buildings, while a chef prepares meals.",
        "FOL": "∀x ∀y (Architect(x) → DesignsBuildings(x)) ∧ (Chef(y) → PreparesMeals(y))"
    },
    {
        "NL": "A country is wealthy if it has a high GDP.",
        "FOL": "∀x (Country(x) ∧ HighGDP(x) → Wealthy(x))"
    },
    {
        "NL": "If all authors who will be published are original thinkers, then some writers will not be published.",
        "FOL": "∀x (Author(x) ∧ Published(x) → OriginalThinker(x)) → ∃y (Writer(y) ∧ ¬Published(y))"
    },
    {
        "NL": "If a person creates, designs, and tests new products, they are considered a product designer.",
        "FOL": "∀x (CreatesDesignsAndTestsNewProducts(x) → ProductDesigner(x))"
    },
    {
        "NL": "Every speaker who lectures any subject is respected by everyone.",
        "FOL": "∀x (Speaker(x) → ∀y ((Subject(y) → Lectures(x, y)) → ¬∃z (Person(z) ∧ Respects(z, x))))"
    },
    {
        "NL": "A telescope observes celestial objects and magnifies images, while a microscope examines tiny objects and magnifies details.",
        "FOL": "∀x (Telescope(x) ∧ (ObservesCelestialObjects(x) ∧ MagnifiesImages(x)) ∧ Microscope(x) ∧ (ExaminesTinyObjects(x) ∧ MagnifiesDetails(x)))"
    },
    {
        "NL": "A scientist who studies biology or chemistry, but not both, might also study physics.",
        "FOL": "∃x (Scientist(x) ∧ ((StudiesBiology(x) ⊕ StudiesChemistry(x)) ∧ (StudiesPhysics(x) ∨ ¬StudiesPhysics(x))))"
    },
    {
        "NL": "A volcano erupts if the molten rock, ash, and gas beneath the surface are expelled.",
        "FOL": "∀x (Volcano(x) ∧ ExpelsMoltenRock(x) ∧ ExpelsAsh(x) ∧ ExpelsGas(x) → Erupts(x))"
    },
    {
        "NL": "A country is considered peaceful if it has a low conflict rate and either a strong military force or effective peace treaty.",
        "FOL": "∀x (Country(x) ∧ HasLowConflictRate(x) ∧ (HasStrongMilitaryForce(x) ∨ HasEffectivePeaceTreaty(x)) → Peaceful(x))"
    },
    {
        "NL": "A bird can fly if it has wings and is not flightless, like an ostrich or a penguin.",
        "FOL": "∀x (Bird(x) → ((HasWings(x) ∧ ¬Flightless(x) ∧ ¬Ostrich(x) ∧ ¬Penguin(x)) → CanFly(x)))"
    },
    {
        "NL": "All sparrows that can fly are not migratory.",
        "FOL": "¬∀x (Sparrow(x) ∧ CanFly(x) → Migratory(x))"
    },
    {
        "NL": "A solar panel x can power an appliance y in a location z if the sunlight in z is sufficient to generate enough energy for y.",
        "FOL": "∀x ∀y ∀z (SolarPanel(x) ∧ Appliance(y) ∧ Location(z) ∧ SufficientSunlight(x, z) ∧ GeneratesEnoughEnergy(x, y) → CanPower(x, y, z))"
    },
    {
        "NL": "A pilot flies airplanes, helicopters, or other types of aircraft.",
        "FOL": "∀x∀y∀z (Pilot(x) ∧ (Airplane(y) ∨ Helicopter(y) ∨ Aircraft(y)) → Flies(x, y))"
    },
    {
        "NL": "An island is surrounded by water and cannot be located within a desert.",
        "FOL": "∀x (Island(x) → (SurroundedByWater(x) ∧ ¬LocatedInDesert(x)))"
    },
    {
        "NL": "A valid password contains at least one uppercase letter, one lowercase letter, and one digit.",
        "FOL": "∀x (ValidPassword(x) ↔ (∃y (UppercaseLetter(y) ∧ Contains(x, y)) ∧ ∃z (LowercaseLetter(z) ∧ Contains(x, z)) ∧ ∃w (Digit(w) ∧ Contains(x, w))))"
    },
    {
        "NL": "Every song that is emotional, lively, and well-composed hits the chart.",
        "FOL": "∀x (Song(x) ∧ Emotional(x) ∧ Lively(x) ∧ WellComposed(x) → HitsChart(x))"
    },
    {
        "NL": "No planets exist that neither orbit the sun nor rotate on their axis.",
        "FOL": "¬∃x (Planet(x) ∧ ¬OrbitSun(x) ∧ ¬RotateOnAxis(x))"
    },
    {
        "NL": "Assuming all frogs are not green, there is a pond that every frog jumps into.",
        "FOL": "¬∀x (Frog(x) → Green(x)) → ∃y (Pond(y) ∧ ∀z (Frog(z) → JumpsInto(z, y)))"
    },
    {
        "NL": "A literary work that belongs to a specific genre and explores a particular theme is typically a novel or a short story.",
        "FOL": "∀x∀y∀z (LiteraryWork(x) ∧ BelongsToGenre(x, y) ∧ ExploresTheme(x, z) → (Novel(x) ∨ ShortStory(x)))"
    },
    {
        "NL": "Every artist who draws every face is appreciated by somebody.",
        "FOL": "∀x (Artist(x) → ∀y ((Face(y) → Draw(x, y)) → ∃z (Person(z) ∧ Appreciate(z, x))))"
    },
    {
        "NL": "A player wins a chess match if they checkmate their opponent.",
        "FOL": "∀x ∀y (Player(x) ∧ ChessMatch(y) ∧ CheckmateOpponent(x, y) → Wins(x, y))"
    },
    {
        "NL": "A vehicle is classified as a bicycle if it is human-powered, has two wheels, and is typically propelled by pedaling.",
        "FOL": "∀x (Vehicle(x) ∧ HumanPowered(x) ∧ TwoWheels(x) ∧ TypicallyPropelledByPedaling(x) → Bicycle(x))"
    },
    {
        "NL": "No plant with roots lacks leaves.",
        "FOL": "∀x (Plant(x) → (HaveRoots(x) → ¬LackLeaves(x)))"
    },
    {
        "NL": "Every musician isn't a guitarist.",
        "FOL": "¬∀x (Musician(x) → Guitarist(x))"
    },
    {
        "NL": "All cars are either manual or automatic, but not both.",
        "FOL": "∀x (Car(x) ∧ (Manual(x) ⊕ Automatic(x)))"
    },
    {
        "NL": "A musical instrument that is played by striking it with mallets or sticks and produces sound through vibration is a percussion instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ PlayedByStriking(x) ∧ ProducesSoundThroughVibration(x) → PercussionInstrument(x))"
    },
    {
        "NL": "A vegetarian does not eat meat.",
        "FOL": "∀x (Vegetarian(x) → ¬EatMeat(x))"
    },
    {
        "NL": "A computer system is secure if it has strong encryption, regular security updates, and multi-factor authentication.",
        "FOL": "∀x (ComputerSystem(x) ∧ StrongEncryption(x) ∧ RegularSecurityUpdates(x) ∧ MultiFactorAuthentication(x) → Secure(x))"
    },
    {
        "NL": "A tornado forms when warm, moist air meets cold, dry air, causing a rapidly rotating column of air.",
        "FOL": "∀x (Tornado(x) → (WarmMoistAirMeetsColdDryAir(x) ∧ CausesRapidlyRotatingColumnOfAir(x)))"
    },
    {
        "NL": "If a person is a lawyer, they must represent and advise clients in legal matters.",
        "FOL": "∀x (Lawyer(x) → (RepresentsClientsInLegalMatters(x) ∧ AdvisesClientsInLegalMatters(x)))"
    },
    {
        "NL": "A library houses a collection of books, which can be borrowed by patrons for a specific period.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Book(y) ∧ Patron(z) → (Houses(x, y) ∧ CanBorrow(z, y) → SpecificPeriod(y, z)))"
    },
    {
        "NL": "A city is livable if it has friendly citizens and good public infrastructure.",
        "FOL": "∀x (City(x) ∧ HasFriendlyCitizens(x) ∧ HasGoodPublicInfrastructure(x) → Livable(x))"
    },
    {
        "NL": "In a healthy ecosystem, predators control the population of herbivores, and herbivores consume plants.",
        "FOL": "∀x∀y∀z (HealthyEcosystem(x) ∧ Predator(y) ∧ Herbivore(z) → ControlsPopulation(y, z)) ∧ (Herbivore(y) ∧ Plant(z) → Consumes(y, z))"
    },
    {
        "NL": "Some sports are both played indoors and require a team.",
        "FOL": "∃x (Sport(x) ∧ PlayedIndoors(x) ∧ RequiresTeam(x))"
    },
    {
        "NL": "A biologist studies living organisms, a chemist examines chemical substances, and a physicist investigates physical phenomena.",
        "FOL": "∀x∀y∀z (Biologist(x) ∧ Chemist(y) ∧ Physicist(z) → (StudiesLivingOrganisms(x) ∧ ExaminesChemicalSubstances(y) ∧ InvestigatesPhysicalPhenomena(z)))"
    },
    {
        "NL": "A drought causes a shortage of water, leading to crop failure and the death of wildlife in affected regions.",
        "FOL": "∀x∀y (Drought(x) ∧ Region(y) → (ShortageOfWater(x, y) ∧ CropFailure(y) ∧ DeathOfWildlife(y)))"
    },
    {
        "NL": "A smartphone can make phone calls.",
        "FOL": "∀x (Smartphone(x) → MakesPhoneCalls(x))"
    },
    {
        "NL": "No cubes are small.",
        "FOL": "∀x (Cube(x) → ¬Small(x))"
    },
    {
        "NL": "Not every plant is either a herb or a shrub.",
        "FOL": "¬∀x (Plant(x) → (Herb(x) ∨ Shrub(x)))"
    },
    {
        "NL": "A battery stores and provides electrical energy to power electronic devices.",
        "FOL": "∀x∀y (Battery(x) ∧ ElectronicDevice(y) → (StoresEnergy(x) ∧ ProvidesEnergy(x, y)))"
    },
    {
        "NL": "All mammals are warm-blooded.",
        "FOL": "∀x (Mammal(x) → WarmBlooded(x))"
    },
    {
        "NL": "A vehicle can be driven if it has fuel and its engine is running, but not if it has a flat tire.",
        "FOL": "∀x ∀y ∀z (Vehicle(x) ∧ HasFuel(x, y) ∧ EngineRunning(x) ∧ ¬FlatTire(z, x) → CanBeDriven(x))"
    },
    {
        "NL": "Birds migrate to different regions in response to changes in temperature, food availability, and other environmental factors.",
        "FOL": "∀x (Bird(x) → (∃y (Temperature(y) ∧ FoodAvailability(z) ∧ EnvironmentalFactors(w) ∧ MigratesInResponseTo(x, y, z, w))))"
    },
    {
        "NL": "A person is considered a sculptor if they create three-dimensional art by carving or modeling materials.",
        "FOL": "∀x (Sculptor(x) ↔ CreatesThreeDimensionalArt(x))"
    },
    {
        "NL": "A computer can be a desktop, a laptop, or a tablet.",
        "FOL": "∀x (Computer(x) → (Desktop(x) ∨ Laptop(x) ∨ Tablet(x)))"
    },
    {
        "NL": "A paint color appears darker when applied to a rough surface or in dim light.",
        "FOL": "∀x (PaintColor(x) → (AppearsDarker(x) ↔ (RoughSurface(x) ∨ DimLight(x))))"
    },
    {
        "NL": "A museum displays historical artifacts or contemporary art pieces that educate and inspire visitors.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ DisplayedItem(y) ∧ (HistoricalArtifact(y) ∨ ContemporaryArtPiece(y)) ∧ Visitor(z) → EducatesAndInspires(x, y, z))"
    },
    {
        "NL": "Something is a red flower, and something is a green leaf.",
        "FOL": "∃x (Red(x) ∧ Flower(x)) ∧ ∃x (Green(x) ∧ Leaf(x))"
    },
    {
        "NL": "A well-functioning team has clear communication, shared goals, and mutual respect.",
        "FOL": "∀x (Team(x) → (WellFunctioning(x) ↔ (ClearCommunication(x) ∧ SharedGoals(x) ∧ MutualRespect(x))))"
    },
    {
        "NL": "An electronic component that amplifies an input signal and produces an output signal with a higher power level is a transistor.",
        "FOL": "∀x ∀y ∀z (ElectronicComponent(x) ∧ InputSignal(y) ∧ OutputSignal(z) ∧ Amplifies(x, y) ∧ HigherPowerLevel(x, z) → Transistor(x))"
    },
    {
        "NL": "Snow is a form of precipitation that occurs when the temperature is below freezing.",
        "FOL": "∀x (Snow(x) ↔ (Precipitation(x) ∧ TemperatureBelowFreezing(x)))"
    },
    {
        "NL": "A person is deemed a sculptor if they create three-dimensional art with different materials.",
        "FOL": "∀x (Person(x) ∧ CreatesThreeDimensionalArtWithDifferentMaterials(x) → Sculptor(x))"
    },
    {
        "NL": "A magazine contains articles, photographs, and advertisements.",
        "FOL": "∀x∀y∀z (Magazine(x) ∧ (Article(y) ∨ Photograph(y) ∨ Advertisement(y)) → Contains(x, y))"
    },
    {
        "NL": "A type of exercise equipment can be either for cardio or strength training.",
        "FOL": "∀x (ExerciseEquipmentType(x) → Cardio(x) ⊕ StrengthTraining(x))"
    },
    {
        "NL": "A song features a catchy melody, meaningful lyrics, and a captivating rhythm.",
        "FOL": "∀x (Song(x) → (CatchyMelody(x) ∧ MeaningfulLyrics(x) ∧ CaptivatingRhythm(x)))"
    },
    {
        "NL": "Not every teacher reads.",
        "FOL": "∃x (Teacher(x) ∧ ¬Read(x))"
    },
    {
        "NL": "In a bakery, bakers mix ingredients and bake goods, while cashiers handle sales transactions and assist customers.",
        "FOL": "∀x ∀y ∀z (Bakery(x) ∧ Baker(y) ∧ Cashier(z) → (MixesIngredients(y, x) ∧ BakesGoods(y, x) ∧ HandlesTransactions(z, x) ∧ AssistsCustomers(z, x)))"
    },
    {
        "NL": "A dish is vegan if it has no meat and no dairy.",
        "FOL": "∀x (Vegan(x) ↔ (Dish(x) ∧ ¬Meat(x) ∧ ¬Dairy(x)))"
    },
    {
        "NL": "A book is available at a library when it is not currently on loan and can be borrowed by patrons.",
        "FOL": "∀x ∀y (Book(x) ∧ Library(y) ∧ ¬OnLoan(x) ∧ InLibrary(x, y) → AvailableForBorrowing(x, y))"
    },
    {
        "NL": "A vehicle is considered a hybrid if it uses both a gasoline engine and an electric motor for propulsion.",
        "FOL": "∀x (Vehicle(x) ∧ GasolineEngine(x) ∧ ElectricMotor(x) → Hybrid(x))"
    },
    {
        "NL": "A tree provides shade if it has a dense canopy and a large number of branches.",
        "FOL": "∀x (Tree(x) ∧ DenseCanopy(x) ∧ LargeNumberOfBranches(x) → ProvidesShade(x))"
    },
    {
        "NL": "Natural selection is a process by which organisms with certain heritable traits have a greater chance of survival and reproduction, leading to the spread of those traits in the population over generations.",
        "FOL": "∀x∀y∀z (NaturalSelection(x) ∧ Organism(y) ∧ HeritableTraits(y, z) → (GreaterChanceOfSurvivalAndReproduction(y) ∧ SpreadOfTraits(z) ∧ PopulationOverGenerations(z)))"
    },
    {
        "NL": "A celestial body that emits light and has a significant gravitational pull is called a star.",
        "FOL": "∀x (CelestialBody(x) ∧ EmitsLight(x) ∧ SignificantGravitationalPull(x) → Star(x))"
    },
    {
        "NL": "A map has a scale and a legend.",
        "FOL": "∀x (Map(x) → (∃y ScaleOf(x, y) ∧ ∃z LegendOf(x, z)))"
    },
    {
        "NL": "A player wins a chess game if they put their opponent in checkmate.",
        "FOL": "∀x (Player(x) ∧ Checkmate(x) → WinsChessGame(x))"
    },
    {
        "NL": "Treatment can control a health condition by producing safeguard against it.",
        "FOL": "∀x ∀y (Treatment(x) ∧ HealthCondition(y) → (Controls(x, y) → ProducesSafeguard(x, y)))"
    },
    {
        "NL": "A building designed for the performance of music, theater, and other arts with a large stage and seating for an audience is a theater.",
        "FOL": "∀x ∀y ∀z (Building(x) ∧ Performance(y) ∧ MusicTheaterArts(z) ∧ DesignedFor(x, y, z) ∧ LargeStage(x) ∧ AudienceSeating(x) → Theater(x))"
    },
    {
        "NL": "A musical instrument is a string instrument if it produces sound by vibrating strings and is not a percussion or wind instrument.",
        "FOL": "∀x (MusicalInstrument(x) → ((VibratingStrings(x) ∧ ¬Percussion(x) ∧ ¬Wind(x)) ↔ StringInstrument(x)))"
    },
    {
        "NL": "An artist uses a canvas, paint, and brushes to create a painting with a unique style.",
        "FOL": "∀x∀y∀z∀w (Artist(x) ∧ Canvas(y) ∧ Paint(z) ∧ Brushes(w) ∧ UniqueStyle(x) → CreatePainting(x, y, z, w))"
    },
    {
        "NL": "A place is considered a gym if it is a facility equipped with exercise machines and weights for physical fitness and training.",
        "FOL": "∀x (Gym(x) ↔ (FacilityWithExerciseMachinesAndWeights(x) ∧ ForPhysicalFitnessAndTraining(x)))"
    },
    {
        "NL": "A scientist conducts experiments to test hypotheses and draw conclusions.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Experiment(y) ∧ Hypothesis(z) → (Conducts(x, y) ∧ Tests(x, z) ∧ DrawsConclusion(x, z)))"
    },
    {
        "NL": "A planet orbits a star if it is not a satellite of another celestial body and is not a star itself.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ ¬SatelliteOf(x, z) ∧ ¬Star(x) → Orbits(x, y))"
    },
    {
        "NL": "Not every piece of art is timeless, yet, it's enjoyable to view art.",
        "FOL": "¬∀x (Art(x) → Timeless(x)) ∧ ∀y (Art(y) → EnjoyableView(y))"
    },
    {
        "NL": "All cats have whiskers and sharp claws.",
        "FOL": "∀x (Cat(x) → (HasWhiskers(x) ∧ HasSharpClaws(x)))"
    },
    {
        "NL": "Not all songs have lyrics.",
        "FOL": "¬∀x (Song(x) → HasLyrics(x))"
    },
    {
        "NL": "A fast car overtakes a slower one.",
        "FOL": "∃x (Fast(x) ∧ Car(x) → ∃y (Overtakes(x, y)))"
    },
    {
        "NL": "If a fruit is an apple, then it is not a banana.",
        "FOL": "∀x (Apple(x) → ¬Banana(x))"
    },
    {
        "NL": "A substance is a liquid at room temperature if it has a definite volume but takes the shape of its container.",
        "FOL": "∀x (Substance(x) ∧ DefiniteVolume(x) ∧ TakesShapeOfContainer(x) ∧ RoomTemperature(x) → Liquid(x))"
    },
    {
        "NL": "A flower is a rose or tulip.",
        "FOL": "∀x (Flower(x) → (Rose(x) ∨ Tulip(x)))"
    },
    {
        "NL": "Graffiti is a form of art that involves writing or drawing on walls, buildings, or other surfaces in public spaces.",
        "FOL": "∀x (Graffiti(x) → (ArtForm(x) ∧ InvolvesWritingOrDrawingOnWalls(x) ∧ InPublicSpaces(x)))"
    },
    {
        "NL": "An artist x exhibits artwork y in gallery z if x created y and z accepts y for display.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Artwork(y) ∧ Gallery(z) ∧ Created(x, y) ∧ AcceptsForDisplay(z, y) → Exhibits(x, y, z))"
    },
    {
        "NL": "Vegetables that are crisp and raw require further cooking.",
        "FOL": "∀x (Vegetable(x) ∧ Crisp(x) ∧ Raw(x) → RequiresCooking(x))"
    },
    {
        "NL": "A student becomes a graduate after completing their required coursework and passing final exams.",
        "FOL": "∀x (Student(x) ∧ CompletedCoursework(x) ∧ PassedFinals(x) → Graduate(x))"
    },
    {
        "NL": "There is no book that covers all complex topics.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Complex(y) ∧ Topic(y) → Covers(x, y)))"
    },
    {
        "NL": "No polygons are ellipses.",
        "FOL": "¬∃x (Polygon(x) ∧ Ellipse(x))"
    },
    {
        "NL": "Books are informative, movies are entertaining, and songs are melodious.",
        "FOL": "∀x (Book(x) → Informative(x)) ∧ ∀y (Movie(y) → Entertaining(y)) ∧ ∀z (Song(z) → Melodious(z))"
    },
    {
        "NL": "A computer program compiles successfully if the source code is free of syntax errors and the compiler is up-to-date.",
        "FOL": "∀x ∀y ∀z (ComputerProgram(x) ∧ SourceCode(y) ∧ Compiler(z) ∧ SyntaxErrorFree(y) ∧ UpToDate(z) → CompilesSuccessfully(x))"
    },
    {
        "NL": "Bees collect nectar from flowers to make honey.",
        "FOL": "∀x∀y∀z (Bee(x) ∧ Nectar(y) ∧ Flower(z) ∧ CollectsFrom(x, y, z) → MakesHoney(x))"
    },
    {
        "NL": "A movie is either a comedy or a drama, but not both.",
        "FOL": "∀v (Movie(v) → (Comedy(v) ⊕ Drama(v)))"
    },
    {
        "NL": "Scientific experiments require a hypothesis, a control group, and a variable group.",
        "FOL": "∀x (ScientificExperiment(x) → (HasHypothesis(x) ∧ HasControlGroup(x) ∧ HasVariableGroup(x)))"
    },
    {
        "NL": "No restaurant is perfect unless it has been managed professionally, but not all of them are customer-centric.",
        "FOL": "¬∃x (Restaurant(x) ∧ Perfect(x) ∨ ManagedProfessionally(x)) ∧ ¬∀y (Restaurant(y) → CustomerCentric(y))"
    },
    {
        "NL": "Bicycles have two wheels, while tricycles have three wheels and motorcycles have two wheels and an engine.",
        "FOL": "∀x (Bicycle(x) → HasWheels(x, 2)) ∧ ∀y (Tricycle(y) → HasWheels(y, 3)) ∧ ∀z (Motorcycle(z) → (HasWheels(z, 2) ∧ HasEngine(z)))"
    },
    {
        "NL": "Some people either jog or swim, but do not do both.",
        "FOL": "∃x (People(x) ∧ (Jog(x) ⊕ Swim(x)))"
    },
    {
        "NL": "A teacher instructs students on a subject, assigns homework, and assesses their performance through tests and exams.",
        "FOL": "∀x∀y∀z (Teacher(x) ∧ Students(y) ∧ Subject(z) → (InstructsOn(x, y, z) ∧ AssignsHomework(x, y) ∧ AssessesPerformance(x, y)))"
    },
    {
        "NL": "Some numbers are either odd or even.",
        "FOL": "∃x (Number(x) ∧ (Odd(x) ⊕ Even(x)))"
    },
    {
        "NL": "An oak tree produces acorns, which are eaten by various animals such as squirrels and deer, while a maple tree produces winged seeds that are dispersed by the wind.",
        "FOL": "∀x∀y∀z (OakTree(x) ∧ MapleTree(y) ∧ Animal(z) → (ProducesAcorns(x) ∧ EatenBy(z, x) ∧ (Squirrel(z) ∨ Deer(z))) ∧ (ProducesWingedSeeds(y) ∧ DispersedByWind(y)))"
    },
    {
        "NL": "Books are made of paper, while e-books are digital.",
        "FOL": "∀x ∀y (Book(x) ∧ EBook(y) → (MadeOfPaper(x) ∧ ¬MadeOfPaper(y) ∧ Digital(y) ∧ ¬Digital(x)))"
    },
    {
        "NL": "Birds can fly, fish can swim, and snakes can slither.",
        "FOL": "∀x∀y∀z (Bird(x) ∧ Fish(y) ∧ Snake(z) → (CanFly(x) ∧ CanSwim(y) ∧ CanSlither(z)))"
    },
    {
        "NL": "A dish is referred to as a salad if it is fresh and prepared using vegetables and dressing.",
        "FOL": "∀x (Dish(x) ∧ Fresh(x) ∧ PreparedByVegetables(x) ∧ PreparedByDressing(x) → Salad(x))"
    },
    {
        "NL": "A printer, when connected to a computer and provided with paper and ink, can print documents or images on paper.",
        "FOL": "∀x ∀y ∀z (Printer(x) ∧ ConnectedToComputer(x, y) ∧ ProvidedWithPaperAndInk(x, z) → CanPrintDocumentsOrImages(x))"
    },
    {
        "NL": "A profitable investment strategy balances risk, return, and diversification.",
        "FOL": "∀x (InvestmentStrategy(x) → (Profitable(x) ↔ (BalancedRisk(x) ∧ BalancedReturn(x) ∧ Diversification(x))))"
    },
    {
        "NL": "Some insects can fly, have six legs, and are small, but not all are pests.",
        "FOL": "∃x (Insect(x) ∧ CanFly(x) ∧ HasSixLegs(x) ∧ IsSmall(x) ∧ ¬(∀y (Insect(y) → IsPest(y))))"
    },
    {
        "NL": "If a shape is a circle, then it is not a triangle.",
        "FOL": "∀x (Circle(x) → ¬Triangle(x))"
    },
    {
        "NL": "A girl is reading a book in the library.",
        "FOL": "∃x ∃y ∃z (Girl(x) ∧ Book(y) ∧ Library(z) ∧ Reading(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A camera captures images and can be digital or analog.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∧ (Digital(x) ∨ Analog(x))))"
    },
    {
        "NL": "A company that values employee input and feedback is more likely to make informed decisions and foster a sense of ownership among its workforce.",
        "FOL": "∀x (ValuesEmployeeInputAndFeedback(x) → (MakeInformedDecisions(x) ∧ FosterSenseOfOwnershipAmongWorkforce(x)))"
    },
    {
        "NL": "Wearing sunscreen can protect the skin from harmful ultraviolet rays when spending time outdoors.",
        "FOL": "∀x ∀y ∀z (Sunscreen(x) ∧ Wears(y, x) ∧ Outdoors(z) → ProtectsFromUV(y, z))"
    },
    {
        "NL": "A bird can fly, be flightless, or be able to fly but choose not to.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ∨ Flightless(x) ∨ (CanFly(x) ∧ ¬ChoosesToFly(x))))"
    },
    {
        "NL": "There does not exist a pyramid that points to all small rectangles.",
        "FOL": "¬∃x (Pyramid(x) ∧ ∀y (Small(y) ∧ Rectangle(y) → PointsTo(x, y)))"
    },
    {
        "NL": "A novel becomes a bestseller if it has a captivating plot, well-developed characters, and receives widespread critical acclaim.",
        "FOL": "∀x (Novel(x) ∧ CaptivatingPlot(x) ∧ WellDevelopedCharacters(x) ∧ WidespreadCriticalAcclaim(x) → Bestseller(x))"
    },
    {
        "NL": "An animal is considered a reptile if it has scales and is cold-blooded.",
        "FOL": "∀x (Animal(x) ∧ HasScales(x) ∧ ColdBlooded(x) → Reptile(x))"
    },
    {
        "NL": "Every planet is either a gas giant or a terrestrial planet, but not both.",
        "FOL": "∀x (Planet(x) → (GasGiant(x) ⊕ Terrestrial(x)))"
    },
    {
        "NL": "A bird can fly if it is not injured and it is not a penguin or an ostrich.",
        "FOL": "∀x (Bird(x) → CanFly(x) ↔ (¬Injured(x) ∧ ¬(Penguin(x) ∨ Ostrich(x))))"
    },
    {
        "NL": "An informative lecture engages the audience, clearly explains concepts, and encourages questions.",
        "FOL": "∀x (Lecture(x) ∧ Informative(x) → (EngagesAudience(x) ∧ ClearlyExplainsConcepts(x) ∧ EncouragesQuestions(x)))"
    },
    {
        "NL": "A company achieves success if it offers quality products, maintains good customer service, and manages its finances well.",
        "FOL": "∀x ∀y ∀z (Company(x) ∧ Products(y) ∧ CustomerService(z) → (AchievesSuccess(x) ↔ (Quality(y) ∧ Good(z) ∧ ManagesFinancesWell(x))))"
    },
    {
        "NL": "A product is successful in the market when it has a competitive price, high quality, and a strong brand image, but not if it lacks essential features.",
        "FOL": "∀x (Product(x) ∧ MarketSuccess(x) ↔ (CompetitivePrice(x) ∧ HighQuality(x) ∧ StrongBrandImage(x) ∧ ¬LacksEssentialFeatures(x)))"
    },
    {
        "NL": "A vessel is a submarine if it is designed to travel underwater, can operate autonomously, and is used for military or scientific purposes.",
        "FOL": "∀x (Submarine(x) → (Vessel(x) ∧ DesignedForUnderwater(x) ∧ OperatesAutonomously(x) ∧ (∃y (MilitaryPurpose(y) ∧ UsedFor(x, y)) ∨ ∃z (ScientificPurpose(z) ∧ UsedFor(x, z)))))"
    },
    {
        "NL": "A vacation destination is appealing when it offers beautiful scenery, diverse activities, and comfortable accommodations.",
        "FOL": "∀x ∀y (VacationDestination(x) ∧ BeautifulScenery(y) ∧ DiverseActivities(x) ∧ ComfortableAccommodations(x) → Appealing(x))"
    },
    {
        "NL": "An owl is resting in a tree, and a mouse is nibbling on some cheese.",
        "FOL": "∃x ∃y (Owl(x) ∧ Tree(y) ∧ RestingIn(x, y)) ∧ ∃z ∃w (Mouse(z) ∧ Cheese(w) ∧ NibblingOn(z, w))"
    },
    {
        "NL": "Trees grow taller in the presence of sunlight and water.",
        "FOL": "∀x ∀y ∀z (Tree(x) ∧ Sunlight(y) ∧ Water(z) → (InPresenceOf(x, y) ∧ InPresenceOf(x, z) → GrowsTaller(x)))"
    },
    {
        "NL": "An artist can win a Grammy for best composition, best arrangement, or best instrumental performance, but not all three simultaneously.",
        "FOL": "∀x (Artist(x) ∧ WinsGrammy(x) → (BestCompositionAward(x) ⊕ BestArrangementAward(x) ⊕ BestInstrumentalPerformance(x)))"
    },
    {
        "NL": "A computer system is secure when it has strong encryption, a reliable firewall, and regular software updates.",
        "FOL": "∀x ∀y ∀z (ComputerSystem(x) ∧ StrongEncryption(x, y) ∧ ReliableFirewall(x, z) ∧ RegularSoftwareUpdates(x) → Secure(x))"
    },
    {
        "NL": "Birds can fly or swim, but not both.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ⊕ CanSwim(x)))"
    },
    {
        "NL": "There isn't a cook who can prepare all Chinese dishes but hasn't ever cooked a Japanese dish.",
        "FOL": "¬∃x (Cook(x) ∧ ∀y (ChineseDish(y) → CanPrepare(x, y)) ∧ ¬∃z (JapaneseDish(z) ∧ HasCooked(x, z)))"
    },
    {
        "NL": "A person is considered a friend of another person if they have a mutual affection and trust in each other.",
        "FOL": "∀x ∀y (MutualAffection(x, y) ∧ Trust(x, y) → Friend(x, y))"
    },
    {
        "NL": "If there are no masterpieces, then no reviewer admires any film.",
        "FOL": "¬∃x (Masterpiece(x)) → ¬∃y (Reviewer(y) ∧ ∃z (Film(z) ∧ Admire(y, z)))"
    },
    {
        "NL": "If a creature is a big elephant or a small mouse, then it's either fast or slow, but not both.",
        "FOL": "∀x ((Big(x) ∧ Elephant(x)) ∨ (Small(x) ∧ Mouse(x)) → (Fast(x) ⊕ Slow(x)))"
    },
    {
        "NL": "A weather condition is considered foggy if visibility is reduced due to suspended water droplets in the air.",
        "FOL": "∀x (WeatherCondition(x) ∧ ReducedVisibility(x) ∧ SuspendedWaterDroplets(x) → Foggy(x))"
    },
    {
        "NL": "A circle is uniquely defined by its center and radius.",
        "FOL": "∀x∀y∀z (Circle(x) ∧ Center(y) ∧ Radius(z) → UniquelyDefined(x, y, z))"
    },
    {
        "NL": "An insulator is a material that resists the flow of electric charge, preventing the transfer of electricity and protecting against electric shock.",
        "FOL": "∀x (Insulator(x) → (ResistsFlowOfElectricCharge(x) ∧ PreventsTransferOfElectricity(x) ∧ ProtectsAgainstElectricShock(x)))"
    },
    {
        "NL": "A theme park has attractions for different age groups, like children, teenagers, and adults, and offers various entertainment options, such as roller coasters, shows, and games.",
        "FOL": "∀x∀y∀z (ThemePark(x) ∧ (ChildrenAttraction(y) ∨ TeenagersAttraction(y) ∨ AdultsAttraction(y)) ∧ (RollerCoaster(z) ∨ Show(z) ∨ Game(z)) → HasAttractionsAndEntertainmentOptions(x, y, z))"
    },
    {
        "NL": "A car can be driven on gasoline or electricity.",
        "FOL": "∀x (Car(x) → (DrivesOnGasoline(x) ∨ DrivesOnElectricity(x)))"
    },
    {
        "NL": "A material is buoyant if its density is less than the density of the fluid in which it is submerged, allowing it to float or rise to the surface.",
        "FOL": "∀x ∀y (Material(x) ∧ FluidDensity(y) ∧ DensityLessThanFluidDensity(x, y) → Buoyant(x))"
    },
    {
        "NL": "If one integer is less than another, then there is an integer between them.",
        "FOL": "∀x ∀y ∃z (Integer(x) ∧ Integer(y) ∧ Integer(z) ∧ LessThan(x, y) → Between(z, x, y))"
    },
    {
        "NL": "A company's stock price increases when it reports positive financial results or announces a new product, but not when facing a scandal.",
        "FOL": "∀x (Company(x) → (StockPriceIncreases(x) ↔ ((PositiveFinancialResults(x) ∨ NewProductAnnouncement(x)) ∧ ¬FacingScandal(x))))"
    },
    {
        "NL": "Not every song is beautiful, but every beautiful song evokes emotions.",
        "FOL": "¬∀x (Song(x) → Beautiful(x)) ∧ ∀y (Beautiful(y) ∧ Song(y) → EvokesEmotion(y))"
    },
    {
        "NL": "A place is considered a park if it is an outdoor public space with greenery, recreational facilities, and areas for relaxation and enjoyment.",
        "FOL": "∀x (Park(x) ↔ (OutdoorPublicSpace(x) ∧ Greenery(x) ∧ RecreationalFacilities(x) ∧ RelaxationAndEnjoymentAreas(x)))"
    },
    {
        "NL": "A seed needs water, nutrients, and sunlight to germinate and grow into a plant.",
        "FOL": "∀x (Seed(x) ∧ Water(w) ∧ Nutrients(n) ∧ Sunlight(s) → GerminatesAndGrowsInto(x, w, n, s))"
    },
    {
        "NL": "A coin shows either heads or tails.",
        "FOL": "∀x (Coin(x) → (Heads(x) ∨ Tails(x)))"
    },
    {
        "NL": "Universities with renowned faculty, ample funding, and diverse research programs are considered prestigious.",
        "FOL": "∀x (University(x) ∧ RenownedFaculty(x) ∧ AmpleFunding(x) ∧ DiverseResearch(x) → Prestigious(x))"
    },
    {
        "NL": "An animal is classified as a reptile if it has scales, is cold-blooded, and usually lays eggs.",
        "FOL": "∀x (Animal(x) ∧ HasScales(x) ∧ ColdBlooded(x) ∧ UsuallyLaysEggs(x) → Reptile(x))"
    },
    {
        "NL": "Snakes shed their skin periodically, whereas fish have scales and do not shed skin.",
        "FOL": "∀x ∀y (Snake(x) ∧ Fish(y) → (ShedsSkin(x) ∧ HasScales(y) ∧ ¬ShedsSkin(y)))"
    },
    {
        "NL": "A destination is appealing for vacation if it's not crowded and offers cultural or outdoor activities.",
        "FOL": "∀x (Destination(x) ∧ ¬Crowded(x) ∧ (CulturalActivities(x) ∨ OutdoorActivities(x)) → AppealingForVacation(x))"
    },
    {
        "NL": "A museum that displays a diverse range of artifacts and offers interactive exhibits can provide an engaging educational experience.",
        "FOL": "∀x ∀y (Museum(x) ∧ DisplaysDiverseRangeOfArtifacts(x) ∧ OffersInteractiveExhibits(x) → ProvidesEngagingEducationalExperience(y))"
    },
    {
        "NL": "A factory manufactures products if it has a sufficient supply of raw materials and adequate manpower.",
        "FOL": "∀x (Factory(x) ∧ SufficientRawMaterials(x) ∧ AdequateManpower(x) → ManufacturesProducts(x))"
    },
    {
        "NL": "A strawberry is red, a blueberry is blue, and a raspberry can be red or yellow.",
        "FOL": "∀x ∀y ∀z (Strawberry(x) ∧ Blueberry(y) ∧ Raspberry(z) → (Red(x) ∧ Blue(y) ⊕ (Red(z) ∨ Yellow(z))))"
    },
    {
        "NL": "All office workers either like the new policy or find the workload unbearable.",
        "FOL": "∀x (OfficeWorker(x) → (LikesNewPolicy(x) ∨ FindsWorkloadUnbearable(x)))"
    },
    {
        "NL": "Dogs bark at strangers.",
        "FOL": "∀x ∀y (Dog(x) ∧ Stranger(y) → BarkAt(x, y))"
    },
    {
        "NL": "A restaurant is good if and only if its food is delicious and the service is great, but it doesn't have high prices.",
        "FOL": "∀x (Restaurant(x) ∧ Good(x) ↔ (DeliciousFood(x) ∧ GreatService(x) ∧ ¬HighPrices(x)))"
    },
    {
        "NL": "Some humans listen to Tom.",
        "FOL": "∃x (Human(x) ∧ Listen(x, tom))"
    },
    {
        "NL": "Astronomers observe celestial objects and phenomena to better understand the universe.",
        "FOL": "∀x (Astronomer(x) → ObserveCelestialObjects(x) ∧ UnderstandUniverse(x))"
    },
    {
        "NL": "A meal is satisfying if it includes proteins and carbohydrates, or if it is rich in vitamins and minerals.",
        "FOL": "∀x (Meal(x) → (Satisfying(x) ↔ ((Proteins(x) ∧ Carbohydrates(x)) ∨ (Vitamins(x) ∧ Minerals(x)))))"
    },
    {
        "NL": "An object that can be used as a seat and is not a chair could be a stool, a bench, or a beanbag.",
        "FOL": "∀x (Object(x) ∧ Seat(x) ∧ ¬Chair(x) → (Stool(x) ∨ Bench(x) ∨ Beanbag(x)))"
    },
    {
        "NL": "A television network broadcasts a variety of programs, including news, sports, and entertainment, reaching viewers through cable, satellite, or streaming services.",
        "FOL": "∀x ∀y ∀z (TelevisionNetwork(x) → (BroadcastsVarietyOfPrograms(x) ∧ BroadcastsNews(x, y) ∧ BroadcastsSports(x, y) ∧ BroadcastsEntertainment(x, y) ∧ ReachesViewersThroughCableSatelliteOrStreaming(x, z)))"
    },
    {
        "NL": "A drought negatively affects the growth and survival of plants, leading to a decrease in the productivity of an ecosystem.",
        "FOL": "∀x ∀y (Drought(x) ∧ Ecosystem(y) → NegativelyAffectsGrowthAndSurvival(x) ∧ DecreasesProductivity(y))"
    },
    {
        "NL": "A computer program is efficient when it consumes minimal resources and produces accurate results quickly.",
        "FOL": "∀x ∀y (ComputerProgram(x) ∧ MinimalResources(y) ∧ AccurateResults(x) ∧ QuickOutput(x) → Efficient(x))"
    },
    {
        "NL": "If a person is highly organized, they are more likely to meet deadlines and complete tasks efficiently.",
        "FOL": "∀x (HighlyOrganized(x) → (MeetDeadlines(x) ∧ CompleteTasksEfficiently(x)))"
    },
    {
        "NL": "A magnifying glass enlarges an image by bending light through a convex lens.",
        "FOL": "∀x (MagnifyingGlass(x) → (EnlargesImage(x) ∧ BendsLight(x) ∧ HasConvexLens(x)))"
    },
    {
        "NL": "A country has a developed economy if its GDP per capita is high and it maintains low levels of unemployment and poverty.",
        "FOL": "∀x (Country(x) ∧ HighGDPPerCapita(x) ∧ LowUnemployment(x) ∧ LowPoverty(x) → DevelopedEconomy(x))"
    },
    {
        "NL": "Every scholar read at least one journal.",
        "FOL": "∀x (Scholar(x) → ∃y (Journal(y) ∧ Read(x, y)))"
    },
    {
        "NL": "Some animals are both herbivores and nocturnal.",
        "FOL": "∃x (Animal(x) ∧ Herbivore(x) ∧ Nocturnal(x))"
    },
    {
        "NL": "A flower needs water and sunlight to grow.",
        "FOL": "∀x (Flower(x) → (NeedsWater(x) ∧ NeedsSunlight(x)))"
    },
    {
        "NL": "A train station serves passengers by offering ticketing services, boarding facilities, and information on train schedules.",
        "FOL": "∀x (TrainStation(x) ∧ OffersTicketingServices(x) ∧ OffersBoardingFacilities(x) ∧ OffersTrainScheduleInfo(x) → ServesPassengers(x))"
    },
    {
        "NL": "Maria is a doctor if and only if she is not a nurse.",
        "FOL": "Doctor(maria) ↔ ¬Nurse(maria)"
    },
    {
        "NL": "Every author who acknowledges an editor is acknowledged by the same editor.",
        "FOL": "∀x ∀y (Author(x) ∧ Editor(y) ∧ Acknowledges(x, y) → Acknowledges(y, x))"
    },
    {
        "NL": "A movie is captivating if it has either a good storyline or impressive special effects.",
        "FOL": "∀x (Movie(x) ∧ (GoodStoryline(x) ∨ ImpressiveSpecialEffects(x)) → Captivating(x))"
    },
    {
        "NL": "A city is attractive to tourists if it has historical sites or natural beauty, but not if it has a high crime rate.",
        "FOL": "∀x (City(x) → (AttractiveToTourists(x) ↔ ((HistoricalSites(x) ∨ NaturalBeauty(x)) ∧ ¬HighCrimeRate(x))))"
    },
    {
        "NL": "An event is considered a festival if it involves a series of public celebrations, showcases cultural or artistic expressions, and typically occurs annually.",
        "FOL": "∀x (Event(x) ∧ SeriesOfPublicCelebrations(x) ∧ ShowcasesCulturalOrArtisticExpressions(x) ∧ TypicallyOccursAnnually(x) → Festival(x))"
    },
    {
        "NL": "There isn't a single red cube.",
        "FOL": "¬∃x (Cube(x) ∧ Red(x))"
    },
    {
        "NL": "A park is suitable for picnics if it has grassy areas and is not overcrowded.",
        "FOL": "∀x (Park(x) → (SuitableForPicnics(x) ↔ (GrassyAreas(x) ∧ ¬Overcrowded(x))))"
    },
    {
        "NL": "Greenhouses use sunlight to create a warm environment suitable for growing plants.",
        "FOL": "∀x∀y∀z (Greenhouse(x) ∧ Sunlight(y) ∧ WarmEnvironment(z) → (UsesSunlight(x, y) ∧ Creates(x, z) ∧ SuitableForGrowingPlants(z)))"
    },
    {
        "NL": "A book is a memoir if it narrates the personal history of the author.",
        "FOL": "∀x ∃y (Book(x) ∧ Person(y) ∧ NarratesPersonalHistory(x, y) ∧ AuthoredBy(x, y) → Memoir(x))"
    },
    {
        "NL": "Some cats are fluffy and some cats are short, but there are no fluffy and short cats.",
        "FOL": "∃x (Fluffy(x)) ∧ ∃x (Short(x)) ∧ ¬∃x (Fluffy(x) ∧ Short(x))"
    },
    {
        "NL": "A scientific theory is accepted when it explains observed phenomena, has been verified through experiments, and is supported by a majority of experts in the field.",
        "FOL": "∀x∀y∀z (ScientificTheory(x) ∧ ExplainsObservedPhenomena(x, y) ∧ VerifiedExperiments(x, z) ∧ MajorityExpertSupport(x) → Accepted(x))"
    },
    {
        "NL": "An aquarium houses aquatic life and offers educational exhibits.",
        "FOL": "∀x (Aquarium(x) → (HousesAquaticLife(x) ∧ OffersEducation(x)))"
    },
    {
        "NL": "A squirrel is climbing on a hedge, and a bee is hovering over flowers.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Hedge(y) ∧ ClimbingOn(x, y)) ∧ ∃z (Bee(z) ∧ HoveringOver(z) ∧ Flowers(z))"
    },
    {
        "NL": "A person is a plumber if they are trained and licensed to install, repair, and maintain plumbing systems.",
        "FOL": "∀x (Plumber(x) ↔ (Person(x) ∧ Trained(x) ∧ Licensed(x) ∧ InstallsPlumbingSystems(x) ∧ RepairsPlumbingSystems(x) ∧ MaintainsPlumbingSystems(x)))"
    },
    {
        "NL": "A chef cooks for certain customers, designs meals for them, and ensures their satisfaction.",
        "FOL": "∀x ∃y (Chef(x) → Customer(y) ∧ Cooks(x, y) ∧ DesignsMeals(x, y) ∧ EnsuresSatisfaction(x, y))"
    },
    {
        "NL": "A book is a textbook if its content is primarily educational and it is designed for use in formal learning environments.",
        "FOL": "∀x (Textbook(x) ↔ (Book(x) ∧ PrimarilyEducationalContent(x) ∧ DesignedForUseInFormalLearningEnvironments(x)))"
    },
    {
        "NL": "All humans are rational beings.",
        "FOL": "∀x (Human(x) → RationalBeing(x))"
    },
    {
        "NL": "A caterpillar transforms into a butterfly during metamorphosis.",
        "FOL": "∀x (Caterpillar(x) ∧ Metamorphosis(x) → TransformsIntoButterfly(x))"
    },
    {
        "NL": "A bird flies in the sky, while a fish swims in the sea.",
        "FOL": "∀x (Bird(x) → FliesInSky(x)) ∧ ∀y (Fish(y) → SwimsInSea(y))"
    },
    {
        "NL": "An event is a music festival if it features live music performances, takes place over multiple days, and attracts a large audience.",
        "FOL": "∀x (MusicFestival(x) ↔ (Event(x) ∧ FeaturesLiveMusic(x) ∧ TakesPlaceOverMultipleDays(x) ∧ AttractsLargeAudience(x)))"
    },
    {
        "NL": "A dress is blue or red, but not both.",
        "FOL": "∀x (Dress(x) → (Blue(x) ⊕ Red(x)))"
    },
    {
        "NL": "In a chemical reaction, reactants combine to form products, which are new substances that result from the rearrangement of atoms and the breaking or forming of chemical bonds.",
        "FOL": "∀x∀y∀z (ChemicalReaction(x) ∧ Reactant(y) ∧ Product(z) → (Combines(y) ∧ Forms(x, z) ∧ RearrangesAtoms(x) ∧ BreaksOrFormsChemicalBonds(x)))"
    },
    {
        "NL": "A door is either open or closed, not both at once.",
        "FOL": "∀x (Door(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "Some students are either undergraduates or postgraduates.",
        "FOL": "∃x (Student(x) ∧ (Undergraduate(x) ⊕ Postgraduate(x)))"
    },
    {
        "NL": "Scientists conduct experiments and analyze data to test hypotheses and develop new knowledge.",
        "FOL": "∀x (Scientist(x) → (ConductsExperiments(x) ∧ AnalyzesData(x) ∧ TestsHypotheses(x) ∧ DevelopsNewKnowledge(x)))"
    },
    {
        "NL": "A bird can fly long distances if it has strong wings and a lightweight body.",
        "FOL": "∀x (Bird(x) → (CanFlyLongDistances(x) ↔ (HasStrongWings(x) ∧ HasLightweightBody(x))))"
    },
    {
        "NL": "A game is basketball or soccer.",
        "FOL": "∀x (Game(x) → (Basketball(x) ∨ Soccer(x)))"
    },
    {
        "NL": "Each person works out if no gyms are open.",
        "FOL": "¬∀x (Gym(x) → Open(x)) → ∀y (Person(y) → WorksOut(y))"
    },
    {
        "NL": "There is an album that all songs belong to, given it is not the case that all musicians are talented.",
        "FOL": "¬∀x (Musician(x) → Talented(x)) → ∃y (Album(y) ∧ ∀z (Song(z) → BelongsTo(z, y)))"
    },
    {
        "NL": "An airplane can either land at an airport or make an emergency landing.",
        "FOL": "∀x (Airplane(x) → (LandsAtAirport(x) ⊕ EmergencyLanding(x)))"
    },
    {
        "NL": "Rainwater can be collected and stored in tanks for later use in irrigation or household purposes.",
        "FOL": "∀x (Rainwater(x) → (CanBeCollected(x) ∧ StoredInTanks(x) ∧ UsedForIrrigationOrHousehold(x)))"
    },
    {
        "NL": "A student must complete homework or attend tutoring sessions, but not both, to improve their grades.",
        "FOL": "∀x (Student(x) → ((CompletesHomework(x) ⊕ AttendsTutoring(x)) ∧ ¬(CompletesHomework(x) ∧ AttendsTutoring(x))))"
    },
    {
        "NL": "There are athletes who trust only those coaches who are more skilled than them.",
        "FOL": "∃x ∀y (Athlete(x) ∧ Coach(y) ∧ MoreSkilledThan(y, x) → Trust(x, y))"
    },
    {
        "NL": "An earthquake occurs when tectonic plates shift, releasing energy in the form of seismic waves that propagate through the Earth's crust.",
        "FOL": "∀x ∀y ∀z (Earthquake(x) ∧ TectonicPlate(y) ∧ SeismicWave(z) ∧ ShiftsAndReleasesEnergy(y, z) → Occurs(x))"
    },
    {
        "NL": "A snake is a reptile, a parrot is a bird, and a salmon is a fish.",
        "FOL": "∀x ∀y ∀z (Snake(x) ∧ Parrot(y) ∧ Salmon(z) → (Reptile(x) ∧ Bird(y) ∧ Fish(z)))"
    },
    {
        "NL": "A vehicle is not a bicycle if it has an engine, but it could be a motorcycle or a car if it has wheels.",
        "FOL": "∀x (Vehicle(x) ∧ Engine(x) → (¬Bicycle(x) ∧ (HasWheels(x) → (Motorcycle(x) ∨ Car(x)))))"
    },
    {
        "NL": "None but the persistent reach the peak.",
        "FOL": "∀x (¬Persistent(x) → ¬ReachPeak(x))"
    },
    {
        "NL": "An investor achieves success in the stock market when they consistently make profitable trades, minimize risk, and maintain a diverse portfolio.",
        "FOL": "∀x (Investor(x) → (StockMarketSuccess(x) ↔ (ConsistentlyProfitableTrades(x) ∧ MinimizeRisk(x) ∧ DiversePortfolio(x))))"
    },
    {
        "NL": "A celestial object that orbits a star and has a stable atmosphere is classified as a planet.",
        "FOL": "∀x (CelestialObject(x) ∧ OrbitsStar(x) ∧ StableAtmosphere(x) → Planet(x))"
    },
    {
        "NL": "Brave soldiers do not run away.",
        "FOL": "∀x (Soldier(x) ∧ Brave(x) → ¬RunAway(x))"
    },
    {
        "NL": "An artist is successful if they create thought-provoking artwork or have a unique style, and enjoy commercial success.",
        "FOL": "∀x (Artist(x) → (Successful(x) ↔ ((ThoughtProvokingArtwork(x) ∨ UniqueStyle(x)) ∧ CommercialSuccess(x))))"
    },
    {
        "NL": "If a material is not metal, it is flammable and it floats on water.",
        "FOL": "∀x (Material(x) ∧ ¬Metal(x) → (IsFlammable(x) ∧ FloatsOnWater(x)))"
    },
    {
        "NL": "An object is a rectangle if it's not a square.",
        "FOL": "∀x (¬Square(x) → Rectangle(x))"
    },
    {
        "NL": "An architect is designing a building in the studio, or a scientist is conducting experiments in the lab.",
        "FOL": "∃x ∃y (Architect(x) ∧ Building(y) ∧ Designing(x, y) ∧ InTheStudio(x)) ∨ ∃z ∃w (Scientist(z) ∧ Experiments(w) ∧ Conducting(z, w) ∧ InTheLab(z))"
    },
    {
        "NL": "A piece of writing can be either poetry or prose.",
        "FOL": "∀x (Writing(x) → Poetry(x) ⊕ Prose(x))"
    },
    {
        "NL": "Painters create paintings on canvas.",
        "FOL": "∀x∀y∀z (Painter(x) ∧ Painting(y) ∧ Canvas(z) → CreatesOn(x, y, z))"
    },
    {
        "NL": "A computer is an electronic device that processes data and performs tasks, such as calculation, data storage, and communication.",
        "FOL": "∀x (Computer(x) → (ElectronicDevice(x) ∧ ProcessesData(x) ∧ PerformsTasks(x) ∧ CalculationDataStorageCommunication(x)))"
    },
    {
        "NL": "If a person is a scientist, they conduct research and experiments.",
        "FOL": "∀x (Person(x) ∧ Scientist(x) → (ConductResearch(x) ∧ PerformExperiments(x)))"
    },
    {
        "NL": "A book x is available in library y for reader z if x is part of y's catalog, not currently checked out, and z has a valid library membership.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ Library(y) ∧ Reader(z) ∧ InCatalog(x, y) ∧ NotCheckedOut(x, y) ∧ ValidLibraryMembership(z, y) → Available(x, y, z))"
    },
    {
        "NL": "Everyone who treats life like a chess match will fail.",
        "FOL": "∀x (TreatsLifeLikeChessMatch(x) → WillFail(x))"
    },
    {
        "NL": "A building is deemed safe if it passes a structural inspection and does not have any fire hazards.",
        "FOL": "∀x (Building(x) → (DeemedSafe(x) ↔ (PassedStructuralInspection(x) ∧ ¬FireHazards(x))))"
    },
    {
        "NL": "An electric current generates a magnetic field, which in turn can produce an electric current when it changes.",
        "FOL": "∀x ∀y (ElectricCurrent(x) ∧ MagneticField(y) → Generates(x, y) ∧ (Changes(y) → ProducesCurrent(y, x)))"
    },
    {
        "NL": "A movie wins an award in a film festival if it has a compelling story, exceptional cinematography, and outstanding performances by the actors.",
        "FOL": "∀x∀y (Movie(x) ∧ FilmFestival(y) ∧ CompellingStory(x) ∧ ExceptionalCinematography(x) ∧ OutstandingActorPerformances(x) → WinsAward(x, y))"
    },
    {
        "NL": "Vaccines help protect the body against specific diseases.",
        "FOL": "∀x (Vaccine(x) → (ProtectBody(y) ∧ SpecificDisease(z) ∧ Against(x, y, z)))"
    },
    {
        "NL": "Lisa likes a Tarantino movie if and only if it was screened in 1985.",
        "FOL": "∀x (Movie(x) ∧ DirectedBy(x, tarantino) → (ScreenedInEighteenEightyFive(x) ↔ Likes(lisa, x)))"
    },
    {
        "NL": "An airplane takes off from an airport, travels through the atmosphere, and lands at a destination airport.",
        "FOL": "∀x∀y∀z (Airplane(x) → (TakesOffFromAirport(x, y) ∧ Airport(y) ∧ TravelsThroughAtmosphere(x) ∧ LandsAtDestinationAirport(x, z) ∧ Airport(z)))"
    },
    {
        "NL": "Some desserts are sweet and cold, while others are savory and warm.",
        "FOL": "∃x ∃y (Dessert(x) ∧ Dessert(y) ∧ Sweet(x) ∧ Cold(x) ∧ Savory(y) ∧ Warm(y))"
    },
    {
        "NL": "A kid is playing with a toy car in the garden.",
        "FOL": "∃x ∃y ∃z (Kid(x) ∧ ToyCar(y) ∧ Garden(z) ∧ PlayingWith(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A song is hit if it has catchy music and meaningful lyrics.",
        "FOL": "∀x (Song(x) ∧ HasCatchyMusic(x) ∧ HasMeaningfulLyrics(x) → Hit(x))"
    },
    {
        "NL": "Painters create artworks using different media like oil or acrylic, and their works can be abstract or representational.",
        "FOL": "∀x ∀y (Painter(x) ∧ Medium(y) ∧ (Oil(y) ∨ Acrylic(y)) → (CreatesArtwork(x, y) ∧ (Abstract(x) ⊕ Representational(x))))"
    },
    {
        "NL": "A computer runs efficiently when it has ample memory, operates with a fast processor, and is free of malware.",
        "FOL": "∀x (Computer(x) ∧ AmpleMemory(x) ∧ FastProcessor(x) ∧ MalwareFree(x) → RunsEfficiently(x))"
    },
    {
        "NL": "Tourists visiting historical sites should respect local customs, adhere to regulations, and refrain from causing damage.",
        "FOL": "∀x∀y (Tourist(x) ∧ HistoricalSite(y) ∧ Visits(x, y) → (RespectsLocalCustoms(x) ∧ AdheresToRegulations(x) ∧ ¬CausesDamage(x)))"
    },
    {
        "NL": "Countries share a border if their territories are directly adjacent.",
        "FOL": "∀x∀y (Country(x) ∧ Country(y) ∧ TerritoriesAdjacent(x, y) → ShareBorder(x, y))"
    },
    {
        "NL": "A pet can either be a dog with loyal nature and playful behavior, or a cat with independent spirit and cuddly temperament.",
        "FOL": "∀x (Pet(x) → ((Dog(x) ∧ LoyalNature(x) ∧ PlayfulBehavior(x)) ⊕ (Cat(x) ∧ IndependentSpirit(x) ∧ CuddlyTemperament(x))))"
    },
    {
        "NL": "A painting is considered abstract if it uses non-representational shapes, colors, and forms to convey a visual experience.",
        "FOL": "∀x (Painting(x) ∧ NonRepresentationalShapes(x) ∧ NonRepresentationalColors(x) ∧ NonRepresentationalForms(x) → Abstract(x))"
    },
    {
        "NL": "Some fish are both saltwater and have bioluminescent features.",
        "FOL": "∃x (Fish(x) ∧ Saltwater(x) ∧ HasBioluminescentFeatures(x))"
    },
    {
        "NL": "A remedy can alleviate a disorder by countering its sources.",
        "FOL": "∀x ∀y (Remedy(x) ∧ Disorder(y) → (Alleviates(x, y) → CountersSourcesOf(x, y)))"
    },
    {
        "NL": "If a place is quiet, that place is peaceful.",
        "FOL": "∀x (Place(x) ∧ Quiet(x) → Peaceful(x))"
    },
    {
        "NL": "An asteroid that is on a collision course with Earth poses a significant threat to life on the planet.",
        "FOL": "∀x (Asteroid(x) ∧ CollisionCourseWithEarth(x) → PosesSignificantThreatToLife(x))"
    },
    {
        "NL": "A printer connects to a server and allows workers to print documents and scan photos.",
        "FOL": "∀x (Printer(x) → (ConnectsToServer(x) ∧ AllowsPrintDocuments(x) ∧ AllowsScanPhotos(x)))"
    },
    {
        "NL": "Not every book remains popular, but it's enjoyable to read books.",
        "FOL": "¬∀x (Book(x) → RemainsPopular(x)) ∧ ∀y (Book(y) → EnjoyableToRead(y))"
    },
    {
        "NL": "Planets orbit around stars due to gravity.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) ∧ GravityBetween(x, y) → OrbitsAround(x, y))"
    },
    {
        "NL": "Instruments can be classified as string, brass, or percussion based on their sound production method.",
        "FOL": "∀x (Instrument(x) ∧ (String(x) ⊕ Brass(x) ⊕ Percussion(x)) → SoundProduction(x))"
    },
    {
        "NL": "A person is admired by the leader whom all employees respect",
        "FOL": "∃x ∃y ∀z (Person(x) ∧ Leader(y) ∧ Employee(z) ∧ Respect(z, y) → AdmiredBy(x, y))"
    },
    {
        "NL": "Scientists are not always recognized.",
        "FOL": "∃x (Scientist(x) ∧ ¬Recognized(x))"
    },
    {
        "NL": "An animal is considered a mammal if it has hair or fur, gives birth to live young, and feeds them with milk.",
        "FOL": "∀x (Animal(x) ∧ (HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x) ∧ FeedsYoungWithMilk(x)) → Mammal(x))"
    },
    {
        "NL": "A job is either part-time or full-time, but not both.",
        "FOL": "∀x (Job(x) → (PartTime(x) ⊕ FullTime(x)))"
    },
    {
        "NL": "A planetarium simulates the night sky, displaying stars, planets, and other celestial objects.",
        "FOL": "∀x ∀y ∀z ∀w (Planetarium(x) → (SimulatesNightSky(x) ∧ DisplaysStars(x, y) ∧ DisplaysPlanets(x, z) ∧ DisplaysCelestialObjects(x, w)))"
    },
    {
        "NL": "If it's not blue or green, it must be a hat.",
        "FOL": "∀x ((Blue(x) ∨ Green(x)) → Hat(x))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, and a chain that connects the pedals to the rear wheel.",
        "FOL": "∀x (Bicycle(x) → (TwoWheels(x) ∧ Frame(x) ∧ Chain(x) ∧ ConnectsPedalsToRearWheel(x)))"
    },
    {
        "NL": "A plant absorbs water and nutrients through its roots, transports them to its leaves via the stem, and uses them in the process of photosynthesis to produce glucose and oxygen.",
        "FOL": "∀x∀y∀z (Plant(x) ∧ Roots(y) ∧ Leaves(z) → (AbsorbsWaterAndNutrients(x, y) ∧ TransportsToLeaves(x, y, z) ∧ Photosynthesis(x, z)))"
    },
    {
        "NL": "Some dances are performed solo, while others are performed in pairs.",
        "FOL": "∃x (Dance(x) ∧ Solo(x)) ∧ ∃y (Dance(y) ∧ InPairs(y))"
    },
    {
        "NL": "A person who practices good communication skills is more likely to have positive relationships with others.",
        "FOL": "∀x (GoodCommunicationSkills(x) → PositiveRelationshipsWithOthers(x))"
    },
    {
        "NL": "A book becomes a bestseller when it has a high number of sales or receives critical acclaim.",
        "FOL": "∀x (Book(x) ∧ (HighNumberOfSales(x) ∨ CriticalAcclaim(x)) → Bestseller(x))"
    },
    {
        "NL": "An athletic activity that takes place on a court and involves hitting a ball over a net is classified as a racquet sport.",
        "FOL": "∀x (AthleticActivity(x) ∧ TakesPlaceOnCourt(x) ∧ InvolvesHittingBall(x) ∧ OverNet(x) → RacquetSport(x))"
    },
    {
        "NL": "A healthy meal contains fruits, vegetables, and a source of protein.",
        "FOL": "∀x (Meal(x) ∧ ContainsFruit(x) ∧ ContainsVegetables(x) ∧ ContainsProtein(x) → HealthyMeal(x))"
    },
    {
        "NL": "There are laptops that are compact and efficient, but not cheap, or they are cheap but not compact and efficient.",
        "FOL": "∀x (Laptop(x) → ((Compact(x) ∧ Efficient(x) ∧ ¬Cheap(x)) ⊕ (Cheap(x) ∧ ¬(Compact(x) ∧ Efficient(x)))))"
    },
    {
        "NL": "A successful film festival attracts filmmakers and audiences, fostering cultural exchange and networking opportunities.",
        "FOL": "∀x∀y∀z (SuccessfulFilmFestival(x) ∧ Filmmaker(y) ∧ Audience(z) → (Attracts(x, y, z) ∧ FostersCulturalExchangeAndNetworking(x, y, z)))"
    },
    {
        "NL": "An electric generator obtains mechanical energy and confers it into electrical energy when needed to operate equipment.",
        "FOL": "∀x (ElectricGenerator(x) → (ObtainsMechanicalEnergy(x) ∧ (IsNeededToOperateEquipment(x) → ConfersIntoElectricalEnergy(x))))"
    },
    {
        "NL": "An animal hibernates if it enters a state of prolonged dormancy during winter to conserve energy.",
        "FOL": "∀x∀y (Animal(x) ∧ ProlongedDormancyDuringWinter(x, y) ∧ ConservesEnergy(x, y) → Hibernates(x))"
    },
    {
        "NL": "A triangle contains three sides and three angles.",
        "FOL": "∀x (Triangle(x) → (ThreeSides(x) ∧ ThreeAngles(x)))"
    },
    {
        "NL": "A cat catches a mouse if it is agile, and the mouse is not too fast.",
        "FOL": "∀x ∀y (Cat(x) ∧ Mouse(y) ∧ Agile(x) ∧ ¬TooFast(y) → Catches(x, y))"
    },
    {
        "NL": "A food item that is made from wheat flour, mixed with water, and then baked is bread.",
        "FOL": "∀x (FoodItem(x) ∧ MadeFromWheatFlour(x) ∧ MixedWithWater(x) ∧ Baked(x) → Bread(x))"
    },
    {
        "NL": "A place is considered a gym if it provides facilities and equipment for physical exercise and training.",
        "FOL": "∀x (Gym(x) ↔ (ProvidesFacilities(x) ∧ ProvidesEquipment(x)))"
    },
    {
        "NL": "An animal species that is adapted to live in extreme conditions, has a unique set of physical characteristics, and is endemic to a specific region is typically an extremophile organism.",
        "FOL": "∀x∀y∀z (AnimalSpecies(x) ∧ AdaptedToExtremeConditions(x) ∧ UniquePhysicalCharacteristics(y) ∧ Has(x, y) ∧ SpecificRegion(z) ∧ EndemicTo(x, z) → ExtremophileOrganism(x))"
    },
    {
        "NL": "A movie can be a drama, comedy, or action film, but not a blend of these genres.",
        "FOL": "∀x (Movie(x) → ((Drama(x) ∨ Comedy(x) ∨ Action(x)) ∧ ¬(Drama(x) ∧ Comedy(x)) ∧ ¬(Drama(x) ∧ Action(x)) ∧ ¬(Comedy(x) ∧ Action(x))))"
    },
    {
        "NL": "Every white stone touches at least one item that touches only pink items.",
        "FOL": "∀x (White(x) → ∃y (Touches(x, y) ∧ ∀z (Touches(y, z) → Pink(z))))"
    },
    {
        "NL": "A racer prevails if they drive faster than the adversary.",
        "FOL": "∀x ∀y (Racer(x) ∧ Adversary(y) ∧ DrivesFaster(x, y) → Prevails(x))"
    },
    {
        "NL": "A computer program that is designed to perform specific tasks, can be run on multiple platforms, and requires an internet connection is a web application.",
        "FOL": "∀x (ComputerProgram(x) ∧ DesignedToPerformSpecificTasks(x) ∧ CanRunOnMultiplePlatforms(x) ∧ RequiresInternetConnection(x) → WebApplication(x))"
    },
    {
        "NL": "An object is hot if its temperature is above 100 degrees Celsius.",
        "FOL": "∀x (Object(x) ∧ Temperature(x, y) ∧ Greater(y, 100) → Hot(x))"
    },
    {
        "NL": "There is a party that everyone goes to if no dogs can fetch.",
        "FOL": "¬∀x (Dog(x) → Fetch(x)) → ∃y (Party(y) ∧ ∀z (Person(z) → GoesTo(z, y)))"
    },
    {
        "NL": "A person is a nephew if they are the child of another person's sibling",
        "FOL": "∀x ∃y ∃z (Person(x) ∧ Person(y) ∧ Person(z) ∧ ChildOf(x, y) ∧ SiblingOf(y, z) → Nephew(x))"
    },
    {
        "NL": "Some cars are not expensive.",
        "FOL": "¬∀x (Car(x) → Expensive(x))"
    },
    {
        "NL": "A table supports items placed on it.",
        "FOL": "∀x (Table(x) → SupportsItems(x))"
    },
    {
        "NL": "An animal is either a herbivore, carnivore, or omnivore.",
        "FOL": "∀x (Animal(x) → (Herbivore(x) ⊕ Carnivore(x) ⊕ Omnivore(x)))"
    },
    {
        "NL": "A city is vibrant if it boasts diverse cultures, lively events, and is not plagued by air pollution.",
        "FOL": "∀x (City(x) → (Vibrant(x) ↔ (DiverseCultures(x) ∧ LivelyEvents(x) ∧ ¬AirPollution(x))))"
    },
    {
        "NL": "The oak tree is deciduous.",
        "FOL": "∀x (Oaktree(x) → Deciduous(x))"
    },
    {
        "NL": "Vehicles that run on electricity and produce zero emissions are classified as electric vehicles.",
        "FOL": "∀x (Vehicle(x) ∧ RunsOnElectricity(x) ∧ ZeroEmissions(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A place is considered a hospital if it is a healthcare facility that provides medical treatment and care for patients with various illnesses, injuries, and other health conditions.",
        "FOL": "∀x (Hospital(x) ↔ (HealthcareFacility(x) ∧ ProvidesMedicalTreatmentAndCare(x) ∧ ForPatientsWithVariousIllnessesInjuriesAndHealthConditions(x)))"
    },
    {
        "NL": "A book can be hardcover or paperback.",
        "FOL": "∀x (Book(x) → (Hardcover(x) ∨ Paperback(x)))"
    },
    {
        "NL": "No vehicle is both a car and a bicycle.",
        "FOL": "¬∃x (Vehicle(x) ∧ Car(x) ∧ Bicycle(x))"
    },
    {
        "NL": "If there are no literary novels, then no reader analyzes any poem.",
        "FOL": "¬∃x (LiteraryNovel(x)) → ¬∃y (Reader(y) ∧ ∃z (Poem(z) ∧ Analyze(y, z)))"
    },
    {
        "NL": "A concert ticket grants access to a musical event, while a museum ticket allows entry to an exhibition, but neither ticket permits entrance to a sports game.",
        "FOL": "∀x ∀y (ConcertTicket(x) ∧ MusicalEvent(y) → GrantsAccess(x, y)) ∨ (MuseumTicket(x) ∧ Exhibition(y) → AllowsEntry(x, y)) ∧ ¬PermitsEntranceToSportsGame(x)"
    },
    {
        "NL": "A film can be shown at a family event if it has a rating suitable for children and does not contain excessive violence or explicit content.",
        "FOL": "∀x (Film(x) → (ChildFriendlyRating(x) ∧ ¬ExcessiveViolence(x) ∧ ¬ExplicitContent(x) → SuitableForFamilyEvent(x)))"
    },
    {
        "NL": "A restaurant can offer a discount if it has a special promotion or is celebrating an anniversary, but not if it is closing down.",
        "FOL": "∀x (Restaurant(x) → ((SpecialPromotion(x) ∨ CelebratingAnniversary(x)) ∧ ¬ClosingDown(x) → OffersDiscount(x)))"
    },
    {
        "NL": "A sustainable energy resource is repeatedly generated, minimizing the chance of exhaustion and reducing environmental harm.",
        "FOL": "∀x (SustainableEnergyResource(x) → (RepeatedlyGenerated(x) ∧ MinimizedChanceOfExhaustion(x) ∧ ReducedEnvironmentalHarm(x)))"
    },
    {
        "NL": "A bear hibernates during winter and forages for food in summer, while a migratory bird travels long distances in search of warmer climates.",
        "FOL": "∀x ∀y (Bear(x) ∧ MigratoryBird(y) → ((HibernatesDuringWinter(x) ∧ ForagesInSummer(x)) ∧ TravelsLongDistances(y) ∧ SeeksWarmerClimate(y)))"
    },
    {
        "NL": "A laptop has a keyboard feature and allows people to type documents and surf the internet.",
        "FOL": "∀x (Laptop(x) → (HasKeyboardFeature(x) ∧ AllowsDocumentTyping(x) ∧ AllowsInternetSurfing(x)))"
    },
    {
        "NL": "A car is made in Germany or Japan.",
        "FOL": "∀x (Car(x) → MadeInGermany(x) ∨ MadeInJapan(x))"
    },
    {
        "NL": "A musical instrument produces sound when it is played by a performer.",
        "FOL": "∀x ∀y (MusicalInstrument(x) ∧ Performer(y) → ProducesSoundWhenPlayed(x, y))"
    },
    {
        "NL": "All of the lunch attendees eat salad or are allergic to gluten.",
        "FOL": "∀x (LunchAttendee(x) → (EatSalad(x) ∨ AllergicToGluten(x)))"
    },
    {
        "NL": "In a symbiotic relationship, two or more species interact in a way that benefits at least one of the species involved.",
        "FOL": "∀x∀y (SymbioticRelationship(x) ∧ SpeciesInteraction(y) → (TwoOrMoreSpeciesInteract(y) ∧ BenefitsAtLeastOneSpecies(x)))"
    },
    {
        "NL": "Teachers are not always wealthy.",
        "FOL": "∃x (Teacher(x) ∧ ¬Wealthy(x))"
    },
    {
        "NL": "A library has books, newspapers, and magazines.",
        "FOL": "∀x (Library(x) → ∃y∃z∃w (Book(y) ∧ Newspaper(z) ∧ Magazine(w) ∧ Contains(x, y, z, w)))"
    },
    {
        "NL": "If a person is a fashion designer, they create clothing, accessories, and footwear.",
        "FOL": "∀x (FashionDesigner(x) → (CreatesClothing(x) ∧ CreatesAccessories(x) ∧ CreatesFootwear(x)))"
    },
    {
        "NL": "A vaccine provides immunity against specific diseases by stimulating the immune system to produce antibodies without causing the actual illness.",
        "FOL": "∀x∀y (Vaccine(x) ∧ Disease(y) → (ProvidesImmunity(x, y) ∧ StimulatesImmuneSystem(x) ∧ ProducesAntibodies(x) ∧ ¬CausesIllness(x)))"
    },
    {
        "NL": "A person who is skilled in the art of creating jewelry is called a jeweler.",
        "FOL": "∀x (SkilledInArtOfCreatingJewelry(x) → Jeweler(x))"
    },
    {
        "NL": "An object is a key if it is used to lock and unlock doors or other objects.",
        "FOL": "∀x ((Locks(x) ∧ Unlocks(x)) → Key(x))"
    },
    {
        "NL": "If a creature is a huge bear or a tiny rabbit, then it is either gentle or wild, but not both.",
        "FOL": "∀x ((Huge(x) ∧ Bear(x)) ∨ (Tiny(x) ∧ Rabbit(x)) → (Gentle(x) ⊕ Wild(x)))"
    },
    {
        "NL": "A person is a teacher if they instruct students.",
        "FOL": "∀x (Person(x) ∧ Teacher(x) ↔ InstructsStudents(x))"
    },
    {
        "NL": "A power bank stores energy and provides it when required to charge devices.",
        "FOL": "∀x (PowerBank(x) → (StoresEnergy(x) ∧ (IsRequiredToChargeDevices(x) → ProvidesEnergy(x))))"
    },
    {
        "NL": "A circle is a closed shape with all points equidistant from the center, whereas a triangle has three sides and a rectangle has four sides with opposite sides being parallel.",
        "FOL": "∀x ∀y ∀z (Circle(x) ∧ Triangle(y) ∧ Rectangle(z) → (ClosedShape(x) ∧ EquidistantFromCenter(x) ⊕ ThreeSides(y) ⊕ (FourSides(z) ∧ OppositeSidesParallel(z))))"
    },
    {
        "NL": "Each employee is either in the office or at home.",
        "FOL": "∀x (Employee(x) → (InOffice(x) ⊕ AtHome(x)))"
    },
    {
        "NL": "A mechanic is fixing a car in the garage, or a baker is making bread in the kitchen.",
        "FOL": "∃x ∃y (Mechanic(x) ∧ Car(y) ∧ Fixing(x, y) ∧ InTheGarage(x)) ∨ ∃z ∃w (Baker(z) ∧ Bread(w) ∧ Making(z, w) ∧ InTheKitchen(z))"
    },
    {
        "NL": "Clocks measure time, rulers measure length, and barometers measure atmospheric pressure.",
        "FOL": "∀x (Clock(x) → MeasuresTime(x)) ∧ ∀y (Ruler(y) → MeasuresLength(y)) ∧ ∀z (Barometer(z) → MeasuresAtmosphericPressure(z))"
    },
    {
        "NL": "If a person is a scientist, they must conduct research and experiments to advance knowledge.",
        "FOL": "∀x (Scientist(x) → (ConductsResearch(x) ∧ PerformsExperiments(x)))"
    },
    {
        "NL": "It is false that a thing is a large rectangle if and only if it is green.",
        "FOL": "¬∀x (Large(x) ∧ Rectangle(x) ↔ Green(x))"
    },
    {
        "NL": "A garment is a trench coat when it is a long, waterproof outerwear piece, features a double-breasted design and a belt, and is often worn as protection against wind and rain.",
        "FOL": "∀x (Garment(x) ∧ LongWaterproofOuterwear(x) ∧ FeaturesDoubleBreastedDesignAndBelt(x) ∧ OftenWornAsProtection(x, wind, rain) → TrenchCoat(x))"
    },
    {
        "NL": "A public park is well-maintained if it has clean facilities, green spaces, and safe play areas.",
        "FOL": "∀x (PublicPark(x) → (WellMaintained(x) ↔ (CleanFacilities(x) ∧ GreenSpaces(x) ∧ SafePlayAreas(x))))"
    },
    {
        "NL": "A chef uses fresh ingredients, culinary techniques, and creativity to prepare delicious meals.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ UsesFreshIngredients(x, y) ∧ AppliesCulinaryTechniques(x) ∧ CreativeInPreparation(x, z) → DeliciousMeals(x, y, z))"
    },
    {
        "NL": "Some fruits have seeds and are edible.",
        "FOL": "∀x (Fruit(x) ∧ HasSeeds(x) → Edible(x))"
    },
    {
        "NL": "All animals are either vertebrates or invertebrates.",
        "FOL": "∀x (Animal(x) ∧ (Vertebrate(x) ⊕ Invertebrate(x)))"
    },
    {
        "NL": "A dog barks when it is hungry.",
        "FOL": "∀x (Dog(x) ∧ Hungry(x) → Barks(x))"
    },
    {
        "NL": "A tree sheds its leaves during autumn if it is a deciduous tree.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → ShedsLeavesDuringAutumn(x))"
    },
    {
        "NL": "There doesn't exist a musician who has played all instruments.",
        "FOL": "¬∃x (Musician(x) ∧ ∀y (Instrument(y) → Played(x, y)))"
    },
    {
        "NL": "A person is a teacher if they instruct and educate students in a particular subject or skill.",
        "FOL": "∀x (Teacher(x) ↔ (Person(x) ∧ ∃y (SubjectOrSkill(y) ∧ Instructs(x, y) ∧ Educates(x, y))))"
    },
    {
        "NL": "An element is a metal if it has high electrical conductivity and is generally shiny.",
        "FOL": "∀x (Element(x) ∧ HighElectricalConductivity(x) ∧ Shiny(x) → Metal(x))"
    },
    {
        "NL": "A vehicle is considered a motorcycle if it has two wheels, is powered by an engine, and is ridden by a rider who sits on a seat and uses handlebars for steering.",
        "FOL": "∀x (Vehicle(x) ∧ TwoWheels(x) ∧ PoweredByEngine(x) ∧ RiderSitsOnSeatAndUsesHandlebars(x) → Motorcycle(x))"
    },
    {
        "NL": "A planet orbits a star but does not emit light on its own.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) ∧ Orbits(x, y) ∧ ¬EmitsLight(x) → OrbitsAndNotEmitLight(x, y))"
    },
    {
        "NL": "No book is both old and unreadable.",
        "FOL": "¬∃x (Book(x) ∧ Old(x) ∧ Unreadable(x))"
    },
    {
        "NL": "In a tropical rainforest, epiphytes grow on the branches of trees, while lianas are woody vines that climb and twine around the trunks of trees to reach sunlight.",
        "FOL": "∀x ∀y (TropicalRainforest(x) ∧ (Epiphytes(x, y) ∧ GrowsOnTreeBranches(y)) ∧ (Lianas(x) ∧ ClimbsAndTwinesAroundTreeTrunks(x)))"
    },
    {
        "NL": "A performance is captivating if it showcases exceptional talent, evokes emotion, and has a powerful message.",
        "FOL": "∀x∀y∀z (Performance(x) ∧ ExceptionalTalent(y) ∧ EvokesEmotion(z) ∧ PowerfulMessage(x) → Captivating(x, y, z))"
    },
    {
        "NL": "A professor is conducting research in a busy laboratory.",
        "FOL": "∃x ∃y (Professor(x) ∧ ConductingResearch(x) ∧ BusyLaboratory(y) ∧ In(x, y))"
    },
    {
        "NL": "A library stores books and periodicals, offers study spaces and resources, and is accessible to members.",
        "FOL": "∀x ∀y ∀z ∀w (Library(x) ∧ (Book(y) ∨ Periodical(y)) ∧ StudySpace(z) ∧ Resource(w) → (Stores(x, y) ∧ Offers(x, z) ∧ Offers(x, w) ∧ AccessibleTo(x, members)))"
    },
    {
        "NL": "Cats hunt mice and other small animals.",
        "FOL": "∀x∀y (Cat(x) ∧ (Mouse(y) ∨ SmallAnimal(y)) → Hunts(x, y))"
    },
    {
        "NL": "A watch displays time by moving its hands.",
        "FOL": "∀x (Watch(x) ∧ MovesHands(x) → DisplaysTime(x))"
    },
    {
        "NL": "A photograph is high quality if it has good resolution and accurate color representation.",
        "FOL": "∀x (Photograph(x) ∧ HighQuality(x) → (GoodResolution(x) ∧ AccurateColorRepresentation(x)))"
    },
    {
        "NL": "All green computers link to a minimum of one device that links just to pink screens.",
        "FOL": "∀x (Green(x) ∧ Computer(x) → ∃y (LinksTo(x, y) ∧ ∀z (LinksTo(y, z) → Pink(z) ∧ Screen(z))))"
    },
    {
        "NL": "A computer can either be a desktop or a laptop.",
        "FOL": "∀x (Computer(x) → (Desktop(x) ⊕ Laptop(x)))"
    },
    {
        "NL": "A room can be used for meetings if it contains a table and chairs, but not if it is a storage room or a kitchen.",
        "FOL": "∀x (Room(x) → ((ContainsTable(x) ∧ ContainsChairs(x)) ∧ ¬(StorageRoom(x) ∨ Kitchen(x)) → MeetingRoom(x)))"
    },
    {
        "NL": "For a chemical reaction to be considered exothermic, it must release heat energy.",
        "FOL": "∀x ∀y (ChemicalReaction(x) ∧ HeatEnergy(y) → (Exothermic(x) ↔ Releases(x, y)))"
    },
    {
        "NL": "A hammer pounds nails, a screwdriver turns screws, and a wrench tightens bolts.",
        "FOL": "∀x∀y∀z (Hammer(x) ∧ Screwdriver(y) ∧ Wrench(z) → (PoundsNails(x) ∧ TurnsScrews(y) ∧ TightensBolts(z)))"
    },
    {
        "NL": "A carnivorous animal eats only meat.",
        "FOL": "∀x (CarnivorousAnimal(x) → EatsOnlyMeat(x))"
    },
    {
        "NL": "If a person is a chef, they are skilled in cooking and preparing food.",
        "FOL": "∀x (Person(x) ∧ Chef(x) → SkilledInCookingAndPreparingFood(x))"
    },
    {
        "NL": "A cell divides when its DNA is replicated and the cell grows in size.",
        "FOL": "∀x (Cell(x) ∧ DNAReplicated(x) ∧ CellGrowth(x) → Divides(x))"
    },
    {
        "NL": "A well-designed chair is comfortable and easy to clean.",
        "FOL": "∀x (WellDesignedChair(x) → (IsComfortable(x) ∧ EasyToClean(x)))"
    },
    {
        "NL": "A national park provides habitats for various animals, such as birds like eagles or parrots, mammals like bears or deer, and reptiles like snakes or lizards.",
        "FOL": "∀x ∀y (NationalPark(x) ∧ (Bird(x, y) ∧ (Eagle(y) ∨ Parrot(y))) ∨ (Mammal(x, y) ∧ (Bear(y) ∨ Deer(y))) ∨ (Reptile(x, y) ∧ (Snake(y) ∨ Lizard(y))))"
    },
    {
        "NL": "It isn't the case that all birds are canaries.",
        "FOL": "¬∀x (Bird(x) → Canary(x))"
    },
    {
        "NL": "A building that serves as a hospital is not a school and not a hotel.",
        "FOL": "∀x (Building(x) ∧ ServesAs(x, Hospital) → (¬ServesAs(x, School) ∧ ¬ServesAs(x, Hotel)))"
    },
    {
        "NL": "If a computer program is open-source, its source code is publicly available and can be modified.",
        "FOL": "∀x (ComputerProgram(x) ∧ OpenSource(x) → (SourceCodePubliclyAvailable(x) ∧ CanBeModified(x)))"
    },
    {
        "NL": "A dish is a dessert or a main course.",
        "FOL": "∀x (Dish(x) → (Dessert(x) ∨ MainCourse(x)))"
    },
    {
        "NL": "If all humans are primates then there are some humans who assist Linda.",
        "FOL": "∀x (Human(x) → Primate(x)) → ∃x (Human(x) ∧ Assist(x, linda))"
    },
    {
        "NL": "If an animal lives in water and has gills, it is considered a fish.",
        "FOL": "∀x ((LivesInWater(x) ∧ HasGills(x)) → Fish(x))"
    },
    {
        "NL": "A living organism performs photosynthesis if it contains chlorophyll, can absorb sunlight, and converts solar energy into chemical energy stored in glucose molecules.",
        "FOL": "∀x∀y (LivingOrganism(x) ∧ ContainsChlorophyll(x) ∧ AbsorbsSunlight(x, y) ∧ ConvertsSolarEnergyToChemicalEnergy(x, y) → PerformsPhotosynthesis(x))"
    },
    {
        "NL": "No book is either a romantic story or a thrilling adventure.",
        "FOL": "¬∃x ((Romantic(x) ∧ Story(x)) ∨ (Thrilling(x) ∧ Adventure(x)))"
    },
    {
        "NL": "Something is Artificial Intelligence if and only if it processes or computes.",
        "FOL": "∀x (ArtificialIntelligence(x) ↔ (Processes(x) ∨ Computes(x)))"
    },
    {
        "NL": "A printer creates physical copies of documents, while a scanner creates digital copies and doesn't create physical copies.",
        "FOL": "∀x∀y (Printer(x) ∧ Scanner(y) → (CreatesPhysicalCopies(x) ∧ CreatesDigitalCopies(y) ∧ ¬CreatesPhysicalCopies(y)))"
    },
    {
        "NL": "An engine is a combustion engine if it burns fuel, converts the energy released into mechanical work, and requires air for the combustion process.",
        "FOL": "∀x (Engine(x) ∧ BurnsFuel(x) ∧ ConvertsEnergyToMechanicalWork(x) ∧ RequiresAirForCombustion(x) → CombustionEngine(x))"
    },
    {
        "NL": "If a process is regular, that process is predictable.",
        "FOL": "∀x (Process(x) ∧ Regular(x) → Predictable(x))"
    },
    {
        "NL": "An organization has a mission, a structure, and members who work together.",
        "FOL": "∀x (Organization(x) → (HasMission(x) ∧ HasStructure(x) ∧ MembersWorkTogether(x)))"
    },
    {
        "NL": "Waiters serve drinks and food.",
        "FOL": "∀x∀y∀z (Waiter(x) ∧ (Drink(y) ∨ Food(z)) → Serves(x, y) ∨ Serves(x, z))"
    },
    {
        "NL": "Strawberries are red, blueberries are blue, and raspberries are red.",
        "FOL": "∀x ∀y ∀z (Strawberry(x) ∧ Blueberry(y) ∧ Raspberry(z) → (Red(x) ∧ Blue(y) ∧ Red(z)))"
    },
    {
        "NL": "A vehicle can accelerate, brake, or turn.",
        "FOL": "∀x (Vehicle(x) → Accelerate(x) ∨ Brake(x) ∨ Turn(x))"
    },
    {
        "NL": "An organism is a reptile if it is cold-blooded, has scales, and lays eggs.",
        "FOL": "∀x (Organism(x) ∧ ColdBlooded(x) ∧ HasScales(x) ∧ LaysEggs(x) → Reptile(x))"
    },
    {
        "NL": "Mathematical principles are not opinions.",
        "FOL": "∀x (MathematicalPrinciple(x) → ¬Opinion(x))"
    },
    {
        "NL": "No elephants are small.",
        "FOL": "¬∃x (Elephant(x) ∧ Small(x))"
    },
    {
        "NL": "Maria is not a doctor if and only if she is a nurse.",
        "FOL": "¬Doctor(maria) ↔ Nurse(maria)"
    },
    {
        "NL": "A wind turbine generates power from wind.",
        "FOL": "∀x (WindTurbine(x) → GeneratesPowerFromWind(x))"
    },
    {
        "NL": "A film can be both black and white and silent.",
        "FOL": "∃x (Film(x) ∧ BlackAndWhite(x) ∧ Silent(x))"
    },
    {
        "NL": "A musical instrument that uses strings can be played with fingers, a pick, or a bow.",
        "FOL": "∀x (MusicalInstrument(x) ∧ UsesStrings(x) → PlayedWithFingers(x) ∨ PlayedWithPick(x) ∨ PlayedWithBow(x))"
    },
    {
        "NL": "A paint is suitable for outdoor use if it is weather-resistant, long-lasting, and has UV protection.",
        "FOL": "∀x (Paint(x) ∧ WeatherResistant(x) ∧ LongLasting(x) ∧ UVProtection(x) → SuitableForOutdoorUse(x))"
    },
    {
        "NL": "A store sells fruits and vegetables.",
        "FOL": "SellsFruits(Store) ∧ SellsVegetables(Store)"
    },
    {
        "NL": "A train departs from one station and arrives at another station without stopping at any stations.",
        "FOL": "∃x ∃y ∃z (Train(x) ∧ Station(y) ∧ Station(z) → DepartsFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Station(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A dolphin is jumping in the ocean, and a crab is crawling on the beach.",
        "FOL": "∃x ∃y (Dolphin(x) ∧ Ocean(y) ∧ JumpingIn(x, y)) ∧ ∃z ∃w (Crab(z) ∧ Beach(w) ∧ CrawlingOn(z, w))"
    },
    {
        "NL": "Cats are not marine animals.",
        "FOL": "¬∃x (Cat(x) ∧ MarineAnimal(x))"
    },
    {
        "NL": "A car is electric if it runs on batteries instead of using an internal combustion engine.",
        "FOL": "∀x (Car(x) ∧ Electric(x) ↔ (RunsOnBatteries(x) ∧ ¬InternalCombustionEngine(x)))"
    },
    {
        "NL": "A garden is organic if it avoids pesticides and synthetic fertilizers.",
        "FOL": "∀x (Garden(x) ∧ ¬UsesPesticides(x) ∧ ¬UsesSyntheticFertilizers(x) → Organic(x))"
    },
    {
        "NL": "A car is economical if it consumes less fuel.",
        "FOL": "∀x ∃y (Car(x) ∧ Fuel(y) ∧ ConsumesLess(x, y) → Economical(x))"
    },
    {
        "NL": "Every doctor has a medical degree.",
        "FOL": "∀x (Doctor(x) → HasMedicalDegree(x))"
    },
    {
        "NL": "An animal is a herbivore if its diet consists solely of plants.",
        "FOL": "∀x (Herbivore(x) ↔ (Animal(x) ∧ ∀y (InDiet(y, x) → Plant(y))))"
    },
    {
        "NL": "When an animal preys on another animal, the first animal is a predator, and the second animal is its prey.",
        "FOL": "∀x∀y∀z (Animal(x) ∧ Animal(y) ∧ PreysOn(x, y) → (Predator(x) ∧ Prey(y)))"
    },
    {
        "NL": "A country with a high life expectancy and low infant mortality rate typically has a well-developed healthcare system.",
        "FOL": "∀x (Country(x) ∧ HighLifeExpectancy(x) ∧ LowInfantMortality(x) → WellDevelopedHealthcareSystem(x))"
    },
    {
        "NL": "There is a computer that all programmers use.",
        "FOL": "∃x (Computer(x) ∧ ∀y (Programmer(y) → Use(y, x)))"
    },
    {
        "NL": "There isn't a book that reviews all short stories.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Short(y) ∧ Story(y) → Reviews(x, y)))"
    },
    {
        "NL": "A smartphone can send messages, make calls, or take photos.",
        "FOL": "∀x (Smartphone(x) → ∃y ∃z (SendMessage(x, y) ∨ MakeCall(x, y) ∨ TakePhoto(x, z)))"
    },
    {
        "NL": "During metamorphosis, an insect, like a caterpillar or a larva, undergoes a series of developmental stages to become an adult, such as a butterfly or a beetle.",
        "FOL": "∀x ∀y ∀z (Metamorphosis(x) ∧ (Caterpillar(y) ∨ Larva(y)) → (UndergoesDevelopmentalStages(y) ∧ BecomesAdult(y, z) ∧ (Butterfly(z) ∨ Beetle(z))))"
    },
    {
        "NL": "Rain nourishes plants, and sunlight promotes their growth, but some plants thrive in the shade.",
        "FOL": "∀x ∀y (Plant(x) → ((Rain(y) → Nourishes(y, x)) ∧ (Sunlight(y) → PromotesGrowth(y, x)) ∧ (Shade(y) → ThrivesIn(y, x))))"
    },
    {
        "NL": "If an entity is a velvet curtain or a silk rug, then it is either red or blue, but not both.",
        "FOL": "∀x ((VelvetCurtain(x) ∨ SilkRug(x)) → (Red(x) ⊕ Blue(x)))"
    },
    {
        "NL": "Every bird has wings.",
        "FOL": "∀x (Bird(x) → HasWings(x))"
    },
    {
        "NL": "Mountains have ecosystems that can be home to various flora and fauna.",
        "FOL": "∀x (Mountain(x) ∧ Ecosystem(x, y) ∧ Flora(y) ∧ Fauna(z) → HomeTo(x, y, z))"
    },
    {
        "NL": "A book can be classified as either fiction or non-fiction.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "A mountain range is a series of mountains connected by high ground, often formed by geological processes such as tectonic plate movement.",
        "FOL": "∀x (MountainRange(x) → (SeriesOfMountains(x) ∧ ConnectedByHighGround(x) ∧ FormedByGeologicalProcesses(x)))"
    },
    {
        "NL": "An individual is considered a skilled pianist if they can play complex pieces or perform in front of large audiences.",
        "FOL": "∀x (SkilledPianist(x) ↔ (CanPlayComplexPieces(x) ∨ PerformInFrontOfLargeAudiences(x)))"
    },
    {
        "NL": "All planets are inhabited, if there isn't a single book that every book is similar to.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Book(y) → SimilarTo(y, x))) → ∀z (Planet(z) → Inhabited(z))"
    },
    {
        "NL": "A thunderstorm produces lightning and thunder due to the discharge of electricity in the atmosphere.",
        "FOL": "∀x (Thunderstorm(x) ∧ DischargeOfElectricity(x) → ProducesLightningAndThunder(x))"
    },
    {
        "NL": "All books are either interesting or boring.",
        "FOL": "∀x (Book(x) → (Interesting(x) ∨ Boring(x)))"
    },
    {
        "NL": "A room can be illuminated by natural light, artificial light, or both.",
        "FOL": "∀x (Room(x) → (IlluminatedByNaturalLight(x) ∨ IlluminatedByArtificialLight(x)))"
    },
    {
        "NL": "A student who consistently performs well in mathematics and science courses is considered academically gifted in STEM.",
        "FOL": "∀x (Student(x) ∧ ConsistentlyPerformsWell(x, mathematics) ∧ ConsistentlyPerformsWell(x, science) → AcademicallyGiftedInSTEM(x))"
    },
    {
        "NL": "A meal can be served for breakfast, lunch, or dinner, but not more than one mealtime.",
        "FOL": "∀x (Meal(x) → ((Breakfast(x) ∧ ¬(Lunch(x) ∨ Dinner(x))) ∨ (Lunch(x) ∧ ¬(Breakfast(x) ∨ Dinner(x))) ∨ (Dinner(x) ∧ ¬(Breakfast(x) ∨ Lunch(x)))))"
    },
    {
        "NL": "If a person is a meteorologist, they study and forecast weather conditions.",
        "FOL": "∀x (Meteorologist(x) → (StudiesWeatherConditions(x) ∧ ForecastsWeather(x)))"
    },
    {
        "NL": "If a tool is part of a surgeon's toolkit, it is a scalpel, forceps, or needle.",
        "FOL": "∀x (Tool(x) ∧ PartOfSurgeonsKit(x) → Scalpel(x) ∨ Forceps(x) ∨ Needle(x))"
    },
    {
        "NL": "A password must contain at least one uppercase letter and one number or special character.",
        "FOL": "∀x (Password(x) → (ContainsUppercaseLetter(x) ∧ (ContainsNumber(x) ∨ ContainsSpecialCharacter(x))))"
    },
    {
        "NL": "A basketball is round, a cube is square, and a pyramid is triangular.",
        "FOL": "Round(basketball) ∧ Square(cube) ∧ Triangular(pyramid)"
    },
    {
        "NL": "All animals need water for survival.",
        "FOL": "∀x (Animal(x) → ∃y (Water(y) ∧ NeedsForSurvival(x, y)))"
    },
    {
        "NL": "Photosynthesis is a process by which plants, algae, and some bacteria convert sunlight, carbon dioxide, and water into glucose and oxygen, using the captured solar energy to power the chemical reactions required for this transformation.",
        "FOL": "∀x∀y∀z (Photosynthesis(x) ∧ PlantsAlgaeAndSomeBacteria(y) ∧ SunlightCarbonDioxideAndWater(z) → (ConvertsSunlightCarbonDioxideAndWaterIntoGlucoseAndOxygen(y, z) ∧ CapturesSolarEnergy(y) ∧ PowersChemicalReactions(y, x)))"
    },
    {
        "NL": "Solar panels generate electricity during daylight hours but not at night.",
        "FOL": "∀x (SolarPanel(x) → (GeneratesElectricity(x, Daylight) ∧ ¬GeneratesElectricity(x, Night)))"
    },
    {
        "NL": "Some people are introverted, while others are extroverted.",
        "FOL": "∀x (Person(x) → (Introverted(x) ⊕ Extroverted(x)))"
    },
    {
        "NL": "A polygon is a square if and only if it has four equal sides and right angles.",
        "FOL": "∀x (Polygon(x) → (Square(x) ↔ (HasFourEqualSides(x) ∧ HasRightAngles(x))))"
    },
    {
        "NL": "Photosynthesis is a process by which plants, algae, and some bacteria convert light energy, water, and carbon dioxide into glucose and oxygen.",
        "FOL": "∀x∀y∀z (Photosynthesis(x) → (ProcessInPlantsAlgaeBacteria(x) ∧ ConvertsLightEnergyWaterCarbonDioxide(x, y, z) ∧ ProducesGlucoseAndOxygen(x, y, z)))"
    },
    {
        "NL": "A printer outputs documents, and a scanner inputs them.",
        "FOL": "∀x∀y (Printer(x) ∧ Scanner(y) → (Outputs(x, Documents) ∧ Inputs(y, Documents)))"
    },
    {
        "NL": "An athlete is well-rounded if they are skilled in endurance sports or strength sports, and have good coordination.",
        "FOL": "∀x (Athlete(x) → (WellRounded(x) ↔ ((EnduranceSports(x) ∨ StrengthSports(x)) ∧ GoodCoordination(x))))"
    },
    {
        "NL": "A dog that is obedient, friendly, and has a calm temperament is a good family pet.",
        "FOL": "∀x (Dog(x) ∧ Obedient(x) ∧ Friendly(x) ∧ CalmTemperament(x) → GoodFamilyPet(x))"
    },
    {
        "NL": "A person who is certified to practice law and provides legal advice to clients is a lawyer.",
        "FOL": "∀x (Person(x) ∧ CertifiedToPracticeLaw(x) ∧ ProvidesLegalAdvice(x) → Lawyer(x))"
    },
    {
        "NL": "A beverage is alcoholic if it is fermented, distilled, or contains added alcohol.",
        "FOL": "∀x (Beverage(x) ∧ (Fermented(x) ∨ Distilled(x) ∨ ContainsAddedAlcohol(x)) → Alcoholic(x))"
    },
    {
        "NL": "A jaguar is lurking in the rainforest.",
        "FOL": "∃x (Jaguar(x) ∧ Lurking(x) ∧ InTheRainforest(x))"
    },
    {
        "NL": "An artist creates paintings and sculptures.",
        "FOL": "∀x (Artist(x) → (CreatesPaintings(x) ∧ CreatesSculptures(x)))"
    },
    {
        "NL": "A dish is a soup if it is liquid-based, served hot or cold, and contains various ingredients such as vegetables, meat, or grains.",
        "FOL": "∀x (Dish(x) ∧ LiquidBased(x) ∧ (ServedHot(x) ∨ ServedCold(x)) ∧ (ContainsVegetables(x) ∨ ContainsMeat(x) ∨ ContainsGrains(x)) → Soup(x))"
    },
    {
        "NL": "A tree provides shade, produces oxygen, or serves as a habitat.",
        "FOL": "∀x (Tree(x) ∧ (ProvidesShade(x) ∨ ProducesOxygen(x) ∨ ServesAsHabitat(x)) → ProvidesBenefits(x))"
    },
    {
        "NL": "An animal that is cold-blooded and lays eggs is a reptile.",
        "FOL": "∀x (ColdBlooded(x) ∧ LaysEggs(x) → Reptile(x))"
    },
    {
        "NL": "A woman is sewing a dress on a table in the studio.",
        "FOL": "∃x ∃y ∃z (Woman(x) ∧ Dress(y) ∧ Table(z) ∧ SewingOn(x, y, z) ∧ InTheStudio(x))"
    },
    {
        "NL": "A game that requires strategy, is played on a board with black and white pieces, and has alternating turns is chess.",
        "FOL": "∀x (Game(x) ∧ RequiresStrategy(x) ∧ PlayedOnBoardWithBlackAndWhitePieces(x) ∧ HasAlternatingTurns(x) → Chess(x))"
    },
    {
        "NL": "A plant that gets sunlight, is watered regularly and has nutrient rich soil, grows well.",
        "FOL": "∀v (Plant(v) ∧ GetsSunlight(v) ∧ IsWateredRegularly(v) ∧ HasNutrientRichSoil(v) → GrowsWell(v))"
    },
    {
        "NL": "A plant with colorful flowers and a pleasant scent might be a rose, an orchid, or a lilac.",
        "FOL": "∀x (Plant(x) ∧ ColorfulFlowers(x) ∧ PleasantScent(x) → (Rose(x) ∨ Orchid(x) ∨ Lilac(x)))"
    },
    {
        "NL": "A vacation is relaxing and affordable.",
        "FOL": "∃x (Vacation(x) ∧ Relaxing(x) ∧ Affordable(x))"
    },
    {
        "NL": "A computer network consists of interconnected devices, such as routers for directing data traffic, switches for managing connections, and servers for storing and processing data.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ (InterconnectedDevices(x) ∧ (Routers(y) ∧ DirectDataTraffic(x, y)) ∧ (Switches(z) ∧ ManageConnections(x, z)) ∧ (Servers(x) ∧ StoreAndProcessData(x))))"
    },
    {
        "NL": "A clothing item is cotton if it doesn't contain synthetic materials.",
        "FOL": "∀x (ClothingItem(x) ∧ ¬ContainsSyntheticMaterials(x) → Cotton(x))"
    },
    {
        "NL": "All circles have a constant radius.",
        "FOL": "∀x (Circle(x) → HasConstantRadius(x))"
    },
    {
        "NL": "A musical instrument is considered a string instrument if it has strings and produces sound by plucking, strumming, or bowing the strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ (PlucksStrings(x) ∨ StrumsStrings(x) ∨ BowsStrings(x)) → StringInstrument(x))"
    },
    {
        "NL": "Cities with a population greater than one million are considered large cities.",
        "FOL": "∀x (City(x) ∧ PopulationGreaterThan(x, 1000000) → LargeCity(x))"
    },
    {
        "NL": "A tool is a hammer if it has a handle, a flat or curved striking surface, and is used for driving nails or breaking objects.",
        "FOL": "∀x (Tool(x) ∧ HasHandle(x) ∧ FlatOrCurvedStrikingSurface(x) ∧ UsedForDrivingNailsOrBreakingObjects(x) → Hammer(x))"
    },
    {
        "NL": "A turtle has a shell, can live on land or in water, and is not a tortoise that only lives on land.",
        "FOL": "∀x (Turtle(x) ↔ (HasShell(x) ∧ (LivesOnLand(x) ∨ LivesInWater(x)) ∧ ¬(Tortoise(x) ∧ LivesOnLand(x))))"
    },
    {
        "NL": "An instrument is stringed or wind, but not both.",
        "FOL": "∀x (Instrument(x) → (Stringed(x) ⊕ Wind(x)))"
    },
    {
        "NL": "An earthquake occurs when tectonic plates in the Earth's crust move, releasing energy in the form of seismic waves, which can cause ground shaking, landslides, tsunamis, and destruction of infrastructure depending on the magnitude and location of the event.",
        "FOL": "∀x∀y∀z (Earthquake(x) ∧ TectonicPlates(y) ∧ EarthsCrust(z) → (MovementOfTectonicPlates(x, y, z) ∧ ReleasesEnergyAsSeismicWaves(x) ∧ CausesGroundShaking(x) ∧ CausesLandslides(x) ∧ CausesTsunamis(x) ∧ DestructionOfInfrastructure(x)))"
    },
    {
        "NL": "All books are informative, but not every informative object is a book.",
        "FOL": "∀x (Book(x) → Informative(x)) ∧ ¬∀x (Informative(x) → Book(x))"
    },
    {
        "NL": "Carpenters build furniture, and apprentices learn from them.",
        "FOL": "∀x ∀y ∀z (Carpenter(x) ∧ Furniture(y) ∧ Apprentice(z) → Builds(x, y) ∧ LearnsFrom(z, x))"
    },
    {
        "NL": "A triangle can have an obtuse angle, a right angle, or only acute angles, but not more than one of these cases.",
        "FOL": "∀x (Triangle(x) → (ObtuseAngle(x) ⊕ RightAngle(x) ⊕ AllAcuteAngles(x)))"
    },
    {
        "NL": "A musical instrument that uses strings and a resonating body to produce sound is categorized as a string instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ UsesStrings(x) ∧ ResonatingBody(x) → StringInstrument(x))"
    },
    {
        "NL": "An employee works or rests.",
        "FOL": "∀x (Employee(x) → (Works(x) ∨ Rests(x)))"
    },
    {
        "NL": "There is not a single book which is interesting to all readers.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Reader(y) → Interesting(x, y)))"
    },
    {
        "NL": "Students who finish their homework early have more free time.",
        "FOL": "∀x (Student(x) ∧ FinishesHomeworkEarly(x) → MoreFreeTime(x))"
    },
    {
        "NL": "Humans can communicate using spoken language, sign language, or written language, and each mode of communication requires a different set of skills.",
        "FOL": "∀x∀y∀z (Human(x) ∧ SpokenLanguage(y) ∧ SignLanguage(z) → (CommunicatesUsing(x, y) ∨ CommunicatesUsing(x, z) ∨ CommunicatesUsingWrittenLanguage(x)) ∧ RequiresDifferentSkills(x))"
    },
    {
        "NL": "Some dogs are friendly, and some are not.",
        "FOL": "∃x (Dog(x) ∧ Friendly(x)) ∧ ∃x (Dog(x) ∧ ¬Friendly(x))"
    },
    {
        "NL": "A musician is fulfilled if and only if they are talented and have fans.",
        "FOL": "∀x (Musician(x) → (Fulfilled(x) ↔ (Talented(x) ∧ HasFans(x))))"
    },
    {
        "NL": "A species of bird that is flightless, has a long neck, and is native to Africa is an ostrich.",
        "FOL": "∀x (Bird(x) ∧ Flightless(x) ∧ LongNeck(x) ∧ NativeToAfrica(x) → Ostrich(x))"
    },
    {
        "NL": "Volcanoes can erupt, releasing lava, ash, and gas, which can have various effects on the environment, including the creation of new landforms.",
        "FOL": "∀x∀y∀z (Volcano(x) ∧ (Lava(y) ∨ Ash(y) ∨ Gas(y)) ∧ Environment(z) → (CanErupt(x) ∧ Releases(x, y) ∧ HasVariousEffectsOn(x, z) ∧ IncludingCreationOfNewLandforms(x)))"
    },
    {
        "NL": "A virus affects a cell only if that cell is susceptible to the virus.",
        "FOL": "∀x ∀y (Virus(x) ∧ Cell(y) ∧ (Affects(x, y) → Susceptible(y, x)))"
    },
    {
        "NL": "A country is considered landlocked if it is surrounded entirely by land and has no access to the ocean.",
        "FOL": "∀x (Country(x) ∧ SurroundedByLand(x) ∧ ¬AccessToOcean(x) → Landlocked(x))"
    },
    {
        "NL": "A cactus requires little water and survives in arid conditions, while a fern requires more water and doesn't survive in arid conditions.",
        "FOL": "∀x∀y (Cactus(x) ∧ Fern(y) → (RequiresLittleWater(x) ∧ SurvivesAridConditions(x) ∧ RequiresMoreWater(y) ∧ ¬SurvivesAridConditions(y)))"
    },
    {
        "NL": "Julia, Alice, and Owen are scientists.",
        "FOL": "Scientist(julia) ∧ Scientist(alice) ∧ Scientist(owen)"
    },
    {
        "NL": "A camera is suitable for professional photography if it has a high-resolution sensor, a wide dynamic range, and an interchangeable lens system.",
        "FOL": "∀x (Camera(x) ∧ SuitableForProfessionalPhotography(x) → (HighResolutionSensor(x) ∧ WideDynamicRange(x) ∧ InterchangeableLensSystem(x)))"
    },
    {
        "NL": "A person is a vegetarian if and only if they eat fruits and vegetables, but not chicken.",
        "FOL": "∀x (Person(x) → (Vegetarian(x) ↔ (EatsFruits(x) ∧ EatsVegetables(x)) ∧ ¬EatsChicken(x)))"
    },
    {
        "NL": "A waterproof material prevents water penetration.",
        "FOL": "∀x (WaterproofMaterial(x) → PreventsWaterPenetration(x))"
    },
    {
        "NL": "Not all dogs are big.",
        "FOL": "¬∀x (Dog(x) → Big(x))"
    },
    {
        "NL": "A solid with six equal square faces is a cube.",
        "FOL": "∀x (Solid(x) ∧ HasEqualSquareFaces(x, 6) → Cube(x))"
    },
    {
        "NL": "There are novels that are both suspenseful and have a detective theme, while others are romantic and have a fantasy theme.",
        "FOL": "∀x (Novel(x) → (Suspenseful(x) ∧ DetectiveTheme(x)) ⊕ (Romantic(x) ∧ FantasyTheme(x)))"
    },
    {
        "NL": "Not every cake is suitable for diabetics.",
        "FOL": "¬∀x (Cake(x) → SuitableForDiabetics(x))"
    },
    {
        "NL": "In a tropical rainforest ecosystem, diverse plant species, animal species, and microorganisms interact and form complex food webs, contributing to the stability and productivity of the ecosystem.",
        "FOL": "∀x∀y∀z (TropicalRainforestEcosystem(x) ∧ PlantSpecies(y) ∧ AnimalSpecies(z) ∧ Microorganisms(x) ∧ InteractAndFormComplexFoodWebs(x, y, z) → (ContributesToStability(x) ∧ EcosystemProductivity(x)))"
    },
    {
        "NL": "A square has four equal sides, a rectangle has four sides with two pairs of equal length, and a triangle has three sides.",
        "FOL": "∀x ∀y ∀z (Square(x) ∧ Rectangle(y) ∧ Triangle(z) → (HasEqualSides(x, 4) ∧ HasTwoPairsEqualSides(y) ∧ HasSides(z, 3)))"
    },
    {
        "NL": "Scientific research leads to advancements in technology.",
        "FOL": "∀x∀y (ScientificResearch(x) ∧ Technology(y) → LeadsToAdvancements(x, y))"
    },
    {
        "NL": "A building is considered a museum if it houses and displays collections of objects of artistic, historical, or scientific interest.",
        "FOL": "∀x (Building(x) ∧ HousesCollections(x) ∧ DisplaysCollections(x) ∧ ArtisticOrHistoricalOrScientificInterest(x) → Museum(x))"
    },
    {
        "NL": "An aquatic animal with gills and fins is classified as a fish.",
        "FOL": "∀x (AquaticAnimal(x) ∧ Gills(x) ∧ Fins(x) → ClassifiedAsFish(x))"
    },
    {
        "NL": "A television broadcasts programs in color or black and white, and can receive signals through a cable or satellite connection.",
        "FOL": "∀x (Television(x) → (Broadcasts(x, Programs) ∧ (InColor(x) ∨ InBlackAndWhite(x)) ∧ ReceivesSignals(x) ∧ (Through(x, Cable) ∨ Through(x, Satellite))))"
    },
    {
        "NL": "A student graduates if they complete all required coursework.",
        "FOL": "∀x (Student(x) ∧ CompletesRequiredCoursework(x) → Graduates(x))"
    },
    {
        "NL": "An elephant roams in the jungle, whereas a rat sneaks in the houses.",
        "FOL": "∀x (Elephant(x) → RoamsInJungle(x)) ∧ ∀y (Rat(y) → SneaksInHouses(y))"
    },
    {
        "NL": "An umbrella protects from rain or sun, but not both simultaneously.",
        "FOL": "∀x (Umbrella(x) → (∃y ∃z (Rain(y) ∧ Sun(z) ∧ Protect(x, y) ⊕ Protect(x, z))))"
    },
    {
        "NL": "A landmass surrounded by water on all sides and smaller than a continent is an island.",
        "FOL": "∀x (Landmass(x) ∧ SurroundedByWater(x) ∧ SmallerThanContinent(x) → Island(x))"
    },
    {
        "NL": "An artwork is valued if it is a painting or a sculpture, while it is created by either a renowned artist or displays impressive craftsmanship, but not both.",
        "FOL": "∀x (Artwork(x) ∧ (Painting(x) ∨ Sculpture(x)) ∧ ((RenownedArtist(x) ∧ ¬ImpressiveCraftsmanship(x)) ∨ (¬RenownedArtist(x) ∧ ImpressiveCraftsmanship(x))) → Valued(x))"
    },
    {
        "NL": "There exists a child who does not play.",
        "FOL": "∃x (Child(x) ∧ ¬Play(x))"
    },
    {
        "NL": "A mammal is classified as a marsupial if it gives birth to underdeveloped young and has a pouch, and as a placental mammal if it gives birth to more developed young and lacks a pouch.",
        "FOL": "∀x (Mammal(x) → ((UnderdevelopedYoung(x) ∧ HasPouch(x) → Marsupial(x)) ∧ (MoreDevelopedYoung(x) ∧ LacksPouch(x) → PlacentalMammal(x))))"
    },
    {
        "NL": "A musical instrument is a percussion instrument if it produces sound by being struck and doesn't use strings or air flow.",
        "FOL": "∀x (MusicalInstrument(x) ∧ Percussion(x) ↔ (ProducesSoundByStriking(x) ∧ ¬UsesStrings(x) ∧ ¬UsesAirFlow(x)))"
    },
    {
        "NL": "A volcano becomes active when there is an increase in magma activity, gas release, or seismic activity.",
        "FOL": "∀x (Volcano(x) → (IncreasedMagmaActivity(x) ∨ IncreasedGasRelease(x) ∨ IncreasedSeismicActivity(x) → Active(x)))"
    },
    {
        "NL": "A maple tree has broad leaves, a pine tree has needles, and a palm tree has fronds.",
        "FOL": "∀x ∀y ∀z (MapleTree(x) ∧ PineTree(y) ∧ PalmTree(z) → (BroadLeaves(x) ∧ Needles(y) ∧ Fronds(z)))"
    },
    {
        "NL": "A cat may meow to get attention, but not while it's sleeping.",
        "FOL": "∀x (Cat(x) → (MeowForAttention(x) ∧ ¬Sleeping(x)))"
    },
    {
        "NL": "A company acquires another company if it obtains control over its assets, operations, and management.",
        "FOL": "∀x ∀y (Company(x) ∧ Company(y) ∧ ObtainsControlOverAssets(x, y) ∧ ObtainsControlOverOperations(x, y) ∧ ObtainsControlOverManagement(x, y) → Acquires(x, y))"
    },
    {
        "NL": "Musical instruments that produce sound through vibration of a membrane are classified as membranophones.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundThroughVibrationOfMembrane(x) → Membranophone(x))"
    },
    {
        "NL": "A person is considered a veterinarian if they diagnose, treat, and prevent illnesses, injuries, and other health issues in animals.",
        "FOL": "∀x (Veterinarian(x) ↔ (DiagnosesTreatsAndPreventsIllnessesInjuriesAndHealthIssuesInAnimals(x)))"
    },
    {
        "NL": "No human is both a chef and a doctor.",
        "FOL": "¬∃x (Human(x) ∧ Chef(x) ∧ Doctor(x))"
    },
    {
        "NL": "Fish live in water.",
        "FOL": "∀x (Fish(x) → LivesInWater(x))"
    },
    {
        "NL": "A movie is shown in a theater if it is scheduled and the theater has a license.",
        "FOL": "∀x ∀y (Movie(x) ∧ Theater(y) ∧ Scheduled(x, y) ∧ HasLicense(y) → Shown(x, y))"
    },
    {
        "NL": "A student who completes their assignments on time and participates in class discussions is engaged.",
        "FOL": "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) ∧ ParticipatesInClassDiscussions(x) → Engaged(x))"
    },
    {
        "NL": "A country that invests in renewable energy sources, such as solar, wind, or hydroelectric power, contributes to reducing greenhouse gas emissions.",
        "FOL": "∀x (Country(x) ∧ (Solar(y) ∨ Wind(y) ∨ Hydroelectric(y)) ∧ InvestsInRenewableEnergySources(x, y) → ContributesToReducingGreenhouseGasEmissions(x))"
    },
    {
        "NL": "A building primarily used for religious activities, such as worship and prayer, is a place of worship.",
        "FOL": "∀x (Building(x) ∧ PrimaryUseReligiousActivities(x) → PlaceOfWorship(x))"
    },
    {
        "NL": "A bicycle is a mountain bike if it has thick tires and is not designed for road use.",
        "FOL": "∀x (Bicycle(x) ∧ ThickTires(x) ∧ ¬DesignedForRoadUse(x) → MountainBike(x))"
    },
    {
        "NL": "A squirrel is climbing on the tree, and a rabbit is hopping in the field.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Tree(y) ∧ ClimbingOn(x, y)) ∧ ∃z (Rabbit(z) ∧ Hopping(z) ∧InTheField(z))"
    },
    {
        "NL": "A teacher educates students in math, science, or history.",
        "FOL": "∀x∀y (Teacher(x) ∧ Student(y) → (EducatesInMath(x, y) ∨ EducatesInScience(x, y) ∨ EducatesInHistory(x, y)))"
    },
    {
        "NL": "A device qualifies as a computer if it can process data, run software, has storage, and provides internet access.",
        "FOL": "∀x ((Device(x) ∧ CanProcessData(x) ∧ RunSoftware(x) ∧ HasStorage(x) ∧ ProvidesInternetAccess(x)) → Computer(x))"
    },
    {
        "NL": "An element that bonds with oxygen, dissolves in water, and has a metallic taste is a metal.",
        "FOL": "∀x (Element(x) ∧ BondsWithOxygen(x) ∧ DissolvesInWater(x) ∧ HasMetallicTaste(x) → Metal(x))"
    },
    {
        "NL": "There is a person who all people point towards, if not all stars are made of gas.",
        "FOL": "¬∀x (Star(x) → MadeOfGas(x)) → ∃y (Person(y) ∧ ∀z (Person(z) → PointsTowards(z, y)))"
    },
    {
        "NL": "A planet with a dense atmosphere and a strong magnetic field can protect its surface from solar radiation.",
        "FOL": "∀x (Planet(x) ∧ DenseAtmosphere(x) ∧ StrongMagneticField(x) → ProtectsFromSolarRadiation(x))"
    },
    {
        "NL": "A hotel provides accommodation and amenities, such as room service and cleaning services, to its guests.",
        "FOL": "∀x ∀y (Hotel(x) ∧ Guest(y) → (ProvidesAccommodation(x, y) ∧ ProvidesAmenities(x, RoomService) ∧ ProvidesAmenities(x, CleaningServices)))"
    },
    {
        "NL": "A scientist discovers a new species if they find an organism that has unique characteristics and is not part of any known taxonomic group.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Organism(y) ∧ UniqueCharacteristics(y) ∧ ¬KnownTaxonomicGroup(z, y) → DiscoversNewSpecies(x, y, z))"
    },
    {
        "NL": "A quadrilateral has four angles.",
        "FOL": "∀x (Quadrilateral(x) → HasAngles(x, 4))"
    },
    {
        "NL": "A student passes an exam if they achieve a score above the passing threshold.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) ∧ AchievesScoreAboveThreshold(x, y) → Passes(x, y))"
    },
    {
        "NL": "A computer with a powerful graphics card, ample storage space, and a high-speed processor can efficiently run demanding software applications.",
        "FOL": "∀x (Computer(x) ∧ PowerfulGraphicsCard(x) ∧ AmpleStorageSpace(x) ∧ HighSpeedProcessor(x) → EfficientlyRunsDemandingSoftwareApplications(x))"
    },
    {
        "NL": "A tool is termed as prehistoric if it is old and produced from elements like bone, stone, or ivory.",
        "FOL": "∀x (Tool(x) ∧ Old(x) ∧ (ProducedFromBone(x) ∨ ProducedFromStone(x) ∨ ProducedFromIvory(x)) → Prehistoric(x))"
    },
    {
        "NL": "A movie theater screens films for audiences, while an art gallery exhibits artwork for visitors.",
        "FOL": "∀x ∀y (MovieTheater(x) ∧ ArtGallery(y) → (ScreensFilms(x) ∧ ForAudiences(x) ∧ ExhibitsArtwork(y) ∧ ForVisitors(y)))"
    },
    {
        "NL": "A device is a smartphone if it has a touchscreen, can access the internet, and can make phone calls.",
        "FOL": "∀x (Device(x) ∧ Touchscreen(x) ∧ InternetAccess(x) ∧ CanMakeCalls(x) → Smartphone(x))"
    },
    {
        "NL": "All students in the class study hard or struggle with math.",
        "FOL": "∀x (Student(x) ∧ InTheClass(x) → (StudyHard(x) ∨ StruggleWithMath(x)))"
    },
    {
        "NL": "Sunflowers follow the sun's movement during the day.",
        "FOL": "∀x∀y∀z (Sunflower(x) ∧ Sun(y) ∧ Movement(y, z) ∧ Day(z) → Follows(x, z))"
    },
    {
        "NL": "A well-organized event has a clear agenda, a comfortable venue, and efficient registration process.",
        "FOL": "∀x (Event(x) ∧ ClearAgenda(x) ∧ ComfortableVenue(x) ∧ EfficientRegistrationProcess(x) → WellOrganized(x))"
    },
    {
        "NL": "A show is successful if and only if it is watched by at least one unsuccessful person.",
        "FOL": "∀x (Successful(x) ↔ ∃y (Unsuccessful(y) ∧ Watches(y, x)))"
    },
    {
        "NL": "A fruit contains seeds and develops from a flower's ovary.",
        "FOL": "∀x (Fruit(x) → (ContainsSeeds(x) ∧ DevelopsFromFlowerOvary(x)))"
    },
    {
        "NL": "An email is sent from a sender to a recipient through an email service.",
        "FOL": "∀x ∀y ∀z (Email(x) ∧ Sender(y) ∧ Recipient(z) → SentThroughService(x, y, z))"
    },
    {
        "NL": "A meal is deemed nutritious when it includes an appropriate balance of proteins, carbohydrates, and essential vitamins.",
        "FOL": "∀x (Meal(x) ∧ BalancedProteins(x) ∧ BalancedCarbohydrates(x) ∧ EssentialVitamins(x) → Nutritious(x))"
    },
    {
        "NL": "A painting that depicts both nature and people is a landscape with figures.",
        "FOL": "∀x (Painting(x) ∧ DepictsNature(x) ∧ DepictsPeople(x) → LandscapeWithFigures(x))"
    },
    {
        "NL": "A dessert can be prepared with chocolate, fruit, or nuts, but it does not contain all three ingredients.",
        "FOL": "∀x (Dessert(x) → (ContainsChocolate(x) ⊕ ContainsFruit(x) ⊕ ContainsNuts(x)))"
    },
    {
        "NL": "There isn't a car that can be driven by all drivers.",
        "FOL": "¬∃x (Car(x) ∧ ∀y (Driver(y) → CanDrive(y, x)))"
    },
    {
        "NL": "A zoo contains various animal species, like mammals, birds, and reptiles, and offers educational programs for visitors.",
        "FOL": "∀x (Zoo(x) ∧ (Mammals(x) ∨ Birds(x) ∨ Reptiles(x)) → OffersEducationalPrograms(x))"
    },
    {
        "NL": "A chef prepares meals, and a waiter serves the meals to customers.",
        "FOL": "∀x ∀y (Chef(x) ∧ PreparesMealFor(y, x) ∧ Waiter(y) → ServesMealToCustomers(y, x))"
    },
    {
        "NL": "There is an artist who paints no scenery he finds inspiring.",
        "FOL": "∃x (Artist(x) ∧ ∀y (Scenery(y) ∧ Inspire(x, y) → ¬Paint(x, y)))"
    },
    {
        "NL": "A bakery sells freshly baked goods, and some of them are gluten-free.",
        "FOL": "∀x (Bakery(x) ∧ SellsFreshBakedGoods(x)) ∧ ∃y (Bakery(y) ∧ SellsGlutenFree(y))"
    },
    {
        "NL": "If an animal is a herbivore, it does not eat meat.",
        "FOL": "∀x (Herbivore(x) → ¬EatMeat(x))"
    },
    {
        "NL": "A fruit is an apple or an orange.",
        "FOL": "∀x (Fruit(x) → (Apple(x) ∨ Orange(x)))"
    },
    {
        "NL": "A musician is a virtuoso if they excel in playing at least one musical instrument.",
        "FOL": "∀x (Musician(x) → (Virtuoso(x) ↔ ∃y (MusicalInstrument(y) ∧ ExcelsInPlaying(x, y))))"
    },
    {
        "NL": "Every member of the team likes soccer and detests basketball.",
        "FOL": "∀x (TeamMember(x) → (LikesSoccer(x) ∧ DetestsBasketball(x)))"
    },
    {
        "NL": "A musician is popular if they have many fans and release hit songs or they are featured on popular playlists.",
        "FOL": "∀x (Musician(x) → Popular(x) ↔ (ManyFans(x) ∧ HitSongs(x) ∨ FeaturedOnPopularPlaylists(x)))"
    },
    {
        "NL": "A song becomes a hit when it shows deep lyrics, catchy melody, and excellent vocals.",
        "FOL": "∀x (Song(x) ∧ DeepLyrics(x) ∧ CatchyMelody(x) ∧ ExcellentVocals(x) → BecomesAHit(x))"
    },
    {
        "NL": "Each teacher is efficient or some birds are beautiful provided there is a movie which is captivating unless all are pleasant.",
        "FOL": "(∀x (Teacher(x) → Efficient(x)) ∨ ∃y (Bird(y) ∧ Beautiful(y))) ↔ (∃z (Movie(z) ∧ (Captivating(z) ∨ ∀w (¬Unpleasant(w)))))"
    },
    {
        "NL": "An event is characterized as a festival if it celebrates a specific theme or culture, includes various activities, and attracts a large gathering of people.",
        "FOL": "∀x (Event(x) ∧ CelebratesSpecificThemeOrCulture(x) ∧ IncludesVariousActivities(x) ∧ AttractsLargeGatheringOfPeople(x) → Festival(x))"
    },
    {
        "NL": "A smartphone connects to a network and allows communication through calls or messages.",
        "FOL": "∀x∀y (Smartphone(x) ∧ ConnectsToNetwork(x, y) → (AllowsCommunication(x, z) ∧ (Calls(z) ∨ Messages(z))))"
    },
    {
        "NL": "A bicycle is ridden on the street, while a sled is pulled on the snow.",
        "FOL": "∀x (Bicycle(x) → RiddenOnStreet(x)) ∧ ∀y (Sled(y) → PulledOnSnow(y))"
    },
    {
        "NL": "A woman is cute or bold.",
        "FOL": "∀x (Woman(x) → (Cute(x) ∨ Bold(x)))"
    },
    {
        "NL": "A painter is painting a mural in the art studio.",
        "FOL": "∃x ∃y ∃z (Painter(x) ∧ Mural(y) ∧ ArtStudio(z) ∧ PaintingAt(x, y) ∧ At(x, z) ∧ InTheStudio(x))"
    },
    {
        "NL": "It is not true that something is a small square only if it is yellow.",
        "FOL": "¬∀x (Small(x) ∧ Square(x) → Yellow(x))"
    },
    {
        "NL": "Some people speak English, French, and Spanish.",
        "FOL": "∃x (Person(x) ∧ Speak(x, English) ∧ Speak(x, French) ∧ Speak(x, Spanish))"
    },
    {
        "NL": "No bird with wings lacks flight.",
        "FOL": "∀x (Bird(x) → (HaveWings(x) → ¬LackFlight(x)))"
    },
    {
        "NL": "When a volcano erupts, it can cause destruction, emit smoke and ash, and change the surrounding environment.",
        "FOL": "∀x (Volcano(x) ∧ Erupts(x) → (CausesDestruction(x) ∨ EmitsSmoke(x) ∨ EmitsAsh(x) ∨ ChangesEnvironment(x)))"
    },
    {
        "NL": "A river is navigable if it has sufficient depth and a steady flow of water.",
        "FOL": "∀x (River(x) ∧ SufficientDepth(x) ∧ SteadyFlowOfWater(x) → Navigable(x))"
    },
    {
        "NL": "A person is considered an engineer if they apply scientific and mathematical principles to design, build, or maintain structures, machines, or systems.",
        "FOL": "∀x (Person(x) ∧ ApplyScientificAndMathematicalPrinciples(x) ∧ (DesignOrBuildOrMaintain(x)) → Engineer(x))"
    },
    {
        "NL": "A book authored by a writer who has won a literary prize for their work belongs to the category of award-winning literature.",
        "FOL": "∀x∀y∀z (Book(x) ∧ Writer(y) ∧ LiteraryPrize(z) ∧ AuthoredBy(x, y) ∧ Won(y, z) → AwardWinningLiterature(x))"
    },
    {
        "NL": "Every teacher is responsible, but not every responsible individual is a teacher.",
        "FOL": "∀x (Teacher(x) → Responsible(x)) ∧ ¬∀x (Responsible(x) → Teacher(x))"
    },
    {
        "NL": "A musician plays an instrument, and they can perform in a concert.",
        "FOL": "∀x∀y (Musician(x) ∧ Instrument(y) → (Plays(x, y) ∧ CanPerform(x, Concert)))"
    },
    {
        "NL": "An electronic device that captures images, stores them, and allows for viewing is a digital camera.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CaptureImages(x) ∧ StoreImages(x) ∧ AllowsViewing(x) → DigitalCamera(x))"
    },
    {
        "NL": "A restaurant is family-friendly if it has a play area for children, a kids' menu, and high chairs available.",
        "FOL": "∀x (Restaurant(x) ∧ FamilyFriendly(x) ↔ (HasPlayArea(x) ∧ HasKidsMenu(x) ∧ HasHighChairs(x)))"
    },
    {
        "NL": "All students have studied every course by a professor.",
        "FOL": "∃x (Student(x) ∧ ∃y (Professor(y) ∧ ∀z (Course(z) ∧ TaughtBy(z, y) → Studied(x, z))))"
    },
    {
        "NL": "A game that is strategic can engage players.",
        "FOL": "∀x ∀y (Game(x) ∧ Strategic(x) ∧ Player(y) → CanEngage(x, y))"
    },
    {
        "NL": "A student prefers math and science courses if they are skilled at problem-solving and logical thinking, but dislikes literature and history courses.",
        "FOL": "∀x (Student(x) ∧ SkilledAtProblemSolving(x) ∧ LogicalThinking(x) → PrefersMathAndScience(x)) ∧ (LiteratureAndHistoryCourses(x) → DislikesLiteratureAndHistory(x))"
    },
    {
        "NL": "If an object is a washing machine, it must be an appliance that cleans clothes, linens, and other textiles by agitating them in water and detergent.",
        "FOL": "∀x ((Appliance(x) ∧ CleansClothesLinensAndOtherTextiles(x) ∧ ByAgitatingInWaterAndDetergent(x)) → WashingMachine(x))"
    },
    {
        "NL": "Mathematical abstractions are not concepts.",
        "FOL": "∀x (MathematicalAbstraction(x) → ¬Concept(x))"
    },
    {
        "NL": "A farmer grows crops in a field.",
        "FOL": "∀x∀y (Farmer(x) ∧ Field(y) → GrowsCrops(x, y))"
    },
    {
        "NL": "A vacation destination with beautiful scenery and a variety of activities is popular, but not if it is difficult to access.",
        "FOL": "∀x (VacationDestination(x) ∧ ((BeautifulScenery(x) ∧ VarietyOfActivities(x)) ∧ ¬DifficultToAccess(x) → Popular(x)))"
    },
    {
        "NL": "An engineer designs bridges or roads.",
        "FOL": "∀x (Engineer(x) → DesignsBridges(x) ∨ DesignsRoads(x))"
    },
    {
        "NL": "An art exhibit draws attention with thought-provoking themes, skilled artists, and well-curated presentations.",
        "FOL": "∀x (ArtExhibit(x) → (DrawsAttention(x) ↔ (ThoughtProvokingThemes(x) ∧ SkilledArtists(x) ∧ WellCuratedPresentations(x))))"
    },
    {
        "NL": "A material is an insulator if it resists the flow of electrical current, has low electrical conductivity, and does not readily allow heat to pass through it.",
        "FOL": "∀x∀y∀z (Material(x) ∧ ResistsFlowOfElectricalCurrent(x, y) ∧ LowElectricalConductivity(x) ∧ ¬ReadilyAllowsHeatPassage(x, z) → Insulator(x))"
    },
    {
        "NL": "A phone is eligible for an upgrade if the contract period has expired or the phone is damaged.",
        "FOL": "EligibleForUpgrade(Phone) ↔ (ContractExpired(Phone) ∨ Damaged(Phone))"
    },
    {
        "NL": "A movie can be classified as a comedy if it is humorous, a drama if it is serious, and a thriller if it is suspenseful.",
        "FOL": "∀x (Movie(x) ∧ (Comedy(x) ↔ Humorous(x)) ∧ (Drama(x) ↔ Serious(x)) ∧ (Thriller(x) ↔ Suspenseful(x)))"
    },
    {
        "NL": "A musical instrument is a string instrument if it produces sound through vibrating strings and has a resonating body.",
        "FOL": "∀x (MusicalInstrument(x) ∧ VibratingStrings(x) ∧ ResonatingBody(x) → StringInstrument(x))"
    },
    {
        "NL": "A company can be either a startup or an established company.",
        "FOL": "∀x (Company(x) → (Startup(x) ⊕ EstablishedCompany(x)))"
    },
    {
        "NL": "A book is intriguing if and only if its story is absorbing and the language is unambiguous, but it doesn't employ a lot of complex phrases.",
        "FOL": "∀x (Book(x) ∧ Intriguing(x) ↔ (AbsorbingStory(x) ∧ UnambiguousLanguage(x) ∧ ¬ManyComplexPhrases(x)))"
    },
    {
        "NL": "A person is considered a linguist if they study languages, their structure, development, and use.",
        "FOL": "∀x (Person(x) ∧ StudiesLanguages(x) ∧ StudiesLanguageStructureDevelopmentAndUse(x) → Linguist(x))"
    },
    {
        "NL": "A fish swims in the sea.",
        "FOL": "∀x ∀y (Fish(x) ∧ Sea(y) → SwimsIn(x, y))"
    },
    {
        "NL": "A vehicle is deemed high-class if it possesses powerful engine and spacious interior.",
        "FOL": "∀x (Vehicle(x) ∧ HasPowerfulEngine(x) ∧ HasSpaciousInterior(x) → HighClass(x))"
    },
    {
        "NL": "A celestial object composed primarily of ice and dust that orbits the sun and develops a tail when it approaches the sun is a comet.",
        "FOL": "∀x∀y (CelestialObject(x) ∧ PrimarilyComposedOfIceAndDust(x) ∧ Orbits(x, y) ∧ Sun(y) ∧ DevelopsTailWhenApproachingSun(x) → Comet(x))"
    },
    {
        "NL": "A person is considered a writer if they create literary works using words",
        "FOL": "∀x (Person(x) ∧ CreatesLiteraryWorkWithWords(x) → Writer(x))"
    },
    {
        "NL": "An electronic device that uses radio waves to transmit and receive data, can connect to other devices wirelessly, and requires a power source for operation is a wireless communication device.",
        "FOL": "∀x ∀y ∀z (ElectronicDevice(x) ∧ RadioWaves(y) ∧ PowerSource(z) ∧ UsesForDataTransmission(x, y) ∧ ConnectsWirelessly(x) ∧ Requires(x, z) → WirelessCommunicationDevice(x))"
    },
    {
        "NL": "A sculptor shapes materials, transforming them into three-dimensional art forms.",
        "FOL": "∀x (Sculptor(x) → (∃y (Material(y) ∧ ShapesMaterial(x, y))))"
    },
    {
        "NL": "A book receives a literary award if it is critically acclaimed, has a unique and engaging story, and demonstrates outstanding writing skills.",
        "FOL": "∀x (Book(x) ∧ CriticallyAcclaimed(x) ∧ UniqueEngagingStory(x) ∧ OutstandingWritingSkills(x) → LiteraryAward(x))"
    },
    {
        "NL": "A student can pass an exam if they study hard or they are naturally talented.",
        "FOL": "∀x (Student(x) ∧ (StudiesHard(x) ∨ NaturallyTalented(x)) → PassesExam(x))"
    },
    {
        "NL": "A vehicle is classified as an electric vehicle if it is powered exclusively by electricity.",
        "FOL": "∀x (Vehicle(x) ∧ ∃y (Electricity(y) ∧ PoweredExclusivelyBy(x, y)) → ElectricVehicle(x))"
    },
    {
        "NL": "Listening to loud music can be harmful to one's hearing.",
        "FOL": "∀x (LoudMusic(x) → CanBeHarmfulToHearing(x))"
    },
    {
        "NL": "A metal is not both magnetic and nonmagnetic.",
        "FOL": "∀x (Metal(x) → ¬(Magnetic(x) ∧ Nonmagnetic(x)))"
    },
    {
        "NL": "A square is not brown and does not contain any white object.",
        "FOL": "∀x (Square(x) → (¬Brown(x) ∧ ¬∃y (White(y) ∧ Contains(x, y))))"
    },
    {
        "NL": "A flower blooms when the temperature is warm and there is sufficient sunlight.",
        "FOL": "∀x (Flower(x) → ((WarmTemperature(x) ∧ SufficientSunlight(x)) → Blooms(x)))"
    },
    {
        "NL": "An object is either heavy or light.",
        "FOL": "∀x (Object(x) → (Heavy(x) ⊕ Light(x)))"
    },
    {
        "NL": "A type of fruit has a specific color, a certain vitamin content, and is either edible or inedible.",
        "FOL": "∀x (Fruit(x) → (∃y Color(y) ∧ HasColor(x, y) ∧ (∃z VitaminContent(z) ∧ HasVitamins(x, z)) ∧ (Edible(x) ∨ Inedible(x))))"
    },
    {
        "NL": "A well-insulated house with energy-efficient windows can reduce heating and cooling costs.",
        "FOL": "∀x (House(x) ∧ WellInsulatedAndEnergyEfficientWindows(x) → ReducesHeatingAndCoolingCosts(x))"
    },
    {
        "NL": "A violin is made of wood, while a trumpet is made of metal.",
        "FOL": "∀x∀y (Violin(x) ∧ Trumpet(y) → (MadeOfWood(x) ∧ MadeOfMetal(y)))"
    },
    {
        "NL": "A computer has a screen and can process data, while a book lacks a screen and cannot process data.",
        "FOL": "∀x (Computer(x) → HasScreen(x) ∧ CanProcessData(x)) ∧ ∀y (Book(y) → ¬HasScreen(y) ∧ ¬CanProcessData(y))"
    },
    {
        "NL": "A train travels on tracks, powered by an engine and carrying passengers.",
        "FOL": "∃x ∃y ∃z ∃w (Train(x) ∧ Tracks(y) ∧ Engine(z) ∧ Passenger(w) ∧ TravelsOn(x, y) ∧ PoweredBy(x, z) ∧ Carries(x, w))"
    },
    {
        "NL": "A being is considered a writer if they compose lyrical poetry.",
        "FOL": "∀x (Being(x) ∧ ComposesLyricalPoetry(x) → Writer(x))"
    },
    {
        "NL": "Something is a dull triangle only if it is blue.",
        "FOL": "∀x (Dull(x) → (Triangle(x) → Blue(x)))"
    },
    {
        "NL": "Every chef who has instructed others, all of whom have enhanced their cooking and praised the chef, either has won a culinary award or has been endorsed by all their teachers.",
        "FOL": "∀x (Chef(x) ∧ ∀y (Student(y) ∧ Instructed(x, y) ∧ EnhancedCooking(y) ∧ Praised(y, x)) → (WonCulinaryAward(x) ∨ ∀z (Teacher(z, x) → Endorsed(z, x))))"
    },
    {
        "NL": "An animal is considered endangered if it is at risk of extinction.",
        "FOL": "∀x (AtRiskOfExtinction(x) → Endangered(x))"
    },
    {
        "NL": "A creature is fast or slow.",
        "FOL": "∀x (Creature(x) → (Fast(x) ∨ Slow(x)))"
    },
    {
        "NL": "There exist paintings that are both surrealistic and have a night scenery, while all the others are classic and have a day scenery.",
        "FOL": "∀x (Painting(x) → (Surrealistic(x) ∧ NightScenery(x)) ⊕ (Classic(x) ∧ DayScenery(x)))"
    },
    {
        "NL": "A gardener plants flowers and trees in a garden, ensuring they receive the right amount of sunlight and water.",
        "FOL": "∀x ∀y ∀z (Gardener(x) ∧ Flower(y) ∧ Tree(z) ∧ Garden(w) ∧ RightAmountOfSunlight(y, z) ∧ RightAmountOfWater(y, z) → PlantsIn(x, y, z, w))"
    },
    {
        "NL": "A fruit that is ripe or overripe is suitable for making a smoothie.",
        "FOL": "∀x (Fruit(x) ∧ (Ripe(x) ∨ Overripe(x)) → SuitableForSmoothie(x))"
    },
    {
        "NL": "There are no human who love Maria.",
        "FOL": "¬∃x (Human(x) ∧ Love(x, maria))"
    },
    {
        "NL": "A musical instrument that is made of brass, produces sound through the vibration of the player's lips, and is played by pressing valves or slides is a trumpet or a trombone.",
        "FOL": "∀x (MusicalInstrument(x) ∧ MadeOfBrass(x) ∧ ProducesSoundByVibratingLips(x) ∧ (PlayedByPressingValves(x) ∨ PlayedByPressingSlides(x)) → (Trumpet(x) ∨ Trombone(x)))"
    },
    {
        "NL": "A course is challenging if and only if its content is advanced and assignments are tough, but it doesn't assign excessive homework.",
        "FOL": "∀x (Course(x) ∧ Challenging(x) ↔ (AdvancedContent(x) ∧ ToughAssignments(x) ∧ ¬ExcessiveHomework(x)))"
    },
    {
        "NL": "A library lends out books or DVDs, but not if the item is reserved by another patron or if the borrower's account has overdue fines.",
        "FOL": "∀x ∀y ∀z (Library(x) ∧ Item(y) ∧ Borrower(z) ∧ ¬(ReservedByAnotherPatron(y) ∨ HasOverdueFines(z)) → (LendsBooks(x, y, z) ∨ LendsDVDs(x, y, z)))"
    },
    {
        "NL": "There don't exist any cars that cannot either drive on snow or dirt.",
        "FOL": "¬∃x (Car(x) ∧ ¬CanBeDrivenOnSnow(x) ∧ ¬CanBeDrivenOnDirt(x))"
    },
    {
        "NL": "A square has four equal sides, a rectangle has four sides, and a triangle has three sides.",
        "FOL": "∀x∀y∀z (Square(x) → (HasSides(x, 4) ∧ EqualSides(x))) ∧ (Rectangle(y) → HasSides(y, 4)) ∧ (Triangle(z) → HasSides(z, 3))"
    },
    {
        "NL": "A smartphone can access the internet when connected to a Wi-Fi network or cellular data.",
        "FOL": "∀x (Smartphone(x) ∧ (WiFiNetwork(x) ∨ CellularData(x)) → CanAccessInternet(x))"
    },
    {
        "NL": "If one city is larger than another, then there is a city between them in terms of size.",
        "FOL": "∀x ∀y ∃z (City(x) ∧ City(y) ∧ City(z) ∧ LargerThan(x, y) → Between(z, x, y))"
    },
    {
        "NL": "An element can be metal, non-metal, or metalloid.",
        "FOL": "∀x (Metal(x) ∨ NonMetal(x) ∨ Metalloid(x))"
    },
    {
        "NL": "A musical performance involves a performer, an audience, and a stage.",
        "FOL": "∀x ∀y ∀z (MusicalPerformance(x) → (∃w ∃v ∃u (Performer(w) ∧ Audience(v) ∧ Stage(u) ∧ Involves(x, w, v, u))))"
    },
    {
        "NL": "A hotel room is comfortable if it is clean, quiet, and has either a view or a spacious layout.",
        "FOL": "∀x∀y (HotelRoom(x) ∧ Clean(x) ∧ Quiet(x) ∧ (View(y) ∨ SpaciousLayout(y)) → Comfortable(x, y))"
    },
    {
        "NL": "All colors are either primary or secondary, but not both.",
        "FOL": "∀x (Color(x) → (Primary(x) ⊕ Secondary(x)))"
    },
    {
        "NL": "A silent owl hunts at night.",
        "FOL": "∃x (Silent(x) ∧ Owl(x) → ∃y (Hunts(x, y)))"
    },
    {
        "NL": "In a chess game, a player can only move their own pieces.",
        "FOL": "∀x∀y∀z (ChessGame(x) ∧ Player(y, x) ∧ Piece(z, x) ∧ Owns(y, z) → CanMove(y, z))"
    },
    {
        "NL": "A cell is a eukaryotic cell if it has a nucleus, membrane-bound organelles, and is not a prokaryotic cell.",
        "FOL": "∀x (Cell(x) → ((HasNucleus(x) ∧ MembraneBoundOrganelles(x) ∧ ¬ProkaryoticCell(x)) ↔ EukaryoticCell(x)))"
    },
    {
        "NL": "A shark hunts fish for nutrients, while a crow feeds off the bits of deceased animals.",
        "FOL": "∀x ∀y (Shark(x) ∧ Fish(y) → HuntsForNutrients(x, y)) ∧ ∀z ∀w (Crow(z) ∧ DeceasedAnimal(w) → FeedsOffBitsOf(z, w))"
    },
    {
        "NL": "Employees who work overtime are paid extra.",
        "FOL": "∀x∀y (Employee(x) ∧ WorksOvertime(x, y) → PaidExtra(x, y))"
    },
    {
        "NL": "A smartphone has various built-in features, like a camera, GPS, and voice assistant, which can be accessed through different applications.",
        "FOL": "∀x ∀y ∀z (Smartphone(x) → (HasBuiltInFeatures(x, y) ∧ (Camera(y) ∨ GPS(y) ∨ VoiceAssistant(y)) ∧ AccessedThrough(x, z) ∧ DifferentApplications(z)))"
    },
    {
        "NL": "An animal is a fish if it lives in water, has gills, and typically has fins and scales.",
        "FOL": "∀x (Fish(x) ↔ (Animal(x) ∧ LivesInWater(x) ∧ HasGills(x) ∧ TypicallyHasFins(x) ∧ TypicallyHasScales(x)))"
    },
    {
        "NL": "An airplane has wings.",
        "FOL": "∀x (Airplane(x) → HasWings(x))"
    },
    {
        "NL": "A computer needs power, software, and hardware to operate correctly.",
        "FOL": "∀x (Computer(x) → (HasPower(x) ∧ HasSoftware(x) ∧ HasHardware(x)) → OperatesCorrectly(x))"
    },
    {
        "NL": "There are substances that are neither acidic nor basic.",
        "FOL": "∃x (Substance(x) ∧ ¬(Acidic(x) ∨ Basic(x)))"
    },
    {
        "NL": "Instructors teach students and evaluate their progress.",
        "FOL": "∀x∀y (Instructor(x) ∧ Student(y) → (Teaches(x, y) ∧ EvaluatesProgress(x, y)))"
    },
    {
        "NL": "An athlete, such as a swimmer or a runner, can maintain good health without consuming harmful substances.",
        "FOL": "∀x (Athlete(x) ∧ (Swimmer(x) ∨ Runner(x)) → (MaintainGoodHealth(x) ∧ ¬ConsumesHarmfulSubstances(x)))"
    },
    {
        "NL": "Rose cherishes a Beethoven symphony only if it was orchestrated before 1805.",
        "FOL": "∀x (Symphony(x) ∧ OrchestratedBy(x, beethoven) → (OrchestratedBeforeeighteenofive(x) ↔ Cherishes(rose, x)))"
    },
    {
        "NL": "Some cats are lazy and some cats are active, but there are no lazy active cats.",
        "FOL": "∃x (Lazy(x)) ∧ ∃x (Active(x)) ∧ ¬∃x (Lazy(x) ∧ Active(x))"
    },
    {
        "NL": "A snake is a type of reptile.",
        "FOL": "∀x (Snake(x) → Reptile(x))"
    },
    {
        "NL": "All cats are domestic.",
        "FOL": "∀x (Cat(x) → Domestic(x))"
    },
    {
        "NL": "A game played on a rectangular field, involving two opposing teams, and requiring the use of a spherical ball to score goals is a soccer match.",
        "FOL": "∀x (Game(x) ∧ PlayedOnRectangularField(x) ∧ InvolvesTwoOpposingTeams(x) ∧ RequiresSphericalBallToScoreGoals(x) → SoccerMatch(x))"
    },
    {
        "NL": "Movies are often watched in theaters, and viewers can enjoy them with popcorn.",
        "FOL": "∀x ∀y (Movie(x) ∧ Viewer(y) → (WatchedInTheaters(x, y) ∧ CanEnjoyWithPopcorn(x, y)))"
    },
    {
        "NL": "If an animal is a mammal, it has fur or hair and feeds its young with milk.",
        "FOL": "∀x (Mammal(x) → (HasFurOrHair(x) ∧ FeedsYoungWithMilk(x)))"
    },
    {
        "NL": "If a drink is alcoholic, it cannot be served to minors.",
        "FOL": "∀x (Alcoholic(x) → ¬CanBeServedToMinors(x))"
    },
    {
        "NL": "A laptop is portable if it's lightweight and has a compact design.",
        "FOL": "∀x (Laptop(x) ∧ Lightweight(x) ∧ CompactDesign(x) → Portable(x))"
    },
    {
        "NL": "Stars emit light in the night sky.",
        "FOL": "∀x (Star(x) → EmitsLightInNightSky(x))"
    },
    {
        "NL": "Anything round is solid only if it is a sphere.",
        "FOL": "∀x (Round(x) → (Solid(x) → Sphere(x)))"
    },
    {
        "NL": "A person is considered an athlete if they participate in a sport or engage in physical exercise regularly.",
        "FOL": "∀x (Person(x) ∧ (ParticipatesInSport(x) ∨ EngagesInPhysicalExerciseRegularly(x)) → Athlete(x))"
    },
    {
        "NL": "Each athlete who adores every sport is praised by a person.",
        "FOL": "∀x (Athlete(x) → ∀y ((Sport(y) → Adore(x, y)) → ∃z (Person(z) ∧ Praise(z, x))))"
    },
    {
        "NL": "A celestial body is a planet if it orbits a star and is not a star itself.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsStar(x) ∧ ¬Star(x) → Planet(x))"
    },
    {
        "NL": "A language can be spoken, written, or signed.",
        "FOL": "∀x (Language(x) → (Spoken(x) ∨ Written(x) ∨ Signed(x)))"
    },
    {
        "NL": "An artist needs creativity and technical skills to produce successful artwork.",
        "FOL": "∀x (Artist(x) → (NeedsCreativity(x) ∧ NeedsTechnicalSkills(x)))"
    },
    {
        "NL": "A cat is happy if it is fed, petted, and has nice toys.",
        "FOL": "∀x (Cat(x) → (Fed(x) ∧ Petted(x) ∧ HasNiceToys(x)) → Happy(x))"
    },
    {
        "NL": "Several employees are either part-time or full-time, but cannot be both.",
        "FOL": "∃x (Employee(x) ∧ (PartTime(x) ⊕ FullTime(x)))"
    },
    {
        "NL": "A system is a solar power plant when it is an energy production facility, converts sunlight into electricity, and employs various technologies such as photovoltaic panels or concentrated solar power.",
        "FOL": "∀x (System(x) ∧ EnergyProductionFacility(x) ∧ ConvertsSunlightIntoElectricity(x) ∧ EmploysVariousTechnologies(x, photovoltaicPanels, concentratedSolarPower) → SolarPowerPlant(x))"
    },
    {
        "NL": "A hotel receives good reviews if it provides clean rooms, friendly service, and is located near attractions.",
        "FOL": "∀x (Hotel(x) ∧ ProvidesCleanRooms(x) ∧ ProvidesFriendlyService(x) ∧ LocatedNearAttractions(x) → ReceivesGoodReviews(x))"
    },
    {
        "NL": "Some flowers bloom only during the day, while others bloom only at night.",
        "FOL": "∃x (Flower(x) ∧ DaytimeBloom(x)) ∧ ∃y (Flower(y) ∧ NighttimeBloom(y))"
    },
    {
        "NL": "An ice cream shop is popular if it attracts many customers and consistently sells out of flavors.",
        "FOL": "∀x (IceCreamShop(x) ∧ Popular(x) ↔ (AttractsCustomers(x) ∧ SellsOutFlavors(x)))"
    },
    {
        "NL": "A restaurant is popular if it serves delicious food or has an inviting atmosphere and is not located in an inaccessible area.",
        "FOL": "∀x (Restaurant(x) ∧ ((DeliciousFood(x) ∨ InvitingAtmosphere(x)) ∧ ¬InaccessibleArea(x)) → Popular(x))"
    },
    {
        "NL": "A person can enter a building if they have an access card or a security code, but not if they are on the restricted list.",
        "FOL": "∀x∀y (Person(x) ∧ Building(y) ∧ ((AccessCard(x) ∨ SecurityCode(x)) ∧ ¬RestrictedList(x)) → CanEnter(x, y))"
    },
    {
        "NL": "Some fruits are sour.",
        "FOL": "∃x (Fruit(x) ∧ Sour(x))"
    },
    {
        "NL": "Birds lay eggs, while mammals give birth to live young.",
        "FOL": "∀x (Bird(x) → LaysEggs(x)) ∧ ∀y (Mammal(y) → GivesBirthToLiveYoung(y))"
    },
    {
        "NL": "A plant requires sunlight, water, and nutrients from soil to grow properly.",
        "FOL": "∀x (Plant(x) → (RequiresSunlight(x) ∧ RequiresWater(x) ∧ RequiresNutrients(x)))"
    },
    {
        "NL": "A TV show gains popularity if it features a compelling story xor a famous cast, and has consistently high ratings.",
        "FOL": "∀x (TVShow(x) ∧ (CompellingStory(x) ⊕ FamousCast(x)) ∧ ConsistentlyHighRatings(x) → GainsPopularity(x))"
    },
    {
        "NL": "A computer requires a central processing unit, memory, and input-output devices to function properly.",
        "FOL": "∀x (Computer(x) → (RequiresCPU(x) ∧ RequiresMemory(x) ∧ RequiresInputOutputDevices(x)))"
    },
    {
        "NL": "Cameras capture images on a sensor.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∧ OnSensor(x)))"
    },
    {
        "NL": "A restaurant is a business that prepares and serves food and drinks to customers, often providing options for dining in, takeout, or delivery.",
        "FOL": "∀x (Restaurant(x) → (PreparesAndServesFood(x) ∧ ServesDrinks(x) ∧ OffersDiningIn(x) ∨ OffersTakeout(x) ∨ OffersDelivery(x)))"
    },
    {
        "NL": "Fruits are not always healthy.",
        "FOL": "∃x (Fruit(x) ∧ ¬Healthy(x))"
    },
    {
        "NL": "An individual who donates to charity and volunteers their time is considered altruistic.",
        "FOL": "∀x (Individual(x) ∧ DonatesToCharity(x) ∧ VolunteersTime(x) → Altruistic(x))"
    },
    {
        "NL": "Carnivorous animals primarily consume other animals as a source of food.",
        "FOL": "∀x ∀y (Carnivorous(x) ∧ Animal(y) → PrimarilyConsumes(x, y))"
    },
    {
        "NL": "A package is sealed when its contents are enclosed and it cannot be opened without breaking the seal.",
        "FOL": "∀x (Package(x) → (ContentsEnclosed(x) ∧ ¬CanBeOpenedWithoutBreakingSeal(x) → Sealed(x)))"
    },
    {
        "NL": "A language predominantly spoken by the people of a certain country is an official language.",
        "FOL": "∀x ∀y (Language(x) ∧ Country(y) ∧ PredominantlySpokenByPeople(x, y) → OfficialLanguage(x))"
    },
    {
        "NL": "An entity is acknowledged as a robot if they function in a lab or a warehouse.",
        "FOL": "∀x (Entity(x) ∧ (FunctionsInLab(x) ∨ FunctionsInWarehouse(x)) → Robot(x))"
    },
    {
        "NL": "A material that has a high melting point and conducts heat well is suitable for use in high-temperature applications.",
        "FOL": "∀x (Material(x) ∧ HighMeltingPoint(x) ∧ ConductsHeat(x) → SuitableForHighTemperatureApplications(x))"
    },
    {
        "NL": "All drivers drove at least one car.",
        "FOL": "∀x (Driver(x) → ∃y (Car(y) ∧ Drove(x, y)))"
    },
    {
        "NL": "The bird is flying.",
        "FOL": "∀x (Bird(x) → Flying(x))"
    },
    {
        "NL": "A novel becomes a bestseller if it sells a significant number of copies and receives widespread acclaim.",
        "FOL": "∀x (Novel(x) → (Bestseller(x) ↔ (SignificantSales(x) ∧ WidespreadAcclaim(x))))"
    },
    {
        "NL": "All dogs are friendly.",
        "FOL": "∀v (Dog(v) → Friendly(v))"
    },
    {
        "NL": "A musical piece can be instrumental, vocal, or both.",
        "FOL": "∀x (MusicalPiece(x) → (Instrumental(x) ∨ Vocal(x)))"
    },
    {
        "NL": "A hammer is used to hit nails, and a screwdriver is used to turn screws.",
        "FOL": "∀x∀y (Hammer(x) → HitsNails(x)) ∧ (Screwdriver(y) → TurnsScrews(y))"
    },
    {
        "NL": "All squares have four right angles.",
        "FOL": "∀x (Square(x) → HasFourRightAngles(x))"
    },
    {
        "NL": "A well-designed park with green spaces, playgrounds, and walking paths fosters community engagement and promotes physical activity.",
        "FOL": "∀x (Park(x) ∧ GreenSpaces(x) ∧ Playgrounds(x) ∧ WalkingPaths(x) → (CommunityEngagement(x) ∧ PromotesPhysicalActivity(x)))"
    },
    {
        "NL": "No bird both flies and swims.",
        "FOL": "¬∃x (Bird(x) ∧ Fly(x) ∧ Swim(x))"
    },
    {
        "NL": "A planet with a mass greater than Earth but smaller than Neptune is classified as a super-Earth, while a planet with a mass greater than Neptune but smaller than Jupiter is classified as a mini-Neptune.",
        "FOL": "∀x (Planet(x) ∧ MassGreaterThan(x, Earth) ∧ MassSmallerThan(x, Neptune) → SuperEarth(x)) ∧ (Planet(x) ∧ MassGreaterThan(x, Neptune) ∧ MassSmallerThan(x, Jupiter) → MiniNeptune(x))"
    },
    {
        "NL": "During daytime, the sky is bright or cloudy.",
        "FOL": "∀x (Daytime(x) → (BrightSky(x) ∨ CloudySky(x)))"
    },
    {
        "NL": "Cats chase mice but do not chase elephants.",
        "FOL": "∀x (Cat(x) → (∃y (Mouse(y) ∧ Chase(x, y)) ∧ ¬∃z (Elephant(z) ∧ Chase(x, z))))"
    },
    {
        "NL": "A meal that is spicy can make people sweat.",
        "FOL": "∀x ∀y (Meal(x) ∧ Spicy(x) ∧ Person(y) → CanMakeSweat(x, y))"
    },
    {
        "NL": "Every planet is round if and only if it orbits at least one star.",
        "FOL": "∀x (Round(x) ↔ ∃y (Star(y) ∧ Orbits(x, y)))"
    },
    {
        "NL": "A light bulb is on or off.",
        "FOL": "∀x (LightBulb(x) → (On(x) ∨ Off(x)))"
    },
    {
        "NL": "A building that is not a skyscraper, but has a unique architectural design and eco-friendly features, attracts architectural enthusiasts.",
        "FOL": "∀x (Building(x) ∧ ¬Skyscraper(x) ∧ UniqueDesign(x) ∧ EcoFriendlyFeatures(x) → AttractsArchitecturalEnthusiasts(x))"
    },
    {
        "NL": "A sustainable product is made from eco-friendly materials, has a low carbon footprint, and is easily recyclable.",
        "FOL": "∀x (SustainableProduct(x) ↔ (EcoFriendlyMaterials(x) ∧ LowCarbonFootprint(x) ∧ EasilyRecyclable(x)))"
    },
    {
        "NL": "A city with a high population density typically has a large number of residents living in a relatively small geographic area.",
        "FOL": "∀x (CityWithHighPopulationDensity(x) ↔ (LargeNumberOfResidents(x) ∧ SmallGeographicArea(x)))"
    },
    {
        "NL": "A person can play either the guitar or the piano.",
        "FOL": "∀x (Person(x) → CanPlayGuitar(x) ⊕ CanPlayPiano(x))"
    },
    {
        "NL": "Mountains are formed by geological processes, such as volcanic activity or tectonic plate movements.",
        "FOL": "∀x (Mountain(x) → (FormedByGeologicalProcesses(x) ∧ (VolcanicActivity(x) ∨ TectonicPlateMovements(x))))"
    },
    {
        "NL": "A region experiences a drought when there is a prolonged period of below-average precipitation, leading to water shortages.",
        "FOL": "∀x (Region(x) ∧ ProlongedBelowAveragePrecipitation(x) ∧ WaterShortage(x) → Drought(x))"
    },
    {
        "NL": "A song becomes popular when it has catchy tunes and receives numerous plays.",
        "FOL": "∀x (Song(x) ∧ CatchyTunes(x) ∧ NumerousPlays(x) → Popular(x))"
    },
    {
        "NL": "A signal is strong if and only if it connects to at least one weak signal.",
        "FOL": "∀v (Strong(v) ↔ ∃x (Weak(x) ∧ Connects(v, x)))"
    },
    {
        "NL": "Every honest person tells the truth.",
        "FOL": "∀x (¬Honest(x) → ¬Truth(x))"
    },
    {
        "NL": "Running a marathon requires physical endurance and mental resilience to overcome the long-distance challenge.",
        "FOL": "∀x ∀y (Marathon(x) ∧ Runner(y) → (RequiresPhysicalEndurance(y, x) ∧ RequiresMentalResilience(y, x)))"
    },
    {
        "NL": "A plant is characterized as a succulent if it stores water in its leaves or stems, thrives in arid environments, and has specialized adaptations for water conservation.",
        "FOL": "∀x (Plant(x) ∧ StoresWaterInLeavesOrStems(x) ∧ ThrivesInAridEnvironments(x) ∧ WaterConservationAdaptations(x) → Succulent(x))"
    },
    {
        "NL": "A radio signal can be transmitted between two devices if the devices are compatible and within the transmission range.",
        "FOL": "∀x ∀y (Device(x) ∧ Device(y) ∧ Compatible(x, y) ∧ WithinTransmissionRange(x, y) → CanTransmitRadioSignal(x, y))"
    },
    {
        "NL": "Regular exercise habits improve overall health and fitness.",
        "FOL": "∀x (RegularExerciseHabits(x) → ImprovesHealth(x) ∧ ImprovesFitness(x))"
    },
    {
        "NL": "All drivers are cautious.",
        "FOL": "∀x (Driver(x) → Cautious(x))"
    },
    {
        "NL": "A being is referred to as a student if they are enrolled in either college or university.",
        "FOL": "∀x (Being(x) ∧ (EnrolledInCollege(x) ∨ EnrolledInUniversity(x)) → Student(x))"
    },
    {
        "NL": "Some cities have a large population and are located near the coast.",
        "FOL": "∃x (City(x) ∧ LargePopulation(x) ∧ NearCoast(x))"
    },
    {
        "NL": "Gardeners plant seeds, and birds eat them.",
        "FOL": "∀x ∀y (Gardener(x) ∧ Seeds(y) → Plant(x, y)) ∧ ∀z ∀w (Bird(z) ∧ Seeds(w) → Eat(z, w))"
    },
    {
        "NL": "A tool x is used for task y if x is specifically designed to perform y and is effective in completing y.",
        "FOL": "∀x ∀y (Tool(x) ∧ Task(y) ∧ DesignedFor(x, y) ∧ EffectiveInCompleting(x, y) → UsedFor(x, y))"
    },
    {
        "NL": "If a substance is not a solid, it is either a liquid or a gas.",
        "FOL": "∀x (Substance(x) ∧ ¬Solid(x) → (Liquid(x) ∨ Gas(x)))"
    },
    {
        "NL": "There is no sphere that links to all solid cubes.",
        "FOL": "¬∃x (Sphere(x) ∧ ∀y (Solid(y) ∧ Cube(y) → LinksTo(x, y)))"
    },
    {
        "NL": "A student is ambitious if he puts in tremendous effort, maintains good grades, and has prospects of scholarships or university acceptance.",
        "FOL": "∀x (Student(x) ∧ PutsTremendousEffort(x) ∧ MaintainsGoodGrades(x) ∧ (ProspectsOfScholarships(x) ∨ UniversityAcceptance(x)) → Ambitious(x))"
    },
    {
        "NL": "A microwave oven heats food by using microwave radiation to excite the water molecules within the food.",
        "FOL": "∀x (MicrowaveOven(x) ∧ MicrowaveRadiation(m) ∧ WaterMolecules(w) ∧ Food(f) → HeatsFoodByExcitingMolecules(x, m, w, f))"
    },
    {
        "NL": "If a structure is a bridge, it spans a physical gap, such as a river or a valley.",
        "FOL": "∀x (Structure(x) ∧ Bridge(x) → SpansPhysicalGap(x))"
    },
    {
        "NL": "A product is eco-friendly if it is made from recycled materials or does not cause harm to the environment.",
        "FOL": "∀x (Product(x) ∧ (MadeFromRecycledMaterials(x) ∨ ¬CausesHarm(x, \"environment\")) → EcoFriendly(x))"
    },
    {
        "NL": "A telescope allows observation of distant objects by magnifying their appearance.",
        "FOL": "∀x (Telescope(x) ∧ MagnifiesAppearance(x) → ObservesDistantObjects(x))"
    },
    {
        "NL": "A city is livable if and only if it has green spaces and public transport, but not excessive pollution.",
        "FOL": "∀x (City(x) → (Livable(x) ↔ (HasGreenSpaces(x) ∧ HasPublicTransport(x) ∧ ¬ExcessivePollution(x))))"
    },
    {
        "NL": "A door can be open, closed, or locked, but not in more than one state at the same time.",
        "FOL": "∀x (Door(x) → ((IsOpen(x) ∨ IsClosed(x) ∨ IsLocked(x)) ∧ ¬(IsOpen(x) ∧ IsClosed(x)) ∧ ¬(IsOpen(x) ∧ IsLocked(x)) ∧ ¬(IsClosed(x) ∧ IsLocked(x))))"
    },
    {
        "NL": "Insects play a crucial role in pollination, facilitating the reproduction of flowering plants.",
        "FOL": "∀x∀y (Insect(x) ∧ FloweringPlant(y) → PlaysCrucialRoleInPollination(x, y))"
    },
    {
        "NL": "A tool is used for cutting or tightening, but not for both purposes.",
        "FOL": "∀x (Tool(x) → ((UsedForCutting(x) ∨ UsedForTightening(x)) ∧ ¬(UsedForCutting(x) ∧ UsedForTightening(x))))"
    },
    {
        "NL": "All squares are rectangles, but not all rectangles are squares.",
        "FOL": "∀x (Square(x) → Rectangle(x)) ∧ ¬∀x (Rectangle(x) → Square(x))"
    },
    {
        "NL": "No dogs prefer crowded parks.",
        "FOL": "∀x ∀y (Dog(x) ∧ Park(y) ∧ Crowded(y) → ¬Prefers(x, y))"
    },
    {
        "NL": "If one tree is older than another, then there is a tree that is between them in age.",
        "FOL": "∀x ∀y ∃z (Tree(x) ∧ Tree(y) ∧ Tree(z) ∧ OlderThan(x, y) → Between(z, x, y))"
    },
    {
        "NL": "A type of fuel that is derived from renewable resources, emits fewer greenhouse gases, and is used to power vehicles is a biofuel.",
        "FOL": "∀x (Fuel(x) ∧ DerivedFromRenewableResources(x) ∧ EmitsFewerGreenhouseGases(x) ∧ UsedToPowerVehicles(x) → Biofuel(x))"
    },
    {
        "NL": "In a food chain, predators prey on other organisms to obtain energy and nutrients.",
        "FOL": "∀x∀y∀z (FoodChain(x) ∧ Predator(y) ∧ Organism(z) → PreysOnForEnergyAndNutrients(y, z))"
    },
    {
        "NL": "A substance is a solid at room temperature if its melting point is above room temperature, and it is a liquid if its melting point is below room temperature.",
        "FOL": "∀x (SolidAtRoomTemperature(x) ↔ (Substance(x) ∧ MeltingPointAboveRoomTemperature(x))) ∧ (LiquidAtRoomTemperature(x) ↔ (Substance(x) ∧ MeltingPointBelowRoomTemperature(x)))"
    },
    {
        "NL": "A place is considered a library if it houses and lends books, periodicals, and other media, often for public use and providing a quiet space for reading and study.",
        "FOL": "∀x (Place(x) ∧ HousesAndLendsBooksPeriodicalsAndMedia(x) ∧ ForPublicUse(x) ∧ QuietSpaceForReadingAndStudy(x) → Library(x))"
    },
    {
        "NL": "A scientist conducts an experiment to test a hypothesis.",
        "FOL": "∀x∀y (Scientist(x) ∧ Hypothesis(y) → ConductsExperimentToTest(x, y))"
    },
    {
        "NL": "An efficient employee exhibits punctuality, positive attitude, and strong work ethics.",
        "FOL": "∀x (Employee(x) ∧ Punctuality(x) ∧ PositiveAttitude(x) ∧ StrongWorkEthics(x) → Efficient(x))"
    },
    {
        "NL": "An asteroid is a small rocky body that orbits the sun, primarily composed of rock and metal, and sometimes colliding with other celestial bodies, including Earth.",
        "FOL": "∀x ∀y ∀z (Asteroid(x) ↔ (SmallRockyBody(x) ∧ OrbitsSun(x, y) ∧ ComposedOfRockAndMetal(x) ∧ SometimesCollidesWithCelestialBodies(x, z) ∧ (CelestialBody(z) ∨ Earth(z))))"
    },
    {
        "NL": "A mountain is tall, a desert is dry, and a forest is dense.",
        "FOL": "∀x∀y∀z (Mountain(x) ∧ Desert(y) ∧ Forest(z) → (IsTall(x) ∧ IsDry(y) ∧ IsDense(z)))"
    },
    {
        "NL": "An educational program that covers mathematics, science, and history is a comprehensive curriculum.",
        "FOL": "∀x (EducationalProgram(x) ∧ CoversMathematics(x) ∧ CoversScience(x) ∧ CoversHistory(x) → ComprehensiveCurriculum(x))"
    },
    {
        "NL": "A job candidate is an ideal fit if they have relevant experience or hold an advanced degree, but not if they require a lengthy commute.",
        "FOL": "∀x (JobCandidate(x) → (IdealFit(x) ↔ ((RelevantExperience(x) ∨ AdvancedDegree(x)) ∧ ¬LengthyCommute(x))))"
    },
    {
        "NL": "A company is profitable if it generates more revenue than expenses, and it's growing if it increases its market share or launches new products.",
        "FOL": "∀x (Company(x) → ((Profitable(x) ↔ GeneratesMoreRevenueThanExpenses(x)) ∧ (Growing(x) ↔ (IncreasesMarketShare(x) ∨ LaunchesNewProducts(x)))))"
    },
    {
        "NL": "A building can be either residential or commercial.",
        "FOL": "∀x (Building(x) → Residential(x) ⊕ Commercial(x))"
    },
    {
        "NL": "A musical instrument that produces sound by vibrating a stretched membrane is a drum.",
        "FOL": "∀x∀y (MusicalInstrument(x) ∧ StretchedMembrane(y) ∧ ProducesSoundByVibration(x, y) → Drum(x))"
    },
    {
        "NL": "A book that is part of a series of books, each telling a complete story but sharing common characters and settings, is a standalone book within a series.",
        "FOL": "∀x∀y∀z (Book(x) ∧ Series(y) ∧ PartOfSeries(x, y) ∧ CompleteStory(x) ∧ SharesCommonCharactersAndSettings(y, z) → StandaloneBookWithinSeries(x))"
    },
    {
        "NL": "No one in the hall recognizes either Johnson or Thompson.",
        "FOL": "¬∃x (Person(x) ∧ InHall(x) ∧ (Recognize(x, johnson) ∨ Recognize(x, thompson)))"
    },
    {
        "NL": "A meal can be vegetarian, with lots of vegetables and fruits, or it can be non-vegetarian, with meat and dairy products.",
        "FOL": "∀x (Meal(x) → ((Vegetarian(x) ∧ Vegetables(x) ∧ Fruits(x)) ⊕ (NonVegetarian(x) ∧ Meat(x) ∧ Dairy(x))))"
    },
    {
        "NL": "A writer is penning a novel in the library, or a musician is composing a song in the studio.",
        "FOL": "∃x ∃y (Writer(x) ∧ Novel(y) ∧ Penning(x, y) ∧ InTheLibrary(x)) ∨ ∃z ∃w (Musician(z) ∧ Song(w) ∧ Composing(z, w) ∧ InTheStudio(z))"
    },
    {
        "NL": "There is no architect who can design all types of buildings but has never designed a house.",
        "FOL": "¬∃x (Architect(x) ∧ ∀y (BuildingType(y) → CanDesign(x, y)) ∧ ¬∃z (House(z) ∧ HasDesigned(x, z)))"
    },
    {
        "NL": "Some oranges are juiced and sweet.",
        "FOL": "∃x (Orange(x) ∧ Juiced(x) ∧ Sweet(x))"
    },
    {
        "NL": "A planet orbits the sun and has a moon orbiting it.",
        "FOL": "∃x (Planet(x) ∧ OrbitsSun(x) ∧ ∃y (Moon(y) ∧ Orbits(y, x)))"
    },
    {
        "NL": "Every scientist is brilliant or some tulips are yellow if and only if there is a quote that is uplifting unless there are no obstacles.",
        "FOL": "(∀x (Scientist(x) → Brilliant(x)) ∨ ∃y (Tulip(y) ∧ Yellow(y))) ↔ (∃z (Quote(z) ∧ (Uplifting(z) ∨ ∀w (¬Obstacle(w)))))"
    },
    {
        "NL": "Trees absorb carbon dioxide during photosynthesis and release oxygen, contributing to cleaner air.",
        "FOL": "∀x ∀y ∀z (Tree(x) ∧ CarbonDioxide(y) ∧ Oxygen(z) ∧ AbsorbsDuringPhotosynthesis(x, y) ∧ Releases(x, z) → ContributesToCleanerAir(x))"
    },
    {
        "NL": "No player on the field scored goals.",
        "FOL": "∀x (Player(x) ∧ OnField(x) → ¬ScoredGoal(x))"
    },
    {
        "NL": "A student excels if they score higher than their classmate.",
        "FOL": "∀x ∀y (Student(x) ∧ Classmate(y) ∧ ScoresHigher(x, y) → Excels(x))"
    },
    {
        "NL": "Fruits are rich in vitamins and minerals, while candies are high in sugar and low in nutrients.",
        "FOL": "∀x (Fruit(x) → (RichInVitamins(x) ∧ RichInMinerals(x))) ∧ ∀y (Candy(y) → (HighInSugar(y) ∧ LowInNutrients(y)))"
    },
    {
        "NL": "A circle has a center and a radius, with all points on the circle equidistant from the center.",
        "FOL": "∀x ∀y (Circle(x) ∧ Center(x, y) ∧ Radius(x, z) → Equidistant(y, z))"
    },
    {
        "NL": "An asteroid poses a threat to Earth if its orbit intersects with Earth's orbit and it is larger than a certain size.",
        "FOL": "∀x (Asteroid(x) ∧ OrbitIntersectsEarthsOrbit(x) ∧ LargerThanCertainSize(x) → PosesThreatToEarth(x))"
    },
    {
        "NL": "Each chef who is creative is praised by all customers.",
        "FOL": "∀x (Chef(x) ∧ Creative(x) → ∀y (Customer(y) → Praises(y, x)))"
    },
    {
        "NL": "A car that consumes less fuel per mile than the average vehicle is categorized as fuel-efficient.",
        "FOL": "∀x (Car(x) ∧ ConsumesLessFuelPerMile(x) → FuelEfficient(x))"
    },
    {
        "NL": "An ideal vacation destination offers a variety of activities, boasts a rich cultural heritage, and provides comfortable accommodations for travelers.",
        "FOL": "∀x (VacationDestination(x) ∧ VarietyOfActivities(x) ∧ RichCulturalHeritage(x) ∧ ComfortableAccommodations(x) → Ideal(x))"
    },
    {
        "NL": "A lion hunts gazelles for food, while a vulture feeds on the carcass of dead animals.",
        "FOL": "∀x ∀y (Lion(x) ∧ Gazelle(y) → HuntsForFood(x, y)) ∧ ∀z ∀w (Vulture(z) ∧ DeadAnimal(w) → FeedsOnCarcassOf(z, w))"
    },
    {
        "NL": "A vehicle is electric if it is powered by batteries and does not use an internal combustion engine.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByBatteries(x) ∧ ¬UsesInternalCombustionEngine(x) → Electric(x))"
    },
    {
        "NL": "A student is multilingual if they can speak both Spanish and French.",
        "FOL": "∀x (Student(x) ∧ CanSpeakSpanish(x) ∧ CanSpeakFrench(x) → Multilingual(x))"
    },
    {
        "NL": "A celestial body orbiting a star and being the third from it is the earth.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsStar(x) ∧ IsThirdFromStar(x) → Earth(x))"
    },
    {
        "NL": "Saturn is a gas giant, has a distinct ring system, and is the sixth planet from the Sun.",
        "FOL": "GasGiant(Saturn) ∧ DistinctRingSystem(Saturn) ∧ PlanetPosition(Saturn, 6)"
    },
    {
        "NL": "A person is considered an early riser if they wake up before 6 AM consistently.",
        "FOL": "∀x (Person(x) ∧ WakesUpBefore6AM(x) → EarlyRiser(x))"
    },
    {
        "NL": "A scientist conducts experiments in a laboratory, gathering data to test hypotheses.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Experiment(y) ∧ Laboratory(z) → ConductsIn(x, y, z))"
    },
    {
        "NL": "A musical instrument can be a string, a percussion, or a wind instrument.",
        "FOL": "∀x (MusicalInstrument(x) → (StringInstrument(x) ∨ PercussionInstrument(x) ∨ WindInstrument(x)))"
    },
    {
        "NL": "A student graduates from college if they successfully complete all required courses.",
        "FOL": "∀x (Student(x) ∧ CompletesRequiredCourses(x) → GraduatesFromCollege(x))"
    },
    {
        "NL": "If all workers who are certificate holders are promoted, then some workers who aren't diploma holders will also be promoted.",
        "FOL": "∀x (Worker(x) ∧ CertificateHolder(x) → Promoted(x)) → ∃y (Worker(y) ∧ ¬DiplomaHolder(y) ∧ Promoted(y))"
    },
    {
        "NL": "A laptop keeps encrypted files and uses them as needed to run applications.",
        "FOL": "∀x (Laptop(x) → (KeepsEncryptedFiles(x) ∧ (IsRequiredToRunApps(x) → UsesFiles(x))))"
    },
    {
        "NL": "Healthy individuals exercise regularly, maintain a balanced diet, and get enough sleep.",
        "FOL": "∀x (Healthy(x) ↔ (ExercisesRegularly(x) ∧ BalancedDiet(x) ∧ EnoughSleep(x)))"
    },
    {
        "NL": "Not every city is crowded.",
        "FOL": "¬∀x (City(x) → Crowded(x))"
    },
    {
        "NL": "A beverage can be a cocktail, contain alcoholic content, and give a festive feel, or it can be a hot chocolate, provide warm comfort, and delight sweet lovers.",
        "FOL": "∀x (Beverage(x) → ((Cocktail(x) ∧ ContainsAlcoholicContent(x) ∧ GivesFestiveFeel(x)) ⊕ (HotChocolate(x) ∧ ProvidesWarmComfort(x) ∧ DelightsSweetLovers(x))))"
    },
    {
        "NL": "An artist creates a painting by applying colors and shapes to a canvas using a brush, a palette knife, or other tools.",
        "FOL": "∀x∀y (Artist(x) ∧ Canvas(y) ∧ (∃z (Color(z) ∨ Shape(z)) ∧ AppliesToCanvas(x, y, z)) → Painting(y))"
    },
    {
        "NL": "Governments enforce laws and maintain order in society.",
        "FOL": "∀x ∀y (Government(x) ∧ Law(y) → (Enforces(x, y) ∧ MaintainsOrder(x, Society)))"
    },
    {
        "NL": "A person is considered a painter if they create artworks using various colors and techniques on a surface such as canvas, paper, or walls.",
        "FOL": "∀x (Person(x) ∧ CreatesArtworkWithColorsAndTechniques(x) ∧ SurfaceForPainting(x) → Painter(x))"
    },
    {
        "NL": "A public space is welcoming if it is clean, safe, and accessible to all.",
        "FOL": "∀x (PublicSpace(x) ∧ Clean(x) ∧ Safe(x) ∧ AccessibleToAll(x) → Welcoming(x))"
    },
    {
        "NL": "A book is a bestseller if it has sold a large number of copies and received widespread acclaim.",
        "FOL": "∀x (Book(x) ∧ SoldLargeNumberOfCopies(x) ∧ WidespreadAcclaim(x) → Bestseller(x))"
    },
    {
        "NL": "A location known for its beautiful scenery and offering recreational activities can be a tourist destination.",
        "FOL": "∀x (Location(x) ∧ BeautifulScenery(x) ∧ OffersRecreationalActivities(x) → TouristDestination(x))"
    },
    {
        "NL": "Some dogs are friendly, while others are aggressive.",
        "FOL": "∀x (Dog(x) → (Friendly(x) ⊕ Aggressive(x)))"
    },
    {
        "NL": "Astronomers use telescopes to observe celestial objects like stars, planets, and galaxies.",
        "FOL": "∀x∀y∀z (Astronomer(x) ∧ Telescope(y) ∧ (CelestialObject(z) ∧ (Star(z) ∨ Planet(z) ∨ Galaxy(z))) → UsesToObserve(x, y, z))"
    },
    {
        "NL": "Every doctor who is patient is admired by all patients.",
        "FOL": "∀x (Doctor(x) ∧ Patient(x) → ∀y (Patient(y) → Admires(y, x)))"
    },
    {
        "NL": "A construction company builds structures like houses and bridges, and employs skilled workers for the job.",
        "FOL": "∀x∀y∀z (ConstructionCompany(x) ∧ Structure(y) ∧ SkilledWorker(z) → (Builds(x, y) ∧ Employs(x, z)))"
    },
    {
        "NL": "Birds that migrate long distances have a higher risk of encountering adverse weather conditions and predators.",
        "FOL": "∀x (Bird(x) ∧ LongDistanceMigrator(x) → HigherRiskOfAdverseWeatherConditionsAndPredators(x))"
    },
    {
        "NL": "A fan cools a room by circulating air and reducing the temperature.",
        "FOL": "∀x ∀y (Fan(x) ∧ Room(y) ∧ CirculatesAir(x, y) ∧ ReducesTemperature(x, y) → Cools(x, y))"
    },
    {
        "NL": "A profession can be a nurse, a teacher, or an engineer.",
        "FOL": "∀x (Profession(x) → (Nurse(x) ∨ Teacher(x) ∨ Engineer(x)))"
    },
    {
        "NL": "Fossil fuels, such as coal, oil, and natural gas, are non-renewable energy sources that contribute to greenhouse gas emissions.",
        "FOL": "∀x ∀y ∀z (FossilFuel(x) ∧ (Coal(x) ∨ Oil(x) ∨ NaturalGas(x)) ∧ GreenhouseGasEmissions(y) ∧ NonRenewableEnergySource(z) → (ContributesTo(x, y) ∧ SourceOf(x, z)))"
    },
    {
        "NL": "A meal is vegetarian if it does not contain meat or fish.",
        "FOL": "∀x (Meal(x) ∧ ¬ContainsMeat(x) ∧ ¬ContainsFish(x) → Vegetarian(x))"
    },
    {
        "NL": "Lions are carnivores and live in prides, while whales are carnivores and travel in groups.",
        "FOL": "∀x (Lion(x) → (Carnivore(x) ∧ LiveInPrides(x))) ∧ ∀y (Whale(y) → (Carnivore(y) ∧ TravelInGroups(y)))"
    },
    {
        "NL": "Mars is a planet, and Earth is a planet, but Mars is not the same as Earth.",
        "FOL": "∀x ∀y (Planet(x) ∧ Mars(x) ∧ Planet(y) ∧ Earth(y) ∧ ¬SamePlanet(x, y))"
    },
    {
        "NL": "A museum contains exhibits that showcase art, history, or science.",
        "FOL": "∀x (Museum(x) → (ContainsArtExhibits(x) ∨ ContainsHistoryExhibits(x) ∨ ContainsScienceExhibits(x)))"
    },
    {
        "NL": "Stars emit light, and planets orbit around stars, while comets have elliptical orbits.",
        "FOL": "∀x ∀y ∀z (Star(x) ∧ Planet(y) ∧ Comet(z) → (EmitsLight(x) ∧ Orbit(y, x) ∧ EllipticalOrbit(z)))"
    },
    {
        "NL": "Some birds are colorful and some birds are dull, but there are no colorful dull birds.",
        "FOL": "∃x (Colorful(x)) ∧ ∃x (Dull(x)) ∧ ¬∃x (Colorful(x) ∧ Dull(x))"
    },
    {
        "NL": "An object is considered a furniture item if it is designed to support human activities such as seating, sleeping, or storage.",
        "FOL": "∀x (Object(x) ∧ DesignedToSupportHumanActivities(x) → Furniture(x))"
    },
    {
        "NL": "Nobody is a tall basketball player and a short football player.",
        "FOL": "¬∃x ((Tall(x) ∧ BasketballPlayer(x)) ∧ (Short(x) ∧ FootballPlayer(x)))"
    },
    {
        "NL": "A chef prepares meals by combining ingredients and cooking them properly.",
        "FOL": "∀x∀y (Chef(x) ∧ Meal(y) → Prepares(x, y))"
    },
    {
        "NL": "Maria is not a doctor and Claire is a nurse.",
        "FOL": "¬Doctor(maria) ∧ Nurse(claire)"
    },
    {
        "NL": "A mountain climber ascends a peak by following a route, using appropriate gear, and relying on physical fitness.",
        "FOL": "∀x∀y∀z (MountainClimber(x) ∧ Peak(y) ∧ Route(z) → (Ascends(x, y) ↔ (FollowsRoute(x, z) ∧ UsesGear(x) ∧ PhysicallyFit(x))))"
    },
    {
        "NL": "Every person isn't a doctor.",
        "FOL": "¬∀x (Person(x) → Doctor(x))"
    },
    {
        "NL": "A fruit is ripe if its color changes from green to red or yellow.",
        "FOL": "∀x (Fruit(x) ∧ (ColorChange(x, green, red) ⊕ ColorChange(x, green, yellow)) → Ripe(x))"
    },
    {
        "NL": "A computer network consists of interconnected devices, and the devices communicate using wired or wireless connections, while the network topology can be bus, star, ring, or mesh.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ Device(y) ∧ Interconnected(x, y) ∧ CommunicatesUsing(y, z) → (BusTopology(x) ⊕ StarTopology(x) ⊕ RingTopology(x) ⊕ MeshTopology(x)))"
    },
    {
        "NL": "A nation belongs to either Europe or Asia.",
        "FOL": "∀x (Nation(x) → InEurope(x) ⊕ InAsia(x))"
    },
    {
        "NL": "A detective investigates crimes.",
        "FOL": "∀x ∀y (Detective(x) ∧ Crime(y) → Investigates(x, y))"
    },
    {
        "NL": "A pentagon has five sides, whereas a hexagon has six sides.",
        "FOL": "∀x (Pentagon(x) → HasSides(x, 5)) ∧ ∀y (Hexagon(y) → HasSides(y, 6))"
    },
    {
        "NL": "If a person is attentive and responsive to the needs of others, they are more likely to be considered caring and supportive.",
        "FOL": "∀x (AttentiveAndResponsiveToNeedsOfOthers(x) → (Caring(x) ∧ Supportive(x)))"
    },
    {
        "NL": "A movie is a biography if it depicts the life story of a certain individual, directed by that individual.",
        "FOL": "∀x ∃y (Movie(x) ∧ Individual(y) ∧ DepictsLifeStory(x, y) ∧ DirectedBy(x, y) → Biography(x))"
    },
    {
        "NL": "A philosopher is reading a book near a candle.",
        "FOL": "∃x ∃y ∃z (Philosopher(x) ∧ Book(y) ∧ Candle(z) ∧ Reading(x, y) ∧ Near(x, z))"
    },
    {
        "NL": "Chocolates may contain nuts, while some candies are entirely nut-free.",
        "FOL": "∀x∀y (Chocolate(x) ∧ Candy(y) → ((∃z (Nut(z) ∧ Contains(x, z))) ∧ ¬(∃w (Nut(w) ∧ Contains(y, w)))))"
    },
    {
        "NL": "An effective educational program develops critical thinking skills, fosters creativity, and promotes social and emotional development.",
        "FOL": "∀x (EducationalProgram(x) ∧ DevelopsCriticalThinkingSkills(x) ∧ FostersCreativity(x) ∧ PromotesSocialAndEmotionalDevelopment(x) → Effective(x))"
    },
    {
        "NL": "An active workout routine involves regular running and a balanced nutrition.",
        "FOL": "∀x (WorkoutRoutine(x) ∧ RegularRunning(x) ∧ BalancedNutrition(x) → Active(x))"
    },
    {
        "NL": "No cars are fast.",
        "FOL": "¬∃x (Car(x) → Fast(x))"
    },
    {
        "NL": "A boat can float, but it cannot drive on land.",
        "FOL": "∀x (Boat(x) → (CanFloat(x) ∧ ¬CanDriveOnLand(x)))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote and participate in the decision-making process.",
        "FOL": "∀x ∀y (Government(x) ∧ Democracy(x) ∧ Citizen(y) ∧ InGovernment(y, x) → (RightToVote(y) ∧ ParticipateInDecisionMaking(y)))"
    },
    {
        "NL": "Every artist who concentrates on painting and sculpture, unless they have won an art competition, has either exhibited in renowned art galleries or has not managed art workshops.",
        "FOL": "∀x (Artist(x) ∧ ConcentratesOnPainting(x) ∧ ConcentratesOnSculpture(x) ∨ WonArtCompetition(x) → (ExhibitedInRenownedArtGalleries(x) ∨ ¬ManagedArtWorkshops(x)))"
    },
    {
        "NL": "A person becomes a senior citizen when they reach the age of 65.",
        "FOL": "∀x (Person(x) ∧ Age(x, 65) → SeniorCitizen(x))"
    },
    {
        "NL": "Every plant requires sunlight to grow.",
        "FOL": "∀x (Plant(x) → RequiresSunlightToGrow(x))"
    },
    {
        "NL": "A mountain range has diverse landscapes, consisting of snow-capped peaks, forests, and deserts.",
        "FOL": "∀x (MountainRange(x) ∧ DiverseLandscapes(x) ↔ (∃y ∃z ∃w (Peak(y) ∧ Forest(z) ∧ Desert(w) ∧ SnowCapped(y) ∧ PartOf(x, y) ∧ PartOf(x, z) ∧ PartOf(x, w))))"
    },
    {
        "NL": "Not all music is instrumental.",
        "FOL": "¬∀x (Music(x) → Instrumental(x))"
    },
    {
        "NL": "Each entity that is not high or low is a triangle if and only if it is purple.",
        "FOL": "∀x (¬High(x) ∧ ¬Low(x) → (Triangle(x) ↔ Purple(x)))"
    },
    {
        "NL": "An airplane can carry passengers or cargo but not both at the same time.",
        "FOL": "∀x (Airplane(x) → (CarriesPassengers(x) ⊕ CarriesCargo(x)))"
    },
    {
        "NL": "A computer program solves a complex problem if it is based on an efficient algorithm, has adequate computational resources, and returns accurate results.",
        "FOL": "∀x ∀y ∀z (ComputerProgram(x) ∧ ComplexProblem(y) ∧ EfficientAlgorithm(z) ∧ BasedOn(x, z) ∧ AdequateResources(x) ∧ AccurateResults(x, y) → Solves(x, y, z))"
    },
    {
        "NL": "A visual art form that uses paint, brushes, and a canvas to create images or designs is commonly referred to as painting.",
        "FOL": "∀x (VisualArtForm(x) ∧ UsesPaint(x) ∧ UsesBrushes(x) ∧ UsesCanvas(x) → Painting(x))"
    },
    {
        "NL": "A chef is cooking a meal in a crowded kitchen.",
        "FOL": "∃x ∃y (Chef(x) ∧ CookingAMeal(x) ∧ CrowdedKitchen(y) ∧ In(x, y))"
    },
    {
        "NL": "A place is suitable for stargazing if it has clear skies, low light pollution, and is not near any major cities.",
        "FOL": "∀x (Place(x) ∧ ClearSkies(x) ∧ LowLightPollution(x) ∧ ¬NearMajorCity(x) → SuitableForStargazing(x))"
    },
    {
        "NL": "Every historian who investigates ancient civilizations and global conflicts, unless acknowledged with a history accolade, have either produced in significant history chronicles or have not presented at international history congresses.",
        "FOL": "∀x (Historian(x) ∧ InvestigatesAncientCivilizations(x) ∧ InvestigatesGlobalConflicts(x) ∨ AcknowledgedWithHistoryAccolade(x) → (ProducedInHistoryChronicles(x) ∨ ¬PresentedAtInternationalHistoryCongresses(x)))"
    },
    {
        "NL": "An establishment is a restaurant when it is a business that prepares and serves food and drinks, and offers various dining experiences, such as casual dining, fine dining, or fast food service.",
        "FOL": "∀x (Establishment(x) ∧ BusinessThatPreparesAndServesFoodAndDrinks(x) ∧ OffersVariousDiningExperiences(x, casualDining, fineDining, fastFoodService) → Restaurant(x))"
    },
    {
        "NL": "A worker can lift heavy objects if and only if they have either strong arms or back, but not both.",
        "FOL": "∀x (Worker(x) → (CanLiftHeavyObjects(x) ↔ (HasStrongArms(x) ⊕ HasStrongBack(x))))"
    },
    {
        "NL": "Birds can fly, but ostriches and penguins are exceptions.",
        "FOL": "∀x (Bird(x) ∧ ¬(Ostrich(x) ∨ Penguin(x)) → CanFly(x))"
    },
    {
        "NL": "A shape with three sides is a triangle, while a shape with four sides is a quadrilateral, and no shape can be both.",
        "FOL": "∀x (Shape(x) → ((NumberOfSides(x, 3) ∧ Triangle(x) ∧ ¬Quadrilateral(x)) ∨ (NumberOfSides(x, 4) ∧ ¬Triangle(x) ∧ Quadrilateral(x))))"
    },
    {
        "NL": "Invasive species can outcompete native species for resources, which may lead to a decline in biodiversity within an ecosystem.",
        "FOL": "∀x ∀y (InvasiveSpecies(x) ∧ NativeSpecies(y) ∧ Resource(r) ∧ Outcompete(o) ∧ Biodiversity(b) ∧ Ecosystem(e) → LeadsToBiodiversityDecline(x, y, r, o, b, e))"
    },
    {
        "NL": "A house has a garden, a garage, and a swimming pool.",
        "FOL": "∃x (House(x) ∧ Garden(x) ∧ Garage(x) ∧ SwimmingPool(x))"
    },
    {
        "NL": "An artist creates visual or auditory works that express emotions or ideas.",
        "FOL": "∀x (Artist(x) → (CreatesVisualWorks(x) ∨ CreatesAuditoryWorks(x)) ∧ ExpressesEmotions(x) ∧ ExpressesIdeas(x))"
    },
    {
        "NL": "If one mountain is taller than another, then there is a mountain that is between their heights.",
        "FOL": "∀x ∀y ∃z (Mountain(x) ∧ Mountain(y) ∧ Mountain(z) ∧ TallerThan(x, y) → Between(z, x, y))"
    },
    {
        "NL": "An herbivore consumes only plants, while a carnivore consumes other animals, and an omnivore consumes both plants and animals.",
        "FOL": "∀x ∀y (Herbivore(x) ∧ Plant(y) → Consumes(x, y)) ∧ ∀z ∀w (Carnivore(z) ∧ Animal(w) → Consumes(z, w)) ∧ ∀u ∀v ∀s (Omnivore(u) ∧ (Plant(v) ∨ Animal(s)) → Consumes(u, v) ∨ Consumes(u, s))"
    },
    {
        "NL": "A parrot is perched on a pole, and a zebra is trotting in the savannah.",
        "FOL": "∃x ∃y (Parrot(x) ∧ Pole(y) ∧ PerchedOn(x, y)) ∧ ∃z (Zebra(z) ∧ Trotting(z) ∧ InTheSavannah(z))"
    },
    {
        "NL": "A planet sustains life when its atmosphere is composed of breathable air, the temperature range is suitable, and liquid water exists on its surface.",
        "FOL": "∀x (Planet(x) ∧ BreathableAir(x) ∧ SuitableTemperatureRange(x) ∧ LiquidWaterOnSurface(x) → SustainsLife(x))"
    },
    {
        "NL": "A meal is satisfying when it contains a variety of flavors, offers balanced nutrition, and leaves one feeling full and content.",
        "FOL": "∀x (Meal(x) ∧ ContainsVarietyOfFlavors(x) ∧ OffersBalancedNutrition(x) ∧ LeavesFeelingFullAndContent(x) → Satisfying(x))"
    },
    {
        "NL": "A rainforest ecosystem is characterized by high biodiversity, dense vegetation, and receives significant rainfall throughout the year.",
        "FOL": "∀x (RainforestEcosystem(x) → CharacterizedByHighBiodiversity(x) ∧ CharacterizedByDenseVegetation(x) ∧ ReceivesSignificantRainfallThroughoutYear(x))"
    },
    {
        "NL": "A transport that can ferry more than fifty passengers and has six or more wheels is classified as a bus.",
        "FOL": "∀x (Transport(x) ∧ CanFerryMoreThanFiftyPassengers(x) ∧ (HasSixWheels(x) ∨ HasMoreThanSixWheels(x)) → Bus(x))"
    },
    {
        "NL": "A vehicle provides a smooth ride when it has well-maintained suspension, balanced tires, and a comfortable interior.",
        "FOL": "∀x∀y∀z∀w (Vehicle(x) ∧ Suspension(y) ∧ Tires(z) ∧ Interior(w) ∧ WellMaintained(y) ∧ Balanced(z) ∧ Comfortable(w) → SmoothRide(x))"
    },
    {
        "NL": "Any organization requires leadership, teamwork, and resources to succeed.",
        "FOL": "∀x (Organization(x) → (HasLeadership(x) ∧ HasTeamwork(x) ∧ HasResources(x)) → Succeeds(x))"
    },
    {
        "NL": "A structure is a lighthouse when it is a tall, tower-like building, emits a powerful light to guide ships at sea, and is often located on a coastline, island, or harbor entrance.",
        "FOL": "∀x (Structure(x) ∧ TallTowerLike(x) ∧ EmitsPowerfulLight(x) ∧ GuidesShipsAtSea(x) ∧ OftenLocatedOn(x, coastline, island, harborEntrance) → Lighthouse(x))"
    },
    {
        "NL": "All grapes are purple and sour.",
        "FOL": "∀x (Grape(x) → (Purple(x) ∧ Sour(x)))"
    },
    {
        "NL": "All athletes who practice regularly are fit.",
        "FOL": "∀x (Athlete(x) ∧ PracticeRegularly(x) → Fit(x))"
    },
    {
        "NL": "No poet exists who has written every romantic poem but never a horror poem.",
        "FOL": "¬∃x (Poet(x) ∧ ∀y (RomanticPoem(y) → HasWritten(x, y)) ∧ ¬∃z (HorrorPoem(z) ∧ HasWritten(x, z)))"
    },
    {
        "NL": "A vaccine provides immunity to a specific disease by stimulating the body's immune system to produce a defense response against the disease-causing pathogen.",
        "FOL": "∀x∀y (Vaccine(x) ∧ Disease(y) → StimulatesImmuneSystemToProduceDefenseResponse(x, y))"
    },
    {
        "NL": "A book receives praise if it has a suspenseful narrative, compelling characters, and a richly crafted world.",
        "FOL": "∀x (Book(x) ∧ HasSuspensefulNarrative(x) ∧ HasCompellingCharacters(x) ∧ HasRichCraftedWorld(x) → ReceivePraise(x))"
    },
    {
        "NL": "If a country has a monarch, it is considered a monarchy.",
        "FOL": "∀x (HasMonarch(x) → Monarchy(x))"
    },
    {
        "NL": "A volunteer helps others without expecting payment.",
        "FOL": "∀x∀y (Volunteer(x) ∧ HelpsOthers(x, y) → ¬ExpectsPayment(x))"
    },
    {
        "NL": "Waste decomposition in a landfill produces methane gas, which can be captured and converted into a source of energy for heating and electricity generation.",
        "FOL": "∀x∀y∀z (Landfill(x) ∧ WasteDecomposition(x, y) ∧ MethaneGas(y) → (Captured(y, z) ∧ ConvertedToEnergySource(z) ∧ (Heating(z) ∨ ElectricityGeneration(z))))"
    },
    {
        "NL": "A fruit is classified as a berry if it has a fleshy outer layer and seeds inside.",
        "FOL": "∀x (Fruit(x) ∧ FleshyOuterLayer(x) ∧ SeedsInside(x) → Berry(x))"
    },
    {
        "NL": "A dish can be a dessert, deliver sweet flavors, and be a festive special, or it can be a snack, provide savory taste, and be an everyday delight.",
        "FOL": "∀x (Dish(x) → ((Dessert(x) ∧ SweetFlavor(x) ∧ FestiveSpecial(x)) ⊕ (Snack(x) ∧ SavoryTaste(x) ∧ EverydayDelight(x))))"
    },
    {
        "NL": "A computer supports various input devices, such as pointing devices like a mouse or a trackpad, keyboards for typing, and touchscreens for direct interaction.",
        "FOL": "∀x ∀y (Computer(x) ∧ (PointingDevice(x, y) ∧ (Mouse(y) ∨ Trackpad(y))) ∨ (Keyboard(x, y) ∧ Typing(y)) ∨ (Touchscreen(x, y) ∧ DirectInteraction(y)))"
    },
    {
        "NL": "An apple is ripe or unripe, but not both.",
        "FOL": "∀x (Apple(x) → (Ripe(x) ⊕ Unripe(x)))"
    },
    {
        "NL": "A gardener grows flowers by providing soil, water, and sunlight.",
        "FOL": "∀x ∀y ∀z (Gardener(x) ∧ Flowers(y) ∧ SoilWaterSunlight(z) → GrowsProviding(x, y, z))"
    },
    {
        "NL": "An object is a rhombus just if it contains four equivalent sides and obtuse angles.",
        "FOL": "∀x (Object(x) → (Rhombus(x) ↔ (HasFourEquivalentSides(x) ∧ HasObtuseAngles(x))))"
    },
    {
        "NL": "Either a company is profitable and growing, or it is struggling and downsizing, but not both.",
        "FOL": "∀x ((Company(x) ∧ Profitable(x) ∧ Growing(x)) ⊕ (Company(x) ∧ Struggling(x) ∧ Downsizing(x)))"
    },
    {
        "NL": "A computer program can solve a problem if it can understand the problem, execute a correct algorithm, and produce a valid output.",
        "FOL": "∀x∀y (ComputerProgram(x) ∧ Problem(y) → (Solves(x, y) ↔ (UnderstandsProblem(x, y) ∧ ExecutesCorrectAlgorithm(x, y) ∧ ProducesValidOutput(x, y))))"
    },
    {
        "NL": "A person is considered a sculptor if they create three-dimensional art by shaping materials such as clay, stone, or metal.",
        "FOL": "∀x (Sculptor(x) ↔ CreatesThreeDimensionalArt(x))"
    },
    {
        "NL": "A cake is sweet if it contains sugar or honey.",
        "FOL": "∀x (Cake(x) ∧ Sweet(x) → (ContainsSugar(x) ∨ ContainsHoney(x)))"
    },
    {
        "NL": "Dogs chase cats.",
        "FOL": "∀x ∀y (Dog(x) ∧ Cat(y) → Chase(x, y))"
    },
    {
        "NL": "A film can win an award if it features outstanding performances and receives critical acclaim.",
        "FOL": "∀x (Film(x) ∧ OutstandingPerformances(x) ∧ CriticalAcclaim(x) → CanWinAward(x))"
    },
    {
        "NL": "Any person who perceives life as a battle, deserves to win.",
        "FOL": "∀x (PerceivesLifeAsBattle(x) → DeservesToWin(x))"
    },
    {
        "NL": "There is a sky where some birds fly.",
        "FOL": "∃x ∃y (Sky(x) ∧ Bird(y) ∧ FlyIn(y, x))"
    },
    {
        "NL": "All pilots are trained, or some drivers are not skilled operators.",
        "FOL": "∀x (Pilot(x) → Trained(x)) ∨ ∃y (Driver(y) ∧ ¬SkilledOperator(y))"
    },
    {
        "NL": "A refrigerator preserves food by maintaining a cool temperature, which slows down the growth of bacteria.",
        "FOL": "∀x (Refrigerator(x) → (PreservesFood(x) ∧ MaintainsCoolTemperature(x) ∧ SlowsBacterialGrowth(x)))"
    },
    {
        "NL": "A predator chases its prey for food, while a saprophyte thrives on decomposed material.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) → ChasesForFood(x, y)) ∧ ∀z ∀w (Saprophyte(z) ∧ DecomposedMaterial(w) → ThrivesOn(z, w))"
    },
    {
        "NL": "If a person is a flight attendant, they ensure passenger safety and comfort during flights.",
        "FOL": "∀x (FlightAttendant(x) → (EnsuresPassengerSafetyDuringFlights(x) ∧ EnsuresPassengerComfortDuringFlights(x)))"
    },
    {
        "NL": "A thunderstorm occurs when there is a combination of lightning, thunder, and heavy rainfall.",
        "FOL": "∀x (Thunderstorm(x) ↔ (Lightning(x) ∧ Thunder(x) ∧ HeavyRainfall(x)))"
    },
    {
        "NL": "A product is either available or out of stock.",
        "FOL": "∀x (Product(x) → (Available(x) ⊕ OutOfStock(x)))"
    },
    {
        "NL": "A game can be played indoors or outdoors depending on its rules and required equipment.",
        "FOL": "∀x ∀y (Game(x) ∧ Location(y) ∧ FollowsRules(x, y) ∧ RequiresEquipment(x, y) → CanBePlayed(x, y))"
    },
    {
        "NL": "A politician can win an election if they have the majority of votes and meet the eligibility requirements.",
        "FOL": "∀x ∀y (Politician(x) ∧ Election(y) → (MajorityOfVotes(x, y) ∧ Eligible(x, y) → WinElection(x, y)))"
    },
    {
        "NL": "A museum exhibits art and artifacts.",
        "FOL": "∀x (Museum(x) → (ExhibitsArt(x) ∧ ExhibitsArtifacts(x)))"
    },
    {
        "NL": "An animal that has a long neck, lives in Africa, and is the tallest terrestrial animal is a giraffe.",
        "FOL": "∀x (Animal(x) ∧ HasLongNeck(x) ∧ LivesInAfrica(x) ∧ TallestTerrestrialAnimal(x) → Giraffe(x))"
    },
    {
        "NL": "A film is a documentary if it is based on real life events and if the director has won a documentary award before.",
        "FOL": "∀x ∃y (Film(x) ∧ Director(y) ∧ BasedOnRealLifeEvents(x) ∧ WonDocumentaryAward(y) → DocumentaryFilm(x))"
    },
    {
        "NL": "An island is a piece of land surrounded by water on all sides.",
        "FOL": "∀x (Island(x) ↔ (∃y (Land(x) ∧ Water(y) ∧ SurroundedBy(x, y))))"
    },
    {
        "NL": "A student can graduate when they complete all required courses, satisfy the minimum GPA requirement, and fulfill any additional program-specific criteria.",
        "FOL": "∀x (Student(x) ∧ CompletedRequiredCourses(x) ∧ SatisfiesMinimumGPA(x) ∧ FulfillsProgramCriteria(x) → CanGraduate(x))"
    },
    {
        "NL": "A kid is playing on the playground.",
        "FOL": "∃x ∃y (Kid(x) ∧ Playground(y) ∧ PlayingOn(x, y))"
    },
    {
        "NL": "A fruit that has a hard shell and an edible seed is a nut.",
        "FOL": "∀x (Fruit(x) ∧ HasHardShell(x) ∧ EdibleSeed(x) → Nut(x))"
    },
    {
        "NL": "No chef in the kitchen cooked a dish.",
        "FOL": "¬∃x (Chef(x) ∧ InKitchen(x) ∧ CookedDish(x))"
    },
    {
        "NL": "A plant undergoes photosynthesis to convert sunlight, carbon dioxide, and water into glucose and oxygen.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ Sunlight(y) ∧ CarbonDioxide(c) ∧ Water(w) → Photosynthesis(x, y, c, w, Glucose, Oxygen))"
    },
    {
        "NL": "A smartphone is considered expensive if it has a high price and is not a budget brand.",
        "FOL": "∀x (Smartphone(x) ∧ HighPrice(x) ∧ ¬BudgetBrand(x) → Expensive(x))"
    },
    {
        "NL": "A mountain range has multiple mountains.",
        "FOL": "∀x ∃y (MountainRange(x) ∧ Mountain(y) ∧ PartOf(y, x))"
    },
    {
        "NL": "A fruit that is green and sour is a lime.",
        "FOL": "∀x (Fruit(x) ∧ IsGreen(x) ∧ IsSour(x) → Lime(x))"
    },
    {
        "NL": "A vehicle is considered a car if it has four wheels, an engine, and can carry up to five people.",
        "FOL": "∀x ((Vehicle(x) ∧ HasFourWheels(x) ∧ HasEngine(x) ∧ CanCarryFivePeople(x)) → Car(x))"
    },
    {
        "NL": "A planet that orbits a star and has a mass less than the star, but large enough to retain an atmosphere, can support life.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ Star(y) ∧ Atmosphere(z) ∧ Orbits(x, y) ∧ LessMass(x, y) ∧ Retains(x, z) → CanSupportLife(x))"
    },
    {
        "NL": "Every university has at least one course that is taught by a professor.",
        "FOL": "∀x (University(x) → ∃y ∃z (Course(y) ∧ Professor(z) ∧ TaughtBy(y, z)))"
    },
    {
        "NL": "A bird flies in the sky, whereas a whale swims in the ocean.",
        "FOL": "∀x (Bird(x) → FliesInTheSky(x)) ∧ ∀y (Whale(y) → SwimsInTheOcean(y))"
    },
    {
        "NL": "An eco-friendly building is built using sustainable materials, powered by renewable energy sources, and has a green roof.",
        "FOL": "∀x (Building(x) ∧ EcoFriendly(x) ↔ (BuiltWithSustainableMaterials(x) ∧ PoweredByRenewableEnergy(x) ∧ GreenRoof(x)))"
    },
    {
        "NL": "A desert is an area with low precipitation and has sparse vegetation.",
        "FOL": "∀x (Desert(x) ↔ (LowPrecipitation(x) ∧ SparseVegetation(x)))"
    },
    {
        "NL": "An apple is a fruit, a carrot is a vegetable, and a mushroom is a fungus.",
        "FOL": "∀x ∀y ∀z (Apple(x) ∧ Carrot(y) ∧ Mushroom(z) → (IsFruit(x) ∧ IsVegetable(y) ∧ IsFungus(z)))"
    },
    {
        "NL": "A chair has a seat and a backrest.",
        "FOL": "∀x (Chair(x) → (HasSeat(x) ∧ HasBackrest(x)))"
    },
    {
        "NL": "All mammals have lungs and a backbone.",
        "FOL": "∀x (Mammal(x) → (HasLungs(x) ∧ HasBackbone(x)))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight, compact, and can be easily transported and used in various locations.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ Compact(x) ∧ EasilyTransported(x) ∧ UsedInVariousLocations(x) → Portable(x))"
    },
    {
        "NL": "An instrument is a string instrument if it has strings that are plucked or bowed to produce sound.",
        "FOL": "∀x (Instrument(x) ∧ StringInstrument(x) ↔ (HasStrings(x) ∧ (Plucked(x) ∨ Bowed(x))))"
    },
    {
        "NL": "A product sells well if it has a practical use, good quality, and a reputable brand.",
        "FOL": "∀x (Product(x) ∧ HasPracticalUse(x) ∧ HasGoodQuality(x) ∧ HasReputableBrand(x) → SellsWell(x))"
    },
    {
        "NL": "A bicycle has two wheels, a scooter has two or three wheels, and a car has four wheels.",
        "FOL": "∀x∀y∀z (Bicycle(x) ∧ Scooter(y) ∧ Car(z) → (HasTwoWheels(x) ∧ (HasTwoWheels(y) ⊕ HasThreeWheels(y)) ∧ HasFourWheels(z)))"
    },
    {
        "NL": "An animal can be classified as a mammal if it has hair, is warm-blooded, and gives birth to live young.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ↔ (HasHair(x) ∧ WarmBlooded(x) ∧ GivesBirthToLiveYoung(x))))"
    },
    {
        "NL": "A job is part-time if the work hours are less than full-time hours.",
        "FOL": "∀x (Job(x) ∧ WorkHoursLessThanFullTime(x) → PartTime(x))"
    },
    {
        "NL": "Not all cats are black.",
        "FOL": "¬∀x (Cat(x) → Black(x))"
    },
    {
        "NL": "A person who is both a parent and a sibling is an aunt or an uncle.",
        "FOL": "∀x (Person(x) ∧ Parent(x) ∧ Sibling(x) → (Aunt(x) ∨ Uncle(x)))"
    },
    {
        "NL": "All the workers on the project are working hard.",
        "FOL": "∀x (Worker(x) ∧ OnProject(x) → WorkingHard(x))"
    },
    {
        "NL": "A camera captures high-quality images when it has a high-resolution sensor, a wide dynamic range, and effective image stabilization.",
        "FOL": "∀x ∀y (Camera(x) ∧ HighResolutionSensor(x, y) ∧ WideDynamicRange(y) ∧ EffectiveImageStabilization(x) → HighQualityImages(x))"
    },
    {
        "NL": "A geological feature that forms at the boundary of tectonic plates, involves the movement of magma from the Earth's mantle, and creates new crust is a mid-ocean ridge.",
        "FOL": "∀x ∀y ∀z (GeologicalFeature(x) ∧ TectonicPlateBoundary(y) ∧ MagmaMovement(z) ∧ FormsAt(x, y) ∧ Involves(x, z) ∧ CreatesNewCrust(x) → MidOceanRidge(x))"
    },
    {
        "NL": "A renewable energy source, such as wind or solar power, is replenished naturally and has a minimal impact on the environment.",
        "FOL": "∀x (RenewableEnergySource(x) ↔ (ReplenishedNaturally(x) ∧ MinimalEnvironmentalImpact(x) ∧ (WindPower(x) ∨ SolarPower(x))))"
    },
    {
        "NL": "Unless a city is neither clean nor safe, it is a tourist attraction.",
        "FOL": "∀v ((Clean(v) ∨ Safe(v)) → TouristAttraction(v))"
    },
    {
        "NL": "A painter creates art, while a critic evaluates it.",
        "FOL": "∀x (Painter(x) → CreatesArt(x)) ∧ ∀y (Critic(y) → EvaluatesArt(y))"
    },
    {
        "NL": "A laptop has a built-in screen and keyboard, while a desktop computer requires external peripherals but has more powerful components.",
        "FOL": "∀x∀y (Laptop(x) ∧ DesktopComputer(y) → (HasBuiltInScreen(x) ∧ HasBuiltInKeyboard(x) ∧ RequiresExternalPeripherals(y) ∧ HasMorePowerfulComponents(y)))"
    },
    {
        "NL": "An employee is considered full-time if they work more than 30 hours per week.",
        "FOL": "∀x (Employee(x) ∧ WorksMoreThanThirtyHoursPerWeek(x) → FullTime(x))"
    },
    {
        "NL": "A chef cooks meals, while a waiter serves them.",
        "FOL": "∀x (Chef(x) → CooksMeals(x)) ∧ ∀y (Waiter(y) → ServesMeals(y))"
    },
    {
        "NL": "A person is considered a vegetarian if they do not consume meat or fish.",
        "FOL": "∀x (Person(x) ∧ ¬ConsumesMeat(x) ∧ ¬ConsumesFish(x) → Vegetarian(x))"
    },
    {
        "NL": "A medicine is effective for treating an illness when prescribed by a doctor and taken according to instructions.",
        "FOL": "∀x∀y∀z (Medicine(x) ∧ Illness(y) ∧ Doctor(z) ∧ Prescribes(z, x) ∧ TakesAccordingToInstructions(x) → EffectiveFor(x, y))"
    },
    {
        "NL": "Each physician who practices in both clinics and hospitals, unless they are a Nobel laureate, has either given a worldwide conference or has not trained overseas students.",
        "FOL": "∀x (Physician(x) ∧ PracticesInClinics(x) ∧ PracticesInHospitals(x) ∨ NobelLaureate(x) → (GivenWorldwideConference(x) ∨ ¬TrainedOverseasStudents(x)))"
    },
    {
        "NL": "A business is considered successful if it has high profit margins and either a strong customer base or effective marketing strategy.",
        "FOL": "∀x (Business(x) ∧ HasHighProfitMargin(x) ∧ (HasStrongCustomerBase(x) ∨ HasEffectiveMarketingStrategy(x)) → Successful(x))"
    },
    {
        "NL": "In a binary star system, two stars orbit around their common center of mass.",
        "FOL": "∀x∀y (BinaryStarSystem(x, y) → OrbitCommonCenterOfMass(x, y))"
    },
    {
        "NL": "If a person has a PhD, they are considered a doctor.",
        "FOL": "∀x (HasPhD(x) → Doctor(x))"
    },
    {
        "NL": "An athlete who encourages another will be encouraged by a coach.",
        "FOL": "∀x ∃y (Athlete(x) ∧ Athlete(y) ∧ Encourage(x, y) → ∃z (Coach(z) ∧ WillEncourage(z, x)))"
    },
    {
        "NL": "A film belongs to the science fiction genre if it features imaginative content related to space, time, or advanced technology.",
        "FOL": "∀x (Film(x) ∧ (FeaturesImaginativeSpaceContent(x) ∨ FeaturesImaginativeTimeContent(x) ∨ FeaturesAdvancedTechnology(x)) → ScienceFiction(x))"
    },
    {
        "NL": "Tea is steeped in hot water, and coffee is brewed with hot water.",
        "FOL": "∀x (Tea(x) → SteepedInHotWater(x)) ∧ ∀y (Coffee(y) → BrewedWithHotWater(y))"
    },
    {
        "NL": "A battery-powered device stops functioning when the battery is empty or removed.",
        "FOL": "∀x∀y (Device(x) ∧ BatteryPowered(x, y) ∧ (Empty(y) ∨ Removed(y)) → StopsFunctioning(x))"
    },
    {
        "NL": "Analytical scientists do not ignore data.",
        "FOL": "∀x (Scientist(x) ∧ Analytical(x) → ¬IgnoreData(x))"
    },
    {
        "NL": "A publishing company produces books in diverse genres, such as fiction, non-fiction, and poetry, and releases titles in multiple formats, like hardcover, paperback, and e-book.",
        "FOL": "∀x∀y∀z (PublishingCompany(x) ∧ (FictionGenre(y) ∨ NonFictionGenre(y) ∨ PoetryGenre(y)) ∧ (HardcoverFormat(z) ∨ PaperbackFormat(z) ∨ EBookFormat(z)) → ProducesBooksInGenresAndFormats(x, y, z))"
    },
    {
        "NL": "There are altos who admire only those bassists who are louder than they.",
        "FOL": "∃x ∀y (Alto(x) ∧ Bassist(y) ∧ LouderThan(y, x) → Admire(x, y))"
    },
    {
        "NL": "A black hole is a region in space where the gravitational pull is so strong that nothing, including light, can escape.",
        "FOL": "∀x (BlackHole(x) → (RegionInSpace(x) ∧ GravitationalPullStrongEnough(x) ∧ ¬CanEscape(x, light)))"
    },
    {
        "NL": "An archaeologist excavates ancient sites, discovers artifacts, and studies the history and culture of past civilizations.",
        "FOL": "∀x∀y∀z∀w (Archaeologist(x) ∧ AncientSite(y) ∧ Artifact(z) ∧ PastCivilization(w) → (Excavates(x, y) ∧ Discovers(x, z) ∧ StudiesHistoryAndCulture(x, w)))"
    },
    {
        "NL": "Smartphones with extensive battery life and fast charging capabilities are highly valued by users.",
        "FOL": "∀x (Smartphone(x) ∧ ExtensiveBatteryLife(x) ∧ FastCharging(x) → HighlyValuedByUsers(x))"
    },
    {
        "NL": "Houses shelter people and have doors and windows.",
        "FOL": "∀x (House(x) → (∃y (Person(y) ∧ Shelters(x, y)) ∧ ∃z ∃w (Door(z) ∧ Window(w) ∧ Has(x, z, w))))"
    },
    {
        "NL": "An event is recognized as a natural disaster when it results from natural processes, causes widespread destruction, and has a significant impact on the environment and human life.",
        "FOL": "∀x (Event(x) ∧ ResultsFromNaturalProcesses(x) ∧ CausesWidespreadDestruction(x) ∧ HasSignificantImpactOnEnvironmentAndHumanLife(x) → NaturalDisaster(x))"
    },
    {
        "NL": "A chemical reaction occurs when reactants combine to form products, and the reaction can be exothermic, endothermic, or neither.",
        "FOL": "∀x ∀y ∀z (ChemicalReaction(x) ∧ Reactants(y) ∧ Products(z) ∧ Combine(y, z) → (Exothermic(x) ⊕ Endothermic(x) ⊕ NeitherExoNorEndothermic(x)))"
    },
    {
        "NL": "Some elements are magnetic, while others are non-magnetic.",
        "FOL": "∀x (Element(x) → (Magnetic(x) ⊕ NonMagnetic(x)))"
    },
    {
        "NL": "A phone can make calls and send texts.",
        "FOL": "∀x (Phone(x) → (CanMakeCalls(x) ∧ CanSendTexts(x)))"
    },
    {
        "NL": "A movie is considered popular if it has a high box office revenue or has received numerous awards.",
        "FOL": "∀x (Movie(x) → (HighBoxOfficeRevenue(x) ∨ ReceivedNumerousAwards(x) → Popular(x)))"
    },
    {
        "NL": "An island is a landmass surrounded by water, and an archipelago is a group of islands that are close to one another.",
        "FOL": "∀x ∀y (Island(x) ∧ Archipelago(y) → (Landmass(x) ∧ SurroundedByWater(x) ∧ GroupOfIslands(y) ∧ CloseToOneAnother(y)))"
    },
    {
        "NL": "An electric vehicle charges at a charging station if the station is compatible with the vehicle's charging port and has an available charger.",
        "FOL": "∀x ∀y ∀z (ElectricVehicle(x) ∧ ChargingStation(y) ∧ ChargingPort(z) ∧ CompatibleWith(x, z) ∧ HasAvailableCharger(y, z) → ChargesAt(x, y))"
    },
    {
        "NL": "A building that serves as the primary residence for a single family, often surrounded by a yard, and provides living spaces for sleeping, cooking, and leisure is a single-family home.",
        "FOL": "∀x (Building(x) ∧ PrimaryResidence(x) ∧ SingleFamily(x) ∧ SurroundedByYard(x) ∧ ProvidesLivingSpaces(x) → SingleFamilyHome(x))"
    },
    {
        "NL": "A battery is either charged or discharged.",
        "FOL": "∀x (Battery(x) → (Charged(x) ⊕ Discharged(x)))"
    },
    {
        "NL": "A person is liked by all friends who are outgoing.",
        "FOL": "∃x ∀y (Person(x) ∧ Friend(y) ∧ Outgoing(y) → Likes(y, x))"
    },
    {
        "NL": "All cats hate cold water.",
        "FOL": "∀x ∀y (Cats(x) ∧ Cold(y) ∧ Water(y) → ¬Hate(x, y))"
    },
    {
        "NL": "In general, if an object is hot, it can either be cooled by air or water.",
        "FOL": "∀x (Hot(x) → (CooledByAir(x) ∨ CooledByWater(x)))"
    },
    {
        "NL": "Libraries offer access to books, periodicals, and digital resources for research and leisure.",
        "FOL": "∀x (Library(x) → (OffersAccess(x, books) ∧ OffersAccess(x, periodicals) ∧ OffersAccess(x, digitalResources) ∧ ForResearchAndLeisure(x)))"
    },
    {
        "NL": "Musicians compose music, while dancers perform dance routines.",
        "FOL": "∀x ∀y (Musician(x) ∧ Music(y) → Composes(x, y)) ∧ ∀z ∀w (Dancer(z) ∧ DanceRoutine(w) → Performs(z, w))"
    },
    {
        "NL": "Pilots fly aircrafts, while drivers operate cars.",
        "FOL": "∀x ∀y (Pilot(x) ∧ Aircraft(y) → Operates(x, y)) ∧ ∀z ∀w (Driver(z) ∧ Car(w) → Operates(z, w))"
    },
    {
        "NL": "A hotel is fully booked when all rooms are occupied or when the hotel is closed for renovations.",
        "FOL": "∀x (Hotel(x) → (FullyBooked(x) ↔ (∀y (Room(y, x) → Occupied(y)) ∨ ClosedForRenovations(x))))"
    },
    {
        "NL": "Regular exercise and a balanced diet contribute to overall health.",
        "FOL": "∀x∀y (RegularExercise(x) ∧ BalancedDiet(y) → ContributesToOverallHealth(x, y))"
    },
    {
        "NL": "A vehicle is a bus if it carries passengers, is public transport, and promotes eco-friendly commute.",
        "FOL": "∀x (Vehicle(x) ∧ CarriesPassengers(x) ∧ PublicTransport(x) ∧ EcoFriendlyCommute(x) → Bus(x))"
    },
    {
        "NL": "All athletes who have competed with at least one athlete, who in turn has not won a trophy, have either trained more than two teams or participated in all global games.",
        "FOL": "∀x (Athlete(x) ∧ ∃y (Athlete(y) ∧ ¬WonTrophy(y) ∧ CompetedWith(x, y)) → (TrainedMoreThanTwoTeams(x) ∨ ∀z (GlobalGame(z) → ParticipatedIn(x, z))))"
    },
    {
        "NL": "A person is a scientist if they conduct research in a specific field.",
        "FOL": "∀x (Scientist(x) ↔ (Person(x) ∧ ∃y (Field(y) ∧ ConductsResearch(x, y))))"
    },
    {
        "NL": "A doctor treats patients, while a researcher studies diseases.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) → Treats(x, y)) ∧ (Researcher(x) ∧ Disease(y) → Studies(x, y))"
    },
    {
        "NL": "A season can be either spring, summer, fall, or winter.",
        "FOL": "Season(spring) ⊕ Season(summer) ⊕ Season(fall) ⊕ Season(winter)"
    },
    {
        "NL": "If a person is a graphic designer, they must create visual concepts, using computer software or by hand, to communicate ideas that inspire, inform, or captivate consumers.",
        "FOL": "∀x (GraphicDesigner(x) → (CreatesVisualConcepts(x) ∧ UsingComputerSoftwareOrByHand(x) ∧ CommunicatesIdeas(x) ∧ InspiresInformsOrCaptivatesConsumers(x)))"
    },
    {
        "NL": "An herbivorous animal primarily consumes plant material and does not eat meat.",
        "FOL": "∀x (Herbivorous(x) → (ConsumesPlantMaterial(x) ∧ ¬EatsMeat(x)))"
    },
    {
        "NL": "A planet is considered terrestrial if it is composed primarily of rock and metal.",
        "FOL": "∀x (Planet(x) ∧ ComposedOfRock(x) ∧ ComposedOfMetal(x) → Terrestrial(x))"
    },
    {
        "NL": "A chef will quit the job only if he does not get adequate pay.",
        "FOL": "∀x (Chef(x) ∧ QuitJob(x) → ¬AdequatePay(x))"
    },
    {
        "NL": "When a vehicle is equipped with an internal combustion engine, uses gasoline as fuel, and has a manual transmission, it is typically classified as a gasoline-powered manual car.",
        "FOL": "∀x∀y∀z (Vehicle(x) ∧ EquippedWithInternalCombustionEngine(x, y) ∧ UsesGasolineAsFuel(x) ∧ HasManualTransmission(x, z) → GasolinePoweredManualCar(x))"
    },
    {
        "NL": "A vehicle is considered a luxury car if it has a plush interior, high-end technology, and a powerful engine.",
        "FOL": "∀x (Vehicle(x) ∧ HasPlushInterior(x) ∧ HasHighEndTech(x) ∧ HasPowerfulEngine(x) → LuxuryCar(x))"
    },
    {
        "NL": "Actors perform in movies.",
        "FOL": "∀x∀y (Actor(x) ∧ Movie(y) → PerformsIn(x, y))"
    },
    {
        "NL": "A student can be an undergraduate, a postgraduate, or a doctoral candidate.",
        "FOL": "∀x (Student(x) → (Undergraduate(x) ∨ Postgraduate(x) ∨ DoctoralCandidate(x)))"
    },
    {
        "NL": "If a restaurant serves both vegan and non-vegan dishes, then some customers are vegans, and some customers are not vegans.",
        "FOL": "∀x∀y∀z (Restaurant(x) ∧ ServesVeganDishes(x) ∧ ServesNonVeganDishes(x) → (VeganCustomer(y) ∧ NonVeganCustomer(z)))"
    },
    {
        "NL": "A car provides transportation and permits travel to different locations.",
        "FOL": "∀y (Car(y) → (ProvidesTransportation(y) ∧ PermitsTravelToLocations(y)))"
    },
    {
        "NL": "Musical instruments that are played with a bow can be a violin or a cello.",
        "FOL": "∀x (MusicalInstrument(x) ∧ PlayedWithBow(x) → (Violin(x) ∨ Cello(x)))"
    },
    {
        "NL": "A balanced diet consists of the appropriate proportions of nutrients, including carbohydrates, proteins, fats, vitamins, and minerals, to maintain good health.",
        "FOL": "∀x∀y∀z (Diet(x) ∧ Nutrients(y) ∧ Health(z) → (Balanced(x) ↔ (AppropriateProportions(x, y) ∧ MaintainsGoodHealth(x, z))))"
    },
    {
        "NL": "A cyclist starts from his initial city and arrives at his final city, resting at multiple locations.",
        "FOL": "∃x ∃y ∃z (Cyclist(x) ∧ InitialCity(y) ∧ FinalCity(z) → StartsFrom(x, y) ∧ ArrivesAt(x, z) ∧ ∃w (Location(w) ∧ RestsAt(x, w)))"
    },
    {
        "NL": "A recipe qualifies as a healthy meal option if it consists of whole grains, lean proteins, and a low amount of saturated fats.",
        "FOL": "∀x (Recipe(x) ∧ WholeGrains(x) ∧ LeanProteins(x) ∧ LowSaturatedFats(x) → HealthyMealOption(x))"
    },
    {
        "NL": "A fruit can be either ripe or unripe.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ⊕ Unripe(x)))"
    },
    {
        "NL": "Fruits become ripe when they reach their optimal color, flavor, and texture.",
        "FOL": "∀x (Fruit(x) ∧ (BecomesRipe(x) ↔ (OptimalColor(x) ∧ OptimalFlavor(x) ∧ OptimalTexture(x))))"
    },
    {
        "NL": "A song is a ballad or not a ballad.",
        "FOL": "∀x (Song(x) → (Ballad(x) ⊕ ¬Ballad(x)))"
    },
    {
        "NL": "A sculptor is sculpting a statue in the workshop, or an author is penning a book in the study.",
        "FOL": "∃x ∃y (Sculptor(x) ∧ Statue(y) ∧ Sculpting(x, y) ∧ InTheWorkshop(x)) ∨ ∃z ∃w (Author(z) ∧ Book(w) ∧ Penning(z, w) ∧ InTheStudy(z))"
    },
    {
        "NL": "A bank grants a loan to a customer if they have a good credit score and a stable income.",
        "FOL": "∀x∀y (Bank(x) ∧ Customer(y) → (GrantsLoan(x, y) ↔ (GoodCreditScore(y) ∧ StableIncome(y))))"
    },
    {
        "NL": "A poem is touching if and only if it has profound words, emotional tone, but doesn't have too many irrelevant stanzas.",
        "FOL": "∀x (Poem(x) ∧ Touching(x) ↔ (HasProfoundWords(x) ∧ HasEmotionalTone(x) ∧ ¬ManyIrrelevantStanzas(x)))"
    },
    {
        "NL": "A celestial body that orbits a star and has cleared its orbit of other debris is a planet.",
        "FOL": "∀x ∀y (CelestialBody(x) ∧ Star(y) ∧ Orbits(x, y) ∧ ClearedOrbit(x) → Planet(x))"
    },
    {
        "NL": "There are books that are either novels or textbooks, but not both.",
        "FOL": "∃x (Book(x) ∧ (Novel(x) ⊕ Textbook(x)))"
    },
    {
        "NL": "A city is safe to visit if the crime rate is low and there are no ongoing conflicts.",
        "FOL": "SafeToVisit(x) ↔ (LowCrimeRate(x) ∧ ¬OngoingConflicts(x))"
    },
    {
        "NL": "In an orchestra, brass instruments include trumpet, trombone, and tuba; woodwind instruments include flute, clarinet, and oboe.",
        "FOL": "∀x ∀y ∀z ∀a ∀b ∀c (Orchestra(x) → ((BrassInstrument(y) ∧ (Trumpet(a) ∨ Trombone(b) ∨ Tuba(c))) ∨ (WoodwindInstrument(z) ∧ (Flute(a) ∨ Clarinet(b) ∨ Oboe(c)))))"
    },
    {
        "NL": "A bakery that offers freshly baked goods and a cozy atmosphere attracts patrons.",
        "FOL": "∀x (Bakery(x) ∧ FreshlyBakedGoods(x) ∧ CozyAtmosphere(x) → AttractsPatrons(x))"
    },
    {
        "NL": "If a bird is a canary, it either lives in the forest or the park.",
        "FOL": "∀x (Bird(x) ∧ Canary(x) → LiveInForest(x) ⊕ LiveInPark(x))"
    },
    {
        "NL": "A light brightens a room when it is turned on or has sufficient power.",
        "FOL": "∀x (Light(x) ∧ (TurnedOn(x) ∨ HasSufficientPower(x)) → BrightensRoom(x))"
    },
    {
        "NL": "A place is considered a hospital if it provides medical and surgical treatment and care for sick or injured individuals.",
        "FOL": "∀x (Place(x) ∧ ProvidesMedicalAndSurgicalTreatment(x) ∧ CareForSickOrInjured(x) → Hospital(x))"
    },
    {
        "NL": "A man that is very tall, plays basketball, and is agile is usually a basketball player.",
        "FOL": "∀v (Man(v) ∧ IsTall(v) ∧ PlaysBasketball(v) ∧ IsAgile(v) → BasketballPlayer(v))"
    },
    {
        "NL": "An ice cream flavor is popular if it has a smooth texture and a unique taste.",
        "FOL": "∀x (IceCreamFlavor(x) ∧ SmoothTexture(x) ∧ UniqueTaste(x) → Popular(x))"
    },
    {
        "NL": "A book x is a bestseller if it has high sales.",
        "FOL": "∀x (Book(x) ∧ HighSales(x) → Bestseller(x))"
    },
    {
        "NL": "A celestial object that orbits a star and is not a star itself is a planet.",
        "FOL": "∀x (CelestialObject(x) ∧ OrbitsStar(x) ∧ ¬Star(x) → Planet(x))"
    },
    {
        "NL": "If a gadget is part of a tech expo, it is a phone, tablet, or laptop.",
        "FOL": "∀x (Gadget(x) ∧ PartOfTechExpo(x) → Phone(x) ∨ Tablet(x) ∨ Laptop(x))"
    },
    {
        "NL": "A person who has a high fever, cough, and difficulty breathing may be suffering from pneumonia.",
        "FOL": "∀x (Person(x) ∧ HighFever(x) ∧ Cough(x) ∧ DifficultyBreathing(x) → PossiblySufferingFrom(x, pneumonia))"
    },
    {
        "NL": "A bakery sells bread and pastries, while a butcher sells meat and doesn't sell pastries.",
        "FOL": "∀x∀y (Bakery(x) ∧ Butcher(y) → (SellsBread(x) ∧ SellsPastries(x) ∧ SellsMeat(y) ∧ ¬SellsPastries(y)))"
    },
    {
        "NL": "A movie that is a comedy can entertain viewers.",
        "FOL": "∀x ∀y (Movie(x) ∧ Comedy(x) ∧ Viewer(y) → CanEntertain(x, y))"
    },
    {
        "NL": "No athlete has played all games but hasn't ever participated in a marathon.",
        "FOL": "¬∃x (Athlete(x) ∧ ∀y (Game(y) → Played(x, y)) ∧ ¬∃z (Marathon(z) ∧ HasParticipated(x, z)))"
    },
    {
        "NL": "There exist games that are fun and popular, but not excessively valued, or they are excessively valued but not fun and popular.",
        "FOL": "∀x (Game(x) → ((Fun(x) ∧ Popular(x) ∧ ¬ExcessivelyValued(x)) ⊕ (ExcessivelyValued(x) ∧ ¬(Fun(x) ∧ Popular(x)))))"
    },
    {
        "NL": "A library x loans a book y to a patron z if y is part of x's collection and z has no overdue books.",
        "FOL": "∀x ∀y ∀z (Library(x) ∧ Book(y) ∧ Patron(z) ∧ InCollection(x, y) ∧ NoOverdueBooks(z) → Loans(x, y, z))"
    },
    {
        "NL": "Not all insects are harmful, but some can transmit diseases or damage crops.",
        "FOL": "∀x (Insect(x) ∧ (¬Harmful(x) ∨ (TransmitsDiseases(x) ∨ DamagesCrops(x))))"
    },
    {
        "NL": "A sport that is played on a rectangular field, has two teams competing against each other, and uses a spherical ball is soccer.",
        "FOL": "∀x (Sport(x) ∧ PlayedOnRectangularField(x) ∧ TwoTeamsCompeting(x) ∧ UsesSphericalBall(x) → Soccer(x))"
    },
    {
        "NL": "A book can be classified as a bestseller if it has sold a large number of copies, received positive reviews, and gained widespread popularity.",
        "FOL": "∀x∀y (Book(x) ∧ Bestseller(y) → (ClassifiedAs(x, y) ↔ (SoldLargeNumberOfCopies(x) ∧ ReceivedPositiveReviews(x) ∧ GainedWidespreadPopularity(x))))"
    },
    {
        "NL": "A person is considered a vegetarian if they don't consume meat or fish.",
        "FOL": "∀x (Person(x) ∧ ¬(∃y (Meat(y) ∨ Fish(y)) ∧ Consumes(x, y)) → Vegetarian(x))"
    },
    {
        "NL": "Given not all chefs are highly-trained, there must be a cuisine that every cuisine is inspired by.",
        "FOL": "¬∀x (Chef(x) → HighlyTrained(x)) → ∃y (Cuisine(y) ∧ ∀z (Cuisine(z) → InspiredBy(z, y)))"
    },
    {
        "NL": "If someone is a doctor, they have completed medical school.",
        "FOL": "∀x (Doctor(x) → CompletedMedicalSchool(x))"
    },
    {
        "NL": "An asteroid impact on Earth can cause massive destruction, such as tsunamis, wildfires, and climate change.",
        "FOL": "∀x ∀y (AsteroidImpact(x, Earth) → (Tsunamis(y) ∨ Wildfires(y) ∨ ClimateChange(y)))"
    },
    {
        "NL": "A farm grows vegetables, while another farm raises livestock.",
        "FOL": "∃x ∃y (Farm(x) ∧ Vegetables(y) ∧ Grows(x, y)) ∧ ∃z ∃w (Farm(z) ∧ Livestock(w) ∧ Raises(z, w))"
    },
    {
        "NL": "An animal x is a herbivore if it primarily consumes plant-based food and does not eat other animals.",
        "FOL": "∀x (Animal(x) ∧ ConsumesPlantBasedFood(x) ∧ ¬EatsOtherAnimals(x) → Herbivore(x))"
    },
    {
        "NL": "A vehicle with a flat tire or an overheated engine cannot be driven safely.",
        "FOL": "∀x (Vehicle(x) ∧ (FlatTire(x) ∨ OverheatedEngine(x)) → ¬CanBeDrivenSafely(x))"
    },
    {
        "NL": "A student graduates from a university after completing the required courses and passing the exams.",
        "FOL": "∀x∀y (Student(x) ∧ University(y) ∧ CompletedCourses(x, y) ∧ PassedExams(x, y) → Graduates(x, y))"
    },
    {
        "NL": "A chef prepares meals by cooking and combining ingredients.",
        "FOL": "∀x∀y (Chef(x) ∧ Ingredients(y) → PreparesMeals(x, y))"
    },
    {
        "NL": "A vehicle can be a car, a bicycle, or a boat, but not more than one category.",
        "FOL": "∀x (Vehicle(x) → ((Car(x) ∨ Bicycle(x) ∨ Boat(x)) ∧ ¬(Car(x) ∧ Bicycle(x)) ∧ ¬(Car(x) ∧ Boat(x)) ∧ ¬(Bicycle(x) ∧ Boat(x))))"
    },
    {
        "NL": "A player who trains a partner will be trained by another person.",
        "FOL": "∀x ∃y (Player(x) ∧ Partner(y) ∧ Train(x, y) → ∃z (Person(z) ∧ WillTrain(z, x)))"
    },
    {
        "NL": "A cat is sleeping on a mat, and a dog is fetching in the park.",
        "FOL": "∃x ∃y (Cat(x) ∧ Mat(y) ∧ SleepingOn(x, y)) ∧ ∃z (Dog(z) ∧ Fetching(z) ∧ InThePark(z))"
    },
    {
        "NL": "A building is either residential or commercial, but not both.",
        "FOL": "∀x (Building(x) → (Residential(x) ⊕ Commercial(x)))"
    },
    {
        "NL": "A chair is comfortable if it's not hard and not broken.",
        "FOL": "∀x (Chair(x) → (Comfortable(x) ↔ (¬Hard(x) ∧ ¬Broken(x))))"
    },
    {
        "NL": "A material that is strong, lightweight, and corrosion-resistant is suitable for aerospace applications.",
        "FOL": "∀x (Material(x) ∧ Strong(x) ∧ Lightweight(x) ∧ CorrosionResistant(x) → SuitableForAerospaceApplications(x))"
    },
    {
        "NL": "A student graduates from a university if they have completed all required courses and passed all exams.",
        "FOL": "∀x∀y (Student(x) ∧ University(y) → (CompletedRequiredCourses(x, y) ∧ PassedAllExams(x, y) → Graduates(x, y)))"
    },
    {
        "NL": "Innovative technologies often disrupt traditional industries, leading to new business opportunities.",
        "FOL": "∀x (InnovativeTechnology(x) → (DisruptsTraditionalIndustries(x) ∧ NewBusinessOpportunities(x)))"
    },
    {
        "NL": "A phone connects calls.",
        "FOL": "∀x (Phone(x) → ConnectsCalls(x))"
    },
    {
        "NL": "An airplane can take off from a runway, fly, and land at an airport.",
        "FOL": "∀x∀y (Airplane(x) ∧ Airport(y) → (TakesOffFrom(x, y) ∧ Flies(x) ∧ LandsAt(x, y)))"
    },
    {
        "NL": "A refrigerator maintains low temperatures to preserve food, while a freezer keeps items at a freezing point.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ Freezer(y) → (MaintainsLowTemperature(x) ∧ PreservesFood(x) ⊕ KeepsAtFreezingPoint(y)))"
    },
    {
        "NL": "A painting can be abstract, demonstrate artistic complexity, and sell for millions, or it can be a portrait, show realistic detail, and be displayed in a museum.",
        "FOL": "∀x (Painting(x) → ((Abstract(x) ∧ DemonstratesArtisticComplexity(x) ∧ SellForMillions(x)) ⊕ (Portrait(x) ∧ ShowsRealisticDetail(x) ∧ DisplayedInMuseum(x))))"
    },
    {
        "NL": "An email is sent if the recipient's address is valid and the sender's account is active, but not if the recipient's address is invalid or the sender's account is deactivated.",
        "FOL": "∀x (Email(x) → (Sent(x) ↔ (ValidRecipientAddress(x) ∧ ActiveSenderAccount(x) ∧ ¬InvalidRecipientAddress(x) ∧ ¬DeactivatedSenderAccount(x))))"
    },
    {
        "NL": "Mountains have peaks, valleys, and slopes.",
        "FOL": "∀x (Mountain(x) → (HasPeaks(x) ∧ HasValleys(x) ∧ HasSlopes(x)))"
    },
    {
        "NL": "A black hole is a region of spacetime with such strong gravitational effects that nothing, not even light, can escape from it.",
        "FOL": "∀x (BlackHole(x) → (StrongGravitationalEffects(x) ∧ NothingEscapes(x) ∧ LightCannotEscape(x)))"
    },
    {
        "NL": "There are magazines that cover fashion and are published monthly.",
        "FOL": "∃x (Magazine(x) ∧ Covers(x, Fashion) ∧ Published(x, Monthly))"
    },
    {
        "NL": "If all humans are rational then there are some humans who respect Sarah.",
        "FOL": "∀x (Human(x) → Rational(x)) → ∃x (Human(x) ∧ Respect(x, sarah))"
    },
    {
        "NL": "A rainbow appears when sunlight is refracted by raindrops in the atmosphere.",
        "FOL": "∀x∀y (Rainbow(x) ∧ Sunlight(y) → AppearsWhenRefractedByRaindrops(x, y))"
    },
    {
        "NL": "A movie is considered exciting if it contains action or thriller scenes.",
        "FOL": "∀x (Movie(x) ∧ (HasAction(x) ∨ HasThriller(x)) → Exciting(x))"
    },
    {
        "NL": "An object is considered fragile if it breaks easily when dropped or subjected to force.",
        "FOL": "∀x (Object(x) ∧ (BreaksWhenDropped(x) ∨ BreaksWhenSubjectedToForce(x)) → Fragile(x))"
    },
    {
        "NL": "Every dish is either spicy or sweet.",
        "FOL": "∀x (Dish(x) → (Spicy(x) ⊕ Sweet(x)))"
    },
    {
        "NL": "Doctors treat patients with medications or therapy.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ (Medication(z) ∨ Therapy(z)) → TreatsWith(x, y, z))"
    },
    {
        "NL": "Madeline doesn't admire any Russian or Japanese.",
        "FOL": "∀x (Person(x) ∧ (From(x, russia) ∨ From(x, japan)) → ¬Admire(madeline, x))"
    },
    {
        "NL": "A person is considered a therapist if they help individuals cope with mental health issues or personal challenges.",
        "FOL": "∀x (Person(x) ∧ HelpsIndividualsCope(x) ∧ WithMentalHealthIssues(x) ∧ WithPersonalChallenges(x) → Therapist(x))"
    },
    {
        "NL": "Either Maria is a doctor or a nurse, but not both.",
        "FOL": "Doctor(maria) ⊕ Nurse(maria)"
    },
    {
        "NL": "A smartphone provides internet access and allows the usage of various applications and features.",
        "FOL": "∀x (Smartphone(x) → (ProvidesInternetAccess(x) ∧ AllowsUsageOfApplications(x) ∧ AllowsUsageOfFeatures(x)))"
    },
    {
        "NL": "In sports, teams compete against each other, and the team with the most points wins the game.",
        "FOL": "∀x∀y (Team(x) ∧ Team(y) ∧ CompeteAgainst(x, y) ∧ MostPoints(x) → WinsGame(x))"
    },
    {
        "NL": "A bird can fly long distances if it has strong wings and is not injured or sick.",
        "FOL": "∀x∀y (Bird(x) ∧ Distance(y) ∧ (StrongWings(x) ∧ ¬(Injured(x) ∨ Sick(x))) → CanFly(x, y))"
    },
    {
        "NL": "Not all vehicles that can drive are cars.",
        "FOL": "¬∀x (Vehicle(x) ∧ CanDrive(x) → Car(x))"
    },
    {
        "NL": "Electric cars produce zero emissions during operation.",
        "FOL": "∀x (ElectricCar(x) → ZeroEmissionsDuringOperation(x))"
    },
    {
        "NL": "In a chemistry lab, chemicals should be stored in a safe manner, and flammable chemicals must be kept away from heat sources.",
        "FOL": "∀x ∀y (ChemistryLab(x) ∧ Chemical(y) → (StoredSafely(x, y) ∧ (Flammable(y) → ¬NearHeatSource(x, y))))"
    },
    {
        "NL": "A bakery sells bread, cakes, and cookies.",
        "FOL": "∀x (Bakery(x) → (SellsBread(x) ∧ SellsCakes(x) ∧ SellsCookies(x)))"
    },
    {
        "NL": "In a team, if a player scores a goal, the team's score increases, but if a player receives a red card, they must leave the game.",
        "FOL": "∀x ∀y ∀z (Team(x) ∧ Player(y) ∧ Game(z) ∧ InTeam(y, x) ∧ InGame(x, z) → ((ScoresGoal(y, z) → IncreasesScore(x, z)) ∧ (ReceivesRedCard(y, z) → LeavesGame(y, z))))"
    },
    {
        "NL": "A cure fights against a certain disorder by activating the physiological safeguard to bring about a special outcome.",
        "FOL": "∀x ∃y (Cure(x) ∧ Disorder(y) ∧ ActivatesPhysiologicalSafeguard(x) ∧ BringsAboutSpecialOutcome(x, y) → FightsAgainst(x, y))"
    },
    {
        "NL": "A food x contains nutrients y and is preferred by animal species z if x is rich in y and z is observed consuming x.",
        "FOL": "∀x ∀y ∀z (Food(x) ∧ Nutrients(y) ∧ AnimalSpecies(z) ∧ RichIn(x, y) ∧ ObservedConsuming(z, x) → ContainsNutrientsAndPreferred(x, y, z))"
    },
    {
        "NL": "A marathon is a long-distance running event that covers a distance of 42.195 kilometers.",
        "FOL": "∀x∀y (Marathon(x) ∧ LongDistanceRunningEvent(y) → (CoversDistance(x, y, 42.195)))"
    },
    {
        "NL": "Not every song is enjoyable, but every enjoyable song brings joy.",
        "FOL": "¬∀x (Song(x) → Enjoyable(x)) ∧ ∀y (Enjoyable(y) ∧ Song(y) → BringsJoy(y))"
    },
    {
        "NL": "A volcano is active when it has erupted recently, shows signs of unrest, or releases gases.",
        "FOL": "∀x (Volcano(x) ∧ (EruptedRecently(x) ∨ ShowsSignsOfUnrest(x) ∨ ReleasesGases(x)) → Active(x))"
    },
    {
        "NL": "If a person is a firefighter, they extinguish fires and rescue people.",
        "FOL": "∀x (Person(x) ∧ Firefighter(x) → (ExtinguishFires(x) ∧ RescuePeople(x)))"
    },
    {
        "NL": "When a predator population, such as wolves, increases, the prey population, like deer, tends to decrease, resulting in a dynamic balance between the two populations in a stable ecosystem.",
        "FOL": "∀x ∀y (PredatorPopulation(x) ∧ PreyPopulation(y) → (Increases(x) → (Decreases(y) ∧ DynamicBalanceBetweenPopulations(x, y))))"
    },
    {
        "NL": "No movie is both entertaining and boring.",
        "FOL": "¬∃x (Movie(x) ∧ Entertaining(x) ∧ Boring(x))"
    },
    {
        "NL": "There is no dog that chases all the cats.",
        "FOL": "¬∃x (Dog(x) ∧ ∀y (Cat(y) → Chases(x, y)))"
    },
    {
        "NL": "A person is considered a graphic designer if they create visual concepts to communicate ideas and messages through various media.",
        "FOL": "∀x (Person(x) ∧ CreatesVisualConcepts(x) ∧ CommunicatesIdeasAndMessages(x) → GraphicDesigner(x))"
    },
    {
        "NL": "A computer has internet access if it has a modem and a network card.",
        "FOL": "∀x (Computer(x) ∧ HasModem(x) ∧ HasNetworkCard(x) → HasInternetAccess(x))"
    },
    {
        "NL": "A tree that is deciduous sheds its leaves seasonally, typically during the fall, and often has broad, flat leaves for efficient photosynthesis.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → ShedsLeavesSeasonally(x) ∧ TypicallyDuringFall(x) ∧ OftenHasBroadFlatLeavesForEfficientPhotosynthesis(x))"
    },
    {
        "NL": "A plant is considered poisonous if ingesting any part of it causes harm to animals or humans.",
        "FOL": "∀x (Poisonous(x) ↔ (Plant(x) ∧ ∀y (Animal(y) ∨ Human(y)) → IngestsPartOfPlantCausesHarm(x, y)))"
    },
    {
        "NL": "A library provides access to books and quiet spaces, while a gym offers exercise equipment and fitness classes, and a cinema shows movies on a big screen.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Gym(y) ∧ Cinema(z) → (ProvidesAccessToBooks(x) ∧ OffersQuietSpaces(x) ∧ OffersExerciseEquipment(y) ∧ OffersFitnessClasses(y) ∧ ShowsMovies(z) ∧ HasBigScreen(z)))"
    },
    {
        "NL": "A software application becomes indispensable when it increases productivity and offers ease of use across various platforms.",
        "FOL": "∀x (SoftwareApplication(x) → (Indispensable(x) ↔ (IncreasesProductivity(x) ∧ EaseOfUseAcrossPlatforms(x))))"
    },
    {
        "NL": "A museum displays artifacts and exhibits related to history, art, and science.",
        "FOL": "∀x (Museum(x) → Display(x, history) ∨ Display(x, art) ∨ Display(x, science))"
    },
    {
        "NL": "Some fruits are rich in vitamins and can be eaten fresh, while others are better suited for cooking or processing.",
        "FOL": "∃x∃y (Fruit(x) ∧ RichInVitamins(x) ∧ EatenFresh(x) ∧ Fruit(y) ∧ BetterSuitedForCookingOrProcessing(y))"
    },
    {
        "NL": "Bacteria multiply rapidly, while viruses require a host to reproduce.",
        "FOL": "∀x (Bacteria(x) → MultipliesRapidly(x)) ∧ ∀y ∀z (Virus(y) ∧ Host(z) → RequiresToReproduce(y, z))"
    },
    {
        "NL": "A sculptor creates a statue using a block of marble.",
        "FOL": "∀x ∀y (Sculptor(x) ∧ Marble(y) → ∃z (Statue(z) ∧ CreatesFrom(x, z, y)))"
    },
    {
        "NL": "A gardener plants trees, and a park houses them.",
        "FOL": "∀x ∀y (Gardener(x) ∧ Trees(y) → Plant(x, y)) ∧ ∀z ∀w (Park(z) ∧ Trees(w) → House(z, w))"
    },
    {
        "NL": "An electronic device is energy efficient if it consumes low power, generates minimal heat, and has a long battery life.",
        "FOL": "∀x ∀y ∀z (ElectronicDevice(x) ∧ LowPowerConsumption(x, y) ∧ MinimalHeatGeneration(x, z) → LongBatteryLife(x))"
    },
    {
        "NL": "A shoe can be designed for running or hiking, feature a cushioned or firm sole, and be made of synthetic or natural materials.",
        "FOL": "∀x (Shoe(x) → ((DesignedForRunning(x) ⊕ DesignedForHiking(x)) ∧ (CushionedSole(x) ⊕ FirmSole(x)) ∧ (SyntheticMaterials(x) ⊕ NaturalMaterials(x))))"
    },
    {
        "NL": "A successful entrepreneur is resourceful, adaptable, and persistent.",
        "FOL": "∀x (SuccessfulEntrepreneur(x) ↔ (Resourceful(x) ∧ Adaptable(x) ∧ Persistent(x)))"
    },
    {
        "NL": "A solar eclipse occurs when the moon is between the Earth and the sun.",
        "FOL": "∀x (SolarEclipse(x) ↔ (MoonPosition(x, y) ∧ EarthPosition(x, z) ∧ SunPosition(x, w) ∧ Between(y, z, w)))"
    },
    {
        "NL": "A bank stores money for its customers and provides loans.",
        "FOL": "∀x (Bank(x) → (∀y (Customer(y) ∧ StoresMoneyFor(x, y)) ∧ ProvidesLoans(x)))"
    },
    {
        "NL": "A musician plays a song on an instrument.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Song(y) ∧ Instrument(z) → PlaysOn(x, y, z))"
    },
    {
        "NL": "Every poodle is a dog, but not every dog is a poodle.",
        "FOL": "∀x (Poodle(x) → Dog(x)) ∧ ¬∀x (Dog(x) → Poodle(x))"
    },
    {
        "NL": "Every painting is impressive if and only if it is either a portrait or an abstract.",
        "FOL": "∀x (Painting(x) → (Impressive(x) ↔ (Portrait(x) ∨ Abstract(x))))"
    },
    {
        "NL": "A song that is pop can please listeners.",
        "FOL": "∀x ∀y (Song(x) ∧ Pop(x) ∧ Listener(y) → CanPlease(x, y))"
    },
    {
        "NL": "An herbivore consumes plants, while a carnivore consumes other animals.",
        "FOL": "∀x∀y (Herbivore(x) ∧ Plant(y) → Consumes(x, y)) ∧ (Carnivore(x) ∧ Animal(y) → Consumes(x, y))"
    },
    {
        "NL": "There is someone who admires no one she met.",
        "FOL": "∃x (Person(x) ∧ ∀y (Person(y) ∧ Met(x, y) → ¬Admire(x, y)))"
    },
    {
        "NL": "A bird can fly if it has wings and is not injured.",
        "FOL": "∀x (Bird(x) ∧ HasWings(x) ∧ ¬Injured(x) → CanFly(x))"
    },
    {
        "NL": "A versatile piece of clothing can be worn in different seasons, be dressed up or down, and match various outfits.",
        "FOL": "∀x (Clothing(x) → (Versatile(x) ↔ (SuitableForDifferentSeasons(x) ∧ DressUpDown(x) ∧ MatchesVariousOutfits(x))))"
    },
    {
        "NL": "A celestial event that occurs when a celestial body passes directly between the sun and another celestial body, casting a shadow on the latter, is classified as an eclipse.",
        "FOL": "∀x∀y∀z (CelestialEvent(x) ∧ PassesBetween(y, Sun, z) ∧ CastsShadowOn(y, z) → Eclipse(x))"
    },
    {
        "NL": "Some trees lose their leaves during autumn.",
        "FOL": "∃x (Tree(x) ∧ LosesLeavesInAutumn(x))"
    },
    {
        "NL": "A thing is a tall building only if it is blue.",
        "FOL": "∀x (Tall(x) ∧ Building(x) → Blue(x))"
    },
    {
        "NL": "Some movies are either tragic or comic, but not both.",
        "FOL": "∃x (Movie(x) ∧ (Tragic(x) ⊕ Comic(x)))"
    },
    {
        "NL": "In a tropical rainforest, the canopy layer contains a high diversity of plant life, which supports various animal species.",
        "FOL": "∀x (TropicalRainforest(x) → (∃y (CanopyLayer(y, x) ∧ HighDiversityOfPlantLife(y) ∧ SupportsAnimalSpecies(y))))"
    },
    {
        "NL": "A lake is a large body of fresh water surrounded by land, while an island is a piece of land surrounded by water.",
        "FOL": "∀x∀y (Lake(x) ∧ Island(y) → (LargeBodyOfWater(x) ∧ FreshWater(x) ∧ SurroundedByLand(x) ∧ PieceOfLand(y) ∧ SurroundedByWater(y)))"
    },
    {
        "NL": "A refrigerator stores and cools perishable items, while an oven heats food for cooking.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ Oven(y) → (StoresPerishables(x) ∧ CoolsItems(x) ∧ HeatsFood(y)))"
    },
    {
        "NL": "A business owner who pays taxes and follows regulations is operating legally.",
        "FOL": "∀x (BusinessOwner(x) ∧ PaysTaxes(x) ∧ FollowsRegulations(x) → OperatesLegally(x))"
    },
    {
        "NL": "An animal that metamorphosizes into a winged form and is able to fly is a butterfly.",
        "FOL": "∀x (Animal(x) ∧ MetamorphosizesIntoWingedForm(x) ∧ CanFly(x) → Butterfly(x))"
    },
    {
        "NL": "Some books are either science or fiction.",
        "FOL": "∃x (Books(x) ∧ (Science(x) ⊕ Fiction(x)))"
    },
    {
        "NL": "Nations with democratic governments, open markets, and developed infrastructure systems have a better quality of life.",
        "FOL": "∀x (Nation(x) ∧ DemocraticGovernment(x) ∧ OpenMarket(x) ∧ DevelopedInfrastructure(x) → HaveBetterQualityOfLife(x))"
    },
    {
        "NL": "None at the workshop learns either programming or data science.",
        "FOL": "∀x (Person(x) ∧ AtWorkshop(x) → ¬(Learn(x, programming) ∨ Learn(x, datascience)))"
    },
    {
        "NL": "A right triangle has one angle measuring 90 degrees.",
        "FOL": "∀x (RightTriangle(x) → HasNinetyDegreeAngle(x))"
    },
    {
        "NL": "Athletes train regularly to maintain their physical fitness and improve their performance.",
        "FOL": "∀x (Athlete(x) → (TrainsRegularly(x) ∧ MaintainsPhysicalFitness(x) ∧ ImprovesPerformance(x)))"
    },
    {
        "NL": "A computer that isn't portable, has low battery life, or is expensive isn't suitable for students.",
        "FOL": "∀x (Computer(x) ∧ (¬Portable(x) ∨ LowBatteryLife(x) ∨ Expensive(x)) → ¬SuitableForStudents(x))"
    },
    {
        "NL": "A smartphone is equipped with a high-resolution display, a powerful processor, and a long-lasting battery.",
        "FOL": "∀x (Smartphone(x) → (∃y (HighResolutionDisplay(y) ∧ EquippedWith(x, y)) ∧ ∃z (PowerfulProcessor(z) ∧ EquippedWith(x, z)) ∧ ∃w (LongLastingBattery(w) ∧ EquippedWith(x, w))))"
    },
    {
        "NL": "A musician will perform the concert only if he rehearses thoroughly.",
        "FOL": "∀x (Musician(x) ∧ PerformConcert(x) → RehearseThoroughly(x))"
    },
    {
        "NL": "A cat has fur and can purr, while a snake has scales and cannot purr.",
        "FOL": "∀x (Cat(x) → HasFur(x) ∧ CanPurr(x)) ∧ ∀y (Snake(y) → HasScales(y) ∧ ¬CanPurr(y))"
    },
    {
        "NL": "A driver is driving a bus in the city.",
        "FOL": "∃x ∃y (Driver(x) ∧ Bus(y) ∧ Driving(x, y) ∧ InTheCity(x))"
    },
    {
        "NL": "A thermometer measures temperature by expanding or contracting a liquid or a gas inside it.",
        "FOL": "∀x∀y (Thermometer(x) ∧ (Expands(y) ∨ Contracts(y)) → MeasuresTemperature(x, y))"
    },
    {
        "NL": "Mountains can be covered with snow or barren rock.",
        "FOL": "∀x (Mountain(x) → (CoveredWithSnow(x) ∨ BarrenRock(x)))"
    },
    {
        "NL": "Each sportsperson who takes part in both national and international championships, unless they are a boxer, has either won a championship or has not played in state championships.",
        "FOL": "∀x (Sportsperson(x) ∧ TakesPartInNationalChampions(x) ∧ TakesPartInInternationalChampions(x) ∨ Boxer(x) → (WonChampionship(x) ∨ ¬PlayedInStateChampionships(x)))"
    },
    {
        "NL": "If a person works in the fashion industry and designs clothing and accessories, they are considered a fashion designer.",
        "FOL": "∀x (WorksInFashionIndustryAndDesignsClothingAndAccessories(x) → FashionDesigner(x))"
    },
    {
        "NL": "Algebra focuses on solving equations with unknowns, geometry deals with shapes and their properties, and calculus involves rates of change and accumulation; all three are branches of mathematics.",
        "FOL": "∀x∀y∀z (Algebra(x) ∧ Geometry(y) ∧ Calculus(z) → (SolvesEquationsWithUnknowns(x) ∧ ShapesAndProperties(y) ∧ RatesOfChangeAndAccumulation(z)) ∧ (BranchOfMathematics(x) ∧ BranchOfMathematics(y) ∧ BranchOfMathematics(z)))"
    },
    {
        "NL": "Two colors are complementary if they combine to form white light.",
        "FOL": "∀x∀y (ComplementaryColors(x, y) ↔ (Color(x) ∧ Color(y) ∧ CombineToFormWhiteLight(x, y)))"
    },
    {
        "NL": "Not all software is open-source.",
        "FOL": "¬∀x (Software(x) → OpenSource(x))"
    },
    {
        "NL": "A game that can be played by multiple players, involves strategy, and has a board with pieces is often a board game.",
        "FOL": "∀x (Game(x) ∧ Multiplayer(x) ∧ InvolvesStrategy(x) ∧ BoardWithPieces(x) → BoardGame(x))"
    },
    {
        "NL": "A robot performs a task successfully if it's programmed for that task, has enough battery, and its sensors work properly, but not if its actuators are malfunctioning.",
        "FOL": "∀x∀y (Robot(x) ∧ Task(y) → (PerformsSuccessfully(x, y) ↔ ((ProgrammedForTask(x, y) ∧ EnoughBattery(x) ∧ SensorsWork(x)) ∧ ¬MalfunctioningActuators(x))))"
    },
    {
        "NL": "All reptiles have scales and are cold-blooded.",
        "FOL": "∀x (Reptile(x) → (HasScales(x) ∧ ColdBlooded(x)))"
    },
    {
        "NL": "An author publishes a book only if the editor reviews it.",
        "FOL": "∀x ∀y (Author(x) ∧ Book(y) ∧ (Publishes(x, y) → Reviews(y, x)))"
    },
    {
        "NL": "A movie can be categorized as action, drama, or comedy based on its content and tone.",
        "FOL": "∀x (Movie(x) → (ActionContent(x) ∨ DramaContent(x) ∨ ComedyContent(x) → Categorized(x)))"
    },
    {
        "NL": "A player is skilled or unskilled.",
        "FOL": "∀x (Player(x) → (Skilled(x) ∨ Unskilled(x)))"
    },
    {
        "NL": "There is not a single pen that is blue or a pencil that is red.",
        "FOL": "¬∃x ((Blue(x) ∧ Pen(x)) ∨ (Red(x) ∧ Pencil(x)))"
    },
    {
        "NL": "A lemon tastes sour, a strawberry tastes sweet, and an olive tastes bitter.",
        "FOL": "∀x∀y∀z (Lemon(x) ∧ Strawberry(y) ∧ Olive(z) → (TastesSour(x) ⊕ (TastesSweet(y) ∨ TastesBitter(z))))"
    },
    {
        "NL": "A celestial body that orbits a star and emits light due to reflected sunlight is a planet.",
        "FOL": "∀x ∀y (CelestialBody(x) ∧ Star(y) ∧ Orbits(x, y) ∧ EmitsLight(x) ∧ ReflectedSunlight(x) → Planet(x))"
    },
    {
        "NL": "Either a shape is a triangle with three sides or a rectangle with four sides.",
        "FOL": "∀x (Shape(x) → (Triangle(x) ∧ HasThreeSides(x)) ⊕ (Rectangle(x) ∧ HasFourSides(x)))"
    },
    {
        "NL": "A book that engages the reader's interest with a captivating plot and well-developed characters is likely to be a bestseller.",
        "FOL": "∀x (Book(x) ∧ CaptivatingPlotAndWellDevelopedCharacters(x) → LikelyToBeABestseller(x))"
    },
    {
        "NL": "No director who creates sci-fi and fantasy movies, unless they have won an Oscar, has produced more than fifteen movies or has not appeared at a film festival.",
        "FOL": "¬∃x (Director(x) ∧ CreatesSciFi(x) ∧ CreatesFantasy(x) ∨ WonOscar(x) ∧ (ProducedMoreThanFifteenMovies(x) ∨ ¬AppearedAtFilmFestival(x)))"
    },
    {
        "NL": "A dessert that contains chocolate and is served cold is an ice cream.",
        "FOL": "∀x ((Dessert(x) ∧ ContainsChocolate(x) ∧ ServedCold(x)) → IceCream(x))"
    },
    {
        "NL": "Every swimmer completed at least one lap.",
        "FOL": "∀x (Swimmer(x) → ∃y (Lap(y) ∧ Completed(x, y)))"
    },
    {
        "NL": "Birds can either fly or swim.",
        "FOL": "∀x (Bird(x) → (Fly(x) ⊕ Swim(x)))"
    },
    {
        "NL": "A material is a conductor if it allows the flow of electric current with low resistance.",
        "FOL": "∀x (Material(x) ∧ AllowsElectricCurrentFlow(x) ∧ LowResistance(x) → Conductor(x))"
    },
    {
        "NL": "A computer mouse controls the cursor on a computer screen.",
        "FOL": "∀x (ComputerMouse(x) → ControlsCursor(x))"
    },
    {
        "NL": "Vehicles with only electric engines do not emit exhaust gases.",
        "FOL": "∀x (Vehicle(x) ∧ ElectricEngine(x) ∧ ¬InternalCombustionEngine(x) → ¬EmitsExhaustGases(x))"
    },
    {
        "NL": "No dogs are fat.",
        "FOL": "∀v (Dog(v) → ¬Fat(v))"
    },
    {
        "NL": "A student will pass the exam if they either study hard or are naturally talented.",
        "FOL": "∀x (Student(x) ∧ (StudyHard(x) ⊕ NaturallyTalented(x)) → PassExam(x))"
    },
    {
        "NL": "A pharmacy dispenses medication prescribed by a doctor to a patient.",
        "FOL": "∀x∀y∀z (Pharmacy(x) ∧ Doctor(y) ∧ Patient(z) ∧ PrescribesMedication(y, z) → Dispenses(x, z))"
    },
    {
        "NL": "A movie is a blockbuster if it has a high box office revenue and positive critic reviews, but it is not a blockbuster if it has a low box office revenue and negative critic reviews.",
        "FOL": "∀x (Movie(x) ∧ HighBoxOffice(x) ∧ PositiveCriticReviews(x) → Blockbuster(x)) ∧ (Movie(x) ∧ LowBoxOffice(x) ∧ NegativeCriticReviews(x) → ¬Blockbuster(x))"
    },
    {
        "NL": "A teacher is motivated if and only if they are knowledgeable and have respect.",
        "FOL": "∀x (Teacher(x) → (Motivated(x) ↔ (Knowledgeable(x) ∧ HasRespect(x))))"
    },
    {
        "NL": "Wind turbines convert wind into electricity, while solar panels use sunlight.",
        "FOL": "∀x∀y (WindTurbine(x) ∧ SolarPanel(y) → (ConvertsWindToElectricity(x) ∧ UsesSunlight(y)))"
    },
    {
        "NL": "Planets are considered terrestrial if they have a solid surface.",
        "FOL": "∀x (Planet(x) ∧ HasSolidSurface(x) → Terrestrial(x))"
    },
    {
        "NL": "A piano and a guitar are musical instruments that produce sound by striking or plucking strings.",
        "FOL": "∀x (Piano(x) ∨ Guitar(x) → (MusicalInstrument(x) ∧ (StrikesStrings(x) ⊕ PlucksStrings(x))))"
    },
    {
        "NL": "Unless a place is not America or Africa, it is a continent.",
        "FOL": "∀x ((¬America(x) ∨ ¬Africa(x)) → Continent(x))"
    },
    {
        "NL": "An employee is reading a report at his desk in the office.",
        "FOL": "∃x ∃y ∃z (Employee(x) ∧ Report(y) ∧ Desk(z) ∧ ReadingAt(x, y) ∧ At(x, z) ∧ InTheOffice(x))"
    },
    {
        "NL": "All songs are not appropriate for religious events.",
        "FOL": "¬∀x (Song(x) → AppropriateForReligiousEvents(x))"
    },
    {
        "NL": "It is not the case that something is a large square if and only if it is red.",
        "FOL": "¬∀x (Large(x) ∧ Square(x) ↔ Red(x))"
    },
    {
        "NL": "In a democratic system, citizens have the right to vote in elections.",
        "FOL": "∀x ∀y (DemocraticSystem(y) ∧ Citizen(x, y) → RightToVote(x, y))"
    },
    {
        "NL": "Staying physically active helps maintain a healthy weight, while sedentary behavior can contribute to weight gain and health issues.",
        "FOL": "∀x ∀y (PhysicallyActive(x) ∧ SedentaryBehavior(y) → (MaintainsHealthyWeight(x) ∧ ¬WeightGain(x) ∧ ¬HealthIssues(x)) ∧ (¬MaintainsHealthyWeight(y) ∧ WeightGain(y) ∧ HealthIssues(y)))"
    },
    {
        "NL": "Somebody is a diligent student, and someone is an inspiring teacher.",
        "FOL": "∃x (Diligent(x) ∧ Student(x)) ∧ ∃x (Inspiring(x) ∧ Teacher(x))"
    },
    {
        "NL": "A rock that forms from the cooling and solidification of magma or lava is identified as an igneous rock.",
        "FOL": "∀x∀y∀z (Rock(x) ∧ FormsFromCoolingAndSolidification(x, y) ∧ (Magma(y) ∨ Lava(y)) → IgneousRock(x))"
    },
    {
        "NL": "A car is expensive if it is a brand new or the price is above thirty thousand dollars.",
        "FOL": "∀x (Car(x) ∧ (BrandNew(x) ∨ PriceAboveThirtyThousand(x)) → Expensive(x))"
    },
    {
        "NL": "Innovative engineers never fail.",
        "FOL": "∀x (Engineer(x) ∧ Innovative(x) → ¬Fail(x))"
    },
    {
        "NL": "An athlete participates in football or basketball.",
        "FOL": "∀x (Athlete(x) → ParticipatesInFootball(x) ∨ ParticipatesInBasketball(x))"
    },
    {
        "NL": "A building is residential or commercial, but not both.",
        "FOL": "∀x (Building(x) → (Residential(x) ⊕ Commercial(x)))"
    },
    {
        "NL": "An apple is green if it is unripe, but it turns red when it is ripe, and some apples remain yellow when ripe.",
        "FOL": "∀x ∀y (Apple(x) ∧ Unripe(y) ∧ IsColor(x, y) → Green(x)) ∧ (Apple(x) ∧ Ripe(y) ∧ IsColor(x, y) → (Red(x) ⊕ Yellow(x)))"
    },
    {
        "NL": "A product x is a toy if it is designed for children y to play with and is made from materials such as plastic, wood, or fabric.",
        "FOL": "∀x ∀y (Product(x) ∧ DesignedForChildren(x, y) ∧ MadeFromToyMaterials(x) → Toy(x))"
    },
    {
        "NL": "A flashlight illuminates an area when its battery is charged and the switch is on.",
        "FOL": "∀x∀y∀z (Flashlight(x) ∧ BatteryCharged(x, y) ∧ SwitchOn(x, z) → IlluminatesArea(x))"
    },
    {
        "NL": "Bakers use ingredients such as flour, sugar, and eggs to make pastries.",
        "FOL": "∀x∀y∀z∀w (Baker(x) ∧ Ingredient(y) ∧ Flour(z) ∧ Sugar(w) ∧ Egg(y) → MakesPastries(x, y))"
    },
    {
        "NL": "A car is fast if and only if it is new and not damaged.",
        "FOL": "∀x (Car(x) → (Fast(x) ↔ (New(x) ∧ ¬Damaged(x))))"
    },
    {
        "NL": "A healthy meal plan includes nutrient-dense foods, balances macronutrients, and supports long-term weight management.",
        "FOL": "∀x (MealPlan(x) ∧ NutrientDenseFoods(x) ∧ BalancedMacronutrients(x) ∧ SupportsLongTermWeightManagement(x) → Healthy(x))"
    },
    {
        "NL": "A person is considered a plumber if they install, repair, and maintain plumbing systems for the distribution of water, gas, and waste disposal.",
        "FOL": "∀x (Plumber(x) ↔ (InstallsRepairsAndMaintainsPlumbingSystems(x) ∧ ForDistributionOfWaterGasAndWasteDisposal(x)))"
    },
    {
        "NL": "Antibiotics are effective against bacterial infections, while antiviral medications are used to treat viral infections.",
        "FOL": "∀x (Antibiotic(x) → EffectiveAgainstBacterialInfections(x)) ∧ ∀y (AntiviralMedication(y) → UsedToTreatViralInfections(y))"
    },
    {
        "NL": "A painting becomes famous when created by a renowned artist and exhibited in prestigious galleries or museums.",
        "FOL": "∀x∀y∀z (Painting(x) ∧ Artist(y) ∧ (Gallery(z) ∨ Museum(z)) ∧ Renowned(y) ∧ CreatedBy(x, y) ∧ ExhibitedIn(x, z) → Famous(x))"
    },
    {
        "NL": "A flight is either domestic or international, but not both, depending on the departure and destination countries.",
        "FOL": "∀x ∀y ∀z (Flight(x) ∧ Departure(x, y) ∧ Destination(x, z) → (Domestic(x) ⊕ International(x)))"
    },
    {
        "NL": "A cell phone is functional if it has a charged battery and a signal.",
        "FOL": "∀x (CellPhone(x) ∧ ChargedBattery(x) ∧ Signal(x) → Functional(x))"
    },
    {
        "NL": "If a person is employed full-time, they work at least 40 hours per week.",
        "FOL": "∀x (Person(x) ∧ EmployedFullTime(x) → WorkHoursPerWeek(x, ≥40))"
    },
    {
        "NL": "If a food is spicy, it contains either chili peppers or black pepper.",
        "FOL": "∀x (Food(x) ∧ Spicy(x) → ContainsChiliPeppers(x) ⊕ ContainsBlackPepper(x))"
    },
    {
        "NL": "A mammal gives birth to live offspring, whereas an oviparous animal lays eggs.",
        "FOL": "∀x (Mammal(x) → GivesBirth(x)) ∧ ∀y (Oviparous(y) → LaysEggs(y))"
    },
    {
        "NL": "A planet is habitable if it has liquid water and an atmosphere.",
        "FOL": "∀x (Planet(x) ∧ HasLiquidWater(x) ∧ HasAtmosphere(x) → Habitable(x))"
    },
    {
        "NL": "A person is considered an athlete if they compete in sports professionally.",
        "FOL": "∀x (CompetesInSports(x) ∧ Professional(x) → Athlete(x))"
    },
    {
        "NL": "A restaurant can serve breakfast or dinner, but not both simultaneously.",
        "FOL": "∀x (Restaurant(x) → (ServesBreakfast(x) ⊕ ServesDinner(x)))"
    },
    {
        "NL": "A museum displays three artifacts: a painting, a sculpture, and a historical document.",
        "FOL": "Museum(Museum1) ∧ DisplaysArtifact(Museum1, Painting) ∧ DisplaysArtifact(Museum1, Sculpture) ∧ DisplaysArtifact(Museum1, HistoricalDocument)"
    },
    {
        "NL": "A book becomes a bestseller if it appeals to a wide audience and receives strong marketing support.",
        "FOL": "∀x (Book(x) ∧ AppealsToWideAudience(x) ∧ StrongMarketingSupport(x) → Bestseller(x))"
    },
    {
        "NL": "An electronic device that can receive signals, process information, and display images on a screen is a television.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ReceivesSignals(x) ∧ ProcessesInformation(x) ∧ DisplaysImagesOnScreen(x) → Television(x))"
    },
    {
        "NL": "A drink can be classified as either alcoholic or non-alcoholic.",
        "FOL": "∀x (Drink(x) → (Alcoholic(x) ⊕ NonAlcoholic(x)))"
    },
    {
        "NL": "A river is a natural watercourse that flows towards a larger body of water, a lake is a large body of water surrounded by land, and a waterfall is a steep descent of water from a height.",
        "FOL": "∀x ∀y ∀z (River(x) → (NaturalWatercourse(x) ∧ FlowsTowardsLargerBodyOfWater(x))) ∧ (Lake(y) → (LargeBodyOfWater(y) ∧ SurroundedByLand(y))) ∧ (Waterfall(z) → (SteepDescentOfWater(z) ∧ FromHeight(z)))"
    },
    {
        "NL": "Cities with a high population density usually have well-developed public transportation systems and experience traffic congestion.",
        "FOL": "∀x (City(x) ∧ HighPopulationDensity(x) → (WellDevelopedPublicTransportation(x) ∧ TrafficCongestion(x)))"
    },
    {
        "NL": "All dogs are fast if not every apple is red.",
        "FOL": "¬∀x (Apple(x) → Red(x)) → ∀y (Dog(y) → Fast(y))"
    },
    {
        "NL": "A toy is electronic if it requires batteries.",
        "FOL": "∀x (Toy(x) ∧ RequiresBatteries(x) → Electronic(x))"
    },
    {
        "NL": "While oil is a non-renewable resource, solar power and wind power are renewable sources of energy.",
        "FOL": "∀x ∀y ∀z (Oil(x) → NonRenewableResource(x)) ∧ (SolarPower(y) ∧ WindPower(z) → RenewableSource(y) ∧ RenewableSource(z))"
    },
    {
        "NL": "A student studying computer science and attending MIT is a scholar.",
        "FOL": "∀x (Student(x) ∧ StudyingComputerScience(x) ∧ AttendingMIT(x) → Scholar(x))"
    },
    {
        "NL": "A stringed instrument that is played with a bow, has a hollow body, and produces sound through the vibration of its strings is a violin.",
        "FOL": "∀x (StringedInstrument(x) ∧ PlayedWithBow(x) ∧ HollowBody(x) ∧ ProducesSoundThroughStringVibration(x) → Violin(x))"
    },
    {
        "NL": "A phone rings if it receives a call and is not in silent mode.",
        "FOL": "∀x (Phone(x) ∧ ReceiveCall(x) ∧ ¬SilentMode(x) → Ring(x))"
    },
    {
        "NL": "A person is considered a dancer if they perform choreographed movements to music as a form of artistic expression.",
        "FOL": "∀x (Dancer(x) ↔ PerformsChoreographedMovements(x))"
    },
    {
        "NL": "There are engineers who are neither overworked nor underpaid.",
        "FOL": "∃x (Engineer(x) ∧ ¬(Overworked(x) ∨ Underpaid(x)))"
    },
    {
        "NL": "A person is a grandparent if they have a child who has a child.",
        "FOL": "∀x (Person(x) ∧ ∃y ∃z (Child(y, x) ∧ Child(z, y)) → Grandparent(x))"
    },
    {
        "NL": "A pharmacy dispenses prescription medications, over-the-counter drugs, and healthcare supplies to customers under the supervision of a licensed pharmacist.",
        "FOL": "∀x∀y∀z (Pharmacy(x) ∧ (PrescriptionMedication(y) ∨ OverTheCounterDrug(y) ∨ HealthcareSupply(y)) ∧ LicensedPharmacist(z) → (DispensesToCustomers(x, y) ∧ SupervisedBy(z)))"
    },
    {
        "NL": "A dog barks at a cat only if that cat is big.",
        "FOL": "∀x (Dog(x) → ∀y (Cat(y) ∧ BarksAt(x, y) → Big(y)))"
    },
    {
        "NL": "A reptile is cold-blooded.",
        "FOL": "∀x (Reptile(x) → ColdBlooded(x))"
    },
    {
        "NL": "An organism is a bird if it has feathers, can fly or glide, and lays eggs with hard shells.",
        "FOL": "∀x (Organism(x) ∧ HasFeathers(x) ∧ (CanFly(x) ∨ CanGlide(x)) ∧ LaysEggsWithHardShells(x) → Bird(x))"
    },
    {
        "NL": "A smartphone with a long battery life and a fast processor satisfies users.",
        "FOL": "∀x (Smartphone(x) ∧ LongBatteryLife(x) ∧ FastProcessor(x) → SatisfiesUsers(x))"
    },
    {
        "NL": "An animal is classified as a herbivore if it primarily consumes plant material and has a digestive system adapted for processing plant matter.",
        "FOL": "∀x (Animal(x) ∧ PrimarilyConsumesPlantMaterial(x) ∧ DigestiveSystemAdaptedForProcessingPlantMatter(x) → Herbivore(x))"
    },
    {
        "NL": "A painter will accept the project only if she has her tools.",
        "FOL": "∀x (Painter(x) ∧ AcceptProject(x) → HaveTools(x))"
    },
    {
        "NL": "A computer program that can learn from data, make predictions, and improve its performance over time is classified as a machine learning algorithm.",
        "FOL": "∀x (ComputerProgram(x) ∧ LearnsFromData(x) ∧ MakesPredictions(x) ∧ ImprovesPerformanceOverTime(x) → MachineLearningAlgorithm(x))"
    },
    {
        "NL": "A person can be considered bilingual if they can fluently speak and understand two languages.",
        "FOL": "∀x (Person(x) ∧ FluentlySpeaksTwoLanguages(x) ∧ UnderstandsTwoLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "An event is a holiday if it is a public celebration or observance.",
        "FOL": "∀x∀y (Event(x) ∧ PublicCelebrationOrObservance(x, y) → Holiday(x))"
    },
    {
        "NL": "A dentist is in the kitchen with a delicious cake.",
        "FOL": "∃x (Dentist(x) ∧ IntheKitchen(x) ∧ WithDeliciousCake(x))"
    },
    {
        "NL": "A bird that can mimic human speech and is often kept as a pet is a parrot.",
        "FOL": "∀x (Bird(x) ∧ MimicHumanSpeech(x) ∧ KeptAsPet(x) → Parrot(x))"
    },
    {
        "NL": "An architect designs buildings and structures, considering functionality and aesthetics.",
        "FOL": "∀x∀y (Architect(x) ∧ Building(y) ∨ Structure(y) → DesignsConsideringFunctionalityAndAesthetics(x, y))"
    },
    {
        "NL": "A mammal has hair or fur.",
        "FOL": "∀x (Mammal(x) → (Hair(x) ∨ Fur(x)))"
    },
    {
        "NL": "Reptiles, such as snakes and lizards, have scaly skin and are ectothermic, relying on external heat sources to regulate their body temperature.",
        "FOL": "∀x (Reptile(x) ∧ (Snake(x) ∨ Lizard(x)) → (HasScalySkin(x) ∧ Ectothermic(x) ∧ ReliesOnExternalHeatSources(x)))"
    },
    {
        "NL": "A computer system includes hardware components such as a central processing unit (CPU), a graphics processing unit (GPU), and a memory module, as well as software components like an operating system, applications, and drivers.",
        "FOL": "∀x∀y∀z (ComputerSystem(x) ∧ (Hardware(y) ∨ Software(y)) ∧ (CPU(z) ∨ GPU(z) ∨ MemoryModule(z) ∨ OperatingSystem(z) ∨ Applications(z) ∨ Drivers(z)) → IncludesComponent(x, y, z))"
    },
    {
        "NL": "All mammals give birth to live offspring, except for monotremes, which lay eggs.",
        "FOL": "∀x (Mammal(x) → (¬Monotreme(x) → LiveOffspring(x)) ∧ (Monotreme(x) → LaysEggs(x)))"
    },
    {
        "NL": "It is not the case that all flowers are beautiful if and only if they are colourful.",
        "FOL": "¬∀x (Flower(x) ∧ Beautiful(x) ↔ Colourful(x))"
    },
    {
        "NL": "A spacecraft is suitable for long-duration missions when it has life support systems and radiation protection.",
        "FOL": "∀x ∀y (Spacecraft(x) ∧ LifeSupportSystems(y) ∧ RadiationProtection(x) → SuitableForLongDurationMissions(x))"
    },
    {
        "NL": "A vehicle is identified as a car if it has wheels, commonly used for transportation, and may contain seats, a steering wheel, or engine.",
        "FOL": "∀x (Vehicle(x) → HasWheels(x) ∧ UsedForTransportation(x) ∧ (ContainsSeats(x) ∨ ContainsSteeringWheel(x) ∨ ContainsEngine(x)) → Car(x))"
    },
    {
        "NL": "A product is innovative if it solves a problem, improves an existing solution, or introduces new technology.",
        "FOL": "∀x (Product(x) ∧ (SolvesProblem(x) ∨ ImprovesExistingSolution(x) ∨ IntroducesNewTechnology(x)) → Innovative(x))"
    },
    {
        "NL": "A novel is interesting if it has a fascinating storyline and relatable characters.",
        "FOL": "∀x (Novel(x) ∧ HasFascinatingStoryline(x) ∧ HasRelatableCharacters(x) → Interesting(x))"
    },
    {
        "NL": "In a science competition, teams that collaborate effectively and present innovative ideas are more likely to win awards.",
        "FOL": "∀x∀y∀z (ScienceCompetition(x) ∧ Team(y) ∧ ParticipatesIn(y, x) ∧ CollaboratesEffectively(y) ∧ PresentsInnovativeIdeas(z, y) → MoreLikelyToWinAwards(y, x))"
    },
    {
        "NL": "A basketball team wins a game if they score more points than their opponent and commit fewer fouls.",
        "FOL": "∀x ∀y ∀z (BasketballTeam(x) ∧ Game(y) ∧ Opponent(z, x) → (Wins(x, y) ↔ (ScoresMorePoints(x, y) ∧ CommitsFewerFouls(x, z))))"
    },
    {
        "NL": "A car is red if and only if it is not compact, and it connects to a black or white object.",
        "FOL": "∀x (Car(x) → ((Red(x) ↔ ¬Compact(x)) ∧ ∃y (ConnectsTo(x, y) → (Black(y) ∨ White(y)))))"
    },
    {
        "NL": "Roses are red, violets are blue, and sunflowers are yellow.",
        "FOL": "∀x (Rose(x) → Red(x)) ∧ ∀y (Violet(y) → Blue(y)) ∧ ∀z (Sunflower(z) → Yellow(z))"
    },
    {
        "NL": "A smartphone can be connected to Wi-Fi or use mobile data to access the internet, but not both at the same time.",
        "FOL": "∀x (Smartphone(x) → (ConnectedToWiFi(x) ⊕ UsesMobileData(x)))"
    },
    {
        "NL": "An art gallery is inspirational when it showcases thought-provoking artworks and supports emerging artists.",
        "FOL": "∀x ∀y (ArtGallery(x) ∧ ThoughtProvokingArtworks(y) ∧ SupportsEmergingArtists(x) → Inspirational(x))"
    },
    {
        "NL": "A musical instrument that has strings and is played by plucking them is a stringed instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ PlayedByPlucking(x) → StringedInstrument(x))"
    },
    {
        "NL": "An article that is well-researched and unbiased attracts more readers and generates discussions.",
        "FOL": "∀x∀y (Article(x) ∧ WellResearched(x) ∧ Unbiased(x) → (AttractsMoreReaders(y, x) ∧ GeneratesDiscussions(x)))"
    },
    {
        "NL": "A cell phone charges if connected to a power source and the battery is not full.",
        "FOL": "∀x (CellPhone(x) → (Charges(x) ↔ (ConnectedToPowerSource(x) ∧ ¬BatteryFull(x))))"
    },
    {
        "NL": "If a battery is rechargeable, it can be recharged multiple times and is often used in portable electronics.",
        "FOL": "∀x (Battery(x) ∧ Rechargeable(x) → CanBeRechargedMultipleTimes(x) ∧ OftenUsedInPortableElectronics(x))"
    },
    {
        "NL": "Only one of two artists, either John or Jane, painted the artwork, but it is not known which one.",
        "FOL": "∀x (Artwork(x) ∧ (PaintedByJohn(x) ⊕ PaintedByJane(x)))"
    },
    {
        "NL": "A substance is either a liquid or a solid, but not both.",
        "FOL": "∀x (Substance(x) → (Liquid(x) ⊕ Solid(x)))"
    },
    {
        "NL": "An athlete does power-lifting or rowing.",
        "FOL": "∀x (Athlete(x) → (DoesPowerLifting(x) ∨ DoesRowing(x)))"
    },
    {
        "NL": "All cats that are either black or white scare either a large dog or a small mouse.",
        "FOL": "∀x ((Cat(x) ∧ (Black(x) ∨ White(x))) → ∃y ((Large(y) ∧ Dog(y)) ∨ (Small(y) ∧ Mouse(y)) ∧ Scare(x, y)))"
    },
    {
        "NL": "A sailboat moves using wind power.",
        "FOL": "∀x (Sailboat(x) → MovesUsingWindPower(x))"
    },
    {
        "NL": "A vaccine stimulates the immune system to produce an immune response, while an antibiotic helps fight bacterial infections.",
        "FOL": "∀x (Vaccine(x) → StimulatesImmuneSystem(x)) ∧ ∀y (Antibiotic(y) → FightsBacterialInfections(y))"
    },
    {
        "NL": "A park is open to the public if it has adequate security and is well-maintained.",
        "FOL": "∀x (Park(x) → (OpenToPublic(x) ↔ (AdequateSecurity(x) ∧ WellMaintained(x))))"
    },
    {
        "NL": "An event that is well-organized and has engaging activities attracts attendees.",
        "FOL": "∀x (Event(x) ∧ WellOrganized(x) ∧ EngagingActivities(x) → AttractsAttendees(x))"
    },
    {
        "NL": "A building has different types of rooms, such as bedrooms, bathrooms, and kitchens.",
        "FOL": "∀x (Building(x) → (∃y (Room(y) ∧ (Bedroom(y) ∨ Bathroom(y) ∨ Kitchen(y))) ∧ PartOf(y, x)))"
    },
    {
        "NL": "An artwork is classified as a sculpture if it is three-dimensional and created by shaping materials such as stone, metal, or wood.",
        "FOL": "∀x (Artwork(x) ∧ ThreeDimensional(x) ∧ (ShapedFromStone(x) ∨ ShapedFromMetal(x) ∨ ShapedFromWood(x)) → Sculpture(x))"
    },
    {
        "NL": "A rose is a flowering plant with fragrant, colorful blossoms, often cultivated for ornamental purposes or as a symbol of love.",
        "FOL": "∀x (Rose(x) → (FloweringPlant(x) ∧ FragrantBlossoms(x) ∧ ColorfulBlossoms(x) ∧ CultivatedForOrnamentalPurposes(x) ∧ SymbolOfLove(x)))"
    },
    {
        "NL": "There are artists who are neither undisciplined nor careless.",
        "FOL": "∃x (Artist(x) ∧ ¬(Undisciplined(x) ∨ Careless(x)))"
    },
    {
        "NL": "A library contains books.",
        "FOL": "∀x ∃y (Library(x) → Contains(x, y))"
    },
    {
        "NL": "A software developer who specializes in cybersecurity creates secure applications by using encryption and implementing secure coding practices.",
        "FOL": "∀x ∀y (SoftwareDeveloper(x) ∧ SpecializesIn(x, Cybersecurity) ∧ Application(y) ∧ DevelopedBy(x, y) → (UsesEncryption(y) ∧ SecureCodingPractices(y)))"
    },
    {
        "NL": "Every green box contains some items that only contain red items.",
        "FOL": "∀x (Green(x) ∧ Box(x) → ∃y (Contains(x, y) ∧ ∀z (Contains(y, z) → Red(z) ∧ Item(z))))"
    },
    {
        "NL": "A hawk catches small birds to eat, while a hyena scavenges the leftover of big mammals.",
        "FOL": "∀x ∀y (Hawk(x) ∧ SmallBird(y) → CatchesToEat(x, y)) ∧ ∀z ∀w (Hyena(z) ∧ BigMammal(w) → ScavengesLeftoverOf(z, w))"
    },
    {
        "NL": "A beehive is a structure built by bees, typically made of wax, which houses the colony and stores honey and pollen.",
        "FOL": "∀x∀y∀z (Beehive(x) → (StructureBuiltByBees(x) ∧ MadeOfWax(x) ∧ HousesColony(x, y) ∧ StoresHoneyAndPollen(x, z)))"
    },
    {
        "NL": "Any teacher who educates a student will be educated by a professor.",
        "FOL": "∀x ∃y (Teacher(x) ∧ Student(y) ∧ Educate(x, y) → ∃z (Professor(z) ∧ WillEducate(z, x)))"
    },
    {
        "NL": "A chef can be vegan or love baking pies, but not both.",
        "FOL": "∀x (Vegan(x) ⊕ LoveBakingPies(x))"
    },
    {
        "NL": "Candles and lamps produce light when they are lit, but candles use wax as fuel while lamps use electricity.",
        "FOL": "∀x ∀y (Candle(x) ∧ Lamp(y) → ((ProducesLight(x) ∧ UsesWaxAsFuel(x)) ⊕ (ProducesLight(y) ∧ UsesElectricity(y))))"
    },
    {
        "NL": "A refrigerator maintains a low temperature to preserve food.",
        "FOL": "∀x (Refrigerator(x) → (MaintainsLowTemperature(x) ∧ PreservesFood(x)))"
    },
    {
        "NL": "A pen can write in ink or graphite.",
        "FOL": "∀x (Pen(x) → (WritesInInk(x) ∨ WritesInGraphite(x)))"
    },
    {
        "NL": "A leap year has 366 days and occurs every four years.",
        "FOL": "∀x (LeapYear(x) → (HasDays(x, 366) ∧ OccursEveryFourYears(x)))"
    },
    {
        "NL": "Cows are mammals that have horns and chew cud.",
        "FOL": "∀x (Cow(x) → Mammal(x) ∧ HasHorns(x) ∧ ChewCud(x))"
    },
    {
        "NL": "An article of clothing can cover the torso, legs, or feet, but not more than one body part.",
        "FOL": "∀x (Clothing(x) → ((CoversTorso(x) ∧ ¬(CoversLegs(x) ∨ CoversFeet(x))) ∨ (CoversLegs(x) ∧ ¬(CoversTorso(x) ∨ CoversFeet(x))) ∨ (CoversFeet(x) ∧ ¬(CoversTorso(x) ∨ CoversLegs(x)))))"
    },
    {
        "NL": "A restaurant serves dishes from different cuisines, such as Italian, Mexican, and Thai, and offers various dietary options, like vegetarian, vegan, and gluten-free.",
        "FOL": "∀x∀y∀z (Restaurant(x) ∧ (Italian(y) ∨ Mexican(y) ∨ Thai(y)) ∧ (Vegetarian(z) ∨ Vegan(z) ∨ GlutenFree(z)) → ServesDishesAndOffersDietaryOptions(x, y, z))"
    },
    {
        "NL": "Every singer doesn't sing Jazz, but only singers sing Jazz.",
        "FOL": "¬∀x (Singer(x) → Jazz(x)) ∧ ∀y (Jazz(y) → Singer(y))"
    },
    {
        "NL": "A computer uses electricity, a car uses gas, but a book does not use electricity.",
        "FOL": "∀x (Computer(x) → UsesElectricity(x)) ∧ ∀y (Car(y) → UsesGas(y)) ∧ ∀z (Book(z) → ¬UsesElectricity(z))"
    },
    {
        "NL": "Glasses can correct vision problems, such as nearsightedness or farsightedness.",
        "FOL": "∀x (Glasses(x) → (CorrectsNearsightedness(x) ∨ CorrectsFarsightedness(x)))"
    },
    {
        "NL": "No book is both interesting and unreadable.",
        "FOL": "¬∃x (Book(x) ∧ Interesting(x) ∧ Unreadable(x))"
    },
    {
        "NL": "A company is considered environmentally friendly if it reduces waste and uses renewable energy sources for its operations.",
        "FOL": "∀x (Company(x) ∧ EnvironmentallyFriendly(x) ↔ (ReducesWaste(x) ∧ UsesRenewableEnergySources(x, y)))"
    },
    {
        "NL": "A tree provides shade when it has a large canopy, while a parasol provides shade when it is open and positioned to block sunlight.",
        "FOL": "∀x ∀y (Tree(x) ∧ LargeCanopy(x) → ProvidesShade(x, y)) ∧ ∀z ∀w (Parasol(z) ∧ Open(z) ∧ PositionedToBlockSunlight(z) → ProvidesShade(z, w))"
    },
    {
        "NL": "During winter, lakes may freeze, making it possible for people to ice skate on them.",
        "FOL": "∀x (Winter(x) ∧ Lake(y) ∧ Freezes(y) → (∃z (Person(z) ∧ IceSkates(z, y))))"
    },
    {
        "NL": "A building is earthquake-resistant if it has a sturdy foundation, flexible structural components, and is built with proper materials.",
        "FOL": "∀x (Building(x) → (EarthquakeResistant(x) ↔ (SturdyFoundation(x) ∧ FlexibleStructure(x) ∧ ProperMaterials(x))))"
    },
    {
        "NL": "Derek hikes mountains or Derek is a pilot.",
        "FOL": "HikeMountains(derek) ∨ Pilot(derek)"
    },
    {
        "NL": "A place is considered a theater if it hosts live performances, such as plays and concerts.",
        "FOL": "∀x (Theater(x) ↔ HostsLivePerformances(x))"
    },
    {
        "NL": "An iceberg consists of frozen freshwater and floats on the ocean.",
        "FOL": "∀x (Iceberg(x) → (FrozenFreshwater(x) ∧ FloatsOnOcean(x)))"
    },
    {
        "NL": "No student is always punctual.",
        "FOL": "¬∀x (Student(x) → Punctual(x))"
    },
    {
        "NL": "No dog chases all the cats.",
        "FOL": "¬∃x (Dog(x) → ∀y (Cat(y) → Chases(x, y)))"
    },
    {
        "NL": "If a person is a doctor, they diagnose and treat illnesses.",
        "FOL": "∀x (Doctor(x) → DiagnosesAndTreatsIllnesses(x))"
    },
    {
        "NL": "A plant x thrives in soil type y when the soil provides the necessary nutrients and moisture content for healthy growth.",
        "FOL": "∀x ∀y (Plant(x) ∧ SoilType(y) ∧ ProvidesNutrients(x, y) ∧ MoistureContent(x, y) → ThrivesIn(x, y))"
    },
    {
        "NL": "An electronic device is either on or off, but not in both states at the same time.",
        "FOL": "∀x (ElectronicDevice(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A person who practices a skilled trade, especially one that involves making things by hand, is an artisan.",
        "FOL": "∀x (Person(x) ∧ PracticesSkilledTrade(x) ∧ InvolvesMakingThingsByHand(x) → Artisan(x))"
    },
    {
        "NL": "In a neural network, input data is processed through layers of interconnected neurons, with each neuron applying a weighted sum and activation function to produce an output.",
        "FOL": "∀x∀y∀z (NeuralNetwork(x) ∧ InputData(y) ∧ Neuron(z) → (ProcessedThroughLayers(x, y) → (InterconnectedNeurons(x, z) ∧ AppliesWeightedSumAndActivationFunction(z))))"
    },
    {
        "NL": "No chef has cooked every recipe in the cookbook.",
        "FOL": "¬∃x (Chef(x) ∧ ∀y (Recipe(y) ∧ InCookbook(y) → Cooked(x,y)))"
    },
    {
        "NL": "A camera takes photos, but it can't record videos unless it has a video mode.",
        "FOL": "∀x (Camera(x) → (TakePhotos(x) ∧ (¬RecordVideos(x) ∨ HasVideoMode(x))))"
    },
    {
        "NL": "A piece of clothing can be casual, formal, or athletic.",
        "FOL": "∀x (Clothing(x) → (Casual(x) ∨ Formal(x) ∨ Athletic(x)))"
    },
    {
        "NL": "Plants produce oxygen through photosynthesis and take in carbon dioxide.",
        "FOL": "∀x (Plant(x) → (ProducesOxygen(x) → Photosynthesis(x)) ∧ TakesInCarbonDioxide(x))"
    },
    {
        "NL": "A food item that is high in protein and low in fat is considered a healthy option for muscle building.",
        "FOL": "∀x∀y (FoodItem(x) ∧ HighInProtein(x) ∧ LowInFat(x) → HealthyOptionForMuscleBuilding(x, y))"
    },
    {
        "NL": "A valid email address must have a username, an \"@\" symbol, and a domain name.",
        "FOL": "∀x (ValidEmailAddress(x) → (∃y∃z (Username(y) ∧ DomainName(z) ∧ HasAtSymbol(x) ∧ HasUsername(x, y) ∧ HasDomainName(x, z))))"
    },
    {
        "NL": "All roses are flowers, but not every flower is a rose.",
        "FOL": "∀x (Rose(x) → Flower(x)) ∧ ¬∀x (Flower(x) → Rose(x))"
    },
    {
        "NL": "A tree can grow and produce oxygen.",
        "FOL": "∀x (Tree(x) → (CanGrow(x) ∧ CanProduceOxygen(x)))"
    },
    {
        "NL": "An object is considered heavy if it weighs more than 50 kilograms.",
        "FOL": "∀x (WeighsMoreThan50Kg(x) → Heavy(x))"
    },
    {
        "NL": "Some lakes are both freshwater and home to diverse fish species.",
        "FOL": "∃x (Lake(x) ∧ Freshwater(x) ∧ HomeToDiverseFishSpecies(x))"
    },
    {
        "NL": "A bird has feathers, a beak, and wings, is capable of flight or is flightless, and can be found in habitats such as forests, grasslands, or wetlands.",
        "FOL": "∀x (Bird(x) → (Feathers(x) ∧ Beak(x) ∧ Wings(x) ∧ (CapableOfFlight(x) ∨ Flightless(x)) ∧ (ForestHabitat(x) ∨ GrasslandHabitat(x) ∨ WetlandHabitat(x))))"
    },
    {
        "NL": "An energy source that is renewable, originates from the sun, and can be converted into electricity or heat is solar energy.",
        "FOL": "∀x (EnergySource(x) ∧ Renewable(x) ∧ OriginatesFromSun(x) ∧ (CanBeConvertedToElectricity(x) ∨ CanBeConvertedToHeat(x)) → SolarEnergy(x))"
    },
    {
        "NL": "A building is energy efficient if it uses solar panels, has proper insulation, and utilizes energy-saving appliances.",
        "FOL": "∀x ∀y ∀z (Building(x) ∧ UsesSolarPanels(x, y) ∧ ProperInsulation(x, z) ∧ UtilizesEnergySavingAppliances(x) → EnergyEfficient(x))"
    },
    {
        "NL": "Mammals give birth to live offspring and feed them with milk.",
        "FOL": "∀x (Mammal(x) → (∃y (GiveBirthToLiveOffspring(x, y) ∧ FeedWithMilk(x, y))))"
    },
    {
        "NL": "An airplane takes off when it reaches a sufficient speed on the runway and generates enough lift.",
        "FOL": "∀x (Airplane(x) → (TakesOff(x) ↔ (SufficientSpeed(x) ∧ GeneratesLift(x))))"
    },
    {
        "NL": "All crustaceans have a hard exoskeleton.",
        "FOL": "∀x (Crustacean(x) → HasHardExoskeleton(x))"
    },
    {
        "NL": "No fish can survive without water.",
        "FOL": "∀x (Fish(x) → ¬SurvivesWithoutWater(x))"
    },
    {
        "NL": "A person is considered a journalist if they gather, assess, and present news and information to the public.",
        "FOL": "∀x (Person(x) ∧ GathersNews(x) ∧ AssessesNews(x) ∧ PresentsNewsAndInformationToPublic(x) → Journalist(x))"
    },
    {
        "NL": "Whales live in the ocean, eagles soar in the sky, and rabbits burrow in the ground.",
        "FOL": "∀x (Whale(x) → LivesInOcean(x)) ∧ ∀y (Eagle(y) → SoarsInSky(y)) ∧ ∀z (Rabbit(z) → BurrowsInGround(z))"
    },
    {
        "NL": "Some movies are exciting, and some are not.",
        "FOL": "∃x (Movie(x) ∧ Exciting(x)) ∧ ∃x (Movie(x) ∧ ¬Exciting(x))"
    },
    {
        "NL": "Every recipe is either easy or difficult.",
        "FOL": "∀x (Recipe(x) → (Easy(x) ∨ Difficult(x)))"
    },
    {
        "NL": "Not every movie is thrilling.",
        "FOL": "¬∀x (Movie(x) → Thrilling(x))"
    },
    {
        "NL": "An animal is a mammal if and only if it has fur and gives live birth.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ↔ (HasFur(x) ∧ GivesLiveBirth(x))))"
    },
    {
        "NL": "Predatory fish hunt smaller fish, while herbivorous fish consume aquatic plants.",
        "FOL": "∀x∀y∀z (Fish(x) ∧ Fish(y) ∧ AquaticPlant(z) ∧ Predatory(x) → (Hunts(x, y) ∧ ¬Consumes(x, z))) ∧ (Herbivorous(x) → (Consumes(x, z) ∧ ¬Hunts(x, y)))"
    },
    {
        "NL": "Each programmer can code, but not everyone who can code is a programmer.",
        "FOL": "∀x (Programmer(x) → CanCode(x)) ∧ ¬∀x (CanCode(x) → Programmer(x))"
    },
    {
        "NL": "A business is successful when it generates profit and has a growing customer base.",
        "FOL": "∀x (Business(x) ∧ GeneratesProfit(x) ∧ GrowingCustomerBase(x) → Successful(x))"
    },
    {
        "NL": "Unless a place is both quiet and dark, it is not a library.",
        "FOL": "∀x (¬(Quiet(x) ∧ Dark(x)) → ¬Library(x))"
    },
    {
        "NL": "A student is considered diligent if they consistently complete their assignments on time and actively participate in class.",
        "FOL": "∀x (Student(x) ∧ Diligent(x) ↔ (CompletesAssignmentsOnTime(x) ∧ ActivelyParticipates(x)))"
    },
    {
        "NL": "A person is fit if they do Yoga or Swimming, but not both.",
        "FOL": "∀x (Person(x) → (Fit(x) → (DoYoga(x) ⊕ DoSwimming(x))))"
    },
    {
        "NL": "A scientific theory is widely accepted when it has undergone rigorous testing, has a large body of supporting evidence, and is consistent with other well-established theories.",
        "FOL": "∀x ∀y ∀z (ScientificTheory(x) ∧ RigorousTesting(x, y) ∧ LargeBodyOfSupportingEvidence(x, z) ∧ ConsistentWithOtherTheories(x) → WidelyAccepted(x))"
    },
    {
        "NL": "A fruit is either an apple or an orange if it is red or orange, respectively.",
        "FOL": "∀x (Fruit(x) ∧ (Red(x) ∨ Orange(x)) → (Apple(x) ⊕ Orange(x)))"
    },
    {
        "NL": "A medication is effective if it alleviates symptoms and has minimal side effects.",
        "FOL": "∀x (Medication(x) ∧ AlleviatesSymptoms(x) ∧ MinimalSideEffects(x) → Effective(x))"
    },
    {
        "NL": "Several books are old and valuable.",
        "FOL": "∃x (Book(x) ∧ Old(x) ∧ Valuable(x))"
    },
    {
        "NL": "No ovals are small.",
        "FOL": "∀x (Oval(x) → ¬Small(x))"
    },
    {
        "NL": "No fruit is a meat.",
        "FOL": "¬∃x (Fruit(x) ∧ Meat(x))"
    },
    {
        "NL": "A dish is delicious if it has well-balanced flavors and appetizing presentation.",
        "FOL": "∀x (Dish(x) ∧ HasWellBalancedFlavors(x) ∧ HasAppetizingPresentation(x) → Delicious(x))"
    },
    {
        "NL": "A movie can be a drama, a comedy, or a thriller, but not a combination of these genres.",
        "FOL": "∀x (Movie(x) → (Drama(x) ⊕ Comedy(x) ⊕ Thriller(x)))"
    },
    {
        "NL": "A locked door prevents unauthorized entry.",
        "FOL": "∀x (Door(x) ∧ Locked(x) → PreventsUnauthorizedEntry(x))"
    },
    {
        "NL": "All mammals are warm-blooded and have hair or fur on their bodies.",
        "FOL": "∀x (Mammal(x) → (WarmBlooded(x) ∧ (Hair(x) ∨ Fur(x))))"
    },
    {
        "NL": "A book is a bestseller if it has sold more than one million copies and received positive reviews.",
        "FOL": "∀x (Book(x) → (Bestseller(x) ↔ (SoldCopies(x, Million) ∧ PositiveReviews(x))))"
    },
    {
        "NL": "Frogs are amphibians that live on land and water, while snakes are reptiles that live on land.",
        "FOL": "∀x ∀y (Frog(x) ∧ Snake(y) → (Amphibian(x) ∧ LivesOnLand(x) ∧ LivesInWater(x) ∧ Reptile(y) ∧ LivesOnLand(y)))"
    },
    {
        "NL": "A ship can traverse oceans, seas, or large lakes, but not rivers or small lakes.",
        "FOL": "∀x (Ship(x) ∧ (Ocean(x) ∨ Sea(x) ∨ LargeLake(x)) ∧ ¬River(x) ∧ ¬SmallLake(x) → CanTraverse(x))"
    },
    {
        "NL": "A circle is not blue and does not point to any green object.",
        "FOL": "∀x (Circle(x) → (¬Blue(x) ∧ ¬∃y (Green(y) ∧ PointsTo(x, y))))"
    },
    {
        "NL": "A device is considered wireless if it can transmit information without the use of physical wires or cables.",
        "FOL": "∀x (Device(x) ∧ CanTransmitInformationWithoutWiresOrCables(x) → Wireless(x))"
    },
    {
        "NL": "A solid substance that conducts electricity well and is malleable and ductile is a metal.",
        "FOL": "∀x ((SolidSubstance(x) ∧ ConductsElectricityWell(x) ∧ Malleable(x) ∧ Ductile(x)) → Metal(x))"
    },
    {
        "NL": "A location with a high population density and significant economic activity is considered an urban area.",
        "FOL": "∀x (Location(x) ∧ HighPopulationDensity(x) ∧ SignificantEconomicActivity(x) → UrbanArea(x))"
    },
    {
        "NL": "A person is considered a photographer if they take and edit photographs professionally.",
        "FOL": "∀x (Person(x) ∧ TakesAndEditsPhotographs(x) ∧ Professionally(x) → Photographer(x))"
    },
    {
        "NL": "A scientist who has inspired a fellow without any funding, either has made more than two discoveries or reviews all lab assistants.",
        "FOL": "∀x (Scientist(x) ∧ ∃y (Fellow(y) ∧ ¬HasFunding(y) ∧ Inspired(x, y)) → (MadeMoreThanTwoDiscoveries(x) ∨ ∀z (LabAssistant(z) → Reviews(x, z))))"
    },
    {
        "NL": "A bird is a migratory species if it travels long distances seasonally, has a specific destination, and follows established routes.",
        "FOL": "∀x ∀y ∀z (MigratorySpecies(x) → (Bird(x) ∧ TravelsLongDistances(x, y) ∧ Seasonally(y) ∧ SpecificDestination(x, z) ∧ FollowsEstablishedRoutes(x, z)))"
    },
    {
        "NL": "Medicine helps alleviate symptoms of illness.",
        "FOL": "∀x ∀y (Medicine(x) ∧ Illness(y) → AlleviatesSymptoms(x, y))"
    },
    {
        "NL": "A national park protects wildlife, preserves natural habitats, and provides opportunities for outdoor recreation.",
        "FOL": "∀x (NationalPark(x) → (ProtectsWildlife(x) ∧ PreservesNaturalHabitats(x) ∧ ProvidesOutdoorRecreation(x)))"
    },
    {
        "NL": "Every red apple is juicy.",
        "FOL": "∀x (RedApple(x) → Juicy(x))"
    },
    {
        "NL": "A drink is considered an alcoholic beverage if it contains alcohol.",
        "FOL": "∀x (Drink(x) ∧ ContainsAlcohol(x) → AlcoholicBeverage(x))"
    },
    {
        "NL": "A dog wags its tail when it's happy.",
        "FOL": "∀x (Dog(x) ∧ Happy(x) → WagsTail(x))"
    },
    {
        "NL": "A medical treatment is effective in curing an illness if it eliminates the symptoms and prevents the illness from returning.",
        "FOL": "∀t ∀i (MedicalTreatment(t) ∧ Illness(i) → (EffectiveInCuring(t, i) ↔ (EliminatesSymptoms(t, i) ∧ PreventsReturn(i))))"
    },
    {
        "NL": "An artist creates paintings, sculptures, or digital art, but not all three simultaneously.",
        "FOL": "∀x (Artist(x) → ((CreatesPaintings(x) ∨ CreatesSculptures(x) ∨ CreatesDigitalArt(x)) ∧ ¬(CreatesPaintings(x) ∧ CreatesSculptures(x) ∧ CreatesDigitalArt(x))))"
    },
    {
        "NL": "A television show can be either live or recorded.",
        "FOL": "∀x (TelevisionShow(x) → (Live(x) ⊕ Recorded(x)))"
    },
    {
        "NL": "There is a chef who likes no ingredient he used.",
        "FOL": "∃x (Chef(x) ∧ ∀y (Ingredient(y) ∧ Used(x, y) → ¬Like(x, y)))"
    },
    {
        "NL": "An ecosystem is considered healthy if it supports a diverse range of species, maintains a stable environment, and has a sustainable resource base.",
        "FOL": "∀x ∀y ∀z (Healthy(x) → (Ecosystem(x) ∧ DiverseRangeOfSpecies(x, y) ∧ StableEnvironment(x, y) ∧ SustainableResourceBase(x, z)))"
    },
    {
        "NL": "A substance is acidic if its pH is less than 7.",
        "FOL": "∀x∀y (Substance(x) ∧ pH(x, y) ∧ LessThan(y, 7) → Acidic(x))"
    },
    {
        "NL": "A meal can either be a spicy feast with saucy dishes and exotic flavors, or a comfort food spread with homestyle recipes and familiar tastes.",
        "FOL": "∀x (Meal(x) → ((SpicyFeast(x) ∧ SaucyDishes(x) ∧ ExoticFlavors(x)) ⊕ (ComfortFoodSpread(x) ∧ HomestyleRecipes(x) ∧ FamiliarTastes(x))))"
    },
    {
        "NL": "Volcanic eruptions release lava and ash, which can lead to the formation of new landmasses over time.",
        "FOL": "∀x ∀y ∀z (VolcanicEruption(x) ∧ Lava(l) ∧ Ash(a) ∧ NewLandmass(y) ∧ Time(z) → ReleasesAndForms(x, l, a, y, z))"
    },
    {
        "NL": "Some teachers are dancers.",
        "FOL": "∃x (Teacher(x) ∧ Dancer(x))"
    },
    {
        "NL": "An umbrella is effective when it is open and not broken.",
        "FOL": "∀x (Umbrella(x) ∧ Open(x) ∧ ¬Broken(x) → Effective(x))"
    },
    {
        "NL": "Solar energy is harnessed from the sun, while wind energy is derived from the movement of air currents.",
        "FOL": "∀x∀y (SolarEnergy(x) ∧ WindEnergy(y) → (HarnessedFromSun(x) ∧ DerivedFromAirCurrents(y)))"
    },
    {
        "NL": "A triangle is not yellow and does not touch any cyan items.",
        "FOL": "∀x (Triangle(x) → (¬Yellow(x) ∧ ¬∃y (Cyan(y) ∧ Touches(x, y))))"
    },
    {
        "NL": "There is no square that points to all dull stars.",
        "FOL": "¬∃x (Square(x) ∧ ∀y (Dull(y) ∧ Star(y) → PointsTo(x, y)))"
    },
    {
        "NL": "A scientist is respected if they publish influential research and demonstrate professional ethics.",
        "FOL": "∀x (Scientist(x) → (Respected(x) ↔ (InfluentialResearch(x) ∧ ProfessionalEthics(x))))"
    },
    {
        "NL": "A job is considered high-paying if its salary is above the average income for similar positions.",
        "FOL": "∀x (Job(x) ∧ SalaryAboveAverage(x) → HighPaying(x))"
    },
    {
        "NL": "A place is considered a library if it is an institution that houses a collection of books, periodicals, and other media for reading, study, and research purposes.",
        "FOL": "∀x (Library(x) ↔ (HousesCollectionOfBooksPeriodicalsAndOtherMedia(x) ∧ ForReadingStudyAndResearchPurposes(x)))"
    },
    {
        "NL": "An ecosystem is stable if it has a balanced mix of species and adequate resources.",
        "FOL": "∀x (Ecosystem(x) ∧ BalancedMixOfSpecies(x) ∧ AdequateResources(x) → Stable(x))"
    },
    {
        "NL": "Some songs are fast and some songs are slow, but there are no songs that are both fast and slow.",
        "FOL": "∃x (Fast(x)) ∧ ∃x (Slow(x)) ∧ ¬∃x (Fast(x) ∧ Slow(x))"
    },
    {
        "NL": "A cake is ready to be served if it's cooled and the frosting is applied.",
        "FOL": "ReadyToServe(cake) ↔ (Cooled(cake) ∧ FrostingApplied(cake))"
    },
    {
        "NL": "A plant thrives if and only if it gets sunlight and water.",
        "FOL": "∀x (Plant(x) → (Thrives(x) ↔ (GetsSunlight(x) ∧ Watered(x))))"
    },
    {
        "NL": "A person who creates visual or written content is an artist or a writer.",
        "FOL": "∀x (Person(x) ∧ (CreatesVisualContent(x) ∨ CreatesWrittenContent(x)) → Artist(x) ∨ Writer(x))"
    },
    {
        "NL": "A software application with a modular architecture allows for easier maintenance, better scalability, and more efficient development.",
        "FOL": "∀x (SoftwareApplication(x) ∧ ModularArchitecture(x) → (EasierMaintenance(x) ∧ BetterScalability(x) ∧ ∀y (Developer(y) → MoreEfficientDevelopment(x, y))))"
    },
    {
        "NL": "If a game is engaging, then it is addictive and highly recommended.",
        "FOL": "∀x (Game(x) ∧ Engaging(x) → Addictive(x) ∧ HighlyRecommended(x))"
    },
    {
        "NL": "All galaxies are endless and intense and cold.",
        "FOL": "∀x (Galaxy(x) → (Endless(x) ∧ Intense(x) ∧ Cold(x)))"
    },
    {
        "NL": "A vaccine can prevent or reduce the severity of a specific disease, while an antibiotic is used to treat bacterial infections and is not effective against viral infections.",
        "FOL": "∀x ∀y ∀z (Vaccine(x) ∧ Antibiotic(y) ∧ Disease(z) → (PreventsOrReducesSeverity(x, z) ∧ TreatsBacterialInfections(y) ∧ ¬EffectiveAgainstViralInfections(y)))"
    },
    {
        "NL": "Alex is a musician.",
        "FOL": "Musician(alex)"
    },
    {
        "NL": "A shopping cart holds items for purchase.",
        "FOL": "∀x (ShoppingCart(x) → HoldsItemsForPurchase(x))"
    },
    {
        "NL": "A volcano is dormant if it has not erupted for a long period of time.",
        "FOL": "∀x (Volcano(x) ∧ LongPeriodWithoutEruption(x) → Dormant(x))"
    },
    {
        "NL": "Every individual who likes someone is liked by someone.",
        "FOL": "∀x (Individual(x) ∧ ∃y (Individual(y) ∧ Likes(x, y)) → ∃z (Individual(z) ∧ Likes(z, x)))"
    },
    {
        "NL": "Every cat is either black or white.",
        "FOL": "∀x (Cat(x) → (Black(x) ∨ White(x)))"
    },
    {
        "NL": "A cell phone is reliable if it has a long-lasting battery, strong signal reception, and durable construction, but not if it's prone to software crashes.",
        "FOL": "∀x (CellPhone(x) ∧ ((LongLastingBattery(x) ∧ StrongSignalReception(x) ∧ DurableConstruction(x)) ∧ ¬ProneToSoftwareCrashes(x) → Reliable(x)))"
    },
    {
        "NL": "A chemical reaction occurs between two substances if they are combined under specific conditions, the reactants transform into products, and energy is released or absorbed.",
        "FOL": "∀x∀y∀z (Substance(x) ∧ Substance(y) ∧ SpecificConditions(z) ∧ CombinedUnderConditions(x, y, z) ∧ ReactantsTransformIntoProducts(x, y) ∧ EnergyReleasedOrAbsorbed(z) → ChemicalReaction(x, y))"
    },
    {
        "NL": "A student passes a course if they attend lectures, complete assignments, and score above 70% on the final exam.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) ∧ AttendsLectures(x, y) ∧ CompletesAssignments(x, y) ∧ ScoresAbove70(x, y) → Passes(x, y))"
    },
    {
        "NL": "An airplane is either airborne or on the ground, never both.",
        "FOL": "∀x (Airplane(x) → (Airborne(x) ⊕ OnGround(x)))"
    },
    {
        "NL": "A book has a title and an author.",
        "FOL": "∀x (Book(x) → (HasTitle(x) ∧ HasAuthor(x)))"
    },
    {
        "NL": "A mammal is considered a marsupial if it gives birth to underdeveloped offspring and has a pouch for their development.",
        "FOL": "∀x (Mammal(x) ∧ GivesBirthToUnderdevelopedOffspring(x) ∧ HasPouch(x) → Marsupial(x))"
    },
    {
        "NL": "A baby cries when it is hungry or tired.",
        "FOL": "∀x (Baby(x) ∧ (Hungry(x) ∨ Tired(x)) → Cries(x))"
    },
    {
        "NL": "A smartphone is innovative when it features cutting-edge technology and a sleek design.",
        "FOL": "∀x (Smartphone(x) ∧ CuttingEdgeTechnology(x) ∧ SleekDesign(x) → Innovative(x))"
    },
    {
        "NL": "A device generates renewable energy if it produces electricity from a sustainable resource such as wind, solar, or hydro power.",
        "FOL": "∀x ∀y (Device(x) ∧ SustainableResource(y) ∧ ProducesElectricityFromResource(x, y) → GeneratesRenewableEnergy(x))"
    },
    {
        "NL": "There exist movies that are gripping and profound, but not family-friendly, or they are family-friendly but not gripping and profound.",
        "FOL": "∀x (Movie(x) → ((Gripping(x) ∧ Profound(x) ∧ ¬FamilyFriendly(x)) ⊕ (FamilyFriendly(x) ∧ ¬(Gripping(x) ∧ Profound(x)))))"
    },
    {
        "NL": "A vehicle is powered by an electric motor if it uses electricity stored in a battery to generate mechanical motion and propel the vehicle.",
        "FOL": "∀x ∀y ∀z (Vehicle(x) ∧ ElectricMotor(y) ∧ Battery(z) ∧ UsesElectricityToGenerateMotion(x, y, z) → PoweredByElectricMotor(x))"
    },
    {
        "NL": "A computer connects to the network and allows users to access the internet and online resources.",
        "FOL": "∀x (Computer(x) → (ConnectsToInternet(x) ∧ AllowsAccessToInternet(x) ∧ AllowsAccessToOnlineResources(x)))"
    },
    {
        "NL": "A customer will choose a product with the lowest price unless there is a higher-quality alternative.",
        "FOL": "∀x∀y∀z (Customer(x) ∧ Product(y) ∧ Product(z) ∧ LowestPrice(y) ∧ HigherQuality(z, y) → (Choose(x, y) ⊕ Choose(x, z)))"
    },
    {
        "NL": "If a person is a student, they are a graduate, undergraduate or doctoral student.",
        "FOL": "∀x (Person(x) ∧ Student(x) → GraduateStudent(x) ∨ UndergraduateStudent(x) ∨ DoctoralStudent(x))"
    },
    {
        "NL": "A city is famous if it is known for its landmarks or historical significance.",
        "FOL": "∀x (City(x) ∧ (KnownForLandmarks(x) ∨ KnownForHistoricalSignificance(x)) → Famous(x))"
    },
    {
        "NL": "A gadget is considered a smart device if it can use applications, send emails, access the internet, and has a touchscreen.",
        "FOL": "∀x ((Gadget(x) ∧ CanUseApplications(x) ∧ SendEmails(x) ∧ AccessInternet(x) ∧ HasTouchscreen(x)) → SmartDevice(x))"
    },
    {
        "NL": "An artwork gains value when created by a renowned artist or has historical significance.",
        "FOL": "∀x (Artwork(x) → (GainsValue(x) ↔ (CreatedByRenownedArtist(x) ∨ HistoricalSignificance(x))))"
    },
    {
        "NL": "Every engineer who works in both hardware and software fields, unless they are an award winner, has either published a research paper or has not worked on government projects.",
        "FOL": "∀x (Engineer(x) ∧ WorksInHardware(x) ∧ WorksInSoftware(x) ∨ AwardWinner(x) → (PublishedResearchPaper(x) ∨ ¬WorkedOnGovernmentProjects(x)))"
    },
    {
        "NL": "All musicians are either singers or composers, but not both.",
        "FOL": "∀x (Musician(x) → (Singer(x) ⊕ Composer(x)))"
    },
    {
        "NL": "An employee is considered diligent if they complete the task on time.",
        "FOL": "∀x (Employee(x) ∧ CompleteTaskOnTime(x) → Diligent(x))"
    },
    {
        "NL": "An even number can be divided by two without leaving a remainder.",
        "FOL": "∀x (EvenNumber(x) → DivisibleByTwoWithoutRemainder(x))"
    },
    {
        "NL": "If a student is accepted into a college, they have either received a scholarship or have paid tuition.",
        "FOL": "∀x∀y (Student(x) ∧ College(y) ∧ Accepted(x, y) → (ReceivedScholarship(x, y) ⊕ PaidTuition(x, y)))"
    },
    {
        "NL": "A song is a ballad when it has a narrative aspect and uses traditional melodies.",
        "FOL": "∀x (Song(x) ∧ HasNarrativeAspect(x) ∧ UsesTraditionalMelodies(x) → Ballad(x))"
    },
    {
        "NL": "Vegetables that are hard and white usually require more cooking time.",
        "FOL": "∀x (Vegetable(x) ∧ Hard(x) ∧ White(x) → RequireMoreCookingTime(x))"
    },
    {
        "NL": "If something is a tall building or a short tree, then it's either old or new, but not both.",
        "FOL": "∀x ((Tall(x) ∧ Building(x)) ∨ (Short(x) ∧ Tree(x)) → (Old(x) ⊕ New(x)))"
    },
    {
        "NL": "A computer with a faster processor will perform tasks more quickly than one with a slower processor.",
        "FOL": "∀x∀y (Computer(x) ∧ Computer(y) ∧ FasterProcessor(x) ∧ SlowerProcessor(y) → PerformsTasksMoreQuickly(x, y))"
    },
    {
        "NL": "An athlete can participate in a marathon if they have completed training and are in good physical condition.",
        "FOL": "∀x (Athlete(x) ∧ CompletedTraining(x) ∧ GoodPhysicalCondition(x) → CanParticipateInMarathon(x))"
    },
    {
        "NL": "Birds migrate to warmer climates when the weather becomes cold.",
        "FOL": "∀x∀y (Bird(x) ∧ ColdWeather(y) → MigratesToWarmerClimate(x, y))"
    },
    {
        "NL": "A restaurant becomes popular if it serves delicious food, has a cozy atmosphere, and excellent service.",
        "FOL": "∀x (Restaurant(x) ∧ ServesDeliciousFood(x) ∧ CozyAtmosphere(x) ∧ ExcellentService(x) → BecomesPopular(x))"
    },
    {
        "NL": "A cat is not drinking milk from a bowl.",
        "FOL": "∃x (Cat(x) ∧ ¬∃y (Bowl(y) ∧ DrinkingFrom(x, y)))"
    },
    {
        "NL": "All birds have feathers and lay eggs.",
        "FOL": "∀x (Bird(x) → (HasFeathers(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A coral reef provides a diverse habitat for marine life, serves as a natural barrier protecting coastlines, and supports local tourism and fishing industries.",
        "FOL": "∀x (CoralReef(x) → (ProvidesHabitatForMarineLife(x) ∧ ServesAsNaturalBarrier(x) ∧ SupportsTourismAndFishingIndustries(x)))"
    },
    {
        "NL": "Pizzas are round, sandwiches are usually rectangular, and tacos have a U-shape.",
        "FOL": "∀x (Pizza(x) → Round(x)) ∧ ∀y (Sandwich(y) → UsuallyRectangular(y)) ∧ ∀z (Taco(z) → UShape(z))"
    },
    {
        "NL": "No dogs are purple.",
        "FOL": "¬∃x (Dog(x) ∧ Purple(x))"
    },
    {
        "NL": "An entity is a square only if it is yellow.",
        "FOL": "∀x (Square(x) → Yellow(x))"
    },
    {
        "NL": "A TV with a large screen and high resolution is desirable, but not if it has high power consumption.",
        "FOL": "∀x (TV(x) ∧ ((LargeScreen(x) ∧ HighResolution(x)) ∧ ¬HighPowerConsumption(x) → Desirable(x)))"
    },
    {
        "NL": "A window lets in light but not wind when closed.",
        "FOL": "∀x (Window(x) ∧ Closed(x) → (LetsInLight(x) ∧ ¬LetsInWind(x)))"
    },
    {
        "NL": "A company manufacturing electric vehicles, utilizing renewable energy sources for production, and implementing sustainable practices is environmentally responsible.",
        "FOL": "∀x (Company(x) ∧ ManufacturesElectricVehicles(x) ∧ UtilizesRenewableEnergySources(x) ∧ ImplementsSustainablePractices(x) → EnvironmentallyResponsible(x))"
    },
    {
        "NL": "No painter in the studio painted a portrait.",
        "FOL": "¬∃x (Painter(x) ∧ InStudio(x) ∧ PaintedPortrait(x))"
    },
    {
        "NL": "A mammal that has fur, gives birth to live offspring, and feeds milk to its young is a dog.",
        "FOL": "∀x (Mammal(x) ∧ HasFur(x) ∧ GivesBirthToLiveOffspring(x) ∧ FeedsMilkToYoung(x) → Dog(x))"
    },
    {
        "NL": "A student will graduate only if he doesn't fail the course.",
        "FOL": "∀x (Student(x) ∧ Graduate(x) → ¬FailCourse(x))"
    },
    {
        "NL": "A person who operates and maintains heavy machinery is called a heavy equipment operator.",
        "FOL": "∀x (OperatesAndMaintainsHeavyMachinery(x) → HeavyEquipmentOperator(x))"
    },
    {
        "NL": "An athlete is a professional athlete if they earn a living from their sport and are not an amateur.",
        "FOL": "∀x (Athlete(x) → ((EarnsLivingFromSport(x) ∧ ¬Amateur(x)) ↔ ProfessionalAthlete(x)))"
    },
    {
        "NL": "A smartphone is a type of mobile phone that has a touchscreen display, internet access, and an operating system capable of running downloaded applications.",
        "FOL": "∀x (Smartphone(x) ↔ (MobilePhone(x) ∧ TouchscreenDisplay(x) ∧ InternetAccess(x) ∧ RunsDownloadedApplications(x)))"
    },
    {
        "NL": "An instrument can be stringed or winded.",
        "FOL": "∀x (Instrument(x) → (Stringed(x) ∨ Winded(x)))"
    },
    {
        "NL": "A chemist synthesizes compounds, tests their properties, and analyzes the results.",
        "FOL": "∀x ∀y ∀z (Chemist(x) ∧ Compound(y) ∧ Synthesizes(x, y) ∧ TestsProperties(x, y) → AnalyzesResults(x, z))"
    },
    {
        "NL": "A car is encircled by tires and cannot be positioned on a river.",
        "FOL": "∀x (Car(x) → (EncircledByTires(x) ∧ ¬PositionedOnRiver(x)))"
    },
    {
        "NL": "Paintings depict landscapes, portraits, still life, and abstract compositions.",
        "FOL": "∀x (Painting(x) → (DepictsLandscapes(x) ∨ DepictsPortraits(x) ∨ DepictsStillLife(x) ∨ DepictsAbstractCompositions(x)))"
    },
    {
        "NL": "A combination of hot and dry weather conditions can lead to an increased risk of wildfires.",
        "FOL": "∀x∀y (HotWeather(x) ∧ DryWeather(y) → IncreasedWildfireRisk(x, y))"
    },
    {
        "NL": "If a dog is sleeping on a rug, then certain rectangles are either black or white.",
        "FOL": "∃x ∃y (Dog(x) ∧ Rug(y) ∧ SleepingOn(x, y) → ∃z (Rectangle(z) ∧ (Black(z) ⊕ White(z))))"
    },
    {
        "NL": "An effective vaccine provides immunity against a specific pathogen by stimulating the immune system to produce a protective response.",
        "FOL": "∀x∀y (Vaccine(x) ∧ Pathogen(y) → (Effective(x) ↔ (ProvidesImmunity(x, y) ∧ StimulatesImmuneSystem(x))))"
    },
    {
        "NL": "A healthy diet includes a variety of fruits, vegetables, and whole grains.",
        "FOL": "∀x (HealthyDiet(x) → (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesWholeGrains(x)))"
    },
    {
        "NL": "A bird is singing if and only if it sees at least one worm.",
        "FOL": "∀x (Singing(x) ↔ ∃y (Worm(y) ∧ Sees(x, y)))"
    },
    {
        "NL": "A car is a sedan or a SUV.",
        "FOL": "∀x (Car(x) → (Sedan(x) ∨ SUV(x)))"
    },
    {
        "NL": "A shape can be either two-dimensional, like a circle, or three-dimensional, like a sphere, but not both.",
        "FOL": "∀x (Shape(x) → (TwoDimensional(x) ⊕ ThreeDimensional(x)))"
    },
    {
        "NL": "A plant that is green, makes flowers, and has thorns is a rose.",
        "FOL": "∀x (Plant(x) ∧ IsGreen(x) ∧ MakesFlowers(x) ∧ HasThorns(x) → Rose(x))"
    },
    {
        "NL": "A restaurant may be popular if it serves high-quality food, has good customer service, and is located in a convenient area.",
        "FOL": "∀x (Restaurant(x) ∧ HighQualityFood(x) ∧ GoodCustomerService(x) ∧ ConvenientLocation(x) → Popular(x))"
    },
    {
        "NL": "A scientist conducts research, writes a paper, and presents the findings at a conference.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Research(y) ∧ Paper(z) ∧ Conducts(x, y) ∧ Writes(x, z) → PresentsAtConference(x, z))"
    },
    {
        "NL": "There is no student who all teachers grade if and only if there is a student who no teacher grades.",
        "FOL": "¬∃x (Student(x) ∧ ∀y (Teacher(y) → Grades(y, x))) ↔ ∃z (Student(z) ∧ ∀w (Teacher(w) → ¬Grades(z, w)))"
    },
    {
        "NL": "A man is a vegan if and only if they consume grains or vegetables, but not dairy.",
        "FOL": "∀x (Man(x) → (Vegan(x) ↔ ((EatsGrains(x) ∨ EatsVegetables(x)) ∧ ¬EatsDairy(x))))"
    },
    {
        "NL": "A product is eco-friendly if it is made from recycled materials, has minimal packaging, and does not harm the environment.",
        "FOL": "∀x (Product(x) ∧ RecycledMaterials(x) ∧ MinimalPackaging(x) ∧ ¬HarmEnvironment(x) → EcoFriendly(x))"
    },
    {
        "NL": "Objects with a temperature below the freezing point of water turn into ice.",
        "FOL": "∀x (Object(x) ∧ TemperatureBelowFreezingPoint(x) → TurnsIntoIce(x))"
    },
    {
        "NL": "Something is a bright comet, and something is a dark nebula.",
        "FOL": "∃x (Bright(x) ∧ Comet(x)) ∧ ∃x (Dark(x) ∧ Nebula(x))"
    },
    {
        "NL": "Everything green is round unless it is small.",
        "FOL": "∀x (Green(x) → (¬Small(x) → Round(x)))"
    },
    {
        "NL": "A type of pollution can be either air or water pollution.",
        "FOL": "∀x (Pollution(x) → (AirPollution(x) ⊕ WaterPollution(x)))"
    },
    {
        "NL": "All students read, write, and learn every semester.",
        "FOL": "∀x (Student(x) → ∀y (Semester(y) → (ReadsEverySemester(x, y) ∧ WritesEverySemester(x, y) ∧ LearnsEverySemester(x, y))))"
    },
    {
        "NL": "Fish have gills, which allow them to extract oxygen from water.",
        "FOL": "∀x∀y (Fish(x) ∧ Gills(y) ∧ Has(x, y) → ExtractsOxygenFromWater(x))"
    },
    {
        "NL": "An athlete who competes in multiple sports and demonstrates exceptional skill in each is considered a multi-sport athlete.",
        "FOL": "∀x∀y (Athlete(x) ∧ CompetesInMultipleSports(x) ∧ DemonstratesExceptionalSkill(x, y) → MultiSportAthlete(x))"
    },
    {
        "NL": "An animal is a carnivore if it predominantly consumes meat.",
        "FOL": "∀x (Animal(x) ∧ PredominantlyConsumesMeat(x) → Carnivore(x))"
    },
    {
        "NL": "A human is lactose intolerant if they avoid milk and cheese.",
        "FOL": "∀x (Human(x) → ¬DrinkMilk(x) ∧ ¬EatCheese(x) → LactoseIntolerant(x))"
    },
    {
        "NL": "A person who has a leadership role in a company is called an executive.",
        "FOL": "∀x (LeadershipRoleInCompany(x) → Executive(x))"
    },
    {
        "NL": "An artist paints a landscape in the presence of natural light and sufficient inspiration.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Landscape(y) ∧ NaturalLight(z) ∧ SufficientInspiration(x) → Paints(x, y, z))"
    },
    {
        "NL": "A liquid will freeze if its temperature is below its freezing point.",
        "FOL": "∀x (Liquid(x) ∧ TemperatureBelowFreezingPoint(x) → Freeze(x))"
    },
    {
        "NL": "A cat chases mice, whereas a dog chases balls.",
        "FOL": "∀x (Cat(x) → ChasesMice(x)) ∧ ∀y (Dog(y) → ChasesBalls(y))"
    },
    {
        "NL": "A library stores books, periodicals, and other media for public use, and may offer additional services such as computer access, workshops, or study spaces.",
        "FOL": "∀x ∀y (Library(x) ∧ Media(y) → StoresForPublicUse(x, y) ∧ (OffersComputerAccess(x) ∨ OffersWorkshops(x) ∨ OffersStudySpaces(x)))"
    },
    {
        "NL": "Each teacher is human, but not every human is a teacher.",
        "FOL": "∀x (Teacher(x) → Human(x)) ∧ ¬∀x (Human(x) → Teacher(x))"
    },
    {
        "NL": "A film is a blockbuster if it has a high box office revenue and is critically acclaimed.",
        "FOL": "∀x (Film(x) ∧ HighBoxOfficeRevenue(x) ∧ CriticallyAcclaimed(x) → Blockbuster(x))"
    },
    {
        "NL": "A door is secure with a sturdy lock and strong hinges.",
        "FOL": "∀x (Door(x) ∧ SturdyLock(x) ∧ StrongHinges(x) → Secure(x))"
    },
    {
        "NL": "An email is an electronic form of communication, while a letter is a physical form.",
        "FOL": "∀x ∀y (Email(x) ∧ Letter(y) → (ElectronicCommunication(x) ∧ PhysicalCommunication(y)))"
    },
    {
        "NL": "A beverage that contains caffeine, sugar, and taurine is an energy drink.",
        "FOL": "∀x (Beverage(x) ∧ ContainsCaffeine(x) ∧ ContainsSugar(x) ∧ ContainsTaurine(x) → EnergyDrink(x))"
    },
    {
        "NL": "To graduate from college, a student must complete a minimum number of required courses and maintain a satisfactory GPA.",
        "FOL": "∀x ∀y (Student(x) ∧ College(y) → (CompletedRequiredCourses(x, y) ∧ SatisfactoryGPA(x) → Graduate(x, y)))"
    },
    {
        "NL": "Natural disasters, such as earthquakes, hurricanes, and floods, can cause widespread damage to infrastructure, disrupt essential services, and displace populations.",
        "FOL": "∀x∀y∀z (NaturalDisaster(x) ∧ (Earthquake(x) ∨ Hurricane(x) ∨ Flood(x)) → (CausesWidespreadDamageToInfrastructure(y) ∧ DisruptsEssentialServices(y) ∧ DisplacesPopulations(z)))"
    },
    {
        "NL": "A polluted river can harm aquatic life, consequently affecting the food chain and endangering species that depend on the river ecosystem.",
        "FOL": "∀x∀y∀z (River(x) ∧ Polluted(x) → (HarmsAquaticLife(x, y) ∧ AffectsFoodChain(x, z) ∧ EndangersSpeciesThatDependOnEcosystem(x, z)))"
    },
    {
        "NL": "A vehicle is suitable for off-road use if it has four-wheel drive and high ground clearance, but not if it has low horsepower.",
        "FOL": "∀x (Vehicle(x) ∧ FourWheelDrive(x) ∧ HighGroundClearance(x) ∧ ¬LowHorsepower(x) → SuitableForOffRoad(x))"
    },
    {
        "NL": "If a number is a multiple of another, then there's a natural number in between.",
        "FOL": "∀x ∀y ∃z (Number(x) ∧ Number(y) ∧ NaturalNumber(z) ∧ MultipleOf(x, y) → Between(z, x, y))"
    },
    {
        "NL": "A tool with a sharp-edged, typically rectangular blade that is used for cutting materials is a knife.",
        "FOL": "∀x (Tool(x) ∧ SharpEdged(x) ∧ RectangularBlade(x) ∧ UsedForCuttingMaterials(x) → Knife(x))"
    },
    {
        "NL": "A diet is nutritious if it includes a variety of fruits, vegetables, and sources of protein.",
        "FOL": "∀x∀y∀z (Diet(x) ∧ VarietyOfFruits(y) ∧ VarietyOfVegetables(z) ∧ SourcesOfProtein(x) → Nutritious(x, y, z))"
    },
    {
        "NL": "If a color is not primary, it is either secondary or tertiary.",
        "FOL": "∀x (Color(x) ∧ ¬Primary(x) → (Secondary(x) ∨ Tertiary(x)))"
    },
    {
        "NL": "A hexagon is brown if and only if it is not small and it points to a yellow or black object.",
        "FOL": "∀x (Hexagon(x) → ((Brown(x) ↔ ¬Small(x)) ∧ ∃y (PointsTo(x, y) → (Yellow(y) ∨ Black(y)))))"
    },
    {
        "NL": "A car is driven on roads and cannot operate underwater.",
        "FOL": "∀x (Car(x) → (DrivenOnRoads(x) ∧ ¬OperatesUnderwater(x)))"
    },
    {
        "NL": "No film is both perfect and intricate.",
        "FOL": "¬∃x (Film(x) ∧ Perfect(x) ∧ Intricate(x))"
    },
    {
        "NL": "A student who graduates with honors has a high GPA.",
        "FOL": "∀x (GraduatesWithHonors(x) → HighGPA(x))"
    },
    {
        "NL": "A parrot is a bird with colorful feathers and the ability to mimic sounds, an eagle is a large bird of prey with excellent vision, and an ostrich is a flightless bird with long legs and a large body.",
        "FOL": "∀x ∀y ∀z (Parrot(x) → (Bird(x) ∧ ColorfulFeathers(x) ∧ MimicSounds(x))) ∧ (Eagle(y) → (LargeBirdOfPrey(y) ∧ ExcellentVision(y))) ∧ (Ostrich(z) → (FlightlessBird(z) ∧ LongLegs(z) ∧ LargeBody(z)))"
    },
    {
        "NL": "There are cities where numerous birds fly.",
        "FOL": "∃x ∃y (City(x) ∧ Bird(y) ∧ FlyIn(y, x))"
    },
    {
        "NL": "A team wins if it doesn't lose and doesn't draw.",
        "FOL": "∀x (Team(x) → (Wins(x) ↔ (¬Loses(x) ∧ ¬Draws(x))))"
    },
    {
        "NL": "A type of landscape can be either a mountain or a plain.",
        "FOL": "∀x (LandscapeType(x) → Mountain(x) ⊕ Plain(x))"
    },
    {
        "NL": "Fungi decompose dead organic material by releasing enzymes that break down complex molecules.",
        "FOL": "∀x (Fungus(x) ∧ DeadOrganicMaterial(d) ∧ Enzymes(e) ∧ ComplexMolecules(c) → DecomposesByReleasingEnzymes(x, d, e, c))"
    },
    {
        "NL": "An artist is painting in a crowded studio.",
        "FOL": "∃x ∃y (Artist(x) ∧ Painting(x) ∧ CrowdedStudio(y) ∧ In(x, y))"
    },
    {
        "NL": "Emily visits an art gallery only if it was opened before 1990.",
        "FOL": "∀x (Gallery(x) ∧ OpenedBy(x, artgallery) → (OpenedBeforeNineteenNinety(x) ↔ Visits(emily, x)))"
    },
    {
        "NL": "A restaurant serves a variety of dishes, prepared with ingredients such as vegetables, meats, and grains, and offers different dining options like dine-in, takeout, or delivery.",
        "FOL": "∀x ∀y ∀z (Restaurant(x) → (ServesVarietyOfDishes(x, y) ∧ PreparedWithIngredients(y) ∧ (Vegetables(y) ∨ Meats(y) ∨ Grains(y)) ∧ OffersDifferentDiningOptions(x, z) ∧ (DineIn(z) ∨ Takeout(z) ∨ Delivery(z))))"
    },
    {
        "NL": "A sculpture is impressive if it exhibits superb craftsmanship and intricate details.",
        "FOL": "∀x (Sculpture(x) ∧ ExhibitsSuperbCraftsmanship(x) ∧ HasIntricateDetails(x) → Impressive(x))"
    },
    {
        "NL": "A cat is sleeping on a sofa, and a dog is playing in the yard.",
        "FOL": "∃x ∃y (Cat(x) ∧ Sofa(y) ∧ SleepingOn(x, y)) ∧ ∃z (Dog(z) ∧ Playing(z) ∧ InYard(z))"
    },
    {
        "NL": "A museum exhibit can be interactive if it allows visitors to touch or manipulate objects, but not if it contains fragile items.",
        "FOL": "∀x (MuseumExhibit(x) ∧ ((AllowsTouching(x) ∨ AllowsManipulation(x)) ∧ ¬ContainsFragileItems(x)) → Interactive(x))"
    },
    {
        "NL": "A living organism is a reptile if it is cold-blooded, has scales, and lays eggs.",
        "FOL": "∀x (Reptile(x) ↔ (LivingOrganism(x) ∧ ColdBlooded(x) ∧ HasScales(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A flowering plant that grows in soil with high salt concentrations and can tolerate saline conditions is called a halophyte.",
        "FOL": "∀x (FloweringPlant(x) ∧ GrowsInHighSaltSoil(x) ∧ ToleratesSalineConditions(x) → Halophyte(x))"
    },
    {
        "NL": "A door can be opened by turning a knob or pushing a handle.",
        "FOL": "∀x (Door(x) → (OpenedByTurningKnob(x) ∨ OpenedByPushingHandle(x)))"
    },
    {
        "NL": "Each cat purrs.",
        "FOL": "∀x (Cat(x) → Purrs(x))"
    },
    {
        "NL": "A food item is considered high in fiber if it contains a significant amount of soluble or insoluble dietary fiber and contributes to daily recommended intake.",
        "FOL": "∀x (FoodItem(x) ∧ ContainsSignificantFiber(x) ∧ ContributesToDailyRecommendedIntake(x) → HighInFiber(x))"
    },
    {
        "NL": "Musicians compose and perform music for audiences to evoke emotions and tell stories.",
        "FOL": "∀x ∀y (Musician(x) ∧ Audience(y) ∧ ComposesMusic(x) ∧ PerformsMusic(x) → (EvokeEmotions(x, y) ∧ TellStories(x, y)))"
    },
    {
        "NL": "A guitar can be acoustic or electric, but not both.",
        "FOL": "∀x (Guitar(x) → (Acoustic(x) ⊕ Electric(x)))"
    },
    {
        "NL": "A bakery bakes bread when the dough has risen, the oven is preheated, and the baking time is set according to the recipe.",
        "FOL": "∀x ∀y ∀z (Bakery(x) ∧ Bread(y) ∧ DoughRisen(y) ∧ OvenPreheated(z) ∧ BakingTimeSet(y, z) → Bakes(x, y, z))"
    },
    {
        "NL": "A refund is issued to a customer if they return the product within 30 days and the product is in its original condition.",
        "FOL": "∀x ∀y (Customer(x) ∧ Product(y) ∧ ReturnedWithin30Days(x, y) ∧ OriginalCondition(y) → IssuedRefund(x, y))"
    },
    {
        "NL": "A theater stage is illuminated by spotlights and other lighting equipment for performances.",
        "FOL": "∀x∀y∀z (TheaterStage(x) ∧ Spotlight(y) ∧ LightingEquipment(z) → IlluminatedForPerformance(x, y, z))"
    },
    {
        "NL": "A hat is worn on the head, shoes are worn on the feet, and gloves are worn on the hands.",
        "FOL": "∀x ∀y ∀z (Hat(x) ∧ Shoes(y) ∧ Gloves(z) → (WornOnHead(x) ∧ WornOnFeet(y) ∧ WornOnHands(z)))"
    },
    {
        "NL": "A bicycle enables eco-friendly transportation, promoting physical fitness and reducing air pollution.",
        "FOL": "∀x (Bicycle(x) → (EcoFriendlyTransportation(x) ∧ PromotesPhysicalFitness(x) ∧ ReducesAirPollution(x)))"
    },
    {
        "NL": "A vehicle can be classified based on its propulsion method, such as internal combustion engines using gasoline or diesel, electric vehicles powered by batteries, or hybrid vehicles utilizing both an internal combustion engine and an electric motor.",
        "FOL": "∀x ∀y ∀z (Vehicle(x) ∧ ((InternalCombustionEngine(x, y) ∧ (Gasoline(y) ∨ Diesel(y))) ∨ (ElectricVehicle(x, z) ∧ BatteryPowered(z)) ∨ (HybridVehicle(x, y, z) ∧ (InternalCombustionEngine(x, y) ∧ ElectricMotor(x, z)))))"
    },
    {
        "NL": "A smartphone's camera quality is influenced by factors such as sensor size, resolution, and lens quality.",
        "FOL": "∀x∀y∀z∀w (Smartphone(x) ∧ Camera(y) ∧ SensorSize(z) ∧ Resolution(w) ∧ LensQuality(u) → CameraQualityInfluencedBy(x, y, z, w, u))"
    },
    {
        "NL": "A room is tidy if and only if it is cleaned regularly.",
        "FOL": "∀x (Room(x) → (Tidy(x) ↔ CleanedRegularly(x)))"
    },
    {
        "NL": "Some insects pollinate flowers during the process of feeding.",
        "FOL": "∃x ∃y ∃z (Insect(x) ∧ Flower(y) ∧ FeedingProcess(z) ∧ PollinatesDuring(x, y, z))"
    },
    {
        "NL": "A museum displays artifacts, art, and historical items for public education and enjoyment.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Artifact(y) ∧ Art(a) ∧ HistoricalItem(z) → DisplaysForPublic(x, y, a, z))"
    },
    {
        "NL": "A store sells products to customers and receives payment in return.",
        "FOL": "∀x ∀y ∀z (Store(x) ∧ Product(y) ∧ Customer(z) ∧ Payment(p) → (SellsTo(x, y, z) ∧ ReceivesPayment(x, p)))"
    },
    {
        "NL": "A plant withers when it receives insufficient sunlight, water, or nutrients.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ Sunlight(y) ∧ Water(z) ∧ (Insufficient(y) ∨ Insufficient(z) ∨ InsufficientNutrients(x)) → Withers(x))"
    },
    {
        "NL": "A storm that brings thunder and lightning or heavy rain is a thunderstorm.",
        "FOL": "∀x (Storm(x) → (BringsThunder(x) ∧ BringsLightning(x) ∨ BringsHeavyRain(x) → Thunderstorm(x)))"
    },
    {
        "NL": "All engineers who are hardworking are appreciated by every manager.",
        "FOL": "∀x (Engineer(x) ∧ Hardworking(x) → ∀y (Manager(y) → Appreciates(y, x)))"
    },
    {
        "NL": "A successful startup requires funding, a product, and a target market.",
        "FOL": "∀x (SuccessfulStartup(x) → (RequiresFunding(x) ∧ RequiresProduct(x) ∧ RequiresTargetMarket(x)))"
    },
    {
        "NL": "A computer program executes instructions to perform tasks or solve problems.",
        "FOL": "∀x (ComputerProgram(x) → (ExecuteInstructions(x) ∧ (PerformTasks(x) ∨ SolveProblems(x))))"
    },
    {
        "NL": "A television show is considered a spinoff if it shares characters, settings, or themes with a previously existing show.",
        "FOL": "∀x∀y (TelevisionShow(x) ∧ TelevisionShow(y) ∧ (SharesCharacters(x, y) ∨ SharesSettings(x, y) ∨ SharesThemes(x, y)) → Spinoff(x))"
    },
    {
        "NL": "A dog is barking in the yard.",
        "FOL": "∃x ∃y (Dog(x) ∧ Yard(y) ∧ BarkingIn(x, y))"
    },
    {
        "NL": "A sofa provides a place to sit and relax.",
        "FOL": "∀x (Sofa(x) → ProvidesSittingAndRelaxingPlace(x))"
    },
    {
        "NL": "A train travels on rails, while a bus travels on roads.",
        "FOL": "∀x (Train(x) → TravelsOnRails(x)) ∧ ∀y (Bus(y) → TravelsOnRoads(y))"
    },
    {
        "NL": "Adequate sleep can prevent mental disorders by promoting brain health.",
        "FOL": "∀x ∀y (Sleep(x) ∧ MentalDisorder(y) → (Prevents(x, y) → PromotesBrainHealth(x, y)))"
    },
    {
        "NL": "In a nuclear power plant, a nuclear reactor produces heat through a controlled fission reaction, which then generates steam to drive a turbine, ultimately producing electricity.",
        "FOL": "∀x∀y (NuclearPowerPlant(x) → (NuclearReactor(x, y) ∧ ProducesHeatThroughControlledFission(x, y) ∧ GeneratesSteam(x) ∧ DrivesTurbine(x) ∧ ProducesElectricity(x)))"
    },
    {
        "NL": "A tool that is handheld, has a sharp edge, and is used for cutting is generally a knife or a pair of scissors.",
        "FOL": "∀x (Tool(x) ∧ Handheld(x) ∧ SharpEdge(x) ∧ UsedForCutting(x) → (Knife(x) ∨ Scissors(x)))"
    },
    {
        "NL": "Daily meditation leads to inner peace.",
        "FOL": "∀x (DailyMeditation(x) → InnerPeace(x))"
    },
    {
        "NL": "Every manager who has coordinated with at least one employee, who in turn has not achieved a notable promotion, has either led more than two projects or attended all business meetings.",
        "FOL": "∀x (Manager(x) ∧ ∃y (Employee(y) ∧ ¬AchievedNotablePromotion(y) ∧ CoordinatedWith(x, y)) → (LedMoreThanTwoProjects(x) ∨ ∀z (BusinessMeeting(z) → Attended(x, z))))"
    },
    {
        "NL": "A book in a library is organized by the Dewey Decimal System if it has a number on its spine that corresponds to its subject area.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ Library(y) ∧ InLibrary(x, y) ∧ HasNumberOnSpine(x, z) ∧ CorrespondsToSubjectArea(z) → OrganizedByDeweyDecimalSystem(x))"
    },
    {
        "NL": "When a bicycle has a flat tire, it is difficult to ride.",
        "FOL": "∀x (Bicycle(x) ∧ FlatTire(x) → DifficultToRide(x))"
    },
    {
        "NL": "Any artist who has painted for over twenty years and either writes art critiques or holds exhibitions, but not both, must have either received an art award or be a gallery owner.",
        "FOL": "∀x (Artist(x) ∧ PaintedForOverTwentyYears(x) ∧ (WritesArtCritiques(x) ⊕ HoldsExhibitions(x)) → (ReceivedArtAward(x) ∨ GalleryOwner(x)))"
    },
    {
        "NL": "A person is considered a singer if they perform songs using their voice.",
        "FOL": "∀x (Person(x) ∧ PerformSongs(x) ∧ UsesVoice(x) → Singer(x))"
    },
    {
        "NL": "An herbivore consumes only plants, while a carnivore consumes only animals.",
        "FOL": "∀x (Herbivore(x) ↔ ConsumesOnlyPlants(x)) ∧ ∀y (Carnivore(y) ↔ ConsumesOnlyAnimals(y))"
    },
    {
        "NL": "If a student is enrolled in a course, they must attend at least one lecture.",
        "FOL": "∀x (EnrolledInCourse(x) → AttendsAtLeastOneLecture(x))"
    },
    {
        "NL": "A student excels academically if they have consistent study patterns, motivated mindset, and proficient skills.",
        "FOL": "∀x (Student(x) ∧ ConsistentStudyPatterns(x) ∧ MotivatedMindset(x) ∧ ProficientSkills(x) → ExcelsAcademically(x))"
    },
    {
        "NL": "An object is considered heavy if it weighs more than 200 pounds.",
        "FOL": "∀x (WeighsMoreThan(x, 200) → Heavy(x))"
    },
    {
        "NL": "An animal that has four legs, has fur, and purrs when happy is usually a cat.",
        "FOL": "∀x (Animal(x) ∧ HasFourLegs(x) ∧ HasFur(x) ∧ PurrsWhenHappy(x) → Cat(x))"
    },
    {
        "NL": "No flamingos that can run are endangered.",
        "FOL": "¬∀x (Flamingo(x) ∧ CanRun(x) → Endangered(x))"
    },
    {
        "NL": "Treatment secures against a distinct sickness by eradicating the parasitic microorganism inside the patient.",
        "FOL": "∀x ∃y (Treatment(x) ∧ Sickness(y) ∧ EradicatesParasiteOf(x, y) → SecuresAgainst(x, y))"
    },
    {
        "NL": "A chef combines ingredients to create a dish, following a recipe.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Ingredients(y) ∧ Recipe(z) → (Combines(x, y) ∧ CreatesDish(x, y) ∧ Follows(x, z)))"
    },
    {
        "NL": "Linda drinks a wine only if it was bottled in France.",
        "FOL": "∀x (Wine(x) → (BottledInFrance(x) ↔ Drinks(linda, x)))"
    },
    {
        "NL": "A building is energy-efficient if it uses insulation, incorporates renewable energy sources, and optimizes natural lighting and ventilation.",
        "FOL": "∀x (Building(x) ∧ UsesInsulation(x) ∧ IncorporatesRenewableEnergySources(x) ∧ OptimizesNaturalLightingAndVentilation(x) → EnergyEfficient(x))"
    },
    {
        "NL": "If a vehicle is powered by solar energy, it is considered a solar vehicle.",
        "FOL": "∀x (SolarPowered(x) → SolarVehicle(x))"
    },
    {
        "NL": "A program is efficient if it has low memory usage and a fast runtime.",
        "FOL": "∀x (Program(x) ∧ HasLowMemoryUsage(x) ∧ HasFastRuntime(x) → Efficient(x))"
    },
    {
        "NL": "A telescope can observe celestial objects at various distances and has a specific magnification range.",
        "FOL": "∀x (Telescope(x) → (∃y Distance(y) ∧ ObservesAt(x, y) ∧ (∃z MagnificationRange(z) ∧ HasMagnificationRange(x, z))))"
    },
    {
        "NL": "A ball is square only when it points to a tiny box.",
        "FOL": "∀x (Square(x) ↔ ∃y (Tiny(y) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "A language is spoken in a region if the majority of the population knows the language or it is the official language.",
        "FOL": "∀x ∀y (Language(x) ∧ Region(y) → (SpokenInRegion(x, y) ↔ (MajorityKnows(x, y) ∨ OfficialLanguage(x, y))))"
    },
    {
        "NL": "A candidate is chosen if they gain more votes than the competitor.",
        "FOL": "∀x ∀y (Candidate(x) ∧ Candidate(y) ∧ GainsMoreVotes(x, y) → Chosen(x))"
    },
    {
        "NL": "If a vehicle is a bicycle, then it has pedals and a chain.",
        "FOL": "∀x (Vehicle(x) ∧ Bicycle(x) → HasPedals(x) ∧ HasChain(x))"
    },
    {
        "NL": "A successful entrepreneur possesses effective leadership skills, the ability to make sound decisions, and resilience in the face of adversity.",
        "FOL": "∀x (Entrepreneur(x) ∧ EffectiveLeadershipSkills(x) ∧ SoundDecisionMaking(x) ∧ ResilienceInAdversity(x) → Successful(x))"
    },
    {
        "NL": "A building is deemed safe if it has been inspected within the last year, meets all fire safety regulations, and is structurally sound.",
        "FOL": "∀x (Building(x) → (InspectedWithinYear(x) ∧ MeetFireSafetyReg(x) ∧ StructurallySound(x)))"
    },
    {
        "NL": "A chef prepares meals, and a waiter serves those meals to customers.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Customer(z) → (Prepares(x, y) ∧ Serves(y, z)))"
    },
    {
        "NL": "A musical composition may be written in a major or minor key, but not both simultaneously.",
        "FOL": "∀x (MusicalComposition(x) → (WrittenInMajorKey(x) ⊕ WrittenInMinorKey(x)))"
    },
    {
        "NL": "A business thrives if it has a strong customer base, innovative products, and effective marketing, but not if it has poor management or high debts.",
        "FOL": "∀x (Business(x) → (((StrongCustomerBase(x) ∧ InnovativeProducts(x) ∧ EffectiveMarketing(x)) ∧ ¬(PoorManagement(x) ∨ HighDebts(x))) → Thrives(x)))"
    },
    {
        "NL": "Some birds can fly, others can swim, and a few can run fast.",
        "FOL": "∃x∃y∃z (Bird(x) ∧ CanFly(x) ∧ Bird(y) ∧ CanSwim(y) ∧ Bird(z) ∧ CanRunFast(z))"
    },
    {
        "NL": "A city is a tourist destination if it has historical sites or natural attractions and has good infrastructure.",
        "FOL": "∀x (City(x) ∧ (HistoricalSites(x) ∨ NaturalAttractions(x)) ∧ GoodInfrastructure(x) → TouristDestination(x))"
    },
    {
        "NL": "A carnivorous dino covered in feathers and with a beak is a velociraptor.",
        "FOL": "∀x (Dinosaur(x) ∧ Carnivorous(x) ∧ CoveredInFeathers(x) ∧ HasBeak(x) → Velociraptor(x))"
    },
    {
        "NL": "An event is a party if it involves music, dancing, and socializing.",
        "FOL": "∀x (Event(x) → (Party(x) ↔ (Music(x) ∧ Dancing(x) ∧ Socializing(x))))"
    },
    {
        "NL": "A bird builds a nest using twigs and leaves when it needs a place for its eggs.",
        "FOL": "∀x (Bird(x) ∧ NeedsPlaceForEggs(x) → BuildsNest(x, Twigs, Leaves))"
    },
    {
        "NL": "A game is entertaining if it has engaging gameplay and appealing graphics.",
        "FOL": "∀x (Game(x) ∧ EngagingGameplay(x) ∧ AppealingGraphics(x) → Entertaining(x))"
    },
    {
        "NL": "Every team that trains hard wins games.",
        "FOL": "∀x (Team(x) ∧ TrainsHard(x) → WinsGames(x))"
    },
    {
        "NL": "A lion hunts animals for food, while a vulture feeds on the remains of dead animals.",
        "FOL": "∀x ∀y (Lion(x) ∧ Animal(y) → HuntsForFood(x, y)) ∧ ∀z ∀w (Vulture(z) ∧ DeadAnimal(w) → FeedsOnRemainsOf(z, w))"
    },
    {
        "NL": "A valid phone number has a country code, an area code, and a local number, but does not include any letters.",
        "FOL": "∀x (PhoneNumber(x) ∧ Valid(x) → (CountryCode(x) ∧ AreaCode(x) ∧ LocalNumber(x) ∧ ¬Letters(x)))"
    },
    {
        "NL": "A rainbow comes into being when sunlight refracts in rain showers and forms a spectrum of light in the sky.",
        "FOL": "∀x (Sunlight(x) ∧ RefractsInRainShowers(x) ∧ FormsSpectrumOfLight(x) → Rainbow(x))"
    },
    {
        "NL": "Learning a new language improves cognitive skills and fosters cultural understanding.",
        "FOL": "∀x (LearnNewLanguage(x) → (ImprovesCognitiveSkills(x) ∧ FostersCulturalUnderstanding(x)))"
    },
    {
        "NL": "A green square suggests something.",
        "FOL": "∃x (Green(x) ∧ Square(x) → ∃y (Suggests(x, y)))"
    },
    {
        "NL": "A place is considered a school if it provides education to students.",
        "FOL": "∀x (School(x) ↔ ProvidesEducation(x))"
    },
    {
        "NL": "A meal is satisfying if it includes balanced nutrition and is delicious.",
        "FOL": "∀x (Meal(x) ∧ BalancedNutrition(x) ∧ Delicious(x) → Satisfying(x))"
    },
    {
        "NL": "A wall clock displays the current time.",
        "FOL": "∀x (WallClock(x) → DisplaysCurrentTime(x))"
    },
    {
        "NL": "If no dogs are brown, there is a park that every park connects to.",
        "FOL": "¬∀x (Dog(x) → Brown(x)) → ∃y (Park(y) ∧ ∀z (Park(z) → ConnectsTo(z, y)))"
    },
    {
        "NL": "A type of material that can return to its original shape after being stretched or deformed, exhibits high elasticity, and is commonly used in the manufacture of rubber bands is an elastomer.",
        "FOL": "∀x (Material(x) ∧ ReturnsToOriginalShapeAfterDeformation(x) ∧ ExhibitsHighElasticity(x) ∧ CommonlyUsedInRubberBands(x) → Elastomer(x))"
    },
    {
        "NL": "If a shape is a circle, it has no corners.",
        "FOL": "∀x (Circle(x) → ¬HasCorners(x))"
    },
    {
        "NL": "Some paintings are both famous and valuable.",
        "FOL": "∃x (Painting(x) ∧ Famous(x) ∧ Valuable(x))"
    },
    {
        "NL": "Pharmacists dispense medication, and therapists provide counseling.",
        "FOL": "∀x ∀y (Pharmacist(x) ∧ Therapist(y) → (DispensesMedication(x) ⊕ ProvidesCounseling(y)))"
    },
    {
        "NL": "A battery can be either rechargeable or non-rechargeable.",
        "FOL": "∀x (Battery(x) → (Rechargeable(x) ⊕ NonRechargeable(x)))"
    },
    {
        "NL": "A painting is valuable if it is created by a renowned artist and has historical significance.",
        "FOL": "∀x (Valuable(x) ↔ (Painting(x) ∧ ∃y (RenownedArtist(y) ∧ CreatedBy(x, y)) ∧ ∃z (HistoricalSignificance(z) ∧ Has(x, z))))"
    },
    {
        "NL": "An object floats on water when its density is less than the water's density.",
        "FOL": "∀x ∀y (Object(x) ∧ Water(y) ∧ DensityLessThan(x, y) → FloatsOnWater(x))"
    },
    {
        "NL": "No child in the playground rode the swing.",
        "FOL": "∀x (Child(x) ∧ InPlayground(x) → ¬RodeSwing(x))"
    },
    {
        "NL": "A substance is classified as a liquid if its shape changes to conform to its container, but it maintains a constant volume.",
        "FOL": "∀x (Substance(x) ∧ ChangesShapeToConformToContainer(x) ∧ MaintainsConstantVolume(x) → Liquid(x))"
    },
    {
        "NL": "Countries with a high GDP and a stable political environment often have a high quality of life.",
        "FOL": "∀x ∀y (Country(x) ∧ HighGDP(x) ∧ StablePoliticalEnvironment(y) → HighQualityOfLife(x, y))"
    },
    {
        "NL": "A national park comprises diverse ecosystems, including forests, grasslands, and wetlands, and provides opportunities for outdoor activities like hiking, camping, or wildlife watching.",
        "FOL": "∀x (NationalPark(x) → ((ForestEcosystem(x) ∧ GrasslandEcosystem(x) ∧ WetlandEcosystem(x)) ∧ (HikingOpportunity(x) ∧ CampingOpportunity(x) ∧ WildlifeWatchingOpportunity(x))))"
    },
    {
        "NL": "A lion hunts its prey, while a deer grazes on plants.",
        "FOL": "∀x∀y (Lion(x) → HuntsPrey(x)) ∧ (Deer(y) → GrazesOnPlants(y))"
    },
    {
        "NL": "All fruits are not sweet or juicy.",
        "FOL": "∃x (Fruit(x) ∧ (¬Sweet(x) ∨ ¬Juicy(x)))"
    },
    {
        "NL": "A plant that thrives in a particular region and is essential to the ecosystem's balance is considered a keystone species.",
        "FOL": "∀x∀y∀z (Plant(x) ∧ Region(y) ∧ ThrivesIn(x, y) ∧ Ecosystem(z) ∧ EssentialToBalance(x, z) → KeystoneSpecies(x))"
    },
    {
        "NL": "A ticket is valid for entry to an event if it is purchased from an authorized seller and has not expired.",
        "FOL": "∀t ∀e (Ticket(t) ∧ Event(e) → (ValidForEntry(t, e) ↔ (PurchasedFromAuthorizedSeller(t) ∧ ¬Expired(t))))"
    },
    {
        "NL": "A neighborhood with a low crime rate and green spaces is desirable if it also has good schools or convenient public transportation.",
        "FOL": "∀x (Neighborhood(x) ∧ LowCrimeRate(x) ∧ GreenSpaces(x) ∧ (GoodSchools(x) ∨ ConvenientPublicTransportation(x)) → Desirable(x))"
    },
    {
        "NL": "A team succeeds in a competition when its members are skilled, have good teamwork, and are well-coached.",
        "FOL": "∀x (Team(x) → (SkilledMembers(x) ∧ GoodTeamwork(x) ∧ WellCoached(x) → SucceedsInCompetition(x)))"
    },
    {
        "NL": "A photographer captures an image using a camera, proper lighting, and a subject.",
        "FOL": "∀x∀y∀z∀w (Photographer(x) ∧ Image(y) ∧ Camera(z) ∧ Lighting(w) ∧ Subject(y, w) → Captures(x, y, z, w))"
    },
    {
        "NL": "John and Alex are painters.",
        "FOL": "Painter(john) ∧ Painter(alex)"
    },
    {
        "NL": "An animal is considered a reptile if it has scales, breathes air, and typically lays eggs.",
        "FOL": "∀x (Animal(x) ∧ HasScales(x) ∧ BreathesAir(x) ∧ TypicallyLaysEggs(x) → Reptile(x))"
    },
    {
        "NL": "A powerful computer has a fast processor, a large storage capacity, and a high-performance graphics card.",
        "FOL": "∀x (Computer(x) → (FastProcessor(x) ∧ LargeStorageCapacity(x) ∧ HighPerformanceGraphicsCard(x) → Powerful(x)))"
    },
    {
        "NL": "A violinist plays a violin, while a pianist plays a piano.",
        "FOL": "∀x ∀y (Violinist(x) ∧ Violin(y) → Plays(x, y)) ∧ ∀z ∀w (Pianist(z) ∧ Piano(w) → Plays(z, w))"
    },
    {
        "NL": "A doctor diagnoses illnesses and prescribes medication, while a pharmacist dispenses the prescribed medication.",
        "FOL": "∀x∀y (Doctor(x) ∧ Pharmacist(y) → (DiagnosesIllnesses(x) ∧ PrescribesMedication(x) ∧ DispensesMedication(y)))"
    },
    {
        "NL": "A vehicle is designated as an emergency vehicle when it is used to respond to urgent situations, such as fires or medical emergencies.",
        "FOL": "∀x (Vehicle(x) ∧ UsedToRespondToUrgentSituations(x) → EmergencyVehicle(x))"
    },
    {
        "NL": "A substance dissolves in water when it forms a homogeneous mixture with the water.",
        "FOL": "∀x∀y (Substance(x) ∧ Water(y) → (FormsHomogeneousMixture(x, y) → DissolvesInWater(x, y)))"
    },
    {
        "NL": "Pollination occurs when insects transfer pollen between flowers.",
        "FOL": "∀x (Pollination(x) ↔ InsectsTransferPollenBetweenFlowers(x))"
    },
    {
        "NL": "Either Ryan is a dancer or Mia is a dancer, but not both.",
        "FOL": "Dancer(ryan) ⊕ Dancer(mia)"
    },
    {
        "NL": "A smartphone can receive phone calls, text messages, or emails.",
        "FOL": "∀x (Smartphone(x) → (ReceivePhoneCalls(x) ∨ ReceiveTextMessages(x) ∨ ReceiveEmails(x)))"
    },
    {
        "NL": "In a food chain, a primary producer, such as a plant, is consumed by a primary consumer, which is then consumed by a secondary consumer, transferring energy and nutrients through the trophic levels.",
        "FOL": "∀x∀y∀z (FoodChain(x) ∧ PrimaryProducer(y) ∧ Plant(y) ∧ PrimaryConsumer(z) ∧ ConsumedBy(y, z) → (∃w (SecondaryConsumer(w) ∧ ConsumedBy(z, w) ∧ TransfersEnergyAndNutrients(x))))"
    },
    {
        "NL": "Musicians compose music, and their compositions are performed by orchestras or bands at concerts.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Composition(y) ∧ (Orchestra(z) ∨ Band(z)) → (Composes(x, y) ∧ Performs(z, y, x)))"
    },
    {
        "NL": "A film becomes a box office hit when it has a compelling storyline, famous actors, or a large budget for marketing.",
        "FOL": "∀x (Film(x) ∧ (CompellingStoryline(x) ∨ FamousActors(x) ∨ LargeMarketingBudget(x)) → BoxOfficeHit(x))"
    },
    {
        "NL": "A post office delivers mail.",
        "FOL": "∀x (PostOffice(x) → DeliversMail(x))"
    },
    {
        "NL": "All characters are either heroes or villains.",
        "FOL": "∀x (Character(x) ∧ (Hero(x) ⊕ Villain(x)))"
    },
    {
        "NL": "A bicycle is functional if it has inflated tires, a working chain, and functioning brakes.",
        "FOL": "∀x (Bicycle(x) ∧ InflatedTires(x) ∧ WorkingChain(x) ∧ FunctioningBrakes(x) → Functional(x))"
    },
    {
        "NL": "Deserts are characterized by low precipitation levels and support unique plant and animal life.",
        "FOL": "∀x∀y∀z (Desert(x) ∧ LowPrecipitation(y) ∧ UniqueLife(z) → (CharacterizedBy(x, y) ∧ Supports(x, z)))"
    },
    {
        "NL": "A snake sheds its skin periodically as it grows, leaving behind a molted layer that is often found intact.",
        "FOL": "∀x∀y (Snake(x) ∧ Skin(y) ∧ Growth(z) → ShedsSkinLeavingMoltedLayer(x, y, z))"
    },
    {
        "NL": "If every book that is printed is popular, then some novels will not be printed.",
        "FOL": "∀x (Book(x) ∧ Printed(x) → Popular(x)) → ∃y (Novel(y) ∧ ¬Printed(y))"
    },
    {
        "NL": "A person who is responsible for overseeing the planning, execution, and completion of construction projects, such as buildings, roads, and bridges, is a civil engineer.",
        "FOL": "∀x (Person(x) ∧ OverseesPlanning(x) ∧ OverseesExecution(x) ∧ OverseesCompletion(x) ∧ ConstructionProjects(x) ∧ Buildings(x) ∨ Roads(x) ∨ Bridges(x) → CivilEngineer(x))"
    },
    {
        "NL": "A car that is luxury can allure drivers.",
        "FOL": "∀x ∀y (Car(x) ∧ Luxury(x) ∧ Driver(y) → CanAllure(x, y))"
    },
    {
        "NL": "An item is classified as antique if it is more than 100 years old, has historical significance and original condition.",
        "FOL": "∀x (Item(x) ∧ IsMoreThanHundredYearsOld(x) ∧ HasHistoricalSignificance(x) ∧ OriginalCondition(x) → Antique(x))"
    },
    {
        "NL": "An instrument produces a pleasant sound if it has accurate tuning, a rich timbre, and a balanced resonance.",
        "FOL": "∀x ∀y ∀z (Instrument(x) ∧ AccurateTuning(x, y) ∧ RichTimbre(x, z) ∧ BalancedResonance(x) → PleasantSound(x))"
    },
    {
        "NL": "A musical instrument belongs to the percussion family if it produces sound by being struck, shaken, or scraped.",
        "FOL": "∀x (MusicalInstrument(x) ∧ (Struck(x) ∨ Shaken(x) ∨ Scraped(x)) → PercussionFamily(x))"
    },
    {
        "NL": "An athlete can win a race if they have proper training and endurance, but not if they are injured.",
        "FOL": "∀x (Athlete(x) ∧ ((ProperTraining(x) ∧ Endurance(x)) ∧ ¬Injured(x) → WinsRace(x)))"
    },
    {
        "NL": "Bacteria reproduce asexually, while animals and plants reproduce sexually.",
        "FOL": "∀x∀y∀z (Bacteria(x) ∧ Animal(y) ∧ Plant(z) → (ReproducesAsexually(x) ∧ ReproducesSexually(y) ∧ ReproducesSexually(z)))"
    },
    {
        "NL": "A person is considered a social worker if they help individuals, families, and communities to address and solve social problems.",
        "FOL": "∀x (Person(x) ∧ HelpsAddressSocialProblems(x) ∧ HelpsSolveSocialProblems(x) → SocialWorker(x))"
    },
    {
        "NL": "A type of pet can be either a dog or a cat.",
        "FOL": "∀x (PetType(x) → Dog(x) ⊕ Cat(x))"
    },
    {
        "NL": "In an electrical circuit, a current flows through conductive materials, transferring energy from one point to another.",
        "FOL": "∀x (ElectricalCircuit(x) → (CurrentFlows(x) ∧ ConductiveMaterials(x) ∧ TransfersEnergy(x)))"
    },
    {
        "NL": "A store is open 24 hours if it operates during the day and at night.",
        "FOL": "∀x (Store(x) ∧ Open24Hours(x) → (OperatesDuringDay(x) ∧ OperatesAtNight(x)))"
    },
    {
        "NL": "A carnivore primarily eats meat from other animals, such as mammals, birds, and fish.",
        "FOL": "∀x (Carnivore(x) → EatMeat(x, mammals) ∨ EatMeat(x, birds) ∨ EatMeat(x, fish))"
    },
    {
        "NL": "A company is multinational if it operates in multiple countries and has a global headquarters.",
        "FOL": "∀x (Multinational(x) ↔ (Company(x) ∧ ∃y (Country(y) ∧ OperatesIn(x, y)) ∧ ∃z (GlobalHeadquarters(z) ∧ Has(x, z))))"
    },
    {
        "NL": "An object is fragile if it can break easily when dropped or exposed to high pressure.",
        "FOL": "∀x (Object(x) ∧ (BreaksEasilyWhenDropped(x) ∨ BreaksEasilyUnderHighPressure(x)) → Fragile(x))"
    },
    {
        "NL": "All laptops that are lightweight and efficient are not affordable, or they are affordable but not lightweight and efficient.",
        "FOL": "∀x (Laptop(x) → ((Lightweight(x) ∧ Efficient(x) ∧ ¬Affordable(x)) ⊕ (Affordable(x) ∧ ¬(Lightweight(x) ∧ Efficient(x)))))"
    },
    {
        "NL": "A building is considered a skyscraper if it has more than 40 floors and stands taller than 150 meters.",
        "FOL": "∀x (Building(x) ∧ MoreThan40Floors(x) ∧ TallerThan150Meters(x) → Skyscraper(x))"
    },
    {
        "NL": "A person is regarded as a student if they are admitted to a college or university.",
        "FOL": "∀x (Person(x) ∧ (AdmittedToCollege(x) ∨ AdmittedToUniversity(x)) → Student(x))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity, and is used for applications such as powering homes, charging electric vehicles, and providing energy to remote locations.",
        "FOL": "∀x (SolarPanel(x) → (ConvertsSunlight(x) ∧ (PowerHomes(x) ∨ ChargeElectricVehicles(x) ∨ ProvideEnergyRemoteLocations(x))))"
    },
    {
        "NL": "A speaker engages their audience by speaking clearly, using visual aids, and telling relevant stories, but not if they speak monotonously.",
        "FOL": "∀x (Speaker(x) ∧ ((SpeakClearly(x) ∧ UseVisualAids(x) ∧ TellRelevantStories(x)) ∧ ¬SpeakMonotonously(x) → EngagesAudience(x)))"
    },
    {
        "NL": "A drone is an unmanned aerial vehicle that can be remotely controlled or programmed to fly autonomously, often used for aerial photography, surveillance, or delivery services.",
        "FOL": "∀x (Drone(x) ↔ (UnmannedAerialVehicle(x) ∧ (RemotelyControlled(x) ∨ ProgrammedToFlyAutonomously(x)) ∧ (UsedForAerialPhotography(x) ∨ UsedForSurveillance(x) ∨ UsedForDeliveryServices(x))))"
    },
    {
        "NL": "A medication is effective against an illness if it treats the symptoms and prevents further complications.",
        "FOL": "∀x ∀y ∀z (Medication(x) ∧ Illness(y) ∧ Symptoms(z) ∧ Treats(x, z) ∧ PreventsComplications(x, y) → EffectiveAgainst(x, y))"
    },
    {
        "NL": "A student x enrolls in a course y if x meets the prerequisites and y has available seats.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) ∧ MeetsPrerequisites(x, y) ∧ AvailableSeats(y) → Enrolls(x, y))"
    },
    {
        "NL": "A type of artwork that is created by applying pigment to a surface, often using brushes, and can depict various subjects such as landscapes, people, or abstract ideas is a painting.",
        "FOL": "∀x (Artwork(x) ∧ CreatedByApplyingPigment(x) ∧ UsesBrushes(x) ∧ CanDepictVariousSubjects(x) → Painting(x))"
    },
    {
        "NL": "Bakers prepare bread and pastries in bakeries using different types of flour and baking techniques.",
        "FOL": "∀x ∀y ∀z (Baker(x) ∧ (Bread(y) ∨ Pastry(y)) ∧ Bakery(z) → PreparesInUsing(x, y, z, w))"
    },
    {
        "NL": "A liquid substance that has a bitter taste, is used for cooking, and is derived from the fermentation of grapes is vinegar.",
        "FOL": "∀x (LiquidSubstance(x) ∧ BitterTaste(x) ∧ UsedForCooking(x) ∧ DerivedFromFermentationOfGrapes(x) → Vinegar(x))"
    },
    {
        "NL": "Some trees produce fruit, while others provide shade and do not produce fruit.",
        "FOL": "∃x ∃y (Tree(x) ∧ Tree(y) ∧ ProducesFruit(x) ∧ ProvidesShade(y) ∧ ¬ProducesFruit(y))"
    },
    {
        "NL": "A book is intriguing when it doesn't have a predictable storyline and features elements of mystery or science fiction.",
        "FOL": "∀x (Book(x) ∧ ¬PredictableStoryline(x) ∧ (Mystery(x) ∨ ScienceFiction(x)) → Intriguing(x))"
    },
    {
        "NL": "A boat floats if it is buoyant and not overloaded.",
        "FOL": "∀x (Boat(x) ∧ Buoyant(x) ∧ ¬Overloaded(x) → Floats(x))"
    },
    {
        "NL": "A product is environmentally friendly if it is made from recycled materials and is biodegradable.",
        "FOL": "∀x (Product(x) ∧ MadeFromRecycledMaterials(x) ∧ Biodegradable(x) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "Not every object that circles about a great body is circular.",
        "FOL": "¬∀x ∃y (Great(y) ∧ Circles(x, y) → Circular(x))"
    },
    {
        "NL": "If a person is a mechanic, they repair vehicles.",
        "FOL": "∀x (Person(x) ∧ Mechanic(x) → RepairVehicles(x))"
    },
    {
        "NL": "Something is a full cup, and something is an empty plate.",
        "FOL": "∃x (Full(x) ∧ Cup(x)) ∧ ∃x (Empty(x) ∧ Plate(x))"
    },
    {
        "NL": "A fish swims, but neither walks nor flies.",
        "FOL": "∀x (Fish(x) → (Swim(x) ∧ ¬Walk(x) ∧ ¬Fly(x)))"
    },
    {
        "NL": "A wind turbine generates electricity by converting kinetic energy from wind into mechanical energy.",
        "FOL": "∀x ∀y ∀z (WindTurbine(x) ∧ Electricity(y) ∧ KineticEnergy(z) ∧ FromWind(z) ∧ ConvertsToMechanicalEnergy(x, z) → Generates(x, y))"
    },
    {
        "NL": "A place is a volcano if it is a vent in the Earth's surface through which molten rock, ash, and gases are expelled.",
        "FOL": "∀x (Volcano(x) ↔ (Place(x) ∧ VentInEarthsSurface(x) ∧ ExpelsMoltenRock(x) ∧ ExpelsAsh(x) ∧ ExpelsGases(x)))"
    },
    {
        "NL": "A public park features recreational areas for various activities, like sports, picnicking, and hiking, and maintains clean and safe spaces for visitors.",
        "FOL": "∀x (PublicPark(x) ∧ (SportsAreas(x) ∨ PicnicAreas(x) ∨ HikingTrails(x)) → MaintainsCleanAndSafeSpaces(x))"
    },
    {
        "NL": "No scientist who examines every experiment is dismissed by anyone.",
        "FOL": "∀x (Scientist(x) → ∀y ((Experiment(y) → Examine(x, y)) → ¬∃z (Person(z) ∧ Dismiss(z, x))))"
    },
    {
        "NL": "Every chef is a professional, but not every professional is a chef.",
        "FOL": "∀x (Chef(x) → Professional(x)) ∧ ¬∀x (Professional(x) → Chef(x))"
    },
    {
        "NL": "Some buildings are tall, modern, and eco-friendly.",
        "FOL": "∃x (Building(x) ∧ Tall(x) ∧ Modern(x) ∧ EcoFriendly(x))"
    },
    {
        "NL": "Dogs bark to communicate, while cats meow and cannot bark.",
        "FOL": "∀x∀y (Dog(x) → Bark(x)) ∧ (Cat(y) → (Meow(y) ∧ ¬Bark(y)))"
    },
    {
        "NL": "Every bishop is a chess piece, but not every chess piece is a bishop.",
        "FOL": "∀x (Bishop(x) → ChessPiece(x)) ∧ ¬∀x (ChessPiece(x) → Bishop(x))"
    },
    {
        "NL": "An athlete is successful when they consistently perform at a high level, win numerous competitions, and have a strong work ethic.",
        "FOL": "∀x ∀y ∀z (Athlete(x) ∧ ConsistentlyPerformsAtHighLevel(x, y) ∧ WinsNumerousCompetitions(x, z) ∧ StrongWorkEthic(x) → Successful(x))"
    },
    {
        "NL": "A smartphone is classified as premier if it holds a quick processing unit and an enormous memory bank.",
        "FOL": "∀x (Smartphone(x) ∧ HasQuickProcessingUnit(x) ∧ HasEnormousMemoryBank(x) → Premier(x))"
    },
    {
        "NL": "A flashlight emits light to illuminate dark areas, while a compass indicates direction for navigation.",
        "FOL": "∀x ∀y (Flashlight(x) ∧ Compass(y) → (EmitsLight(x) ∧ IlluminatesDarkAreas(x) ∧ IndicatesDirection(y) ∧ ForNavigation(y)))"
    },
    {
        "NL": "A computer network functions efficiently when the devices are compatible, the connections are stable, and the network traffic is managed properly.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ Devices(y) ∧ Connections(z) ∧ Compatible(y) ∧ Stable(z) ∧ ProperlyManagedTraffic(x) → FunctionsEfficiently(x))"
    },
    {
        "NL": "Fire is hot, while ice is cold.",
        "FOL": "∀x∀y (Fire(x) ∧ Ice(y) → (IsHot(x) ∧ IsCold(y)))"
    },
    {
        "NL": "A ticket can grant access to a museum or a concert, but not both.",
        "FOL": "∀x (Ticket(x) → (AccessToMuseum(x) ⊕ AccessToConcert(x)))"
    },
    {
        "NL": "A vehicle with a specific type of engine and designed for a particular terrain is most likely a car or a motorcycle.",
        "FOL": "∀x∀y∀z (Vehicle(x) ∧ HasEngineType(x, y) ∧ DesignedForTerrain(x, z) → (Car(x) ∨ Motorcycle(x)))"
    },
    {
        "NL": "If Brian is not a chef then Laura is an engineer.",
        "FOL": "¬Chef(brian) → Engineer(laura)"
    },
    {
        "NL": "A cake is considered a birthday cake if it has candles, frosting, and a celebratory message written on it.",
        "FOL": "∀x (Cake(x) ∧ BirthdayCake(x) ↔ (Candles(x) ∧ Frosting(x) ∧ CelebratoryMessage(x)))"
    },
    {
        "NL": "A device that measures both temperature and humidity is called a hygrometer.",
        "FOL": "∀x (Device(x) ∧ MeasuresTemperature(x) ∧ MeasuresHumidity(x) → Hygrometer(x))"
    },
    {
        "NL": "An alternative energy strategy, like nuclear or fusion, can yield power without consuming ore reserves, and assists in curbing nitrous oxide pollution.",
        "FOL": "∀x (AlternativeEnergyStrategy(x) ∧ (NuclearStrategy(x) ∨ FusionStrategy(x)) → (YieldPower(x) ∧ ¬ConsumeOreReserves(x)) ∧ AssistsInCurbingNitrousOxidePollution(x))"
    },
    {
        "NL": "A chef is preparing a meal in the kitchen, or a painter is painting a mural in the studio.",
        "FOL": "∃x ∃y (Chef(x) ∧ Meal(y) ∧ Preparing(x, y) ∧ InTheKitchen(x)) ∨ ∃z ∃w (Painter(z) ∧ Mural(w) ∧ Painting(z, w) ∧ InTheStudio(z))"
    },
    {
        "NL": "Photographers capture images by adjusting the camera settings and framing the subject.",
        "FOL": "∀x (Photographer(x) → (AdjustCameraSettings(x) ∧ FrameSubject(x)))"
    },
    {
        "NL": "A piece of writing that expresses the author's thoughts, feelings, or experiences in an imaginative, lyrical manner, often utilizing rhyme and meter, is a poem.",
        "FOL": "∀x (PieceOfWriting(x) ∧ ExpressesAuthorThoughtsFeelingsOrExperiences(x) ∧ ImaginativeLyricalManner(x) ∧ OftenUtilizesRhymeAndMeter(x) → Poem(x))"
    },
    {
        "NL": "A parent gives a toy to their child if the child behaves well and the toy is safe.",
        "FOL": "∀x ∀y ∀z (Parent(x) ∧ Child(y) ∧ Toy(z) ∧ BehavesWell(y) ∧ Safe(z) → GivesToy(x, y, z))"
    },
    {
        "NL": "Some materials are recyclable, others are compostable, and a few materials are neither recyclable nor compostable.",
        "FOL": "∃x∃y∃z (Material(x) ∧ Material(y) ∧ Material(z) ∧ ((Recyclable(x) ∧ ¬Compostable(x)) ∨ (¬Recyclable(y) ∧ Compostable(y)) ∨ (¬Recyclable(z) ∧ ¬Compostable(z))))"
    },
    {
        "NL": "A bird migrates to a warmer climate in winter to find food, avoid harsh weather, and breed.",
        "FOL": "∀b ∀w ∀f (Bird(b) ∧ WarmerClimate(w) ∧ Food(f) → (Migrates(b, w) ↔ (FindsFood(b, f) ∧ AvoidsHarshWeather(b) ∧ Breeds(b))))"
    },
    {
        "NL": "In a team, the coach is responsible for developing the players' skills, while the manager oversees logistics and finances.",
        "FOL": "∀x ∀y ∀z (Team(x) ∧ Coach(y) ∧ Manager(z) → (DevelopsPlayerSkills(y, x) ∧ OverseesLogisticsAndFinances(z, x)))"
    },
    {
        "NL": "A doctor prescribes medication to patients only if they have an illness that requires treatment.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) → (HasIllnessRequiringTreatment(y) → PrescribesMedication(x, y)))"
    },
    {
        "NL": "A researcher conducts an experiment, collects data, and analyzes the results.",
        "FOL": "∀x∀y∀z (Researcher(x) ∧ Experiment(y) → (Conducts(x, y) ∧ CollectsData(x, z) ∧ AnalyzesResults(x, z)))"
    },
    {
        "NL": "A hammer drives nails into surfaces with force and precision.",
        "FOL": "∀x ∀y ∀z (Hammer(x) ∧ Nails(y) ∧ SurfacesForcePrecision(z) → DrivesInto(x, y, z))"
    },
    {
        "NL": "Each email in my inbox is unread.",
        "FOL": "∀x (Email(x) → IsUnread(x))"
    },
    {
        "NL": "A job applicant is successful if they have the required experience and good communication skills, or if they have a strong professional network.",
        "FOL": "∀x (JobApplicant(x) ∧ ((RequiredExperience(x) ∧ GoodCommunication(x)) ∨ StrongNetwork(x)) → Successful(x))"
    },
    {
        "NL": "A guitar teacher who has tutored a beginner without any aid, either has performed in more than three concerts or trains all advanced learners.",
        "FOL": "∀x (GuitarTeacher(x) ∧ ∃y (Beginner(y) ∧ ¬HasAid(y) ∧ Tutored(x, y)) → (PerformedInMoreThanThreeConcerts(x) ∨ ∀z (AdvancedLearner(z) → Trains(x, z))))"
    },
    {
        "NL": "Musicians can compose music, perform live, and inspire fans.",
        "FOL": "∀x (Musician(x) → (ComposesMusic(x) ∧ PerformsLive(x) ∧ InspiresFans(x)))"
    },
    {
        "NL": "Birds have feathers and can fly.",
        "FOL": "∀x (Bird(x) → (HasFeathers(x) ∧ CanFly(x)))"
    },
    {
        "NL": "Some games are both educational and designed for children.",
        "FOL": "∃x (Game(x) ∧ Educational(x) ∧ DesignedForChildren(x))"
    },
    {
        "NL": "A flower blooms when it receives sufficient sunlight and adequate water but not in extremely cold temperatures.",
        "FOL": "∀x (Flower(x) ∧ ReceivesSunlight(x) ∧ AdequateWater(x) ∧ ¬ExtremelyCold(x) → Blooms(x))"
    },
    {
        "NL": "A building that has multiple floors, is used for residential purposes, and has a shared entrance for all residents is an apartment building.",
        "FOL": "∀x∀y∀z (Building(x) ∧ MultipleFloors(x) ∧ ResidentialPurpose(y) ∧ SharedEntrance(z) ∧ UsedFor(x, y) ∧ EntranceFor(x, z) → ApartmentBuilding(x))"
    },
    {
        "NL": "A room is well-lit when it has sufficient natural or artificial light.",
        "FOL": "∀x (Room(x) → (WellLit(x) ↔ (SufficientNaturalLight(x) ∨ SufficientArtificialLight(x))))"
    },
    {
        "NL": "If anything is sweet, then all matters are oriented towards a rectange.",
        "FOL": "∃x (Sweet(x) → ∀y ∃z (Rectangle(z) ∧ PointsTo(y, z)))"
    },
    {
        "NL": "A plant that absorbs water and nutrients through roots, utilizes photosynthesis, and reproduces by producing seeds is called a vascular plant.",
        "FOL": "∀x (Plant(x) ∧ AbsorbsWaterAndNutrients(x) ∧ UtilizesPhotosynthesis(x) ∧ ReproducesBySeeds(x) → VascularPlant(x))"
    },
    {
        "NL": "A restaurant serves either breakfast or lunch, but not both.",
        "FOL": "∀x (Restaurant(x) → (ServesBreakfast(x) ⊕ ServesLunch(x)))"
    },
    {
        "NL": "A game is a multiplayer if it supports at least two players and offers online or local play.",
        "FOL": "∀x (Game(x) ∧ SupportsTwoPlayers(x) ∧ (OffersOnlinePlay(x) ∨ OffersLocalPlay(x)) → Multiplayer(x))"
    },
    {
        "NL": "A chess match ends in a draw when there is insufficient material for either player to win, or when threefold repetition occurs.",
        "FOL": "∀x (ChessMatch(x) ∧ (InsufficientMaterial(x) ∨ ThreefoldRepetition(x)) → Draw(x))"
    },
    {
        "NL": "Only the brave fight.",
        "FOL": "∀x (¬Brave(x) → ¬Fight(x))"
    },
    {
        "NL": "A medical professional can be a doctor, a nurse, or a pharmacist, but not multiple professions at the same time.",
        "FOL": "∀x (MedicalProfessional(x) → (Doctor(x) ⊕ Nurse(x) ⊕ Pharmacist(x)))"
    },
    {
        "NL": "Emily cherishes a Tolkien story if and only if it is entertaining.",
        "FOL": "∀x (Story(x) ∧ WrittenBy(x, tolkien) → (Entertaining(x) ↔ Cherishes(emily, x)))"
    },
    {
        "NL": "Bats are nocturnal and feed at night, while pigeons are diurnal and feed during the day.",
        "FOL": "∀x (Bat(x) → (Nocturnal(x) ∧ FeedsAtNight(x))) ∧ ∀y (Pigeon(y) → (Diurnal(y) ∧ FeedsDuringDay(y)))"
    },
    {
        "NL": "An electronic device that can store, retrieve, and process data, has a keyboard and a screen, and is designed for portability is classified as a laptop.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CanStoreRetrieveAndProcessData(x) ∧ HasKeyboard(x) ∧ HasScreen(x) ∧ DesignedForPortability(x) → Laptop(x))"
    },
    {
        "NL": "A shoe is suitable for running when it has good traction, cushioning, and is lightweight.",
        "FOL": "∀x (Shoe(x) → (GoodTraction(x) ∧ Cushioning(x) ∧ Lightweight(x) → SuitableForRunning(x)))"
    },
    {
        "NL": "If a plant receives sunlight, water, and nutrients, it grows.",
        "FOL": "∀x (Plant(x) ∧ ReceivesSunlight(x) ∧ ReceivesWater(x) ∧ ReceivesNutrients(x) → Grows(x))"
    },
    {
        "NL": "A person who studies and observes the behavior and characteristics of animals in their natural habitats is a zoologist.",
        "FOL": "∀x (Person(x) ∧ StudiesAnimalBehavior(x) ∧ ObservesAnimalCharacteristics(x) ∧ StudiesInNaturalHabitats(x) → Zoologist(x))"
    },
    {
        "NL": "There is a car that every driver drives if no rectangles have ten sides.",
        "FOL": "¬∀x (Rectangle(x) → TenSides(x)) → ∃y (Car(y) ∧ ∀z (Driver(z) → Drives(z, y)))"
    },
    {
        "NL": "A meal is delicious if it contains rich flavors and appealing textures.",
        "FOL": "∀x (Meal(x) ∧ ContainsRichFlavors(x) ∧ HasAppealingTextures(x) → Delicious(x))"
    },
    {
        "NL": "A telescope helps in observing distant objects by magnifying their images.",
        "FOL": "∀x∀y (Telescope(x) ∧ DistantObject(y) ∧ (HelpsObserve(x, y) ↔ MagnifiesImage(x, y)))"
    },
    {
        "NL": "A storm is intense if it displays strong winds, heavy rain, and the chance of lightning or hail.",
        "FOL": "∀x (Storm(x) ∧ DisplaysStrongWinds(x) ∧ HeavyRain(x) ∧ (ChanceOfLightning(x) ∨ ChanceOfHail(x)) → Intense(x))"
    },
    {
        "NL": "A novel can be romance, mystery, or science fiction, but not a combination of these genres.",
        "FOL": "∀x (Novel(x) → (Romance(x) ⊕ Mystery(x) ⊕ ScienceFiction(x)))"
    },
    {
        "NL": "A teacher educates students in a classroom.",
        "FOL": "∀x∀y (Teacher(x) ∧ Student(y) → Educates(x, y))"
    },
    {
        "NL": "A violin is a string instrument and can be played with a bow or plucked.",
        "FOL": "∀x (Violin(x) → (StringInstrument(x) ∧ (PlayedWithBow(x) ∨ Plucked(x))))"
    },
    {
        "NL": "If every dancer who is set to perform is a professional, then some performers won't perform.",
        "FOL": "∀x (Dancer(x) ∧ Perform(x) → Professional(x)) → ∃y (Performer(y) ∧ ¬Perform(y))"
    },
    {
        "NL": "Doctors treat patients, and nurses assist doctors.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Nurse(z) → (Treats(x, y) ∧ Assists(z, x)))"
    },
    {
        "NL": "An object is considered a toy if it is designed for children to play with.",
        "FOL": "∀x (Object(x) ∧ DesignedForChildren(x) ∧ DesignedForPlay(x) → Toy(x))"
    },
    {
        "NL": "A game is exciting if the score is close and time is running out.",
        "FOL": "∀x (Game(x) ∧ CloseScore(x) ∧ TimeRunningOut(x) → Exciting(x))"
    },
    {
        "NL": "An electronic component that stores electrical energy, can discharge stored energy, and has two conductive plates separated by an insulator is a capacitor.",
        "FOL": "∀x (ElectronicComponent(x) ∧ StoresElectricalEnergy(x) ∧ CanDischargeStoredEnergy(x) ∧ HasTwoConductivePlatesWithInsulator(x) → Capacitor(x))"
    },
    {
        "NL": "Bacteria reproduce asexually through binary fission, resulting in two genetically identical daughter cells.",
        "FOL": "∀x ∀y (Bacterium(x) ∧ AsexualReproduction(a) ∧ BinaryFission(b) ∧ GeneticallyIdenticalDaughterCells(y) → ReproducesThrough(x, a, b, y))"
    },
    {
        "NL": "A healthy diet includes consuming a variety of fruits, vegetables, whole grains, and lean proteins while avoiding excessive sugar and unhealthy fats.",
        "FOL": "∀x (HealthyDiet(x) → (ConsumesVarietyOfFruits(x) ∧ ConsumesVarietyOfVegetables(x) ∧ ConsumesWholeGrains(x) ∧ ConsumesLeanProteins(x) ∧ AvoidsExcessiveSugar(x) ∧ AvoidsUnhealthyFats(x)))"
    },
    {
        "NL": "A doctor diagnoses patients and prescribes medication based on their symptoms.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Symptoms(y, z) → (Diagnoses(x, y) ∧ PrescribesMedication(x, y, z)))"
    },
    {
        "NL": "Birds build nests using materials like twigs, grass, and leaves to protect their eggs and young.",
        "FOL": "∀x∀y∀z∀w (Bird(x) ∧ Nest(y) ∧ Material(z) ∧ (Twigs(w) ∨ Grass(w) ∨ Leaves(w)) → (Builds(x, y, z) ∧ Protects(x, y, w)))"
    },
    {
        "NL": "It is not true that there exists a box that encloses all purple pentagons.",
        "FOL": "¬∃x (Box(x) ∧ ∀y (Purple(y) ∧ Pentagon(y) → Encloses(x, y)))"
    },
    {
        "NL": "Every book is fascinating if and only if it is either a thriller or a mystery.",
        "FOL": "∀x (Book(x) → (Fascinating(x) ↔ (Thriller(x) ∨ Mystery(x))))"
    },
    {
        "NL": "An athlete can participate in only one of the following sports: soccer, basketball, or tennis.",
        "FOL": "∀x (Athlete(x) → (Soccer(x) ⊕ Basketball(x) ⊕ Tennis(x)))"
    },
    {
        "NL": "Lions are carnivores that live in prides, while tigers are solitary predators.",
        "FOL": "∀x∀y (Lion(x) ∧ Tiger(y) → (Carnivore(x) ∧ LiveInPrides(x) ∧ SolitaryPredator(y)))"
    },
    {
        "NL": "When attending a party, Jane wears a dress and brings a gift.",
        "FOL": "∀x (Party(x) ∧ Attends(Jane, x) → (Wears(Jane, Dress) ∧ Brings(Jane, Gift)))"
    },
    {
        "NL": "A scientific theory is considered valid if it is supported by experimental evidence and can make accurate predictions about future events.",
        "FOL": "∀x (ScientificTheory(x) ∧ Valid(x) ↔ (SupportedByExperimentalEvidence(x) ∧ AccuratePredictions(x, y)))"
    },
    {
        "NL": "A renewable energy source can be replenished naturally and continuously.",
        "FOL": "∀x (RenewableEnergySource(x) → CanBeReplenishedNaturallyAndContinuously(x))"
    },
    {
        "NL": "A person is admired by the artist whom all fans appreciate",
        "FOL": "∃x ∃y ∀z (Person(x) ∧ Artist(y) ∧ Fan(z) ∧ Appreciate(z, y) → AdmiredBy(x, y))"
    },
    {
        "NL": "A spider catches its prey using a web made of silk.",
        "FOL": "∀x∀y (Spider(x) ∧ Prey(y) → CatchesUsingSilkWeb(x, y))"
    },
    {
        "NL": "A museum displays artifacts when the exhibits are open to the public and the items are properly presented.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ OpenToPublic(x) ∧ Artifact(y) ∧ ProperlyPresented(y, z) → Displays(x, y))"
    },
    {
        "NL": "A scientist is conducting an experiment in the lab, while a technician is fixing a machine in the maintenance room.",
        "FOL": "∃x ∃y (Scientist(x) ∧ Experiment(y) ∧ Conducting(x, y) ∧ InTheLab(x)) ∧ ∃z ∃w (Technician(z) ∧ Machine(w) ∧ Fixing(z, w) ∧ InTheMaintenanceRoom(z))"
    },
    {
        "NL": "All animals need oxygen to survive.",
        "FOL": "∀x (Animal(x) → ∃y (Oxygen(y) ∧ Need(x, y)))"
    },
    {
        "NL": "If a person is a teacher, they teach students.",
        "FOL": "∀x (Teacher(x) → ∃y (Teaches(x, y)))"
    },
    {
        "NL": "A successful conference connects professionals, fosters knowledge exchange, and encourages collaboration in a given field.",
        "FOL": "∀x (Conference(x) ∧ ConnectsProfessionals(x) ∧ FostersKnowledgeExchange(x) ∧ EncouragesCollaboration(x) → Successful(x))"
    },
    {
        "NL": "A flashlight can be turned on or off, but not both.",
        "FOL": "∀x (Flashlight(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A planet is habitable if and only if it's not inhospitable or is earth.",
        "FOL": "∀x (Planet(x) → (Habitable(x) ↔ (¬Inhospitable(x) ∨ IsEarth(x))))"
    },
    {
        "NL": "Not every engineer who innovates will patent an invention, but only those who innovate will patent an invention.",
        "FOL": "¬∀x (Innovates(x) → PatentsInvention(x)) ∧ ∀y (PatentsInvention(y) → Innovates(y))"
    },
    {
        "NL": "A plant grows when it receives sunlight and absorbs nutrients from the soil.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ Sunlight(y) ∧ Nutrients(z) ∧ Receives(x, y) ∧ AbsorbsFromSoil(x, z) → Grows(x))"
    },
    {
        "NL": "A software application is open-source if its source code is made available to the public, allowing modifications and redistribution.",
        "FOL": "∀x (SoftwareApplication(x) ∧ SourceCodeAvailableToPublic(x) ∧ AllowsModificationsAndRedistribution(x) → OpenSource(x))"
    },
    {
        "NL": "There is no heaviest element, nor a lightest element.",
        "FOL": "∀x (Element(x) → (∃y (Element(y) ∧ Heavier(y, x)) ∧ ∃z (Element(z) ∧ Lighter(z, x))))"
    },
    {
        "NL": "If a plant is tropical, then it thrives in high temperature and high humidity.",
        "FOL": "∀x (Plant(x) ∧ Tropical(x) → ThrivesInHighTemperature(x) ∧ ThrivesInHighHumidity(x))"
    },
    {
        "NL": "A pharmacy dispenses prescription medications to patients and provides over-the-counter drugs for various health conditions.",
        "FOL": "∀x∀y∀z∀w (Pharmacy(x) ∧ PrescriptionMedication(y) ∧ Patient(z) ∧ OverTheCounterDrug(w) → (DispensesTo(x, y, z) ∧ ProvidesForHealthConditions(x, w)))"
    },
    {
        "NL": "A vehicle can be a car or a truck.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "A star can be visible to the naked eye if its apparent magnitude is less than or equal to 6.",
        "FOL": "∀x∀y (Star(x) ∧ ApparentMagnitude(x, y) ∧ LessThanOrEqualTo(y, 6) → VisibleToNakedEye(x))"
    },
    {
        "NL": "Some foods are spicy and some foods are sweet, but there are no sweet spicy foods.",
        "FOL": "∃x (Spicy(x)) ∧ ∃x (Sweet(x)) ∧ ¬∃x (Spicy(x) ∧ Sweet(x))"
    },
    {
        "NL": "A book is either digital or physical, and it cannot teleport between locations.",
        "FOL": "∀x (Book(x) → (Digital(x) ∨ Physical(x)) ∧ ¬Teleports(x))"
    },
    {
        "NL": "A cat is sleeping on the chair, and a dog is running in the park.",
        "FOL": "∃x ∃y (Cat(x) ∧ Chair(y) ∧ SleepingOn(x, y)) ∧ ∃z (Dog(z) ∧ Running(z) ∧ InThePark(z))"
    },
    {
        "NL": "A black hole attracts nearby objects due to its immense gravitational force.",
        "FOL": "∀x ∀y (BlackHole(x) ∧ NearbyObject(y) → (ImmenselyGravitational(x) → Attracts(x, y)))"
    },
    {
        "NL": "A tree provides shade if it has a large canopy, a tall trunk, and dense foliage.",
        "FOL": "∀x (Tree(x) ∧ LargeCanopy(x) ∧ TallTrunk(x) ∧ DenseFoliage(x, y) → ProvidesShade(x))"
    },
    {
        "NL": "Any aquatic creature that has gills, lays eggs, and has slippery skin is a fish.",
        "FOL": "∀x (AquaticCreature(x) ∧ HasGills(x) ∧ LaysEggs(x) ∧ HasSlipperySkin(x) → Fish(x))"
    },
    {
        "NL": "A store that sells both furniture and electronics must also sell appliances.",
        "FOL": "∀x (Store(x) ∧ SellsFurniture(x) ∧ SellsElectronics(x) → SellsAppliances(x))"
    },
    {
        "NL": "A course is well-designed if it has engaging content and either a knowledgeable instructor or comprehensive resources, but not both.",
        "FOL": "∀x (Course(x) ∧ EngagingContent(x) ∧ (KnowledgeableInstructor(x) ⊕ ComprehensiveResources(x)) → WellDesigned(x))"
    },
    {
        "NL": "A museum displays paintings, sculptures, or historical artifacts.",
        "FOL": "∀x (Museum(x) → ∃y ∃z ∃w (Display(x, y, Paintings) ∨ Display(x, z, Sculptures) ∨ Display(x, w, HistoricalArtifacts)))"
    },
    {
        "NL": "A person is a philanthropist if they donate significant resources to charitable causes.",
        "FOL": "∀x (Person(x) ∧ DonatesSignificantResources(x) → Philanthropist(x))"
    },
    {
        "NL": "Flying reptiles exist.",
        "FOL": "∃x (Reptile(x) ∧ Fly(x))"
    },
    {
        "NL": "Objects that float on water are less dense than water.",
        "FOL": "∀x (Object(x) ∧ FloatsOnWater(x) → (Density(x) ∧ ¬DenserThanWater(x)))"
    },
    {
        "NL": "A farm produces agricultural goods, such as crops, livestock, and dairy products, by utilizing natural resources like soil, water, and sunlight.",
        "FOL": "∀x ∀y ∀z (Farm(x) → (ProducesAgriculturalGoods(x, y) ∧ (Crops(y) ∨ Livestock(y) ∨ DairyProducts(y)) ∧ UtilizingNaturalResources(x, z) ∧ (Soil(z) ∨ Water(z) ∨ Sunlight(z))))"
    },
    {
        "NL": "Everything that is either a yellow triangle or a blue square points to something that is either large or small.",
        "FOL": "∀x ((Yellow(x) ∧ Triangle(x)) ∨ (Blue(x) ∧ Square(x)) → ∃y (Large(y) ∨ Small(y) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "A garden flourishes when it has nutrient-rich soil and receives adequate sunlight.",
        "FOL": "∀x ∀y (Garden(x) ∧ NutrientRichSoil(y) ∧ AdequateSunlight(x) → Flourishes(x))"
    },
    {
        "NL": "No student who studies either math or physics is unintelligent, and not each one of them is a scholar.",
        "FOL": "¬∃x (Student(x) ∧ (StudiesMath(x) ∨ StudiesPhysics(x)) ∧ Unintelligent(x)) ∧ ¬∀y (Student(y) → Scholar(y))"
    },
    {
        "NL": "A cat purrs, chases mice, and grooms itself.",
        "FOL": "∀x (Cat(x) → (Purrs(x) ∧ Chases(x, y) ∧ Mice(y) ∧ Grooms(x)))"
    },
    {
        "NL": "A student fails a course if they receive a low grade on the final exam and do not complete the required assignments.",
        "FOL": "∀x (Student(x) ∧ LowGradeOnFinal(x) ∧ ¬CompletedRequiredAssignments(x) → FailCourse(x))"
    },
    {
        "NL": "A software is reliable if it is well-documented, frequently updated, and has responsive support, but not if it has too many bugs.",
        "FOL": "∀x (Software(x) ∧ Reliable(x) ↔ (WellDocumented(x) ∧ FrequentlyUpdated(x) ∧ ResponsiveSupport(x) ∧ ¬TooManyBugs(x)))"
    },
    {
        "NL": "If an individual is a doctor, they either practice in a hospital or at a medical school.",
        "FOL": "∀x (Individual(x) ∧ Doctor(x) → PracticeInHospital(x) ⊕ PracticeInMedicalSchool(x))"
    },
    {
        "NL": "Not every fruit is either an apple or an orange.",
        "FOL": "¬∀x (Fruit(x) → (Apple(x) ∨ Orange(x)))"
    },
    {
        "NL": "It's incorrect to allege that every pig that can oink is a farm animal, and no such pig is a piglet.",
        "FOL": "¬∀x (Pig(x) ∧ CanOink(x) → FarmAnimal(x)) ∧ ¬∃y (Pig(y) ∧ CanOink(y) ∧ Piglet(y))"
    },
    {
        "NL": "A ball bounces when it hits a solid surface and compresses.",
        "FOL": "∀x ∀y (Ball(x) ∧ SolidSurface(y) → (Hits(x, y) ∧ Compresses(x) → Bounces(x)))"
    },
    {
        "NL": "A person who cooks professionally is called a chef.",
        "FOL": "∀x (Person(x) ∧ CooksProfessionally(x) → Chef(x))"
    },
    {
        "NL": "No cat eats cheese.",
        "FOL": "∀x ∀y (Cat(x) ∧ Cheese(y) → ¬Eat(x, y))"
    },
    {
        "NL": "There is a festival to which every singer contributes if some polygons do not have five corners.",
        "FOL": "¬∀x (Polygon(x) → FiveCorners(x)) → ∃y (Festival(y) ∧ ∀z (Singer(z) → ContributesTo(z, y)))"
    },
    {
        "NL": "A painting is created with paint and displayed on a canvas.",
        "FOL": "∀x (Painting(x) → (CreatedWithPaint(x) ∧ DisplayedOnCanvas(x)))"
    },
    {
        "NL": "A book can be categorized based on its genre, such as fiction, non-fiction, or poetry, and its target audience, such as children, young adults, or adults.",
        "FOL": "∀x∀y∀z (Book(x) ∧ (Fiction(y) ∨ NonFiction(y) ∨ Poetry(y)) ∧ (Children(z) ∨ YoungAdults(z) ∨ Adults(z)) → CategorizedByGenreAndAudience(x, y, z))"
    },
    {
        "NL": "A power bank stores power and supplies it when the device needs to be charged.",
        "FOL": "∀x (PowerBank(x) → (StoresPower(x) ∧ (NeedsToBeCharged(x) → SuppliesPower(x))))"
    },
    {
        "NL": "A material deforms elastically when it is under stress, not exceeding its elastic limit, and the load is not removed.",
        "FOL": "∀x (Material(x) ∧ UnderStress(x) ∧ ¬ExceedsElasticLimit(x) ∧ ¬LoadRemoved(x) → DeformsElastically(x))"
    },
    {
        "NL": "In a desert ecosystem, cacti store water in their thick stems, and camouflaged animals blend in with their surroundings to avoid predators.",
        "FOL": "∀x ∀y (DesertEcosystem(x) ∧ (Cacti(y) ∧ StoresWaterInThickStems(x, y)) ∧ (CamouflagedAnimals(x) ∧ BlendsInWithSurroundings(x)))"
    },
    {
        "NL": "A machine that produces electrical power, relies on the conversion of mechanical energy, and is driven by a prime mover such as a turbine or an engine is a generator.",
        "FOL": "∀x∀y∀z (Machine(x) ∧ ProducesElectricalPower(x) ∧ ReliesOnConversionOfMechanicalEnergy(x, y) ∧ DrivenByPrimeMover(x, z) → Generator(x))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, and pedals, enabling human-powered transportation over various terrains.",
        "FOL": "∀x (Bicycle(x) ↔ (HasTwoWheels(x) ∧ HasFrame(x) ∧ HasPedals(x) ∧ EnablesHumanPoweredTransportation(x)))"
    },
    {
        "NL": "An ice cream cone contains a scoop of ice cream, a cone, and optionally toppings.",
        "FOL": "∀x ∀y ∀z (IceCreamCone(x) → (ScoopOfIceCream(x, y) ∧ Cone(x) ∧ (Toppings(x, z) ∨ ¬Toppings(x, z))))"
    },
    {
        "NL": "A recipe requires ingredients, is prepared by a chef, and can be either a main dish, a dessert, or an appetizer, but not more than one type.",
        "FOL": "∀x∀y∀z (Recipe(x) ∧ RequiresIngredients(x, y) ∧ PreparedBy(x, z) → (MainDish(x) ⊕ Dessert(x) ⊕ Appetizer(x)))"
    },
    {
        "NL": "An eco-friendly fuel, such as biomass or hydroelectric power, can provide energy without excessive carbon emission, and it aids in combating climate change.",
        "FOL": "∀x (EcofriendlyFuel(x) ∧ (Biomass(x) ∨ HydroelectricPower(x)) → (ProvidesEnergy(x) ∧ ¬ExcessiveCarbonEmission(x)) ∧ AidsCombatClimateChange(x))"
    },
    {
        "NL": "A coffee is decaffeinated if it has low caffeine content and is either made from decaf beans or has undergone a decaffeination process.",
        "FOL": "∀x (Coffee(x) ∧ LowCaffeineContent(x) ∧ (DecafBeans(x) ∨ DecaffeinationProcess(x)) → Decaffeinated(x))"
    },
    {
        "NL": "If a machine is automated, it operates with minimal human intervention.",
        "FOL": "∀x (Machine(x) ∧ Automated(x) → OperatesWithMinimalHumanIntervention(x))"
    },
    {
        "NL": "Carlos loves Anna and Emma.",
        "FOL": "Love(carlos, anna) ∧ Love(carlos, emma)"
    },
    {
        "NL": "An artist either creates paintings or sculptures, but not both, and can work with oil or acrylic.",
        "FOL": "∀x (Artist(x) → (((CreatesPaintings(x) ∧ ¬CreatesSculptures(x)) ∨ (¬CreatesPaintings(x) ∧ CreatesSculptures(x))) ∧ (WorksInOil(x) ∨ WorksInAcrylic(x))))"
    },
    {
        "NL": "A painter creates artwork that can evoke emotions or depict scenes from nature, history, or the imagination.",
        "FOL": "∀x∀y (Painter(x) ∧ Artwork(y) ∧ CreatedBy(y, x) → (EvokeEmotions(y) ∨ DepictScenes(y, Nature) ∨ DepictScenes(y, History) ∨ DepictScenes(y, Imagination)))"
    },
    {
        "NL": "Every officer is either at the station or on the patrol.",
        "FOL": "∀x (Officer(x) → (AtStation(x) ⊕ OnPatrol(x)))"
    },
    {
        "NL": "Every teacher is patient, but not every patient person is a teacher.",
        "FOL": "∀x (Teacher(x) → Patient(x)) ∧ ¬∀x (Patient(x) → Teacher(x))"
    },
    {
        "NL": "The bicycle has two wheels and requires manual pedaling.",
        "FOL": "∀x (Bicycle(x) → (HasWheels(x, 2) ∧ ManualPedaling(x)))"
    },
    {
        "NL": "A pizza is greasy if it has pepperoni or extra cheese.",
        "FOL": "∀x (Pizza(x) ∧ (HasPepperoni(x) ∨ HasExtraCheese(x)) → Greasy(x))"
    },
    {
        "NL": "A medical treatment is effective if it reduces symptoms, has minimal side effects, and improves the patient's quality of life.",
        "FOL": "∀x (MedicalTreatment(x) → (Effective(x) ↔ (ReducesSymptoms(x) ∧ MinimalSideEffects(x) ∧ ImprovesQualityOfLife(x))))"
    },
    {
        "NL": "A musical instrument that doesn't use strings can be a drum, a flute, or a trumpet.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ¬UsesStrings(x) → Drum(x) ⊕ Flute(x) ⊕ Trumpet(x))"
    },
    {
        "NL": "A food item is considered a dessert if it is typically eaten after a meal and is sweet.",
        "FOL": "∀x (FoodItem(x) → (Dessert(x) ↔ EatenAfterMeal(x) ∧ Sweet(x)))"
    },
    {
        "NL": "A volcano is considered active if it has erupted in the last 10,000 years.",
        "FOL": "∀x (Volcano(x) ∧ EruptedInLast10000Years(x) → Active(x))"
    },
    {
        "NL": "A planet orbits a star due to gravity.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) → OrbitsDueToGravity(x, y))"
    },
    {
        "NL": "A person who is a graphic designer creates visual designs using computer software.",
        "FOL": "∀x (GraphicDesigner(x) → CreatesVisualDesignsUsingComputerSoftware(x))"
    },
    {
        "NL": "A space probe is launched by a rocket, which propels it into space, allowing it to explore celestial bodies, gather data through onboard instruments, and transmit the information back to Earth for further analysis and study.",
        "FOL": "∀x∀y∀z (SpaceProbe(x) ∧ Rocket(y) ∧ Launches(y, x) → (PropelsIntoSpace(x) ∧ ExploresCelestialBodies(x) ∧ GathersData(x, onboardInstruments) ∧ TransmitsInformation(x, z, Earth) ∧ AnalyzesAndStudies(z)))"
    },
    {
        "NL": "A bird x migrates to region y during season z if the climate in y provides favorable conditions for finding food and breeding during z.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ Region(y) ∧ Season(z) ∧ FavorableClimate(y, z) ∧ FavorableFoodConditions(y, z) ∧ FavorableBreedingConditions(y, z) → MigratesTo(x, y, z))"
    },
    {
        "NL": "An amusement park offers a range of attractions, including roller coasters, water rides, and live shows, as well as food and souvenir shops.",
        "FOL": "∀x (AmusementPark(x) ∧ (RollerCoasters(x) ∨ WaterRides(x) ∨ LiveShows(x)) → HasFoodAndSouvenirShops(x))"
    },
    {
        "NL": "A valid password must include at least one uppercase letter, one lowercase letter, and one digit.",
        "FOL": "∀x (ValidPassword(x) ↔ (ContainsUppercaseLetter(x) ∧ ContainsLowercaseLetter(x) ∧ ContainsDigit(x)))"
    },
    {
        "NL": "A coffee machine can be automatic or manual.",
        "FOL": "∀x (CoffeeMachine(x) → (Automatic(x) ⊕ Manual(x)))"
    },
    {
        "NL": "An element belongs to the halogen group if it has seven valence electrons, forms diatomic molecules, and is highly reactive with alkali metals.",
        "FOL": "∀x (Element(x) ∧ SevenValenceElectrons(x) ∧ FormsDiatomicMolecules(x) ∧ HighlyReactiveWithAlkaliMetals(x) → Halogen(x))"
    },
    {
        "NL": "A baby can crawl before they walk, and some babies skip crawling and go straight to walking.",
        "FOL": "∀x ∀y (Baby(x) ∧ (Crawling(y) → Walking(y)) ∧ (Crawling(y) ∨ ¬Crawling(y) ∧ Walking(y)))"
    },
    {
        "NL": "A machine is operational if it has been maintained regularly and has no critical malfunctions.",
        "FOL": "∀x (Machine(x) ∧ MaintainedRegularly(x) ∧ ¬CriticalMalfunctions(x) → Operational(x))"
    },
    {
        "NL": "A solar eclipse occurs when the moon is between the sun and the Earth, blocking sunlight from reaching the Earth.",
        "FOL": "∀x (SolarEclipse(x) ↔ (MoonBetweenSunAndEarth(x) ∧ BlocksSunlight(x, Earth)))"
    },
    {
        "NL": "A tool is sharp if it can cut through materials.",
        "FOL": "∀x (Tool(x) ∧ CutsMaterials(x) → Sharp(x))"
    },
    {
        "NL": "A corporation produces smartphones, while another corporation produces tablets.",
        "FOL": "∃x ∃y (Corporation(x) ∧ Smartphone(y) ∧ Produce(x, y)) ∧ ∃z ∃w (Corporation(z) ∧ Tablet(w) ∧ Produce(z, w))"
    },
    {
        "NL": "A beach has sand, and a forest has trees.",
        "FOL": "∀x∀y (Beach(x) ∧ Forest(y) → (HasSand(x) ∧ HasTrees(y)))"
    },
    {
        "NL": "Every tablet is either Windows or Android, but not both.",
        "FOL": "∀x (Tablet(x) → (Windows(x) ⊕ Android(x)))"
    },
    {
        "NL": "A vehicle is a submarine if it operates underwater, is powered by engines, and uses ballast tanks to control buoyancy and depth.",
        "FOL": "∀x∀y∀z (Vehicle(x) ∧ OperatesUnderwater(x) ∧ PoweredByEngines(x, y) ∧ BallastTanks(z) ∧ UsesToControlBuoyancyAndDepth(x, z) → Submarine(x))"
    },
    {
        "NL": "A chemical reaction is exothermic if it releases heat energy to its surroundings, causing an increase in temperature.",
        "FOL": "∀x ∀y ∀z (ChemicalReaction(x) ∧ HeatEnergy(y) ∧ Surroundings(z) ∧ ReleasesHeatEnergyToSurroundings(x, y, z) → ExothermicReaction(x))"
    },
    {
        "NL": "A volcano is active if it experiences regular eruptions and emits gases.",
        "FOL": "∀x (Volcano(x) ∧ RegularEruptions(x) ∧ EmitsGases(x) → Active(x))"
    },
    {
        "NL": "A language is a programming language if it is used to create computer programs.",
        "FOL": "∀x (ProgrammingLanguage(x) ↔ (Language(x) ∧ UsedToCreatePrograms(x)))"
    },
    {
        "NL": "An instrument produces sound by vibrating a string, membrane, or column of air.",
        "FOL": "∀x (Instrument(x) ∧ ProducesSound(x) → (∃y (String(y) ∧ Vibrates(x, y)) ∨ ∃z (Membrane(z) ∧ Vibrates(x, z)) ∨ ∃w (AirColumn(w) ∧ Vibrates(x, w))))"
    },
    {
        "NL": "A substance that can transfer heat efficiently, allowing a rapid increase or decrease in temperature, and is typically used for cooking or manufacturing processes is a thermal conductor.",
        "FOL": "∀x (Substance(x) ∧ TransfersHeatEfficiently(x) ∧ AllowsRapidTemperatureChange(x) ∧ UsedForCookingOrManufacturing(x) → ThermalConductor(x))"
    },
    {
        "NL": "A professor is lecturing in a hall, and a student is studying under a lamp.",
        "FOL": "∃x ∃y (Professor(x) ∧ Hall(y) ∧ LecturingIn(x, y)) ∧ ∃z (Student(z) ∧ Studying(z) ∧ UnderTheLamp(z))"
    },
    {
        "NL": "A farm is productive if it has fertile land, an efficient irrigation system, and access to modern farming equipment.",
        "FOL": "∀x (Farm(x) → (Productive(x) ↔ (FertileLand(x) ∧ EfficientIrrigationSystem(x) ∧ AccessToModernFarmingEquipment(x))))"
    },
    {
        "NL": "Every book is intriguing if and only if it is either a fiction or an autobiography.",
        "FOL": "∀x (Book(x) → (Intriguing(x) ↔ (Fiction(x) ∨ Autobiography(x))))"
    },
    {
        "NL": "Big cars consume more fuel, while small cars consume less fuel.",
        "FOL": "∀x (Car(x) ∧ Big(x) → ConsumeMoreFuel(x)) ∧ ∀y (Car(y) ∧ Small(y) → ConsumeLessFuel(y))"
    },
    {
        "NL": "Every blue entity refers to a minimum of one item that only refers to pink items.",
        "FOL": "∀x (Blue(x) → ∃y (RefersTo(x, y) ∧ ¬∃z (RefersTo(y, z) ∧ ¬Pink(z))))"
    },
    {
        "NL": "If Bob is not an engineer then he is an engineer.",
        "FOL": "¬Engineer(bob) → Engineer(bob)"
    },
    {
        "NL": "A photographer captures an image by adjusting the camera settings, composing the scene, and pressing the shutter button.",
        "FOL": "∀p ∀c ∀s (Photographer(p) ∧ Camera(c) ∧ Scene(s) → (CapturesImage(p, c) ↔ (AdjustsSettings(p, c) ∧ ComposesScene(p, s) ∧ PressesShutter(p))))"
    },
    {
        "NL": "Pollination occurs when insects or wind transfer pollen from the male part of a flower to the female part of another flower.",
        "FOL": "∀x∀y (Insect(x) ∨ Wind(x) ∧ Pollen(y) ∧ MalePartFlower(y) ∧ FemalePartFlower(z) → Pollination(x, y, z))"
    },
    {
        "NL": "A fruit can be red, yellow, or green, but not any combination of these colors.",
        "FOL": "∀x (Fruit(x) → (Red(x) ⊕ Yellow(x) ⊕ Green(x)))"
    },
    {
        "NL": "If all interns who are medical school graduates will be assigned, then some interns who are not pre-med students will also be assigned.",
        "FOL": "∀x (Intern(x) ∧ MedicalSchoolGraduate(x) → Assigned(x)) → ∃y (Intern(y) ∧ ¬PreMedStudent(y) ∧ Assigned(y))"
    },
    {
        "NL": "A scientist makes a significant discovery if they conduct rigorous research, collaborate with others, and persevere through challenges.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Research(y) ∧ Collaboration(z) → (SignificantDiscovery(x) ↔ (Rigorous(y) ∧ CollaboratesWithOthers(x, z) ∧ PerseveresThroughChallenges(x))))"
    },
    {
        "NL": "Giraffes have long necks and legs, allowing them to reach high vegetation, while elephants have a trunk, which they use for multiple purposes, including feeding and drinking.",
        "FOL": "∀x∀y (Giraffe(x) ∧ Elephant(y) → (LongNecksAndLegs(x) ∧ ReachesHighVegetation(x)) ∧ (HasTrunk(y) ∧ MultiplePurposesIncludingFeedingAndDrinking(y)))"
    },
    {
        "NL": "An automotive company designs, codes, and creates car accessories, considering different customer needs and functions.",
        "FOL": "∀x ∃y ∃z ∃w (AutomotiveCompany(x) → CarAccessory(y) ∧ CustomerNeed(z) ∧ Function(w) ∧ Designs(x, y) ∧ Codes(x, y) ∧ Creates(x, y) ∧ Considers(x, z) ∧ Considers(x, w))"
    },
    {
        "NL": "A technology that is scalable, secure, and improves the efficiency of communication is more likely to be adopted in various industries.",
        "FOL": "∀x ∀y ∀z (Technology(x) ∧ Scalable(x) ∧ Secure(x) ∧ ImprovesCommunicationEfficiency(x, y) → MoreLikelyToBeAdoptedInVariousIndustries(x, z))"
    },
    {
        "NL": "Some planets are habited, while others are not.",
        "FOL": "∀x (Planet(x) → (Habited(x) ⊕ ¬Habited(x)))"
    },
    {
        "NL": "A number is either even or odd.",
        "FOL": "∀x (Number(x) → (Even(x) ⊕ Odd(x)))"
    },
    {
        "NL": "All humans breathe air and take in water but do not expel it.",
        "FOL": "∀x (Human(x) → (∃y (Breathe(x, y) ∧ Ingest(x, y)) ∧ ∃z (Ingest(x, z) ∧ ¬Expel(x, z))))"
    },
    {
        "NL": "A dessert is popular when it is sweet and does not contain allergens.",
        "FOL": "∀x (Dessert(x) ∧ Sweet(x) ∧ ¬ContainsAllergens(x) → Popular(x))"
    },
    {
        "NL": "Floods can cause damage to infrastructure, loss of life, and economic disruption in affected areas.",
        "FOL": "∀x (Flood(x) → (DamageInfrastructure(x) ∧ LossOfLife(x) ∧ EconomicDisruption(x)))"
    },
    {
        "NL": "An actor is famous if they appear in movies or TV shows, but not if they only perform in local theaters.",
        "FOL": "∀x (Actor(x) → (Famous(x) ↔ ((AppearsInMovies(x) ∨ AppearsInTVShows(x)) ∧ ¬OnlyLocalTheaters(x))))"
    },
    {
        "NL": "A landscape is picturesque if it features natural beauty, varied terrain, and a sense of tranquility.",
        "FOL": "∀x (Landscape(x) → (NaturalBeauty(x) ∧ VariedTerrain(x) ∧ Tranquility(x) ↔ Picturesque(x)))"
    },
    {
        "NL": "A mammal is either nocturnal or diurnal, but not both.",
        "FOL": "∀x (Mammal(x) → (Nocturnal(x) ⊕ Diurnal(x)))"
    },
    {
        "NL": "A novel is fascinating if and only if it has dynamic characters, engaging story, but doesn't have too many intricate backstories.",
        "FOL": "∀x (Novel(x) ∧ Fascinating(x) ↔ (HasDynamicCharacters(x) ∧ HasEngagingStory(x) ∧ ¬ManyIntricateBackstories(x)))"
    },
    {
        "NL": "A polygon with more than three sides is not a triangle, and if it has four sides, it is a quadrilateral.",
        "FOL": "∀x (Polygon(x) ∧ MoreThanThreeSides(x) → (¬Triangle(x) ∧ (∃y (FourSides(y) ∧ Quadrilateral(y)))))"
    },
    {
        "NL": "A scientist makes a significant discovery if they formulate a new theory, design and execute experiments to test it, and obtain reproducible results, without violating any ethical guidelines.",
        "FOL": "∀x (Scientist(x) ∧ SignificantDiscovery(x) → ((FormulatesNewTheory(x) ∧ DesignsExperiments(x) ∧ ExecutesExperiments(x) ∧ ObtainsReproducibleResults(x)) ∧ ¬ViolatesEthicalGuidelines(x)))"
    },
    {
        "NL": "Roses are red, violets are blue, and daffodils are yellow.",
        "FOL": "∀x ∀y ∀z (Rose(x) ∧ Violet(y) ∧ Daffodil(z) → (IsRed(x) ∧ IsBlue(y) ∧ IsYellow(z)))"
    },
    {
        "NL": "A device is a smartphone if it has a touchscreen display, internet access, and can make phone calls.",
        "FOL": "∀x (Device(x) ∧ TouchscreenDisplay(x) ∧ InternetAccess(x) ∧ CanMakePhoneCalls(x) → Smartphone(x))"
    },
    {
        "NL": "Hospitals provide healthcare services, including diagnosis, treatment, and emergency care.",
        "FOL": "∀x (Hospital(x) → (ProvideService(y) ∧ Healthcare(y) ∧ Include(z) ∧ Diagnosis(z) ∧ Treatment(z) ∧ EmergencyCare(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "Everybody at the party will dance.",
        "FOL": "∀x (Person(x) ∧ AtParty(x) → WillDance(x))"
    },
    {
        "NL": "No cars are living organisms.",
        "FOL": "¬∃x (Car(x) ∧ LivingOrganism(x))"
    },
    {
        "NL": "Every tree in Brazil isn't taller than all trees in Germany.",
        "FOL": "¬∀x ∀y (Tree(x) ∧ In(x, brazil) ∧ Tree(y) ∧ In(y, germany) → Taller(x, y))"
    },
    {
        "NL": "A museum that offers interactive exhibits and engaging educational programs fosters an appreciation for history and culture.",
        "FOL": "∀x (Museum(x) ∧ OffersInteractiveExhibits(x) ∧ EngagingEducationalPrograms(x) → FostersAppreciationForHistoryAndCulture(x))"
    },
    {
        "NL": "Students attend classes or participate in online courses.",
        "FOL": "∀x∀y (Student(x) ∧ (Class(y) ∨ OnlineCourse(y)) → Attends(x, y))"
    },
    {
        "NL": "A city attracts tourists when it features historical landmarks, beautiful landscapes, and vibrant culture, without high levels of pollution.",
        "FOL": "∀x (City(x) ∧ HistoricalLandmarks(x) ∧ BeautifulLandscapes(x) ∧ VibrantCulture(x) ∧ ¬HighPollution(x) → AttractsTourists(x))"
    },
    {
        "NL": "An actor performs a role in a movie if they are cast in that movie for that role.",
        "FOL": "∀x ∀y ∀z (Actor(x) ∧ Role(y) ∧ Movie(z) ∧ CastIn(x, y, z) → PerformsRole(x, y, z))"
    },
    {
        "NL": "A garden is beautiful if it has colorful flowers, well-kept grass, and no litter.",
        "FOL": "∀x (Garden(x) ∧ (ColorfulFlowers(x) ∧ WellKeptGrass(x) ∧ ¬Litter(x)) → Beautiful(x))"
    },
    {
        "NL": "Every car is not fast if and only if it is not maintained.",
        "FOL": "¬∀x (Car(x) ∧ Fast(x) ↔ ¬Maintained(x))"
    },
    {
        "NL": "If there aren't any remarkable books, then no reader likes any novel.",
        "FOL": "¬∃x (RemarkableBooks(x)) → ¬∃y (Reader(y) ∧ ∃z (Novel(z) ∧ Likes(y, z)))"
    },
    {
        "NL": "A game is either single-player or multiplayer, but not a simulation.",
        "FOL": "∀x (Game(x) → ((SinglePlayer(x) ∨ Multiplayer(x)) ∧ ¬Simulation(x)))"
    },
    {
        "NL": "If a gadget is a phone, it is either manufactured by Apple or Samsung.",
        "FOL": "∀x (Gadget(x) ∧ Phone(x) → ManufacturedByApple(x) ⊕ ManufacturedBySamsung(x))"
    },
    {
        "NL": "A book is written by an author and has pages.",
        "FOL": "∀x∀y (Book(x) ∧ Author(y) → (WrittenBy(x, y) ∧ HasPages(x)))"
    },
    {
        "NL": "If anything is pyramid, then everything links to a large object.",
        "FOL": "∃x (Pyramid(x)) → ∀y ∃z (Large(z) ∧ LinksTo(y, z))"
    },
    {
        "NL": "A writer creates novels, while a painter creates paintings.",
        "FOL": "∃x ∃y (Writer(x) ∧ Painter(y) ∧ Creates(x, Novel) ∧ Creates(y, Painting))"
    },
    {
        "NL": "A theater performance can be a play, a musical, or a dance performance.",
        "FOL": "∀x∀y∀z∀w (TheaterPerformance(x) ∧ Play(y) ∧ Musical(z) ∧ DancePerformance(w) → (IsTypeOf(x, y) ∨ IsTypeOf(x, z) ∨ IsTypeOf(x, w)))"
    },
    {
        "NL": "A computer has a mouse.",
        "FOL": "∀x (Computer(x) → HasMouse(x))"
    },
    {
        "NL": "A square is a quadrilateral, while a triangle is not.",
        "FOL": "∀x ∀y (Square(x) ∧ Triangle(y) → (IsQuadrilateral(x) ⊕ ¬IsQuadrilateral(y)))"
    },
    {
        "NL": "Photographers capture moments in time by taking pictures with their cameras.",
        "FOL": "∀x∀y (Photographer(x) ∧ Camera(y) → CapturesMoments(x, y))"
    },
    {
        "NL": "A chef is talented if they excel at preparing international cuisine or creating innovative dishes, and have a good sense of taste.",
        "FOL": "∀x (Chef(x) → (Talented(x) ↔ ((InternationalCuisine(x) ∨ InnovativeDishes(x)) ∧ GoodSenseOfTaste(x))))"
    },
    {
        "NL": "A person who installs and repairs electrical systems in buildings is called an electrician.",
        "FOL": "∀x (InstallsAndRepairsElectricalSystems(x) → Electrician(x))"
    },
    {
        "NL": "A software application can become widely used if it is user-friendly, compatible with multiple platforms, and offers regular updates.",
        "FOL": "∀x (SoftwareApplication(x) ∧ UserFriendly(x) ∧ CompatibleWithMultiplePlatforms(x) ∧ RegularUpdates(x) → WidelyUsed(x))"
    },
    {
        "NL": "A store x sells product y if x has y in stock, and y is available for customers to purchase.",
        "FOL": "∀x ∀y (Store(x) ∧ Product(y) ∧ InStock(x, y) ∧ AvailableForPurchase(x, y) → Sells(x, y))"
    },
    {
        "NL": "A smartphone can receive messages, take photos, and make calls.",
        "FOL": "∀x (Smartphone(x) → (ReceivesMessages(x) ∧ TakesPhotos(x) ∧ MakesCalls(x)))"
    },
    {
        "NL": "Maria loves herself.",
        "FOL": "Love(maria, maria)"
    },
    {
        "NL": "A device is a smartphone if it is a portable electronic device that combines multiple functions, such as calling, texting, and internet access.",
        "FOL": "∀x (Smartphone(x) ↔ (Device(x) ∧ Portable(x) ∧ Electronic(x) ∧ CombinesFunctions(x, calling, texting, internetAccess)))"
    },
    {
        "NL": "A building is a theater if it presents performances, is available for audiences, and fosters cultural appreciation.",
        "FOL": "∀x (Building(x) ∧ PresentsPerformances(x) ∧ AvailableForAudiences(x) ∧ FostersCulturalAppreciation(x) → Theater(x))"
    },
    {
        "NL": "A violin produces sound through the vibration of strings, while a flute produces sound through the vibration of air.",
        "FOL": "∀x∀y (Violin(x) ∧ Flute(y) → (VibratesStrings(x) ∧ VibratesAir(y)))"
    },
    {
        "NL": "A book is a novel if and only if every chapter it has is engaging.",
        "FOL": "∀x (Novel(x) ↔ ∀y (Has(x, y) → Engaging(y)))"
    },
    {
        "NL": "Houses with solar panels generate electricity from sunlight.",
        "FOL": "∀x ∀y ∀z (House(x) ∧ SolarPanel(y) ∧ Has(x, y) ∧ Sunlight(z) → GeneratesElectricityFrom(x, z))"
    },
    {
        "NL": "A person is considered a tailor if they design, alter, and repair clothing.",
        "FOL": "∀x (Tailor(x) ↔ (DesignsClothing(x) ∧ AltersClothing(x) ∧ RepairsClothing(x)))"
    },
    {
        "NL": "All that glitters is not gold.",
        "FOL": "∀x (Glittering(x) ↔ ¬Gold(x))"
    },
    {
        "NL": "Either Steve is not a pilot or Emily is a chef, but not both.",
        "FOL": "¬Pilot(steve) ⊕ Chef(emily)"
    },
    {
        "NL": "In a successful sports team, players, coaches, and support staff work together to develop strategies, improve skills, and maintain physical fitness.",
        "FOL": "∀x∀y∀z (SportsTeam(x) ∧ Players(x, y) ∧ Coaches(x, z) ∧ SupportStaff(x, z) ∧ WorkTogether(x, y, z) → (DevelopStrategies(x) ∧ ImproveSkills(x) ∧ MaintainPhysicalFitness(x)))"
    },
    {
        "NL": "Some metals are magnetic, while others are non-magnetic.",
        "FOL": "∃x (Metal(x) ∧ (Magnetic(x) ⊕ ¬Magnetic(x)))"
    },
    {
        "NL": "A person is seen as a gardener if they cultivate plants, have horticultural knowledge and have good tools.",
        "FOL": "∀x (Person(x) ∧ CultivatePlants(x) ∧ HaveHorticulturalKnowledge(x) ∧ HaveGoodTools(x) → Gardener(x))"
    },
    {
        "NL": "A compass has a needle that points towards magnetic north.",
        "FOL": "∀x (Compass(x) → (HasNeedle(x) ∧ PointsToMagneticNorth(x)))"
    },
    {
        "NL": "A person who designs and creates furniture is called a furniture designer.",
        "FOL": "∀x (DesignsAndCreatesFurniture(x) → FurnitureDesigner(x))"
    },
    {
        "NL": "A store has a sale if it's the end of the season or the store is closing.",
        "FOL": "∀x (Store(x) ∧ HasSale(x) → (EndOfSeason(x) ∨ Closing(x)))"
    },
    {
        "NL": "If a car is a Porsche, then it is either expensive or cheap, but not both.",
        "FOL": "∀x (Car(x) ∧ Porsche(x) → (Expensive(x) ⊕ Cheap(x)))"
    },
    {
        "NL": "A smartphone is considered obsolete if it does not receive software updates and has outdated hardware.",
        "FOL": "∀x (Smartphone(x) → (Obsolete(x) ↔ (¬ReceivesSoftwareUpdates(x) ∧ HasOutdatedHardware(x))))"
    },
    {
        "NL": "A book x is a bestseller if it has high sales figures and widespread acclaim.",
        "FOL": "∀x (Book(x) ∧ HighSalesFigures(x) ∧ WidespreadAcclaim(x) → Bestseller(x))"
    },
    {
        "NL": "A beverage that contains alcohol is classified as a beer, wine, or spirits.",
        "FOL": "∀x (Beverage(x) ∧ ContainsAlcohol(x) → Beer(x) ∨ Wine(x) ∨ Spirits(x))"
    },
    {
        "NL": "Every human is a mammal.",
        "FOL": "∀x (Human(x) → Mammal(x))"
    },
    {
        "NL": "All doctors who are diligent and experienced are respected.",
        "FOL": "∀x (Doctor(x) ∧ Diligent(x) ∧ Experienced(x) → Respected(x))"
    },
    {
        "NL": "Dolphins are intelligent and live in the ocean, while camels are intelligent and live in the desert.",
        "FOL": "∀x (Dolphin(x) → (Intelligent(x) ∧ LiveInOcean(x))) ∧ ∀y (Camel(y) → (Intelligent(y) ∧ LiveInDesert(y)))"
    },
    {
        "NL": "A film festival screens a movie when it is part of the official selection, and the screening venue is available during the event.",
        "FOL": "∀x ∀y ∀z (FilmFestival(x) ∧ Movie(y) ∧ OfficialSelection(y, x) ∧ ScreeningVenue(z) ∧ AvailableDuringEvent(z, x) → Screens(x, y, z))"
    },
    {
        "NL": "An insect is categorized as a pollinator if it transfers pollen between flowers, helps fertilize plants, and has a positive impact on the ecosystem.",
        "FOL": "∀x (Insect(x) ∧ TransfersPollen(x) ∧ HelpsFertilizePlants(x) ∧ PositiveImpactOnEcosystem(x) → Pollinator(x))"
    },
    {
        "NL": "Libraries offer access to books, periodicals, and digital resources for learning and research.",
        "FOL": "∀x (Library(x) → (OfferBooks(x) ∧ OfferPeriodicals(x) ∧ OfferDigitalResources(x) ∧ SupportLearning(x) ∧ SupportResearch(x)))"
    },
    {
        "NL": "People who cook, bake, or make cocktails are skilled in preparing food and beverages.",
        "FOL": "∀x (Cooks(x) ∨ Bakes(x) ∨ MakesCocktails(x) → SkilledInFoodAndBeveragePreparation(x))"
    },
    {
        "NL": "A place is considered a theater if it is a venue designed for the presentation of live performances, such as plays, musicals, and concerts.",
        "FOL": "∀x (Theater(x) ↔ (VenueDesignedForLivePerformances(x) ∧ PresentsPlaysMusicalsAndConcerts(x)))"
    },
    {
        "NL": "There isn't an athlete that chases every slow athlete and isn't agile.",
        "FOL": "¬∃x (Athlete(x) ∧ ∀y (Slow(y) ∧ Chases(x, y)) ∧ ¬ Agile(x))"
    },
    {
        "NL": "A star becomes a supernova when it undergoes a massive explosion at the end of its life cycle.",
        "FOL": "∀x (Star(x) ∧ MassiveExplosionAtEndOfLifeCycle(x) → Supernova(x))"
    },
    {
        "NL": "All participants are skilled or some trees are tall if and only if there exists a poem which is elegant unless there are no ghosts.",
        "FOL": "(∀x (Participant(x) → Skilled(x)) ∨ ∃y (Tree(y) ∧ Tall(y))) ↔ (∃z (Poem(z) ∧ (Elegant(z) ∨ ∀w (¬Ghost(w)))))"
    },
    {
        "NL": "An employee works under a manager, who reports to a director.",
        "FOL": "∀x ∀y ∀z (Employee(x) ∧ Manager(y) ∧ Director(z) → (WorksUnder(x, y) ∧ ReportsTo(y, z)))"
    },
    {
        "NL": "All toddlers are not naughty or troublemakers.",
        "FOL": "∃x (Toddlers(x) ∧ (¬Naughty(x) ∨ ¬Troublemaker(x)))"
    },
    {
        "NL": "A chair is for sitting.",
        "FOL": "∀x (Chair(x) → ForSitting(x))"
    },
    {
        "NL": "A cave that has been formed by the dissolution of soluble rocks, such as limestone, is known as a karst cave.",
        "FOL": "∀x (Cave(x) ∧ FormedByDissolutionOfSolubleRocks(x) ∧ (Limestone(x) ∨ SimilarSolubleRock(x)) → KarstCave(x))"
    },
    {
        "NL": "A workout is effective if it raises heart rate, burns calories, and involves either strength training or aerobic exercise.",
        "FOL": "∀x (Workout(x) ∧ RaisesHeartRate(x) ∧ BurnsCalories(x) → (StrengthTraining(x) ∨ AerobicExercise(x)) ∧ Effective(x))"
    },
    {
        "NL": "A celestial event is a solar eclipse when the moon passes between the sun and Earth, casting a shadow on Earth.",
        "FOL": "∀x (CelestialEvent(x) ∧ MoonPassesBetween(x) ∧ CastsShadowOnEarth(x) → SolarEclipse(x))"
    },
    {
        "NL": "All runners are healthy athletes, or some athletes are not good sportsmen.",
        "FOL": "∀x (Runner(x) → HealthyAthlete(x)) ∨ ∃y (Athlete(y) ∧ ¬GoodSportsman(y))"
    },
    {
        "NL": "A building is a skyscraper or a villa.",
        "FOL": "∀x (Building(x) → (Skyscraper(x) ∨ Villa(x)))"
    },
    {
        "NL": "Deforestation can lead to soil erosion, cause loss of biodiversity, and disrupts the water cycle.",
        "FOL": "∀x (Deforestation(x) → (LeadsToSoilErosion(x) ∨ CausesLossOfBiodiversity(x) ∨ DisruptsWaterCycle(x)))"
    },
    {
        "NL": "Swimming in a pool is safe, while swimming in a river with strong currents can be dangerous.",
        "FOL": "∀x (Swimming(x) → ((Pool(x) → Safe(x)) ∧ (River(x) ∧ StrongCurrents(x) → Dangerous(x))))"
    },
    {
        "NL": "An engaging book captures the reader's attention, explores complex themes, and presents relatable characters.",
        "FOL": "∀x∀y∀z∀w (Book(x) ∧ Reader(y) ∧ Theme(z) ∧ Character(w) ∧ Captures(x, y) ∧ Complex(z) ∧ Relatable(w) → Engaging(x))"
    },
    {
        "NL": "There are painters who appreciate only those sculptors who are more innovative than they.",
        "FOL": "∃x ∀y (Painter(x) ∧ Sculptor(y) ∧ MoreInnovativeThan(y, x) → Appreciate(x, y))"
    },
    {
        "NL": "A planet is habitable if it can support life, has a stable orbit, and either has a liquid water surface or has an atmosphere containing oxygen.",
        "FOL": "∀x (Planet(x) ∧ SupportsLife(x) ∧ StableOrbit(x) ∧ (LiquidWaterSurface(x) ∨ AtmosphereContains(x, Oxygen)) → Habitable(x))"
    },
    {
        "NL": "A guitar has strings, while a drum has a membrane and a flute has holes.",
        "FOL": "∀x ∀y ∀z (Guitar(x) ∧ Drum(y) ∧ Flute(z) → (HasStrings(x) ∧ HasMembrane(y) ∧ HasHoles(z)))"
    },
    {
        "NL": "Roses have thorns.",
        "FOL": "∀x (Rose(x) → HasThorns(x))"
    },
    {
        "NL": "A place is considered a park if it is a public or private outdoor area designated for recreation, leisure, or conservation of natural resources.",
        "FOL": "∀x (Park(x) ↔ (OutdoorAreaDesignatedForRecreationLeisureOrConservation(x) ∧ OfNaturalResources(x)))"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects and other small animals for nutrients.",
        "FOL": "∀x∀y (CarnivorousPlant(x) ∧ SmallAnimalsOrInsects(y) → CapturesAndConsumes(x, y))"
    },
    {
        "NL": "A beverage is classified as alcoholic if it contains ethanol and has a minimum legal drinking age.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) ∧ HasMinimumLegalDrinkingAge(x) → Alcoholic(x))"
    },
    {
        "NL": "A country with a high GDP and low unemployment rate is economically strong.",
        "FOL": "∀x (Country(x) → (HighGDP(x) ∧ LowUnemploymentRate(x) → EconomicallyStrong(x)))"
    },
    {
        "NL": "A programmer develops software, tests it for bugs, and deploys it to users.",
        "FOL": "∀x ∀y (Programmer(x) ∧ Software(y) ∧ Develops(x, y) ∧ TestsForBugs(x, y) → DeploysToUsers(x, y))"
    },
    {
        "NL": "Birds lay eggs in nests, while mammals give birth to live young.",
        "FOL": "∀x∀y (Bird(x) ∧ Nest(y) → LaysEggsIn(x, y)) ∧ ∀z (Mammal(z) → GivesBirthToLiveYoung(z))"
    },
    {
        "NL": "Not every athlete participates in team sports, some athletes compete individually.",
        "FOL": "¬(∀x (Athlete(x) → TeamSport(x))) ∧ ∃x (Athlete(x) ∧ IndividualSport(x))"
    },
    {
        "NL": "A country has a coastline if it is bordered by a sea or an ocean.",
        "FOL": "∀x (Country(x) ∧ HasCoastline(x) ↔ BorderedBySeaOrOcean(x))"
    },
    {
        "NL": "A copy is a personal history if it outlines the life timeline of a unique person, scripted by the person.",
        "FOL": "∀x ∃y (Copy(x) ∧ Person(y) ∧ OutlinesLifeTimeline(x, y) ∧ ScriptedBy(x, y) → PersonalHistory(x))"
    },
    {
        "NL": "A body of water is considered a lake if it is surrounded by land and contains freshwater.",
        "FOL": "∀x (BodyOfWater(x) ∧ SurroundedByLand(x) ∧ ContainsFreshwater(x) → Lake(x))"
    },
    {
        "NL": "Some flowers bloom in the morning, while others open at night.",
        "FOL": "∀x (Flower(x) ∧ (BloomsMorning(x) ⊕ BloomsNight(x)))"
    },
    {
        "NL": "All humans respect John",
        "FOL": "∀x (Human(x) → Respect(x, john))"
    },
    {
        "NL": "A vehicle is hybrid if it uses both an electric and an internal combustion engine.",
        "FOL": "∀x (Vehicle(x) ∧ HasElectricEngine(x) ∧ HasInternalCombustionEngine(x) → Hybrid(x))"
    },
    {
        "NL": "Not all electronic devices are smartphones or tablets.",
        "FOL": "¬(∀x (ElectronicDevice(x) → (Smartphone(x) ∨ Tablet(x))))"
    },
    {
        "NL": "A machine that enables movement by converting energy into mechanical motion is an engine.",
        "FOL": "∀x (Machine(x) ∧ ConvertsEnergy(x) ∧ ProducesMechanicalMotion(x) → Engine(x))"
    },
    {
        "NL": "A person is considered a musician if they play one or more musical instruments or compose music.",
        "FOL": "∀x (Person(x) ∧ (PlaysMusicalInstrument(x) ∨ ComposesMusic(x)) → Musician(x))"
    },
    {
        "NL": "There are cars.",
        "FOL": "∃x (Car(x))"
    },
    {
        "NL": "People classify you as an athlete if you engage in competitive sports.",
        "FOL": "∀z (People(z) ∧ EngageInCompetitiveSports(z) → Athlete(z))"
    },
    {
        "NL": "Every plant will die out eventually.",
        "FOL": "∀x (Plant(x) → WillDieOutEventually(x))"
    },
    {
        "NL": "A school provides a holistic education if it includes academic, sports, and arts facilities with proper facilities.",
        "FOL": "∀x (School(x) ∧ ∃y ∃z ∃w (Academic(y) ∧ Sport(z) ∧ Art(w) ∧ ProperFacilities(y, z, w) ∧ Includes(x, y, z, w)) → ProvidesHolisticEducation(x))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity, which can be used to power appliances or charge batteries.",
        "FOL": "∀x ∀y ∀z (SolarPanel(x) ∧ Sunlight(y) ∧ Electricity(z) → (Converts(x, y, z) ∧ (PowersAppliances(z) ∨ ChargesBatteries(z))))"
    },
    {
        "NL": "A vehicle that can travel on land and water, has wheels or tracks for land movement, and uses a propeller or jet for water propulsion is an amphibious vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ TravelsOnLandAndWater(x) ∧ (HasWheels(x) ∨ HasTracks(x)) ∧ (PropellerForWater(x) ∨ JetForWater(x)) → AmphibiousVehicle(x))"
    },
    {
        "NL": "An animal that has a backbone, a segmented body, and paired jointed appendages belongs to the phylum Arthropoda.",
        "FOL": "∀x (Animal(x) ∧ HasBackbone(x) ∧ SegmentedBody(x) ∧ PairedJointedAppendages(x) → PhylumArthropoda(x))"
    },
    {
        "NL": "Mammals give birth to live young, while birds lay eggs.",
        "FOL": "∀x ((Mammal(x) → GivesBirthToLiveYoung(x)) ∧ (Bird(x) → LaysEggs(x)))"
    },
    {
        "NL": "A game that is a puzzle can stimulate players.",
        "FOL": "∀x ∀y (Game(x) ∧ Puzzle(x) ∧ Player(y) → CanStimulate(x, y))"
    },
    {
        "NL": "A carnivore hunts other animals for sustenance, while a detritivore feeds on decaying organic matter.",
        "FOL": "∀x ∀y (Carnivore(x) ∧ Animal(y) → HuntsForSustenance(x, y)) ∧ ∀z ∀w (Detritivore(z) ∧ DecayingOrganicMatter(w) → FeedsOn(z, w))"
    },
    {
        "NL": "A company is a startup if it is newly established, focuses on innovation, and has limited resources.",
        "FOL": "∀x (Company(x) → (Startup(x) ↔ (NewlyEstablished(x) ∧ FocusOnInnovation(x) ∧ LimitedResources(x))))"
    },
    {
        "NL": "Winter is cold, and summer is hot.",
        "FOL": "∀x (Winter(x) → Cold(x)) ∧ ∀y (Summer(y) → Hot(y))"
    },
    {
        "NL": "A piece of clothing is considered a scarf if it is a long, narrow piece of fabric worn around the neck, head, or shoulders, often for warmth or style.",
        "FOL": "∀x (Clothing(x) ∧ LongNarrowPieceOfFabric(x) ∧ WornAroundNeckHeadOrShoulders(x) ∧ OftenForWarmthOrStyle(x) → Scarf(x))"
    },
    {
        "NL": "An individual who pursues lifelong learning opportunities is more likely to remain professionally relevant and adaptable to changes in their field.",
        "FOL": "∀x (PursuesLifelongLearningOpportunities(x) → (RemainProfessionallyRelevant(x) ∧ AdaptableToChangesInField(x)))"
    },
    {
        "NL": "Each blue object points to at least one thing that points only to green objects.",
        "FOL": "∀x (Blue(x) → ∃y (PointsTo(x, y) ∧ ∀z (PointsTo(y, z) → Green(z))))"
    },
    {
        "NL": "A student is successful if they pass all their exams.",
        "FOL": "∀x ∃y (Student(x) ∧ Exam(y) ∧ Pass(x, y) → Successful(x))"
    },
    {
        "NL": "Amelia respects no German or Italian.",
        "FOL": "∀x (Person(x) ∧ (From(x, germany) ∨ From(x, italy)) → ¬Respect(amelia, x))"
    },
    {
        "NL": "A person is considered an architect if they design buildings and structures.",
        "FOL": "∀x (Person(x) ∧ DesignsBuildings(x) ∧ DesignsStructures(x) → Architect(x))"
    },
    {
        "NL": "Every item is either a red apple or a green pear, but not both.",
        "FOL": "∀x ((Red(x) ∧ Apple(x)) ⊕ (Green(x) ∧ Pear(x)))"
    },
    {
        "NL": "A musical instrument can be classified as a string instrument if it produces sound by vibrating strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundByVibratingStrings(x) → StringInstrument(x))"
    },
    {
        "NL": "A healthy diet includes a variety of fruits, vegetables, and whole grains, while limiting processed foods.",
        "FOL": "∀x (HealthyDiet(x) → (IncludesVarietyOfFruits(x) ∧ IncludesVegetables(x) ∧ IncludesWholeGrains(x) ∧ LimitsProcessedFoods(x)))"
    },
    {
        "NL": "A triangle has one right angle or one obtuse angle, but not both.",
        "FOL": "∀x (Triangle(x) → (RightAngle(x) ⊕ ObtuseAngle(x)))"
    },
    {
        "NL": "A building is a museum if it houses art, historical artifacts, or cultural items and is open to the public.",
        "FOL": "∀x (Building(x) ∧ (HousesArt(x) ∨ HousesHistoricalArtifacts(x) ∨ HousesCulturalItems(x)) ∧ OpenToPublic(x) → Museum(x))"
    },
    {
        "NL": "Cars that are fast and expensive are usually driven by wealthy people.",
        "FOL": "∀x (Car(x) ∧ Fast(x) ∧ Expensive(x) → DrivenByWealthyPeople(x))"
    },
    {
        "NL": "A flower blooms if it receives sunlight, adequate water, and the temperature is within a suitable range.",
        "FOL": "∀x (Flower(x) → (Blooms(x) ↔ (ReceivesSunlight(x) ∧ AdequateWater(x) ∧ SuitableTemperature(x))))"
    },
    {
        "NL": "A computer system is secure if it has robust authentication mechanisms, data encryption, and regular security updates to protect against threats.",
        "FOL": "∀x (ComputerSystem(x) ∧ RobustAuthentication(x) ∧ DataEncryption(x) ∧ RegularSecurityUpdates(x) → Secure(x))"
    },
    {
        "NL": "All squares are rectangles with equal sides.",
        "FOL": "∀x (Square(x) → (Rectangle(x) ∧ EqualSides(x)))"
    },
    {
        "NL": "Every artist who has created for over thirty years and either showcases art in galleries or conducts art workshops, but not both, must either have received an arts accolade or belong to a worldwide art union.",
        "FOL": "∀x (Artist(x) ∧ CreatedForOverThirtyYears(x) ∧ (ShowcasesArtInGalleries(x) ⊕ ConductsArtWorkshops(x)) → (ReceivedArtsAccolade(x) ∨ BelongToWorldwideArtUnion(x)))"
    },
    {
        "NL": "A valid passport is required for international travel, except for specific countries with travel agreements.",
        "FOL": "∀x∀y (Passport(x) ∧ InternationalTravel(y) → (Valid(x) ∨ TravelAgreement(y)))"
    },
    {
        "NL": "A healthy diet consists of fruits, vegetables, and whole grains, while limiting processed foods and added sugars.",
        "FOL": "∀x (HealthyDiet(x) → (Includes(x, Fruits) ∧ Includes(x, Vegetables) ∧ Includes(x, WholeGrains) ∧ Limits(x, ProcessedFoods) ∧ Limits(x, AddedSugars)))"
    },
    {
        "NL": "A book can be classified as fiction, non-fiction, or a reference book.",
        "FOL": "∀x (Book(x) → (Fiction(x) ∨ NonFiction(x) ∨ ReferenceBook(x)))"
    },
    {
        "NL": "A student is considered diligent if they study everyday.",
        "FOL": "∀x (Student(x) ∧ StudiesEveryday(x) → Diligent(x))"
    },
    {
        "NL": "A student graduates with honors if they maintain a high GPA, complete a specific number of credit hours, and participate in extracurricular activities.",
        "FOL": "∀x (Student(x) ∧ HighGPA(x) ∧ CompletedCreditHours(x) ∧ ParticipatesInExtracurricularActivities(x) → GraduatesWithHonors(x))"
    },
    {
        "NL": "Astronauts explore space and conduct experiments.",
        "FOL": "∀x (Astronaut(x) → (ExploresSpace(x) ∧ ConductsExperiments(x)))"
    },
    {
        "NL": "A coat is appropriate for cold weather if it is made of wool, has a hood, and is insulated.",
        "FOL": "∀x (Coat(x) ∧ Wool(x) ∧ Hood(x) ∧ Insulated(x) → AppropriateForColdWeather(x))"
    },
    {
        "NL": "The Moon orbits Earth, Earth orbits the Sun, and the Sun is the center of the solar system.",
        "FOL": "∀x ∀y ∀z (Moon(x) ∧ Earth(y) ∧ Sun(z) → (Orbits(x, y) ∧ Orbits(y, z) ∧ CenterOfSolarSystem(z)))"
    },
    {
        "NL": "Solar panels generate electricity by converting sunlight into usable energy.",
        "FOL": "∀x (SolarPanel(x) → ConvertsSunlightToElectricity(x))"
    },
    {
        "NL": "If all interns who will be integrated are university graduates, then some applicants will not be integrated.",
        "FOL": "∀x (Intern(x) ∧ Integrated(x) → UniversityGraduate(x)) → ∃y (Applicant(y) ∧ ¬Integrated(y))"
    },
    {
        "NL": "A food item is a fruit if it is derived from the ovary of a flowering plant, contains seeds, and is typically consumed for its sweet or tart flavor.",
        "FOL": "∀x (FoodItem(x) ∧ DerivedFromOvaryOfFloweringPlant(x) ∧ ContainsSeeds(x) ∧ (ConsumedForSweetFlavor(x) ∨ ConsumedForTartFlavor(x)) → Fruit(x))"
    },
    {
        "NL": "An athlete who plays basketball may also participate in track or swimming.",
        "FOL": "∀x (Athlete(x) ∧ PlaysBasketball(x) → (ParticipatesInTrack(x) ∨ ParticipatesInSwimming(x)))"
    },
    {
        "NL": "A flower is either a fragrant rose or a beautiful tulip, but not both.",
        "FOL": "∀x ((Fragrant(x) ∧ Rose(x)) ⊕ (Beautiful(x) ∧ Tulip(x)))"
    },
    {
        "NL": "Some fruits, such as apples and oranges, can be eaten raw, but others, like avocados and bananas, need to be peeled first.",
        "FOL": "∀x (Fruit(x) → ((Apples(x) ∨ Oranges(x)) → EatenRaw(x)) ∧ ((Avocados(x) ∨ Bananas(x)) → NeedsPeeling(x)))"
    },
    {
        "NL": "Cloudy skies can indicate impending rain or snow.",
        "FOL": "∀x (CloudySkies(x) → (Indicate(x, y) ∧ (Rain(y) ∨ Snow(y))))"
    },
    {
        "NL": "If no monkey swings, there exists a fish that every fish swims to.",
        "FOL": "¬∀x (Monkey(x) → Swings(x)) → ∃y (Fish(y) ∧ ∀z (Fish(z) → SwimsTo(z, y)))"
    },
    {
        "NL": "Rainforests are home to diverse species of trees, insects, and birds.",
        "FOL": "∀x (Rainforest(x) → (∃y (Tree(y) ∧ Inhabits(y, x)) ∧ ∃z (Insect(z) ∧ Inhabits(z, x)) ∧ ∃w (Bird(w) ∧ Inhabits(w, x))))"
    },
    {
        "NL": "Some bicycles have multiple gears and are designed for off-road use.",
        "FOL": "∃x (Bicycle(x) ∧ MultipleGears(x) ∧ DesignedFor(x, OffRoad))"
    },
    {
        "NL": "A plant that loses its leaves during a specific season, usually in autumn, is a deciduous plant.",
        "FOL": "∀x∀y (Plant(x) ∧ LosesLeavesDuringSeason(x, y) ∧ (Autumn(y) ∨ SpecificSeason(y)) → DeciduousPlant(x))"
    },
    {
        "NL": "An animal that lives in water, breathes through gills, and has fins is a fish.",
        "FOL": "∀x (Animal(x) ∧ LivesInWater(x) ∧ BreathesThroughGills(x) ∧ HasFins(x) → Fish(x))"
    },
    {
        "NL": "A bird can fly if it is not injured.",
        "FOL": "∀x (Bird(x) ∧ ¬Injured(x) → CanFly(x))"
    },
    {
        "NL": "All birds are freely flying or caged.",
        "FOL": "∀x (Bird(x) → (FreelyFlying(x) ∨ Caged(x)))"
    },
    {
        "NL": "A movie is thrilling if and only if it has charismatic actors, intense conflict, but doesn't have too many confusing side plots.",
        "FOL": "∀x (Movie(x) ∧ Thrilling(x) ↔ (HasCharismaticActors(x) ∧ HasIntenseConflict(x) ∧ ¬ManyConfusingSidePlots(x)))"
    },
    {
        "NL": "A flower blooms if it receives sunlight and sufficient water.",
        "FOL": "∀x (Flower(x) ∧ ReceivesSunlight(x) ∧ SufficientWater(x) → Blooms(x))"
    },
    {
        "NL": "In a solar system, planets orbit around the sun.",
        "FOL": "∀x (Planet(x) ∧ SolarSystem(y) → OrbitAround(x, y))"
    },
    {
        "NL": "A celestial body is recognized as a planet if it orbits around a star, has a spherical shape, and has cleared its orbit of other debris.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsAroundStar(x) ∧ SphericalShape(x) ∧ ClearedOrbitOfDebris(x) → Planet(x))"
    },
    {
        "NL": "A crop x is suitable for cultivation in region y if the region's climate and soil conditions meet the crop's requirements z.",
        "FOL": "∀x ∀y ∀z (Crop(x) ∧ Region(y) ∧ CropRequirements(z) ∧ ClimateMeetsRequirements(y, z) ∧ SoilMeetsRequirements(y, z) → SuitableForCultivation(x, y))"
    },
    {
        "NL": "A dog becomes alpha if it asserts dominance over other pack members.",
        "FOL": "∀x ∀y (Dog(x) ∧ Dog(y) ∧ AssertDominance(x, y) → BecomesAlpha(x))"
    },
    {
        "NL": "A violin is a string instrument and is played with a bow.",
        "FOL": "∀x (Violin(x) → (StringInstrument(x) ∧ PlayedWithBow(x)))"
    },
    {
        "NL": "Some professional players who play chess are also experienced in poker.",
        "FOL": "∃x (ProfessionalPlayer(x) ∧ PlayChess(x) ∧ ExperiencedInPoker(x))"
    },
    {
        "NL": "A substance reacts with another substance to create a new product if a chemical change occurs between the two substances.",
        "FOL": "∀x∀y∀z (Substance(x) ∧ Substance(y) ∧ Reacts(x, y) → (ChemicalChange(x, y) ∧ NewProduct(z)))"
    },
    {
        "NL": "A lock can be opened with the correct key or combination.",
        "FOL": "∀x∀y∀z (Lock(x) ∧ (Key(y) ∨ Combination(z)) → CanOpen(x, y, z))"
    },
    {
        "NL": "An athlete becomes a champion by demonstrating exceptional skill, maintaining peak physical fitness, and displaying unwavering determination.",
        "FOL": "∀x (Athlete(x) ∧ Champion(x) ↔ (ExceptionalSkill(x) ∧ PeakPhysicalFitness(x) ∧ UnwaveringDetermination(x)))"
    },
    {
        "NL": "Any library visitor who reads books is required to handle them carefully.",
        "FOL": "∀x ∃y (LibraryVisitor(x) ∧ Book(y) ∧ Read(x, y) → RequiredToHandleCarefully(x, y))"
    },
    {
        "NL": "A beach can be a tourist spot, have white sand, and draw crowds in summer, or it can be a secluded spot, have pebbly shoreline, and draw local fishermen.",
        "FOL": "∀x (Beach(x) → ((TouristSpot(x) ∧ HasWhiteSand(x) ∧ DrawCrowds(x)) ⊕ (SecludedSpot(x) ∧ HasPebblyShore(x) ∧ DrawFishermen(x))))"
    },
    {
        "NL": "A city that invests in renewable energy sources and implements sustainable waste management practices is more likely to reduce its carbon footprint and achieve long-term environmental benefits.",
        "FOL": "∀x (City(x) ∧ InvestsInRenewableEnergySources(x) ∧ ImplementsSustainableWasteManagementPractices(x) → LikelyToReduceCarbonFootprint(x) ∧ AchieveLongTermEnvironmentalBenefits(x))"
    },
    {
        "NL": "A type of container used for preserving and storing food by removing air and sealing the container is an airtight container.",
        "FOL": "∀x (Container(x) ∧ PreservesAndStoresFood(x) ∧ RemovesAir(x) ∧ SealsContainer(x) → AirtightContainer(x))"
    },
    {
        "NL": "A painter creates artwork using colors and textures.",
        "FOL": "∀x (Painter(x) → CreatesArtwork(x))"
    },
    {
        "NL": "Each physician who researches infectious diseases and public health, unless they were honored with a medical distinction, have either published in esteemed medical magazines or never delivered a speech at worldwide symposiums.",
        "FOL": "∀x (Physician(x) ∧ ResearchesInfectiousDiseases(x) ∧ ResearchesPublicHealth(x) ∨ HonoredWithMedicalDistinction(x) → (PublishedInMedicalMagazines(x) ∨ ¬DeliveredSpeechAtWorldwideSymposiums(x)))"
    },
    {
        "NL": "A student graduates with honors if their academic performance is outstanding.",
        "FOL": "∀x (Student(x) ∧ OutstandingAcademicPerformance(x) → GraduatesWithHonors(x))"
    },
    {
        "NL": "A person is considered an expert in a field if they possess extensive knowledge and experience in that area.",
        "FOL": "∀x∀y (ExtensiveKnowledgeAndExperience(x, y) → Expert(x, y))"
    },
    {
        "NL": "If it is snowing, the temperature is below freezing.",
        "FOL": "∀x (Snowing(x) → BelowFreezing(x))"
    },
    {
        "NL": "A scientist who researches climate change specializes in analyzing atmospheric data, greenhouse gases, or oceanographic data, but never all three at once.",
        "FOL": "∀x∀y∀z∀w (Scientist(x) ∧ ResearchesClimateChange(x) ∧ (AtmosphericData(y) ⊕ GreenhouseGases(z) ⊕ OceanographicData(w)) → SpecializesIn(x, y, z, w))"
    },
    {
        "NL": "A lamp emits light, while a solar panel absorbs sunlight.",
        "FOL": "∀x∀y∀z (Lamp(x) ∧ Light(y) ∧ Sunlight(z) → (Emits(x, y) ∧ ¬Absorbs(x, z))) ∧ (SolarPanel(x) ∧ Sunlight(z) ∧ Light(y) → (Absorbs(x, z) ∧ ¬Emits(x, y)))"
    },
    {
        "NL": "A plant that loses its leaves during a specific season or period is deciduous.",
        "FOL": "∀x (Plant(x) ∧ LosesLeavesDuringSpecificSeason(x) → Deciduous(x))"
    },
    {
        "NL": "Dogs with long fur need regular grooming to avoid matting, while short-haired dogs do not.",
        "FOL": "∀x∀y∀z (Dog(x) ∧ LongFur(x, y) ∧ RegularGrooming(y, z) ∧ AvoidsMatting(z)) ∨ (Dog(x) ∧ ShortHair(x, y) ∧ ¬RegularGrooming(y, z) ∧ ¬AvoidsMatting(z))"
    },
    {
        "NL": "Doctors treat patients and prescribe medication.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → (Treats(x, y) ∧ ∃z (Medication(z) ∧ Prescribes(x, z))))"
    },
    {
        "NL": "A painter creates artwork using paint, a canvas, and various brushes to apply different textures.",
        "FOL": "∀x∀y∀z (Painter(x) ∧ Artwork(y) ∧ Brush(z) → (Creates(x, y) ↔ (UsesPaint(x, y) ∧ UsesCanvas(x, y) ∧ AppliesTexture(x, z))))"
    },
    {
        "NL": "A room is well-lit if it has natural light from windows or is illuminated by artificial lighting.",
        "FOL": "∀x (Room(x) ∧ (NaturalLight(x) ∨ ArtificialLighting(x)) → WellLit(x))"
    },
    {
        "NL": "A museum exhibits a collection of artifacts, artwork, or historical items, preserves cultural heritage, and offers educational programs for the public.",
        "FOL": "∀x (Museum(x) → (ExhibitsCollection(x) ∧ PreservesCulturalHeritage(x) ∧ OffersEducationalPrograms(x)))"
    },
    {
        "NL": "A scientist can research biology, physics, or chemistry.",
        "FOL": "∀x (Scientist(x) → ∃y ∃z ∃w (ResearchBiology(x, y) ∨ ResearchPhysics(x, z) ∨ ResearchChemistry(x, w)))"
    },
    {
        "NL": "A football field has grass, while a basketball court has a wooden floor and a tennis court has a hard surface.",
        "FOL": "∀x∀y∀z (FootballField(x) → HasGrass(x)) ∧ (BasketballCourt(y) → HasWoodenFloor(y)) ∧ (TennisCourt(z) → HasHardSurface(z))"
    },
    {
        "NL": "Hot air balloons fly by heating the air inside the envelope.",
        "FOL": "∀x (HotAirBalloon(x) → HeatAirInside(x))"
    },
    {
        "NL": "A chef is cooking a meal in a kitchen.",
        "FOL": "∃x ∃y (Chef(x) ∧ Meal(y) ∧ CookingInKitchen(x, y))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, a seat, and a handlebar for steering.",
        "FOL": "∀x∀y∀z∀w∀v (Bicycle(x) ∧ Wheels(x, y) ∧ Frame(x, z) ∧ Seat(x, w) ∧ Handlebar(x, v) → (Two(y) ∧ Steering(v)))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it is powered solely by an electric motor.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricMotor(x) → ElectricVehicle(x))"
    },
    {
        "NL": "Not every fruit is sweet; some are sour or bitter.",
        "FOL": "∃x (Fruit(x) ∧ ¬Sweet(x) ∧ (Sour(x) ∨ Bitter(x)))"
    },
    {
        "NL": "A country can have a monarchy or a republic system, but not both.",
        "FOL": "∀x (Country(x) → (Monarchy(x) ⊕ Republic(x)))"
    },
    {
        "NL": "Each artist who admires a curator is admired by the same curator.",
        "FOL": "∀x ∀y (Artist(x) ∧ Curator(y) ∧ Admires(x, y) → Admires(y, x))"
    },
    {
        "NL": "A beverage is refreshing if it is cold or has ice.",
        "FOL": "∀x (Beverage(x) → (Cold(x) ∨ HasIce(x)))"
    },
    {
        "NL": "Any athlete who participates in both national and international events, unless they are a swimmer, has either received a medal or has not competed in regional tournaments.",
        "FOL": "∀x (Athlete(x) ∧ ParticipatesInNationalEvents(x) ∧ ParticipatesInInternationalEvents(x) ∨ Swimmer(x) → (ReceivedMedal(x) ∨ ¬CompetedInRegionalTournaments(x)))"
    },
    {
        "NL": "Artworks created by famous artists and displayed in renowned museums often have high monetary value.",
        "FOL": "∀x∀y (Artwork(x) ∧ CreatedByFamousArtist(x, y) ∧ DisplayedInRenownedMuseum(x) → HighMonetaryValue(x))"
    },
    {
        "NL": "A film belongs to the horror genre if it evokes fear and suspense in its audience.",
        "FOL": "∀x (Film(x) ∧ EvokesFear(x) ∧ Suspense(x) → HorrorGenre(x))"
    },
    {
        "NL": "If a person is a nurse, they must provide medical care, support, and education to patients in various healthcare settings, often working with physicians and other healthcare professionals.",
        "FOL": "∀x (Nurse(x) → (ProvidesMedicalCareSupportAndEducation(x) ∧ ToPatientsInVariousHealthcareSettings(x) ∧ WorksWithPhysiciansAndOtherHealthcareProfessionals(x)))"
    },
    {
        "NL": "If a pet is trained, then it obeys commands and behaves well.",
        "FOL": "∀x (Pet(x) ∧ Trained(x) → ObeysCommands(x) ∧ BehavesWell(x))"
    },
    {
        "NL": "All plants which absorb ample sunlight, adequate water, and high mineral content in the soil grow healthier.",
        "FOL": "∀x (Plant(x) ∧ AbsorbAmpleSunlight(x) ∧ AdequateWater(x) ∧ HighMineralContent(x) → GrowHealthier(x))"
    },
    {
        "NL": "A plant is considered a grass if it has narrow leaves and is a member of the Poaceae family.",
        "FOL": "∀x (Plant(x) ∧ HasNarrowLeaves(x) ∧ MemberOfPoaceaeFamily(x) → Grass(x))"
    },
    {
        "NL": "A place is a library if it houses books, is open to all, and promotes literacy.",
        "FOL": "∀x (Place(x) ∧ HousesBooks(x) ∧ OpenToAll(x) ∧ PromotesLiteracy(x) → Library(x))"
    },
    {
        "NL": "A shape is either geometric or organic.",
        "FOL": "∀x (Shape(x) → (Geometric(x) ∨ Organic(x)))"
    },
    {
        "NL": "In a democratic system, citizens have the right to vote and participate in the decision-making process.",
        "FOL": "∀x (DemocraticSystem(x) → (RightToVote(x) ∧ ParticipateInDecisionMaking(x)))"
    },
    {
        "NL": "An ocean exists in which several whales reside.",
        "FOL": "∃x ∃y (Ocean(x) ∧ Whale(y) ∧ ResideIn(y, x))"
    },
    {
        "NL": "An insectivore consumes insects for nutrients, while a decomposer lives off of rotting material.",
        "FOL": "∀x ∀y (Insectivore(x) ∧ Insects(y) → ConsumesForNutrients(x, y)) ∧ ∀z ∀w (Decomposer(z) ∧ RottingMaterial(w) → LivesOff(z, w))"
    },
    {
        "NL": "A book is a bestseller if and only if it has more than 1000 reviews and 4-star rating.",
        "FOL": "∀x (Book(x) → (Bestseller(x) ↔ HasMoreThanThousandReviews(x) ∧ HasFourStarRating(x)))"
    },
    {
        "NL": "All doctors who exercise might avoid burnout.",
        "FOL": "∀x (Doctor(x) ∧ Exercise(x) → MightAvoidBurnout(x))"
    },
    {
        "NL": "Snowflakes form in cold temperatures, icicles develop from dripping water, and frost appears on cold surfaces.",
        "FOL": "∀x (Snowflake(x) → FormsInColdTemperatures(x)) ∧ ∀y (Icicle(y) → DevelopsFromDrippingWater(y)) ∧ ∀z (Frost(z) → AppearsOnColdSurfaces(z))"
    },
    {
        "NL": "A triangle with three equal sides is equilateral.",
        "FOL": "∀x (Triangle(x) ∧ EqualSides(x, 3) → Equilateral(x))"
    },
    {
        "NL": "A thing is recognized as an amphibian if it lives both in land and water and breathes through skin.",
        "FOL": "∀x ((Thing(x) ∧ LivesLandWater(x) ∧ BreathesThroughSkin(x)) → Amphibian(x))"
    },
    {
        "NL": "Not all tall trees are green.",
        "FOL": "¬∀x (Tall(x) ∧ Tree(x) → Green(x))"
    },
    {
        "NL": "There is a lion that some gazelles run away from.",
        "FOL": "∃x ∃y (Lion(x) ∧ Gazelle(y) ∧ RunAwayFrom(y, x))"
    },
    {
        "NL": "An item is considered antique if it is at least 100 years old and has historical or aesthetic value.",
        "FOL": "∀x (Item(x) → (Antique(x) ↔ (AtLeast100YearsOld(x) ∧ (HistoricalValue(x) ∨ AestheticValue(x)))))"
    },
    {
        "NL": "A movie is considered a blockbuster if it has a high budget, features famous actors, or generates significant box office revenue.",
        "FOL": "∀x (Movie(x) ∧ (HighBudget(x) ∨ FamousActors(x) ∨ HighBoxOfficeRevenue(x)) → Blockbuster(x))"
    },
    {
        "NL": "A planet orbits a star if it is within the star's gravitational influence.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ WithinGravitationalInfluence(x, y) → Orbits(x, y))"
    },
    {
        "NL": "A store sells clothing if it offers shirts, pants, and dresses.",
        "FOL": "∀x (Store(x) ∧ SellsShirts(x) ∧ SellsPants(x) ∧ SellsDresses(x) → SellsClothing(x))"
    },
    {
        "NL": "A museum exhibit attracts visitors if it features rare artifacts, offers interactive experiences, or showcases groundbreaking research.",
        "FOL": "∀x (MuseumExhibit(x) → ((FeaturesRareArtifacts(x) ∨ OffersInteractiveExperiences(x) ∨ ShowcasesGroundbreakingResearch(x)) → AttractsVisitors(x)))"
    },
    {
        "NL": "If a person is a lawyer, they must represent clients in legal matters and provide legal advice.",
        "FOL": "∀x (Lawyer(x) → (RepresentsClients(x) ∧ ProvidesLegalAdvice(x)))"
    },
    {
        "NL": "Gasoline is used as fuel for internal combustion engines.",
        "FOL": "∀x (Gasoline(x) → UsedAsFuelForInternalCombustionEngines(x))"
    },
    {
        "NL": "The Great Wall of China is the longest wall in the world.",
        "FOL": "LongestWallInWorld(greatwallofchina)"
    },
    {
        "NL": "Countries in the European Union share common policies and have open borders.",
        "FOL": "∀x ∀y ((Country(x) ∧ Country(y) ∧ InEuropeanUnion(x) ∧ InEuropeanUnion(y)) → (SharesCommonPolicies(x, y) ∧ OpenBorders(x, y)))"
    },
    {
        "NL": "Every tree bears fruit or flowers, but never both simultaneously.",
        "FOL": "∀x (Tree(x) → ((BearsFruit(x) ∧ ¬BearsFlowers(x)) ∨ (¬BearsFruit(x) ∧ BearsFlowers(x))))"
    },
    {
        "NL": "A wind turbine generates electricity when its blades are rotated by the wind.",
        "FOL": "∀x∀y (WindTurbine(x) ∧ BladesRotatedByWind(x, y) → GeneratesElectricity(x))"
    },
    {
        "NL": "A telescope that is capable of observing distant galaxies can contribute to our understanding of the universe's evolution.",
        "FOL": "∀x (Telescope(x) ∧ CapableOfObservingDistantGalaxies(x) → ContributesToUnderstandingUniverseEvolution(x))"
    },
    {
        "NL": "A ripe apple grows on something.",
        "FOL": "∃x (Ripe(x) ∧ Apple(x) → ∃y (GrowsOn(x, y)))"
    },
    {
        "NL": "If a person is a veterinarian, they treat animals' health.",
        "FOL": "∀x (Person(x) ∧ Veterinarian(x) → TreatAnimalsHealth(x))"
    },
    {
        "NL": "Something is either a large triangle or a small rectangle, and in both cases, it is yellow.",
        "FOL": "∃x (((Large(x) ∧ Triangle(x)) ∨ (Small(x) ∧ Rectangle(x))) ∧ Yellow(x))"
    },
    {
        "NL": "A country x shares a border with country y if their territories have a common boundary and are adjacent to each other.",
        "FOL": "∀x ∀y (Country(x) ∧ Country(y) ∧ CommonBoundary(x, y) ∧ Adjacent(x, y) → SharesBorderWith(x, y))"
    },
    {
        "NL": "Rain is liquid precipitation, whereas snow is solid precipitation.",
        "FOL": "∀x∀y (Rain(x) ∧ Snow(y) → (LiquidPrecipitation(x) ⊕ SolidPrecipitation(y)))"
    },
    {
        "NL": "A university offers various study programs, including engineering courses with a focus on mathematics and physics, or humanities courses centered around literature and philosophy.",
        "FOL": "∀x ∀y (University(x) ∧ (EngineeringCourse(x, y) ∧ (Mathematics(y) ∧ Physics(y)) ∨ HumanitiesCourse(x, y) ∧ (Literature(y) ∧ Philosophy(y))))"
    },
    {
        "NL": "A game is a multiplayer online game if it supports playing with others over the internet and requires an active internet connection.",
        "FOL": "∀x (MultiplayerOnlineGame(x) ↔ (Game(x) ∧ SupportsPlayingWithOthers(x) ∧ RequiresInternetConnection(x)))"
    },
    {
        "NL": "Apples, oranges, and bananas are common fruits.",
        "FOL": "CommonFruit(apples) ∧ CommonFruit(oranges) ∧ CommonFruit(bananas)"
    },
    {
        "NL": "To be granted access to a restricted area, an individual must possess a valid ID card or be accompanied by a staff member.",
        "FOL": "∀x (Individual(x) ∧ GrantedAccess(x) → (ValidIDCard(x) ∨ AccompaniedByStaffMember(x)))"
    },
    {
        "NL": "Books are for reading, while paintings are for viewing.",
        "FOL": "∀x ∀y ((Book(x) → ForReading(x)) ∧ ¬(Painting(y) → ForReading(y))) ∨ (Painting(y) → ForViewing(y))"
    },
    {
        "NL": "A dessert is popular in a specific country if it is commonly consumed there and has a strong cultural association with that country.",
        "FOL": "∀x∀y (PopularDessertInCountry(x, y) ↔ (Dessert(x) ∧ CommonlyConsumedIn(x, y) ∧ StrongCulturalAssociation(x, y)))"
    },
    {
        "NL": "An organism that is microscopic, single-celled, and reproduces asexually is a bacterium.",
        "FOL": "∀x (Organism(x) ∧ Microscopic(x) ∧ SingleCelled(x) ∧ ReproducesAsexually(x) → Bacterium(x))"
    },
    {
        "NL": "No movie is regarded violent unless it either contains bloodshed or uses harmful weapons, and not all of them are for everyone.",
        "FOL": "¬∃x (Movie(x) ∧ Violent(x) ∧ ¬(Bloodshed(x) ∨ UsesWeapons(x))) ∧ ¬∀y (Movie(y) → ForEveryone(y))"
    },
    {
        "NL": "A traffic light controls traffic flow.",
        "FOL": "∀x (TrafficLight(x) → ControlsTrafficFlow(x))"
    },
    {
        "NL": "A hailstorm occurs when there is atmospheric instability and water droplets freeze in the clouds.",
        "FOL": "∀x (AtmosphericInstability(x) ∧ WaterDropletsFreeze(x) → Hailstorm(x))"
    },
    {
        "NL": "A type of job can be either full-time or part-time.",
        "FOL": "∀x (JobType(x) → FullTime(x) ⊕ PartTime(x))"
    },
    {
        "NL": "Not every lake in Canada is larger than every lake in France.",
        "FOL": "¬∀x ∀y (Lake(x) ∧ In(x, canada) ∧ Lake(y) ∧ In(y, france) → Larger(x, y))"
    },
    {
        "NL": "A car is reliable if it has high durability and efficient fuel consumption.",
        "FOL": "∀x (Car(x) ∧ HasHighDurability(x) ∧ HasEfficientFuelConsumption(x) → Reliable(x))"
    },
    {
        "NL": "A telescope is suitable for observing distant galaxies if it has a large aperture and high magnification power.",
        "FOL": "∀x (Telescope(x) ∧ LargeAperture(x) ∧ HighMagnificationPower(x) → SuitableForObservingDistantGalaxies(x))"
    },
    {
        "NL": "A smartphone has a long battery life if it lasts for more than 12 hours of active use.",
        "FOL": "∀x (Smartphone(x) ∧ LastsMoreThan12Hours(x) → LongBatteryLife(x))"
    },
    {
        "NL": "An art gallery exhibits paintings, sculptures, or photographs.",
        "FOL": "∀x∀y (ArtGallery(x) ∧ (Painting(y) ∨ Sculpture(y) ∨ Photograph(y)) → Exhibits(x, y))"
    },
    {
        "NL": "Dentists treat patients with dental problems.",
        "FOL": "∀x∀y∀z (Dentist(x) ∧ Patient(y) ∧ DentalProblem(z) → Treats(x, y, z))"
    },
    {
        "NL": "A person who specializes in the care, diagnosis, and treatment of disorders of the foot and ankle is a podiatrist.",
        "FOL": "∀x (Person(x) ∧ SpecializesInFootCare(x) ∧ SpecializesInAnkleCare(x) ∧ DiagnosesFootAndAnkleDisorders(x) ∧ TreatsFootAndAnkleDisorders(x) → Podiatrist(x))"
    },
    {
        "NL": "Antibiotic defends against a particular infection by removing the bacteria in the organism.",
        "FOL": "∀x ∃y (Antibiotic(x) ∧ Infection(y) ∧ RemovesBacteriaOf(x, y) → DefendsAgainst(x, y))"
    },
    {
        "NL": "If Alice is a singer then there are songs.",
        "FOL": "Singer(alice) → ∃x (Song(x))"
    },
    {
        "NL": "Certain writers are either novelists or poets, but not both.",
        "FOL": "∃x (Writer(x) ∧ (Novelist(x) ⊕ Poet(x)))"
    },
    {
        "NL": "A triangle has acute, obtuse, or right angles.",
        "FOL": "∀x (Triangle(x) → (HasAcuteAngle(x) ∨ HasObtuseAngle(x) ∨ HasRightAngle(x)))"
    },
    {
        "NL": "A lost child seeks help.",
        "FOL": "∃x (Lost(x) ∧ Child(x) → ∃y (Seeks(x, y)))"
    },
    {
        "NL": "A functioning computer system requires a combination of hardware, software, and user input to perform tasks and execute commands.",
        "FOL": "∀x (ComputerSystem(x) ∧ Functioning(x) → (Hardware(x) ∧ Software(x) ∧ UserInput(x) ∧ PerformsTasks(x) ∧ ExecutesCommands(x)))"
    },
    {
        "NL": "A light bulb emits light when it receives electrical current and the filament inside glows.",
        "FOL": "∀x (LightBulb(x) → (EmitsLight(x) ↔ (ReceivesElectricalCurrent(x) ∧ FilamentGlows(x))))"
    },
    {
        "NL": "An object is considered a cube if it has six equal square faces.",
        "FOL": "∀x (Cube(x) ↔ (Object(x) ∧ HasSixEqualSquareFaces(x)))"
    },
    {
        "NL": "An object is a book if it consists of pages bound together, containing written or printed text and images.",
        "FOL": "∀x (Object(x) ∧ PagesBoundTogether(x) ∧ ContainsText(x) ∧ ContainsImages(x) → Book(x))"
    },
    {
        "NL": "A person can be a teacher or a student but not both.",
        "FOL": "∀x (Person(x) → (Teacher(x) ⊕ Student(x)))"
    },
    {
        "NL": "An ice cream flavor is popular if it is sweet, creamy, or features a unique combination of ingredients.",
        "FOL": "∀x (IceCreamFlavor(x) ∧ (Sweet(x) ∨ Creamy(x) ∨ UniqueCombination(x)) → Popular(x))"
    },
    {
        "NL": "Each student in the class understands the lesson.",
        "FOL": "∀x (Student(x) ∧ InClass(x) → (Understand(x, lesson)))"
    },
    {
        "NL": "Cars run on petrol, while bicycles operate by peddling.",
        "FOL": "∀x (Car(x) → RunOnPetrol(x)) ∧ ∀y (Bicycle(y) → OperateByPeddling(y))"
    },
    {
        "NL": "Wind turbines harness the kinetic energy of the wind, converting it into electrical energy, which can be used to power homes and businesses.",
        "FOL": "∀x∀y∀z (WindTurbine(x) ∧ KineticEnergy(y) ∧ ElectricalEnergy(z) → (Harnesses(x, y) ∧ ConvertsInto(x, y, z) ∧ CanBeUsedToPowerHomesAndBusinesses(x)))"
    },
    {
        "NL": "A person is considered a surgeon if they perform surgical operations to treat injuries, diseases, and deformities.",
        "FOL": "∀x (Person(x) ∧ PerformsSurgicalOperations(x) ∧ TreatsInjuriesAndDiseasesAndDeformities(x) → Surgeon(x))"
    },
    {
        "NL": "Every car is fast.",
        "FOL": "∀x (Car(x) → Fast(x))"
    },
    {
        "NL": "Wind is generated by differences in atmospheric pressure, causing the air to move.",
        "FOL": "∀x∀y (Wind(x) → (AtmosphericPressure(y) ∧ Difference(y) ∧ CausesAirMovement(x)))"
    },
    {
        "NL": "A fruit is ripe when it is not green and not rotten.",
        "FOL": "∀x (Fruit(x) ∧ Ripe(x) → ¬Green(x) ∧ ¬Rotten(x))"
    },
    {
        "NL": "A painter paints as a sculptor sculpts.",
        "FOL": "∃x ∃y (Painter(x) ∧ Paints(x) ∧ Sculptor(y) ∧ Sculpts(y))"
    },
    {
        "NL": "A room is a kitchen if it is equipped with appliances and tools for cooking and food preparation.",
        "FOL": "∀x (Room(x) ∧ EquippedWithAppliances(x) ∧ EquippedWithTools(x) → Kitchen(x))"
    },
    {
        "NL": "An actor memorizes lines and performs roles in plays, movies, or television shows.",
        "FOL": "∀x∀y∀z (Actor(x) ∧ Line(y) ∧ (Play(z) ∨ Movie(z) ∨ TVShow(z)) → (Memorizes(x, y) ∧ PerformsRoleIn(x, z)))"
    },
    {
        "NL": "A tree grows from a seed, absorbs sunlight, and releases oxygen through the process of photosynthesis.",
        "FOL": "∀x∀y (Tree(x) ∧ Seed(y) ∧ GrowsFrom(x, y) → (AbsorbsSunlight(x) ∧ ReleasesOxygen(x) ∧ Photosynthesis(x)))"
    },
    {
        "NL": "In a scientific experiment, the hypothesis is supported when the results align with the predictions.",
        "FOL": "∀x ∀y (ScientificExperiment(x) ∧ Hypothesis(y) ∧ ResultsAlignWithPredictions(x, y) → Supported(y, x))"
    },
    {
        "NL": "A type of musical instrument that is made from a hollowed-out wooden body with strings stretched across it, played by plucking or strumming the strings with fingers or a pick, is a guitar.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HollowWoodenBody(x) ∧ StretchedStrings(x) ∧ PlayedByPlucking(x) ∨ PlayedByStrumming(x) ∧ FingersOrPick(x) → Guitar(x))"
    },
    {
        "NL": "A volcano that is active has regular eruptions, emits gases and lava, and often poses a threat to nearby communities.",
        "FOL": "∀x (Volcano(x) ∧ Active(x) → RegularEruptions(x) ∧ EmitsGasesAndLava(x) ∧ OftenPosesThreatToNearbyCommunities(x))"
    },
    {
        "NL": "A tool is versatile if it can perform multiple tasks or be used in different situations.",
        "FOL": "∀x (Tool(x) → (Versatile(x) ↔ (PerformsMultipleTasks(x) ∨ UsedInDifferentSituations(x))))"
    },
    {
        "NL": "It's incorrect to say that someone is a smart student if and only if they are diligent.",
        "FOL": "¬∀x (Smart(x) ∧ Student(x) ↔ Diligent(x))"
    },
    {
        "NL": "A volcano forms when molten rock, called magma, rises to the Earth's surface, creating an opening or vent, and periodically erupts, releasing lava, ash, and gases.",
        "FOL": "∀x∀y (Volcano(x) ∧ Magma(y) → (FormsWhenMagmaRises(x, y) ∧ CreatesOpeningOrVent(x) ∧ PeriodicallyErupts(x)))"
    },
    {
        "NL": "Kangaroos are brown, koalas are grey, and wombats are black.",
        "FOL": "∀x (Kangaroo(x) → Brown(x)) ∧ ∀y (Koala(y) → Grey(y)) ∧ ∀z (Wombat(z) → Black(z))"
    },
    {
        "NL": "All computers with a touch screen and a keyboard are considered hybrids.",
        "FOL": "∀x (Computer(x) ∧ TouchScreen(x) ∧ Keyboard(x) → Hybrid(x))"
    },
    {
        "NL": "There is no athlete who plays both tennis and football but has never participated in any tournament.",
        "FOL": "¬∃x (Athlete(x) ∧ PlayTennis(x) ∧ PlayFootball(x) ∧ ¬ParticipatedInTournament(x))"
    },
    {
        "NL": "A person is considered a physicist if they study and conduct research on the properties, behavior, and interactions of matter and energy, often working in academia, government, or industry.",
        "FOL": "∀x (Physicist(x) ↔ (StudiesAndConductsResearchOnPropertiesBehaviorAndInteractionsOfMatterAndEnergy(x) ∧ WorksInAcademiaGovernmentOrIndustry(x)))"
    },
    {
        "NL": "A gadget is either manual or automatic if it is not semi-automatic.",
        "FOL": "∀x (Gadget(x) ∧ ¬SemiAutomatic(x) → (Manual(x) ∨ Automatic(x)))"
    },
    {
        "NL": "A plant is considered a fern if it is a non-flowering vascular plant that reproduces by spores.",
        "FOL": "∀x (Plant(x) ∧ NonFloweringVascularPlant(x) ∧ ReproducesBySpores(x) → Fern(x))"
    },
    {
        "NL": "In a hospital, doctors treat patients with various medical conditions and perform surgeries when necessary.",
        "FOL": "∀x ∀y ∀z (Hospital(x) ∧ Doctor(y) ∧ Patient(z) ∧ InHospital(y, x) ∧ InHospital(z, x) → (Treats(y, z) ∨ PerformsSurgery(y, z)))"
    },
    {
        "NL": "Nobody is a happy athlete.",
        "FOL": "¬∃x (Athlete(x) ∧ Happy(x))"
    },
    {
        "NL": "A bird can fly if its wings are not injured.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ↔ ¬Injured(x, Wings)))"
    },
    {
        "NL": "Some employees are either analysts or managers, but not both.",
        "FOL": "∃x (Employee(x) ∧ (Analyst(x) ⊕ Manager(x)))"
    },
    {
        "NL": "A student will pass the course only if he does not skip the lectures.",
        "FOL": "∀x (Student(x) ∧ PassCourse(x) → ¬SkipLectures(x))"
    },
    {
        "NL": "Some flowers are either roses or tulips.",
        "FOL": "∃x (Flower(x) ∧ (Rose(x) ⊕ Tulip(x)))"
    },
    {
        "NL": "A celestial event that occurs when a celestial body casts a shadow on another body, blocking the view of the sun, is called an eclipse.",
        "FOL": "∀x∀y∀z (CelestialEvent(x) ∧ CelestialBody(y) ∧ CelestialBody(z) ∧ CastsShadow(y, z) ∧ BlocksSun(x, y, z) → Eclipse(x))"
    },
    {
        "NL": "Athletes compete in sports for teams.",
        "FOL": "∀x∀y∀z (Athlete(x) ∧ Sport(y) ∧ Team(z) → CompetesForIn(x, z, y))"
    },
    {
        "NL": "A diet is nutritious if it includes a variety of fruits, vegetables, and protein sources.",
        "FOL": "∀x (Diet(x) ∧ Nutritious(x) → (VarietyFruits(x) ∧ VarietyVegetables(x) ∧ ProteinSources(x)))"
    },
    {
        "NL": "A painting is an abstract artwork if it consists of non-representational shapes, colors, or patterns and does not depict recognizable objects or scenes.",
        "FOL": "∀x (Painting(x) ∧ NonRepresentationalShapesColorsPatterns(x) ∧ ¬DepictsRecognizableObjectsOrScenes(x) → AbstractArtwork(x))"
    },
    {
        "NL": "Something is either a large square or a small rectangle, but not both.",
        "FOL": "∀x ((Large(x) ∧ Square(x)) ⊕ (Small(x) ∧ Rectangle(x)))"
    },
    {
        "NL": "Siblings share the same parents, but are not identical twins.",
        "FOL": "∀x∀y (Sibling(x, y) → (ShareSameParents(x, y) ∧ ¬IdenticalTwins(x, y)))"
    },
    {
        "NL": "A smartphone is user-friendly if it has an intuitive interface, responsive touch controls, and a long-lasting battery life.",
        "FOL": "∀x (Smartphone(x) → (UserFriendly(x) ↔ (HasIntuitiveInterface(x) ∧ HasResponsiveTouchControls(x) ∧ HasLongLastingBatteryLife(x))))"
    },
    {
        "NL": "A song is catchy if it has a memorable melody and a rhythmic beat.",
        "FOL": "∀x (Song(x) ∧ Catchy(x) ↔ (MemorableMelody(x) ∧ RhythmicBeat(x)))"
    },
    {
        "NL": "A garden has flowers and trees.",
        "FOL": "∀x (Garden(x) → (HasFlowers(x) ∧ HasTrees(x)))"
    },
    {
        "NL": "A building is either residential or commercial, but not both.",
        "FOL": "∀x (Building(x) → (Residential(x) ⊕ Commercial(x)))"
    },
    {
        "NL": "A fruit that is typically red, round, and has a core with seeds is an apple.",
        "FOL": "∀x (Fruit(x) ∧ Red(x) ∧ Round(x) ∧ HasCoreWithSeeds(x) → Apple(x))"
    },
    {
        "NL": "An event is a festival if it is a public celebration or gathering, often involving music, dance, or other cultural activities.",
        "FOL": "∀x (Event(x) ∧ PublicCelebrationOrGathering(x) ∧ (InvolvesMusic(x) ∨ InvolvesDance(x) ∨ InvolvesCulturalActivities(x)) → Festival(x))"
    },
    {
        "NL": "A building that is constructed with sustainable materials, has energy-efficient systems, and promotes natural light is considered eco-friendly.",
        "FOL": "∀x (Building(x) ∧ ConstructedWithSustainableMaterials(x) ∧ HasEnergyEfficientSystems(x) ∧ PromotesNaturalLight(x) → EcoFriendly(x))"
    },
    {
        "NL": "Earthquakes are caused by the sudden release of energy from the Earth's crust, resulting in the shaking and displacement of the ground.",
        "FOL": "∀x (Earthquake(x) ∧ EnergyRelease(e) ∧ EarthCrust(c) ∧ Sudden(s) ∧ Shaking(sh) ∧ GroundDisplacement(g) → ResultsInShakingAndDisplacement(x, e, c, s, sh, g))"
    },
    {
        "NL": "A person is an engineer if they apply scientific principles to design and develop solutions.",
        "FOL": "∀x (Person(x) ∧ Engineer(x) ↔ AppliesScientificPrinciplesToDesignAndDevelopSolutions(x))"
    },
    {
        "NL": "A person who is a doctor diagnoses and treats illnesses.",
        "FOL": "∀x (Doctor(x) → (DiagnosesIllnesses(x) ∧ TreatsIllnesses(x)))"
    },
    {
        "NL": "An object is considered a musical instrument if it can produce musical sounds and is played by a musician.",
        "FOL": "∀x (Object(x) ∧ CanProduceMusicalSounds(x) ∧ PlayedByMusician(x) → MusicalInstrument(x))"
    },
    {
        "NL": "Cats are either awake or asleep, not both.",
        "FOL": "∀x (Cat(x) → (Awake(x) ⊕ Asleep(x)))"
    },
    {
        "NL": "Every student is either a sophomore or a freshman, but not both.",
        "FOL": "∀x (Student(x) → (Sophomore(x) ⊕ Freshman(x)))"
    },
    {
        "NL": "A toy is deemed educational if it stimulates cognitive development, encourages creativity, and fosters problem-solving skills in children.",
        "FOL": "∀x (Toy(x) ∧ StimulatesCognitiveDevelopment(x) ∧ EncouragesCreativity(x) ∧ FostersProblemSolvingSkills(x) → Educational(x))"
    },
    {
        "NL": "A planet sustains life when it has a stable orbit, possesses liquid water, and maintains an atmosphere with the right composition.",
        "FOL": "∀x (Planet(x) ∧ StableOrbit(x) ∧ LiquidWater(x) ∧ SuitableAtmosphere(x) → SustainsLife(x))"
    },
    {
        "NL": "An animal is an herbivore if it primarily eats plants.",
        "FOL": "∀x (Herbivore(x) ↔ (Animal(x) ∧ ∀y (Eats(x, y) → Plant(y))))"
    },
    {
        "NL": "A computer can wirelessly connect to a network if the computer has a wireless adapter and the network's signal strength is adequate.",
        "FOL": "∀x∀y (Computer(x) ∧ Network(y) ∧ WirelessAdapter(x) ∧ AdequateSignalStrength(y) → WirelesslyConnect(x, y))"
    },
    {
        "NL": "The writer is creating a story in the library.",
        "FOL": "∃x ∃y (Writer(x) ∧ Story(y) ∧ Creating(x, y) ∧ InTheLibrary(x))"
    },
    {
        "NL": "An event is a conference if it gathers professionals to discuss and share knowledge in a specific field, but not if it is primarily focused on entertainment.",
        "FOL": "∀x (Event(x) ∧ GathersProfessionals(x) ∧ ShareKnowledge(x) ∧ ¬FocusedOnEntertainment(x) → Conference(x))"
    },
    {
        "NL": "Coral reefs are formed by the accumulation of coral skeletons and support a diverse range of marine life.",
        "FOL": "∀x ∀y ∀z (CoralReef(x) ∧ CoralSkeleton(y) ∧ MarineLife(z) → (FormedByAccumulation(x, y) ∧ SupportsDiverseRange(x, z)))"
    },
    {
        "NL": "A book can be categorized as historical fiction if it tells a story set in the past, incorporates real-life events, and features characters who interact with actual historical figures.",
        "FOL": "∀x (Book(x) ∧ SetInThePast(x) ∧ IncorporatesRealLifeEvents(x) ∧ FeaturesCharactersInteractingWithHistoricalFigures(x) → HistoricalFiction(x))"
    },
    {
        "NL": "A business needs capital, a good strategy, and a strong team to succeed.",
        "FOL": "∀w (Business(w) → (HasCapital(w) ∧ HasGoodStrategy(w) ∧ HasStrongTeam(w)) → Succeeds(w))"
    },
    {
        "NL": "Dolphins are diurnal and swim during the day, while rats are nocturnal and active during the night.",
        "FOL": "∀x (Dolphin(x) → (Diurnal(x) ∧ SwimsDuringDay(x))) ∧ ∀y (Rat(y) → (Nocturnal(y) ∧ ActiveDuringNight(y)))"
    },
    {
        "NL": "There is no highest integer, nor a smallest integer.",
        "FOL": "∀x (Integer(x) → (∃y (Integer(y) ∧ Greater(y, x)) ∧ ∃z (Integer(z) ∧ Less(z, x))))"
    },
    {
        "NL": "A chef is preparing a dish under a light.",
        "FOL": "∃x ∃y ∃z (Chef(x) ∧ Dish(y) ∧ Light(z) ∧ Preparing(x, y) ∧ Under(x, z))"
    },
    {
        "NL": "A bakery sells a variety of pastries if it offers croissants, muffins, and danishes.",
        "FOL": "∀x (SellsVarietyOfPastries(x) ↔ (Bakery(x) ∧ ∃y (Croissants(y) ∧ Offers(x, y)) ∧ ∃z (Muffins(z) ∧ Offers(x, z)) ∧ ∃w (Danishes(w) ∧ Offers(x, w))))"
    },
    {
        "NL": "A country can be landlocked if it is surrounded entirely by other countries.",
        "FOL": "∀x (Country(x) ∧ SurroundedByCountries(x) → Landlocked(x))"
    },
    {
        "NL": "An object is a cube if it has six equal square faces and three dimensions.",
        "FOL": "∀x (Cube(x) ↔ (Object(x) ∧ SixEqualSquareFaces(x) ∧ ThreeDimensions(x)))"
    },
    {
        "NL": "A beehive houses a colony of bees, where they store honey and raise their young.",
        "FOL": "∀x ∀y ∀z (Beehive(x) ∧ Colony(y) ∧ Bees(b) ∧ Honey(h) ∧ Young(z) → HousesStoresAndRaises(x, y, h, z))"
    },
    {
        "NL": "A robot vacuum cleaner navigates a room using sensors and cleans the floor.",
        "FOL": "∀x ∀y ∀z (RobotVacuum(x) ∧ Room(y) ∧ Floor(z) → (∃w (Sensors(w) ∧ Navigate(x, y, w) ∧ Clean(x, z))))"
    },
    {
        "NL": "A garden looks beautiful when it has a variety of flowers and is well-maintained.",
        "FOL": "∀x (Garden(x) ∧ VarietyOfFlowers(x) ∧ WellMaintained(x) → Beautiful(x))"
    },
    {
        "NL": "Every salmon is a fish, but not every fish is a salmon.",
        "FOL": "∀x (Salmon(x) → Fish(x)) ∧ ¬∀x (Fish(x) → Salmon(x))"
    },
    {
        "NL": "A boat can navigate on rivers and lakes but is not suitable for desert or mountain terrains.",
        "FOL": "∀x ∀y (Boat(x) ∧ (River(y) ∨ Lake(y)) → NavigateOn(x, y)) ∧ ¬(Boat(x) ∧ (Desert(y) ∨ Mountain(y)) → NavigateOn(x, y))"
    },
    {
        "NL": "A scientist wins a prestigious award if they make a groundbreaking discovery and have a significant impact on their field.",
        "FOL": "∃x (Scientist(x) ∧ (GroundbreakingDiscovery(x) ∧ SignificantImpact(x) → WinsPrestigiousAward(x)))"
    },
    {
        "NL": "A musical note can be a whole note, half note, quarter note, or eighth note.",
        "FOL": "∀x (MusicalNote(x) → (WholeNote(x) ⊕ HalfNote(x) ⊕ QuarterNote(x) ⊕ EighthNote(x)))"
    },
    {
        "NL": "A museum conserves historic artifacts, safeguarding endangered items and their storage areas, while offering opportunities for archaeological research and artifact viewing.",
        "FOL": "∀x ∃y ∃z (Museum(x) → (EndangeredArtifacts(y) ∧ StorageArea(z) ∧ Belongs(y, z) ∧ (PreservesHistoricArtifacts(x) ∧ Protects(x, y) ∧ Protects(x, z) ∧ ProvidesArchaeologicalResearchOpportunities(x) ∧ ProvidesArtifactViewingOpportunities(x))))"
    },
    {
        "NL": "Engineers design and create machines, structures, or systems using principles of mathematics and science.",
        "FOL": "∀x ∀y (Engineer(x) → (Designs(x, y) ∧ Creates(x, y) ∧ UsesPrinciples(x, Mathematics) ∧ UsesPrinciples(x, Science)))"
    },
    {
        "NL": "A spacecraft orbits a planet within a solar system if the spacecraft has the necessary propulsion and navigational systems, the planet is part of the solar system, and the spacecraft's trajectory allows for a stable orbit.",
        "FOL": "∀x∀y∀z (Orbits(x, y, z) ↔ (Spacecraft(x) ∧ Planet(y) ∧ SolarSystem(z) ∧ NecessaryPropulsionAndNavigation(x) ∧ PartOfSolarSystem(y, z) ∧ StableOrbit(x, y)))"
    },
    {
        "NL": "A person is identified as a doctor if they have medical degree, cure patients, and often works in hospital.",
        "FOL": "∀x (Person(x) → HasMedicalDegree(x) ∧ CuresPatients(x) ∧ WorksInHospital(x) → Doctor(x))"
    },
    {
        "NL": "A science experiment is informative if it tests a hypothesis, follows proper methodology, and yields clear results.",
        "FOL": "∀x (ScienceExperiment(x) → (Informative(x) ↔ (TestsHypothesis(x) ∧ FollowsProperMethodology(x) ∧ YieldsClearResults(x))))"
    },
    {
        "NL": "A university has faculties, students, and offers various courses.",
        "FOL": "∀x∀y∀z (University(x) ∧ Faculty(y) ∧ Student(z) → OffersCourses(x, VariousCourses))"
    },
    {
        "NL": "A person is considered a pharmacist if they dispense medications, provide drug information, and ensure the safe and effective use of pharmaceuticals, often working in retail or hospital pharmacies.",
        "FOL": "∀x (Pharmacist(x) ↔ (DispensesMedicationsProvidesDrugInformationAndEnsuresSafeAndEffectiveUseOfPharmaceuticals(x) ∧ WorksInRetailOrHospitalPharmacies(x)))"
    },
    {
        "NL": "A device is labeled a computer if it is capable of executing instructions and manipulates data.",
        "FOL": "∀x (Device(x) ∧ ExecutesInstructions(x) ∧ ManipulatesData(x) → Computer(x))"
    },
    {
        "NL": "A material is biodegradable if it can be decomposed by bacteria or other living organisms and eventually integrated back into the natural environment.",
        "FOL": "∀x (Material(x) ∧ DecomposedByOrganisms(x) ∧ IntegratedIntoEnvironment(x) → Biodegradable(x))"
    },
    {
        "NL": "Each book is readable in some languages.",
        "FOL": "∀x (Book(x) → ∃y (Language(y) ∧ ReadableIn(x, y)))"
    },
    {
        "NL": "A person is considered a farmer if they cultivate land, raise livestock, or grow crops, often for food production, and manage agricultural operations.",
        "FOL": "∀x (Person(x) ∧ CultivatesLandRaisesLivestockOrGrowsCrops(x) ∧ OftenForFoodProduction(x) ∧ ManagesAgriculturalOperations(x) → Farmer(x))"
    },
    {
        "NL": "An elephant reserve conserves pachyderm population, shielding vulnerable elephants and their habitats, while offering facilities for zoological research and wildlife awareness programs.",
        "FOL": "∀x ∃y ∃z (ElephantReserve(x) → (VulnerableElephants(y) ∧ Habitat(z) ∧ ResidesIn(y, z) ∧ (ConservesPachydermPopulation(x) ∧ Shields(x, y) ∧ Shields(x, z) ∧ ProvidesZoologicalResearchFacilities(x) ∧ ProvidesWildlifeAwarenessPrograms(x))))"
    },
    {
        "NL": "A city is connected to another city by a direct flight if there is a non-stop air route between them.",
        "FOL": "∀x∀y (City(x) ∧ City(y) ∧ NonStopAirRoute(x, y) → DirectFlight(x, y))"
    },
    {
        "NL": "An electronic gadget can be a smartphone, a tablet, or a laptop, but not a combination of these.",
        "FOL": "∀x (ElectronicGadget(x) → (Smartphone(x) ⊕ Tablet(x) ⊕ Laptop(x)))"
    },
    {
        "NL": "Birds that do not fly include ostriches and penguins.",
        "FOL": "∀x (Bird(x) ∧ ¬CanFly(x) → (Ostrich(x) ⊕ Penguin(x)))"
    },
    {
        "NL": "A meal can consist of a starter, a main course, and a dessert.",
        "FOL": "∃x (Meal(x) ∧ Starter(x) ∧ MainCourse(x) ∧ Dessert(x))"
    },
    {
        "NL": "A musical performance that features a conductor, multiple instrumentalists, and a wide range of musical instruments is an orchestra.",
        "FOL": "∀x (MusicalPerformance(x) ∧ FeaturesConductor(x) ∧ MultipleInstrumentalists(x) ∧ WideRangeOfInstruments(x) → Orchestra(x))"
    },
    {
        "NL": "A meal is vegetarian if it doesn't contain meat.",
        "FOL": "∀x (Meal(x) ∧ ¬ContainMeat(x) → Vegetarian(x))"
    },
    {
        "NL": "Not every bird can fly or swim.",
        "FOL": "¬∀x (Bird(x) → (Fly(x) ∨ Swim(x)))"
    },
    {
        "NL": "Rainforests are biodiverse, while deserts are arid.",
        "FOL": "∀x (Rainforest(x) → Biodiverse(x)) ∧ ∀y (Desert(y) → Arid(y))"
    },
    {
        "NL": "When it rains, plants receive water and grow better.",
        "FOL": "∀x∀y (Rain(x) ∧ Plant(y) → (ReceivesWater(y, x) ∧ GrowsBetter(y)))"
    },
    {
        "NL": "A place is considered a library if it houses a collection of books and other resources for public use.",
        "FOL": "∀x (Library(x) ↔ (HousesBooks(x) ∧ HousesResources(x) ∧ PublicUse(x)))"
    },
    {
        "NL": "Fridges keep food cold to preserve it.",
        "FOL": "∀x∀y (Fridge(x) ∧ Food(y) → KeepsCold(x, y))"
    },
    {
        "NL": "A cashier is scanning products at the counter, or a store manager is setting up a sale in the store.",
        "FOL": "∃x ∃y (Cashier(x) ∧ Products(y) ∧ Scanning(x, y) ∧ AtTheCounter(x)) ∨ ∃z ∃w (StoreManager(z) ∧ Sale(w) ∧ SettingUp(z, w) ∧ InTheStore(z))"
    },
    {
        "NL": "Nothing is a yellow circle.",
        "FOL": "¬∃x (Circle(x) ∧ Yellow(x))"
    },
    {
        "NL": "A freezer keeps food cold.",
        "FOL": "∀x (Freezer(x) → KeepsFoodCold(x))"
    },
    {
        "NL": "A place where people gather to watch movies on a large screen, often accompanied by sound effects and music, is a movie theater.",
        "FOL": "∀x (Place(x) ∧ PeopleGather(x) ∧ WatchesMoviesOnLargeScreen(x) ∧ HasSoundEffectsAndMusic(x) → MovieTheater(x))"
    },
    {
        "NL": "A fruit is either ripe or unripe, but not both at the same time.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ⊕ Unripe(x)))"
    },
    {
        "NL": "If an item is on sale, its price is reduced for a limited time.",
        "FOL": "∀x (Item(x) ∧ OnSale(x) → (PriceReduced(x) ∧ LimitedTime(x)))"
    },
    {
        "NL": "If it rains, then the ground gets wet.",
        "FOL": "∀x (Rain(x) → Wet(ground))"
    },
    {
        "NL": "A bicycle is suitable for off-road use if it has durable tires and a sturdy frame.",
        "FOL": "∀x (Bicycle(x) ∧ DurableTires(x) ∧ SturdyFrame(x) → SuitableForOffRoadUse(x))"
    },
    {
        "NL": "A camera captures images by focusing light onto a sensor and recording the resulting data.",
        "FOL": "∀x (Camera(x) → (FocusesLight(x) ∧ RecordsData(x)))"
    },
    {
        "NL": "All authors who write for a reader are written for by a publisher.",
        "FOL": "∀x (Author(x) ∧ ∃y (Reader(y) ∧ Writes(x, y)) → ∃z (Publisher(z) ∧ Writes(z, x)))"
    },
    {
        "NL": "A planet orbiting a star can have an atmosphere containing oxygen, nitrogen, or carbon dioxide, but not all three gases simultaneously.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ Star(y) ∧ Orbits(x, y) → ((AtmosphereContains(x, Oxygen) ∨ AtmosphereContains(x, Nitrogen) ∨ AtmosphereContains(x, CarbonDioxide)) ∧ ¬(AtmosphereContains(x, Oxygen) ∧ AtmosphereContains(x, Nitrogen) ∧ AtmosphereContains(x, CarbonDioxide))))"
    },
    {
        "NL": "A planet is considered habitable if it has a stable orbit, a temperature suitable for liquid water, and a protective atmosphere.",
        "FOL": "∀x (Planet(x) ∧ StableOrbit(x) ∧ SuitableTemperatureForLiquidWater(x) ∧ ProtectiveAtmosphere(x) → Habitable(x))"
    },
    {
        "NL": "No musician who plays either guitar or piano is inexperienced, and not all of them are Grammy winners.",
        "FOL": "¬∃x (Musician(x) ∧ (PlaysGuitar(x) ∨ PlaysPiano(x)) ∧ Inexperienced(x)) ∧ ¬∀y (Musician(y) → GrammyWinner(y))"
    },
    {
        "NL": "A hat is hanging on the rack in the hallway.",
        "FOL": "∃x ∃y (Hat(x) ∧ Rack(y) ∧ HangingOn(x, y) ∧ InTheHallway(x))"
    },
    {
        "NL": "Someone is deemed intelligent if they are signed up in a school or a vocational school.",
        "FOL": "∀x (Person(x) ∧ (SignedUpSchool(x) ∨ SignedUpVocationalSchool(x)) → Intelligent(x))"
    },
    {
        "NL": "All paintings are profound or tied to some black object.",
        "FOL": "∀x (Painting(x) → (Profound(x) ∨ ∃y (Black(y) ∧ TiedTo(x, y))))"
    },
    {
        "NL": "A few sports are played indoors, some are played outdoors, and others are water-based.",
        "FOL": "∃x∃y∃z (Sport(x) ∧ Indoor(x) ∧ Sport(y) ∧ Outdoor(y) ∧ Sport(z) ∧ WaterBased(z))"
    },
    {
        "NL": "No exercise is beneficial unless it raises your heartbeat.",
        "FOL": "∀x (Beneficial(x) ↔ RaisesHeartbeat(x))"
    },
    {
        "NL": "A song is composed by a musician who plays an instrument.",
        "FOL": "∀x∀y (Song(x) ∧ Musician(y) ∧ PlaysInstrument(y) → ComposedBy(x, y))"
    },
    {
        "NL": "All birds have feathers and can fly.",
        "FOL": "∀x (Bird(x) → HaveFeathers(x) ∧ CanFly(x))"
    },
    {
        "NL": "No vehicle is a car unless it is motorized.",
        "FOL": "∀x (Vehicle(x) → (¬Car(x) ∨ Motorized(x)))"
    },
    {
        "NL": "A person is considered a chef if they prepare and cook meals in a professional kitchen.",
        "FOL": "∀x ∃y (Person(x) ∧ PreparesMeals(x, y) ∧ CooksMeals(x, y) ∧ ProfessionalKitchen(y) → Chef(x))"
    },
    {
        "NL": "A person is considered literate if they can read and write.",
        "FOL": "∀x (Person(x) ∧ CanRead(x) ∧ CanWrite(x) → Literate(x))"
    },
    {
        "NL": "Nothing that is alive is incapable of growth or reproduction.",
        "FOL": "¬∃x (Alive(x) ∧ ¬CanGrow(x) ∧ ¬CanReproduce(x))"
    },
    {
        "NL": "Telescopes enable astronomers to observe distant celestial objects, like stars, galaxies, and nebulae.",
        "FOL": "∀x∀y (Telescope(x) ∧ Astronomer(y) → (EnablesObservation(x, y, Stars) ∨ EnablesObservation(x, y, Galaxies) ∨ EnablesObservation(x, y, Nebulae)))"
    },
    {
        "NL": "A forest is a large area covered with trees.",
        "FOL": "∀x (Forest(x) → LargeAreaCoveredWithTrees(x))"
    },
    {
        "NL": "Every student is smart, but not every smart thing is a student.",
        "FOL": "∀x (Student(x) → Smart(x)) ∧ ¬∀x (Smart(x) → Student(x))"
    },
    {
        "NL": "A baby cries when it's hungry or needs a diaper change.",
        "FOL": "∀x (Baby(x) → (Hungry(x) ∨ NeedsDiaperChange(x)) → Cries(x))"
    },
    {
        "NL": "A chemical reaction occurs when reactants form products and release energy.",
        "FOL": "∀x (ChemicalReaction(x) → (FormProducts(x) ∧ ReleaseEnergy(x)))"
    },
    {
        "NL": "All engineers designed at least one bridge.",
        "FOL": "∀x (Engineer(x) → ∃y (Bridge(y) ∧ Designed(x, y)))"
    },
    {
        "NL": "A refrigerator keeps food cold to slow down the growth of bacteria and extend the shelf life of the food.",
        "FOL": "∀x (Refrigerator(x) → (KeepsFoodCold(x) ∧ SlowsBacteriaGrowth(x) ∧ ExtendsShelfLife(x)))"
    },
    {
        "NL": "An animal is a predator if it primarily hunts and consumes other animals as a primary source of food.",
        "FOL": "∀x (Animal(x) ∧ ∀y (Animal(y) ∧ HuntsAndConsumes(x, y) → PrimarySourceOfFood(x, y)) → Predator(x))"
    },
    {
        "NL": "A mountain is taller than a hill but shorter than a plateau.",
        "FOL": "∀x ∀y ∀z (Mountain(x) ∧ Hill(y) ∧ Plateau(z) → (Taller(x, y) ∧ Shorter(x, z)))"
    },
    {
        "NL": "A microwave heats food quickly but doesn't make it crispy.",
        "FOL": "∀x ∀y (Microwave(x) ∧ Food(y) → (HeatsQuickly(x, y) ∧ ¬MakesCrispy(x, y)))"
    },
    {
        "NL": "A laptop requires a power source to function, which can be a battery or a connected power adapter.",
        "FOL": "∀x∀y (Laptop(x) ∧ (Battery(y) ∨ PowerAdapter(y)) → RequiresPowerSource(x, y))"
    },
    {
        "NL": "A business can be either for-profit or non-profit.",
        "FOL": "∀x (Business(x) → (ForProfit(x) ⊕ NonProfit(x)))"
    },
    {
        "NL": "No one but the brave deserves the fair.",
        "FOL": "∀x (¬Brave(x) → ¬DeserveFair(x))"
    },
    {
        "NL": "A dish made by cooking small pieces of meat, vegetables, and other ingredients in a thick sauce, usually served with rice, is a curry.",
        "FOL": "∀x∀y∀z (Dish(x) ∧ CooksSmallPieces(x, y, z) ∧ Meat(y) ∧ Vegetables(z) ∧ ThickSauce(x) ∧ ServedWithRice(x) → Curry(x))"
    },
    {
        "NL": "An artist creates artwork using various materials, such as paint or clay, and displays their work in galleries.",
        "FOL": "∀x∀y∀z∀a (Artist(x) ∧ Artwork(y) ∧ (Paint(z) ∨ Clay(z)) ∧ Gallery(a) → (Creates(x, y) ∧ UsesMaterial(x, z) ∧ Displays(x, a)))"
    },
    {
        "NL": "Any artist who has won a Grammy and either holds a record deal or has been named an artist of the year, but not both, must have either worked for a record label or be a chart-topping artist.",
        "FOL": "∀x (Artist(x) ∧ WonGrammy(x) ∧ (HoldsRecordDeal(x) ⊕ NamedArtistOfYear(x)) → (WorkedForRecordLabel(x) ∨ ChartToppingArtist(x)))"
    },
    {
        "NL": "Trees that lose their leaves annually are deciduous trees.",
        "FOL": "∀x (Tree(x) ∧ LosesLeavesAnnually(x) → DeciduousTree(x))"
    },
    {
        "NL": "Apples fall from trees.",
        "FOL": "∀x∀y (Apple(x) ∧ Tree(y) → FallsFrom(x, y))"
    },
    {
        "NL": "A space probe can transmit data to Earth if it has a functioning antenna, sufficient power, and is within communication range.",
        "FOL": "∀x (SpaceProbe(x) ∧ TransmitDataToEarth(x) → (FunctioningAntenna(x) ∧ SufficientPower(x) ∧ WithinCommunicationRange(x)))"
    },
    {
        "NL": "A workout routine is effective for building muscle if it includes strength training, progressive overload, and adequate recovery.",
        "FOL": "∀x (WorkoutRoutine(x) → (StrengthTraining(x) ∧ ProgressiveOverload(x) ∧ AdequateRecovery(x) ↔ EffectiveForBuildingMuscle(x)))"
    },
    {
        "NL": "Programmers are professionals that write code and drink coffee.",
        "FOL": "∀x (Programmer(x) → Professional(x) ∧ WritesCode(x) ∧ DrinksCoffee(x))"
    },
    {
        "NL": "There are dishes that are tasty and healthy, but not easy to cook, or they are easy to cook but not tasty and healthy.",
        "FOL": "∀x (Dish(x) → ((Tasty(x) ∧ Healthy(x) ∧ ¬EasyToCook(x)) ⊕ (EasyToCook(x) ∧ ¬(Tasty(x) ∧ Healthy(x)))))"
    },
    {
        "NL": "Nobody in the school is playing basketball.",
        "FOL": "¬∃x (InSchool(x) ∧ PlayingBasketball(x))"
    },
    {
        "NL": "A television offers an audio-visual experience and allows viewers to watch shows and play video games.",
        "FOL": "∀x (Television(x) → (OffersAudioVisualExperience(x) ∧ AllowsShowWatching(x) ∧ AllowsVideoGamePlaying(x)))"
    },
    {
        "NL": "An architect designs buildings and plans construction projects.",
        "FOL": "∀x∀y∀z (Architect(x) ∧ Building(y) ∧ ConstructionProject(z) → (Designs(x, y) ∧ Plans(x, z)))"
    },
    {
        "NL": "An ice cream shop sells a variety of flavors and may offer cones, cups, or both for serving the ice cream.",
        "FOL": "∀x (IceCreamShop(x) → (∃y (Flavor(y) ∧ Sells(x, y)) ∧ (OffersCones(x) ∨ OffersCups(x) ∨ (OffersCones(x) ∧ OffersCups(x)))))"
    },
    {
        "NL": "An object is a tall cylinder except if it is blue.",
        "FOL": "∀x (Tall(x) ∧ Cylinder(x) → ¬Blue(x))"
    },
    {
        "NL": "No teacher who teaches either maths or chemistry is ignorant, and not all of them are geniuses.",
        "FOL": "¬∃x (Teacher(x) ∧ (TeachesMaths(x) ∨ TeachesChemistry(x)) ∧ Ignorant(x)) ∧ ¬∀y (Teacher(y) → Genius(y))"
    },
    {
        "NL": "A child is playing in the park with a ball.",
        "FOL": "∃x ∃y (Child(x) ∧ Ball(y) ∧ PlayingWith(x, y) ∧ InThePark(x))"
    },
    {
        "NL": "Camellias are pink, hydrangeas are blue, and orchids are purple.",
        "FOL": "∀x (Camellia(x) → Pink(x)) ∧ ∀y (Hydrangea(y) → Blue(y)) ∧ ∀z (Orchid(z) → Purple(z))"
    },
    {
        "NL": "An employee reports to a manager, and the manager reports to a director.",
        "FOL": "∀x∀y∀z (Employee(x) ∧ Manager(y) ∧ Director(z) → (ReportsTo(x, y) ∧ ReportsTo(y, z)))"
    },
    {
        "NL": "A store is convenient if it offers quick service or has a wide range of products.",
        "FOL": "∀x (Store(x) ∧ (QuickService(x) ∨ WideRangeOfProducts(x)) → Convenient(x))"
    },
    {
        "NL": "A square has four equal sides, while a rectangle has four sides with equal opposite sides.",
        "FOL": "∀x (Square(x) → HasEqualSides(x, 4)) ∧ (Rectangle(x) → (HasSides(x, 4) ∧ HasEqualOppositeSides(x)))"
    },
    {
        "NL": "A device that is used to control the flow of a liquid or gas through a pipe, by opening, closing, or partially obstructing the flow, is a valve.",
        "FOL": "∀x∀y∀z (Device(x) ∧ ControlsFlow(x, y) ∧ (Liquid(y) ∨ Gas(y)) ∧ ThroughPipe(z) ∧ (OpensFlow(x, z) ∨ ClosesFlow(x, z) ∨ PartiallyObstructsFlow(x, z)) → Valve(x))"
    },
    {
        "NL": "Stars with a mass above a certain threshold will eventually undergo a supernova explosion.",
        "FOL": "∀x (Star(x) ∧ MassAboveThreshold(x) → UndergoesSupernovaExplosion(x))"
    },
    {
        "NL": "A person is considered a singer if they perform songs.",
        "FOL": "∀x (Person(x) ∧ PerformsSongs(x) → Singer(x))"
    },
    {
        "NL": "If a location is a park, then it has trees and grass.",
        "FOL": "∀x (Location(x) ∧ Park(x) → HasTrees(x) ∧ HasGrass(x))"
    },
    {
        "NL": "A sport involving two teams of six players each, where they try to score points by hitting a ball over a net, is called volleyball.",
        "FOL": "∀x (Sport(x) ∧ InvolvesTeams(x, 2) ∧ PlayersPerTeam(x, 6) ∧ InvolvesHittingBallOverNet(x) → Volleyball(x))"
    },
    {
        "NL": "Carnivorous plants derive their nutrients primarily from trapping and consuming insects.",
        "FOL": "∀x (CarnivorousPlant(x) → (TrapsInsects(x) ∧ ConsumesInsects(x)))"
    },
    {
        "NL": "A transportation mode is a public transit system if it is operated by a governmental entity or a private organization, serves the general population, and facilitates the movement of people between different locations within a city or region.",
        "FOL": "∀x∀y∀z (TransportationMode(x) ∧ OperatedBy(x, y) ∧ (GovernmentalEntity(y) ∨ PrivateOrganization(y)) ∧ ServesGeneralPopulation(x) ∧ FacilitatesMovement(x, z) → PublicTransitSystem(x))"
    },
    {
        "NL": "Insects with six legs are hexapods, while spiders with eight legs are arachnids.",
        "FOL": "∀x (Insect(x) ∧ SixLegs(x) → Hexapod(x)) ∧ (Spider(x) ∧ EightLegs(x) → Arachnid(x))"
    },
    {
        "NL": "A light switch can be on or off.",
        "FOL": "∀x (LightSwitch(x) → (IsOn(x) ⊕ IsOff(x)))"
    },
    {
        "NL": "A person is considered a grandparent if they have one or more grandchildren.",
        "FOL": "∀x∃y (HasGrandchild(x, y) → Grandparent(x))"
    },
    {
        "NL": "A book is engaging when it has an interesting storyline, relatable characters, and (a well-paced narrative or a thought-provoking theme).",
        "FOL": "∀x (Book(x) ∧ Engaging(x) ↔ (InterestingStoryline(x) ∧ RelatableCharacters(x) ∧ (WellPacedNarrative(x) ∨ ThoughtProvokingTheme(x))))"
    },
    {
        "NL": "A scientist makes a breakthrough discovery by conducting innovative research and publishing the results in a reputable journal.",
        "FOL": "∀x (Scientist(x) ∧ InnovativeResearch(x) ∧ PublishesInReputableJournal(x) → BreakthroughDiscovery(x))"
    },
    {
        "NL": "Not all birds that tweet are sparrows, but only sparrows tweet.",
        "FOL": "¬∀x (Tweets(x) → IsSparrow(x)) ∧ ∀y (IsSparrow(y) → Tweets(y))"
    },
    {
        "NL": "A house needs regular maintenance to prevent damage caused by pests or weather conditions.",
        "FOL": "∀x (House(x) → (NeedsMaintenance(x) ↔ (PreventsDamage(x, pests) ∨ PreventsDamage(x, weather))))"
    },
    {
        "NL": "If an animal is a mammal, it has hair and is warm-blooded.",
        "FOL": "∀x (Animal(x) ∧ Mammal(x) → (HasHair(x) ∧ WarmBlooded(x)))"
    },
    {
        "NL": "If a person teaches and instructs students at a school, they are considered a teacher.",
        "FOL": "∀x (TeachesAndInstructsStudentsAtSchool(x) → Teacher(x))"
    },
    {
        "NL": "A material is a conductor if it allows the flow of electricity, but not if it is an insulator.",
        "FOL": "∀x (Material(x) → (AllowsElectricityFlow(x) ∧ ¬Insulator(x) → Conductor(x)))"
    },
    {
        "NL": "A pilot flies an airplane from one airport to another.",
        "FOL": "∀x∀y∀z∀w (Pilot(x) ∧ Airplane(y) ∧ Airport(z) ∧ Airport(w) → FliesFromTo(x, y, z, w))"
    },
    {
        "NL": "All players are skilled or some roses are red if and only if there exists a poem which is lovely unless there are no humans.",
        "FOL": "(∀x (Player(x) → Skilled(x)) ∨ ∃y (Rose(y) ∧ Red(y))) ↔ (∃z (Poem(z) ∧ (Lovely(z) ∨ ∀w (¬Human(w)))))"
    },
    {
        "NL": "A fitness program is effective if it incorporates a balanced diet, regular exercise, and sufficient rest.",
        "FOL": "∀x (FitnessProgram(x) → (Effective(x) ↔ (BalancedDiet(x) ∧ RegularExercise(x) ∧ SufficientRest(x))))"
    },
    {
        "NL": "A teacher teaches mathematics or physics.",
        "FOL": "∀x (Teacher(x) → (TeachesMathematics(x) ∨ TeachesPhysics(x)))"
    },
    {
        "NL": "Laptop computers are portable, desktop computers are more powerful, and smartphones are compact.",
        "FOL": "∀x ∀y ∀z (Laptop(x) ∧ Desktop(y) ∧ Smartphone(z) → (Portable(x) ∧ MorePowerful(y) ∧ Compact(z)))"
    },
    {
        "NL": "A dog fetches a ball in a yard.",
        "FOL": "∀x∀y∀z (Dog(x) ∧ Ball(y) ∧ Yard(z) → Fetches(x, y, z))"
    },
    {
        "NL": "Flowers bloom in the spring and provide nectar for bees.",
        "FOL": "∀x∀y (Flower(x) ∧ Spring(y) → (BloomsIn(x, y) ∧ ProvidesNectar(x, Bees)))"
    },
    {
        "NL": "An event that occurs annually, features live music, and is held at a specific outdoor venue is typically a music festival.",
        "FOL": "∀x∀y (Event(x) ∧ OccursAnnually(x) ∧ LiveMusic(x) ∧ OutdoorVenue(y) ∧ HeldAt(x, y) → MusicFestival(x))"
    },
    {
        "NL": "All eagles are birds, but not all birds are eagles.",
        "FOL": "∀x (Eagle(x) → Bird(x)) ∧ ¬∀x (Bird(x) → Eagle(x))"
    },
    {
        "NL": "All vehicles are either cars or motorcycles.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Motorcycle(x)))"
    },
    {
        "NL": "An island is an area of land surrounded by water and can be inhabited or uninhabited.",
        "FOL": "∀x (Island(x) → (AreaOfLand(x) ∧ SurroundedByWater(x) ∧ (Inhabited(x) ∨ Uninhabited(x))))"
    },
    {
        "NL": "It's not the fact that a thing is a heavy weight if and only if it is metallic.",
        "FOL": "¬∀x (Heavy(x) ∧ Weight(x) ↔ Metallic(x))"
    },
    {
        "NL": "In a game of chess, a player can move a pawn forward or capture an opponent's piece diagonally, but not both simultaneously.",
        "FOL": "∀x∀y (Player(x) ∧ Pawn(y) → ((MovesForward(x, y) ⊕ CapturesDiagonally(x, y)) ∧ ¬(MovesForward(x, y) ∧ CapturesDiagonally(x, y))))"
    },
    {
        "NL": "One farmer grows apples, while another farmer grows oranges.",
        "FOL": "∃x ∃y (Farmer(x) ∧ Apple(y) ∧ Grow(x, y)) ∧ ∃z ∃w (Farmer(z) ∧ Orange(w) ∧ Grow(z, w))"
    },
    {
        "NL": "A book with an engaging story attracts readers who enjoy adventure or fantasy genres.",
        "FOL": "∀x ∀y (Book(x) ∧ EngagingStory(x) ∧ Reader(y) → (EnjoysAdventureGenre(y) ∨ EnjoysFantasyGenre(y) → Attracts(y, x)))"
    },
    {
        "NL": "A machine that processes raw materials, shapes them into desired forms, and assembles parts to create a finished product is a manufacturing machine.",
        "FOL": "∀x (Machine(x) ∧ ProcessesRawMaterials(x) ∧ ShapesDesiredForms(x) ∧ AssemblesParts(x) → ManufacturingMachine(x))"
    },
    {
        "NL": "A train travels between stations on a rail track.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ Station(y) ∧ Station(z) ∧ RailTrack(x, y, z) → TravelsBetween(x, y, z))"
    },
    {
        "NL": "Languages can be spoken or written.",
        "FOL": "∀x (Language(x) → (Spoken(x) ∨ Written(x)))"
    },
    {
        "NL": "If a car is fast and expensive, then it designates at least one red item, unless it is a truck.",
        "FOL": "∀x ((Fast(x) ∧ Expensive(x)) → ∃y (Red(y) ∧ Designates(x, y) ∨ Truck(x)))"
    },
    {
        "NL": "No animals are both horses and zebras.",
        "FOL": "¬∃x (Animal(x) ∧ Horse(x) ∧ Zebra(x))"
    },
    {
        "NL": "Scientific research that involves collaboration between multiple disciplines leads to novel insights, drives innovation, and increases the potential for groundbreaking discoveries.",
        "FOL": "∀x∀y (ScientificResearch(x) ∧ CollaborationBetweenMultipleDisciplines(x, y) → (LeadsToNovelInsights(x, y) ∧ DrivesInnovation(x, y) ∧ IncreasesPotentialForGroundbreakingDiscoveries(x, y)))"
    },
    {
        "NL": "A refrigerator preserves perishable food by maintaining a cold temperature.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ PerishableFood(y) → PreservesByMaintainingColdTemperature(x, y))"
    },
    {
        "NL": "Any person who accommodates an individual will be accommodated by someone.",
        "FOL": "∀x ∃y (Person(x) ∧ Individual(y) ∧ Accommodates(x, y) → ∃z (Person(z) ∧ WillAccommodate(z, x)))"
    },
    {
        "NL": "To complete a marathon, a runner must cover a distance of 26.2 miles.",
        "FOL": "∀x (CompletesMarathon(x) → CoversDistance(x, 26.2_miles))"
    },
    {
        "NL": "Every dentist who respects every nurse is not admired by someone.",
        "FOL": "∀x (Dentist(x) → ∀y ((Nurse(y) → Respect(x, y)) → ¬∃z (Person(z) ∧ Admire(z, x))))"
    },
    {
        "NL": "A book becomes a bestseller if it has engaging dialogues, intriguing plots, and excellent writing style.",
        "FOL": "∀x (Book(x) ∧ HasEngagingDialogues(x) ∧ IntriguingPlots(x) ∧ ExcellentWritingStyle(x) → BecomesBestSeller(x))"
    },
    {
        "NL": "There aren't any dogs that bark but aren't friendly.",
        "FOL": "¬∃x (Dog(x) ∧ Bark(x) ∧ ¬Friendly(x))"
    },
    {
        "NL": "A triangle has three sides and the sum of its angles is 180 degrees.",
        "FOL": "∀x (Triangle(x) → (HasThreeSides(x) ∧ SumOfAngles(x, 180)))"
    },
    {
        "NL": "A person is an extrovert if they are outgoing, sociable, and enjoy being around people.",
        "FOL": "∀x (Person(x) ∧ Outgoing(x) ∧ Sociable(x) ∧ EnjoysBeingAroundPeople(x) → Extrovert(x))"
    },
    {
        "NL": "A scientist discovers a planet by observing it through a telescope and confirming its existence.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Planet(y) ∧ Telescope(z) ∧ ObservesThrough(x, y, z) ∧ ConfirmsExistence(x, y) → Discovers(x, y))"
    },
    {
        "NL": "A device charges a battery if the device supplies power and the battery is designed to receive and store the supplied energy.",
        "FOL": "∀x∀y (Charges(x, y) ↔ (Device(x) ∧ Battery(y) ∧ SuppliesPower(x) ∧ DesignedToReceiveAndStoreEnergy(y)))"
    },
    {
        "NL": "A light source emits white light when it emits all colors of the visible light spectrum.",
        "FOL": "∀x∀y∀z (LightSource(x) ∧ WhiteLight(y) ∧ VisibleLightSpectrum(z) → (Emits(x, y) ↔ EmitsAllColors(x, z)))"
    },
    {
        "NL": "Every bird can fly.",
        "FOL": "∀x (Bird(x) → CanFly(x))"
    },
    {
        "NL": "Every novelist who has written a bestseller and either writes fiction or non-fiction has either written with at least one novelist who has not written a bestseller, or has spoken in some literary festival.",
        "FOL": "∀x (Novelist(x) ∧ WrittenBestseller(x) ∧ (WritesFiction(x) ∨ WritesNonFiction(x)) → ∃y (Novelist(y) ∧ ¬WrittenBestseller(y) ∧ WrittenWith(x, y)) ∨ ∃z (LiteraryFestival(z) → SpokenIn(x, z)))"
    },
    {
        "NL": "A train station is efficient when it facilitates smooth passenger flow and minimizes waiting times.",
        "FOL": "∀x ∀y (TrainStation(x) ∧ SmoothPassengerFlow(y) ∧ MinimizesWaitingTimes(x) → Efficient(x))"
    },
    {
        "NL": "An instrument can be played loudly, softly, or at a moderate volume.",
        "FOL": "∀x∀y∀z (Instrument(x) ∧ (PlayedLoudly(x, y) ∨ PlayedSoftly(x, z) ∨ PlayedModerateVolume(x, y, z)))"
    },
    {
        "NL": "A cell phone can send a message to another cell phone using a network.",
        "FOL": "∀x ∀y ∀z (CellPhone(x) ∧ CellPhone(y) ∧ Network(z) → CanSend(x, y, z, Message))"
    },
    {
        "NL": "A raptor preys on small animals for sustenance, while a decomposer survives on the remnants of lifeless organisms.",
        "FOL": "∀x ∀y (Raptor(x) ∧ SmallAnimal(y) → PreysForSustenance(x, y)) ∧ ∀z ∀w (Decomposer(z) ∧ LifelessOrganism(w) → SurvivesOnRemnantsOf(z, w))"
    },
    {
        "NL": "A gardener plants flowers in specific soil types and locations.",
        "FOL": "∀x ∀y ∀z (Gardener(x) ∧ Flower(y) ∧ SoilType(z) → Plants(x, y, z))"
    },
    {
        "NL": "A tool that is compact and permits recording videos is a camcorder.",
        "FOL": "∀x (Tool(x) ∧ Compact(x) ∧ PermitsRecordingVideos(x) → Camcorder(x))"
    },
    {
        "NL": "A flower is white or pink.",
        "FOL": "∀x (Flower(x) → (White(x) ∨ Pink(x)))"
    },
    {
        "NL": "No cooks are either chefs or bakers, and none of them despise cooking.",
        "FOL": "¬∀x (Cook(x) → (Chef(x) ∨ Baker(x))) ∧ ∀y (Cook(y) → ¬DespiseCooking(y))"
    },
    {
        "NL": "A robot x can navigate a room y using a sensor z if z provides accurate spatial data and enables x to avoid obstacles within y.",
        "FOL": "∀x ∀y ∀z (Robot(x) ∧ Room(y) ∧ Sensor(z) ∧ ProvidesSpatialData(z) ∧ EnablesAvoidanceOfObstacles(x, z, y) → CanNavigate(x, y, z))"
    },
    {
        "NL": "A prime number has only two distinct positive divisors: itself and one.",
        "FOL": "∀x (PrimeNumber(x) → (∃y ∃z (PositiveDivisor(x, y) ∧ PositiveDivisor(x, z) ∧ Distinct(y, z) ∧ One(y) ∧ Itself(x, z))))"
    },
    {
        "NL": "Something is a small bike only if it is black.",
        "FOL": "∀x (Small(x) ∧ Bike(x) → Black(x))"
    },
    {
        "NL": "A tiger has stripes, a leopard has spots, and a cheetah has tear marks, but all are big cats.",
        "FOL": "∀x∀y∀z (Tiger(x) → HasStripes(x)) ∧ (Leopard(y) → HasSpots(y)) ∧ (Cheetah(z) → HasTearMarks(z)) ∧ (BigCat(x) ∧ BigCat(y) ∧ BigCat(z))"
    },
    {
        "NL": "A tree is either deciduous or coniferous if it is not a palm tree.",
        "FOL": "∀x (Tree(x) ∧ ¬Palm(x) → (Deciduous(x) ∨ Coniferous(x)))"
    },
    {
        "NL": "In a forest, trees absorb carbon dioxide and release oxygen, contributing to cleaner air.",
        "FOL": "∀x (Forest(x) ∧ TreesIn(x) → (AbsorbsCarbonDioxide(x) ∧ ReleasesOxygen(x) ∧ ContributesToCleanerAir(x)))"
    },
    {
        "NL": "An athlete x qualifies for competition y based on their performance z in a qualifying event and meeting the required standards.",
        "FOL": "∀x ∀y ∀z (Athlete(x) ∧ Competition(y) ∧ Performance(z) ∧ QualifyingEvent(z, x) ∧ MeetsRequiredStandards(x, y) → Qualifies(x, y))"
    },
    {
        "NL": "Hiking involves walking in natural environments, while jogging is a form of running at a slower pace.",
        "FOL": "∀x ∀y (Hiking(x) ∧ Jogging(y) → (WalkingInNaturalEnvironments(x) ⊕ RunningAtSlowerPace(y)))"
    },
    {
        "NL": "Only the diligent achieve success.",
        "FOL": "∀x (¬Diligent(x) → ¬AchieveSuccess(x))"
    },
    {
        "NL": "A dolphin is jumping in the sea, and a rooster is crowing in the morning.",
        "FOL": "∃x ∃y (Dolphin(x) ∧ Sea(y) ∧ JumpingIn(x, y)) ∧ ∃z (Rooster(z) ∧ Crowing(z) ∧ InMorning(z))"
    },
    {
        "NL": "A musician is a pianist if they primarily play the piano.",
        "FOL": "∀x (Musician(x) ∧ PrimarilyPlaysPiano(x) → Pianist(x))"
    },
    {
        "NL": "Animals that breathe through gills and have fins are considered fish.",
        "FOL": "∀x (Animal(x) ∧ BreathesThroughGills(x) ∧ HasFins(x) → Fish(x))"
    },
    {
        "NL": "A man is a granddad when his daughter has a baby.",
        "FOL": "∀x ∃y ∃z (Man(x) ∧ Person(y) ∧ Person(z) ∧ DaughterOf(y, x) ∧ ChildOf(z, y) → Granddad(x))"
    },
    {
        "NL": "A solar panel generates electricity when sunlight is absorbed by the panel's photovoltaic cells.",
        "FOL": "∀x∀y∀z (SolarPanel(x) ∧ Electricity(y) ∧ Sunlight(z) ∧ PhotovoltaicCells(x) ∧ Absorbed(z, x) → Generates(x, y))"
    },
    {
        "NL": "A person is considered a lawyer if they provide legal advice and represent clients in court.",
        "FOL": "∀x (Person(x) ∧ ProvidesLegalAdvice(x) ∧ RepresentsClientsInCourt(x) → Lawyer(x))"
    },
    {
        "NL": "A high-quality telescope allows the observation of distant celestial objects, enhances the clarity of their images, and helps in understanding the universe.",
        "FOL": "∀x (HighQualityTelescope(x) → (AllowsObservationOfDistantCelestialObjects(x) ∧ EnhancesClarityOfImages(x) ∧ HelpsUnderstandUniverse(x)))"
    },
    {
        "NL": "A flower is blooming if it's not wilted and not budding.",
        "FOL": "∀x (Flower(x) → (Blooming(x) ↔ (¬Wilted(x) ∧ ¬Budding(x))))"
    },
    {
        "NL": "A book that is scary can frighten the reader.",
        "FOL": "∀x ∀y (Book(x) ∧ Scary(x) ∧ Reader(y) → CanFrighten(x, y))"
    },
    {
        "NL": "Every teacher is either in the classroom or in the staffroom.",
        "FOL": "∀x (Teacher(x) → (InClassroom(x) ⊕ InStaffroom(x)))"
    },
    {
        "NL": "A bicycle is propelled forward by pedaling, which turns a chain connected to the wheels.",
        "FOL": "∀x (Bicycle(x) → (PropelledForward(x) ∧ Pedaling(x) ∧ TurnsChain(x) ∧ ConnectedToWheels(x)))"
    },
    {
        "NL": "Houses can have a garden, a pool, both, or none.",
        "FOL": "∀x (House(x) → (HasGarden(x) ∨ HasPool(x) ∨ (HasGarden(x) ∧ HasPool(x)) ∨ (¬HasGarden(x) ∧ ¬HasPool(x))))"
    },
    {
        "NL": "An object is considered a perfect sphere if it has a constant radius and smooth surface.",
        "FOL": "∀x (Object(x) ∧ ConstantRadius(x) ∧ SmoothSurface(x) → PerfectSphere(x))"
    },
    {
        "NL": "A solar farm that generates clean energy reduces greenhouse gas emissions and contributes to a sustainable future.",
        "FOL": "∀x (SolarFarm(x) ∧ GeneratesCleanEnergy(x) → (ReducesGreenhouseGasEmissions(x) ∧ ContributesToSustainableFuture(x)))"
    },
    {
        "NL": "A rainforest is a dense, tropical forest with high rainfall and supports a wide variety of plant and animal species.",
        "FOL": "∀x (Rainforest(x) → (DenseTropicalForest(x) ∧ HighRainfall(x) ∧ SupportsWideVarietyOfSpecies(x)))"
    },
    {
        "NL": "A device is a communication tool if it enables the transmission of messages or information between individuals, uses various mediums such as sound, text, or images, and facilitates interaction over long distances.",
        "FOL": "∀x∀y∀z (Device(x) ∧ EnablesTransmission(x, y, z) ∧ (Sound(y) ∨ Text(y) ∨ Images(y)) ∧ FacilitatesLongDistanceInteraction(z) → CommunicationTool(x))"
    },
    {
        "NL": "Healthy sleep habits improve overall well-being.",
        "FOL": "∀x (HealthySleepHabits(x) → ImprovesWellBeing(x))"
    },
    {
        "NL": "A room is dark if the lights are off and there is no natural light, but bright if the lights are on or there is natural light coming in.",
        "FOL": "∀x (Room(x) → ((Dark(x) ↔ (LightsOff(x) ∧ ¬NaturalLight(x))) ∧ (Bright(x) ↔ (LightsOn(x) ∨ NaturalLight(x)))))"
    },
    {
        "NL": "No worker in the company voiced complaints.",
        "FOL": "¬∃x (Worker(x) ∧ InCompany(x) ∧ VoicedComplaint(x))"
    },
    {
        "NL": "A machine capable of converting electrical energy into mechanical motion, utilizing a coil and magnetic field, is an electric motor.",
        "FOL": "∀x (Machine(x) ∧ ConvertsElectricalEnergy(x) ∧ ProducesMechanicalMotion(x) ∧ UsesCoilAndMagneticField(x) → ElectricMotor(x))"
    },
    {
        "NL": "If a structure is a pyramid, it has a triangular base and triangular sides.",
        "FOL": "∀x (Pyramid(x) → (TriangularBase(x) ∧ TriangularSides(x)))"
    },
    {
        "NL": "If all chefs who will be appointed are talented, then some waiters will not be appointed.",
        "FOL": "∀x (Chef(x) ∧ Appointed(x) → Talented(x)) → ∃y (Waiter(y) ∧ ¬Appointed(y))"
    },
    {
        "NL": "Every cat catches a mouse if no triangle has three sides.",
        "FOL": "¬∀x (Triangle(x) → ThreeSides(x)) → ∀y (Cat(y) → ∃z (Mouse(z) ∧ Catches(y, z)))"
    },
    {
        "NL": "A sustainable city implements environmentally friendly policies, promotes public transportation, and encourages green spaces for its residents.",
        "FOL": "∀x∀y (City(x) ∧ Resident(y, x) ∧ ImplementsEnvironmentallyFriendlyPolicies(x) ∧ PromotesPublicTransportation(x) ∧ EncouragesGreenSpaces(x, y) → Sustainable(x))"
    },
    {
        "NL": "Students studying computer science or mathematics are likely to be good at problem-solving.",
        "FOL": "∀x ((Student(x) ∧ (ComputerScience(x) ∨ Mathematics(x))) → GoodAtProblemSolving(x))"
    },
    {
        "NL": "A photographer captures images with a camera, while a painter uses brushes and paint to create pictures.",
        "FOL": "∀x ∀y (Photographer(x) ∧ Camera(y) → CapturesImagesWith(x, y)) ∧ ∀z ∀w ∀u (Painter(z) ∧ Brush(w) ∧ Paint(u) → CreatesPicturesWith(z, w, u))"
    },
    {
        "NL": "There exists a leader that every leader follows if all countries are not democratic.",
        "FOL": "¬∀x (Country(x) → Democratic(x)) → ∃y (Leader(y) ∧ ∀z (Leader(z) → Follows(z, y)))"
    },
    {
        "NL": "A software application that is user-friendly and intuitive is more likely to be adopted by a larger user base.",
        "FOL": "∀x ((UserFriendly(x) ∧ Intuitive(x)) → LargerUserBase(x))"
    },
    {
        "NL": "A device is labeled as smart if it can scan QR codes, narrate ePub, access cloud storage, and has a facial recognition.",
        "FOL": "∀x ((Device(x) ∧ ScanQRCodes(x) ∧ NarrateEpub(x) ∧ AccessCloudStorage(x) ∧ HasFacialRecognition(x)) → SmartDevice(x))"
    },
    {
        "NL": "A structure is a building if and only if it has walls and a roof.",
        "FOL": "∀x (Structure(x) → (Building(x) ↔ HasWalls(x) ∧ HasRoof(x)))"
    },
    {
        "NL": "Rainy weather increases the chance of a traffic accident.",
        "FOL": "∀x (RainyWeather(x) → IncreasesChanceOf(x, TrafficAccident))"
    },
    {
        "NL": "A business is either a grocery store or a restaurant.",
        "FOL": "∀x (Business(x) → (GroceryStore(x) ⊕ Restaurant(x)))"
    },
    {
        "NL": "Cloudy weather can make it difficult for stargazing enthusiasts to observe the night sky.",
        "FOL": "∀x∀y (CloudyWeather(x) ∧ StargazingEnthusiast(y) → DifficultToObserve(y, x))"
    },
    {
        "NL": "A valid passport is required for international travel, unless there is a visa-free agreement between the traveler's country and the destination country.",
        "FOL": "∀x∀y∀z (Traveler(x) ∧ InternationalTravel(y) ∧ Destination(y, z) ∧ ¬(VisaFreeAgreement(x, z)) → RequiresValidPassport(x, y))"
    },
    {
        "NL": "A volcano becomes active if there is a magma chamber near the surface and it erupts or releases gases.",
        "FOL": "∀x (Volcano(x) ∧ MagmaChamberNearSurface(x) ∧ (Erupts(x) ∨ ReleasesGases(x)) → Active(x))"
    },
    {
        "NL": "An ice cream shop serves a flavor if the flavor is available in stock and there's a demand for it among customers.",
        "FOL": "∀x ∀y ∀z (IceCreamShop(x) ∧ Flavor(y) ∧ InStock(x, y) ∧ CustomerDemand(z, y) → Serves(x, y))"
    },
    {
        "NL": "No planet is green.",
        "FOL": "¬∃x (Planet(x) ∧ Green(x))"
    },
    {
        "NL": "A job is fulfilling if it involves creativity or meaningful work, and it is not monotonous.",
        "FOL": "∀x (Job(x) → ((InvolvesCreativity(x) ∨ MeaningfulWork(x)) ∧ ¬Monotonous(x)) ↔ Fulfilling(x))"
    },
    {
        "NL": "A vaccine shields from a specific disease by stimulating the immune system to generate a particular reaction.",
        "FOL": "∀x ∃y (Vaccine(x) ∧ Disease(y) ∧ StimulatesImmuneSystem(x) ∧ GeneratesSpecificReaction(x, y) → ShieldsFrom(x, y))"
    },
    {
        "NL": "A child is crying in a room, and a parent is comforting at night.",
        "FOL": "∃x ∃y (Child(x) ∧ Room(y) ∧ CryingIn(x, y)) ∧ ∃z (Parent(z) ∧ Comforting(z) ∧ AtNight(z))"
    },
    {
        "NL": "A whale lives in water, while a lion lives on land.",
        "FOL": "∀x (Whale(x) → LivesInWater(x)) ∧ (Lion(x) → LivesOnLand(x))"
    },
    {
        "NL": "A person is considered a scientist if they conduct research in a specific field.",
        "FOL": "∀x ∃y (Person(x) ∧ ConductsResearchIn(x, y) → Scientist(x))"
    },
    {
        "NL": "If a person engages in volunteering activities, they are more likely to develop a strong sense of empathy and contribute positively to their community.",
        "FOL": "∀x (EngagesInVolunteeringActivities(x) → (DevelopStrongEmpathy(x) ∧ ContributePositivelyToCommunity(x)))"
    },
    {
        "NL": "A palindrome reads the same forward and backward.",
        "FOL": "∀x (Palindrome(x) ↔ ReadsSameForwardAndBackward(x))"
    },
    {
        "NL": "Not every athlete is either a footballer or a basketball player.",
        "FOL": "¬∀x (Athlete(x) → (Footballer(x) ∨ BasketballPlayer(x)))"
    },
    {
        "NL": "An injection guards against a particular sickness by provoking the immune response to generate a defined response.",
        "FOL": "∀x ∃y (Injection(x) ∧ Sickness(y) ∧ ProvokesImmuneResponse(x) ∧ GeneratesDefinedResponse(x, y) → GuardsAgainst(x, y))"
    },
    {
        "NL": "A gas expands when heated and contracts when cooled.",
        "FOL": "∀x∀y∀z (Gas(x) ∧ Heated(x, y) → Expands(x, y)) ∧ (Gas(x) ∧ Cooled(x, z) → Contracts(x, z))"
    },
    {
        "NL": "Mountains are colder as the altitude increases.",
        "FOL": "∀x (Mountain(x) ∧ AltitudeIncrease(x) → Colder(x))"
    },
    {
        "NL": "Every person who plays chess and is not a novice is a professional player.",
        "FOL": "∀x (Person(x) ∧ PlaysChess(x) ∧ ¬Novice(x) → ProfessionalPlayer(x))"
    },
    {
        "NL": "An apple is red or green, a banana is yellow, and an orange is, well, orange; none of these fruits are blue.",
        "FOL": "∀x (Apple(x) → (Red(x) ⊕ Green(x))) ∧ ∀y (Banana(y) → Yellow(y)) ∧ ∀z (Orange(z) → OrangeColor(z)) ∧ ¬∃w (Fruit(w) ∧ Blue(w))"
    },
    {
        "NL": "An agricultural field can support multiple crops if it has fertile soil, ample sunlight, and a suitable climate for each crop.",
        "FOL": "∀x∀y∀z (AgriculturalField(x) ∧ Crop(y) ∧ Climate(z) → (SupportsMultipleCrops(x, y) ↔ (FertileSoil(x) ∧ AmpleSunlight(x) ∧ SuitableClimateForCrop(x, z))))"
    },
    {
        "NL": "A film that is a drama can captivate audiences.",
        "FOL": "∀x ∀y (Film(x) ∧ Drama(x) ∧ Audience(y) → CanCaptivate(x, y))"
    },
    {
        "NL": "When a person owns a cat and a dog, they have at least two pets.",
        "FOL": "∀x ((OwnsCat(x) ∧ OwnsDog(x)) → AtLeastTwoPets(x))"
    },
    {
        "NL": "A recycling program collects and processes waste materials, reducing landfill usage and conserving natural resources by turning waste into new products.",
        "FOL": "∀x (RecyclingProgram(x) → (CollectsWasteMaterials(x) ∧ ProcessesWasteMaterials(x) ∧ ReducesLandfillUsage(x) ∧ ConservesNaturalResources(x) ∧ TurnsWasteIntoNewProducts(x)))"
    },
    {
        "NL": "An oven bakes food and heats it up, while a freezer stores food and doesn't heat it up.",
        "FOL": "∀x∀y (Oven(x) ∧ Freezer(y) → (BakesFood(x) ∧ HeatsUpFood(x) ∧ StoresFood(y) ∧ ¬HeatsUpFood(y)))"
    },
    {
        "NL": "A vehicle requires fuel and regular maintenance to operate efficiently.",
        "FOL": "∀x (Vehicle(x) → (RequiresFuel(x) ∧ RequiresRegularMaintenance(x)))"
    },
    {
        "NL": "A watch displays the correct time if it's properly synchronized with an accurate time source.",
        "FOL": "∀x (Watch(x) ∧ ProperlySynchronizedWithAccurateTimeSource(x) → DisplaysCorrectTime(x))"
    },
    {
        "NL": "Grizzly bears primarily eat fish and plants, polar bears mostly consume seals, and panda bears have a diet consisting almost entirely of bamboo.",
        "FOL": "∀x ∀y ∀z (GrizzlyBear(x) → (EatsFish(x) ∧ EatsPlants(x))) ∧ (PolarBear(y) → EatsSeals(y)) ∧ (PandaBear(z) → EatsBamboo(z))"
    },
    {
        "NL": "An appliance is considered energy-efficient if it consumes less energy than a conventional model while providing the same functionality.",
        "FOL": "∀x ∀y (Appliance(x) ∧ Appliance(y) ∧ Conventional(y) ∧ SameFunctionality(x, y) ∧ ConsumesLessEnergy(x, y) → EnergyEfficient(x))"
    },
    {
        "NL": "A celestial object is a satellite of another object if it revolves around the latter due to gravitational forces.",
        "FOL": "∀x ∀y (CelestialObject(x) ∧ CelestialObject(y) ∧ RevolvesAround(x, y) ∧ GravitationalForces(y, x) → SatelliteOf(x, y))"
    },
    {
        "NL": "Some workers are either technicians or electricians, but not both.",
        "FOL": "∃x (Worker(x) ∧ (Technician(x) ⊕ Electrician(x)))"
    },
    {
        "NL": "A film is a blockbuster if it delivers strong acting, stunning visuals, and contains thrilling plot or great soundtrack.",
        "FOL": "∀x (Film(x) ∧ DeliversStrongActing(x) ∧ StunningVisuals(x) ∧ (ThrillingPlot(x) ∨ GreatSoundtrack(x)) → Blockbuster(x))"
    },
    {
        "NL": "A productive work environment fosters open communication, provides necessary resources, and supports employee growth and development.",
        "FOL": "∀x (WorkEnvironment(x) ∧ FostersOpenCommunication(x) ∧ ProvidesNecessaryResources(x) ∧ SupportsEmployeeGrowthAndDevelopment(x) → Productive(x))"
    },
    {
        "NL": "A river flows into a lake, while a lake does not flow into a river.",
        "FOL": "∀x∀y (River(x) ∧ Lake(y) → (FlowsInto(x, y) ∧ ¬FlowsInto(y, x)))"
    },
    {
        "NL": "A university has professors.",
        "FOL": "∀x ∃y (University(x) ∧ Professor(y) ∧ WorksAt(y, x))"
    },
    {
        "NL": "A planet orbits a star and is not massive enough to cause thermonuclear fusion, distinguishing it from a star.",
        "FOL": "∀x (Planet(x) ↔ (OrbitsStar(x) ∧ ¬MassiveEnoughForThermonuclearFusion(x)))"
    },
    {
        "NL": "A camera captures images by focusing light onto a sensor, which then converts it into a digital format.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∧ FocusesLightOntoSensor(x) ∧ ConvertsToDigitalFormat(x)))"
    },
    {
        "NL": "An employee who works remotely does not commute to the office.",
        "FOL": "∀x (Employee(x) ∧ WorksRemotely(x) → ¬CommutesToOffice(x))"
    },
    {
        "NL": "An investment strategy is considered low-risk when it diversifies the portfolio and focuses on stable assets with a history of consistent returns.",
        "FOL": "∀x∀y∀z (InvestmentStrategy(x) ∧ DiversifiesPortfolio(x, y) ∧ StableAssetsWithConsistentReturns(x, z) → LowRisk(x))"
    },
    {
        "NL": "A politician advocating for social justice and supporting affordable healthcare or accessible education is progressive.",
        "FOL": "∀x (Politician(x) ∧ AdvocatesSocialJustice(x) ∧ (SupportsAffordableHealthcare(x) ∨ SupportsAccessibleEducation(x)) → Progressive(x))"
    },
    {
        "NL": "A large natural or artificial body of water that is used for storing water is a reservoir.",
        "FOL": "∀x∀y (BodyOfWater(x) ∧ Large(x) ∧ StoresWater(x, y) → Reservoir(x))"
    },
    {
        "NL": "A student must pass both the final exam and the midterm exam to pass the course.",
        "FOL": "∀x (Student(x) ∧ PassesFinalExam(x) ∧ PassesMidtermExam(x) → PassesCourse(x))"
    },
    {
        "NL": "Painters create paintings using various colors and techniques, and their artwork can be exhibited in galleries or museums.",
        "FOL": "∀x ∀y ∀z (Painter(x) ∧ Painting(y) ∧ (Gallery(z) ∨ Museum(z)) → (Creates(x, y) ∧ UsesColors(x) ∧ UsesTechniques(x) ∧ ExhibitedIn(y, z)))"
    },
    {
        "NL": "A shoe is classified as a boot if it is black, tall, and worn in rainy seasons.",
        "FOL": "∀x (Shoe(x) → Black(x) ∧ Tall(x) ∧ WornInRainySeasons(x) → Boot(x))"
    },
    {
        "NL": "A sphere is not red and does not contain any yellow item.",
        "FOL": "∀x (Sphere(x) → (¬Red(x) ∧ ¬∃y (Yellow(y) ∧ Contains(x, y))))"
    },
    {
        "NL": "A cat meows when seeking attention, while a dog barks when it senses a threat.",
        "FOL": "∀x∀y (Cat(x) ∧ Dog(y) → (SeeksAttention(x) ↔ Meows(x)) ∧ (SensesThreat(y) ↔ Barks(y)))"
    },
    {
        "NL": "Regular exercise contributes to overall health.",
        "FOL": "∀x (RegularExercise(x) → ContributesToHealth(x))"
    },
    {
        "NL": "Simon is not a banker if and only if Heather is a doctor.",
        "FOL": "¬Banker(simon) ↔ Doctor(heather)"
    },
    {
        "NL": "Only chefs and the passionate are innovative.",
        "FOL": "∀x (Person(x) ∧ Innovative(x) → Chef(x) ∨ Passionate(x))"
    },
    {
        "NL": "A golden dog admires a silver cat only if that cat admires it back.",
        "FOL": "∀x (Dog(x) → ∀y (Cat(y) ∧ Golden(x) ∧ Silver(y) ∧ Admires(x, y) → Admires(y, x)))"
    },
    {
        "NL": "A living organism that can synthesize its own food through the process of photosynthesis, absorbs nutrients from the soil, and grows in a fixed location is a plant.",
        "FOL": "∀x (LivingOrganism(x) ∧ SynthesizeOwnFood(x) ∧ Photosynthesis(x) ∧ AbsorbsNutrientsFromSoil(x) ∧ GrowsInFixedLocation(x) → Plant(x))"
    },
    {
        "NL": "A square has all sides equal and each angle measures 90 degrees.",
        "FOL": "∀x (Square(x) ↔ (AllSidesEqual(x) ∧ EachAngle(x, 90)))"
    },
    {
        "NL": "Humans need water and food to survive.",
        "FOL": "∀x (Human(x) → (NeedsWater(x) ∧ NeedsFood(x)))"
    },
    {
        "NL": "A cup holds liquid when it is upright and spills it when tilted.",
        "FOL": "∀x∀y (Cup(x) ∧ Liquid(y) → (Upright(x) → Holds(x, y)) ∧ (Tilted(x) → Spills(x, y)))"
    },
    {
        "NL": "Bakers prepare baked goods and sell them in their bakery.",
        "FOL": "∀x (Baker(x) → ∃y∃z (Bakery(y) ∧ Owns(x, y) ∧ BakedGood(z) ∧ PreparesAndSells(x, z, y)))"
    },
    {
        "NL": "An educational program is successful if it has a diverse curriculum, experienced instructors, and supportive resources, but not if it has a high dropout rate.",
        "FOL": "∀x (EducationalProgram(x) ∧ DiverseCurriculum(x) ∧ ExperiencedInstructors(x) ∧ SupportiveResources(x) ∧ ¬HighDropoutRate(x) → Successful(x))"
    },
    {
        "NL": "A telescope is used to observe celestial bodies or distant objects.",
        "FOL": "∀x (Telescope(x) → (ObservesCelestialBodies(x) ∨ ObservesDistantObjects(x)))"
    },
    {
        "NL": "A vegetarian does not eat meat but may consume dairy products or eggs.",
        "FOL": "∀x (Vegetarian(x) → (¬EatsMeat(x) ∧ (ConsumesDairyProducts(x) ∨ ConsumesEggs(x))))"
    },
    {
        "NL": "An airplane can take off if there is enough runway length and appropriate weather conditions.",
        "FOL": "∀x (CanTakeOff(x) ↔ (Airplane(x) ∧ EnoughRunwayLength(x) ∧ AppropriateWeatherConditions(x)))"
    },
    {
        "NL": "All cars that are reliable and cheap become sold.",
        "FOL": "∀x (Car(x) ∧ Reliable(x) ∧ Cheap(x) → Sold(x))"
    },
    {
        "NL": "Every crossover genre is popular only if it involves rock.",
        "FOL": "∀x (CrossoverGenre(x) → (Popular(x) → Rock(x)))"
    },
    {
        "NL": "It is not a fact that every cat is playful.",
        "FOL": "¬∀x (Cat(x) → Playful(x))"
    },
    {
        "NL": "If an animal is a reptile, it has scales and lays eggs.",
        "FOL": "∀x (Animal(x) ∧ Reptile(x) → (HasScales(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A fabric that is lightweight, breathable, and absorbs moisture is suitable for athletic wear.",
        "FOL": "∀x (Fabric(x) ∧ Lightweight(x) ∧ Breathable(x) ∧ AbsorbsMoisture(x) → SuitableForAthleticWear(x))"
    },
    {
        "NL": "No doctor in the hospital examined patients.",
        "FOL": "∀x (Doctor(x) ∧ InHospital(x) → ¬ExaminedPatient(x))"
    },
    {
        "NL": "A vehicle is classified as a luxury car if it has superior comfort, brand prestige, and often innovative technology.",
        "FOL": "∀x (Vehicle(x) → SuperiorComfort(x) ∧ BrandPrestige(x) ∧ InnovativeTech(x) → LuxuryCar(x))"
    },
    {
        "NL": "Chemical reactions can be classified as exothermic, endothermic, or neither based on the release or absorption of heat.",
        "FOL": "∀x (ChemicalReaction(x) → Exothermic(x) ⊕ Endothermic(x) ⊕ NeitherExoNorEndo(x))"
    },
    {
        "NL": "A healthy diet includes fresh fruits, vegetables, and lean proteins while limiting processed foods and added sugars.",
        "FOL": "∀x (Diet(x) ∧ FreshFruits(x) ∧ Vegetables(x) ∧ LeanProteins(x) ∧ LimitedProcessedFoods(x) ∧ LimitedAddedSugars(x) → Healthy(x))"
    },
    {
        "NL": "No kid in the playground knows either Harry or Kate.",
        "FOL": "∀x (Kid(x) ∧ InPlayground(x) → ¬Know(x, harry) ∧ ¬Know(x, kate))"
    },
    {
        "NL": "A novel is captivating if and only if its plot is unexpected and the characters are well-developed, but it doesn't contain too many confusing terms",
        "FOL": "∀x (Novel(x) ∧ Captivating(x) ↔ (UnexpectedPlot(x) ∧ WellDevelopedCharacters(x) ∧ ¬ManyConfusingTerms(x)))"
    },
    {
        "NL": "A microscope magnifies small objects so they can be observed in detail.",
        "FOL": "∀x (Microscope(x) → (MagnifiesSmallObjects(x) ∧ EnablesObservation(x) ∧ InDetail(x)))"
    },
    {
        "NL": "A smartphone can take photos, send messages, and make calls.",
        "FOL": "∀x (Smartphone(x) → TakePhotos(x) ∧ SendMessages(x) ∧ MakeCalls(x))"
    },
    {
        "NL": "A phone is suitable for outdoor adventures if it is durable, has a good camera, and is resistant to water.",
        "FOL": "∀x (Phone(x) → (Durable(x) ∧ GoodCamera(x) ∧ WaterResistant(x) ↔ SuitableForOutdoorAdventures(x)))"
    },
    {
        "NL": "A vehicle that is a car operates on land, requires a fuel source to function, and typically has four wheels.",
        "FOL": "∀x (Vehicle(x) ∧ Car(x) → OperatesOnLand(x) ∧ RequiresFuelSource(x) ∧ TypicallyHasFourWheels(x))"
    },
    {
        "NL": "A celestial object orbits a star if it is bound by the star's gravity, follows an elliptical path, and completes a full orbit periodically.",
        "FOL": "∀x∀y (CelestialObject(x) ∧ Star(y) ∧ BoundByGravity(x, y) ∧ FollowsEllipticalPath(x, y) ∧ CompletesFullOrbitPeriodically(x, y) → Orbits(x, y))"
    },
    {
        "NL": "A cell phone is a type of electronic device.",
        "FOL": "∀x (CellPhone(x) → ElectronicDevice(x))"
    },
    {
        "NL": "A player is selected for the match if they perform better than their teammate.",
        "FOL": "∀x ∀y (Player(x) ∧ Player(y) ∧ PerformsBetter(x, y) → SelectedForMatch(x))"
    },
    {
        "NL": "A business conference is successful if the invited keynote speaker is well-known and the event has a high attendance rate.",
        "FOL": "∀x∀y (BusinessConference(x) ∧ KeynoteSpeaker(y) → (WellKnown(y) ∧ HighAttendanceRate(x) → Successful(x)))"
    },
    {
        "NL": "There is a city every traveler dreams of.",
        "FOL": "∃x (City(x) ∧ ∀y (Traveler(y) → Dreams(y, x)))"
    },
    {
        "NL": "A museum displays and preserves objects of historical, cultural, or scientific importance.",
        "FOL": "∀x (Museum(x) ↔ (DisplaysObjects(x) ∧ PreservesObjects(x) ∧ (HistoricalImportance(x) ∨ CulturalImportance(x) ∨ ScientificImportance(x))))"
    },
    {
        "NL": "A bicycle is powered by human pedaling, while a motorcycle is powered by an engine.",
        "FOL": "∀x (Bicycle(x) → HumanPowered(x)) ⊕ ∀y (Motorcycle(y) → EnginePowered(y))"
    },
    {
        "NL": "No books are interesting.",
        "FOL": "∀x (Book(x) → ¬Interesting(x))"
    },
    {
        "NL": "Every dog loves to play.",
        "FOL": "∀x (Dog(x) → LovesToPlay(x))"
    },
    {
        "NL": "A place is a canyon if it is a deep, narrow valley with steep sides formed by the erosion of rock.",
        "FOL": "∀x (Canyon(x) ↔ (Place(x) ∧ DeepValley(x) ∧ NarrowValley(x) ∧ SteepSides(x) ∧ FormedByErosion(x)))"
    },
    {
        "NL": "Mail is delivered by mail carriers, who travel from house to house.",
        "FOL": "∀x ∀y ∀z (Mail(x) ∧ MailCarrier(y) ∧ House(z) → (Delivers(y, x) ∧ TravelsBetween(y, z)))"
    },
    {
        "NL": "A mathematical theorem is proven if its logical consequences are consistent with established axioms and previously proven theorems.",
        "FOL": "∀x (MathematicalTheorem(x) → (Proven(x) ↔ ConsistentWithAxiomsAndTheorems(x)))"
    },
    {
        "NL": "A truck that can transport more than 20 tons and has four or more doors is considered a heavy-duty truck.",
        "FOL": "∀x (Truck(x) ∧ CanTransportMoreThanTwentyTons(x) ∧ (HasFourDoors(x) ∨ HasMoreThanFourDoors(x)) → HeavyDutyTruck(x))"
    },
    {
        "NL": "Parrots can mimic human speech and eat fruit, while pigeons can't mimic speech but also eat fruits.",
        "FOL": "∀x (Parrot(x) → (MimicHumanSpeech(x) ∧ EatsFruits(x))) ∧ ∀y (Pigeon(y) → (¬MimicHumanSpeech(y) ∧ EatsFruits(y)))"
    },
    {
        "NL": "All architects who have creativity and extensive knowledge are successful.",
        "FOL": "∀x (Architect(x) ∧ HasCreativity(x) ∧ HasExtensiveKnowledge(x) → Successful(x))"
    },
    {
        "NL": "A library keeps books and lend them out when requested by users.",
        "FOL": "∀x (Library(x) → (KeepsBooks(x) ∧ (IsRequestedByUsers(x) → LendsThemOut(x))))"
    },
    {
        "NL": "Mathematics includes different branches like algebra, calculus, and geometry.",
        "FOL": "∀x (Mathematics(x) → (Algebra(x) ∨ Calculus(x) ∨ Geometry(x)))"
    },
    {
        "NL": "A machine is functional if and only if it switches on and performs tasks, but not overheat.",
        "FOL": "∀x (Machine(x) → (Functional(x) ↔ (SwitchesOn(x) ∧ PerformsTasks(x)) ∧ ¬Overheats(x)))"
    },
    {
        "NL": "Cities with high pollution levels have poor air quality and may cause health problems for their residents.",
        "FOL": "∀x (City(x) ∧ HighPollutionLevel(x) → (PoorAirQuality(x) ∧ MayCauseHealthProblemsForResidents(x)))"
    },
    {
        "NL": "If Jessica is not a pilot then she is a pilot.",
        "FOL": "¬Pilot(jessica) → Pilot(jessica)"
    },
    {
        "NL": "Each athlete who plays in both major and minor leagues, unless they are a Hall of Fame inductee, has either received an MVP award or has not coached a local team.",
        "FOL": "∀x (Athlete(x) ∧ PlaysInMajorLeague(x) ∧ PlaysInMinorLeague(x) ∨ HallOfFameInductee(x) → (ReceivedMvpAward(x) ∨ ¬CoachedLocalTeam(x)))"
    },
    {
        "NL": "A person is considered an engineer if they design, build, and maintain structures, machines, or systems.",
        "FOL": "∀x (Person(x) ∧ DesignsStructures(x) ∧ BuildsStructures(x) ∧ MaintainsStructures(x) ∧ (Machines(x) ∨ Systems(x)) → Engineer(x))"
    },
    {
        "NL": "There is either a tall tree or a short bush, but neither is red.",
        "FOL": "∃x (((Tall(x) ∧ Tree(x)) ∨ (Short(x) ∧ Bush(x))) ∧ ¬Red(x))"
    },
    {
        "NL": "A mountain climber ascends to the summit, equipped with safety gear and accompanied by a team of experienced climbers.",
        "FOL": "∀x∀y∀z (MountainClimber(x) ∧ Mountain(y) ∧ Summit(z) ∧ OnMountain(z, y) → (AscendsTo(x, z) ∧ EquippedWithSafetyGear(x) ∧ AccompaniedByExperiencedClimbers(x)))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity to power devices.",
        "FOL": "∀x∀y (SolarPanel(x) ∧ Sunlight(y) → ConvertsIntoElectricity(x, y) ∧ PowersDevices(x, y))"
    },
    {
        "NL": "A gaming device can render graphics, play audio, or animate characters.",
        "FOL": "∀x (GamingDevice(x) → RenderGraphics(x) ∧ PlayAudio(x) ∧ AnimateCharacters(x))"
    },
    {
        "NL": "A tornado forms when unstable air conditions occur and create a powerful rotating wind funnel.",
        "FOL": "∀x (UnstableAirConditions(x) ∧ CreatesRotatingWindFunnel(x) → Tornado(x))"
    },
    {
        "NL": "A recipe becomes popular if it has simple ingredients, easy steps, and a delicious result.",
        "FOL": "∀x (Recipe(x) ∧ HasSimpleIngredients(x) ∧ HasEasySteps(x) ∧ HasDeliciousResult(x) → BecomesPopular(x))"
    },
    {
        "NL": "A plant absorbs nutrients from the soil through its roots if the nutrients are present in the soil and the roots are healthy.",
        "FOL": "∀x∀y∀z (Plant(x) ∧ Soil(y) ∧ Nutrients(z) ∧ PresentIn(z, y) ∧ HealthyRoots(x) → AbsorbsNutrients(x, y, z))"
    },
    {
        "NL": "Every animal is a mammal or a bird.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ∨ Bird(x)))"
    },
    {
        "NL": "A movie can be classified as either a comedy, drama, action, or horror film, but not more than one of these genres.",
        "FOL": "∀x (Movie(x) → ((Comedy(x) ⊕ Drama(x)) ⊕ (Action(x) ⊕ Horror(x))))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight, compact, and has a long-lasting battery.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ Compact(x) ∧ LongLastingBattery(x) → Portable(x))"
    },
    {
        "NL": "A mammal has hair or fur and gives birth to live young.",
        "FOL": "∀x (Mammal(x) → (HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x)))"
    },
    {
        "NL": "A mountain is taller than a hill and has a steeper slope.",
        "FOL": "∀x ∀y (Mountain(x) ∧ Hill(y) → (Taller(x, y) ∧ SteeperSlope(x)))"
    },
    {
        "NL": "A company that offers competitive compensation and benefits is more likely to attract and retain top talent.",
        "FOL": "∀x (OffersCompetitiveCompensationAndBenefits(x) → (AttractTopTalent(x) ∧ RetainTopTalent(x)))"
    },
    {
        "NL": "A building is a skyscraper if it has more than 50 floors, a steel frame, and a height exceeding 500 feet.",
        "FOL": "∀x (Building(x) → (Skyscraper(x) ↔ (MoreThan50Floors(x) ∧ SteelFrame(x) ∧ HeightExceeds500Feet(x))))"
    },
    {
        "NL": "A vehicle with a combustion engine uses fuel to generate power, which is converted into motion, while an electric vehicle uses electricity from a battery for propulsion.",
        "FOL": "∀x ∀y (CombustionEngineVehicle(x) → (UsesFuelToGeneratePower(x) ∧ ConvertsPowerToMotion(x))) ⊕ (∀z (ElectricVehicle(z) ∧ Battery(y) → UsesElectricityFromBatteryForPropulsion(z, y)))"
    },
    {
        "NL": "A smartphone connects to a Wi-Fi network with the correct password.",
        "FOL": "∀x∀y (Smartphone(x) ∧ WiFiNetwork(y) ∧ CorrectPassword(x, y) → Connects(x, y))"
    },
    {
        "NL": "If all birds are not singing, then there exists a tree every tree shelters under.",
        "FOL": "¬∀x (Bird(x) → Singing(x)) → ∃y (Tree(y) ∧ ∀z (Tree(z) → SheltersUnder(z, y)))"
    },
    {
        "NL": "A well-insulated building conserves energy by maintaining a stable temperature.",
        "FOL": "∀x (WellInsulatedBuilding(x) → ConservesEnergyByMaintainingStableTemperature(x))"
    },
    {
        "NL": "A lighthouse emits a beam of light for navigation, a radar detects objects using radio waves, and a sonar detects objects using sound waves.",
        "FOL": "∀x∀y∀z (Lighthouse(x) ∧ Radar(y) ∧ Sonar(z) → (EmitsLightBeam(x) ∧ DetectsObjectsRadioWaves(y) ∧ DetectsObjectsSoundWaves(z)))"
    },
    {
        "NL": "All men are brave.",
        "FOL": "∀x (Men(x) → Brave(x))"
    },
    {
        "NL": "Plants are organisms that produce oxygen and perform photosynthesis.",
        "FOL": "∀x (Plant(x) → Organism(x) ∧ ProduceOxygen(x) ∧ PerformPhotosynthesis(x))"
    },
    {
        "NL": "Anyone who helps another will be assisted by someone.",
        "FOL": "∀x ∃y (Person(x) ∧ Person(y) ∧ Helps(x, y) → ∃z (Person(z) ∧ WillAssist(z, x)))"
    },
    {
        "NL": "A musical instrument that produces sound by vibrating strings is classified as a string instrument if it has a resonating body.",
        "FOL": "∀x (MusicalInstrument(x) ∧ VibratingStrings(x) ∧ ResonatingBody(x) → StringInstrument(x))"
    },
    {
        "NL": "Diamonds are hard.",
        "FOL": "∀x (Diamond(x) → Hard(x))"
    },
    {
        "NL": "A library lends books and offers public computers.",
        "FOL": "∀x (Library(x) → (LendsBooks(x) ∧ OffersPublicComputers(x)))"
    },
    {
        "NL": "A few tools are electric but not cordless.",
        "FOL": "∃x (Tool(x) ∧ Electric(x) ∧ ¬Cordless(x))"
    },
    {
        "NL": "A pharmacy sells prescription medications, over-the-counter drugs, and health products.",
        "FOL": "∀x∀y∀z (Pharmacy(x) → ((PrescriptionMedication(y) ∨ OverTheCounterDrug(y) ∨ HealthProduct(z)) → Sells(x, y, z)))"
    },
    {
        "NL": "An aquatic animal that has gills and is cold-blooded is a fish.",
        "FOL": "∀x (AquaticAnimal(x) ∧ HasGills(x) ∧ ColdBlooded(x) → Fish(x))"
    },
    {
        "NL": "Not every smartphone with a good camera has a long-lasting battery or fast processor.",
        "FOL": "¬∀x (Smartphone(x) ∧ GoodCamera(x) → (LongLastingBattery(x) ∨ FastProcessor(x)))"
    },
    {
        "NL": "A submarine is a watercraft capable of operating underwater, utilizing a system of ballast tanks to control buoyancy and propulsion systems to navigate the ocean depths.",
        "FOL": "∀x∀y∀z (Submarine(x) → (Watercraft(x) ∧ CapableOfOperatingUnderwater(x) ∧ UtilizesSystemOfBallastTanks(x, y) ∧ ControlsBuoyancy(y) ∧ UsesPropulsionSystems(x, z) ∧ NavigatesOceanDepths(z)))"
    },
    {
        "NL": "No rectangles are big.",
        "FOL": "¬∃x (Rectangle(x) → Big(x))"
    },
    {
        "NL": "Some paintings are both abstract and colorful.",
        "FOL": "∃x (Painting(x) ∧ Abstract(x) ∧ Colorful(x))"
    },
    {
        "NL": "A person is healthy only if he doesn't smoke.",
        "FOL": "∀x (Person(x) ∧ Healthy(x) → ¬Smoke(x))"
    },
    {
        "NL": "Chairs have legs, while beanbags don't.",
        "FOL": "∀x ((Chair(x) → ∃y (Leg(y) ∧ HasLeg(x, y))) ∧ (Beanbag(x) → ∀z (Leg(z) → ¬HasLeg(x, z))))"
    },
    {
        "NL": "A flightless bird that is native to a specific geographic region, possesses a unique beak shape, and feeds primarily on fish is a penguin.",
        "FOL": "∀x (FlightlessBird(x) ∧ NativeToSpecificGeographicRegion(x) ∧ UniqueBeakShape(x) ∧ FeedsPrimarilyOnFish(x) → Penguin(x))"
    },
    {
        "NL": "If an animal is a marsupial, it carries its young in a pouch.",
        "FOL": "∀x (Marsupial(x) → CarriesYoungInPouch(x))"
    },
    {
        "NL": "Statistical laws are not guesses.",
        "FOL": "∀x (StatisticalLaw(x) → ¬Guess(x))"
    },
    {
        "NL": "A solid object with a flat, circular shape, often used to hold or support items and typically made from materials like wood, metal, or glass, is a table.",
        "FOL": "∀x (SolidObject(x) ∧ FlatCircularShape(x) ∧ HoldsOrSupportsItems(x) ∧ MadeFromWoodMetalOrGlass(x) → Table(x))"
    },
    {
        "NL": "All dogs that are playful and do not live in a kennel are pets.",
        "FOL": "∀x (Dog(x) ∧ Playful(x) ∧ ¬LivesInKennel(x) → Pet(x))"
    },
    {
        "NL": "A person is considered a fitness instructor if they teach and guide people in exercise activities and proper techniques.",
        "FOL": "∀x (Person(x) ∧ TeachesExerciseActivities(x) ∧ GuidesProperTechniques(x) → FitnessInstructor(x))"
    },
    {
        "NL": "A sport that requires teams to score points by throwing a ball into the opponent's net and is played on a rectangular court is basketball.",
        "FOL": "∀x (Sport(x) ∧ RequiresTeams(x) ∧ ScorePointsByThrowingBall(x) ∧ OpponentsNet(x) ∧ PlayedOnRectangularCourt(x) → Basketball(x))"
    },
    {
        "NL": "A cell phone has a display for visual output, a speaker for audio output, and a microphone for audio input.",
        "FOL": "∀x (CellPhone(x) → (DisplayForVisualOutput(x) ∧ SpeakerForAudioOutput(x) ∧ MicrophoneForAudioInput(x)))"
    },
    {
        "NL": "A vehicle with four wheels and an internal combustion engine runs on gasoline or diesel fuel.",
        "FOL": "∀x (Vehicle(x) ∧ FourWheels(x) ∧ InternalCombustionEngine(x) → (RunsOnGasoline(x) ∨ RunsOnDiesel(x)))"
    },
    {
        "NL": "Robots with artificial intelligence can learn and adapt.",
        "FOL": "∀x (Robot(x) ∧ HasArtificialIntelligence(x) → (CanLearn(x) ∧ CanAdapt(x)))"
    },
    {
        "NL": "All humans are mammals, but not all mammals are humans.",
        "FOL": "∀x (Human(x) → Mammal(x)) ∧ ∃y (Mammal(y) ∧ ¬Human(y))"
    },
    {
        "NL": "A book that has a narrative structure, features imaginary characters, and is set in a fictional world is typically a novel.",
        "FOL": "∀x∀y∀z (Book(x) ∧ NarrativeStructure(x) ∧ ImaginaryCharacters(y) ∧ Features(x, y) ∧ FictionalWorld(z) ∧ SetIn(x, z) → Novel(x))"
    },
    {
        "NL": "Everything is not a handsome boy and a beautiful girl.",
        "FOL": "¬∃x ((Handsome(x) ∧ Boy(x)) ∧ (Beautiful(x) ∧ Girl(x)))"
    },
    {
        "NL": "A person is tech savvy if they are familiar with tech terms and aren't afraid to try new devices.",
        "FOL": "∀x (Person(x) ∧ FamiliarWithTechTerms(x) ∧ ¬AfraidToTryNewDevices(x) → TechSavvy(x))"
    },
    {
        "NL": "A masterpiece is defined as a painting if it is two-dimensional and generated using paints such as oil, watercolor, or acrylic.",
        "FOL": "∀x (Masterpiece(x) ∧ TwoDimensional(x) ∧ (GeneratedWithOil(x) ∨ GeneratedWithWatercolor(x) ∨ GeneratedWithAcrylic(x)) → Painting(x))"
    },
    {
        "NL": "All dogs hate loud noises.",
        "FOL": "∀x ∀y (Dog(x) ∧ Loud(y) ∧ Noise(y) → ¬Hate(x, y))"
    },
    {
        "NL": "Something is a large cube if and only if it is not yellow.",
        "FOL": "∀x (Large(x) ∧ Cube(x) ↔ ¬Yellow(x))"
    },
    {
        "NL": "A river flows into a lake if the river's water level is higher than the lake's water level and there is a continuous path between them.",
        "FOL": "∀x ∀y (River(x) ∧ Lake(y) ∧ HigherWaterLevel(x, y) ∧ ContinuousPath(x, y) → FlowsInto(x, y))"
    },
    {
        "NL": "A rectangle is either a square or not a square.",
        "FOL": "∀x (Rectangle(x) → (Square(x) ⊕ ¬Square(x)))"
    },
    {
        "NL": "A vehicle that can travel on land and water is called an amphibious vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ TravelsOnLand(x) ∧ TravelsOnWater(x) → AmphibiousVehicle(x))"
    },
    {
        "NL": "A student graduates with honors if they maintain a high grade point average throughout their studies.",
        "FOL": "∀x (Student(x) ∧ HighGradePointAverage(x) → GraduatesWithHonors(x))"
    },
    {
        "NL": "A tundra is a biome characterized by a treeless landscape, frozen ground, and low temperatures, often found near the Earth's poles or at high elevations.",
        "FOL": "∀x (Tundra(x) → (TreelessLandscape(x) ∧ FrozenGround(x) ∧ LowTemperatures(x) ∧ (NearPoles(x) ∨ AtHighElevations(x))))"
    },
    {
        "NL": "An athlete is disqualified if they break the rules or cheat.",
        "FOL": "∀x (Athlete(x) ∧ (BreaksRules(x) ∨ Cheats(x)) → Disqualified(x))"
    },
    {
        "NL": "Astronomers study celestial objects like stars, planets, and galaxies, along with phenomena such as black holes and supernovae.",
        "FOL": "∀x (Astronomer(x) → (StudiesStars(x) ∧ StudiesPlanets(x) ∧ StudiesGalaxies(x) ∧ StudiesBlackHoles(x) ∧ StudiesSupernovae(x)))"
    },
    {
        "NL": "Some fruits are citrus, such as oranges and lemons.",
        "FOL": "∃x (Fruit(x) ∧ Citrus(x) ∧ (Orange(x) ∨ Lemon(x)))"
    },
    {
        "NL": "Deserts receive minimal rainfall, leading to sparse vegetation and a challenging environment for most animal species.",
        "FOL": "∀x∀y (Desert(x) ∧ MinimalRainfall(x) → (SparseVegetation(x, y) ∧ ChallengingEnvironmentForAnimalSpecies(x, y)))"
    },
    {
        "NL": "All birds fly, but not all entities that fly are birds.",
        "FOL": "∀x (Bird(x) → Fly(x)) ∧ ¬∀x (Fly(x) → Bird(x))"
    },
    {
        "NL": "If all books are not interesting, there exists a novel that all novels are duller compared to it.",
        "FOL": "¬∀x (Book(x) → Interesting(x)) → ∃y (Novel(y) ∧ ∀z (Novel(z) → DullerComparedTo(z, y)))"
    },
    {
        "NL": "All software are either open-source or proprietary.",
        "FOL": "∀x (Software(x) → (OpenSource(x) ⊕ Proprietary(x)))"
    },
    {
        "NL": "If an animal is fast and strong, then it relates to at least one green entity, unless it is an elephant.",
        "FOL": "∀x ((Fast(x) ∧ Strong(x)) → ∃y (Green(y) ∧ Relates(x, y) ∨ Elephant(x)))"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects or other small animals for nourishment.",
        "FOL": "∀x (CarnivorousPlant(x) ↔ (Captures(x) ∧ Consumes(x) ∧ ∀y (SmallAnimal(y) ∨ Insect(y) → Nourishment(x, y))))"
    },
    {
        "NL": "A person is a vegetarian if and only if they consume vegetables or grains, but not chicken.",
        "FOL": "∀x (Person(x) → (Vegetarian(x) ↔ (EatVegetables(x) ∨ EatGrains(x)) ∧ ¬EatChicken(x)))"
    },
    {
        "NL": "A teacher works at a school where students learn different subjects.",
        "FOL": "∀x∀y (Teacher(x) ∧ School(y) ∧ WorksAt(x, y) → StudentsLearnSubjects(y))"
    },
    {
        "NL": "A tool is versatile if it can perform multiple functions, is easy to use, and requires minimal maintenance.",
        "FOL": "∀x (Tool(x) ∧ MultipleFunctions(x) ∧ EasyToUse(x) ∧ MinimalMaintenance(x) → Versatile(x))"
    },
    {
        "NL": "Volcanoes can be active, dormant, or extinct, depending on their current state of eruption and the likelihood of future eruptions.",
        "FOL": "∀x∀y∀z (Volcano(x) ∧ CurrentStateOfEruption(y) ∧ LikelihoodOfFutureEruptions(z) → ((Active(x) ∧ Dormant(x) ∧ Extinct(x)) ↔ (StateDependent(x, y, z))))"
    },
    {
        "NL": "A gadget is regarded as a tablet if it can access the internet, download apps, and has a touchscreen.",
        "FOL": "∀x ((Gadget(x) ∧ CanAccessInternet(x) ∧ DownloadApps(x) ∧ HasTouchscreen(x)) → Tablet(x))"
    },
    {
        "NL": "A country prospers when it has a stable government, a strong economy, and a well-educated population.",
        "FOL": "∀x (Country(x) → (Prospers(x) ↔ (StableGovernment(x) ∧ StrongEconomy(x) ∧ WellEducatedPopulation(x))))"
    },
    {
        "NL": "A film that combines elements of comedy and drama is a dramedy.",
        "FOL": "∀x (Film(x) ∧ CombinesComedy(x) ∧ CombinesDrama(x) → Dramedy(x))"
    },
    {
        "NL": "A company is a conglomerate if it is composed of multiple distinct corporations operating under the same management.",
        "FOL": "∀x∀y∀z (Company(x) ∧ DistinctCorporations(x, y, z) ∧ SameManagement(x) → Conglomerate(x))"
    },
    {
        "NL": "Neither a circle nor an oval has corners.",
        "FOL": "∀x (Circle(x) ∨ Oval(x) → ¬HasCorners(x))"
    },
    {
        "NL": "Musicians are not always famous.",
        "FOL": "∃x (Musician(x) ∧ ¬Famous(x))"
    },
    {
        "NL": "Rainforests are characterized by high rainfall, dense vegetation, and diverse wildlife, which make them a vital part of the Earth's ecosystem.",
        "FOL": "∀x (HighRainfall(x) ∧ DenseVegetation(x) ∧ DiverseWildlife(x) → Rainforest(x) ∧ VitalPartOfEcosystem(x))"
    },
    {
        "NL": "An athlete who follows a rigorous training regimen, consumes a well-balanced diet, and gets enough sleep can maximize their performance potential.",
        "FOL": "∀x (Athlete(x) ∧ RigorousTrainingRegimen(x) ∧ WellBalancedDiet(x) ∧ EnoughSleep(x) → MaximizesPerformancePotential(x))"
    },
    {
        "NL": "Lions hunt prey and live in prides.",
        "FOL": "∀x∀y∀z (Lion(x) ∧ Prey(y) ∧ Pride(z) → (Hunts(x, y) ∧ LivesIn(x, z)))"
    },
    {
        "NL": "Something is a car if it has wheels and is driven on the road.",
        "FOL": "∀x (Object(x) ∧ HasWheels(x) ∧ DrivenOnRoad(x) → Car(x))"
    },
    {
        "NL": "A play is a monologue if it demonstrates the thoughts of a certain character, acted by a single actor.",
        "FOL": "∀x ∃y ∃z (Play(x) ∧ Character(y) ∧ Actor(z) ∧ DemonstratesThoughts(x, y) ∧ ActedBy(x, z) → Monologue(x))"
    },
    {
        "NL": "All loud noises disturb at least one person that only disturbs quiet individuals.",
        "FOL": "∀x (Loud(x) → ∃y (Disturbs(x, y) ∧ ∀z (Disturbs(y, z) → Quiet(z))))"
    },
    {
        "NL": "A bird has feathers if it can fly and is warm-blooded.",
        "FOL": "∀x (Bird(x) ∧ CanFly(x) ∧ WarmBlooded(x) → HasFeathers(x))"
    },
    {
        "NL": "All songs that are either happy or sad move either a large crowd or a small audience.",
        "FOL": "∀x ((Song(x) ∧ (Happy(x) ∨ Sad(x))) → ∃y ((Large(y) ∧ Crowd(y)) ∨ (Small(y) ∧ Audience(y)) ∧ Move(x, y)))"
    },
    {
        "NL": "A book is considered rare if it is out of print and hard to find.",
        "FOL": "∀x (Book(x) ∧ OutOfPrint(x) ∧ HardToFind(x) → RareBook(x))"
    },
    {
        "NL": "A sports team consists of players who work together, employing strategies and tactics to compete against other teams in various games and tournaments.",
        "FOL": "∀x (SportsTeam(x) → (ConsistsOfPlayers(x) ∧ WorkTogether(x) ∧ EmploysStrategiesAndTactics(x) ∧ CompetesAgainstOtherTeams(x) ∧ ParticipatesInGamesAndTournaments(x)))"
    },
    {
        "NL": "A snowstorm brings heavy snowfall and reduced visibility, which can cause hazardous travel conditions, while a thunderstorm produces lightning, thunder, and heavy rain, which may lead to flooding.",
        "FOL": "∀x∀y (Snowstorm(x) ∧ Thunderstorm(y) → (HeavySnowfall(x) ∧ ReducedVisibility(x) ∧ HazardousTravelConditions(x)) ∧ (Lightning(y) ∧ Thunder(y) ∧ HeavyRain(y) ∧ PotentialFlooding(y)))"
    },
    {
        "NL": "A device is classified as a camera if it is capable of capturing images or videos, uses a lens to focus light, and may store the captured content digitally or on film.",
        "FOL": "∀x (Device(x) ∧ CapturesImagesOrVideos(x) ∧ UsesLensToFocusLight(x) ∧ (StoresCapturedContentDigitally(x) ∨ StoresCapturedContentOnFilm(x)) → Camera(x))"
    },
    {
        "NL": "A substance is considered acidic if it has a pH level below 7 and can donate protons.",
        "FOL": "∀x (Substance(x) ∧ Acidic(x) ↔ (pHLevelBelowSeven(x) ∧ CanDonateProtons(x)))"
    },
    {
        "NL": "A poem is an elegy if it expresses the personal grief of a certain individual, written by the individual himself.",
        "FOL": "∀x ∃y (Poem(x) ∧ Individual(y) ∧ ExpressesGrief(x, y) ∧ WrittenBy(x, y) → Elegy(x))"
    },
    {
        "NL": "A teacher teaches a subject in a classroom and assigns homework.",
        "FOL": "∀x ∀y ∀z (Teacher(x) ∧ Subject(y) ∧ Classroom(z) → (TeachesIn(x, y, z) ∧ AssignsHomework(x)))"
    },
    {
        "NL": "A well-organized event that offers a diverse range of activities, informative sessions, and engaging experiences can leave a lasting impression on attendees.",
        "FOL": "∀x (Event(x) ∧ DiverseRangeOfActivities(x) ∧ InformativeSessions(x) ∧ EngagingExperiences(x) → LeavesLastingImpressionOnAttendees(x))"
    },
    {
        "NL": "A strawberry is red or green, depending on its ripeness.",
        "FOL": "∀x (Strawberry(x) → (Red(x) ∨ Green(x)))"
    },
    {
        "NL": "If cars are not always fast, there exists a garage that every garage connects to.",
        "FOL": "¬∀x (Car(x) → Fast(x)) → ∃y (Garage(y) ∧ ∀z (Garage(z) → ConnectsTo(z, y)))"
    },
    {
        "NL": "A drama can win a Tony for best staging, best script, or best performance, but not all three at the same time.",
        "FOL": "∀x (Drama(x) ∧ WinsTony(x) → (BestStaging(x) ⊕ BestScript(x) ⊕ BestPerformance(x)))"
    },
    {
        "NL": "All artists who are imaginative and diligent are exceptional.",
        "FOL": "∀x (Artist(x) ∧ Imaginative(x) ∧ Diligent(x) → Exceptional(x))"
    },
    {
        "NL": "An electronic device becomes obsolete when newer models with better features are available.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ∃y (NewerModel(y) ∧ BetterFeatures(y, x)) → Obsolete(x))"
    },
    {
        "NL": "A vending machine dispenses products after a customer inserts payment.",
        "FOL": "∀x (VendingMachine(x) ∧ InsertsPayment(x) → DispensesProducts(x))"
    },
    {
        "NL": "A rectangle has four sides, and its opposite sides are equal in length.",
        "FOL": "∀x (Rectangle(x) → (∃y∃z (Side(x, y) ∧ Side(x, z) ∧ Opposite(y, z) ∧ EqualLength(y, z))))"
    },
    {
        "NL": "An item is vintage only if it is old and rare.",
        "FOL": "∀x (Item(x) → (Vintage(x) → (Old(x) ∧ Rare(x))))"
    },
    {
        "NL": "All humans are mortal.",
        "FOL": "∀x (Human(x) → Mortal(x))"
    },
    {
        "NL": "A course is engaging when and only when its content is stimulating and the explanations are clear, but it doesn't involve many complicated theories.",
        "FOL": "∀x (Course(x) ∧ Engaging(x) ↔ (StimulatingContent(x) ∧ ClearExplanations(x) ∧ ¬ManyComplicatedTheories(x)))"
    },
    {
        "NL": "A device is a smartphone if it has a touch screen, can make calls, and allows internet browsing.",
        "FOL": "∀x (Device(x) ∧ HasTouchScreen(x) ∧ CanMakeCalls(x) ∧ AllowsInternetBrowsing(x) → Smartphone(x))"
    },
    {
        "NL": "A beverage is alcohol-free if it doesn't contain any alcoholic content.",
        "FOL": "∀x (Beverage(x) ∧ ¬ContainAlcoholicContent(x) → AlcoholFree(x))"
    },
    {
        "NL": "Maintaining hygiene prevents infections and promotes health.",
        "FOL": "∀x (MaintainingHygiene(x) → (PreventsInfections(x) ∧ PromotesHealth(x)))"
    },
    {
        "NL": "Trains run on tracks and transport passengers or goods between destinations.",
        "FOL": "∀x ∀y (Train(x) ∧ Destination(y) → (RunsOnTracks(x) ∧ Transports(x, y, Passengers) ∨ Transports(x, y, Goods)))"
    },
    {
        "NL": "A camera captures images and can record videos.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∧ (∃y (Video(y) ∧ CanRecord(x, y)))))"
    },
    {
        "NL": "Not every car is either a sports model or a sedan.",
        "FOL": "¬∀x (Car(x) → (SportsModel(x) ∨ Sedan(x)))"
    },
    {
        "NL": "Only the responsible are promoted.",
        "FOL": "∀x (¬Responsible(x) → ¬Promoted(x))"
    },
    {
        "NL": "A plane that can carry over 150 passengers and has two or more engines is classified as a commercial plane.",
        "FOL": "∀x (Plane(x) ∧ CanCarryOverHundredFiftyPassengers(x) ∧ (HasTwoEngines(x) ∨ HasMoreThanTwoEngines(x)) → CommercialPlane(x))"
    },
    {
        "NL": "A composer writes a piece of music in a specific genre if the composition adheres to the stylistic conventions of that genre.",
        "FOL": "∀x ∀y ∀z (Composer(x) ∧ MusicPiece(y) ∧ Genre(z) ∧ AdheresToStylisticConventions(x, y, z) → WritesPieceInGenre(x, y, z))"
    },
    {
        "NL": "A cat is sleeping on the mat in the living room.",
        "FOL": "∃x ∃y ∃z (Cat(x) ∧ Mat(y) ∧ LivingRoom(z) ∧ SleepingOn(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A cat chases a mouse, catches it, and then eats it.",
        "FOL": "∀x∀y (Cat(x) ∧ Mouse(y) → (Chases(x, y) ∧ Catches(x, y) ∧ Eats(x, y)))"
    },
    {
        "NL": "An umbrella protects from rain and can be folded when not in use.",
        "FOL": "∀x∀y (Umbrella(x) ∧ Rain(y) → (ProtectsFrom(x, y) ∧ CanFold(x)))"
    },
    {
        "NL": "An object with mass and volume has density.",
        "FOL": "∀x (Object(x) ∧ HasMass(x) ∧ HasVolume(x) → HasDensity(x))"
    },
    {
        "NL": "An effective workout routine targets various muscle groups, includes cardio, and allows for recovery.",
        "FOL": "∀x (WorkoutRoutine(x) → (Effective(x) ↔ (TargetsMuscleGroups(x) ∧ IncludesCardio(x) ∧ AllowsRecovery(x))))"
    },
    {
        "NL": "People who read extensively have a vast vocabulary.",
        "FOL": "∀x (Person(x) ∧ ReadsExtensively(x) → HaveVastVocabulary(x))"
    },
    {
        "NL": "If a person has a fever, they have an elevated body temperature.",
        "FOL": "∀x (Person(x) ∧ Fever(x) → ElevatedBodyTemperature(x))"
    },
    {
        "NL": "Children who play team sports develop skills in cooperation, communication, and strategy.",
        "FOL": "∀x (Child(x) ∧ PlaysTeamSports(x) → (DevelopsSkill(x, Cooperation) ∧ DevelopsSkill(x, Communication) ∧ DevelopsSkill(x, Strategy)))"
    },
    {
        "NL": "Microphones capture sound and convert it into electrical signals.",
        "FOL": "∀x (Microphone(x) → (Capture(y) ∧ Sound(y) ∧ Convert(z) ∧ Into(z) ∧ ElectricalSignals(z) ∧ With(x, y, z)))"
    },
    {
        "NL": "No teacher in the school helps with homework either Jack or Lily.",
        "FOL": "∀x (Teacher(x) ∧ InSchool(x) → ¬HelpHomework(x, jack) ∧ ¬HelpHomework(x, lily))"
    },
    {
        "NL": "A biological molecule that carries genetic information, is composed of nucleotides, and forms a double helix structure is DNA.",
        "FOL": "∀x (BiologicalMolecule(x) ∧ CarriesGeneticInformation(x) ∧ ComposedOfNucleotides(x) ∧ FormsDoubleHelixStructure(x) → DNA(x))"
    },
    {
        "NL": "An airplane needs a pilot and fuel to fly.",
        "FOL": "∀x (Airplane(x) ∧ ∃y (Pilot(y) ∧ Operates(y, x)) ∧ HasFuel(x) → CanFly(x))"
    },
    {
        "NL": "Carlos is a chef and a dancer.",
        "FOL": "Chef(carlos) ∧ Dancer(carlos)"
    },
    {
        "NL": "If every building is not tall, there exists a tower that all towers are shorter compared to it.",
        "FOL": "¬∀x (Building(x) → Tall(x)) → ∃y (Tower(y) ∧ ∀z (Tower(z) → ShorterComparedTo(z, y)))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains ethanol as a result of fermentation or distillation.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x, fermentation, distillation) → Alcoholic(x))"
    },
    {
        "NL": "Pencils write, erasers remove marks, and sharpeners sharpen, but all are stationery items.",
        "FOL": "∀x∀y∀z (Pencil(x) → Writes(x)) ∧ (Eraser(y) → RemovesMarks(y)) ∧ (Sharpener(z) → Sharpens(z)) ∧ (StationeryItem(x) ∧ StationeryItem(y) ∧ StationeryItem(z))"
    },
    {
        "NL": "A museum is a place for preserving and exhibiting artifacts, while a library is a place for housing and lending books.",
        "FOL": "∀x∀y (Museum(x) ∧ Library(y) → (PreservesArtifacts(x) ∧ ExhibitsArtifacts(x) ∧ HousesBooks(y) ∧ LendsBooks(y)))"
    },
    {
        "NL": "Despite every planet orbiting a star, no planet orbits anything more massive than itself.",
        "FOL": "∀x ∃y (Orbits(x, y)) ∧ ¬∃z ∃w (Orbits(z, w) ∧ MoreMassiveThan(w, z))"
    },
    {
        "NL": "An athlete can be in football, basketball, or tennis.",
        "FOL": "∀x (Athlete(x) → (Football(x) ∨ Basketball(x) ∨ Tennis(x)))"
    },
    {
        "NL": "A programming language that follows a particular paradigm, is suitable for specific applications, and is supported by a certain community, typically is classified as a high-level or low-level language.",
        "FOL": "∀x∀y∀z∀w (ProgrammingLanguage(x) ∧ FollowsParadigm(x, y) ∧ SuitableForApplications(x, z) ∧ SupportedByCommunity(x, w) → (HighLevelLanguage(x) ∨ LowLevelLanguage(x)))"
    },
    {
        "NL": "A museum that displays a diverse collection of art and historical artifacts educates visitors about various cultures and time periods, inspiring curiosity and appreciation.",
        "FOL": "∀x∀y∀z (Museum(x) ∧ ArtCollection(y) ∧ HistoricalArtifacts(z) ∧ Displays(x, y, z) → (EducatesVisitorsAboutCulturesAndTimePeriods(x) ∧ InspiresCuriosityAndAppreciation(x)))"
    },
    {
        "NL": "A vehicle can be propelled by an internal combustion engine, an electric motor, or a hybrid system.",
        "FOL": "∀x (Vehicle(x) → (PropelledByInternalCombustionEngine(x) ⊕ PropelledByElectricMotor(x) ⊕ PropelledByHybridSystem(x)))"
    },
    {
        "NL": "A painting captures the viewer's attention when it displays a unique artistic style and evokes strong emotions, but it may not be appreciated if the colors are too vibrant or the subject matter is controversial.",
        "FOL": "∀x∀y (Painting(x) ∧ Viewer(y) → (CapturesAttention(x, y) ↔ ((UniqueArtisticStyle(x) ∧ EvokesStrongEmotions(x, y)) ∧ ¬(TooVibrantColors(x) ∨ ControversialSubjectMatter(x)))))"
    },
    {
        "NL": "An item is a musical instrument if it produces sound and is played by musicians to create melodies or harmonies.",
        "FOL": "∀x (Item(x) ∧ ProducesSound(x) ∧ PlayedByMusicians(x) ∧ (CreatesMelodies(x) ∨ CreatesHarmonies(x)) → MusicalInstrument(x))"
    },
    {
        "NL": "Some desserts are both sweet and served cold.",
        "FOL": "∃x (Dessert(x) ∧ Sweet(x) ∧ ServedCold(x))"
    },
    {
        "NL": "Doctors treat patients, while pharmacists provide medication.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → Treats(x, y)) ∧ (Pharmacist(x) ∧ Patient(y) → ProvidesMedication(x, y))"
    },
    {
        "NL": "If a person is an aunt, they have nieces or nephews.",
        "FOL": "∀x (Aunt(x) → ∃y (Niece(y, x) ∨ Nephew(y, x)))"
    },
    {
        "NL": "A type of electronic device that is primarily used for the purpose of reading digital books and periodicals is an e-reader.",
        "FOL": "∀x (ElectronicDevice(x) ∧ PrimarilyUsedForReading(x) ∧ ReadsDigitalBooks(x) ∧ ReadsDigitalPeriodicals(x) → EReader(x))"
    },
    {
        "NL": "Every country is beautiful, large and diverse.",
        "FOL": "∀x (Country(x) → (Beautiful(x) ∧ Large(x) ∧ Diverse(x)))"
    },
    {
        "NL": "A woman is chased by the dog which all men stroke.",
        "FOL": "∃x ∃y ∀z (Woman(x) ∧ Dog(y) ∧ Man(z) ∧ Stroke(z, y) → ChasedBy(x, y))"
    },
    {
        "NL": "A meal is complete if it includes a main course, a side dish, and a dessert or a drink.",
        "FOL": "∀x (Meal(x) → ((MainCourse(x) ∧ SideDish(x)) ∧ (Dessert(x) ∨ Drink(x)) → Complete(x)))"
    },
    {
        "NL": "A marathon runner must have endurance and determination, while a sprinter needs speed and power.",
        "FOL": "∀x ∀y (MarathonRunner(x) ∧ Sprinter(y) → (HasEndurance(x) ∧ HasDetermination(x) ∧ HasSpeed(y) ∧ HasPower(y)))"
    },
    {
        "NL": "Unless it's a dog or a wolf, it must be a cat.",
        "FOL": "∀x ((Dog(x) ∨ Wolf(x)) → Cat(x))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the Earth and the sun.",
        "FOL": "∀x (SolarEclipse(x) ↔ (MoonPassesBetween(x, Earth, Sun)))"
    },
    {
        "NL": "A sweet food that doesn't contain chocolate can be a fruit tart, a vanilla ice cream, or a caramel candy.",
        "FOL": "∀x (SweetFood(x) ∧ ¬ContainsChocolate(x) → FruitTart(x) ∨ VanillaIceCream(x) ∨ CaramelCandy(x))"
    },
    {
        "NL": "A substance that has a pH level greater than 7, can neutralize acids, and produces hydroxide ions when dissolved in water is a base.",
        "FOL": "∀x (Substance(x) ∧ pHGreaterThan7(x) ∧ NeutralizesAcids(x) ∧ ProducesHydroxideIonsInWater(x) → Base(x))"
    },
    {
        "NL": "Predators help maintain the balance in an ecosystem by controlling the population of prey.",
        "FOL": "∀x ∀y (Predator(x) ∧ Ecosystem(y) ∧ ControlsPopulation(x, y) → MaintainsBalance(y))"
    },
    {
        "NL": "A robot is functional if it has power and is not damaged, but it should either be stationary or follow a predefined path.",
        "FOL": "∀x (Robot(x) ∧ Power(x) ∧ ¬Damaged(x) → (Stationary(x) ⊕ FollowsPredefinedPath(x)))"
    },
    {
        "NL": "If a room is a kitchen, it contains a stove and a refrigerator.",
        "FOL": "∀x (Room(x) ∧ Kitchen(x) → ContainsStove(x) ∧ ContainsRefrigerator(x))"
    },
    {
        "NL": "Every car is either in the garage or on the road.",
        "FOL": "∀x (Car(x) → (InGarage(x) ⊕ OnRoad(x)))"
    },
    {
        "NL": "An app gains a large user base if it addresses a common problem, is easy to use, and maintains user privacy.",
        "FOL": "∀x (App(x) ∧ AddressesCommonProblem(x) ∧ EasyToUse(x) ∧ UserPrivacy(x) → LargeUserBase(x))"
    },
    {
        "NL": "If Maria is a not doctor then Claire is a doctor.",
        "FOL": "¬Doctor(maria) → Doctor(claire)"
    },
    {
        "NL": "A person who has never smoked and does not consume alcohol is considered a teetotaler.",
        "FOL": "∀x (Person(x) ∧ ¬HasSmoked(x) ∧ ¬ConsumesAlcohol(x) → Teetotaler(x))"
    },
    {
        "NL": "A well-designed office space incorporates natural light, ergonomic furniture, and adequate ventilation to create a comfortable working environment for employees.",
        "FOL": "∀x∀y (WellDesignedOfficeSpace(x) ∧ NaturalLight(x) ∧ ErgonomicFurniture(x) ∧ AdequateVentilation(x) → ComfortableWorkingEnvironment(y))"
    },
    {
        "NL": "A room with closed windows and no air conditioning may be stuffy and warm.",
        "FOL": "∀x (Room(x) ∧ ClosedWindows(x) ∧ ¬HasAirConditioning(x) → (Stuffy(x) ∧ Warm(x)))"
    },
    {
        "NL": "An online marketplace offers products in various categories, such as electronics, clothing, and home goods, and provides delivery options like standard, express, or overnight shipping.",
        "FOL": "∀x∀y∀z (OnlineMarketplace(x) ∧ (Electronics(y) ∨ Clothing(y) ∨ HomeGoods(y)) ∧ (StandardShipping(z) ∨ ExpressShipping(z) ∨ OvernightShipping(z)) → OffersProductsAndProvidesDeliveryOptions(x, y, z))"
    },
    {
        "NL": "A cocktail is refreshing if it contains lime or mint.",
        "FOL": "∀x (Cocktail(x) ∧ (HasLime(x) ∨ HasMint(x)) → Refreshing(x))"
    },
    {
        "NL": "No cats are canines.",
        "FOL": "¬∃x (Cat(x) ∧ Canine(x))"
    },
    {
        "NL": "Reptiles are cold-blooded and lay eggs.",
        "FOL": "∀x (Reptile(x) → (ColdBlooded(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A dish is satisfying when it has a balanced flavor and a pleasing aroma.",
        "FOL": "∀x (Dish(x) ∧ BalancedFlavor(x) ∧ PleasingAroma(x) → Satisfying(x))"
    },
    {
        "NL": "All of the party attendees drink coffee or are allergic to dairy.",
        "FOL": "∀x (PartyAttendee(x) → (DrinkCoffee(x) ∨ AllergicToDairy(x)))"
    },
    {
        "NL": "A building that incorporates energy-efficient materials, natural lighting, and green spaces contributes to a sustainable urban environment.",
        "FOL": "∀x (Building(x) ∧ EnergyEfficientMaterials(x) ∧ NaturalLighting(x) ∧ GreenSpaces(x) → ContributesToSustainableUrbanEnvironment(x))"
    },
    {
        "NL": "Anyone who regards life as if it was a game of luck, deserves to lose.",
        "FOL": "∀x (RegardsLifeAsGameOfLuck(x) → DeservesToLose(x))"
    },
    {
        "NL": "Blue birds are real.",
        "FOL": "∃x (Bird(x) ∧ Blue(x))"
    },
    {
        "NL": "Each yellow thing indicates at least one thing that indicates only green things.",
        "FOL": "∀x (Yellow(x) → ∃y (Indicates(x, y) ∧ ∀z (Indicates(y, z) → Green(z))))"
    },
    {
        "NL": "A park is a public space that offers recreational activities and may have a playground for children.",
        "FOL": "∀x (Park(x) ∧ PublicSpace(x) ∧ OffersRecreationalActivities(x)) ∧ ∃y (Park(y) ∧ HasPlayground(y))"
    },
    {
        "NL": "A place is considered a park if it is a public outdoor area intended for recreation and enjoyment.",
        "FOL": "∀x (Place(x) ∧ PublicOutdoorArea(x) ∧ IntendedForRecreation(x) ∧ IntendedForEnjoyment(x) → Park(x))"
    },
    {
        "NL": "No scientist who critiques every theory is endorsed by any organization.",
        "FOL": "∀x (Scientist(x) → ∀y ((Theory(y) → Critique(x, y)) → ¬∃z (Organization(z) ∧ Endorse(z, x))))"
    },
    {
        "NL": "A chemical reaction is endothermic if it absorbs heat from its surroundings, results in an increase in the system's internal energy, and has a positive change in enthalpy.",
        "FOL": "∀x∀y∀z (ChemicalReaction(x) ∧ AbsorbsHeatFromSurroundings(x) ∧ ResultsInIncreaseOfInternalEnergy(x, y) ∧ PositiveChangeInEnthalpy(x, z) → Endothermic(x))"
    },
    {
        "NL": "A novel that is romantic can touch people's hearts.",
        "FOL": "∀x ∀y (Novel(x) ∧ Romantic(x) ∧ Person(y) → CanTouchHearts(x, y))"
    },
    {
        "NL": "A piece of furniture designed for sitting, has a backrest, and can accommodate multiple people is a sofa.",
        "FOL": "∀x (Furniture(x) ∧ DesignedForSitting(x) ∧ HasBackrest(x) ∧ MultiplePeople(x) → Sofa(x))"
    },
    {
        "NL": "A song is considered cheerful if it contains upbeat rhythm or lively lyrics.",
        "FOL": "∀x (Song(x) ∧ (HasUpbeatRhythm(x) ∨ HasLivelyLyrics(x)) → Cheerful(x))"
    },
    {
        "NL": "A customer buys products from a store.",
        "FOL": "∀x ∀y ∀z (Customer(x) ∧ Product(y) ∧ Store(z) → BuysFrom(x, y, z))"
    },
    {
        "NL": "A bird is considered a migratory bird if it moves seasonally from one region to another.",
        "FOL": "∀x (Bird(x) ∧ MovesSeasonally(x) → MigratoryBird(x))"
    },
    {
        "NL": "A sailor is sailing on a sea.",
        "FOL": "∃x ∃y (Sailor(x) ∧ Sea(y) ∧ SailingOn(x, y))"
    },
    {
        "NL": "During a solar eclipse, the moon passes between the earth and the sun, casting a shadow on the earth.",
        "FOL": "∀x ∀y ∀z (SolarEclipse(x) ∧ Moon(y) ∧ Earth(z) → (PassesBetween(y, z, x) ∧ CastsShadowOnEarth(y, z)))"
    },
    {
        "NL": "Deserts are characterized by extreme temperatures and sparse vegetation.",
        "FOL": "∀x (Desert(x) → (ExtremeTemperatures(x) ∧ SparseVegetation(x)))"
    },
    {
        "NL": "A species that feeds on other animals and has a carnivorous diet is a predator, while a species that feeds on plants and has a herbivorous diet is a prey.",
        "FOL": "∀x (Species(x) ∧ FeedsOnAnimals(x) ∧ CarnivorousDiet(x) → Predator(x)) ∧ (Species(x) ∧ FeedsOnPlants(x) ∧ HerbivorousDiet(x) → Prey(x))"
    },
    {
        "NL": "A beverage that is made from fermented grains, has a specific alcohol content, and is popular in a particular region is typically a beer or an ale.",
        "FOL": "∀x∀y∀z (Beverage(x) ∧ MadeFromFermentedGrains(x) ∧ SpecificAlcoholContent(y) ∧ Has(x, y) ∧ PopularInRegion(x, z) ∧ ParticularRegion(z) → (Beer(x) ∨ Ale(x)))"
    },
    {
        "NL": "A scientist conducts an experiment with a hypothesis, controlled variables, and a test group.",
        "FOL": "∀x∀y∀z∀w (Scientist(x) ∧ Experiment(y) ∧ Hypothesis(z) ∧ ControlledVariables(y, z) ∧ TestGroup(w) → Conducts(x, y, z, w))"
    },
    {
        "NL": "A volcano erupts when molten rock, ash, and gas escape from a magma chamber through an opening in the Earth's surface.",
        "FOL": "∀x (Volcano(x) → (Erupts(x) → (EscapesMoltenRock(x) ∧ EscapesAsh(x) ∧ EscapesGas(x) ∧ FromMagmaChamber(x) ∧ ThroughOpeningInSurface(x))))"
    },
    {
        "NL": "A secretary is organizing files in the office, or a supervisor is arranging a conference in the conference room.",
        "FOL": "∃x ∃y (Secretary(x) ∧ Files(y) ∧ Organizing(x, y) ∧ InTheOffice(x)) ∨ ∃z ∃w (Supervisor(z) ∧ Conference(w) ∧ Arranging(z, w) ∧ InTheConferenceRoom(z))"
    },
    {
        "NL": "A creature is either a bird or a fish.",
        "FOL": "∀x (Creature(x) → (Bird(x) ⊕ Fish(x)))"
    },
    {
        "NL": "A device that captures light, focuses it through a lens, and records images on a photosensitive medium is a camera if it can produce still or moving images.",
        "FOL": "∀x (Device(x) ∧ CapturesLight(x) ∧ FocusesThroughLens(x) ∧ RecordsImagesOnPhotosensitiveMedium(x) ∧ ProducesStillOrMovingImages(x) → Camera(x))"
    },
    {
        "NL": "A cake is delicious if it is moist, not overly sweet, and made with quality ingredients.",
        "FOL": "∀x (Cake(x) ∧ Moist(x) ∧ ¬OverlySweet(x) ∧ QualityIngredients(x) → Delicious(x))"
    },
    {
        "NL": "A wolf howls at the moon, while an owl hoots at night and a rooster crows at dawn.",
        "FOL": "∀x∀y∀z (Wolf(x) ∧ Owl(y) ∧ Rooster(z) → (HowlsAtMoon(x) ∨ (HootsAtNight(y) ∧ CrowsAtDawn(z))))"
    },
    {
        "NL": "A company excels in its market when it offers innovative products, maintains customer satisfaction, and invests in employee development.",
        "FOL": "∀x ∀y ∀z (Company(x) ∧ InnovativeProducts(x, y) ∧ CustomerSatisfaction(x, z) ∧ InvestsEmployeeDevelopment(x) → Excels(x))"
    },
    {
        "NL": "Mathematical theories are not speculations.",
        "FOL": "∀x (MathematicalTheory(x) → ¬Speculation(x))"
    },
    {
        "NL": "A healthy diet includes fruits, vegetables, and lean proteins, while limiting processed foods and added sugars.",
        "FOL": "∀x (HealthyDiet(x) ↔ (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesLeanProteins(x) ∧ LimitsProcessedFoods(x) ∧ LimitsAddedSugars(x)))"
    },
    {
        "NL": "A work of art that is created by applying pigment to a surface using a brush, fingers, or other objects is a painting.",
        "FOL": "∀x (WorkOfArt(x) ∧ CreatedByApplyingPigment(x) ∧ UsesBrushOrFingersOrObjects(x) → Painting(x))"
    },
    {
        "NL": "All who understand life as a journey, deserve to find peace.",
        "FOL": "∀x (UnderstandsLifeAsJourney(x) → DeserveToFindPeace(x))"
    },
    {
        "NL": "Stars with a mass greater than the sun's mass have a shorter lifespan.",
        "FOL": "∀x ∀y (Star(x) ∧ Sun(y) → (MassGreaterThan(x, y) → ShorterLifespan(x, y)))"
    },
    {
        "NL": "Insects with wings can fly or glide.",
        "FOL": "∀x (Insect(x) ∧ Wings(x) → (Fly(x) ∨ Glide(x)))"
    },
    {
        "NL": "A monkey is swinging on the branches in a jungle",
        "FOL": "∃x ∃y ∃z (Monkey(x) ∧ Branches(y) ∧ Jungle(z) ∧ SwingingOn(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A creature is distinguished as a pet if they live in a house or an apartment.",
        "FOL": "∀x (Creature(x) ∧ (LivesInHouse(x) ∨ LivesInApartment(x)) → Pet(x))"
    },
    {
        "NL": "Eating fruit daily improves digestion.",
        "FOL": "∀x (EatingFruit(x) → ImprovesDigestion(x))"
    },
    {
        "NL": "An athlete who competes in marathons and triathlons participates in individual sports and has high endurance.",
        "FOL": "∀x (Athlete(x) ∧ CompetesInMarathons(x) ∧ CompetesInTriathlons(x) → (ParticipatesInIndividualSports(x) ∧ HighEndurance(x)))"
    },
    {
        "NL": "Every blue object is sharp only if it's a cube.",
        "FOL": "∀x (Blue(x) → (Sharp(x) → Cube(x)))"
    },
    {
        "NL": "If a person is a real estate agent, they must represent buyers and sellers in property transactions, often providing advice, marketing, and negotiation services.",
        "FOL": "∀x (RealEstateAgent(x) → (RepresentsBuyersAndSellersInPropertyTransactions(x) ∧ ProvidesAdviceMarketingAndNegotiationServices(x)))"
    },
    {
        "NL": "Mountains are formed when tectonic plates collide, resulting in uplift and deformation.",
        "FOL": "∀x∀y (Mountain(x) ∧ TectonicPlates(y) → (Formed(x) ↔ (Collide(y) ∧ Uplift(x) ∧ Deformation(x))))"
    },
    {
        "NL": "A person is considered a mechanic if they repair and maintain mechanical systems, such as vehicles or machinery.",
        "FOL": "∀x (Person(x) ∧ RepairsMechanicalSystems(x) ∧ MaintainsMechanicalSystems(x) → Mechanic(x))"
    },
    {
        "NL": "A book can be a thriller, have a complex plot, and win several accolades, or it can be a romance, have a simpler plot, and be a bestseller.",
        "FOL": "∀x (Book(x) → ((Thriller(x) ∧ HasComplexPlot(x) ∧ WinMultipleAccolades(x)) ⊕ (Romance(x) ∧ HasSimplePlot(x) ∧ Bestseller(x))))"
    },
    {
        "NL": "A fire requires oxygen and fuel to burn.",
        "FOL": "∀x∀y∀z (Fire(x) ∧ Oxygen(y) ∧ Fuel(z) → RequiresToBurn(x, y, z))"
    },
    {
        "NL": "A meal can be classified as healthy if it contains vegetables and is low in saturated fats, or if it contains fruits and is high in fiber.",
        "FOL": "∀x (Meal(x) → (Healthy(x) ↔ ((Vegetables(x) ∧ LowSaturatedFats(x)) ∨ (Fruits(x) ∧ HighFiber(x)))))"
    },
    {
        "NL": "An apple is considered ripened if it is red, firm, and smells sweet.",
        "FOL": "∀x (Apple(x) → Red(x) ∧ Firm(x) ∧ SmellSweet(x) → Ripened(x))"
    },
    {
        "NL": "An aquatic animal that can breathe through gills, has fins, and is covered in scales is a fish.",
        "FOL": "∀x (AquaticAnimal(x) ∧ BreathesThroughGills(x) ∧ HasFins(x) ∧ CoveredInScales(x) → Fish(x))"
    },
    {
        "NL": "An antitoxin can avert a fungal infection by triggering resistance against it.",
        "FOL": "∀x ∀y (Antitoxin(x) ∧ FungalInfection(y) → (Averts(x, y) → TriggersResistance(x, y)))"
    },
    {
        "NL": "Some fruits, like oranges and apples, are rich in vitamins and can be eaten raw.",
        "FOL": "∃x (Fruit(x) ∧ (Orange(x) ∨ Apple(x)) ∧ RichInVitamins(x) ∧ CanBeEatenRaw(x))"
    },
    {
        "NL": "Organic food products are naturally grown, decrease chance of pesticide contamination and improve health benefits.",
        "FOL": "∀x (OrganicFoodProduct(x) → (NaturallyGrown(x) ∧ DecreasePesticideContamination(x) ∧ ImproveHealthBenefits(x)))"
    },
    {
        "NL": "Deserts are dry.",
        "FOL": "∀x (Desert(x) → Dry(x))"
    },
    {
        "NL": "If a plant is a succulent, it stores water in its leaves.",
        "FOL": "∀x (Plant(x) ∧ Succulent(x) → StoresWaterInLeaves(x))"
    },
    {
        "NL": "A chef prepares a meal with ingredients, which can be vegetarian or non-vegetarian, but never a mixture of both.",
        "FOL": "∀x∀y (Chef(x) ∧ Meal(y) ∧ ((Vegetarian(y) ⊕ NonVegetarian(y))) → PreparesWithIngredients(x, y))"
    },
    {
        "NL": "An asteroid is a small celestial object composed mainly of rock and metal, which orbits the sun and occasionally collides with planets or other celestial bodies.",
        "FOL": "∀x (Asteroid(x) → (SmallCelestialObject(x) ∧ ComposedOfRockAndMetal(x) ∧ OrbitsSun(x) ∧ OccasionallyCollides(x)))"
    },
    {
        "NL": "An athlete can either play soccer or basketball, but not both at the same time.",
        "FOL": "∀x (Athlete(x) → ((PlaysSoccer(x) ∨ PlaysBasketball(x)) ∧ ¬(PlaysSoccer(x) ∧ PlaysBasketball(x))))"
    },
    {
        "NL": "If an animal can fly and has a beak, it is considered a bird.",
        "FOL": "∀x ((CanFly(x) ∧ HasBeak(x)) → Bird(x))"
    },
    {
        "NL": "A political candidate is considered electable when they have strong public support and their policies align with the values of the majority of voters.",
        "FOL": "∀x∀y∀z (PoliticalCandidate(x) ∧ StrongPublicSupport(x, y) ∧ AlignsWithVoterValues(x, z) → Electable(x))"
    },
    {
        "NL": "If not all whales are large, there is an ocean that each ocean leads to.",
        "FOL": "¬∀x (Whale(x) → Large(x)) → ∃y (Ocean(y) ∧ ∀z (Ocean(z) → LeadsTo(z, y)))"
    },
    {
        "NL": "A communication device that uses radio waves to transmit and receive voice, text, or data signals wirelessly is a mobile phone.",
        "FOL": "∀x (CommunicationDevice(x) ∧ UsesRadioWaves(x) ∧ TransmitsVoiceTextOrData(x) ∧ ReceivesVoiceTextOrData(x) ∧ Wireless(x) → MobilePhone(x))"
    },
    {
        "NL": "Some movies are animated, but not all movies are suitable for children or have received critical acclaim and won awards.",
        "FOL": "∃x (Movie(x) ∧ Animated(x)) ∧ ¬∀y (Movie(y) → (SuitableForChildren(y) ∨ (CriticalAcclaim(y) ∧ WonAwards(y))))"
    },
    {
        "NL": "Cooks prepare food for customers, and waiters serve them.",
        "FOL": "∀x ∀y ∀z (Cook(x) ∧ Customer(y) ∧ Waiter(z) → PreparesFood(x, y) ∧ Serves(z, y))"
    },
    {
        "NL": "A drug can stop an ailment by inspiring defense against it.",
        "FOL": "∀x ∀y (Drug(x) ∧ Ailment(y) → (Stops(x, y) → InspiresDefense(x, y)))"
    },
    {
        "NL": "An online platform streams a movie if it has acquired the streaming rights and the movie has been released.",
        "FOL": "∀x∀y (OnlinePlatform(x) ∧ Movie(y) ∧ StreamingRights(x, y) ∧ MovieReleased(y) → StreamsMovie(x, y))"
    },
    {
        "NL": "A bee collects nectar from flowers, turns it into honey in the hive, and the honey is then harvested by beekeepers.",
        "FOL": "∀x ∀y ∀z (Bee(x) ∧ Flower(y) ∧ Beekeeper(z) ∧ CollectsNectar(x, y) ∧ TurnsIntoHoneyInHive(x) → HarvestedBy(x, z))"
    },
    {
        "NL": "If there are no blueprints, then no architect designs any building.",
        "FOL": "¬∃x (Blueprint(x)) → ¬∃y (Architect(y) ∧ ∃z (Building(z) ∧ Design(y, z)))"
    },
    {
        "NL": "A painting is valuable when it is created by a renowned artist and is well preserved.",
        "FOL": "∀x∀y∀z (Painting(x) ∧ Artist(y) ∧ Preservation(z) ∧ Renowned(y) ∧ WellPreserved(x, z) → Valuable(x))"
    },
    {
        "NL": "A sport is classified as a team sport if it requires a group of players to work together, has an objective to score points, and involves competition against another team.",
        "FOL": "∀x (Sport(x) ∧ RequiresGroupOfPlayers(x) ∧ ObjectiveToScorePoints(x) ∧ InvolvesCompetitionAgainstAnotherTeam(x) → TeamSport(x))"
    },
    {
        "NL": "A medication is effective if it treats the targeted symptoms, has minimal side effects, and is either affordable or covered by insurance.",
        "FOL": "∀x (Medication(x) ∧ TreatsSymptoms(x) ∧ MinimalSideEffects(x) ∧ (Affordable(x) ∨ CoveredByInsurance(x)) → Effective(x))"
    },
    {
        "NL": "A camera that utilizes a specific imaging sensor and is designed for a particular type of photography is typically a DSLR or a mirrorless camera.",
        "FOL": "∀x∀y∀z (Camera(x) ∧ UtilizesImagingSensor(x, y) ∧ DesignedForPhotographyType(x, z) → (DSLR(x) ∨ MirrorlessCamera(x)))"
    },
    {
        "NL": "A place is a beautiful park only if it is not dirty.",
        "FOL": "∀x (Beautiful(x) ∧ Park(x) ↔ ¬Dirty(x))"
    },
    {
        "NL": "A scientist conducts experiments in a laboratory, while a teacher educates students in a classroom.",
        "FOL": "∀x∀y (Scientist(x) ∧ Teacher(y) → (ConductsExperimentsInLab(x) ∧ EducatesStudentsInClassroom(y)))"
    },
    {
        "NL": "A vaccine helps protect against specific diseases by stimulating the immune system to produce an immune response.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ Disease(y) → (StimulateImmuneSystem(x) ∧ ProduceImmuneResponse(x, y)))"
    },
    {
        "NL": "Supernovae occur when massive stars exhaust their nuclear fuel, ultimately leading to the collapse of the star's core and a subsequent explosion.",
        "FOL": "∀x ∀y ∀z (Supernova(x) ∧ MassiveStar(y) ∧ NuclearFuel(f) ∧ Exhaust(e) ∧ CoreCollapse(c) ∧ Explosion(z) → LeadsToCollapseAndExplosion(x, y, f, e, c, z))"
    },
    {
        "NL": "Rainy weather causes roads to be slippery, increasing the risk of accidents.",
        "FOL": "∀x∀y (RainyWeather(x) ∧ Road(y) ∧ CausesSlippery(x, y) → IncreasedRiskOfAccidents(y))"
    },
    {
        "NL": "If anything is yellow, then everything points to a triangle.",
        "FOL": "∃x (Yellow(x)) → ∀y ∃z (Triangle(z) ∧ PointsTo(y, z))"
    },
    {
        "NL": "Chemicals can be hazardous to humans or the environment.",
        "FOL": "∀x (Chemical(x) → (HazardousToHumans(x) ∨ HazardousToEnvironment(x)))"
    },
    {
        "NL": "A job candidate is qualified if they possess the required skills and experience, or if they hold a relevant degree and have excellent recommendations.",
        "FOL": "∀x∀y (Candidate(x) ∧ Job(y) ∧ ((RequiredSkills(x, y) ∧ Experience(x, y)) ∨ (RelevantDegree(x, y) ∧ ExcellentRecommendations(x, y))) → Qualified(x, y))"
    },
    {
        "NL": "A snake pursues a rodent for nourishment, while a crow picks at remnants of kills.",
        "FOL": "∀x ∀y (Snake(x) ∧ Rodent(y) → PursuesForNourishment(x, y)) ∧ ∀z ∀w (Crow(z) ∧ Kill(w) → PicksAtRemnantsOf(z, w))"
    },
    {
        "NL": "A language is easy to learn if it has simple grammar and a small vocabulary.",
        "FOL": "∀x (Language(x) → (EasyToLearn(x) ↔ (SimpleGrammar(x) ∧ SmallVocabulary(x))))"
    },
    {
        "NL": "A computer's processor is responsible for executing instructions and performing calculations.",
        "FOL": "∀x (ComputerProcessor(x) ∧ Instructions(i) ∧ Calculations(c) → ExecutesAndPerforms(x, i, c))"
    },
    {
        "NL": "A bicycle has two wheels or it is not a bicycle.",
        "FOL": "∀x (Bicycle(x) ↔ HasTwoWheels(x))"
    },
    {
        "NL": "A computer is tagged as high-performance if it has a fast processor and either ample storage or a superior graphics card.",
        "FOL": "∀x (Computer(x) ∧ HasFastProcessor(x) ∧ (HasAmpleStorage(x) ∨ HasSuperiorGraphicsCard(x)) → HighPerformance(x))"
    },
    {
        "NL": "A carnivorous plant captures and digests insects for nutrients.",
        "FOL": "∀x (CarnivorousPlant(x) → (Captures(x) ∧ Digests(x) ∧ Insects(x) ∧ ForNutrients(x)))"
    },
    {
        "NL": "A bank allows clients to open accounts and offers loans.",
        "FOL": "∀x∀y (Bank(x) ∧ Client(y) → (AllowsAccountOpening(x, y) ∧ OffersLoans(x, y)))"
    },
    {
        "NL": "A butterfly has wings, and a bee has wings, but a worm does not have wings.",
        "FOL": "∀x ∀y ∀z ((Butterfly(x) ∧ HasWings(x)) ∧ (Bee(y) ∧ HasWings(y)) ∧ (Worm(z) ∧ ¬HasWings(z)))"
    },
    {
        "NL": "A glacier is a large, slow-moving mass of ice that forms when snow accumulates and compresses over time, shaping the landscape as it moves.",
        "FOL": "∀x (Glacier(x) ↔ (∃y (Large(y) ∧ SlowMoving(y) ∧ MassOfIce(y) ∧ FormsFromAccumulatedSnow(x, y)) ∧ CompressesOverTime(x) ∧ ShapesLandscape(x)))"
    },
    {
        "NL": "A chef cooks pasta, a baker bakes bread, and a barista prepares coffee.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Baker(y) ∧ Barista(z) → (CooksPasta(x) ∧ BakesBread(y) ∧ PreparesCoffee(z)))"
    },
    {
        "NL": "A sport x is a team sport if it requires two or more teams y and z to compete against each other, and each team consists of multiple players.",
        "FOL": "∀x ∀y ∀z (Sport(x) ∧ RequiresTwoOrMoreTeams(x, y, z) ∧ CompeteAgainstEachOther(y, z) ∧ EachTeamHasMultiplePlayers(y, z) → TeamSport(x))"
    },
    {
        "NL": "For each cat, it meows if not all dogs are sleeping.",
        "FOL": "¬∀x (Dog(x) → Sleeping(x)) → ∀y (Cat(y) → Meows(y))"
    },
    {
        "NL": "In a game of chess, the king is captured when it cannot escape any threats from opposing pieces.",
        "FOL": "∀x∀y∀z (Game(x) ∧ Chess(x) ∧ King(y) ∧ OpposingPieces(z) → (Captured(y) ↔ (Threatens(z, y) ∧ ¬Escapes(y, z))))"
    },
    {
        "NL": "A vacation destination is attractive if it has beautiful scenery and is either peaceful or has exciting activities, but not if it is overcrowded.",
        "FOL": "∀x (Destination(x) → (Attractive(x) ↔ (BeautifulScenery(x) ∧ ((Peaceful(x) ∨ ExcitingActivities(x)) ∧ ¬Overcrowded(x)))))"
    },
    {
        "NL": "In a library, fiction and nonfiction books are usually separated.",
        "FOL": "∀x∀y (Library(x) ∧ (Fiction(y) ∨ Nonfiction(y)) → UsuallySeparated(x, y))"
    },
    {
        "NL": "An athlete needs proper training and nutrition, as well as adequate rest and recovery.",
        "FOL": "∀x (Athlete(x) → (NeedsProperTraining(x) ∧ NeedsNutrition(x) ∧ NeedsAdequateRest(x) ∧ NeedsRecovery(x)))"
    },
    {
        "NL": "A restaurant earns fame if it serves delicious food, offers excellent service, and boasts a well-known chef.",
        "FOL": "∀x (Restaurant(x) ∧ ServesDeliciousFood(x) ∧ OffersExcellentService(x) ∧ HasWellKnownChef(x) → EarnsFame(x))"
    },
    {
        "NL": "Every blended color is vibrant only if it includes yellow.",
        "FOL": "∀x (BlendedColor(x) → (Vibrant(x) → Yellow(x)))"
    },
    {
        "NL": "A helmet can protect a head by reducing the impact of collision.",
        "FOL": "∀x ∀y (Helmet(x) ∧ Head(y) → (Protects(x, y) → ReducesImpact(x, y)))"
    },
    {
        "NL": "Bicycles, skateboards, and scooters are popular means of transportation for short distances.",
        "FOL": "∀x (Bicycle(x) ∨ Skateboard(x) ∨ Scooter(x) → ShortDistanceTransport(x))"
    },
    {
        "NL": "If every circle is round, there exists a line that all lines intersect with it.",
        "FOL": "∀x (Circle(x) → Round(x)) → ∃y (Line(y) ∧ ∀z (Line(z) → Intersects(z, y)))"
    },
    {
        "NL": "A cake is chocolate-flavored, has icing, and is round, or it is vanilla-flavored, has no icing, and is square.",
        "FOL": "∀x (Cake(x) → ((ChocolateFlavored(x) ∧ HasIcing(x) ∧ Round(x)) ∨ (VanillaFlavored(x) ∧ ¬HasIcing(x) ∧ Square(x))))"
    },
    {
        "NL": "An appliance is a refrigerator when it is an insulated, electrically powered device, designed to preserve perishable food items by maintaining a consistently cold temperature.",
        "FOL": "∀x (Appliance(x) ∧ InsulatedDevice(x) ∧ ElectricallyPowered(x) ∧ DesignedToPreservePerishableFood(x) ∧ MaintainsConsistentlyColdTemperature(x) → Refrigerator(x))"
    },
    {
        "NL": "Mountains have high elevation and may be snow-capped, while valleys are characterized by low elevation.",
        "FOL": "∀x∀y (Mountain(x) ∧ Valley(y) → (HighElevation(x) ∧ MayBeSnowCapped(x) ∧ LowElevation(y)))"
    },
    {
        "NL": "Conceptual frameworks are not hypotheses.",
        "FOL": "∀x (ConceptualFramework(x) → ¬Hypothesis(x))"
    },
    {
        "NL": "A meal is a breakfast or a dinner.",
        "FOL": "∀x (Meal(x) → (Breakfast(x) ∨ Dinner(x)))"
    },
    {
        "NL": "A tsunami occurs when there is a seismic disturbance under the ocean floor causing water displacement.",
        "FOL": "∀x (SeismicDisturbance(x) ∧ WaterDisplacement(x) → Tsunami(x))"
    },
    {
        "NL": "Every dog barks loudly.",
        "FOL": "∀x (Dog(x) → BarksLoudly(x))"
    },
    {
        "NL": "A place is considered a restaurant if it serves prepared food and drinks to customers.",
        "FOL": "∀x (Place(x) ∧ ServesPreparedFood(x) ∧ ServesDrinks(x) → Restaurant(x))"
    },
    {
        "NL": "A museum displays artifacts or artwork from different time periods.",
        "FOL": "∀x (Museum(x) → (DisplaysArtifacts(x) ∨ DisplaysArtwork(x)))"
    },
    {
        "NL": "Every artist who has painted a painting that is disliked, either holds an exhibition or is ignored by all galleries.",
        "FOL": "∀x (Artist(x) ∧ ∀y (Painting(y) ∧ Painted(x, y) ∧ Disliked(y)) → (HoldsExhibition(x) ∨ ∀z (Gallery(z) → IgnoredBy(x, z))))"
    },
    {
        "NL": "A musical composition can be labeled as a symphony when it is written for an orchestra, features multiple movements, and typically follows a specific structure.",
        "FOL": "∀x (MusicalComposition(x) ∧ WrittenForOrchestra(x) ∧ FeaturesMultipleMovements(x) ∧ TypicallyFollowsSpecificStructure(x) → Symphony(x))"
    },
    {
        "NL": "When there is a full moon, wolves howl more frequently.",
        "FOL": "∀x ∀y (FullMoon(x) ∧ Wolf(y) → HowlsMoreFrequently(y, x))"
    },
    {
        "NL": "A comet's tail consists of gas and dust, which become visible as they are illuminated by sunlight and pushed away from the comet by solar radiation pressure.",
        "FOL": "∀x∀y (Comet(x) ∧ Tail(y) → (ConsistsOfGasAndDust(y) ∧ BecomesVisible(y) ∧ IlluminatedBySunlight(y) ∧ PushedAwayBySolarRadiationPressure(y)))"
    },
    {
        "NL": "A habitat is considered suitable for a species if it provides adequate food and shelter.",
        "FOL": "∀x ∀y (Habitat(x) ∧ Species(y) ∧ Suitable(x, y) ↔ (ProvidesAdequateFood(x, y) ∧ ProvidesShelter(x, y)))"
    },
    {
        "NL": "A meal can either be a vegetarian dish filled with fresh vegetables and whole grains, or a meat lover's delight with juicy steaks, and a variety of side dishes.",
        "FOL": "∀x (Meal(x) → ((VegetarianDish(x) ∧ FreshVegetables(x) ∧ WholeGrains(x)) ⊕ (MeatLoverDelight(x) ∧ JuicySteaks(x) ∧ VarietyOfSideDishes(x))))"
    },
    {
        "NL": "A person is considered a political scientist if they study political systems, institutions, and behavior.",
        "FOL": "∀x (Person(x) ∧ StudiesPoliticalSystems(x) ∧ StudiesInstitutionsAndBehavior(x) → PoliticalScientist(x))"
    },
    {
        "NL": "A machine that produces power by converting thermal energy into mechanical work, often through the use of pistons or turbines, is an engine.",
        "FOL": "∀x (Machine(x) ∧ ProducesPower(x) ∧ ConvertsThermalEnergyToMechanicalWork(x) ∧ OftenUsesPistonsOrTurbines(x) → Engine(x))"
    },
    {
        "NL": "No dogs can swim.",
        "FOL": "¬∀x (Dog(x) → CanSwim(x))"
    },
    {
        "NL": "A robot vacuum cleaner navigates a room by detecting obstacles and adjusting its path, ensuring efficient cleaning of floors and carpets.",
        "FOL": "∀x (RobotVacuumCleaner(x) → (NavigatesRoom(x) ∧ DetectsObstacles(x) ∧ AdjustsPath(x) ∧ CleansFloorsAndCarpets(x)))"
    },
    {
        "NL": "Beaches with clean sand and clear water are suitable for swimming and sunbathing.",
        "FOL": "∀x (Beach(x) ∧ CleanSand(x) ∧ ClearWater(x) → (SuitableForSwimming(x) ∧ SuitableForSunbathing(x)))"
    },
    {
        "NL": "A scientist discovers a new element if they conduct experiments and find unique properties.",
        "FOL": "∀x∀y (Scientist(x) ∧ Element(y) → (Discovers(x, y) ↔ (ConductsExperiments(x) ∧ UniqueProperties(y))))"
    },
    {
        "NL": "There exist some planets that are either rocky or gaseous.",
        "FOL": "∃x (Planet(x) ∧ (Rocky(x) ⊕ Gaseous(x)))"
    },
    {
        "NL": "None of the planets is a massive earth or a minor mercury.",
        "FOL": "¬∃x ((Massive(x) ∧ Earth(x)) ∨ (Minor(x) ∧ Mercury(x)))"
    },
    {
        "NL": "A cake is chocolate-flavored if it contains cocoa and sugar.",
        "FOL": "∀x (Cake(x) ∧ ContainsCocoa(x) ∧ ContainsSugar(x) → ChocolateFlavored(x))"
    },
    {
        "NL": "A scientist collaborates with a colleague if they work in the same field and share a common research interest.",
        "FOL": "∀x∀y (Scientist(x) ∧ Scientist(y) → (Collaborates(x, y) ↔ (SameField(x, y) ∧ CommonResearchInterest(x, y))))"
    },
    {
        "NL": "A savanna is a grassland ecosystem with scattered trees, experiencing distinct wet and dry seasons, and supporting a diverse array of herbivores and predators.",
        "FOL": "∀x (Savanna(x) → (GrasslandEcosystem(x) ∧ ScatteredTrees(x) ∧ DistinctWetAndDrySeasons(x) ∧ SupportsDiverseHerbivores(x) ∧ SupportsPredators(x)))"
    },
    {
        "NL": "There is no scientific law that is not proven.",
        "FOL": "∀x (ScientificLaw(x) ↔ Proven(x))"
    },
    {
        "NL": "A building is energy-efficient if it utilizes renewable energy sources, has proper insulation, and employs energy-saving technologies.",
        "FOL": "∀x (Building(x) → (EnergyEfficient(x) ↔ (RenewableEnergySources(x) ∧ ProperInsulation(x) ∧ EnergySavingTechnologies(x))))"
    },
    {
        "NL": "There is no book that is read by all students.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Student(y) → ReadBy(x, y)))"
    },
    {
        "NL": "All designers have employed some techniques by an artist.",
        "FOL": "∀x (Designer(x) ∧ ∃y (Artist(y) ∧ ∃z (Technique(z) ∧ CreatedBy(z, y) → Employed(x, z))))"
    },
    {
        "NL": "An exothermic chemical reaction releases energy in the form of heat, while an endothermic reaction absorbs energy from its surroundings.",
        "FOL": "∀x (ExothermicReaction(x) → ReleasesEnergyAsHeat(x)) ∧ ∀y (EndothermicReaction(y) → AbsorbsEnergyFromSurroundings(y))"
    },
    {
        "NL": "A book is a bestseller if it has a high sales rank and belongs to either fiction or non-fiction genre.",
        "FOL": "∀x (Book(x) ∧ HighSalesRank(x) ∧ (Fiction(x) ∨ NonFiction(x)) → Bestseller(x))"
    },
    {
        "NL": "A cellphone might have a touchscreen or physical buttons.",
        "FOL": "∀x (Cellphone(x) → (Touchscreen(x) ⊕ PhysicalButtons(x)))"
    },
    {
        "NL": "A type of weather can be either sunny or cloudy.",
        "FOL": "∀x (WeatherType(x) → Sunny(x) ⊕ Cloudy(x))"
    },
    {
        "NL": "A fruit is considered ripe when it is ready to eat.",
        "FOL": "∀x (Fruit(x) ∧ ReadyToEat(x) → Ripe(x))"
    },
    {
        "NL": "A person is not both happy and sad.",
        "FOL": "∀x (Person(x) → ¬(Happy(x) ∧ Sad(x)))"
    },
    {
        "NL": "A vehicle is either car or motorcycle.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Motorcycle(x)))"
    },
    {
        "NL": "Books that explore deep philosophical questions can stimulate intellectual discussions among readers.",
        "FOL": "∀x (Book(x) ∧ ExploresPhilosophicalQuestions(x) → StimulatesIntellectualDiscussions(x, Readers))"
    },
    {
        "NL": "Poets write poems, and readers read them.",
        "FOL": "∀x ∀y (Poet(x) ∧ Poem(y) → Write(x, y)) ∧ ∀z ∀w (Reader(z) ∧ Poem(w) → Read(z, w))"
    },
    {
        "NL": "An email is marked as spam if it contains malicious content or unsolicited advertising.",
        "FOL": "∀x (Email(x) ∧ (MaliciousContent(x) ∨ UnsolicitedAdvertising(x)) → MarkedAsSpam(x))"
    },
    {
        "NL": "Not every athlete is either a boxer or a wrestler.",
        "FOL": "¬∀x (Athlete(x) → (Boxer(x) ∨ Wrestler(x)))"
    },
    {
        "NL": "A celestial body is a moon if it orbits a planet and does not emit its own light.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsPlanet(x) ∧ ¬EmitsOwnLight(x) → Moon(x))"
    },
    {
        "NL": "An event is a concert if it features live musical performances, usually by a musician or a group of musicians, and takes place in a venue such as a stadium, theater, or park.",
        "FOL": "∀x (Event(x) ∧ FeaturesLiveMusicalPerformances(x) ∧ UsuallyByMusicianOrGroup(x) ∧ TakesPlaceInVenue(x, stadium, theater, park) → Concert(x))"
    },
    {
        "NL": "If a vehicle is an electric car, it does not emit greenhouse gases during operation.",
        "FOL": "∀x (ElectricCar(x) → ¬EmitsGreenhouseGasesDuringOperation(x))"
    },
    {
        "NL": "A pharmacy dispenses medications to patients with prescriptions, while a clinic provides healthcare services and treatment for various ailments.",
        "FOL": "∀x∀y (Pharmacy(x) ∧ Clinic(y) → (DispensesMedicationsWithPrescriptions(x) ∧ ProvidesHealthcareServicesAndTreatment(y)))"
    },
    {
        "NL": "A machine is a computer if and only if it can store data or process instructions.",
        "FOL": "∀x (Computer(x) ↔ (StoreData(x) ∨ ProcessInstructions(x)))"
    },
    {
        "NL": "A glacier consists of compacted ice and moves slowly, while a waterfall is a flow of water over a steep drop.",
        "FOL": "∀x∀y (Glacier(x) ∧ Waterfall(y) → (CompactedIce(x) ∧ MovesSlowly(x) ∧ FlowOfWater(y) ∧ SteepDrop(y)))"
    },
    {
        "NL": "A fruit is considered ripe when it has reached its optimal color, texture, and aroma.",
        "FOL": "∀x (Fruit(x) ∧ OptimalColor(x) ∧ OptimalTexture(x) ∧ OptimalAroma(x) → Ripe(x))"
    },
    {
        "NL": "A computer is portable if it's a laptop or a tablet.",
        "FOL": "∀x (Computer(x) → ((Laptop(x) ∨ Tablet(x)) → Portable(x)))"
    },
    {
        "NL": "A bird can fly if it has feathers and wings, but not if it's flightless.",
        "FOL": "∀x (Bird(x) → (((HasFeathers(x) ∧ HasWings(x)) ∧ ¬Flightless(x)) → CanFly(x)))"
    },
    {
        "NL": "All humans love Maria.",
        "FOL": "∀x (Human(x) → Love(x, maria))"
    },
    {
        "NL": "A smartphone has a touchscreen display and may support voice or video calls.",
        "FOL": "∀x (Smartphone(x) → (HasTouchscreenDisplay(x) ∧ (SupportsVoiceCalls(x) ∨ SupportsVideoCalls(x))))"
    },
    {
        "NL": "A piece of clothing is comfortable when it is made of soft materials and has a well-fitting design that allows freedom of movement.",
        "FOL": "∀x ∀y (Clothing(x) ∧ MadeOfSoftMaterials(x, y) ∧ WellFittingDesign(x, y) ∧ AllowsFreedomOfMovement(x) → Comfortable(x))"
    },
    {
        "NL": "A vehicle can have either two, three, or four wheels.",
        "FOL": "∀x (Vehicle(x) → (HasTwoWheels(x) ⊕ HasThreeWheels(x) ⊕ HasFourWheels(x)))"
    },
    {
        "NL": "The blue whale is a mammal.",
        "FOL": "∀x (BlueWhale(x) → Mammal(x))"
    },
    {
        "NL": "A manager supervises employees, and an accountant manages the financial records of a company.",
        "FOL": "∀x∀y∀z (Manager(x) ∧ Employee(y) ∧ Company(z) → Supervises(x, y)) ∧ (Accountant(x) ∧ Company(z) → ManagesFinancialRecords(x, z))"
    },
    {
        "NL": "An aquarium that houses marine animals, provides educational programs, and conducts research on marine life contributes to the public's understanding of ocean ecosystems.",
        "FOL": "∀x∀y∀z (Aquarium(x) ∧ HousesMarineAnimals(x) ∧ ProvidesEducationalPrograms(x, y) ∧ ConductsResearchOnMarineLife(x, z) → ContributesToPublicUnderstandingOfOceanEcosystems(x))"
    },
    {
        "NL": "A movie can be a drama, a comedy, or both, but not a documentary.",
        "FOL": "∃x (Movie(x) ∧ ((Drama(x) ∧ ¬Documentary(x)) ∨ (Comedy(x) ∧ ¬Documentary(x)) ∨ (Drama(x) ∧ Comedy(x) ∧ ¬Documentary(x))))"
    },
    {
        "NL": "Some engineers are inventors.",
        "FOL": "∃x (Engineer(x) ∧ Inventor(x))"
    },
    {
        "NL": "A bicycle enables transportation by allowing a rider to pedal and propel themselves forward on two wheels.",
        "FOL": "∀x (Bicycle(x) → (EnablesTransportation(x) ∧ AllowsRiderToPedal(x) ∧ PropelsForwardOnTwoWheels(x)))"
    },
    {
        "NL": "An animal is classified as a bird if it has feathers, lays eggs, and has a beak.",
        "FOL": "∀x (Animal(x) ∧ HasFeathers(x) ∧ LaysEggs(x) ∧ HasBeak(x) → Bird(x))"
    },
    {
        "NL": "There are no planets that cannot support life nor have water.",
        "FOL": "¬∃x (Planet(x) ∧ ¬CanSupportLife(x) ∧ ¬HasWater(x))"
    },
    {
        "NL": "Every computer is smart, modern and expensive.",
        "FOL": "∀x (Computer(x) → (Smart(x) ∧ Modern(x) ∧ Expensive(x)))"
    },
    {
        "NL": "A woman can be a runner, or appreciate Van Gogh's paintings, but not both.",
        "FOL": "∀x (Runner(x) ⊕ AppreciateVanGogh(x))"
    },
    {
        "NL": "An animal pollinates a plant by transferring pollen from one flower to another.",
        "FOL": "∀x ∀y ∀z (Animal(x) ∧ Plant(y) ∧ Flower(z) ∧ TransfersPollen(x, z) → Pollinates(x, y))"
    },
    {
        "NL": "A bag can be empty or filled with items, but not both.",
        "FOL": "∀x (Bag(x) → (Empty(x) ⊕ FilledWithItems(x)))"
    },
    {
        "NL": "An object is a cylinder if it has two flat, circular bases connected by a curved surface.",
        "FOL": "∀x (Cylinder(x) ↔ (Object(x) ∧ TwoFlatCircularBases(x) ∧ ConnectedByCurvedSurface(x)))"
    },
    {
        "NL": "A garden is well-maintained if it has healthy plants, the grass is regularly mowed, and the pathways are clean.",
        "FOL": "∀x (Garden(x) → (HealthyPlants(x) ∧ RegularlyMowedGrass(x) ∧ CleanPathways(x) → WellMaintained(x)))"
    },
    {
        "NL": "No tree is evergreen.",
        "FOL": "∀x (Tree(x) → ¬Evergreen(x))"
    },
    {
        "NL": "A person is a musician if they perform, compose, or produce music.",
        "FOL": "∀x (Person(x) ∧ Musician(x) ↔ (PerformsMusic(x) ∨ ComposesMusic(x) ∨ ProducesMusic(x)))"
    },
    {
        "NL": "Two countries share a border if they have adjacent territories.",
        "FOL": "∀x ∀y (Country(x) ∧ Country(y) → (SharesBorder(x, y) ↔ AdjacentTerritories(x, y)))"
    },
    {
        "NL": "A car can be parked in a parking spot if the spot is vacant, and the car is either small or the spot is large.",
        "FOL": "∀x ∀y (Car(x) ∧ ParkingSpot(y) → (CanBeParked(x, y) ↔ (Vacant(y) ∧ (SmallCar(x) ∨ LargeSpot(y)))))"
    },
    {
        "NL": "Some objects are circular and some objects are rectangular, but there are no circular rectangles.",
        "FOL": "∃x (Circular(x)) ∧ ∃x (Rectangular(x)) ∧ ¬∃x (Circular(x) ∧ Rectangular(x))"
    },
    {
        "NL": "A parking machine allows parking time such as hours or days in exchange for coins.",
        "FOL": "∀x ∃y ∃z (ParkingMachine(x) ∧ ParkingTime(y) ∧ (Hour(y) ∨ Day(y)) ∧ Payment(z) ∧ Coin(z) ∧ InExchangeFor(x, z) → Allows(x, y))"
    },
    {
        "NL": "Mistakes are not always failures.",
        "FOL": "∀x (Mistake(x) → ¬AlwaysFailure(x))"
    },
    {
        "NL": "An object is a musical instrument if it can produce sound, is played by a musician, and is used in the creation of music.",
        "FOL": "∀x (Object(x) ∧ CanProduceSound(x) ∧ PlayedByMusician(x) → MusicalInstrument(x))"
    },
    {
        "NL": "A rose has thorns, a sunflower has large petals, and a daisy has a yellow center.",
        "FOL": "∀x∀y∀z (Rose(x) ∧ Sunflower(y) ∧ Daisy(z) → (HasThorns(x) ∧ HasLargePetals(y) ∧ HasYellowCenter(z)))"
    },
    {
        "NL": "A book is a bestseller if it is read by many people.",
        "FOL": "∀x (Book(x) ∧ ReadByManyPeople(x) → Bestseller(x))"
    },
    {
        "NL": "A microwave heats food using electromagnetic waves, while an oven cooks food with heat from gas or electricity.",
        "FOL": "∀x∀y (Microwave(x) ∧ Oven(y) → (HeatsFoodWithElectromagneticWaves(x) ∧ CooksFoodWithHeat(y)))"
    },
    {
        "NL": "A person is a professional athlete if they compete in a sport and receive payment for their performance.",
        "FOL": "∀x (Person(x) → (CompetesInSport(x) ∧ ReceivesPaymentForPerformance(x) → ProfessionalAthlete(x)))"
    },
    {
        "NL": "Ethan and Noah are musicians.",
        "FOL": "Musician(ethan) ∧ Musician(noah)"
    },
    {
        "NL": "Not all writers are either playwrights or novelists, and none of the creative ones among them loathe literature.",
        "FOL": "¬∀x (Writer(x) → (Playwright(x) ∨ Novelist(x))) ∧ ∀y (Writer(y) ∧ Creative(y) → ¬LoatheLiterature(y))"
    },
    {
        "NL": "It is false to say there is a driver who drives all models of trucks.",
        "FOL": "¬∃x (Driver(x) ∧ ∀y (TruckModel(y) → Drives(x, y)))"
    },
    {
        "NL": "A restaurant that uses locally sourced ingredients and practices sustainable waste management is more environmentally friendly.",
        "FOL": "∀x∀y (Restaurant(x) ∧ UsesLocallySourcedIngredients(x) ∧ PracticesSustainableWasteManagement(x) → MoreEnvironmentallyFriendly(y))"
    },
    {
        "NL": "A person who is tall, good at basketball, and lives in America is usually a NBA player.",
        "FOL": "∀x (Person(x) ∧ IsTall(x) ∧ GoodAtBasketball(x) ∧ LivesInAmerica(x) → NBAPlayer(x))"
    },
    {
        "NL": "Anderson does not appreciate any Californian or Texan.",
        "FOL": "∀x (Person(x) ∧ (From(x, california) ∨ From(x, texas)) → ¬Appreciate(anderson, x))"
    },
    {
        "NL": "A pet is either a cat or a dog.",
        "FOL": "∀x (Pet(x) → (Cat(x) ⊕ Dog(x)))"
    },
    {
        "NL": "A vehicle requires a specific type of fuel if it is designed to operate with that fuel, the fuel is available at refueling stations, and the fuel complies with environmental regulations.",
        "FOL": "∀x ∀y ∀z (Vehicle(x) ∧ Fuel(y) ∧ DesignedForFuel(x, y) ∧ RefuelingStation(z) ∧ FuelAvailable(z, y) ∧ CompliesWithEnvironmentalRegulations(y) → RequiresFuel(x, y, z))"
    },
    {
        "NL": "Smartphones enable people to make calls and send texts.",
        "FOL": "∀x (Smartphone(x) → (MakeCalls(x) ∧ SendTexts(x)))"
    },
    {
        "NL": "Farmers grow crops and raise livestock, selling their products at markets or to distributors.",
        "FOL": "∀x∀y∀z (Farmer(x) ∧ Crop(y) ∧ Livestock(z) → (Grows(x, y) ∧ Raises(x, z) ∧ (SellsAtMarket(x, y, z) ∨ SellsToDistributor(x, y, z))))"
    },
    {
        "NL": "Antibiotics help fight bacterial infections but are ineffective against viruses.",
        "FOL": "∀x∀y∀z (Antibiotic(x) ∧ BacterialInfection(y) ∧ Virus(z) → (HelpsFight(x, y) ∧ ¬EffectiveAgainst(x, z)))"
    },
    {
        "NL": "A train travels on tracks, whereas a bus moves on streets.",
        "FOL": "∀x (Train(x) → TravelsOnTracks(x)) ∧ ∀y (Bus(y) → MovesOnStreets(y))"
    },
    {
        "NL": "Lions roar, frogs croak, and dogs bark.",
        "FOL": "∀x ∀y ∀z (Lion(x) ∧ Frog(y) ∧ Dog(z) → (Roars(x) ∧ Croaks(y) ∧ Barks(z)))"
    },
    {
        "NL": "A volcano can erupt with varying levels of intensity, producing lava, ash, or pyroclastic flows, and affecting the surrounding environment, wildlife, and human settlements.",
        "FOL": "∀x ∀y ∀z (Volcano(x) → (CanEruptWith(x, y) ∧ (VaryingLevelsOfIntensity(y)) ∧ Producing(x, z) ∧ (Lava(z) ∨ Ash(z) ∨ PyroclasticFlows(z)) ∧ AffectsEnvironment(x) ∧ AffectsWildlife(x) ∧ AffectsHumanSettlements(x)))"
    },
    {
        "NL": "A city is considered a capital if it is the official seat of government for a country.",
        "FOL": "∀x∀y (City(x) ∧ Country(y) → (Capital(x, y) ↔ OfficialSeatOfGovernment(x, y)))"
    },
    {
        "NL": "An object is considered an electronic device if it operates by controlling the flow of electrons or other electrically charged particles.",
        "FOL": "∀x (Object(x) ∧ OperatesByControllingElectronFlow(x) → ElectronicDevice(x))"
    },
    {
        "NL": "A restaurant achieves popularity if it has delicious food, good service, and a pleasant atmosphere.",
        "FOL": "∀x (Restaurant(x) ∧ HasDeliciousFood(x) ∧ HasGoodService(x) ∧ HasPleasantAtmosphere(x) → AchievePopularity(x))"
    },
    {
        "NL": "Regular check-ups prevent diseases and aid early diagnosis.",
        "FOL": "∀x (RegularCheckUps(x) → PreventDiseases(x) ∧ AidEarlyDiagnosis(x))"
    },
    {
        "NL": "If a meal is vegan, it contains no animal products.",
        "FOL": "∀x (VeganMeal(x) → ¬∃y (AnimalProduct(y) ∧ Contains(x, y)))"
    },
    {
        "NL": "A smartphone can connect to the internet via Wi-Fi, mobile data, or both, and it can have a touch screen, physical keyboard, or both, but it cannot have no connectivity or no input method.",
        "FOL": "∀x (Smartphone(x) → (((ConnectsWiFi(x) ∨ ConnectsMobileData(x)) ∨ (ConnectsWiFi(x) ∧ ConnectsMobileData(x))) ∧ ((TouchScreen(x) ∨ PhysicalKeyboard(x)) ∨ (TouchScreen(x) ∧ PhysicalKeyboard(x)))))"
    },
    {
        "NL": "Some doctors are gentle, and some are not.",
        "FOL": "∃x (Doctor(x) ∧ Gentle(x)) ∧ ∃x (Doctor(x) ∧ ¬Gentle(x))"
    },
    {
        "NL": "A television show is renewed for another season when it has high ratings, positive reviews, and no unresolved legal issues.",
        "FOL": "∀x (TelevisionShow(x) → (Renewed(x) ↔ (HighRatings(x) ∧ PositiveReviews(x) ∧ ¬∃y (LegalIssue(y) ∧ Unresolved(y) ∧ RelatedTo(x, y)))))"
    },
    {
        "NL": "A person is an offspring if they are the child of another person's parent.",
        "FOL": "∀x ∃y ∃z (Person(x) ∧ Person(y) ∧ Person(z) ∧ ChildOf(x, y) ∧ ParentOf(y, z) → Offspring(x))"
    },
    {
        "NL": "A museum displays ancient artifacts, which are either made of stone or metal and are preserved in good condition.",
        "FOL": "∀x (Museum(x) → (DisplaysAncientArtifacts(x) ∧ (MadeOfStone(x) ∨ (MadeOfMetal(x) ∧ GoodCondition(x)))))"
    },
    {
        "NL": "If all employees who will work overtime are paid extra, then some bosses will not relax.",
        "FOL": "∀x (Employee(x) ∧ WorkOvertime(x) → PaidExtra(x)) → ∃y (Boss(y) ∧ ¬Relax(y))"
    },
    {
        "NL": "A building is safe for occupancy if it has passed inspections, is structurally sound, and adheres to fire codes.",
        "FOL": "∀x (Building(x) → (PassedInspections(x) ∧ StructurallySound(x) ∧ AdheresToFireCodes(x) → SafeForOccupancy(x)))"
    },
    {
        "NL": "A plant needs water, sunlight, and soil to grow properly.",
        "FOL": "∀x (Plant(x) → (NeedsWater(x) ∧ NeedsSunlight(x) ∧ NeedsSoil(x)))"
    },
    {
        "NL": "Doctors diagnose patients.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → Diagnoses(x, y))"
    },
    {
        "NL": "The shark is a predator.",
        "FOL": "∀x (Shark(x) → Predator(x))"
    },
    {
        "NL": "In a computer network, devices communicate with each other through wired or wireless connections, enabling data sharing, resource allocation, and collaborative work.",
        "FOL": "∀x (ComputerNetwork(x) → (DevicesCommunicate(x) ∧ (WiredConnection(x) ∨ WirelessConnection(x)) ∧ EnablesDataSharing(x) ∧ EnablesResourceAllocation(x) ∧ EnablesCollaborativeWork(x)))"
    },
    {
        "NL": "A bee collects pollen from a flower, then returns to the hive, and produces honey.",
        "FOL": "∀x∀y∀z (Bee(x) ∧ Flower(y) ∧ Hive(z) → (CollectsPollen(x, y) ∧ ReturnsTo(x, z) ∧ ProducesHoney(x)))"
    },
    {
        "NL": "A well-maintained infrastructure that incorporates sustainable materials, energy-efficient technologies, and smart city solutions can reduce environmental impact and improve quality of life.",
        "FOL": "∀x (WellMaintainedInfrastructure(x) → IncorporatesSustainableMaterials(x) ∧ EnergyEfficientTechnologies(x) ∧ SmartCitySolutions(x) ∧ ReducesEnvironmentalImpact(x) ∧ ImprovesQualityOfLife(x))"
    },
    {
        "NL": "A scientist discovers new facts or refutes existing theories.",
        "FOL": "∀x (Scientist(x) → (DiscoversNewFacts(x) ∨ RefutesExistingTheories(x)))"
    },
    {
        "NL": "Harmful viruses are real.",
        "FOL": "∃x (Virus(x) ∧ Harmful(x))"
    },
    {
        "NL": "A dish that is spicy can cause discomfort.",
        "FOL": "∀x ∀y (Dish(x) ∧ Spicy(x) ∧ Person(y) → CanCauseDiscomfort(x, y))"
    },
    {
        "NL": "Books stored in damp conditions may develop mold, which can damage both the book and nearby objects.",
        "FOL": "∀x∀y∀z (Book(x) ∧ StoredInDampConditions(x) ∧ DevelopsMold(x) ∧ Nearby(y, z) → CanDamage(x, y) ∧ CanDamage(x, z))"
    },
    {
        "NL": "A shape is a square if it has four equal sides and four right angles, otherwise, it can be a rectangle.",
        "FOL": "∀x (Shape(x) → ((Square(x) ↔ (FourEqualSides(x) ∧ FourRightAngles(x))) ∨ (¬Square(x) ∧ Rectangle(x))))"
    },
    {
        "NL": "There exists no square that overlaps all large rectangles.",
        "FOL": "¬∃x (Square(x) ∧ ∀y (Large(y) ∧ Rectangle(y) → Overlaps(x, y)))"
    },
    {
        "NL": "Each sharp knife cuts at least one soft fruit that cuts only ripe ones.",
        "FOL": "∀x (SharpKnife(x) → ∃y (SoftFruit(y) ∧ Cuts(x, y) ∧ ¬∃z (Cuts(y, z) ∧ ¬RipeFruit(z))))"
    },
    {
        "NL": "Trees grow taller over time.",
        "FOL": "∀x (Tree(x) → GrowsTaller(x, time))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, and handlebars.",
        "FOL": "∀x (Bicycle(x) → (HasWheels(x, y) ∧ Two(y) ∧ HasFrame(x, z) ∧ HasHandlebars(x, w)))"
    },
    {
        "NL": "A song becomes a hit if it has a catchy tune, meaningful lyrics, and a memorable melody.",
        "FOL": "∀x (Song(x) ∧ HasCatchyTune(x) ∧ HasMeaningfulLyrics(x) ∧ HasMemorableMelody(x) → BecomesHit(x))"
    },
    {
        "NL": "Each blue object is round unless it is square.",
        "FOL": "∀x (Blue(x) → (¬Square(x) → Round(x)))"
    },
    {
        "NL": "Skilled musicians don't smoke.",
        "FOL": "∀x (Musician(x) ∧ Skilled(x) → ¬Smoke(x))"
    },
    {
        "NL": "There is some water which some fish swim in.",
        "FOL": "∃x ∃y (Water(x) ∧ Fish(y) ∧ SwimIn(y, x))"
    },
    {
        "NL": "A farmer grows crops on farmland.",
        "FOL": "∀x∀y (Farmer(x) ∧ Farmland(y) → GrowsCrops(x, y))"
    },
    {
        "NL": "A demographic is regarded a child if they are part of kindergarten or elementary school.",
        "FOL": "∀x (Demographic(x) ∧ (PartOfKindergarten(x) ∨ PartOfElementarySchool(x)) → Child(x))"
    },
    {
        "NL": "Every movie is not appropriate for toddlers.",
        "FOL": "¬∀x (Movie(x) → AppropriateForToddlers(x))"
    },
    {
        "NL": "A computer with sufficient memory and a fast processor can run multiple applications simultaneously, while a computer with insufficient memory or a slow processor struggles to do so.",
        "FOL": "∀x ∀y ∀z (Computer(x) ∧ SufficientMemory(x, y) ∧ FastProcessor(x, z) → RunsMultipleAppsSimultaneously(x)) ∧ ∀a ∀b ∀c (Computer(a) ∧ (InsufficientMemory(a, b) ∨ SlowProcessor(a, c)) → StrugglesToRunMultipleApps(a))"
    },
    {
        "NL": "A liquid is classified as a solvent when it is used to dissolve other substances, forming a solution.",
        "FOL": "∀x (Liquid(x) ∧ UsedToDissolveSubstances(x) ∧ FormsSolution(x) → Solvent(x))"
    },
    {
        "NL": "A scientist discovers a breakthrough when they're persistent and not distracted by trivial matters.",
        "FOL": "∃x (Scientist(x) ∧ (Persistent(x) ∧ ¬DistractedByTrivialMatters(x) → DiscoversBreakthrough(x)))"
    },
    {
        "NL": "A bird x migrates to a different region y if x travels from one geographic location to y in response to changes in weather or seasonal conditions.",
        "FOL": "∀x ∀y (Bird(x) ∧ Region(y) ∧ TravelsDueToWeatherOrSeasons(x, y) → MigratesTo(x, y))"
    },
    {
        "NL": "A planet is habitable for humans if it has an atmosphere with oxygen and supports liquid water.",
        "FOL": "∀x (Planet(x) ∧ HabitableForHumans(x) ↔ (AtmosphereWithOxygen(x) ∧ SupportsLiquidWater(x)))"
    },
    {
        "NL": "An item is a shiny diamond and an object is a massive boulder.",
        "FOL": "∃x (Shiny(x) ∧ Diamond(x)) ∧ ∃y (Massive(y) ∧ Boulder(y))"
    },
    {
        "NL": "An employee who works more than 40 hours per week is considered to be working overtime.",
        "FOL": "∀x (Employee(x) ∧ MoreThan40Hours(x) → Overtime(x))"
    },
    {
        "NL": "Recycling materials like paper, plastic, and aluminum helps reduce waste and conserve resources.",
        "FOL": "∀x (Recycling(x) ∧ (Paper(x) ∨ Plastic(x) ∨ Aluminum(x)) → ReducesWasteAndConservesResources(x))"
    },
    {
        "NL": "An article is informative when it provides accurate information, is well-organized, and presents a balanced perspective.",
        "FOL": "∀x ∀y (Article(x) ∧ ProvidesAccurateInformation(x, y) ∧ WellOrganized(y) ∧ BalancedPerspective(x) → Informative(x))"
    },
    {
        "NL": "If a person is a scientist, they must conduct research and perform experiments to advance knowledge in their field.",
        "FOL": "∀x (Scientist(x) → (ConductsResearch(x) ∧ PerformsExperiments(x)))"
    },
    {
        "NL": "A cell phone can receive and make calls, send messages, and access the internet when connected to a network.",
        "FOL": "∀x ∀n (CellPhone(x) ∧ Network(n) ∧ Connected(x, n) → (ReceivesCalls(x) ∧ MakesCalls(x) ∧ SendsMessages(x) ∧ AccessInternet(x)))"
    },
    {
        "NL": "Every bird can fly, but not everything that can fly is a bird.",
        "FOL": "∀x (Bird(x) → CanFly(x)) ∧ ¬∀x (CanFly(x) → Bird(x))"
    },
    {
        "NL": "A job position requiring creativity and not related to design is either a writer or a marketing specialist.",
        "FOL": "∀x (JobPosition(x) ∧ RequiresCreativity(x) ∧ ¬RelatedToDesign(x) → Writer(x) ⊕ MarketingSpecialist(x))"
    },
    {
        "NL": "A celestial body that emits a significant amount of light and is composed mainly of hydrogen and helium is known as a star.",
        "FOL": "∀x (CelestialBody(x) ∧ EmitsSignificantLight(x) ∧ ComposedOfHydrogen(x) ∧ ComposedOfHelium(x) → Star(x))"
    },
    {
        "NL": "A bicycle has two wheels, is powered by human effort, and is not a motorcycle with an engine.",
        "FOL": "∀x (Bicycle(x) ↔ (HasWheels(x, 2) ∧ PoweredByHuman(x) ∧ ¬(Motorcycle(x) ∧ HasEngine(x))))"
    },
    {
        "NL": "A triangle can be either scalene, isosceles, or equilateral but not more than one.",
        "FOL": "∀x (Triangle(x) → ((Scalene(x) ∧ ¬Isosceles(x) ∧ ¬Equilateral(x)) ∨ (¬Scalene(x) ∧ Isosceles(x) ∧ ¬Equilateral(x)) ∨ (¬Scalene(x) ∧ ¬Isosceles(x) ∧ Equilateral(x))))"
    },
    {
        "NL": "A cube is blue if and only if it is not small, and it links to a green or yellow object.",
        "FOL": "∀x (Cube(x) → ((Blue(x) ↔ ¬Small(x)) ∧ ∃y (LinksTo(x, y) → (Green(y) ∨ Yellow(y)))))"
    },
    {
        "NL": "There are no humans who admire John.",
        "FOL": "¬∃x (Human(x) ∧ Admire(x, john))"
    },
    {
        "NL": "A restaurant that serves delicious and healthy meals receives positive reviews and attracts customers.",
        "FOL": "∀x∀y (Restaurant(x) ∧ ServesDeliciousMeals(x) ∧ ServesHealthyMeals(x) → (PositiveReviews(y, x) ∧ AttractsCustomers(x)))"
    },
    {
        "NL": "A chef prepares food, a mechanic fixes cars, and a librarian organizes books.",
        "FOL": "PreparesFood(chef) ∧ FixesCars(mechanic) ∧ OrganizesBooks(librarian)"
    },
    {
        "NL": "A flashlight emits light when switched on, but a hammer doesn't emit light and doesn't have a switch.",
        "FOL": "∀x∀y (Flashlight(x) ∧ Hammer(y) → (EmitsLight(x) ∧ SwitchedOn(x) ∧ ¬EmitsLight(y) ∧ ¬HasSwitch(y)))"
    },
    {
        "NL": "A mountain's height is greater than 1,000 meters.",
        "FOL": "∀x (Mountain(x) → HeightGreaterThan1000Meters(x))"
    },
    {
        "NL": "An architect designs a building that adheres to safety regulations.",
        "FOL": "∀x∀y (Architect(x) ∧ Building(y) ∧ SafetyRegulations(y) → Designs(x, y))"
    },
    {
        "NL": "In a collection of paintings, some are abstract and colorful, while others are realistic and monochromatic.",
        "FOL": "∃x ∃y (Painting(x) ∧ Painting(y) ∧ Abstract(x) ∧ Colorful(x) ∧ Realistic(y) ∧ Monochromatic(y))"
    },
    {
        "NL": "A language is endangered if it has a declining number of speakers and is at risk of becoming extinct.",
        "FOL": "∀x (Language(x) ∧ DecliningSpeakers(x) ∧ RiskOfExtinction(x) → Endangered(x))"
    },
    {
        "NL": "If a person is not a chef, he can't cook, and he doesn't wear a chef's cap.",
        "FOL": "∀x (Person(x) ∧ ¬Chef(x) → (¬CanCook(x) ∧ ¬WearsChefsCap(x)))"
    },
    {
        "NL": "A film receives positive reviews if it has a compelling story, strong performances, and impressive visuals, but not if it's poorly edited.",
        "FOL": "∀x (Film(x) ∧ ((CompellingStory(x) ∧ StrongPerformances(x) ∧ ImpressiveVisuals(x)) ∧ ¬PoorlyEdited(x) → PositiveReviews(x)))"
    },
    {
        "NL": "A triangle is equilateral if all three sides are of equal length.",
        "FOL": "∀x∀y∀z (Triangle(x) ∧ Sides(x, y, z) ∧ EqualLength(y, z) → Equilateral(x))"
    },
    {
        "NL": "An event is exclusive if only invited guests can attend or it has a limited number of tickets.",
        "FOL": "∀x ∀y (Event(x) ∧ (InvitedGuestsOnly(x, y) ∨ LimitedTickets(x)) → Exclusive(x))"
    },
    {
        "NL": "A place is considered a zoo if it is an establishment that maintains and exhibits a collection of live animals for public viewing and education.",
        "FOL": "∀x (Zoo(x) ↔ (MaintainsAndExhibitsLiveAnimals(x) ∧ ForPublicViewingAndEducation(x)))"
    },
    {
        "NL": "An actor must know how to act and memorize lines, or be able to perform stunts.",
        "FOL": "∀x (Actor(x) → (KnowsHowToAct(x) ∧ MemorizesLines(x) ∨ PerformsStunts(x)))"
    },
    {
        "NL": "Every participant in the marathon either drinks lots of water or gets easily dehydrated.",
        "FOL": "∀x (MarathonParticipant(x) → (DrinksWater(x) ∨ EasilyDehydrated(x)))"
    },
    {
        "NL": "A novel becomes a bestseller when it presents a compelling narrative, displays excellent writing, and garners a loyal readership.",
        "FOL": "∀x (Novel(x) ∧ CompellingNarrative(x) ∧ ExcellentWriting(x) ∧ LoyalReadership(x) → Bestseller(x))"
    },
    {
        "NL": "A girl is reading in a park, and a boy is playing in the afternoon.",
        "FOL": "∃x ∃y (Girl(x) ∧ Park(y) ∧ ReadingIn(x, y)) ∧ ∃z (Boy(z) ∧ Playing(z) ∧ InAfternoon(z))"
    },
    {
        "NL": "A lake is suitable for swimming if it has clear water, a sandy bottom, and a gradual slope.",
        "FOL": "∀x (SuitableForSwimming(x) ↔ (Lake(x) ∧ ∃y (ClearWater(y) ∧ Has(x, y)) ∧ ∃z (SandyBottom(z) ∧ Has(x, z)) ∧ ∃w (GradualSlope(w) ∧ Has(x, w))))"
    },
    {
        "NL": "A building with multiple floors and an elevator isn't a house; if it has a swimming pool, it can be either a hotel or an apartment complex, but not both.",
        "FOL": "∀x (Building(x) ∧ MultipleFloors(x) ∧ Elevator(x) → (¬House(x) ∧ (SwimmingPool(x) → (Hotel(x) ⊕ ApartmentComplex(x)))))"
    },
    {
        "NL": "A creature is a bird or a reptile.",
        "FOL": "∀x (Creature(x) → (Bird(x) ∨ Reptile(x)))"
    },
    {
        "NL": "A romantic novel can make readers cry.",
        "FOL": "∀x ∀y (RomanticNovel(x) ∧ Reader(y) → CanMakeCry(x, y))"
    },
    {
        "NL": "A number is either positive, negative, or zero, but not a combination.",
        "FOL": "∀x (Number(x) → (((Positive(x) ∨ Negative(x)) ∧ ¬(Positive(x) ∧ Negative(x))) ∨ (Zero(x) ∧ ¬(Positive(x) ∨ Negative(x)))))"
    },
    {
        "NL": "Cities that are large and crowded usually have a high cost of living.",
        "FOL": "∀x (City(x) ∧ Large(x) ∧ Crowded(x) → HighCostOfLiving(x))"
    },
    {
        "NL": "A garment is classified as a dress if it is a one-piece clothing item, designed to cover the torso and legs, and typically worn by women or girls.",
        "FOL": "∀x (Garment(x) ∧ OnePieceClothingItem(x) ∧ CoversTorsoAndLegs(x) ∧ TypicallyWornBy(x, women, girls) → Dress(x))"
    },
    {
        "NL": "A planet orbits a star, while a moon orbits a planet.",
        "FOL": "∀x ∀y (Planet(x) ∧ Moon(y) → (OrbitsStar(x) ∧ OrbitsPlanet(y)))"
    },
    {
        "NL": "An artist uses pencils, paint, or charcoal to create their artwork.",
        "FOL": "∀x (Artist(x) → (UsesPencils(x) ∨ UsesPaint(x) ∨ UsesCharcoal(x)))"
    },
    {
        "NL": "If no forests are lush, then there exists a mountain every mountain leans against.",
        "FOL": "¬∀x (Forest(x) → Lush(x)) → ∃y (Mountain(y) ∧ ∀z (Mountain(z) → LeansAgainst(z, y)))"
    },
    {
        "NL": "Creative writers do not plagiarize.",
        "FOL": "∀x (Writer(x) ∧ Creative(x) → ¬Plagiarize(x))"
    },
    {
        "NL": "There are cars that some drivers do not own.",
        "FOL": "∃x ∃y (Car(x) ∧ Driver(y) ∧ ¬Own(y, x))"
    },
    {
        "NL": "A fabric is a natural fiber if it is derived from plant, animal, or mineral sources and is biodegradable.",
        "FOL": "∀x (Fabric(x) ∧ (DerivedFromPlant(x) ∨ DerivedFromAnimal(x) ∨ DerivedFromMineral(x)) ∧ Biodegradable(x) → NaturalFiber(x))"
    },
    {
        "NL": "All parrots are green, every cat is white, and all dogs are brown.",
        "FOL": "∀x (Parrot(x) → Green(x)) ∧ ∀y (Cat(y) → White(y)) ∧ ∀z (Dog(z) → Brown(z))"
    },
    {
        "NL": "An artist paints with oils, and if they don't sculpt, they must create digital art.",
        "FOL": "∀x (Artist(x) → (PaintsOils(x) ∧ (¬Sculpts(x) → CreatesDigitalArt(x))))"
    },
    {
        "NL": "Art museums display paintings, sculptures, and photographs created by various artists.",
        "FOL": "∀x (ArtMuseum(x) → (∃y (Painting(y) ∧ DisplayedIn(x, y)) ∧ ∃z (Sculpture(z) ∧ DisplayedIn(x, z)) ∧ ∃w (Photograph(w) ∧ DisplayedIn(x, w))))"
    },
    {
        "NL": "An electronic device functions on batteries if it requires portable power sources.",
        "FOL": "∀x (ElectronicDevice(x) ∧ RequiresPortablePowerSources(x) → FunctionsOnBatteries(x))"
    },
    {
        "NL": "A bird has wings and can fly, while a fish has fins and cannot fly.",
        "FOL": "∀x (Bird(x) → HasWings(x) ∧ CanFly(x)) ∧ ∀y (Fish(y) → HasFins(y) ∧ ¬CanFly(y))"
    },
    {
        "NL": "A farmer can grow crops if the soil is fertile and there is enough rainfall, but not if the area is prone to flooding or drought.",
        "FOL": "∀x ∀y (Farmer(x) ∧ Crops(y) → (CanGrow(x, y) ↔ (FertileSoil(y) ∧ AdequateRainfall(y) ∧ ¬ProneToFlooding(y) ∧ ¬ProneToDrought(y))))"
    },
    {
        "NL": "A person is considered a dentist if they diagnose and treat problems with patients' teeth and mouth.",
        "FOL": "∀x (Person(x) ∧ DiagnosesTeethProblems(x) ∧ TreatsMouthProblems(x) → Dentist(x))"
    },
    {
        "NL": "An item is considered antique if it is at least 100 years old.",
        "FOL": "∀x (Item(x) → (Age(x, 100) ∨ Older(x, 100)) ↔ Antique(x))"
    },
    {
        "NL": "There is no person who is a chef and an actor.",
        "FOL": "¬∃x (Person(x) ∧ Chef(x) ∧ Actor(x))"
    },
    {
        "NL": "Every book has a cover, but not every cover belongs to a book.",
        "FOL": "∀x (Book(x) → Cover(x)) ∧ ¬∀x (Cover(x) → Book(x))"
    },
    {
        "NL": "Birds can fly, but not all of them can.",
        "FOL": "∃x (Bird(x) ∧ CanFly(x)) ∧ ∃y (Bird(y) ∧ ¬CanFly(y))"
    },
    {
        "NL": "A vacation is relaxing if it offers leisure activities, scenic views, and comfortable accommodations.",
        "FOL": "∀x (Vacation(x) ∧ OffersLeisureActivities(x) ∧ ScenicViews(x) ∧ ComfortableAccommodations(x) → Relaxing(x))"
    },
    {
        "NL": "A mathematical problem can be solved analytically or numerically, but not both simple and complex.",
        "FOL": "∀x (MathematicalProblem(x) → ((SolvedAnalytically(x) ⊕ SolvedNumerically(x)) ∧ ¬(Simple(x) ∧ Complex(x))))"
    },
    {
        "NL": "No computer applications are bug-free unless they have been debugged thoroughly, but not all of them are user-friendly.",
        "FOL": "¬∃x (ComputerApplication(x) ∧ BugFree(x) ∨ DebuggedThoroughly(x)) ∧ ¬∀y (ComputerApplication(y) → UserFriendly(y))"
    },
    {
        "NL": "An apartment is a suitable choice for renters if it is spacious, located in a desirable neighborhood, and has modern amenities, but not if it has noisy neighbors or requires extensive maintenance.",
        "FOL": "∀x∀y (Apartment(x) ∧ Renter(y) → (SuitableChoiceForRenters(x, y) ↔ ((Spacious(x) ∧ DesirableNeighborhood(x) ∧ ModernAmenities(x)) ∧ ¬(NoisyNeighbors(x) ∨ ExtensiveMaintenance(x)))))"
    },
    {
        "NL": "An object is a musical instrument if it can produce musical sounds and is played by a musician.",
        "FOL": "∀x (Object(x) ∧ ProducesMusicalSounds(x) ∧ PlayedByMusician(x) → MusicalInstrument(x))"
    },
    {
        "NL": "There are painters who are neither lazy nor unskilled.",
        "FOL": "∃x (Painter(x) ∧ ¬(Lazy(x) ∨ Unskilled(x)))"
    },
    {
        "NL": "No squares are small.",
        "FOL": "∀x (Square(x) → ¬Small(x))"
    },
    {
        "NL": "An athlete competes in sports events and trains regularly to maintain their skills.",
        "FOL": "∀x (Athlete(x) → (∃y (SportsEvent(y) ∧ CompetesIn(x, y)) ∧ TrainsRegularly(x)))"
    },
    {
        "NL": "A movie is engaging if the plot is intriguing, the acting is convincing, and the cinematography is exceptional.",
        "FOL": "∀x (Movie(x) ∧ IntriguingPlot(x) ∧ ConvincingActing(x) ∧ ExceptionalCinematography(x) → Engaging(x))"
    },
    {
        "NL": "Mountains are tall, while valleys are low in elevation.",
        "FOL": "∀x∀y (Mountain(x) ∧ Tall(x)) ∧ (Valley(y) ∧ LowElevation(y))"
    },
    {
        "NL": "All pianos make music when they are tuned or played.",
        "FOL": "∀x (Piano(x) ∧ (Tuned(x) ∨ Played(x)) → MakesMusic(x))"
    },
    {
        "NL": "An engine is efficient when it consumes less fuel and produces less pollution.",
        "FOL": "∀x (Engine(x) → (ConsumesLessFuel(x) ∧ ProducesLessPollution(x) → Efficient(x)))"
    },
    {
        "NL": "A person who is responsible for maintaining the financial records, preparing financial statements, and ensuring the accuracy of financial information for a business or organization is an accountant.",
        "FOL": "∀x (Person(x) ∧ ResponsibleForFinancialRecords(x) ∧ PreparesFinancialStatements(x) ∧ EnsuresFinancialAccuracy(x) ∧ WorksForBusinessOrOrganization(x) → Accountant(x))"
    },
    {
        "NL": "A country is considered landlocked if it is entirely surrounded by other countries and has no coastline.",
        "FOL": "∀x (Country(x) ∧ ∀y (Bordering(x, y) → Country(y)) ∧ ¬∃z (Coastline(x, z)) → Landlocked(x))"
    },
    {
        "NL": "An electronic device that can store, process, and retrieve data is classified as a computer.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CanStoreData(x) ∧ CanProcessData(x) ∧ CanRetrieveData(x) → Computer(x))"
    },
    {
        "NL": "An individual is recognized as a scholar if they are enlisted in a college or a technical institute.",
        "FOL": "∀x (Individual(x) ∧ (EnlistedInCollege(x) ∨ EnlistedInTechnicalInstitute(x)) → Scholar(x))"
    },
    {
        "NL": "A child likes ice cream or candy.",
        "FOL": "∀x (Child(x) → (LikesIceCream(x) ∨ LikesCandy(x)))"
    },
    {
        "NL": "Pilots fly airplanes in the sky.",
        "FOL": "∀x∀y (Pilot(x) ∧ Airplane(y) → Flies(x, y))"
    },
    {
        "NL": "A location is considered remote if it is far from urban areas and has limited access to resources.",
        "FOL": "∀x (Location(x) ∧ (FarFromUrbanAreas(x) ∧ LimitedAccessToResources(x)) → Remote(x))"
    },
    {
        "NL": "A garden has plants.",
        "FOL": "∀x ∃y (Garden(x) ∧ Plant(y) ∧ LocatedIn(y, x))"
    },
    {
        "NL": "A computer with a powerful processor, ample memory, and a fast storage drive can handle resource-intensive tasks more efficiently.",
        "FOL": "∀x (Computer(x) ∧ PowerfulProcessor(x) ∧ AmpleMemory(x) ∧ FastStorageDrive(x) → HandlesResourceIntensiveTasksEfficiently(x))"
    },
    {
        "NL": "A system that uses satellites, ground stations, and receivers to determine the precise location, speed, and time of an object on Earth is a global positioning system.",
        "FOL": "∀x∀y∀z (System(x) ∧ UsesSatellitesGroundStationsReceivers(x) ∧ DeterminesLocationSpeedTime(x, y) ∧ ObjectOnEarth(y) ∧ Precise(y, z) → GlobalPositioningSystem(x))"
    },
    {
        "NL": "Anna values a Van Gogh painting if and only if it was painted after 1880.",
        "FOL": "∀x (Painting(x) ∧ PaintedBy(x, vangogh) → (PaintedAfterEighteenEighty(x) ↔ Values(anna, x)))"
    },
    {
        "NL": "Some computers use operating systems like Windows or macOS.",
        "FOL": "∃x ∃y (Computer(x) ∧ OperatingSystem(y) ∧ (Windows(y) ∨ MacOS(y)) ∧ Uses(x, y))"
    },
    {
        "NL": "When a plant is wilted, it needs hydration.",
        "FOL": "∀x (Plant(x) ∧ Wilted(x) → NeedsHydration(x))"
    },
    {
        "NL": "A triangle is isosceles if it has two equal sides and two equal angles.",
        "FOL": "∀x (Triangle(x) → (Isosceles(x) ↔ (TwoEqualSides(x) ∧ TwoEqualAngles(x))))"
    },
    {
        "NL": "A space probe can capture high-quality images of a celestial body when its camera is functioning properly, the distance is optimal, and the lighting conditions are suitable.",
        "FOL": "∀x ∀y ∀z (SpaceProbe(x) ∧ CameraFunctioningProperly(x, y) ∧ OptimalDistance(x, z) ∧ SuitableLightingConditions(x) → CapturesHighQualityImages(x))"
    },
    {
        "NL": "A structure is a bridge if it spans a physical obstacle, allows the passage of people or vehicles, and is supported by abutments or piers.",
        "FOL": "∀x (Structure(x) ∧ SpansPhysicalObstacle(x) ∧ AllowsPassageOfPeopleOrVehicles(x) ∧ SupportedByAbutmentsOrPiers(x) → Bridge(x))"
    },
    {
        "NL": "An airplane takes off when its lift overcomes the force of gravity and it gains altitude.",
        "FOL": "∀x (Airplane(x) ∧ Lift(x) ∧ ForceOfGravity(x) ∧ Overcomes(x) → GainsAltitude(x))"
    },
    {
        "NL": "A green traffic light indicates that it is safe for vehicles to proceed through an intersection.",
        "FOL": "∀x ∀y (TrafficLight(x) ∧ Intersection(y) ∧ GreenLight(x) ∧ AtIntersection(x, y) → SafeToProceed(y))"
    },
    {
        "NL": "When a material is an insulator, it has low electrical conductivity, inhibits the flow of electric current, and is often used to prevent heat transfer.",
        "FOL": "∀x (Material(x) ∧ Insulator(x) → LowElectricalConductivity(x) ∧ InhibitsElectricCurrentFlow(x) ∧ OftenUsedToPreventHeatTransfer(x))"
    },
    {
        "NL": "A museum exhibits a painting if it's famous or created by a well-known artist.",
        "FOL": "∀x∀y (Museum(x) ∧ Painting(y) → (Exhibits(x, y) ↔ (Famous(y) ∨ CreatedByWellKnownArtist(y))))"
    },
    {
        "NL": "Pianos produce sound by striking strings with hammers.",
        "FOL": "∀x (Piano(x) → (StrikeStrings(y) ∧ Hammers(z) ∧ ProduceSound(x, y, z)))"
    },
    {
        "NL": "Every cake is tasty only if it is fresh.",
        "FOL": "∀x (Cake(x) → (Tasty(x) → Fresh(x)))"
    },
    {
        "NL": "Photographers capture images using cameras, and the photos can be printed or stored digitally.",
        "FOL": "∀x∀y (Photographer(x) ∧ Image(y) → (Captures(x, y) ∧ (Prints(y) ∨ StoresDigitally(y))))"
    },
    {
        "NL": "If a movie is a comedy, it is intended to make people laugh.",
        "FOL": "∀x (Comedy(x) → IntendedToMakePeopleLaugh(x))"
    },
    {
        "NL": "A day is considered holiday if and only if it falls on weekend or it is a national holiday.",
        "FOL": "∀x (Day(x) → (Holiday(x) ↔ (Weekend(x) ∨ NationalHoliday(x))))"
    },
    {
        "NL": "There are scientists who revere only those peers who have more patents than they do.",
        "FOL": "∃x ∀y (Scientist(x) ∧ Peer(y) ∧ MorePatentsThan(y, x) → Revere(x, y))"
    },
    {
        "NL": "A television show can be a drama or a comedy, and it can be broadcast on cable or streaming platforms.",
        "FOL": "∀x (TelevisionShow(x) → ((Drama(x) ∨ Comedy(x)) ∧ (Cable(x) ∨ Streaming(x))))"
    },
    {
        "NL": "Doctors diagnose patients and provide medical treatment when necessary.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → (Diagnoses(x, y) ∧ (NecessaryMedicalTreatment(y) → ProvidesTreatment(x, y))))"
    },
    {
        "NL": "Some books are fiction, while others are non-fiction.",
        "FOL": "∀x (Book(x) → Fiction(x) ⊕ NonFiction(x))"
    },
    {
        "NL": "If anything is yellow, then everything indicates a pentagon.",
        "FOL": "∃x (Yellow(x)) → ∀y ∃z (Pentagon(z) ∧ Indicates(y, z))"
    },
    {
        "NL": "Igneous rocks form from the cooling and solidification of molten material called magma.",
        "FOL": "∀x ∀y (IgneousRock(x) ∧ MoltenMaterial(y) → (CoolsFrom(y) ∧ SolidifiesTo(x)))"
    },
    {
        "NL": "It is not true that an object is circular if it points to a small object.",
        "FOL": "¬∀x ∃y (Small(y) ∧ PointsTo(x, y) → Circular(x))"
    },
    {
        "NL": "In a symbiotic relationship, two or more species interact closely, benefiting at least one of the organisms, such as in mutualism, commensalism, or parasitism.",
        "FOL": "∀x∀y∀z (SymbioticRelationship(x) → (InteractClosely(x, y) ∧ Species(y) ∧ (BenefitsOrganism(x, z) ∧ (Mutualism(x, z) ∨ Commensalism(x, z) ∨ Parasitism(x, z)))))"
    },
    {
        "NL": "Paintings are created by artists using various materials.",
        "FOL": "∀x ∀y (Painting(x) ∧ Artist(y) ∧ Creates(y, x) → UsesVariousMaterials(y))"
    },
    {
        "NL": "If a plant is herbivorous, then it is not carnivorous.",
        "FOL": "∀x (Herbivorous(x) → ¬Carnivorous(x))"
    },
    {
        "NL": "A driver will take the shortcut only if he doesn't worry about the traffic.",
        "FOL": "∀x (Driver(x) ∧ TakeShortcut(x) → ¬WorriesAboutTraffic(x))"
    },
    {
        "NL": "An orange is a fruit and round, while a cucumber is a vegetable and not round.",
        "FOL": "∀x ∀y (Orange(x) ∧ Cucumber(y) → ((Fruit(x) ∧ Round(x)) ∧ (Vegetable(y) ∧ ¬Round(y))))"
    },
    {
        "NL": "A food item is considered expired if it is past its expiration date or if it exhibits signs of spoilage.",
        "FOL": "∀x (FoodItem(x) ∧ (PastExpirationDate(x) ∨ ShowsSpoilage(x)) → Expired(x))"
    },
    {
        "NL": "An island is surrounded by water and can't be placed within a lake.",
        "FOL": "∀x (Island(x) → (SurroundedByWater(x) ∧ ¬PlacedInLake(x)))"
    },
    {
        "NL": "A car is a sedan or a convertible.",
        "FOL": "∀z (Car(z) → (Sedan(z) ∨ Convertible(z)))"
    },
    {
        "NL": "A type of paint can be either oil-based or water-based.",
        "FOL": "∀x (PaintType(x) → OilBased(x) ⊕ WaterBased(x))"
    },
    {
        "NL": "A person can be a parent if and only if they have at least one child.",
        "FOL": "∀x (Parent(x) ↔ ∃y (Child(y) ∧ HasChild(x, y)))"
    },
    {
        "NL": "A statement is true if it corresponds to reality, and false otherwise.",
        "FOL": "∀x (Statement(x) → (CorrespondsToReality(x) ⊕ ¬CorrespondsToReality(x)))"
    },
    {
        "NL": "A library contains books and journals.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Book(y) ∧ Journal(z) → (Contains(x, y) ∧ Contains(x, z)))"
    },
    {
        "NL": "A doctor prescribes medication to a patient if they have a specific illness.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Illness(z) ∧ HasIllness(y, z) → Prescribes(x, y, z))"
    },
    {
        "NL": "A square is a special type of rectangle where all sides are of equal length.",
        "FOL": "∀x (Square(x) → (Rectangle(x) ∧ EqualSideLengths(x)))"
    },
    {
        "NL": "A mountain can be snow-covered or not, while a valley is typically surrounded by hills or mountains.",
        "FOL": "∀x∀y (Mountain(x) ∧ Valley(y) → ((SnowCovered(x) ∨ ¬SnowCovered(x)) ∧ (SurroundedByHills(y) ∨ SurroundedByMountains(y))))"
    },
    {
        "NL": "There are chefs who are neither inexperienced nor untidy.",
        "FOL": "∃x (Chef(x) ∧ ¬(Inexperienced(x) ∨ Untidy(x)))"
    },
    {
        "NL": "A storm produces rain, wind, and lightning, which can cause damage or disruption.",
        "FOL": "∀x∀y∀z∀w (Storm(x) ∧ Rain(y) ∧ Wind(z) ∧ Lightning(w) → (Produces(x, y) ∧ Produces(x, z) ∧ Produces(x, w) ∧ CausesDamageOrDisruption(x)))"
    },
    {
        "NL": "An airplane flies at high altitudes and covers long distances in a short amount of time.",
        "FOL": "∀x (Airplane(x) → (HighAltitude(x) ∧ CoversLongDistances(x) ∧ ShortTime(x)))"
    },
    {
        "NL": "A document is a biography if it chronicles the life story of its creator.",
        "FOL": "∀x ∃y (Document(x) ∧ Individual(y) ∧ ChroniclesLifeStory(x, y) ∧ CreatedBy(x, y) → Biography(x))"
    },
    {
        "NL": "If a person is over 18 years old, then he/she is legally allowed to vote.",
        "FOL": "∀x (AgeOver18(x) → LegallyAllowedToVote(x))"
    },
    {
        "NL": "A door is locked when a key is required to open it.",
        "FOL": "∀x (Door(x) ∧ RequiresKey(x) → Locked(x))"
    },
    {
        "NL": "A device is considered a printer if it transfers text or images from a computer onto paper or another physical medium.",
        "FOL": "∀x (Device(x) ∧ TransfersTextOrImages(x) ∧ FromComputer(x) ∧ OntoPaperOrOtherMedium(x) → Printer(x))"
    },
    {
        "NL": "A farm produces crops, livestock, or a combination of both, with the primary goal of providing food, fiber, or other agricultural products.",
        "FOL": "∀x (Farm(x) → ((ProducesCrops(x) ∨ ProducesLivestock(x)) ∧ ProvidesFoodFiberOrOtherAgriculturalProducts(x)))"
    },
    {
        "NL": "A geological formation is a mountain if it rises significantly above its surroundings and has a prominent peak or summit.",
        "FOL": "∀x (GeologicalFormation(x) ∧ RisesSignificantlyAboveSurroundings(x) ∧ ProminentPeakOrSummit(x) → Mountain(x))"
    },
    {
        "NL": "A tree sheds its leaves in autumn if it is deciduous.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → ShedsLeavesInAutumn(x))"
    },
    {
        "NL": "A dog is family-friendly if and only if it is not violent and excessively playful.",
        "FOL": "∀x (Dog(x) → (FamilyFriendly(x) ↔ ¬Violent(x) ∧ ¬ExcessivelyPlayful(x)))"
    },
    {
        "NL": "The garden flourishes when there's enough sunlight and the soil is well-drained.",
        "FOL": "∀x (Garden(x) ∧ Sunlight(x) ∧ WellDrainedSoil(x) → Flourishes(x))"
    },
    {
        "NL": "A scientist studies physics, chemistry, or biology.",
        "FOL": "∀x (Scientist(x) → (Studies(x, \"physics\") ∨ Studies(x, \"chemistry\") ∨ Studies(x, \"biology\")))"
    },
    {
        "NL": "A painting is considered abstract if it doesn't depict recognizable objects or scenes.",
        "FOL": "∀x (Painting(x) ∧ ¬DepictsRecognizableObjectsOrScenes(x) → Abstract(x))"
    },
    {
        "NL": "A person is a singer if they can sing and have a music album.",
        "FOL": "∀x (Person(x) ∧ CanSing(x) ∧ HaveMusicAlbum(x) → IsSinger(x))"
    },
    {
        "NL": "An art piece is captivating when it embodies a powerful message, exhibits a distinctive style, and elicits a strong emotional response.",
        "FOL": "∀x (ArtPiece(x) ∧ EmbodiesPowerfulMessage(x) ∧ ExhibitsDistinctiveStyle(x) ∧ ElicitsStrongEmotionalResponse(x) → Captivating(x))"
    },
    {
        "NL": "All stars are either red or blue.",
        "FOL": "∀x (Star(x) ∧ (Red(x) ⊕ Blue(x)))"
    },
    {
        "NL": "A university offers undergraduate and graduate programs in various fields.",
        "FOL": "∀x (University(x) → (OffersUndergraduatePrograms(x) ∧ OffersGraduatePrograms(x)))"
    },
    {
        "NL": "A film is a box office hit if it has a larger audience and higher revenue than other films in the same genre.",
        "FOL": "∀x∀y (Film(x) ∧ Film(y) ∧ SameGenre(x, y) ∧ LargerAudience(x, y) ∧ HigherRevenue(x, y) → BoxOfficeHit(x))"
    },
    {
        "NL": "An old clock tells the time.",
        "FOL": "∃x (Old(x) ∧ Clock(x) → ∃y (Tells(x, y)))"
    },
    {
        "NL": "Authors write books, and editors revise them.",
        "FOL": "∀x ∀y ∀z (Author(x) ∧ Book(y) ∧ Editor(z) → Writes(x, y) ∧ Revises(z, y))"
    },
    {
        "NL": "Rainy weather can lead to slippery roads and decreased visibility.",
        "FOL": "∀x (Weather(x) ∧ Rainy(x) → (SlipperyRoads(x) ∧ DecreasedVisibility(x)))"
    },
    {
        "NL": "All bakers are chefs.",
        "FOL": "∀x (Baker(x) → Chef(x))"
    },
    {
        "NL": "Not every car is expensive.",
        "FOL": "¬∀x (Car(x) → Expensive(x))"
    },
    {
        "NL": "There are smart students.",
        "FOL": "∃x (Student(x) ∧ Smart(x))"
    },
    {
        "NL": "A bachelor is an unmarried adult male.",
        "FOL": "∀x (Bachelor(x) ↔ (Unmarried(x) ∧ Adult(x) ∧ Male(x)))"
    },
    {
        "NL": "A museum displays artifacts and exhibits related to history, art, or science, and often hosts special events, lectures, and workshops.",
        "FOL": "∀x∀y (Museum(x) ∧ (History(y) ∨ Art(y) ∨ Science(y)) → DisplaysExhibitsAndHostsEvents(x, y))"
    },
    {
        "NL": "A train travels on tracks, whereas a plane flies in air.",
        "FOL": "∀x (Train(x) → TravelsOnTracks(x)) ∧ ∀y (Plane(y) → FliesInAir(y))"
    },
    {
        "NL": "Tom adores a Scorsese picture if and only if it was generated in 1973.",
        "FOL": "∀x (Movie(x) ∧ DirectedBy(x, scorsese) → (GeneratedInNineteenseventythree(x) ↔ Adores(tom, x)))"
    },
    {
        "NL": "Trees provide shade under their branches.",
        "FOL": "∀x (Tree(x) → (ProvidesShade(x) ∧ UnderBranches(x)))"
    },
    {
        "NL": "A pen writes in black ink, while a pencil writes in gray and does not use ink.",
        "FOL": "∃x (Pen(x) ∧ WritesBlackInk(x)) ∨ ∃y (Pencil(y) ∧ WritesGray(y) ∧ ¬UsesInk(y))"
    },
    {
        "NL": "A book is covered by a cover and can't be kept within a page.",
        "FOL": "∀x (Book(x) → (CoveredByCover(x) ∧ ¬KeptInPage(x)))"
    },
    {
        "NL": "A trash can holds waste.",
        "FOL": "∀x (TrashCan(x) → HoldsWaste(x))"
    },
    {
        "NL": "Each student who recommends a book is recommended by someone.",
        "FOL": "∀x (Student(x) ∧ ∃y (Book(y) ∧ Recommends(x, y)) → ∃z (Person(z) ∧ Recommends(z, x)))"
    },
    {
        "NL": "A river flows from its source, which is typically a spring, glacier, or lake, to its mouth, where it empties into a larger body of water such as an ocean, sea, or another river.",
        "FOL": "∀x∀y∀z (River(x) → (FlowsFromSource(x, y) ∧ (Spring(y) ∨ Glacier(y) ∨ Lake(y)) ∧ FlowsToMouth(x, z) ∧ (Ocean(z) ∨ Sea(z) ∨ River(z))))"
    },
    {
        "NL": "A pharmacy sells prescription medication, over-the-counter drugs, and healthcare products, while a convenience store offers snacks, beverages, and household items.",
        "FOL": "∀x ∀y (Pharmacy(x) ∧ ConvenienceStore(y) → ((Sells(x, PrescriptionMedication) ∧ Sells(x, OverTheCounterDrugs) ∧ Sells(x, HealthcareProducts)) ∧ (Sells(y, Snacks) ∧ Sells(y, Beverages) ∧ Sells(y, HouseholdItems))))"
    },
    {
        "NL": "A volcano can be active, dormant, or extinct, and its eruptions can release lava, ash, and gases, shaping the surrounding landscape and sometimes causing destruction.",
        "FOL": "∀x (Volcano(x) → ((Active(x) ∨ Dormant(x) ∨ Extinct(x)) ∧ Eruptions(x) ∧ ReleaseLava(x) ∧ ReleaseAsh(x) ∧ ReleaseGases(x) ∧ ShapesLandscape(x) ∧ CanCauseDestruction(x)))"
    },
    {
        "NL": "A car is considered a hybrid if it uses both gasoline and electric power sources.",
        "FOL": "∀x (Car(x) ∧ Hybrid(x) ↔ (UsesGasoline(x) ∧ UsesElectricPower(x)))"
    },
    {
        "NL": "A place is considered a theater if it is a venue for live performances, such as plays, concerts, or other artistic events, often featuring a stage and seating for an audience.",
        "FOL": "∀x (Theater(x) ↔ (VenueForLivePerformances(x) ∧ FeaturingStageAndSeatingForAudience(x) ∧ IncludingPlaysConcertsAndOtherArtisticEvents(x)))"
    },
    {
        "NL": "Only registered users can access the premium content, while guest users can access the free content.",
        "FOL": "∀x∀y (RegisteredUser(x) ∧ PremiumContent(y) → CanAccess(x, y)) ∧ (GuestUser(x) ∧ FreeContent(y) → CanAccess(x, y))"
    },
    {
        "NL": "A hospital provides medicines, supplies beds, and organizes healthcare lectures.",
        "FOL": "∀x ∃y ∃z ∃w (Hospital(x) → (Medicine(y) ∧ Bed(z) ∧ HealthcareLecture(w) ∧ Provides(x, y) ∧ Supplies(x, z) ∧ Organizes(x, w)))"
    },
    {
        "NL": "A number is either positive or negative, but not both.",
        "FOL": "∀x (Number(x) → (Positive(x) ⊕ Negative(x)))"
    },
    {
        "NL": "A company achieves success if it generates significant profits, maintains a loyal customer base, and fosters a positive work environment, or if it is innovative and disrupts the market, but not if it engages in unethical practices.",
        "FOL": "∀x (Company(x) → (AchievesSuccess(x) ↔ (((SignificantProfits(x) ∧ LoyalCustomers(x) ∧ PositiveWorkEnvironment(x)) ∨ InnovativeAndDisruptive(x)) ∧ ¬UnethicalPractices(x))))"
    },
    {
        "NL": "An employee is eligible for a promotion if they have excellent performance and their supervisor recommends them.",
        "FOL": "∀x ∀y (Employee(x) ∧ Supervisor(y) ∧ ExcellentPerformance(x) ∧ Recommends(y, x) → EligibleForPromotion(x))"
    },
    {
        "NL": "A person is considered a teacher if they instruct students in a subject or skill.",
        "FOL": "∀x (Person(x) ∧ InstructsStudents(x) ∧ TeachesSubjectOrSkill(x) → Teacher(x))"
    },
    {
        "NL": "A successful business requires a strong strategy, efficient execution, and customer satisfaction.",
        "FOL": "∀x (Business(x) ∧ StrongStrategy(x) ∧ EfficientExecution(x) ∧ CustomerSatisfaction(x) → Successful(x))"
    },
    {
        "NL": "An object is a camera if it is a device that captures and records images, either as photographs or as video footage.",
        "FOL": "∀x ((Device(x) ∧ CapturesAndRecordsImages(x) ∧ AsPhotographsOrVideoFootage(x)) → Camera(x))"
    },
    {
        "NL": "A country with a monarch as its head of state and a system of government based on the hereditary transfer of power is a monarchy.",
        "FOL": "∀x (Country(x) ∧ MonarchHeadOfState(x) ∧ HereditaryTransferOfPower(x) → Monarchy(x))"
    },
    {
        "NL": "Not every apple is ripe, so there is a basket that all baskets are full before.",
        "FOL": "¬∀x (Apple(x) → Ripe(x)) → ∃y (Basket(y) ∧ ∀z (Basket(z) → FullBefore(z, y)))"
    },
    {
        "NL": "Some cars are luxury and fast, but not economical, or they are economical but not luxury and fast.",
        "FOL": "∀x (Car(x) → ((Luxury(x) ∧ Fast(x) ∧ ¬Economical(x)) ⊕ (Economical(x) ∧ ¬(Luxury(x) ∧ Fast(x)))))"
    },
    {
        "NL": "A smartphone requires charging if its battery level is low and no power-saving mode is active.",
        "FOL": "∀x (Smartphone(x) ∧ LowBatteryLevel(x) ∧ ¬PowerSavingModeActive(x) → RequiresCharging(x))"
    },
    {
        "NL": "Cats are domesticated pets that purr, have whiskers, and can climb trees.",
        "FOL": "∀x (Cat(x) → (DomesticatedPet(x) ∧ Purrs(x) ∧ HasWhiskers(x) ∧ ClimbsTrees(x)))"
    },
    {
        "NL": "A vehicle passes an emissions test if it is equipped with a catalytic converter and meets emission standards.",
        "FOL": "∀x∀y (Vehicle(x) ∧ EmissionsTest(y) ∧ CatalyticConverter(x) ∧ MeetsEmissionStandards(x, y) → PassesTest(x, y))"
    },
    {
        "NL": "A powerful and destructive storm with very strong winds, heavy rain, and sometimes hail is a typhoon.",
        "FOL": "∀x (Storm(x) ∧ Powerful(x) ∧ Destructive(x) ∧ StrongWinds(x) ∧ HeavyRain(x) ∧ SometimesHail(x) → Typhoon(x))"
    },
    {
        "NL": "An immersive virtual reality experience depends on realistic graphics, accurate tracking, and comfortable hardware.",
        "FOL": "∀x (VirtualRealityExperience(x) → (Immersive(x) ↔ (RealisticGraphics(x) ∧ AccurateTracking(x) ∧ ComfortableHardware(x))))"
    },
    {
        "NL": "A television displays images or plays sound, and a radio only plays sound.",
        "FOL": "∀x ∀y ((Television(x) ∧ (DisplaysImages(x) ∨ PlaysSound(x))) ∧ (Radio(y) ∧ ¬DisplaysImages(y) ∧ PlaysSound(y)))"
    },
    {
        "NL": "An electronic device that processes, stores, and retrieves information, enabling users to perform various tasks, is a computer.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ProcessesInformation(x) ∧ StoresInformation(x) ∧ RetrievesInformation(x) ∧ EnablesUsersToPerformTasks(x) → Computer(x))"
    },
    {
        "NL": "A gardener cultivates flowers, shrubs, and trees in a garden.",
        "FOL": "∀x∀y∀z∀w (Gardener(x) ∧ (Flower(y) ∨ Shrub(z) ∨ Tree(w)) → CultivatesInGarden(x, y, z, w))"
    },
    {
        "NL": "No soup is vegetarian unless it is tomato, but all of them are hot.",
        "FOL": "∀x (Soup(x) → (¬Vegetarian(x) ∨ Tomato(x))) ∧ ∀y (Soup(y) → Hot(y))"
    },
    {
        "NL": "There is no chair that attracts all the blue bicycles.",
        "FOL": "¬∃x (Chair(x) ∧ ∀y (Blue(y) ∧ Bicycle(y) → Attracts(x, y)))"
    },
    {
        "NL": "A vehicle is considered a hybrid if it uses both gasoline and electricity as fuel sources.",
        "FOL": "∀x (HybridVehicle(x) ↔ (Vehicle(x) ∧ UsesGasoline(x) ∧ UsesElectricity(x)))"
    },
    {
        "NL": "A car drives on a road if the car is functional, has a driver, and the road allows for vehicle passage.",
        "FOL": "∀x∀y (DrivesOn(x, y) ↔ (Car(x) ∧ Road(y) ∧ Functional(x) ∧ HasDriver(x) ∧ AllowsVehiclePassage(y)))"
    },
    {
        "NL": "A chef prepares meals without using peanuts if a customer has a peanut allergy.",
        "FOL": "∀x∀y (Chef(x) ∧ Customer(y) ∧ PeanutAllergy(y) → PreparesMealsWithoutPeanuts(x, y))"
    },
    {
        "NL": "A restaurant serves food and beverages.",
        "FOL": "∀x (Restaurant(x) → ServesFood(x) ∧ ServesBeverages(x))"
    },
    {
        "NL": "A fan circulates air and has blades, but it is not an air conditioner.",
        "FOL": "∀x (Fan(x) ↔ (CirculatesAir(x) ∧ HasBlades(x) ∧ ¬AirConditioner(x)))"
    },
    {
        "NL": "A smartphone is user-friendly if it has a simple interface and is not too heavy or too fragile.",
        "FOL": "∀x (Smartphone(x) ∧ SimpleInterface(x) ∧ ¬Heavy(x) ∧ ¬Fragile(x) → UserFriendly(x))"
    },
    {
        "NL": "A building is environmentally friendly if it uses renewable energy sources, has energy-efficient systems, and implements waste reduction measures.",
        "FOL": "∀x (EnvironmentallyFriendly(x) ↔ (Building(x) ∧ RenewableEnergySources(x) ∧ EnergyEfficientSystems(x) ∧ WasteReductionMeasures(x)))"
    },
    {
        "NL": "Only mammals give birth to live young and produce milk.",
        "FOL": "∀x ((GivesBirthToLiveYoung(x) ∧ ProducesMilk(x)) → Mammal(x))"
    },
    {
        "NL": "A company succeeds if it has innovative products and an efficient supply chain xor effective marketing strategies.",
        "FOL": "∀x (Company(x) ∧ InnovativeProducts(x) ∧ (EfficientSupplyChain(x) ⊕ EffectiveMarketingStrategies(x)) → Succeeds(x))"
    },
    {
        "NL": "A person who regularly eats vegetables and exercises is likely to be healthy.",
        "FOL": "∀x (Person(x) ∧ RegularlyEatsVegetables(x) ∧ Exercises(x) → LikelyHealthy(x))"
    },
    {
        "NL": "Some birds can fly, swim, or both, and have unique patterns of migration.",
        "FOL": "∃x (Bird(x) ∧ (CanFly(x) ∨ CanSwim(x) ∨ (CanFly(x) ∧ CanSwim(x))) ∧ (∃y MigrationPattern(y) ∧ HasMigrationPattern(x, y)))"
    },
    {
        "NL": "A detective investigates cases and finds clues to solve mysteries.",
        "FOL": "∀x ∀y ∀z (Detective(x) ∧ Case(y) ∧ Mystery(z) → (Investigates(x, y) ∧ FindsClues(x, z) ∧ Solves(x, z)))"
    },
    {
        "NL": "There are students who are conscientious and excel in mathematics, while the others are jovial and love arts.",
        "FOL": "∀x (Student(x) → (Conscientious(x) ∧ ExcelMathematics(x)) ⊕ (Jovial(x) ∧ LoveArts(x)))"
    },
    {
        "NL": "A person who is a pilot must have a pilot's license.",
        "FOL": "∀x (Pilot(x) → HasPilotsLicense(x))"
    },
    {
        "NL": "Rain is wet, whereas snow is cold and dry.",
        "FOL": "∀x∀y (Rain(x) → Wet(x)) ∧ (Snow(y) → (Cold(y) ∧ Dry(y)))"
    },
    {
        "NL": "Mountains are formed through tectonic plate movement, volcanic activity, or a combination of both processes.",
        "FOL": "∀x (Mountain(x) → (TectonicPlateMovement(x) ∨ VolcanicActivity(x) ∨ (TectonicPlateMovement(x) ∧ VolcanicActivity(x))))"
    },
    {
        "NL": "A student successfully graduates from university if they complete all required courses and maintain a satisfactory GPA.",
        "FOL": "∀x (Student(x) → (GraduatesFromUniversity(x) ↔ (CompletesRequiredCourses(x) ∧ SatisfactoryGPA(x))))"
    },
    {
        "NL": "There is no flower and Emma is a gardener.",
        "FOL": "¬∃x (Flower(x)) ∧ Gardener(emma)"
    },
    {
        "NL": "Healthy foods are rich in nutrients and low in harmful substances, while junk foods are high in calories but lack essential vitamins and minerals.",
        "FOL": "∀x (HealthyFood(x) → (RichInNutrients(x) ∧ LowInHarmfulSubstances(x))) ⊕ (JunkFood(x) → (HighInCalories(x) ∧ LacksEssentialVitamins(x) ∧ LacksEssentialMinerals(x)))"
    },
    {
        "NL": "A fruit that is red, juicy, and has a sweet taste is a strawberry.",
        "FOL": "∀x (Fruit(x) ∧ Red(x) ∧ Juicy(x) ∧ SweetTaste(x) → Strawberry(x))"
    },
    {
        "NL": "No scientist in the lab formulated a theory.",
        "FOL": "∀x (Scientist(x) ∧ InLab(x) → ¬FormulatedTheory(x))"
    },
    {
        "NL": "A method of transportation can be powered by human effort, animals, or mechanical power.",
        "FOL": "∀x (TransportationMethod(x) → PoweredByHumanEffort(x) ∨ PoweredByAnimals(x) ∨ PoweredByMechanicalPower(x))"
    },
    {
        "NL": "A drink is non-alcoholic if it doesn't contain any alcohol.",
        "FOL": "∀x (Drink(x) ∧ ¬ContainsAlcohol(x) → NonAlcoholic(x))"
    },
    {
        "NL": "A person is either an adult or a child, but not both.",
        "FOL": "∀x (Person(x) → (Adult(x) ⊕ Child(x)))"
    },
    {
        "NL": "A lighthouse guides ships.",
        "FOL": "∀x (Lighthouse(x) → GuidesShips(x))"
    },
    {
        "NL": "There is a creature that fears no thing it acknowledges.",
        "FOL": "∃x (Creature(x) ∧ ∀y (Thing(y) ∧ Acknowledge(x, y) → ¬Fear(x, y)))"
    },
    {
        "NL": "Smartphones enable communication, provide access to information, and offer various forms of entertainment.",
        "FOL": "∀x ∀y ∀z (Smartphone(x) ∧ EnablesCommunication(x, y) ∧ ProvidesInfoAccess(x) ∧ OffersEntertainment(x, z) → Multifunctional(x, y, z))"
    },
    {
        "NL": "A volcano is active if it has erupted within the last 10,000 years or is showing signs of unrest.",
        "FOL": "∀x (Volcano(x) ∧ (EruptedWithinLastYears(x, 10000) ∨ ShowingSignsOfUnrest(x)) → Active(x))"
    },
    {
        "NL": "There are doctors who are also skilled surgeons and play golf.",
        "FOL": "∃x (Doctor(x) ∧ SkilledSurgeon(x) ∧ PlayGolf(x))"
    },
    {
        "NL": "An area with a large concentration of trees and plants that absorb carbon dioxide and produce oxygen is called a carbon sink.",
        "FOL": "∀x (Area(x) ∧ LargeConcentrationOfTreesAndPlants(x) ∧ AbsorbsCarbonDioxide(x) ∧ ProducesOxygen(x) → CarbonSink(x))"
    },
    {
        "NL": "A person cannot be both alive and dead.",
        "FOL": "∀x ¬(Alive(x) ∧ Dead(x))"
    },
    {
        "NL": "A vehicle x is self-driving if it can navigate and operate without human intervention.",
        "FOL": "∀x (Vehicle(x) ∧ CanNavigateWithoutHumanIntervention(x) ∧ CanOperateWithoutHumanIntervention(x) → SelfDriving(x))"
    },
    {
        "NL": "A circle has no corners, while a square has four corners.",
        "FOL": "∀x (Circle(x) → CornerCount(x, 0)) ∧ ∀y (Square(y) → CornerCount(y, 4))"
    },
    {
        "NL": "A library contains books, digital resources, and multimedia for patrons to access and borrow.",
        "FOL": "∀x ∀y ∀z ∀w (Library(x) → (ContainsBooks(x, y) ∧ ContainsDigitalResources(x, z) ∧ ContainsMultimedia(x, w) ∧ AccessibleToPatrons(x) ∧ Borrowable(x)))"
    },
    {
        "NL": "If there are no brilliant artists, then no observer applauds any painting.",
        "FOL": "¬∃x (Artist(x)) → ¬∃y (Observer(y) ∧ ∃z (Painting(z) ∧ Applaud(y, z)))"
    },
    {
        "NL": "A store that sells clothes, shoes, and accessories is a fashion store.",
        "FOL": "∀x (Store(x) ∧ SellsClothes(x) ∧ SellsShoes(x) ∧ SellsAccessories(x) → FashionStore(x))"
    },
    {
        "NL": "There is a god that every god worships, assuming not all mortals are immortal.",
        "FOL": "¬∀x (Mortal(x) → Immortal(x)) → ∃y (God(y) ∧ ∀z (God(z) → Worships(z, y)))"
    },
    {
        "NL": "A bird can fly long distances if it has strong wings, a lightweight body, and efficient energy usage.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ StrongWings(x, y) ∧ LightweightBody(x, z) ∧ EfficientEnergyUsage(x) → CanFlyLongDistances(x))"
    },
    {
        "NL": "Not all books are thrilling, but every thrilling book imparts knowledge.",
        "FOL": "¬∀x (Book(x) → Thrilling(x)) ∧ ∀y (Thrilling(y) ∧ Book(y) → ImpartsKnowledge(y))"
    },
    {
        "NL": "A garden contains various plants, including flowers like roses or tulips, vegetables such as tomatoes or cucumbers, and trees that produce fruits like apples or oranges.",
        "FOL": "∀x ∀y ∀z (Garden(x) ∧ (Flower(x, y) ∧ (Rose(y) ∨ Tulip(y))) ∧ (Vegetable(x, z) ∧ (Tomato(z) ∨ Cucumber(z))) ∧ (FruitTree(x) ∧ (AppleTree(x) ∨ OrangeTree(x))))"
    },
    {
        "NL": "A sustainable city that invests in renewable energy sources and implements efficient waste management systems benefits the environment and improves the quality of life for its inhabitants.",
        "FOL": "∀x∀y (SustainableCity(x) ∧ InvestsInRenewableEnergySources(x) ∧ ImplementsEfficientWasteManagementSystems(x) → (BenefitsEnvironment(y) ∧ ImprovesQualityOfLifeForInhabitants(x)))"
    },
    {
        "NL": "A carnivorous animal hunts other animals for food.",
        "FOL": "∀x∀y (Carnivorous(x) ∧ Animal(y) → HuntsForFood(x, y))"
    },
    {
        "NL": "Large cities are bustling, whereas small villages are quiet.",
        "FOL": "∀x (City(x) ∧ Large(x) → IsBustling(x)) ∧ ∀y (Village(y) ∧ Small(y) → IsQuiet(y))"
    },
    {
        "NL": "A graphic designer creates visuals using design software and various color palettes.",
        "FOL": "∀x ∀y ∀z (GraphicDesigner(x) ∧ Visual(y) ∧ ColorPalette(z) → Creates(x, y, z))"
    },
    {
        "NL": "A type of plant can be either a tree or a shrub.",
        "FOL": "∀x (PlantType(x) → Tree(x) ⊕ Shrub(x))"
    },
    {
        "NL": "A device is either online or offline.",
        "FOL": "∀x (Device(x) → (Online(x) ∨ Offline(x)))"
    },
    {
        "NL": "A thing is flat if and only if it directs to a petite item.",
        "FOL": "∀x (Flat(x) ↔ ∃y (Petite(y) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "A structure that provides shelter, has walls and a roof, and is designed for human habitation is called a building.",
        "FOL": "∀x (Structure(x) ∧ ProvidesShelter(x) ∧ HasWallsAndRoof(x) ∧ DesignedForHumanHabitation(x) → Building(x))"
    },
    {
        "NL": "A chemical element with the symbol O and atomic number 8 is oxygen.",
        "FOL": "∀x (ChemicalElement(x) ∧ Symbol(x, \"O\") ∧ AtomicNumber(x, 8) → Oxygen(x))"
    },
    {
        "NL": "A river originates from a source, flows through various landscapes, and eventually empties into a body of water such as a lake or an ocean.",
        "FOL": "∀x ∀y ∀z (River(x) ∧ Source(y) ∧ BodyOfWater(z) ∧ OriginatesFrom(x, y) ∧ FlowsThroughLandscapes(x) → EmptiesInto(x, z))"
    },
    {
        "NL": "An object is a refrigerator if it is an appliance that uses a thermoelectric or vapor-compression system to maintain a low temperature, typically for preserving food.",
        "FOL": "∀x ((Appliance(x) ∧ UsesThermoelectricOrVaporCompressionSystem(x) ∧ MaintainsLowTemperature(x) ∧ TypicallyForPreservingFood(x)) → Refrigerator(x))"
    },
    {
        "NL": "A phone has a camera with either low or high resolution, but not both.",
        "FOL": "∃x (Phone(x) ∧ ∃y (Camera(y) ∧ HasCamera(x, y) ∧ (LowResolution(y) ∧ ¬HighResolution(y) ∨ (¬LowResolution(y) ∧ HighResolution(y)))))"
    },
    {
        "NL": "A tree that produces edible fruit and has broad leaves is likely a fruit tree.",
        "FOL": "∀x (Tree(x) ∧ ProducesEdibleFruit(x) ∧ BroadLeaves(x) → LikelyFruitTree(x))"
    },
    {
        "NL": "Festivals often feature live music performances, art exhibits, and various food options.",
        "FOL": "∀x (Festival(x) ∧ (LiveMusic(x) ∨ ArtExhibits(x) ∨ FoodOptions(x)) → Features(x))"
    },
    {
        "NL": "Every lawyer is professional, but not every professional is a lawyer.",
        "FOL": "∀x (Lawyer(x) → Professional(x)) ∧ ¬∀x (Professional(x) → Lawyer(x))"
    },
    {
        "NL": "A recipe is suitable for a vegetarian when it contains no meat ingredients and all components are plant-based.",
        "FOL": "∀x (Recipe(x) ∧ ¬ContainsMeatIngredients(x) ∧ AllComponentsPlantBased(x) → SuitableForVegetarian(x))"
    },
    {
        "NL": "A hammer is used for pounding nails, a screwdriver is used for turning screws, and pliers are used for gripping objects.",
        "FOL": "∀x ∀y ∀z (Hammer(x) ∧ Screwdriver(y) ∧ Pliers(z) → (PoundsNails(x) ∧ TurnsScrews(y) ∧ GripsObjects(z)))"
    },
    {
        "NL": "An object is considered to be in motion if it changes its position over time.",
        "FOL": "∀x (Object(x) ∧ ChangesPositionOverTime(x) → InMotion(x))"
    },
    {
        "NL": "Some mammals are either carnivores or herbivores, but not both.",
        "FOL": "∃x (Mammal(x) ∧ (Carnivore(x) ⊕ Herbivore(x)))"
    },
    {
        "NL": "A geyser is a natural hot spring that periodically ejects a column of water and steam into the air, often caused by the heating of underground water by volcanic activity.",
        "FOL": "∀x (Geyser(x) → (NaturalHotSpring(x) ∧ PeriodicallyEjectsWaterAndSteam(x) ∧ OftenCausedByVolcanicActivity(x)))"
    },
    {
        "NL": "A vehicle is either a car, a truck, or a motorcycle.",
        "FOL": "∀x (Vehicle(x) ↔ (Car(x) ⊕ Truck(x) ⊕ Motorcycle(x)))"
    },
    {
        "NL": "A box is red if and only if it contains at least one blue ball.",
        "FOL": "∀x (Box(x) → (Red(x) ↔ ∃y (Blue(y) ∧ Contains(x, y))))"
    },
    {
        "NL": "A runner participates in sprints, marathons, or relays.",
        "FOL": "∀x (Runner(x) → (ParticipatesIn(x, \"sprints\") ∨ ParticipatesIn(x, \"marathons\") ∨ ParticipatesIn(x, \"relays\")))"
    },
    {
        "NL": "A movie can be a drama, a comedy, or a thriller.",
        "FOL": "∀x (Movie(x) → (Drama(x) ∨ Comedy(x) ∨ Thriller(x)))"
    },
    {
        "NL": "Refrigerators preserve food by keeping it cool, and they typically have a separate freezer compartment.",
        "FOL": "∀x (Refrigerator(x) → (PreservesFood(x) ∧ KeepsCool(x) ∧ HasSeparateFreezerCompartment(x)))"
    },
    {
        "NL": "Fruits are edible and contain seeds.",
        "FOL": "∀x (Fruit(x) → (Edible(x) ∧ ContainsSeeds(x)))"
    },
    {
        "NL": "A person who is responsible for the overall appearance and design of printed or digital materials is called a graphic designer.",
        "FOL": "∀x (ResponsibleForOverallAppearanceAndDesignOfMaterials(x) → GraphicDesigner(x))"
    },
    {
        "NL": "A dessert is treated as a pie if it is sweet and made by baking fruits and dough.",
        "FOL": "∀x (Dessert(x) ∧ Sweet(x) ∧ MadeByBakingFruit(x) ∧ MadeByUsingDough(x) → Pie(x))"
    },
    {
        "NL": "A museum displays art, historical artifacts, or science exhibits.",
        "FOL": "∀x∀y (Museum(x) ∧ (Art(y) ∨ HistoricalArtifact(y) ∨ ScienceExhibit(y)) → Displays(x, y))"
    },
    {
        "NL": "A place is considered a museum if it is dedicated to the exhibition of historical, artistic, or scientific objects.",
        "FOL": "∀x (Place(x) ∧ DedicatedToExhibition(x) ∧ (HistoricalObjects(x) ∨ ArtisticObjects(x) ∨ ScientificObjects(x)) → Museum(x))"
    },
    {
        "NL": "Theater actors perform on stage, film actors act in front of cameras, and voice actors work in recording studios.",
        "FOL": "∀x (TheaterActor(x) → PerformOnStage(x)) ∧ ∀y (FilmActor(y) → ActInFrontOfCamera(y)) ∧ ∀z (VoiceActor(z) → WorkInRecordingStudio(z))"
    },
    {
        "NL": "An individual is a bodybuilder if they lift weights and promote fitness and discipline.",
        "FOL": "∀x (Individual(x) ∧ LiftsWeights(x) ∧ PromotesFitness(x) ∧ PromotesDiscipline(x) → Bodybuilder(x))"
    },
    {
        "NL": "Cars are moving, birds are flying, and snakes are slithering.",
        "FOL": "∀x (Car(x) → Moving(x)) ∧ ∀y (Bird(y) → Flying(y)) ∧ ∀z (Snake(z) → Slithering(z))"
    },
    {
        "NL": "Tom is taller than Lisa, but shorter than Mike.",
        "FOL": "∀x (Tom(x) ∧ Lisa(y) ∧ Mike(z) → (Taller(x, y) ∧ Shorter(x, z)))"
    },
    {
        "NL": "When a student passes an exam, they achieve a passing grade or higher.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) ∧ AchievesPassingGradeOrHigher(x, y) → Passes(x, y))"
    },
    {
        "NL": "Students attend classes in a school, and teachers provide instruction in various subjects.",
        "FOL": "∀x∀y∀z (Student(x) ∧ Teacher(y) ∧ School(z) ∧ Subject(w) → (AttendsClassesIn(x, z) ∧ ProvidesInstruction(y, z, w)))"
    },
    {
        "NL": "An airline offers a direct flight between two cities if it has no layovers or connecting flights.",
        "FOL": "∀x ∀y ∀z (Airline(x) ∧ City(y) ∧ City(z) ∧ ¬HasLayovers(x, y, z) ∧ ¬HasConnectingFlights(x, y, z) → OffersDirectFlight(x, y, z))"
    },
    {
        "NL": "Some books are either boring or exciting, but not both.",
        "FOL": "∃x (Book(x) ∧ (Boring(x) ⊕ Exciting(x)))"
    },
    {
        "NL": "If an object is a bicycle and blue, then it attracts at least one green object unless it is a car.",
        "FOL": "∀x ((Bicycle(x) ∧ Blue(x)) → ∃y (Green(y) ∧ Attracts(x, y) ∨ Car(x)))"
    },
    {
        "NL": "A vehicle is an electric vehicle if it is powered by an electric motor and relies on a battery or other energy storage system for fuel.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricMotor(x) ∧ (ReliesOnBattery(x) ∨ ReliesOnOtherEnergyStorageSystem(x)) → ElectricVehicle(x))"
    },
    {
        "NL": "A celestial body is classified as a moon if it orbits a planet and is not a satellite of another celestial body.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsPlanet(x, y) ∧ ¬SatelliteOfAnotherBody(x) → Moon(x))"
    },
    {
        "NL": "A student is considered a scholar if they study diligently.",
        "FOL": "∀x (Student(x) ∧ StudyDiligently(x) → Scholar(x))"
    },
    {
        "NL": "A store sells either shoes or clothes, but not both items.",
        "FOL": "∀x (Store(x) → (SellsShoes(x) ⊕ SellsClothes(x)))"
    },
    {
        "NL": "A mountain range is a group of mountains connected by high ground, forming a continuous elevated area.",
        "FOL": "∀x (MountainRange(x) → (GroupOfMountains(x) ∧ ContinuousElevatedArea(x)))"
    },
    {
        "NL": "A peninsula is surrounded by water on three sides and is not located within a mountain range",
        "FOL": "∀x (Peninsula(x) → (SurroundedByWaterOnThreeSides(x) ∧ ¬LocatedInMountainRange(x)))"
    },
    {
        "NL": "A vehicle that can operate on land, water, and in the air is an amphibious vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ OperatesOnLand(x) ∧ OperatesOnWater(x) ∧ OperatesInAir(x) → AmphibiousVehicle(x))"
    },
    {
        "NL": "An animal can be classified as a mammal, bird, or reptile, but not all three at once.",
        "FOL": "∀x (Animal(x) ∧ Classified(x) → (Mammal(x) ⊕ Bird(x) ⊕ Reptile(x)))"
    },
    {
        "NL": "Lions roar, horses neigh, and cows moo.",
        "FOL": "∀x (Lion(x) → Roars(x)) ∧ (Horse(x) → Neighs(x)) ∧ (Cow(x) → Moos(x))"
    },
    {
        "NL": "Books that are fiction or non-fiction can be found in a public library.",
        "FOL": "∀x ((Fiction(x) ∨ NonFiction(x)) ∧ Book(x) → FoundIn(x, publicLibrary))"
    },
    {
        "NL": "People who exercise regularly and maintain a healthy diet tend to have a lower risk of heart disease.",
        "FOL": "∀x ((ExerciseRegularly(x) ∧ HealthyDiet(x)) → LowerRiskOfHeartDisease(x))"
    },
    {
        "NL": "A vehicle with two wheels powered by pedaling is a bicycle.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) ∧ PoweredByPedaling(x) → Bicycle(x))"
    },
    {
        "NL": "A person succeeds in life if they maintain healthy habits, positive attitudes, and continuous learning.",
        "FOL": "∀x (Person(x) ∧ MaintainHealthyHabits(x) ∧ HoldPositiveAttitudes(x) ∧ PracticeContinuousLearning(x) → SucceedsInLife(x))"
    },
    {
        "NL": "A ball is round and can roll.",
        "FOL": "∀x (Ball(x) → (Round(x) ∧ CanRoll(x)))"
    },
    {
        "NL": "A triangle has three sides, while a square has four sides.",
        "FOL": "∀x (Triangle(x) → HasThreeSides(x)) ∧ ∀y (Square(y) → HasFourSides(y))"
    },
    {
        "NL": "A person is a vegetarian if they do not consume meat or meat products.",
        "FOL": "∀x (¬ConsumesMeatOrMeatProducts(x) → Vegetarian(x))"
    },
    {
        "NL": "No athlete who plays either volleyball or rugby is unhealthy, and not every one of them is a champion.",
        "FOL": "¬∃x (Athlete(x) ∧ (PlaysVolleyball(x) ∨ PlaysRugby(x)) ∧ Unhealthy(x)) ∧ ¬∀y (Athlete(y) → Champion(y))"
    },
    {
        "NL": "A museum exhibits a diverse range of artifacts, such as paintings, sculptures, and historical documents, while also hosting events, workshops, and guided tours for visitors.",
        "FOL": "∀x (Museum(x) ∧ (Paintings(x) ∨ Sculptures(x) ∨ HistoricalDocuments(x)) → HostsEventsWorkshopsAndGuidedTours(x))"
    },
    {
        "NL": "Each doctor who prescribes medication is bound to monitor their patients.",
        "FOL": "∀x ∃y (Doctor(x) ∧ Medication(y) ∧ Prescribe(x, y) → BoundToMonitorPatients(x, y))"
    },
    {
        "NL": "A train travels on tracks, stopping at various stations to pick up and drop off passengers.",
        "FOL": "∀x ∀y ∀z (Train(x) → (TravelsOnTracks(x) ∧ StopsAt(x, y) ∧ Station(y) ∧ PickUpDropOff(x, y, z) ∧ Passenger(z)))"
    },
    {
        "NL": "A switch can be in the on, off, or standby position, but not in any combination of these states.",
        "FOL": "∀x (Switch(x) → (On(x) ⊕ Off(x) ⊕ Standby(x)))"
    },
    {
        "NL": "Not every machine is powered by electricity or solar energy.",
        "FOL": "¬(∀x (Machine(x) → (PoweredByElectricity(x) ∨ PoweredBySolarEnergy(x))))"
    },
    {
        "NL": "There is a teacher who teaches all and only the students who do not teach themselves.",
        "FOL": "∃x (Teacher(x) ∧ ∀y (Student(y) → (Teach(x, y) ↔ ¬Teach(y, y))))"
    },
    {
        "NL": "An object that emits light as a result of being heated to a high temperature, can be observed in the visible spectrum, and is not a reflection is an incandescent source.",
        "FOL": "∀x (Object(x) ∧ EmitsLightDueToHighTemperature(x) ∧ ObservableInVisibleSpectrum(x) ∧ ¬Reflection(x) → IncandescentSource(x))"
    },
    {
        "NL": "An artist creates paintings, sculptures, or drawings, which can be exhibited in galleries or museums and purchased by collectors.",
        "FOL": "∀x ∀y ∀z ∀w (Artist(x) ∧ (Painting(y) ∨ Sculpture(y) ∨ Drawing(y)) ∧ Gallery(z) ∨ Museum(z) ∧ Collector(w) → (Creates(x, y) ∧ ExhibitedIn(y, z) ∧ PurchasedBy(y, w)))"
    },
    {
        "NL": "A store sells clothing if it offers garments, accessories, and footwear for customers to purchase.",
        "FOL": "∀x (Store(x) ∧ SellsGarments(x) ∧ SellsAccessories(x) ∧ SellsFootwear(x) → SellsClothing(x))"
    },
    {
        "NL": "A tree is pine or eucalyptus.",
        "FOL": "∀x (Tree(x) → (Pine(x) ∨ Eucalyptus(x)))"
    },
    {
        "NL": "A company that provides ongoing training and development opportunities is more likely to have a highly skilled and motivated workforce.",
        "FOL": "∀x (ProvidesOngoingTrainingAndDevelopment(x) → (HighlySkilledWorkforce(x) ∧ MotivatedWorkforce(x)))"
    },
    {
        "NL": "A country has a democracy when no politician is sincere.",
        "FOL": "¬∀x (Politician(x) → Sincere(x)) → ∃y (Country(y) ∧ HasDemocracy(y))"
    },
    {
        "NL": "An island is formed when volcanic activity, coral growth, or sediment deposition creates a landmass surrounded by water, which can support unique ecosystems and diverse species.",
        "FOL": "∀x ∀y ∀z (Island(x) ∧ (VolcanicActivity(y) ∨ CoralGrowth(y) ∨ SedimentDeposition(y)) → (CreatesLandmassSurroundedByWater(x, y) ∧ SupportsUniqueEcosystems(x, z) ∧ SupportsDiverseSpecies(x, z)))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur and gives birth to live offspring.",
        "FOL": "∀x (Animal(x) ∧ (HasHair(x) ∨ HasFur(x)) ∧ GivesBirthToLiveOffspring(x) → Mammal(x))"
    },
    {
        "NL": "A renewable energy source is viable when it generates a stable output and has minimal environmental impact.",
        "FOL": "∀x (RenewableEnergySource(x) → (Viable(x) ↔ (StableOutput(x) ∧ MinimalEnvironmentalImpact(x))))"
    },
    {
        "NL": "A fruit is ripe when it is sweet or soft.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ↔ (Sweet(x) ∨ Soft(x))))"
    },
    {
        "NL": "A substance that can extinguish fires and is often used in fire extinguishers is called a fire suppressant.",
        "FOL": "∀x (Substance(x) ∧ CanExtinguishFires(x) ∧ UsedInFireExtinguishers(x) → FireSuppressant(x))"
    },
    {
        "NL": "A building is eco-friendly if it utilizes solar panels, has proper insulation, and incorporates green spaces.",
        "FOL": "∀x (Building(x) → (EcoFriendly(x) ↔ (UtilizesSolarPanels(x) ∧ ProperInsulation(x) ∧ IncorporatesGreenSpaces(x))))"
    },
    {
        "NL": "Every student is either a freshman or a sophomore.",
        "FOL": "∀x (Student(x) → (Freshman(x) ⊕ Sophomore(x)))"
    },
    {
        "NL": "A person is considered an astronomer if they study celestial objects and phenomena in the universe.",
        "FOL": "∀x (Person(x) ∧ StudiesCelestialObjects(x) ∧ StudiesCelestialPhenomena(x) → Astronomer(x))"
    },
    {
        "NL": "A person is considered a lawyer if they advise and represent clients in legal matters, including negotiation, drafting documents, and litigation.",
        "FOL": "∀x (Lawyer(x) ↔ (AdvisesAndRepresentsClientsInLegalMatters(x) ∧ IncludingNegotiationDraftingDocumentsAndLitigation(x)))"
    },
    {
        "NL": "A bridge connects two land masses, such as islands or continents, allowing passage over a body of water or a valley.",
        "FOL": "∀x ∀y ∀z (Bridge(x) ∧ LandMass(y) ∧ LandMass(z) ∧ (BodyOfWater(w) ∨ Valley(w)) ∧ AllowsPassageOver(x, w) → Connects(x, y, z))"
    },
    {
        "NL": "Some birds either sing or dance, but do not do both.",
        "FOL": "∃x (Bird(x) ∧ (Sing(x) ⊕ Dance(x)))"
    },
    {
        "NL": "A speaker amplifies sound when connected to a power source and receiving an audio signal.",
        "FOL": "∀x (Speaker(x) ∧ ConnectedToPowerSource(x) ∧ ReceivesAudioSignal(x) → AmplifiesSound(x))"
    },
    {
        "NL": "A company that has a monopoly on a market has significant control over the market and its prices.",
        "FOL": "∀x (Company(x) ∧ Monopoly(x, market) → ControlMarket(x) ∧ ControlPrices(x))"
    },
    {
        "NL": "The gadget could be a smartphone, a laptop, or a tablet.",
        "FOL": "∀x (Gadget(x) → (Smartphone(x) ∨ Laptop(x) ∨ Tablet(x)))"
    },
    {
        "NL": "Some trucks are diesel.",
        "FOL": "∃x (Truck(x) ∧ Diesel(x))"
    },
    {
        "NL": "There is a thing that is hexagonal and acts as a relaxation aid, and there's an entity that is conical and serves as a workout machine.",
        "FOL": "∃x (Hexagonal(x) ∧ Aid(x)) ∧ ∃x (Conical(x) ∧ Machine(x))"
    },
    {
        "NL": "A person is considered a mechanic if they repair, maintain, and troubleshoot issues with motor vehicles.",
        "FOL": "∀x (Person(x) ∧ RepairMaintainAndTroubleshoot(x) ∧ MotorVehicles(x) → Mechanic(x))"
    },
    {
        "NL": "Neptune is farther from the Sun than both Earth and Mars.",
        "FOL": "FartherFromSun(Neptune, Earth) ∧ FartherFromSun(Neptune, Mars)"
    },
    {
        "NL": "A company is environmentally friendly if it uses sustainable materials, employs energy-efficient practices, and reduces waste, but it is not necessarily certified by an environmental organization.",
        "FOL": "∀x (Company(x) → ((EnvironmentallyFriendly(x) ↔ (SustainableMaterials(x) ∧ EnergyEfficientPractices(x) ∧ ReducesWaste(x))) ∧ ¬NecessarilyCertified(x)))"
    },
    {
        "NL": "A painting can be an abstract, depict intricate patterns, and achieve high auction values, or it can be a portrait, exhibit simplistic charm, and gain artistic recognition.",
        "FOL": "∀x (Painting(x) → ((Abstract(x) ∧ DepictsIntricatePatterns(x) ∧ HighAuctionValue(x)) ⊕ (Portrait(x) ∧ ExhibitsSimplisticCharm(x) ∧ GainsArtisticRecognition(x))))"
    },
    {
        "NL": "A chef combines ingredients and uses cooking techniques to create dishes.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Ingredient(y) ∧ CookingTechnique(z) → CreatesDish(x, y, z))"
    },
    {
        "NL": "A chemical substance that reacts with acids, dissolves in water, and tastes bitter is a base.",
        "FOL": "∀x (ChemicalSubstance(x) ∧ ReactsWithAcids(x) ∧ DissolvesInWater(x) ∧ TastesBitter(x) → Base(x))"
    },
    {
        "NL": "An animal with fur that can fly and lay eggs is a bat.",
        "FOL": "∀x (Animal(x) ∧ Fur(x) ∧ CanFly(x) ∧ LayEggs(x) → Bat(x))"
    },
    {
        "NL": "No doctor has prescribed all the drugs in the pharmacy.",
        "FOL": "¬∃x (Doctor(x) ∧ ∀y (Drug(y) ∧ InPharmacy(y) → Prescribed(x, y)))"
    },
    {
        "NL": "A pencil writes on paper, while a chalk writes on the board.",
        "FOL": "∀x (Pencil(x) → WritesOnPaper(x)) ∧ ∀y (Chalk(y) → WritesOnBoard(y))"
    },
    {
        "NL": "It's not true that each bird can sing.",
        "FOL": "¬∀x (Bird(x) → CanSing(x))"
    },
    {
        "NL": "A university is prestigious if it is celebrated for its research or academic record.",
        "FOL": "∀x (University(x) ∧ (CelebratedForResearch(x) ∨ CelebratedForAcademicRecord(x)) → Prestigious(x))"
    },
    {
        "NL": "Cats catch mice as prey.",
        "FOL": "∀x∀y (Cat(x) ∧ Mouse(y) → Catches(x, y))"
    },
    {
        "NL": "A doctor diagnoses patients and prescribes medication in a clinic.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Clinic(z) → (Diagnoses(x, y) ∧ PrescribesIn(x, y, z)))"
    },
    {
        "NL": "A book becomes a bestseller when its sales are high and it receives either critical acclaim or substantial media coverage.",
        "FOL": "∀x (Book(x) ∧ HighSales(x) ∧ (CriticalAcclaim(x) ∨ SubstantialMediaCoverage(x)) → Bestseller(x))"
    },
    {
        "NL": "All stars twinkle at night.",
        "FOL": "∀x (Star(x) → TwinkleAtNight(x))"
    },
    {
        "NL": "Harry enjoys an Orwell book if and only if it is thought-provoking.",
        "FOL": "∀x (Book(x) ∧ WrittenBy(x, orwell) → (ThoughtProvoking(x) ↔ Enjoys(harry, x)))"
    },
    {
        "NL": "A person who is a vegetarian does not consume meat.",
        "FOL": "∀x (Vegetarian(x) → ¬ConsumeMeat(x))"
    },
    {
        "NL": "A garden thrives if it has healthy plants, sufficient sunlight, and adequate water, but not if it has pests.",
        "FOL": "∀x (Garden(x) → ((HealthyPlants(x) ∧ SufficientSunlight(x) ∧ AdequateWater(x) ∧ ¬HasPests(x)) ↔ Thrives(x)))"
    },
    {
        "NL": "Either the door is locked or the window is open, but not both.",
        "FOL": "(Locked(Door) ∨ Open(Window)) ∧ ¬(Locked(Door) ∧ Open(Window))"
    },
    {
        "NL": "Peppers can be sweet, spicy, or mild, while tomatoes are usually sweet and cucumbers are crunchy.",
        "FOL": "∀x ∀y ∀z (Pepper(x) ∧ Tomato(y) ∧ Cucumber(z) → ((Sweet(x) ∨ Spicy(x) ∨ Mild(x)) ∧ Sweet(y) ∧ Crunchy(z)))"
    },
    {
        "NL": "A bird species that inhabits tropical and subtropical regions, feeds on nectar from flowers, and has a long, slender bill is a type of bird specialized for nectar feeding.",
        "FOL": "∀x ∀y ∀z (BirdSpecies(x) ∧ TropicalSubtropicalRegion(y) ∧ NectarFromFlowers(z) ∧ Inhabits(x, y) ∧ FeedsOn(x, z) ∧ LongSlenderBill(x) → NectarFeedingBird(x))"
    },
    {
        "NL": "A planet is considered habitable if it has a stable orbit, a temperature range capable of supporting life, and the presence of liquid water.",
        "FOL": "∀x (Planet(x) ∧ StableOrbit(x) ∧ SupportsLifeTemperature(x) ∧ PresenceOfLiquidWater(x) → Habitable(x))"
    },
    {
        "NL": "A valid passport allows international travel, while an expired passport does not permit it.",
        "FOL": "∀x (Passport(x) → (Valid(x) → AllowsInternationalTravel(x)) ∧ (Expired(x) → ¬PermitsInternationalTravel(x)))"
    },
    {
        "NL": "A bakery is popular if it sells a wide variety of pastries, such as croissants, muffins, and scones.",
        "FOL": "∀x (Popular(x) ↔ (Bakery(x) ∧ ∃y ∃z ∃w (Pastry(y) ∧ Pastry(z) ∧ Pastry(w) ∧ Croissant(y) ∧ Muffin(z) ∧ Scone(w) ∧ Sells(x, y, z, w))))"
    },
    {
        "NL": "Athletes drink water from bottles.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Bottle(y) → DrinkWaterFrom(x, y))"
    },
    {
        "NL": "A singer is performing in a sold-out concert.",
        "FOL": "∃x ∃y (Singer(x) ∧ Performing(x) ∧ SoldOutConcert(y) ∧ In(x, y))"
    },
    {
        "NL": "A computer program is considered malware if it causes damage to a computer system or steals data without user consent.",
        "FOL": "∀x (ComputerProgram(x) ∧ (CausesDamage(x) ∨ StealsDataWithoutConsent(x)) → Malware(x))"
    },
    {
        "NL": "All birds can fly, except for penguins and ostriches.",
        "FOL": "∀x (Bird(x) ∧ ¬Penguin(x) ∧ ¬Ostrich(x) → CanFly(x))"
    },
    {
        "NL": "A musical instrument that uses strings and can be played with a bow is a member of the string family.",
        "FOL": "∀x (MusicalInstrument(x) ∧ UsesStrings(x) ∧ CanBePlayedWithBow(x) → StringFamily(x))"
    },
    {
        "NL": "A calculator performs mathematical operations and displays the result on a screen.",
        "FOL": "∀x (Calculator(x) ∧ PerformsMathematicalOperations(x) → DisplaysResultOnScreen(x))"
    },
    {
        "NL": "A substance is either an acid or a base, but not both.",
        "FOL": "∀x∀y∀z (Substance(x) ∧ Acid(y) ∧ Base(z) → (Is(x, y) ⊕ Is(x, z)))"
    },
    {
        "NL": "There is a fruit that every fruit is compared to if all plants are not green.",
        "FOL": "¬∀x (Plant(x) → Green(x)) → ∃y (Fruit(y) ∧ ∀z (Fruit(z) → ComparedTo(z, y)))"
    },
    {
        "NL": "A building that is designed for a specific function, incorporates unique architectural features, and is located in a particular urban area is typically a museum or a performing arts center.",
        "FOL": "∀x∀y∀z (Building(x) ∧ DesignedForSpecificFunction(x, y) ∧ IncorporatesUniqueArchitecturalFeatures(x) ∧ LocatedInUrbanArea(x, z) → (Museum(x) ∨ PerformingArtsCenter(x)))"
    },
    {
        "NL": "There are no humans who hate Alice.",
        "FOL": "¬∃x (Human(x) ∧ Hate(x, alice))"
    },
    {
        "NL": "An architect designs a building considering the location and the client's requirements.",
        "FOL": "∀x ∀y (Architect(x) ∧ Building(y) → Designs(x, y, location, clientRequirements))"
    },
    {
        "NL": "A garment worn on the lower body, has individual leg coverings, and is typically made of fabric is pants or leggings.",
        "FOL": "∀x (Garment(x) ∧ WornOnLowerBody(x) ∧ IndividualLegCoverings(x) ∧ TypicallyMadeOfFabric(x) → (Pants(x) ∨ Leggings(x)))"
    },
    {
        "NL": "A ball bounces on a hard surface but not on a soft one.",
        "FOL": "∀x∀y (Ball(x) ∧ HardSurface(y) → BouncesOn(x, y)) ∧ (Ball(x) ∧ SoftSurface(y) → ¬BouncesOn(x, y))"
    },
    {
        "NL": "Each shape is either a square or a circle, but not both.",
        "FOL": "∀x (Shape(x) → (Square(x) ⊕ Circle(x)))"
    },
    {
        "NL": "A child is either awake or asleep, never both.",
        "FOL": "∀x (Child(x) → (Awake(x) ⊕ Asleep(x)))"
    },
    {
        "NL": "Cats enjoy sleeping on warm surfaces, while dogs prefer playing in open spaces.",
        "FOL": "∀x (Cat(x) → (EnjoysSleeping(x) ∧ WarmSurface(y) ∧ On(x, y))) ∧ ∀z (Dog(z) → (PrefersPlaying(z) ∧ OpenSpace(w) ∧ In(z, w)))"
    },
    {
        "NL": "A mechanic fixes cars, suggests maintenance, and observes their functioning.",
        "FOL": "∀x ∃y (Mechanic(x) → Car(y) ∧ Fix(x, y) ∧ SuggestMaintenance(x) ∧ ObserveFunctioning(x, y))"
    },
    {
        "NL": "A star that is brighter than another star has greater luminosity.",
        "FOL": "∀x∀y (Star(x) ∧ Star(y) ∧ BrighterThan(x, y) → GreaterLuminosity(x, y))"
    },
    {
        "NL": "A solar system consists of a star, planets that orbit the star, and celestial bodies that orbit the planets.",
        "FOL": "∀x ∀y ∀z (SolarSystem(x) ∧ Star(y) ∧ CelestialBody(z) → (ConsistsOf(x, y) ∧ (OrbitsPlanet(z) ∨ OrbitsStar(z, y))))"
    },
    {
        "NL": "A student passes the exam if they score above the passing grade or have an approved exemption.",
        "FOL": "∀x (Student(x) ∧ (ScoreAbovePassingGrade(x) ∨ ApprovedExemption(x)) → PassesExam(x))"
    },
    {
        "NL": "A healthy lifestyle involves regular exercise, balanced nutrition, and sufficient sleep.",
        "FOL": "∀x (HealthyLifestyle(x) ↔ (RegularExercise(x) ∧ BalancedNutrition(x) ∧ SufficientSleep(x)))"
    },
    {
        "NL": "A refrigerator preserves food by cooling, while an oven cooks food and does not cool it.",
        "FOL": "∀x ∀y (Refrigerator(x) ∧ Oven(y) → ((PreservesFood(x) ∧ Cools(x)) ∧ (CooksFood(y) ∧ ¬Cools(y))))"
    },
    {
        "NL": "A battery stores electrical energy, and a generator produces it.",
        "FOL": "∀x∀y (Battery(x) ∧ Generator(y) → (Stores(x, ElectricalEnergy) ∧ Produces(y, ElectricalEnergy)))"
    },
    {
        "NL": "A refrigerator preserves food by cooling, and a freezer preserves food by freezing.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ Freezer(y) → (PreservesByCooling(x) ∧ PreservesByFreezing(y)))"
    },
    {
        "NL": "A eagle is perching on a cliff, and a deer is grazing in the forest.",
        "FOL": "∃x ∃y (Eagle(x) ∧ Cliff(y) ∧ PerchingOn(x, y)) ∧ ∃z (Deer(z) ∧ Grazing(z) ∧ InTheForest(z))"
    },
    {
        "NL": "Some fruits are edible while others are inedible.",
        "FOL": "∃x (Fruit(x) ∧ (Edible(x) ∨ Inedible(x)))"
    },
    {
        "NL": "A non-fossil fuel such as nuclear or tidal energy can create power without causing ecological damage, and it benefits in the reduction of smog production.",
        "FOL": "∀x (NonFossilFuel(x) ∧ (NuclearEnergy(x) ∨ TidalEnergy(x)) → (CreatePower(x) ∧ ¬CauseEcologicalDamage(x)) ∧ BenefitReduceSmogProduction(x))"
    },
    {
        "NL": "An electric car produces no tailpipe emissions when in use.",
        "FOL": "∀x (ElectricCar(x) → NoTailpipeEmissions(x))"
    },
    {
        "NL": "A person is considered a coach if they train and instruct athletes or teams in a specific sport, often developing strategies and techniques for competition.",
        "FOL": "∀x (Person(x) ∧ TrainsAndInstructsAthletesOrTeams(x) ∧ InSpecificSport(x) ∧ OftenDevelopsStrategiesAndTechniques(x) → Coach(x))"
    },
    {
        "NL": "A medication is effective if it treats a specific illness and has no severe side effects, but not if it only treats symptoms or has severe side effects.",
        "FOL": "∀x (Medication(x) ∧ Effective(x) ↔ (TreatsIllness(x, y) ∧ Illness(y) ∧ ¬SevereSideEffects(x) ∧ ¬TreatsSymptomsOnly(x)))"
    },
    {
        "NL": "A museum displays artifacts from different countries and historical periods.",
        "FOL": "∀x∀y∀z (Museum(x) ∧ Artifact(y) ∧ Country(z) ∧ HistoricalPeriod(z) ∧ FromCountry(y, z) → Displays(x, y))"
    },
    {
        "NL": "All squares have four sides and four equal angles.",
        "FOL": "∀x (Square(x) → (HasFourSides(x) ∧ HasEqualAngles(x)))"
    },
    {
        "NL": "A restaurant attracts customers if it serves delicious food or has a unique ambiance, and it maintains good hygiene standards.",
        "FOL": "∀x (Restaurant(x) → (AttractsCustomers(x) ↔ ((DeliciousFood(x) ∨ UniqueAmbiance(x)) ∧ GoodHygiene(x))))"
    },
    {
        "NL": "Not every software is open-source, and some software applications are used for data analysis or require a subscription and offer regular updates.",
        "FOL": "¬∀x (Software(x) → OpenSource(x)) ∧ ∃y (Software(y) ∧ (UsedForDataAnalysis(y) ∨ (RequiresSubscription(y) ∧ RegularUpdates(y))))"
    },
    {
        "NL": "A vehicle with low emissions and high fuel efficiency contributes to a reduced carbon footprint.",
        "FOL": "∀x (Vehicle(x) ∧ LowEmissions(x) ∧ HighFuelEfficiency(x) → ReducedCarbonFootprint(x))"
    },
    {
        "NL": "A fabric that stretches is flexible.",
        "FOL": "∀x (Fabric(x) ∧ Stretches(x) → Flexible(x))"
    },
    {
        "NL": "Rivers flow into lakes, seas, or oceans.",
        "FOL": "∀x (River(x) → (FlowsIntoLake(x) ∨ FlowsIntoSea(x) ∨ FlowsIntoOcean(x)))"
    },
    {
        "NL": "Every writer has written at least one book.",
        "FOL": "∀x (Writer(x) → ∃y (Book(y) ∧ Written(x, y)))"
    },
    {
        "NL": "There is no heaviest animal, and no lightest animal.",
        "FOL": "∀x (Animal(x) → (∃y (Animal(y) ∧ Heavier(y, x)) ∧ ∃z (Animal(z) ∧ Lighter(z, x))))"
    },
    {
        "NL": "A book is a biography if it recounts the life history of a particular person, written by a relative or acquaintance.",
        "FOL": "∀x ∃y ∃z (Book(x) ∧ Person(y) ∧ (Relative(z) ∨ Acquaintance(z)) ∧ RecountsLifeHistory(x, y) ∧ WrittenBy(x, z) → Biography(x))"
    },
    {
        "NL": "A dish that is spicy can burn tongues.",
        "FOL": "∀x ∀y (Dish(x) ∧ Spicy(x) ∧ Person(y) → CanBurnTongues(x, y))"
    },
    {
        "NL": "A substance is flammable if it ignites easily and releases heat and light when burned.",
        "FOL": "∀x (Substance(x) → ((IgnitesEasily(x) ∧ ReleasesHeat(x) ∧ ReleasesLight(x)) ↔ Flammable(x)))"
    },
    {
        "NL": "A few engineers who design bridges are also proficient in architectural design.",
        "FOL": "∃x (Engineer(x) ∧ DesignBridges(x) ∧ ProficientInArchitecturalDesign(x))"
    },
    {
        "NL": "Mia and Charlotte are architects.",
        "FOL": "Architect(mia) ∧ Architect(charlotte)"
    },
    {
        "NL": "Writers create stories, poets compose poems, and painters produce paintings.",
        "FOL": "∀x∀y∀z (Writer(x) → CreatesStories(x)) ∧ (Poet(y) → ComposesPoems(y)) ∧ (Painter(z) → ProducesPaintings(z))"
    },
    {
        "NL": "Every city is bustling.",
        "FOL": "∀w (City(w) → Bustling(w))"
    },
    {
        "NL": "A university offers a high-quality education if it has experienced professors, state-of-the-art facilities, and a diverse curriculum.",
        "FOL": "∀x∀y∀z (University(x) ∧ ExperiencedProfessors(y) ∧ StateOfTheArtFacilities(z) ∧ DiverseCurriculum(x) → HighQualityEducation(x, y, z))"
    },
    {
        "NL": "A room designed for preparing and cooking food typically contains a stove, a sink, and a refrigerator.",
        "FOL": "∀x ∀y ∀z ∀w (Room(x) ∧ DesignedForPreparingAndCookingFood(x) ∧ ContainsStove(x, y) ∧ ContainsSink(x, z) ∧ ContainsRefrigerator(x, w) → Kitchen(x))"
    },
    {
        "NL": "A cake is chocolate if it has cocoa as a main ingredient and is brown in color.",
        "FOL": "∀x (Cake(x) → (Chocolate(x) ↔ (CocoaMainIngredient(x) ∧ BrownColor(x))))"
    },
    {
        "NL": "A plant requires sunlight, carbon dioxide, and water to carry out photosynthesis.",
        "FOL": "∀x (Plant(x) → (RequiresSunlight(x) ∧ RequiresCarbonDioxide(x) ∧ RequiresWater(x) → CarriesOutPhotosynthesis(x)))"
    },
    {
        "NL": "Unless an object is both heavy and round, it is not red.",
        "FOL": "∀x (¬(Heavy(x) ∧ Round(x)) → ¬Red(x))"
    },
    {
        "NL": "Freshwater bodies, such as lakes and rivers, contain low salt concentrations, while saltwater bodies, such as oceans and seas, contain high salt concentrations.",
        "FOL": "∀x (FreshwaterBody(x) ∧ (Lake(x) ∨ River(x)) → LowSaltConcentration(x)) ∧ ∀y (SaltwaterBody(y) ∧ (Ocean(y) ∨ Sea(y)) → HighSaltConcentration(y))"
    },
    {
        "NL": "A girl is reading a book in the library, and a boy is playing a game in the arcade.",
        "FOL": "∃x ∃y (Girl(x) ∧ Library(y) ∧ ReadingIn(x, y)) ∧ ∃z (Boy(z) ∧ Playing(z) ∧InTheArcade(z))"
    },
    {
        "NL": "An appliance is portable if it operates on batteries or has a small size.",
        "FOL": "∀x (Appliance(x) ∧ (Batteries(x) ∨ SmallSize(x)) → Portable(x))"
    },
    {
        "NL": "A planet with liquid water and oxygen supports life.",
        "FOL": "∀x (Planet(x) ∧ LiquidWater(x) ∧ Oxygen(x) → SupportsLife(x))"
    },
    {
        "NL": "A musical instrument can be classified as either a string, wind, brass, or percussion instrument, but not more than one of these categories.",
        "FOL": "∀x (MusicalInstrument(x) → ((String(x) ⊕ Wind(x)) ⊕ (Brass(x) ⊕ Percussion(x))))"
    },
    {
        "NL": "A festival showcases diverse music genres, including rock bands with electric guitars, jazz ensembles featuring saxophones or trumpets, and classical orchestras with violins or cellos.",
        "FOL": "∀x ∀y (Festival(x) ∧ (RockBand(x, y) ∧ ElectricGuitar(y)) ∨ (JazzEnsemble(x, y) ∧ (Saxophone(y) ∨ Trumpet(y))) ∨ (ClassicalOrchestra(x, y) ∧ (Violin(y) ∨ Cello(y))))"
    },
    {
        "NL": "Fruit is usually healthy, unless it is covered in sugar.",
        "FOL": "∀x (Fruit(x) ∧ ¬CoveredInSugar(x) → Healthy(x))"
    },
    {
        "NL": "An object sinks in water when its density is greater than that of water.",
        "FOL": "∀x (Object(x) ∧ DensityGreaterThanWater(x) → SinksInWater(x))"
    },
    {
        "NL": "John is a teacher, musician, and artist.",
        "FOL": "Teacher(john) ∧ Musician(john) ∧ Artist(john)"
    },
    {
        "NL": "A planet has an atmosphere if it is not a gas giant.",
        "FOL": "∀x (Planet(x) ∧ ¬GasGiant(x) → HasAtmosphere(x))"
    },
    {
        "NL": "Linda values a Shakespeare play if and only if it is dramatic.",
        "FOL": "∀x (Play(x) ∧ WrittenBy(x, shakespeare) → (Dramatic(x) ↔ Values(linda, x)))"
    },
    {
        "NL": "A monkey is playing with a ball in the park",
        "FOL": "∃x ∃y (Monkey(x) ∧ Ball(y) ∧ PlayingWith(x, y) ∧ InThePark(x))"
    },
    {
        "NL": "A car requires fuel and has wheels.",
        "FOL": "∀x (Car(x) → (RequiresFuel(x) ∧ HasWheels(x)))"
    },
    {
        "NL": "A television network broadcasts programs in multiple genres, such as drama, reality, and news, and airs shows at different times, like morning, afternoon, and evening.",
        "FOL": "∀x∀y∀z (TelevisionNetwork(x) ∧ (DramaProgram(y) ∨ RealityProgram(y) ∨ NewsProgram(y)) ∧ (MorningTime(z) ∨ AfternoonTime(z) ∨ EveningTime(z)) → BroadcastsProgramsInGenresAndTimes(x, y, z))"
    },
    {
        "NL": "Every artist who is creative is respected by all collectors.",
        "FOL": "∀x (Artist(x) ∧ Creative(x) → ∀y (Collector(y) → Respects(y, x)))"
    },
    {
        "NL": "An electronic device becomes obsolete when newer technology outperforms it.",
        "FOL": "∀x ∀y (ElectronicDevice(x) ∧ NewerTechnology(y) ∧ Outperforms(y, x) → Obsolete(x))"
    },
    {
        "NL": "A mirror reflects light and creates an image.",
        "FOL": "∃x (Mirror(x) ∧ ReflectsLight(x) ∧ CreatesImage(x))"
    },
    {
        "NL": "A cafe serves coffee, tea, and pastries.",
        "FOL": "∀x (Cafe(x) → (ServesCoffee(x) ∧ ServesTea(x) ∧ ServesPastries(x)))"
    },
    {
        "NL": "Each green tree houses at least one creature that houses only purple creatures.",
        "FOL": "∀x (Green(x) → ∃y (Houses(x, y) ∧ ∀z (Houses(y, z) → Purple(z))))"
    },
    {
        "NL": "Every tulip is a flower, but not every flower is a tulip.",
        "FOL": "∀x (Tulip(x) → Flower(x)) ∧ ¬∀x (Flower(x) → Tulip(x))"
    },
    {
        "NL": "Animals use various types of camouflage, such as mimicry, countershading, or disruptive coloration, to blend in with their environment and avoid predators.",
        "FOL": "∀x∀y∀z (Animal(x) → (UsesCamouflage(x) ∧ (Mimicry(x, y) ∨ Countershading(x, y) ∨ DisruptiveColoration(x, y)) ∧ BlendsInWithEnvironment(x, z) ∧ AvoidsPredators(x)))"
    },
    {
        "NL": "A living organism that can produce its own food through photosynthesis is a plant.",
        "FOL": "∀x (LivingOrganism(x) ∧ Photosynthesis(x) → Plant(x))"
    },
    {
        "NL": "If one animal is heavier than another, there is an animal between them in terms of weight.",
        "FOL": "∀x ∀y ∃z (Animal(x) ∧ Animal(y) ∧ Animal(z) ∧ HeavierThan(x, y) → BetweenInWeight(z, x, y))"
    },
    {
        "NL": "A novel is a work of fiction, usually consisting of prose or poetry.",
        "FOL": "∀x (Novel(x) → (Fiction(x) ∧ (Prose(x) ⊕ Poetry(x))))"
    },
    {
        "NL": "An eco-friendly product is made of sustainable materials, has a low carbon footprint, and can be easily recycled.",
        "FOL": "∀x (EcoFriendlyProduct(x) ↔ (SustainableMaterials(x) ∧ LowCarbonFootprint(x) ∧ EasilyRecycled(x)))"
    },
    {
        "NL": "A fruit that has a hard outer shell is called a nut.",
        "FOL": "∀x (Fruit(x) ∧ HardOuterShell(x) → Nut(x))"
    },
    {
        "NL": "An ecosystem can be disrupted by factors such as pollution, invasive species, or natural disasters, leading to a decline in biodiversity.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) ∧ (Pollution(y) ∨ InvasiveSpecies(y) ∨ NaturalDisasters(y)) → (Disrupts(x, y) ∧ DeclineInBiodiversity(z)))"
    },
    {
        "NL": "Mountains are characterized by high elevations and steep slopes, while valleys are characterized by low elevations and gentle slopes.",
        "FOL": "∀x ∀y (Mountain(x) → (HighElevation(x) ∧ SteepSlope(x))) ∧ (Valley(y) → (LowElevation(y) ∧ GentleSlope(y)))"
    },
    {
        "NL": "A building is a skyscraper if it is taller than 100 meters and is primarily used for commercial or residential purposes.",
        "FOL": "∀x (Building(x) ∧ TallerThan100Meters(x) ∧ (CommercialPurpose(x) ∨ ResidentialPurpose(x)) → Skyscraper(x))"
    },
    {
        "NL": "A piece of literature is a personal account if it carries the life progression of the author himself.",
        "FOL": "∀x ∃y (Literature(x) ∧ Author(y) ∧ CarriesLifeProgression(x, y) → PersonalAccount(x))"
    },
    {
        "NL": "A television show is engaging if it has a captivating plot, well-developed characters, and excellent production values, unless it has excessive commercial breaks.",
        "FOL": "∀x (TelevisionShow(x) → (((CaptivatingPlot(x) ∧ WellDevelopedCharacters(x) ∧ ExcellentProductionValues(x)) ∧ ¬ExcessiveCommercialBreaks(x)) → Engaging(x)))"
    },
    {
        "NL": "A painting is considered valuable if it was created by a renowned artist and is well-preserved.",
        "FOL": "∀x (Painting(x) ∧ CreatedByRenownedArtist(x) ∧ WellPreserved(x) → Valuable(x))"
    },
    {
        "NL": "A mobile phone attaches to the network and enables users to operate applications and features.",
        "FOL": "∀x (MobilePhone(x) → (AttachesToNetwork(x) ∧ EnablesOperationOfApplications(x) ∧ EnablesUseOfFeatures(x)))"
    },
    {
        "NL": "A product is a luxury item if it has a high price and superior quality, but not if it is a necessity.",
        "FOL": "∀x (LuxuryItem(x) ↔ (Product(x) ∧ HighPrice(x) ∧ SuperiorQuality(x) ∧ ¬Necessity(x)))"
    },
    {
        "NL": "Everyone respects a classic movie if and only if it was released before 2000.",
        "FOL": "∀x (Movie(x) ∧ IsClassic(x) → (ReleasedBeforetwothousand(x) ↔ Respect(everyone, x)))"
    },
    {
        "NL": "If a planet has liquid water, it could potentially support life.",
        "FOL": "∀x (Planet(x) ∧ HasLiquidWater(x) → PotentialToSupportLife(x))"
    },
    {
        "NL": "Painters create paintings using colors.",
        "FOL": "∀x ∀y (Painter(x) ∧ Painting(y) → UsesColors(x, y))"
    },
    {
        "NL": "A planet is habitable if it's located within the habitable zone of its star and has both liquid water and an atmosphere, but not if it's tidally locked.",
        "FOL": "∀x (Planet(x) → (Habitable(x) ↔ (LocatedInHabitableZone(x) ∧ LiquidWater(x) ∧ Atmosphere(x) ∧ ¬TidallyLocked(x))))"
    },
    {
        "NL": "A photo album contains photographs that capture memories and can be shared with friends and family.",
        "FOL": "∀x ∀y (PhotoAlbum(x) ∧ Photograph(y) → (Contains(x, y) ∧ CapturesMemories(y) ∧ CanBeSharedWithFriendsAndFamily(x, y)))"
    },
    {
        "NL": "An object that emits a fragrant aroma, consists of a wick encased in wax, and requires ignition to produce light is a scented candle.",
        "FOL": "∀x (Object(x) ∧ EmitsFragrantAroma(x) ∧ ConsistsOfWickEncasedInWax(x) ∧ RequiresIgnitionToProduceLight(x) → ScentedCandle(x))"
    },
    {
        "NL": "None of the tourists in the museum are taking pictures.",
        "FOL": "¬∃x (Tourist(x) ∧ InMuseum(x) ∧ TakingPictures(x))"
    },
    {
        "NL": "It is not the case that there exists a cube that points to all small squares.",
        "FOL": "¬∃x (Cube(x) ∧ ∀y (Small(y) ∧ Square(y) → PointsTo(x, y)))"
    },
    {
        "NL": "An electronic device can be either portable or stationary, but not both.",
        "FOL": "∀x (ElectronicDevice(x) → (Portable(x) ⊕ Stationary(x)))"
    },
    {
        "NL": "Musicians who play wind instruments need to control their breath to produce sound.",
        "FOL": "∀x (Musician(x) ∧ PlaysWindInstrument(x) → NeedsBreathControl(x))"
    },
    {
        "NL": "There doesn't exist a car that can outrun all motorcycles.",
        "FOL": "¬∃x (Car(x) ∧ ∀y (Motorcycle(y) → Outruns(x, y)))"
    },
    {
        "NL": "A mouse is hiding in a hole, and a badger is searching.",
        "FOL": "∃x ∃y (Mouse(x) ∧ Hole(y) ∧ HidingIn(x, y)) ∧ ∃z (Badger(z) ∧ Searching(z))"
    },
    {
        "NL": "An event can be a sports competition, a concert, or a theater performance.",
        "FOL": "∀x (Event(x) → (SportsCompetition(x) ∨ Concert(x) ∨ TheaterPerformance(x)))"
    },
    {
        "NL": "Every orange pen is linked to at minimum one object connected only with blue papers.",
        "FOL": "∀x (Orange(x) ∧ Pen(x) → ∃y (LinkedTo(x, y) ∧ ∀z (LinkedTo(y, z) → Blue(z) ∧ Paper(z))))"
    },
    {
        "NL": "If an element is a helium or an argon, then it is either gaseous or solid, but not both.",
        "FOL": "∀x ((Helium(x) ∨ Argon(x)) → (Gaseous(x) ⊕ Solid(x)))"
    },
    {
        "NL": "A country is landlocked if it is surrounded by land and has no access to open sea or ocean.",
        "FOL": "∀x (Country(x) ∧ SurroundedByLand(x) ∧ ¬AccessToOpenSeaOrOcean(x) → Landlocked(x))"
    },
    {
        "NL": "A country with a trade surplus has a higher value of exports than imports, leading to an inflow of foreign currency.",
        "FOL": "∀x (Country(x) ∧ TradeSurplus(x) ∧ HigherValueOfExportsThanImports(x) → InflowOfForeignCurrency(x))"
    },
    {
        "NL": "An airline that provides affordable fares and prioritizes punctuality encourages more people to travel and promotes tourism.",
        "FOL": "∀x∀y (Airline(x) ∧ ProvidesAffordableFares(x) ∧ PrioritizesPunctuality(x) → (EncouragesMorePeopleToTravel(y) ∧ PromotesTourism(y)))"
    },
    {
        "NL": "Olivia knows Henry and George.",
        "FOL": "Know(olivia, henry) ∧ Know(olivia, george)"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects or other small animals to obtain nutrients, primarily nitrogen, which is often scarce in their natural habitats.",
        "FOL": "∀x (CarnivorousPlant(x) → (CapturesInsectsOrSmallAnimals(x) ∧ ConsumesInsectsOrSmallAnimals(x) ∧ ObtainsNutrients(x) ∧ PrimarilyNitrogen(x) ∧ ScarceInNaturalHabitats(x)))"
    },
    {
        "NL": "All fruits are healthy foods, but not all healthy foods are fruits.",
        "FOL": "∀x (Fruit(x) → HealthyFood(x)) ∧ ∃y (HealthyFood(y) ∧ ¬Fruit(y))"
    },
    {
        "NL": "There is a convention where every artist exhibits if certain circles do not contain three angles.",
        "FOL": "¬∀x (Circle(x) → ThreeAngles(x)) → ∃y (Convention(y) ∧ ∀z (Artist(z) → ExhibitsAt(z, y)))"
    },
    {
        "NL": "All dogs have fur.",
        "FOL": "∀x (Dog(x) → HasFur(x))"
    },
    {
        "NL": "A bicycle is roadworthy if it has functioning brakes, inflated tires, and working lights.",
        "FOL": "∀x (Bicycle(x) ∧ FunctioningBrakes(x) ∧ InflatedTires(x) ∧ WorkingLights(x) → Roadworthy(x))"
    },
    {
        "NL": "Each architect who has built more than four buildings and either drafts blueprints or works late hours, but not both, needs to have either earned an award or be an office head.",
        "FOL": "∀x (Architect(x) ∧ BuiltMoreThanFourBuildings(x) ∧ (DraftsBlueprints(x) ⊕ LateHours(x)) → (EarnedAward(x) ∨ OfficeHead(x)))"
    },
    {
        "NL": "A meal is satisfying if it is nutritious and appealing to the taste buds.",
        "FOL": "∀x (Meal(x) → (Satisfying(x) ↔ (Nutritious(x) ∧ AppealingTaste(x))))"
    },
    {
        "NL": "If all humans are mammals then there are some humans who trust Peter.",
        "FOL": "∀x (Human(x) → Mammal(x)) → ∃x (Human(x) ∧ Trust(x, peter))"
    },
    {
        "NL": "Nothing is a colour but also a shape.",
        "FOL": "¬∃x (Thing(x) ∧ Colour(x) ∧ Shape(x))"
    },
    {
        "NL": "A plant thrives in sunlight if it requires high light intensity and has a high rate of photosynthesis.",
        "FOL": "∀x ∀y (Plant(x) ∧ RequiresHighLightIntensity(x, y) ∧ HighRateOfPhotosynthesis(x) → ThrivesInSunlight(x))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote and the government is accountable to them.",
        "FOL": "∀x (Democracy(x) → (RightToVote(citizens, x) ∧ GovernmentAccountableTo(citizens, x)))"
    },
    {
        "NL": "A journalist writes articles, interviews people, and investigates stories.",
        "FOL": "∀x∀y (Journalist(x) ∧ Story(y) → (WritesArticles(x) ∧ InterviewsPeople(x) ∧ Investigates(x, y)))"
    },
    {
        "NL": "A secure password is long, contains a mix of characters, and is not easily guessable.",
        "FOL": "∀x (Password(x) → (Long(x) ∧ MixOfCharacters(x) ∧ NotEasilyGuessable(x) → Secure(x)))"
    },
    {
        "NL": "A vehicle can be a car or a bicycle but not both.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Bicycle(x)))"
    },
    {
        "NL": "A bird that cannot fly but swims proficiently is either a penguin or a flightless cormorant.",
        "FOL": "∀x (Bird(x) ∧ ¬CanFly(x) ∧ SwimsProficiently(x) → (Penguin(x) ∨ FlightlessCormorant(x)))"
    },
    {
        "NL": "A software is efficient when it runs smoothly on low-resource devices and (has a quick startup time or offers regular updates).",
        "FOL": "∀x (Software(x) ∧ Efficient(x) ↔ (RunsSmoothlyOnLowResourceDevices(x) ∧ (QuickStartupTime(x) ∨ RegularUpdates(x))))"
    },
    {
        "NL": "A type of landform that rises prominently above its surroundings, has a distinct peak or summit, and is formed by geological processes is classified as a mountain.",
        "FOL": "∀x (LandformType(x) ∧ RisesProminentlyAboveSurroundings(x) ∧ HasDistinctPeakOrSummit(x) ∧ FormedByGeologicalProcesses(x) → Mountain(x))"
    },
    {
        "NL": "No athletes are unhealthy and all of them are disciplined.",
        "FOL": "¬∀x (Athlete(x) → Unhealthy(x)) ∧ ∀y (Athlete(y) → ¬Undisciplined(y))"
    },
    {
        "NL": "Predators hunt prey for food, while prey species often develop various defense mechanisms to avoid being caught.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) → (HuntsForFood(x, y) ∧ DevelopsDefenseMechanisms(y)))"
    },
    {
        "NL": "At a bakery, cakes with chocolate frosting and layers of fudge are popular among dessert enthusiasts, while bread with whole grains and seeds caters to health-conscious customers.",
        "FOL": "∀x ∀y (Bakery(x) ∧ (ChocolateFrostedCake(x, y) ∧ (FudgeLayers(y) ∧ DessertEnthusiasts(y)) ∨ WholeGrainBread(x, y) ∧ (Seeds(y) ∧ HealthConsciousCustomers(y))))"
    },
    {
        "NL": "An instrument belongs to the string family if it has strings and is played by plucking or bowing.",
        "FOL": "∀x (Instrument(x) ∧ HasStrings(x) ∧ (Plucked(x) ∨ Bowed(x)) → StringFamily(x))"
    },
    {
        "NL": "No dudes are neither intelligent nor attractive.",
        "FOL": "¬∃x (Dude(x) ∧ ¬Intelligent(x) ∧ ¬Attractive(x))"
    },
    {
        "NL": "A transportation method is eco-friendly if it produces low emissions, utilizes renewable resources, and minimizes waste, but not if it has a high noise level.",
        "FOL": "∀x (TransportationMethod(x) ∧ LowEmissions(x) ∧ UsesRenewableResources(x) ∧ MinimizesWaste(x) ∧ ¬HighNoiseLevel(x) → EcoFriendly(x))"
    },
    {
        "NL": "A valid passport and a visa are necessary for international travel to countries that require entry permits.",
        "FOL": "∀x∀y (InternationalTravel(x) ∧ CountryRequiresEntryPermit(y) → (ValidPassport(x) ∧ Visa(x, y)))"
    },
    {
        "NL": "A telescope with a large aperture allows observing distant galaxies, while a camera with a fast shutter speed captures sharp images of fast-moving objects.",
        "FOL": "∀x ∀y (Telescope(x) ∧ LargeAperture(x) ∧ DistantGalaxy(y) → Observes(x, y)) ∧ ∀a ∀b (Camera(a) ∧ FastShutterSpeed(a) ∧ FastMovingObject(b) → CapturesSharpImages(a, b))"
    },
    {
        "NL": "A violin is a stringed musical instrument played with a bow, while a piano is a stringed musical instrument played by striking keys which activate hammers that strike the strings.",
        "FOL": "∀x∀y (Violin(x) ∧ Piano(y) → (StringedMusicalInstrument(x) ∧ PlayedWithBow(x)) ∧ (StringedMusicalInstrument(y) ∧ PlayedByStrikingKeys(y) ∧ HammersStrikeStrings(y)))"
    },
    {
        "NL": "A celestial object that orbits a star and has enough mass to maintain a stable shape is a planet.",
        "FOL": "∀x (CelestialObject(x) ∧ OrbitsStar(x) ∧ HasSufficientMass(x) → Planet(x))"
    },
    {
        "NL": "Insects that undergo complete metamorphosis have four life stages: egg, larva, pupa, and adult.",
        "FOL": "∀x (Insect(x) ∧ UndergoesCompleteMetamorphosis(x) → (EggStage(x) ∧ LarvaStage(x) ∧ PupaStage(x) ∧ AdultStage(x)))"
    },
    {
        "NL": "A dish x consists of ingredients y and z when the recipe calls for those specific ingredients and the combination results in a unique flavor.",
        "FOL": "∀x ∀y ∀z (Dish(x) ∧ Ingredient(y) ∧ Ingredient(z) ∧ RecipeCallsFor(x, y, z) ∧ UniqueFlavor(x, y, z) → ConsistsOf(x, y, z))"
    },
    {
        "NL": "An object is a mirror if it has a reflective surface, allows light to bounce off, and forms an image of the reflected scene.",
        "FOL": "∀x (Object(x) ∧ ReflectiveSurface(x) ∧ AllowsLightToBounceOff(x) ∧ FormsImageOfReflectedScene(x) → Mirror(x))"
    },
    {
        "NL": "There is no teacher that teaches all smart students.",
        "FOL": "¬∃x (Teacher(x) → ∀y (Smart(y) ∧ Student(y) → Teaches(x, y)))"
    },
    {
        "NL": "A zoo is successful in conservation efforts if it has a breeding program for endangered species and actively participates in habitat restoration projects.",
        "FOL": "∀x (SuccessfulInConservationEfforts(x) ↔ (Zoo(x) ∧ ∀y (EndangeredSpecies(y) → (BreedingProgram(x, y) ∧ HabitatRestorationProjects(x, y)))))"
    },
    {
        "NL": "A library lends books, has study spaces, and hosts workshops led by experts.",
        "FOL": "∀x ∀y ∀z (Library(x) ∧ Book(y) ∧ Workshop(z) → (Lends(x, y) ∧ HasStudySpaces(x) ∧ Hosts(x, z) ∧ LedBy(z, experts)))"
    },
    {
        "NL": "Every single student that Maria teaches dislikes mathematics.",
        "FOL": "∀x (Student(x) ∧ Teach(Maria, x) → ¬Like(x, Mathematics))"
    },
    {
        "NL": "Not all metals are magnetic.",
        "FOL": "¬(∀x (Metal(x) → Magnetic(x)))"
    },
    {
        "NL": "An organism x is a parasite if it lives on or inside another organism y, and it causes harm to y while benefiting itself.",
        "FOL": "∀x ∀y (Organism(x) ∧ LivesOnOrInside(x, y) ∧ CausesHarm(x, y) ∧ BenefitsItself(x) → Parasite(x))"
    },
    {
        "NL": "If a book is lengthy, then that book is time-consuming.",
        "FOL": "∀x (Book(x) ∧ Lengthy(x) → TimeConsuming(x))"
    },
    {
        "NL": "A person is considered a teacher if they educate and instruct students in a particular subject or skill.",
        "FOL": "∀x ∃y (Person(x) ∧ EducatesStudents(x, y) ∧ InstructsStudents(x, y) ∧ InParticularSubjectOrSkill(y) → Teacher(x))"
    },
    {
        "NL": "An object is a cylinder if it has two parallel, congruent circular bases connected by a curved surface.",
        "FOL": "∀x (Cylinder(x) ↔ (Object(x) ∧ TwoParallelCongruentCircularBases(x) ∧ CurvedSurface(x)))"
    },
    {
        "NL": "A plane takes off from an airport and lands at another airport without making any stops.",
        "FOL": "∃x ∃y ∃z (Plane(x) ∧ Airport(y) ∧ Airport(z) → TakesOffFrom(x, y) ∧ LandsAt(x, z) ∧ ¬∃w (Stop(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A secure online platform employs end-to-end encryption, requires multi-factor authentication, and frequently updates its software.",
        "FOL": "∀x (OnlinePlatform(x) ∧ Secure(x) ↔ (EndToEndEncryption(x) ∧ MultiFactorAuthentication(x) ∧ FrequentSoftwareUpdates(x)))"
    },
    {
        "NL": "A location is a tropical rainforest if it receives high annual rainfall and has consistently high temperatures throughout the year.",
        "FOL": "∀x (Location(x) ∧ HighAnnualRainfall(x) ∧ ConsistentlyHighTemperatures(x) → TropicalRainforest(x))"
    },
    {
        "NL": "There are languages that some people cannot speak.",
        "FOL": "∃x ∃y (Language(x) ∧ Person(y) ∧ ¬Speak(y, x))"
    },
    {
        "NL": "A scientist studies biology, chemistry, or physics.",
        "FOL": "∀x (Scientist(x) → (StudiesBiology(x) ∨ StudiesChemistry(x) ∨ StudiesPhysics(x)))"
    },
    {
        "NL": "A park is accessible if it is open to the public, has wheelchair-friendly paths, and offers free entry.",
        "FOL": "∀x (Park(x) → (Accessible(x) ↔ (OpenToPublic(x) ∧ WheelchairFriendlyPaths(x) ∧ FreeEntry(x))))"
    },
    {
        "NL": "A garden contains plants and is maintained by a gardener.",
        "FOL": "∀x ∀y (Garden(x) ∧ Gardener(y) ∧ ContainsPlants(x) → MaintainedBy(x, y))"
    },
    {
        "NL": "An email is marked as spam if it contains malicious content or unwanted advertising.",
        "FOL": "∀x (Email(x) ∧ MarkedAsSpam(x) → (MaliciousContent(x) ∨ UnwantedAdvertising(x)))"
    },
    {
        "NL": "An individual is recognized as a researcher if they are registered in a research institution or a university.",
        "FOL": "∀x (Individual(x) ∧ (RegisteredInResearchInstitution(x) ∨ RegisteredInUniversity(x)) → Researcher(x))"
    },
    {
        "NL": "An athlete runs fast xor swims slowly.",
        "FOL": "∀x (Athlete(x) → (RunsFast(x) ⊕ SwimsSlowly(x)))"
    },
    {
        "NL": "When a room is well-lit and has comfortable seating, it is suitable for reading.",
        "FOL": "∀x (Room(x) ∧ WellLit(x) ∧ ComfortableSeating(x) → SuitableForReading(x))"
    },
    {
        "NL": "A person is considered a nurse if they provide care and support for patients in a medical setting, often under the supervision of a physician.",
        "FOL": "∀x (Person(x) ∧ ProvidesCareAndSupport(x) ∧ ForPatientsInMedicalSetting(x) ∧ OftenUnderSupervisionOfPhysician(x) → Nurse(x))"
    },
    {
        "NL": "Not all artworks stay intact, but analyzing art is exciting.",
        "FOL": "¬∀x (Artwork(x) → Intact(x)) ∧ ∀y (Artwork(y) → ExcitingToAnalyze(y))"
    },
    {
        "NL": "Trees absorb carbon dioxide and produce oxygen.",
        "FOL": "∀x (Tree(x) → (AbsorbsCarbonDioxide(x) → ProducesOxygen(x)))"
    },
    {
        "NL": "If a person eats too much junk food, then he/she may become overweight.",
        "FOL": "∀x (EatTooMuchJunkFood(x) → MayBecomeOverweight(x))"
    },
    {
        "NL": "An ice cream melts when it is exposed to heat or left in direct sunlight.",
        "FOL": "∀x (IceCream(x) ∧ (ExposedToHeat(x) ∨ DirectSunlight(x)) → Melts(x))"
    },
    {
        "NL": "A song is popular if it has catchy tune and profound lyrics.",
        "FOL": "∀x (Song(x) ∧ HasCatchyTune(x) ∧ HasProfoundLyrics(x) → Popular(x))"
    },
    {
        "NL": "A fruit can be either seedless or seeded.",
        "FOL": "∀x (Fruit(x) → (Seedless(x) ⊕ Seeded(x)))"
    },
    {
        "NL": "None of the students in the class understand either calculus or algebra.",
        "FOL": "∀y (Student(y) ∧ InClass(y) → ¬Understand(y, calculus) ∧ ¬Understand(y, algebra))"
    },
    {
        "NL": "There is a planet all galaxies orbit around, if no square is entirely even.",
        "FOL": "¬∀x (Square(x) → Even(x)) → ∃y (Planet(y) ∧ ∀z (Galaxy(z) → OrbitAround(z, y)))"
    },
    {
        "NL": "In a healthy ecosystem, predators help maintain the balance by controlling the population of prey species.",
        "FOL": "∀x∀y∀z (Ecosystem(z) ∧ Healthy(z) ∧ Predator(x, z) ∧ Prey(y, z) → ControlsPopulation(x, y))"
    },
    {
        "NL": "One restaurant serves Italian food, while another one serves Thai food.",
        "FOL": "∃x ∃y (Restaurant(x) ∧ ItalianFood(y) ∧ Serve(x, y)) ∧ ∃z ∃w (Restaurant(z) ∧ ThaiFood(w) ∧ Serve(z, w))"
    },
    {
        "NL": "An employee can work part-time or full-time.",
        "FOL": "∀x (Employee(x) → (WorksPartTime(x) ∨ WorksFullTime(x)))"
    },
    {
        "NL": "A film is considered a blockbuster if it has a large budget, a star-studded cast, and high box office earnings.",
        "FOL": "∀x ∀y ∀z (Film(x) ∧ LargeBudget(x, y) ∧ StarStuddedCast(x, z) ∧ HighBoxOfficeEarnings(x) → Blockbuster(x))"
    },
    {
        "NL": "In a democratic election, eligible citizens vote for their preferred candidate, and the candidate with the most votes is declared the winner.",
        "FOL": "∀x∀y∀z (DemocraticElection(x) ∧ EligibleCitizen(y) ∧ Candidate(z) → ((VotesFor(y, z) ∧ MostVotes(z, x)) → DeclaredWinner(z, x)))"
    },
    {
        "NL": "A shape can be a triangle, square, or circle, but can only be one of these unless it is a morphing shape.",
        "FOL": "∀x (Shape(x) → (((Triangle(x) ⊕ Square(x) ⊕ Circle(x)) ∧ ¬MorphingShape(x)) ∨ (MorphingShape(x) ∧ (Triangle(x) ∨ Square(x) ∨ Circle(x)))))"
    },
    {
        "NL": "A truck driver transports goods between locations using specific routes and trucks.",
        "FOL": "∀x ∀y ∀z (TruckDriver(x) ∧ Good(y) ∧ Route(z) → Transports(x, y, z))"
    },
    {
        "NL": "All animals need some kind of food.",
        "FOL": "∀x (Animal(x) → ∃y (Food(y) ∧ Needs(x, y)))"
    },
    {
        "NL": "An escalator is a moving staircase that transports people between different floors of a building or other structure, providing convenience and accessibility.",
        "FOL": "∀x (Escalator(x) → (MovingStaircase(x) ∧ TransportsPeopleBetweenFloors(x) ∧ ProvidesConvenienceAndAccessibility(x)))"
    },
    {
        "NL": "A watch displays time and can be digital, analog, or a combination of both.",
        "FOL": "∀x (Watch(x) ∧ DisplaysTime(x) ∧ (Digital(x) ∨ Analog(x) ∨ CombinationOfBoth(x)))"
    },
    {
        "NL": "Books in a library are organized by genre and are available for borrowing or for reading within the premises.",
        "FOL": "∀x (Book(x) ∧ InLibrary(x) → (∃y Genre(y) ∧ OrganizedBy(x, y)) ∧ (AvailableForBorrowing(x) ∨ AvailableForReading(x)))"
    },
    {
        "NL": "A package can be either lightweight or heavy.",
        "FOL": "∀x (Package(x) → (Lightweight(x) ⊕ Heavy(x)))"
    },
    {
        "NL": "An airplane x requires runway y for takeoff if y meets length and surface requirements for x.",
        "FOL": "∀x ∀y (Airplane(x) ∧ Runway(y) ∧ MeetsLengthRequirements(x, y) ∧ MeetsSurfaceRequirements(x, y) → RequiresRunway(x, y))"
    },
    {
        "NL": "A car is reliable if it has good performance and low maintenance.",
        "FOL": "∀x (Car(x) ∧ HasGoodPerformance(x) ∧ HasLowMaintenance(x) → Reliable(x))"
    },
    {
        "NL": "A valid email address contains a username, the \"@\" symbol, and a domain name.",
        "FOL": "∀x (EmailAddress(x) → (ContainsUsername(x) ∧ ContainsAtSymbol(x) ∧ ContainsDomainName(x)))"
    },
    {
        "NL": "In a communication network, messages are transmitted between devices using various protocols, ensuring the correct delivery of information across different types of connections.",
        "FOL": "∀x∀y∀z (CommunicationNetwork(x) ∧ Message(y) ∧ Device(z) → (TransmittedBetween(y, z) → (UsesVariousProtocols(x) ∧ EnsuresCorrectDelivery(y) ∧ DifferentConnectionTypes(x))))"
    },
    {
        "NL": "A person is considered a poet if they write poetry.",
        "FOL": "∀x (Poet(x) ↔ WritesPoetry(x))"
    },
    {
        "NL": "In a forest ecosystem, herbivores feed on plants, while carnivores prey on herbivores, forming a food chain that allows energy to flow between trophic levels.",
        "FOL": "∀x∀y∀z (ForestEcosystem(x) ∧ Herbivores(y) ∧ Plants(z) ∧ FeedsOn(y, z) ∧ Carnivores(w) ∧ PreysOn(w, y) → FormsFoodChain(x, w, y, z))"
    },
    {
        "NL": "Not every building is a residential building, and some buildings serve as offices or have energy-efficient features.",
        "FOL": "¬∀x (Building(x) → ResidentialBuilding(x)) ∧ ∃y (Building(y) ∧ (OfficeBuilding(y) ∨ EnergyEfficientFeatures(y)))"
    },
    {
        "NL": "There is no car that is red or blue.",
        "FOL": "¬∃x ((Red(x) ∧ Car(x)) ∨ (Blue(x) ∧ Car(x)))"
    },
    {
        "NL": "Bob is a mathematician or not a mathematician.",
        "FOL": "∀x (Bob(x) → (Mathematician(x) ⊕ ¬Mathematician(x)))"
    },
    {
        "NL": "Frequent users of technology can experience eye strain.",
        "FOL": "∀x (Person(x) ∧ FrequentUserOfTechnology(x) → CanExperienceEyeStrain(x))"
    },
    {
        "NL": "If a device is a computer, it can process information.",
        "FOL": "∀x (Computer(x) → CanProcessInformation(x))"
    },
    {
        "NL": "If a book is part of a student's backpack, it is a textbook, notebook, or dictionary.",
        "FOL": "∀x (Book(x) ∧ PartOfStudentsBackpack(x) → Textbook(x) ∨ Notebook(x) ∨ Dictionary(x))"
    },
    {
        "NL": "A secure password contains uppercase letters, lowercase letters, and special characters.",
        "FOL": "∀x (Password(x) → (Secure(x) ↔ (UppercaseLetters(x) ∧ LowercaseLetters(x) ∧ SpecialCharacters(x))))"
    },
    {
        "NL": "A refrigerator cools and preserves food.",
        "FOL": "∀x (Refrigerator(x) → (CoolsFood(x) ∧ PreservesFood(x)))"
    },
    {
        "NL": "A car is either electric or gas powered if it is not hybrid.",
        "FOL": "∀x (Car(x) ∧ ¬Hybrid(x) → (Electric(x) ∨ GasPowered(x)))"
    },
    {
        "NL": "It is not true that every player is skillful.",
        "FOL": "¬∀x (Player(x) → Skillful(x))"
    },
    {
        "NL": "A natural phenomenon that results from the rapid movement of tectonic plates, often causing significant damage to buildings and infrastructure, is an earthquake.",
        "FOL": "∀x (NaturalPhenomenon(x) ∧ ResultsFromRapidMovementOfTectonicPlates(x) ∧ CausesSignificantDamage(x, buildings, infrastructure) → Earthquake(x))"
    },
    {
        "NL": "A hospital performs a surgical procedure when it has a qualified surgeon, necessary equipment, and the patient's consent.",
        "FOL": "∀x ∀y ∀z (Hospital(x) ∧ SurgicalProcedure(y) ∧ QualifiedSurgeon(z, y, x) ∧ NecessaryEquipment(x, y) ∧ PatientConsent(y) → Performs(x, y))"
    },
    {
        "NL": "A movie becomes a cult classic if it has a dedicated fan base, didn't achieve mainstream success initially, and gains popularity over time.",
        "FOL": "∀x (Movie(x) ∧ CultClassic(x) ↔ (DedicatedFanBase(x) ∧ ¬MainstreamSuccessInitially(x) ∧ GainsPopularityOverTime(x)))"
    },
    {
        "NL": "A building can be residential or commercial, but not both at the same time, and it cannot levitate.",
        "FOL": "∀x (Building(x) → (Residential(x) ⊕ Commercial(x)) ∧ ¬Levitates(x))"
    },
    {
        "NL": "An athlete who competes in soccer does not participate in basketball nor in tennis.",
        "FOL": "∀x∀y (Athlete(x) ∧ CompetesIn(x, y) ∧ Soccer(y) → (¬ParticipatesIn(x, Basketball) ∧ ¬ParticipatesIn(x, Tennis)))"
    },
    {
        "NL": "A celestial body that isn't a star might be a planet or an asteroid.",
        "FOL": "∀x (CelestialBody(x) ∧ ¬Star(x) → (Planet(x) ∨ Asteroid(x)))"
    },
    {
        "NL": "A vacation is enjoyable if the weather is sunny, the location is either by the beach or in the mountains, and there are no large crowds.",
        "FOL": "∀x (Vacation(x) ∧ SunnyWeather(x) ∧ (BeachLocation(x) ∨ MountainLocation(x)) ∧ ¬LargeCrowds(x) → Enjoyable(x))"
    },
    {
        "NL": "A film is a box office success if it has high ticket sales, positive reviews, and earns more than its production budget.",
        "FOL": "∀x (Film(x) ∧ BoxOfficeSuccess(x) → (HighTicketSales(x) ∧ PositiveReviews(x) ∧ EarnsMoreThanBudget(x)))"
    },
    {
        "NL": "There is a city that everyone desires to visit if none of the countries are peaceful.",
        "FOL": "¬∀x (Country(x) → Peaceful(x)) → ∃y (City(y) ∧ ∀z (Person(z) → DesiresToVisit(z, y)))"
    },
    {
        "NL": "David esteems a Michelangelo sculpture if and only if it was sculpted before 1550.",
        "FOL": "∀x (Sculpture(x) ∧ SculptedBy(x, michelangelo) → (SculptedIn(x, beforefifteenfifty) ↔ Esteems(david, x)))"
    },
    {
        "NL": "An electronic device needs to be recharged when its battery is low.",
        "FOL": "∀x (ElectronicDevice(x) ∧ BatteryLow(x) → NeedsRecharge(x))"
    },
    {
        "NL": "Fruits contain seeds and can be eaten.",
        "FOL": "∀x (Fruit(x) → (Contain(y) ∧ Seeds(y) ∧ Can(z) ∧ BeEaten(z) ∧ With(x, y, z)))"
    },
    {
        "NL": "No leaders are reliable unless they are visionaries, but all of them wants to achieve a goal.",
        "FOL": "∀x (Leader(x) → (¬Reliable(x) ∨ Visionary(x))) ∧ ∀y (Leader(y) → WantsToAchieveGoal(y))"
    },
    {
        "NL": "A vehicle is a car if it has four wheels and is designed for transporting people.",
        "FOL": "∀x (Car(x) → (Vehicle(x) ∧ FourWheels(x) ∧ DesignedForTransportingPeople(x)))"
    },
    {
        "NL": "Some paintings are created with oil-based paint, depict landscapes, and are housed in renowned galleries.",
        "FOL": "∃x ∃y (Painting(x) ∧ OilBasedPaint(y) ∧ CreatedWith(x, y) ∧ Landscape(z) ∧ Depicts(x, z) ∧ RenownedGallery(w) ∧ HousedIn(x, w))"
    },
    {
        "NL": "A car is deemed reliable if it has good mileage and a sturdy body.",
        "FOL": "∀x (Car(x) ∧ HasGoodMileage(x) ∧ HasSturdyBody(x) → Reliable(x))"
    },
    {
        "NL": "A mammal gives birth to live offspring, while a reptile lays eggs.",
        "FOL": "∀x ((Mammal(x) → GivesBirthToLiveOffspring(x)) ∧ (Reptile(x) → LaysEggs(x)))"
    },
    {
        "NL": "Musical compositions are not mere sounds.",
        "FOL": "∀x (MusicalComposition(x) → ¬Sound(x))"
    },
    {
        "NL": "It's not the case that every phone is user-friendly.",
        "FOL": "¬∀x (Phone(x) → UserFriendly(x))"
    },
    {
        "NL": "A type of animal can be either a vertebrate or an invertebrate.",
        "FOL": "∀x (AnimalType(x) → Vertebrate(x) ⊕ Invertebrate(x))"
    },
    {
        "NL": "A gadget is termed as a blender if it mixes different ingredients smoothly.",
        "FOL": "∀x (Gadget(x) ∧ MixesIngredients(x) ∧ Smoothly(x) → Blender(x))"
    },
    {
        "NL": "There are cities with a population greater than 1 million or a high tourism rate.",
        "FOL": "∃x (City(x) ∧ (PopulationGreaterThan1Million(x) ∨ HighTourismRate(x)))"
    },
    {
        "NL": "A car must have a motor and wheels to be considered functional.",
        "FOL": "∀x (Car(x) ∧ Functional(x) → (HasMotor(x) ∧ HasWheels(x)))"
    },
    {
        "NL": "A person is a chef if they professionally prepare and cook food.",
        "FOL": "∀x (Person(x) ∧ Chef(x) ↔ PreparesAndCooksFoodProfessionally(x))"
    },
    {
        "NL": "A film is suitable for children if it has no violence and no strong language.",
        "FOL": "∀x (Film(x) ∧ ¬Violence(x) ∧ ¬StrongLanguage(x) → SuitableForChildren(x))"
    },
    {
        "NL": "When an owl hunts for prey at night, it uses its exceptional hearing and night vision to locate and capture the target.",
        "FOL": "∀x∀y (Owl(x) ∧ HuntsAtNight(x) ∧ Prey(y) → (ExceptionalHearing(x) ∧ NightVision(x) ∧ LocatesAndCaptures(x, y)))"
    },
    {
        "NL": "Books with more than 500 pages are classified as lengthy.",
        "FOL": "∀x (Book(x) ∧ MoreThan500Pages(x) → Lengthy(x))"
    },
    {
        "NL": "A car moves from one location to another by traveling on a road.",
        "FOL": "∀x ∀y ∀z (Car(x) ∧ Location(y) ∧ Location(z) ∧ TravelsOnRoad(x) → MovesFromTo(x, y, z))"
    },
    {
        "NL": "Cities located near the coast often experience a mild climate due to the ocean's influence.",
        "FOL": "∀x ∀y (City(x) ∧ Coast(y) ∧ Near(x, y) → ExperienceMildClimate(x))"
    },
    {
        "NL": "An electronic device that captures and records images, often through the use of a lens and a sensor, is called a camera.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CapturesAndRecordsImages(x) ∧ UsesLens(x) ∧ UsesSensor(x) → Camera(x))"
    },
    {
        "NL": "A violin is a stringed instrument, and a trumpet is a brass instrument.",
        "FOL": "∀x (Violin(x) → StringedInstrument(x)) ∧ ∀y (Trumpet(y) → BrassInstrument(y))"
    },
    {
        "NL": "A politician proposes laws and represents constituents, whereas a judge interprets laws and does not represent constituents.",
        "FOL": "∀x ∀y (Politician(x) ∧ Judge(y) → (ProposesLaws(x) ∧ RepresentsConstituents(x) ∧ InterpretsLaws(y) ∧ ¬RepresentsConstituents(y)))"
    },
    {
        "NL": "Not every dessert is chocolate-based, and some desserts are served warm or accompanied by ice cream.",
        "FOL": "¬∀x (Dessert(x) → ChocolateBased(x)) ∧ ∃y (Dessert(y) ∧ (ServedWarm(y) ∨ AccompaniedByIceCream(y)))"
    },
    {
        "NL": "No reporter who covers politics and sports, unless they have received a Pulitzer prize, has interviewed more than forty influential people or has not hosted a television program.",
        "FOL": "¬∃x (Reporter(x) ∧ CoversPolitics(x) ∧ CoversSports(x) ∨ ReceivedPulitzer(x) ∧ (InterviewedMoreThanFortyInfluentialPeople(x) ∨ ¬HostedTVProgram(x)))"
    },
    {
        "NL": "A movie can be a comedy, a drama, or a thriller, but it cannot be all three genres.",
        "FOL": "∀x (Movie(x) → ((Comedy(x) ∨ Drama(x) ∨ Thriller(x)) ∧ ¬(Comedy(x) ∧ Drama(x) ∧ Thriller(x))))"
    },
    {
        "NL": "All plants are not dying or toxic.",
        "FOL": "∃x (Plant(x) ∧ (¬Dying(x) ∨ ¬Toxic(x)))"
    },
    {
        "NL": "Every tree grows if there is no plant that flowers.",
        "FOL": "¬∃x (Plant(x) ∧ Flowers(x)) → ∀y (Tree(y) → Grows(y))"
    },
    {
        "NL": "An employer that provides competitive salaries, flexible working arrangements, and opportunities for career growth can attract and retain talented employees.",
        "FOL": "∀x (Employer(x) ∧ ProvidesCompetitiveSalaries(x) ∧ FlexibleWorkingArrangements(x) ∧ OpportunitiesForCareerGrowth(x) → AttractsAndRetainsTalentedEmployees(x))"
    },
    {
        "NL": "A mammal that has fur, feeds milk to its young, and possesses a tail is a dog.",
        "FOL": "∀x (Mammal(x) ∧ HasFur(x) ∧ FeedsMilk(x) ∧ PossessesTail(x) → Dog(x))"
    },
    {
        "NL": "A square is a rectangle with equal sides, while a circle has no corners.",
        "FOL": "∀x ∀y (Square(x) ∧ Circle(y) → (Rectangle(x) ∧ EqualSides(x) ∧ ¬HasCorners(y)))"
    },
    {
        "NL": "A destination is suitable for a family vacation if it offers kid-friendly activities, affordable accommodation, and safe surroundings, but not if it's crowded or far from home.",
        "FOL": "∀x∀y (Destination(x) ∧ Family(y) → (SuitableForFamilyVacation(x, y) ↔ ((KidFriendlyActivities(x) ∧ AffordableAccommodation(x) ∧ SafeSurroundings(x)) ∧ ¬(Crowded(x) ∨ FarFromHome(x, y)))))"
    },
    {
        "NL": "An event is a concert if it features live music and attracts an audience for entertainment.",
        "FOL": "∀x (Event(x) ∧ FeaturesLiveMusic(x) ∧ AttractsAudience(x) → Concert(x))"
    },
    {
        "NL": "Every artist who is creative is respected by all curators.",
        "FOL": "∀x (Artist(x) ∧ Creative(x) → ∀y (Curator(y) → Respects(y, x)))"
    },
    {
        "NL": "A nutrient-rich diet that includes a variety of fruits, vegetables, lean proteins, and whole grains can support immune function and promote long-term health.",
        "FOL": "∀x (NutrientRichDiet(x) → IncludesFruits(x) ∧ Vegetables(x) ∧ LeanProteins(x) ∧ WholeGrains(x) ∧ SupportsImmuneFunction(x) ∧ PromotesLongTermHealth(x))"
    },
    {
        "NL": "An object is considered a communication device if it is designed to transmit and receive information over a distance.",
        "FOL": "∀x (Object(x) ∧ DesignedToTransmitAndReceiveInformation(x) → CommunicationDevice(x))"
    },
    {
        "NL": "A car uses petrol and it speeds up when there is need to escape.",
        "FOL": "∀x (Car(x) → (UsesPetrol(x) ∧ (IsNeedToEscape(x) → SpeedsUp(x))))"
    },
    {
        "NL": "A boy is reading in the library, while a girl is painting at the studio.",
        "FOL": "∃x ∃y (Boy(x) ∧ Library(y) ∧ ReadingIn(x, y)) ∧ ∃z (Girl(z) ∧ Painting(z) ∧ AtTheStudio(z))"
    },
    {
        "NL": "A location is a park if it showcases flowers, is accessible to everyone, and has an educational intent.",
        "FOL": "∀x (Location(x) ∧ ShowcasesFlowers(x) ∧ AccessibleToEveryone(x) ∧ HasEducationalIntent(x) → Park(x))"
    },
    {
        "NL": "A book is either fiction or nonfiction, and is either available in print or as an ebook.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ Nonfiction(x)) ∧ (Print(x) ⊕ EBook(x)))"
    },
    {
        "NL": "A drum is cylindrical if and only if it is linked to a small mallet.",
        "FOL": "∀x (Cylindrical(x) ↔ ∃y (Small(y) ∧ LinkedTo(x, y)))"
    },
    {
        "NL": "Solar panels generate electricity when exposed to sunlight.",
        "FOL": "∀x∀y (SolarPanel(x) ∧ ExposedToSunlight(y) → GeneratesElectricity(x, y))"
    },
    {
        "NL": "A structure is classified as a bridge if it spans a physical gap and allows passage across an obstacle such as a body of water, valley, or road.",
        "FOL": "∀x (Structure(x) ∧ SpansPhysicalGap(x) ∧ AllowsPassageAcrossObstacle(x) → Bridge(x))"
    },
    {
        "NL": "A fish swims, breathes through gills, and lays eggs.",
        "FOL": "∀x (Fish(x) → (Swims(x) ∧ BreathesThroughGills(x) ∧ LaysEggs(x)))"
    },
    {
        "NL": "A store that sells electronics, furniture, and clothing is a department store.",
        "FOL": "∀x (Store(x) ∧ SellsElectronics(x) ∧ SellsFurniture(x) ∧ SellsClothing(x) → DepartmentStore(x))"
    },
    {
        "NL": "Every cat on the mat sleeps.",
        "FOL": "∀x (Cat(x) ∧ OnMat(x) → Sleep(x))"
    },
    {
        "NL": "A scholar studies history or geography.",
        "FOL": "∀x (Scholar(x) → (StudiesHistory(x) ∨ StudiesGeography(x)))"
    },
    {
        "NL": "A snake is crawling in the grass.",
        "FOL": "∃x ∃y (Snake(x) ∧ Grass(y) ∧ CrawlingIn(x, y))"
    },
    {
        "NL": "A pizza with tomato sauce, mozzarella, and basil is a Margherita pizza.",
        "FOL": "∀x∀y∀z∀w (Pizza(x) ∧ TomatoSauce(y) ∧ Mozzarella(z) ∧ Basil(w) ∧ HasIngredient(x, y) ∧ HasIngredient(x, z) ∧ HasIngredient(x, w) → MargheritaPizza(x))"
    },
    {
        "NL": "A lake is formed by the accumulation of water in a natural basin, fed by rivers, streams, or underground springs.",
        "FOL": "∀x ∀y ∀z (Lake(x) → AccumulationOfWaterInNaturalBasin(x) ∧ (River(y) ∨ Stream(y) ∨ UndergroundSpring(y)) → FedBy(x, y, z))"
    },
    {
        "NL": "A computer is considered an Apple if it runs on iOS, has an Apple logo, and was manufactured by Apple.",
        "FOL": "∀x (Computer(x) ∧ RunsOniOS(x) ∧ HasAppleLogo(x) ∧ ManufacturedByApple(x) → Apple(x))"
    },
    {
        "NL": "A type of animal that feeds primarily on the flesh of other animals, using its sharp teeth and claws to catch and tear its prey, is a carnivore.",
        "FOL": "∀x (Animal(x) ∧ FeedsOnFlesh(x) ∧ SharpTeeth(x) ∧ SharpClaws(x) ∧ CatchesPrey(x) ∧ TearsPrey(x) → Carnivore(x))"
    },
    {
        "NL": "A recipe consists of ingredients and instructions, and the final dish's taste depends on the quality and proportion of the ingredients, as well as the cooking technique.",
        "FOL": "∀x ∀y ∀z (Recipe(x) ∧ Ingredients(y) ∧ Instructions(z) → (Taste(x) ↔ QualityAndProportion(y) ∧ CookingTechnique(z)))"
    },
    {
        "NL": "When it is snowing and below freezing, the roads become slippery.",
        "FOL": "∀x (Snowing(x) ∧ BelowFreezing(x) → SlipperyRoads(x))"
    },
    {
        "NL": "Any economist who studies fiscal policy and market regulation, unless they have acquired a prestigious honor, have either issued articles in prominent economic reviews or have not presented at international economic forums.",
        "FOL": "∀x (Economist(x) ∧ StudiesFiscalPolicy(x) ∧ StudiesMarketRegulation(x) ∨ AcquiredPrestigiousHonor(x) → (IssuedInEconomicReviews(x) ∨ ¬PresentedAtInternationalEconomicForums(x)))"
    },
    {
        "NL": "A train can travel long distances if it operates on a railway network that connects cities.",
        "FOL": "∀x (Train(x) ∧ RailwayNetwork(y) ∧ ConnectsCities(y) ∧ OperatesOn(x, y) → CanTravelLongDistances(x))"
    },
    {
        "NL": "A dryer can dry clothes but not wash them.",
        "FOL": "∀x (Dryer(x) → (DryClothes(x) ∧ ¬WashClothes(x)))"
    },
    {
        "NL": "An element with an atomic number greater than 92 is classified as transuranic.",
        "FOL": "∀x (Element(x) ∧ AtomicNumberGreaterThan92(x) → Transuranic(x))"
    },
    {
        "NL": "Birds can fly, but ostriches and penguins, which are flightless, cannot.",
        "FOL": "∀x (Bird(x) ∧ ¬(Ostrich(x) ∨ Penguin(x)) → CanFly(x)) ∧ ∀y (Ostrich(y) ∨ Penguin(y) → ¬CanFly(y))"
    },
    {
        "NL": "A celestial body is a planet if it orbits a star, has sufficient mass to assume a nearly round shape, and clears its orbit of other debris.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsStar(x) ∧ SufficientMassForRoundShape(x) ∧ ClearsOrbitOfDebris(x) → Planet(x))"
    },
    {
        "NL": "A flying machine that relies on the lift generated by rotating blades to become airborne is a helicopter.",
        "FOL": "∀x (FlyingMachine(x) ∧ ReliesOnLiftFromRotatingBlades(x) → Helicopter(x))"
    },
    {
        "NL": "A fabric is comfortable if it is breathable, soft, and lightweight.",
        "FOL": "∀x (Fabric(x) → (Comfortable(x) ↔ (Breathable(x) ∧ Soft(x) ∧ Lightweight(x))))"
    },
    {
        "NL": "A software is useful if and only if its interface is user-friendly and the features are practical, but it doesn't require a lot of processing power.",
        "FOL": "∀x (Software(x) ∧ Useful(x) ↔ (UserFriendlyInterface(x) ∧ PracticalFeatures(x) ∧ ¬RequiresLotOfProcessingPower(x)))"
    },
    {
        "NL": "A tree in a forest provides shelter for birds if it has strong branches and ample foliage.",
        "FOL": "∀x∀y (Tree(x) ∧ Forest(y) ∧ InForest(x, y) ∧ StrongBranches(x) ∧ AmpleFoliage(x) → ProvidesShelterForBirds(x))"
    },
    {
        "NL": "A painter creates art by applying paint to a surface using brushes.",
        "FOL": "∀x∀y∀z (Painter(x) ∧ Art(y) ∧ Surface(z) → Creates(x, y, z))"
    },
    {
        "NL": "Digital clocks display time using digits, while analog clocks use rotating hands to show hours and minutes.",
        "FOL": "∀x∀y (DigitalClock(x) → UsesDigits(x, y)) ∧ ∀z∀w (AnalogClock(z) → UsesRotatingHands(z, w))"
    },
    {
        "NL": "Some foods are gluten-free.",
        "FOL": "∃x (Food(x) ∧ GlutenFree(x))"
    },
    {
        "NL": "A dog can participate in a competition if it is well-trained, has a good temperament, and belongs to an eligible breed, but it cannot if it is aggressive.",
        "FOL": "∀x (Dog(x) ∧ CanParticipate(x) ↔ (WellTrained(x) ∧ GoodTemperament(x) ∧ EligibleBreed(x) ∧ ¬Aggressive(x)))"
    },
    {
        "NL": "A book is read by a person only if that person is intelligent.",
        "FOL": "∀x (Book(x) → ∀y (Person(y) ∧ ReadBy(x, y) → Intelligent(y)))"
    },
    {
        "NL": "A game that is strategy-based can engage players.",
        "FOL": "∀x ∀y (Game(x) ∧ StrategyBased(x) ∧ Player(y) → CanEngage(x, y))"
    },
    {
        "NL": "An astronomical object is a black hole if it has a gravitational field so strong that no particles or electromagnetic radiation can escape its pull.",
        "FOL": "∀x ∀y ∀z (AstronomicalObject(x) ∧ GravitationalField(x, y) ∧ StrongField(y) ∧ InescapablePull(y, z) → BlackHole(x))"
    },
    {
        "NL": "A film is independent if it's not produced by a major studio and doesn't have a large budget.",
        "FOL": "∀x (Film(x) ∧ ¬ProducedByMajorStudio(x) ∧ ¬LargeBudget(x) → Independent(x))"
    },
    {
        "NL": "A sports museum preserves sport memorabilia, protecting historic items and their legacy, while providing opportunities for sports history research and museum tours.",
        "FOL": "∀x ∃y ∃z (SportsMuseum(x) → (HistoricItem(y) ∧ Legacy(z) ∧ Belongs(y, z) ∧ (PreservesMemorabilia(x) ∧ Protects(x, y) ∧ Protects(x, z) ∧ ProvidesSportsHistoryResearchOpportunities(x) ∧ ProvidesMuseumTours(x))))"
    },
    {
        "NL": "A phone is considered modern if it has a touch screen and high-speed internet.",
        "FOL": "∀x (Phone(x) ∧ HasTouchScreen(x) ∧ HasHighSpeedInternet(x) → Modern(x))"
    },
    {
        "NL": "Some instruments are either strings or percussions, but not both.",
        "FOL": "∃x (Instrument(x) ∧ (String(x) ⊕ Percussion(x)))"
    },
    {
        "NL": "A person is considered bilingual if they can speak and understand at least two languages fluently.",
        "FOL": "∀x (Person(x) ∧ SpeaksAtLeastTwoLanguagesFluently(x) → Bilingual(x))"
    },
    {
        "NL": "A museum preserves historical artifacts by maintaining a controlled environment and implementing proper conservation methods.",
        "FOL": "∀x∀y (Museum(x) ∧ HistoricalArtifact(y) ∧ ControlledEnvironment(x) ∧ ProperConservationMethods(x) → Preserves(x, y))"
    },
    {
        "NL": "A celestial object that orbits around a star, has a spherical shape, and has cleared its orbit of other debris is called a planet.",
        "FOL": "∀x∀y (CelestialObject(x) ∧ OrbitsAroundStar(x, y) ∧ SphericalShape(x) ∧ ClearedOrbitOfDebris(x) → Planet(x))"
    },
    {
        "NL": "A job can be full-time, part-time, or temporary, but it cannot be all three at once.",
        "FOL": "∀x (Job(x) → ((FullTime(x) ⊕ PartTime(x) ⊕ Temporary(x)) ∧ ¬(FullTime(x) ∧ PartTime(x) ∧ Temporary(x))))"
    },
    {
        "NL": "All cars are either electric or gasoline-powered.",
        "FOL": "∀x (Car(x) ∧ (ElectricCar(x) ⊕ GasPoweredCar(x)))"
    },
    {
        "NL": "Fruits are usually sweet, while vegetables are typically savory.",
        "FOL": "∀x ((Fruit(x) → UsuallySweet(x)) ∧ (Vegetable(x) → TypicallySavory(x)))"
    },
    {
        "NL": "A medical treatment is successful if it alleviates symptoms, has minimal side effects, and prevents relapse.",
        "FOL": "∀x (MedicalTreatment(x) → (Successful(x) ↔ (AlleviatesSymptoms(x) ∧ MinimalSideEffects(x) ∧ PreventsRelapse(x))))"
    },
    {
        "NL": "A chair has a backrest and legs, while a stool has legs but no backrest.",
        "FOL": "∀x∀y (Chair(x) ∧ Stool(y) → (HasBackrest(x) ∧ HasLegs(x) ∧ HasLegs(y) ∧ ¬HasBackrest(y)))"
    },
    {
        "NL": "A fruit is juicy and has seeds.",
        "FOL": "∀x (Fruit(x) → (Juicy(x) ∧ HasSeeds(x)))"
    },
    {
        "NL": "Doctors diagnose a bacterial infection when a patient exhibits symptoms and lab tests confirm the presence of bacteria.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) ∧ ExhibitsSymptoms(y) ∧ LabTestsConfirmBacteria(y) → DiagnosesBacterialInfection(x, y))"
    },
    {
        "NL": "A biologist studies organisms in environments like oceans or rainforests.",
        "FOL": "∀x ∀y (Biologist(x) ∧ Environment(y) → (Oceans(y) ∨ Rainforests(y) → StudiesIn(x, y)))"
    },
    {
        "NL": "Noah is a dancer if and only if Mia is a dancer.",
        "FOL": "Dancer(noah) ↔ Dancer(mia)"
    },
    {
        "NL": "A squirrel is munching nuts on a log, while a deer is grazing in the forest.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Log(y) ∧ MunchingOn(x, y)) ∧ ∃z (Deer(z) ∧ Grazing(z) ∧ InForest(z))"
    },
    {
        "NL": "A building can be residential or commercial, and it can have one or multiple floors, but some configurations don't exist.",
        "FOL": "∀x (Building(x) → ((Residential(x) ∨ Commercial(x)) ∧ (OneFloor(x) ∨ MultipleFloors(x)) ∧ ¬(Residential(x) ∧ OneFloor(x) ∧ MultipleFloors(x)) ∧ ¬(Commercial(x) ∧ OneFloor(x) ∧ MultipleFloors(x))))"
    },
    {
        "NL": "A town is quiet if there is no traffic and no construction.",
        "FOL": "∀x (Town(x) ∧ ¬Traffic(x) ∧ ¬Construction(x) → Quiet(x))"
    },
    {
        "NL": "An object is considered transparent if light can pass through it without being scattered.",
        "FOL": "∀x (Object(x) ∧ LightPassesWithoutScattering(x) → Transparent(x))"
    },
    {
        "NL": "All cats are either on the roof or in the basement.",
        "FOL": "∀x (Cat(x) → (OnRoof(x) ⊕ InBasement(x)))"
    },
    {
        "NL": "A material is magnetic if it is attracted to a magnet, and nonmagnetic otherwise.",
        "FOL": "∀x (Material(x) → (AttractedToMagnet(x) ⊕ ¬AttractedToMagnet(x)))"
    },
    {
        "NL": "No one in the gallery recognizes either Ford or Keaton.",
        "FOL": "¬∃x (Person(x) ∧ InGallery(x) ∧ (Recognize(x, ford) ∨ Recognize(x, keaton)))"
    },
    {
        "NL": "A painter paints a mural on a wall using paintbrushes and paints.",
        "FOL": "∀x ∀y ∀z (Painter(x) ∧ Mural(y) ∧ Wall(z) → (PaintsOn(x, y, z) ∧ UsesPaintbrushes(x) ∧ UsesPaints(x)))"
    },
    {
        "NL": "An animal is a good swimmer if it has strong limbs and a streamlined body.",
        "FOL": "∀x (Animal(x) ∧ StrongLimbs(x) ∧ StreamlinedBody(x) → GoodSwimmer(x))"
    },
    {
        "NL": "A healthy lifestyle can prevent chronic diseases by promoting overall health.",
        "FOL": "∀x ∀y (Lifestyle(x) ∧ ChronicDisease(y) → (Prevents(x, y) → PromotesHealth(x, y)))"
    },
    {
        "NL": "A weather cycle is extreme if it includes torrential rains, gusty winds, and the possibility for inundation or other wreckage.",
        "FOL": "∀x (WeatherCycle(x) ∧ IncludeTorrentialRains(x) ∧ IncludeGustyWinds(x) ∧ (PossibilityForInundation(x) ∨ PossibilityForWreckage(x)) → Extreme(x))"
    },
    {
        "NL": "A structure is classified as a building if it covers a landscape and is made from materials like brick, glass, or metal.",
        "FOL": "∀x (Structure(x) ∧ CoversLandscape(x) ∧ (MadeFromBrick(x) ∨ MadeFromGlass(x) ∨ MadeFromMetal(x)) → Building(x))"
    },
    {
        "NL": "No artist who paints with oils and acrylics, unless they have won an International Art Award, has exhibited in more than fifteen galleries or has not led a painting workshop.",
        "FOL": "¬∃x (Artist(x) ∧ PaintsWithOils(x) ∧ PaintsWithAcrylics(x) ∨ WonInternationalArtAward(x) ∧ (ExhibitedInMoreThanFifteenGalleries(x) ∨ ¬LedPaintingWorkshop(x)))"
    },
    {
        "NL": "Cats purr when content, dogs wag their tails, and parrots mimic sounds.",
        "FOL": "∀x (Cat(x) → PurrsWhenContent(x)) ∧ ∀y (Dog(y) → WagsTail(y)) ∧ ∀z (Parrot(z) → MimicsSounds(z))"
    },
    {
        "NL": "A book that isn't well-written, lacks an engaging storyline, or has poor illustrations isn't a popular choice among readers.",
        "FOL": "∀x (Book(x) ∧ (¬WellWritten(x) ∨ ¬EngagingStoryline(x) ∨ PoorIllustrations(x)) → ¬PopularChoice(x))"
    },
    {
        "NL": "A garden can have flowers, trees, or bushes.",
        "FOL": "∀x (Garden(x) → (HaveFlowers(x) ∨ HaveTrees(x) ∨ HaveBushes(x)))"
    },
    {
        "NL": "A library provides access to books and other resources for reading and research.",
        "FOL": "∀x∀y (Library(x) ∧ (Books(y) ∨ OtherResources(y)) → ProvidesAccessFor(x, y, ReadingAndResearch))"
    },
    {
        "NL": "A snake is slithering in the grass.",
        "FOL": "∃x ∃y (Snake(x) ∧ Grass(y) ∧ SlitheringIn(x, y))"
    },
    {
        "NL": "A chef cooks meals and creates new recipes.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ Recipe(z) → (Cooks(x, y) ∧ Creates(x, z)))"
    },
    {
        "NL": "Every chef who is talented is praised by all customers.",
        "FOL": "∀x (Chef(x) ∧ Talented(x) → ∀y (Customer(y) → Praises(y, x)))"
    },
    {
        "NL": "A durable material can withstand wear, resist damage, and maintain its appearance over time.",
        "FOL": "∀x (Material(x) → (WithstandsWear(x) ∧ ResistsDamage(x) ∧ MaintainsAppearanceOverTime(x) → Durable(x)))"
    },
    {
        "NL": "A machine possesses a hard drive if it can store data and has a processor.",
        "FOL": "∀x (Machine(x) ∧ CanStoreData(x) ∧ HasProcessor(x) → PossessesHardDrive(x))"
    },
    {
        "NL": "A city with a well-connected public transport system and a clean environment attracts tourists.",
        "FOL": "∀x (City(x) ∧ PublicTransport(x) ∧ CleanEnvironment(x) → AttractsTourists(x))"
    },
    {
        "NL": "A scientist conducts research and publishes findings in a journal.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Research(y) ∧ Journal(z) → (Conducts(x, y) ∧ PublishesIn(x, y, z)))"
    },
    {
        "NL": "A vehicle is a car if it has four wheels, an engine, and seats for passengers.",
        "FOL": "∀x (Vehicle(x) ∧ HasFourWheels(x) ∧ HasEngine(x) ∧ HasSeatsForPassengers(x) → Car(x))"
    },
    {
        "NL": "A bird that sings in the morning, has feathers and can fly is usually a songbird.",
        "FOL": "∀x (Bird(x) ∧ SingsInTheMorning(x) ∧ HasFeathers(x) ∧ CanFly(x) → Songbird(x))"
    },
    {
        "NL": "Nobody in the conference knows either Johnson or Smith.",
        "FOL": "¬∃x (Person(x) ∧ InConference(x) ∧ (Know(x, johnson) ∨ Know(x, smith)))"
    },
    {
        "NL": "Mars is smaller than Earth, but larger than Mercury.",
        "FOL": "∀x ∀y ∀z (Mars(x) ∧ Earth(y) ∧ Mercury(z) → (SmallerThan(x, y) ∧ LargerThan(x, z)))"
    },
    {
        "NL": "A car is classified as vintage if it was made before 1950.",
        "FOL": "∀y (Car(y) ∧ MadeBeforeNineteenfifty(y) → Vintage(y))"
    },
    {
        "NL": "A bakery produces baked goods such as bread, pastries, and cakes using ovens and other equipment.",
        "FOL": "∀x (Bakery(x) ↔ (ProducesBakedGoods(x) ∧ Bread(x) ∧ Pastries(x) ∧ Cakes(x) ∧ UsesOvens(x)))"
    },
    {
        "NL": "An individual can become a licensed driver after passing a written test and a practical driving test.",
        "FOL": "∀x (PassedWrittenTest(x) ∧ PassedPracticalTest(x) → LicensedDriver(x))"
    },
    {
        "NL": "An electronic device is portable if it has a compact size and is lightweight, but not if it is immobile.",
        "FOL": "∀x (ElectronicDevice(x) → (Portable(x) ↔ (CompactSize(x) ∧ Lightweight(x) ∧ ¬Immobile(x))))"
    },
    {
        "NL": "There exists a black cat and there exists a white dog.",
        "FOL": "∃x (Black(x) ∧ Cat(x)) ∧ ∃x (White(x) ∧ Dog(x))"
    },
    {
        "NL": "A store is open on weekends if it operates on Saturdays or Sundays but not both.",
        "FOL": "∀x (Store(x) → (OpenOnWeekends(x) ↔ (OperatesOnSaturday(x) ⊕ OperatesOnSunday(x))))"
    },
    {
        "NL": "A violin is played with a bow, and a trumpet is played by blowing air into it.",
        "FOL": "∀x∀y (Violin(x) ∧ Trumpet(y) → (PlayedWithBow(x) ∧ PlayedByBlowingAir(y)))"
    },
    {
        "NL": "A student is diligent if they attend classes regularly, submit assignments on time, and actively participate in discussions.",
        "FOL": "∀x (Student(x) ∧ RegularAttendance(x) ∧ TimelyAssignments(x) ∧ ActiveParticipation(x) → Diligent(x))"
    },
    {
        "NL": "A building that provides temporary accommodations, offers various amenities such as breakfast, and is typically smaller than a hotel is a bed and breakfast.",
        "FOL": "∀x (Building(x) ∧ ProvidesTemporaryAccommodations(x) ∧ OffersAmenities(x) ∧ TypicallySmallerThanHotel(x) → BedAndBreakfast(x))"
    },
    {
        "NL": "A bird that can mimic various sounds, communicate through vocalizations, and is known for its complex songs is called a songbird.",
        "FOL": "∀x (Bird(x) ∧ MimicsSounds(x) ∧ CommunicatesThroughVocalizations(x) ∧ KnownForComplexSongs(x) → Songbird(x))"
    },
    {
        "NL": "There isn't a politician who disagrees with all conservative policies.",
        "FOL": "¬∃x (Politician(x) ∧ ∀y (Conservative(y) ∧ Policy(y) → DisagreesWith(x, y)))"
    },
    {
        "NL": "An arthropod with eight legs belongs to the class Arachnida.",
        "FOL": "∀x (Arthropod(x) ∧ HasEightLegs(x) → ClassArachnida(x))"
    },
    {
        "NL": "A teacher instructs students.",
        "FOL": "∃x ∃y (Teacher(x) ∧ Student(y) ∧ Instructs(x, y))"
    },
    {
        "NL": "An athlete who participates in marathons is a long-distance runner.",
        "FOL": "∀x (ParticipatesInMarathons(x) → LongDistanceRunner(x))"
    },
    {
        "NL": "A galaxy has a diverse range of celestial bodies if it includes stars, planets, and comets with differing characteristics.",
        "FOL": "∀x (Galaxy(x) ∧ ∃y ∃z ∃w (Star(y) ∧ Planet(z) ∧ Comet(w) ∧ DifferingCharacteristics(y, z, w) ∧ Includes(x, y, z, w)) → HasDiverseRangeOfCelestialBodies(x))"
    },
    {
        "NL": "Every apple is green, but not every green object is apple.",
        "FOL": "∀x (Apple(x) → Green(x)) ∧ ¬∀x (Green(x) → Apple(x))"
    },
    {
        "NL": "A work of literature that tells a story, has well-developed characters, and a clear narrative structure is a novel.",
        "FOL": "∀x (WorkOfLiterature(x) ∧ TellsAStory(x) ∧ WellDevelopedCharacters(x) ∧ ClearNarrativeStructure(x) → Novel(x))"
    },
    {
        "NL": "If all dogs are mammals, there exists a bone that all cats play with it.",
        "FOL": "∀x (Dog(x) → Mammal(x)) → ∃y (Bone(y) ∧ ∀z (Cat(z) → PlaysWith(z, y)))"
    },
    {
        "NL": "A painting can achieve awards for best use of color, best concept, or best medium, but not all three together.",
        "FOL": "∀x (Painting(x) ∧ AchieveAwards(x) → (BestUseofColor(x) ⊕ BestConcept(x) ⊕ BestMedium(x)))"
    },
    {
        "NL": "There are programmers who are neither lazy nor inexperienced.",
        "FOL": "∃x (Programmer(x) ∧ ¬(Lazy(x) ∨ Inexperienced(x)))"
    },
    {
        "NL": "There exists a dense forest, and there exists a wide river.",
        "FOL": "∃x (Dense(x) ∧ Forest(x)) ∧ ∃y (Wide(y) ∧ River(y))"
    },
    {
        "NL": "An educational institution becomes accredited when it meets established quality standards, undergoes regular evaluations by an accrediting agency, and is recognized as delivering an acceptable level of education.",
        "FOL": "∀x (EducationalInstitution(x) ∧ MeetsQualityStandards(x) ∧ UndergoesRegularEvaluationsByAgency(x) ∧ RecognizedForAcceptableLevelOfEducation(x) → Accredited(x))"
    },
    {
        "NL": "A city with efficient public transportation and low crime rates is a better place to live than a city without these characteristics.",
        "FOL": "∀x ∀y (City(x) ∧ City(y) ∧ EfficientPublicTransport(x) ∧ LowCrimeRate(x) ∧ (¬EfficientPublicTransport(y) ∨ ¬LowCrimeRate(y)) → BetterPlaceToLive(x, y))"
    },
    {
        "NL": "A meal is satisfying if it is well-balanced and has a variety of flavors or textures, but not if it is excessively spicy or contains ingredients to which someone is allergic.",
        "FOL": "∀x∀y (Meal(x) ∧ WellBalanced(x) ∧ (VarietyOfFlavors(x) ∨ VarietyOfTextures(x)) ∧ ¬ExcessivelySpicy(x) ∧ ¬ContainsAllergenicIngredients(x, y) → Satisfying(x, y))"
    },
    {
        "NL": "A musical piece composed in a major key typically sounds happy, while one composed in a minor key often sounds sad.",
        "FOL": "∀x (MajorKey(x) → HappySound(x)) ∧ ∀y (MinorKey(y) → SadSound(y))"
    },
    {
        "NL": "A farm grows crops, raises livestock, and employs farmworkers to tend to the animals and plants.",
        "FOL": "∀x ∀y ∀z (Farm(x) ∧ (Crop(y) ∨ Livestock(y)) ∧ Farmworker(z) → (Grows(x, y) ∧ Raises(x, y) ∧ Employs(x, z) ∧ TendsTo(z, animals_and_plants)))"
    },
    {
        "NL": "A molecule consists of two or more atoms bonded together.",
        "FOL": "∀x (Molecule(x) ↔ ∃y ∃z (Atom(y) ∧ Atom(z) ∧ BondedTogether(x, y, z)))"
    },
    {
        "NL": "Deer and rabbits annoy Miss Davis.",
        "FOL": "∀x ((Deer(x) ∨ Rabbit(x)) → Annoy(x, missdavis))"
    },
    {
        "NL": "None but the quick deserves the rewards.",
        "FOL": "∀x (¬Quick(x) → ¬DeserveReward(x))"
    },
    {
        "NL": "A fish is swimming in the pond, and a frog is croaking at the bank.",
        "FOL": "∃x ∃y (Fish(x) ∧ Pond(y) ∧ SwimmingIn(x, y)) ∧ ∃z (Frog(z) ∧ Croaking(z) ∧ AtBank(z))"
    },
    {
        "NL": "A person is considered a dentist if they diagnose, treat, and prevent oral health issues, often in a dental office setting.",
        "FOL": "∀x (Person(x) ∧ DiagnoseTreatAndPreventOralHealthIssues(x) ∧ OftenInDentalOfficeSetting(x) → Dentist(x))"
    },
    {
        "NL": "In a healthy ecosystem, predators keep the prey population in check.",
        "FOL": "∀x∀y∀z (HealthyEcosystem(x) ∧ Predator(y) ∧ Prey(z) ∧ In(y, x) ∧ In(z, x) → KeepsPopulationInCheck(y, z))"
    },
    {
        "NL": "Factories manufacture goods from raw materials, employing workers to operate machinery.",
        "FOL": "∀x∀y∀z (Factory(x) ∧ RawMaterial(y) ∧ Worker(z) → (ManufacturesGoods(x, y) ∧ Employs(x, z) ∧ OperatesMachinery(z)))"
    },
    {
        "NL": "A tool is either manual or electric if it isn't software-based.",
        "FOL": "∀x (Tool(x) ∧ ¬SoftwareBased(x) → (Manual(x) ∨ Electric(x)))"
    },
    {
        "NL": "There exists a king that all queens bow to if each castle is not ancient.",
        "FOL": "¬∀x (Castle(x) → Ancient(x)) → ∃y (King(y) ∧ ∀z (Queen(z) → BowTo(z, y)))"
    },
    {
        "NL": "A medical procedure is considered invasive if it involves entry into the body through an incision.",
        "FOL": "∀x (MedicalProcedure(x) ∧ EntryThroughIncision(x) → Invasive(x))"
    },
    {
        "NL": "Some tools are for crafting, while others are for repair.",
        "FOL": "∀x (Tool(x) → ForCrafting(x) ⊕ ForRepair(x))"
    },
    {
        "NL": "All scientists who have collaborated with at least one researcher, who in turn never won a scientific prize, have either published more than five papers or lectured at all science conferences.",
        "FOL": "∀x (Scientist(x) ∧ ∃y (Researcher(y) ∧ ¬WonScientificPrize(y) ∧ CollaboratedWith(x, y)) → (PublishedMoreThanFivePapers(x) ∨ ∀z (ScienceConferences(z) → Lectured(x, z))))"
    },
    {
        "NL": "A book can be a novel, a biography, or a textbook.",
        "FOL": "∀x (Book(x) → (Novel(x) ∨ Biography(x) ∨ Textbook(x)))"
    },
    {
        "NL": "There isn't a scholar who has read every novel.",
        "FOL": "¬∃x (Scholar(x) ∧ ∀y (Novel(y) → Read(x, y)))"
    },
    {
        "NL": "A book can be written in different languages, such as English, Spanish, or French.",
        "FOL": "∀x ∀y (Book(x) ∧ (English(y) ∨ Spanish(y) ∨ French(y)) → WrittenInLanguage(x, y))"
    },
    {
        "NL": "In the solar system, Earth is closer to the Sun than Mars.",
        "FOL": "CloserToSun(Earth, Mars)"
    },
    {
        "NL": "A person is considered a travel agent if they plan, book, and arrange travel accommodations for clients.",
        "FOL": "∀x (Person(x) ∧ PlansTravel(x) ∧ BooksTravelAccommodations(x) ∧ ArrangesTravelForClients(x) → TravelAgent(x))"
    },
    {
        "NL": "A healthy diet includes a variety of fruits and vegetables, whole grains, and lean proteins, without excessive sugar or unhealthy fats.",
        "FOL": "∀x (Diet(x) → ((FruitsAndVegetables(x) ∧ WholeGrains(x) ∧ LeanProteins(x) ∧ ¬ExcessiveSugar(x) ∧ ¬UnhealthyFats(x)) → Healthy(x)))"
    },
    {
        "NL": "An instructor who has trained a pupil without any scholarship, either has written more than ten books or mentors all Master’s students.",
        "FOL": "∀x (Instructor(x) ∧ ∃y (Pupil(y) ∧ ¬HasScholarship(y) ∧ Trained(x, y)) → (WrittenMoreThanTenBooks(x) ∨ ∀z (MastersStudent(z) → Mentors(x, z))))"
    },
    {
        "NL": "It is not necessarily true that an entity is a huge pyramid if and only if it is brown.",
        "FOL": "¬∀x (Huge(x) ∧ Pyramid(x) ↔ Brown(x))"
    },
    {
        "NL": "An airplane travels through the air by generating lift from its wings and propulsion from its engines.",
        "FOL": "∀x (Airplane(x) → (TravelsThroughAir(x) ∧ GeneratesLiftFromWings(x) ∧ PropulsionFromEngines(x)))"
    },
    {
        "NL": "Artists create artworks for art lovers, and curators exhibit them.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ ArtLover(y) ∧ Curator(z) → CreatesArtwork(x, y) ∧ Exhibits(z, y))"
    },
    {
        "NL": "Some roads are paved, while others are unpaved.",
        "FOL": "∃x∃y (Road(x) ∧ Road(y) ∧ Paved(x) ∧ ¬Paved(y))"
    },
    {
        "NL": "A square is yellow or blue, but not both.",
        "FOL": "∀x (Square(x) → (Yellow(x) ⊕ Blue(x)))"
    },
    {
        "NL": "A building can be a museum or a library but not both.",
        "FOL": "∀x (Building(x) → (Museum(x) ⊕ Library(x)))"
    },
    {
        "NL": "A vehicle is an electric vehicle if it is powered by an electric motor, uses batteries to store energy, and does not rely on fossil fuels.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricMotor(x) ∧ UsesBatteries(x) ∧ ¬ReliesOnFossilFuels(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A computer program is efficient if it runs with minimal resource consumption.",
        "FOL": "∀x (ComputerProgram(x) ∧ MinimalResourceConsumption(x) → Efficient(x))"
    },
    {
        "NL": "A movie can be a horror, filled with frightening scenes, and depict a chilling narrative, or it can be a comedy, structured around humorous incidents, and gain widespread popularity.",
        "FOL": "∀x (Movie(x) → ((Horror(x) ∧ FrighteningScenes(x) ∧ ChillingNarrative(x)) ⊕ (Comedy(x) ∧ HumorousIncidents(x) ∧ WidespreadPopularity(x))))"
    },
    {
        "NL": "A geographical feature x is a mountain if it has a high elevation, steep slopes, and is formed by geological processes such as tectonic forces or volcanic activity.",
        "FOL": "∀x (GeographicalFeature(x) ∧ HighElevation(x) ∧ SteepSlopes(x) ∧ (TectonicForces(x) ∨ VolcanicActivity(x)) → Mountain(x))"
    },
    {
        "NL": "Every student is either freshman or sophomore, but not both.",
        "FOL": "∀x (Student(x) → (Freshman(x) ⊕ Sophomore(x)))"
    },
    {
        "NL": "Every person is either a student or a teacher, but it cannot be both.",
        "FOL": "∀x (Person(x) → (Student(x) ⊕ Teacher(x)))"
    },
    {
        "NL": "Forests comprise various trees, and trees provide habitats for insects, birds, and mammals.",
        "FOL": "∀x∀y∀z∀w (Forest(x) ∧ Tree(y) ∧ Insect(z) ∧ (Bird(w) ∨ Mammal(w)) → (Comprises(x, y) ∧ ProvidesHabitat(y, z) ∧ ProvidesHabitat(y, w)))"
    },
    {
        "NL": "A company can be a nonprofit, a small enterprise, or a multinational corporation.",
        "FOL": "∀x (Company(x) → (Nonprofit(x) ∨ SmallEnterprise(x) ∨ MultinationalCorporation(x)))"
    },
    {
        "NL": "A national park is home to various species of plants, such as trees, flowers, and shrubs, and animals, like birds, mammals, and reptiles.",
        "FOL": "∀x∀y∀z (NationalPark(x) ∧ (PlantSpecies(y) ∨ AnimalSpecies(y)) ∧ (Trees(z) ∨ Flowers(z) ∨ Shrubs(z) ∨ Birds(z) ∨ Mammals(z) ∨ Reptiles(z)) → HomeToSpecies(x, y, z))"
    },
    {
        "NL": "A film is suitable for children if it contains no violence or explicit content, and has a rating of G or PG.",
        "FOL": "∀x (Film(x) ∧ ¬Violence(x) ∧ ¬ExplicitContent(x) ∧ (RatingG(x) ∨ RatingPG(x)) → SuitableForChildren(x))"
    },
    {
        "NL": "Any bird that has blue feathers and can fly is a blue jay.",
        "FOL": "∀x (Bird(x) ∧ HasBlueFeathers(x) ∧ CanFly(x) → BlueJay(x))"
    },
    {
        "NL": "Every phone that is slim and powerful is not inexpensive, or it's inexpensive but not slim and powerful.",
        "FOL": "∀x (Phone(x) → ((Slim(x) ∧ Powerful(x) ∧ ¬Inexpensive(x)) ⊕ (Inexpensive(x) ∧ ¬(Slim(x) ∧ Powerful(x)))))"
    },
    {
        "NL": "A country thrives when it maintains political stability, fosters social cohesion, and ensures economic growth.",
        "FOL": "∀x (Country(x) ∧ PoliticalStability(x) ∧ SocialCohesion(x) ∧ EconomicGrowth(x) → Thrives(x))"
    },
    {
        "NL": "In a play, actors perform on stage, while the audience watches from their seats.",
        "FOL": "∀x∀y (PlayParticipant(x) ∧ PlayParticipant(y) → ((Actor(x) → PerformsOnStage(x)) ∧ (Audience(y) → WatchesFromSeats(y))))"
    },
    {
        "NL": "A game engages players with captivating graphics and challenging gameplay.",
        "FOL": "∀x (Game(x) ∧ CaptivatingGraphics(x) ∧ ChallengingGameplay(x) → EngagesPlayers(x))"
    },
    {
        "NL": "If a person is a cinematographer, they capture visual images for movies or television.",
        "FOL": "∀x (Cinematographer(x) → CapturesVisualImagesForMoviesOrTelevision(x))"
    },
    {
        "NL": "A room is comfortable if it's spacious and has proper ventilation.",
        "FOL": "∀x (Room(x) ∧ Comfortable(x) → (Spacious(x) ∧ ProperVentilation(x)))"
    },
    {
        "NL": "Some creatures are either unicorns or dragons.",
        "FOL": "∃x (Creature(x) ∧ (Unicorn(x) ⊕ Dragon(x)))"
    },
    {
        "NL": "A toy can be either a stuffed animal or a puzzle.",
        "FOL": "∀x (Toy(x) → StuffedAnimal(x) ⊕ Puzzle(x))"
    },
    {
        "NL": "It's not true that all games are exciting.",
        "FOL": "¬∀x (Game(x) → Exciting(x))"
    },
    {
        "NL": "All dogs are either small or quiet.",
        "FOL": "∀x (Dog(x) → (Small(x) ⊕ Quiet(x)))"
    },
    {
        "NL": "Fruits that grow on trees and have a hard seed are classified as stone fruits.",
        "FOL": "∀x (Fruit(x) ∧ GrowsOnTrees(x) ∧ HasHardSeed(x) → StoneFruit(x))"
    },
    {
        "NL": "A literary work that is written in verse, has a rhythmic structure, and uses metaphorical language is a poem.",
        "FOL": "∀x (LiteraryWork(x) ∧ WrittenInVerse(x) ∧ RhythmicStructure(x) ∧ UsesMetaphoricalLanguage(x) → Poem(x))"
    },
    {
        "NL": "A vehicle is autonomous if it uses sensors and AI instead of a human driver.",
        "FOL": "∀x (Vehicle(x) ∧ UsesSensors(x) ∧ UsesAI(x) ∧ ¬UsesHumanDriver(x) → AutonomousVehicle(x))"
    },
    {
        "NL": "A well-maintained road network promotes smooth traffic flow, reduces the risk of accidents, and facilitates efficient transportation.",
        "FOL": "∀x (WellMaintainedRoadNetwork(x) → (PromotesSmoothTrafficFlow(x) ∧ ReducesRiskOfAccidents(x) ∧ FacilitatesEfficientTransportation(x)))"
    },
    {
        "NL": "Sophia and Noah admire all humans.",
        "FOL": "∀x (Human(x) → Admire(sophia, x) ∧ Admire(noah, x))"
    },
    {
        "NL": "Every triangle is small.",
        "FOL": "∀z (Triangle(z) → Small(z))"
    },
    {
        "NL": "An innovative transportation policy encourages the adoption of electric vehicles, expansion of public transit networks, and investment in cycling infrastructure to reduce traffic congestion and lower greenhouse gas emissions.",
        "FOL": "∀x∀y (InnovativeTransportationPolicy(x) ∧ AdoptionOfElectricVehicles(x) ∧ ExpansionOfPublicTransitNetworks(y) ∧ InvestmentInCyclingInfrastructure(x) → (ReducesTrafficCongestion(x) ∧ LowersGreenhouseGasEmissions(x)))"
    },
    {
        "NL": "Tom is a scientist if and only if he is not an artist.",
        "FOL": "Scientist(tom) ↔ ¬Artist(tom)"
    },
    {
        "NL": "If an employee is efficient, then he is more productive and has better work quality.",
        "FOL": "∀x (Employee(x) ∧ Efficient(x) → MoreProductive(x) ∧ BetterWorkQuality(x))"
    },
    {
        "NL": "A refrigerator cools items inside by removing heat from them.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ ItemInside(x, y) → Cools(x, y))"
    },
    {
        "NL": "A restaurant serves vegan food if all its dishes are free from animal products and not cooked in animal-derived fats.",
        "FOL": "∀x (Restaurant(x) → ((∀y (Dish(x, y) → FreeFromAnimalProducts(y) ∧ ¬CookedInAnimalDerivedFats(y))) ↔ ServesVeganFood(x)))"
    },
    {
        "NL": "A passenger boards a connecting flight if they arrive at the airport, complete the necessary security checks, and reach the boarding gate before the departure time.",
        "FOL": "∀x ∀y ∀z (Passenger(x) ∧ Airport(y) ∧ Flight(z) ∧ ArrivesAtAirport(x, y) ∧ CompletesSecurityChecks(x, y) ∧ ReachesBoardingGateBeforeDeparture(x, z) → BoardsConnectingFlight(x, y, z))"
    },
    {
        "NL": "A telescope is used to observe celestial bodies such as planets, stars, and galaxies.",
        "FOL": "∀x∀y (Telescope(x) ∧ (Planet(y) ∨ Star(y) ∨ Galaxy(y)) → Observes(x, y))"
    },
    {
        "NL": "A machine is operational if it functions properly and requires no repairs.",
        "FOL": "∀x (Machine(x) ∧ FunctionsProperly(x) ∧ ¬RequiresRepairs(x) → Operational(x))"
    },
    {
        "NL": "Fungi decompose organic matter, breaking it down into simpler compounds.",
        "FOL": "∀x∀y (Fungus(x) ∧ OrganicMatter(y) → DecomposesIntoSimplerCompounds(x, y))"
    },
    {
        "NL": "A bird can fly, swim, or walk, and typically has feathers, wings, and a beak.",
        "FOL": "∀x (Bird(x) → ((Fly(x) ∨ Swim(x) ∨ Walk(x)) ∧ Feathers(x) ∧ Wings(x) ∧ Beak(x)))"
    },
    {
        "NL": "A town is considered peaceful if it has a low crime rate and either a vigilant neighborhood watch or active citizen participation.",
        "FOL": "∀x (Town(x) ∧ HasLowCrimeRate(x) ∧ (HasVigilantNeighborhoodWatch(x) ∨ HasActiveCitizenParticipation(x)) → Peaceful(x))"
    },
    {
        "NL": "A person is considered a dancer if they perform dance routines.",
        "FOL": "∀x (Dancer(x) ↔ PerformsDanceRoutines(x))"
    },
    {
        "NL": "All students are not necessarily hardworking.",
        "FOL": "¬∀x (Student(x) → Hardworking(x))"
    },
    {
        "NL": "Every bird that sings does not lack feathers.",
        "FOL": "∀x (Bird(x) → (Sing(x) → ¬LackFeathers(x)))"
    },
    {
        "NL": "A person is a doctor if they have completed medical school and possess a license to practice medicine.",
        "FOL": "∀x (Person(x) ∧ CompletedMedicalSchool(x) ∧ HasMedicalLicense(x) → Doctor(x))"
    },
    {
        "NL": "A movie has a thrilling plot, a talented cast, and an acclaimed director.",
        "FOL": "∃x (Movie(x) ∧ ThrillingPlot(x) ∧ TalentedCast(x) ∧ AcclaimedDirector(x))"
    },
    {
        "NL": "A scientific discovery is groundbreaking if it challenges existing theories or opens up new areas of research, and has a broad impact.",
        "FOL": "∀x (ScientificDiscovery(x) → (Groundbreaking(x) ↔ ((ChallengesTheories(x) ∨ OpensNewResearchAreas(x)) ∧ BroadImpact(x))))"
    },
    {
        "NL": "A painter creates a painting, the artwork is displayed in a gallery, and it is admired by visitors.",
        "FOL": "∀x∀y∀z∀w (Painter(x) ∧ Painting(y) ∧ Gallery(z) ∧ Visitor(w) → (Creates(x, y) ∧ DisplayedIn(y, z) ∧ AdmiredBy(y, w)))"
    },
    {
        "NL": "Wolves howl, while birds chirp.",
        "FOL": "∀x∀y (Wolf(x) ∧ Bird(y) → (Howls(x) ∧ Chirps(y)))"
    },
    {
        "NL": "A smartphone is a portable device that combines communication and computing functions, while a tablet is a larger device with a touch screen primarily used for media consumption and light productivity tasks.",
        "FOL": "∀x∀y (Smartphone(x) ∧ Tablet(y) → (PortableDevice(x) ∧ CombinesCommunicationAndComputing(x)) ∧ (LargerDeviceWithTouchScreen(y) ∧ MediaConsumptionAndLightProductivity(y)))"
    },
    {
        "NL": "Trees in a forest provide a habitat for various species, absorb carbon dioxide, and contribute to the stability of the soil through their root systems.",
        "FOL": "∀x (Tree(x) ∧ InForest(x) → (ProvidesHabitat(x) ∧ AbsorbsCarbonDioxide(x) ∧ ContributesToSoilStability(x)))"
    },
    {
        "NL": "Pianos have keys, and guitars have strings.",
        "FOL": "∀x ∀y (Piano(x) ∧ Guitar(y) → (HasKeyComponents(x) ∧ HasStringComponents(y)))"
    },
    {
        "NL": "A region with a cold climate, polar night conditions, and characterized by permafrost is part of the Arctic.",
        "FOL": "∀x (Region(x) ∧ ColdClimate(x) ∧ PolarNightConditions(x) ∧ CharacterizedByPermafrost(x) → PartOfArctic(x))"
    },
    {
        "NL": "A movie is a blockbuster if it generates high box office revenue and receives critical acclaim.",
        "FOL": "∀x (Movie(x) → ((HighBoxOfficeRevenue(x) ∧ CriticalAcclaim(x)) → Blockbuster(x)))"
    },
    {
        "NL": "If a vehicle is a car, it either uses petrol or diesel.",
        "FOL": "∀x (Vehicle(x) ∧ Car(x) → UsePetrol(x) ⊕ UseDiesel(x))"
    },
    {
        "NL": "A building with modern architecture and environmentally friendly materials is considered sustainable.",
        "FOL": "∀x (Building(x) ∧ ModernArchitecture(x) ∧ EnvironmentallyFriendlyMaterials(x) → Sustainable(x))"
    },
    {
        "NL": "All mammals have hair or fur at some stage in their life.",
        "FOL": "∀x (Mammal(x) → HasHair(x) ∨ HasFur(x))"
    },
    {
        "NL": "A type of holiday can be either religious or secular.",
        "FOL": "∀x (HolidayType(x) → Religious(x) ⊕ Secular(x))"
    },
    {
        "NL": "A camera captures images using a lens and stores them on a memory card.",
        "FOL": "∀x ∀y ∀z (Camera(x) ∧ Lens(y) ∧ MemoryCard(z) ∧ UsesLens(x, y) → (CapturesImages(x) ∧ StoresImages(x, z)))"
    },
    {
        "NL": "If a person is a detective, they investigate and solve criminal cases.",
        "FOL": "∀x (Detective(x) → (InvestigatesCriminalCases(x) ∧ SolvesCriminalCases(x)))"
    },
    {
        "NL": "A substance is considered a metal if it is solid, shiny, and conducts heat and electricity.",
        "FOL": "∀x (Substance(x) ∧ Solid(x) ∧ Shiny(x) ∧ ConductsHeat(x) ∧ ConductsElectricity(x) → Metal(x))"
    },
    {
        "NL": "An item is a skateboard when it is a wheeled platform, used for performing tricks or navigating urban terrain, and requires the rider to balance and maneuver the board by shifting their weight.",
        "FOL": "∀x (Item(x) ∧ WheeledPlatform(x) ∧ UsedForPerformingTricksOrNavigatingUrbanTerrain(x) ∧ RequiresRiderToBalanceAndManeuverByShiftingWeight(x) → Skateboard(x))"
    },
    {
        "NL": "An artwork fetches high price if it conveys a poignant message, displays superb craftmanship, and the artist is celebrated.",
        "FOL": "∀x (Artwork(x) ∧ ConveysPoignantMessage(x) ∧ DisplaysSuperbCraftmanship(x) ∧ HasCelebratedArtist(x) → FetchesHighPrice(x))"
    },
    {
        "NL": "Athletes are not always wealthy.",
        "FOL": "∃x (Athlete(x) ∧ ¬Wealthy(x))"
    },
    {
        "NL": "A machine operates when its lever is pulled or it has enough electricity.",
        "FOL": "∀x (Machine(x) ∧ (LeverPulled(x) ∨ HasEnoughElectricity(x)) → Operates(x))"
    },
    {
        "NL": "Every animal that is not cold nor hot is a fox if and only if it is orange.",
        "FOL": "∀x (¬Cold(x) ∧ ¬Hot(x) → (Fox(x) ↔ Orange(x)))"
    },
    {
        "NL": "A smartphone connects to a cellular network for voice calls and data services, to a Wi-Fi network for internet access, and uses GPS technology for location services.",
        "FOL": "∀x ∀y ∀z (Smartphone(x) ∧ (CellularNetwork(y) ∧ (ConnectsForVoiceCalls(x, y) ∧ ConnectsForDataServices(x, y))) ∧ (WiFiNetwork(z) ∧ ConnectsForInternetAccess(x, z)) ∧ (UsesGPSTechnology(x) ∧ LocationServices(x)))"
    },
    {
        "NL": "Books are typically printed on paper, whereas e-books are stored and read electronically.",
        "FOL": "∀x ∀y (Book(x) ∧ EBook(y) → (PrintedOnPaper(x) ∧ StoredElectronically(y) ∧ ReadElectronically(y)))"
    },
    {
        "NL": "No artist paints all the murals.",
        "FOL": "¬∃x (Artist(x) → ∀y (Mural(y) → Paints(x, y)))"
    },
    {
        "NL": "A squirrel is climbing on a fence, while a cat is sleeping on the porch.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Fence(y) ∧ ClimbingOn(x, y)) ∧ ∃z (Cat(z) ∧ Sleeping(z) ∧ OnThePorch(z))"
    },
    {
        "NL": "A theater permits entry to guests with a reservation or those who have purchased a ticket in advance.",
        "FOL": "∀x ∀y (Theater(x) ∧ Guest(y) ∧ (HasReservation(y, x) ∨ PurchasedTicketInAdvance(y, x)) → PermitsEntry(x, y))"
    },
    {
        "NL": "All doctors diagnose illnesses and prescribe treatments.",
        "FOL": "∀x (Doctor(x) → (DiagnosesIllnesses(x) ∧ PrescribesTreatments(x)))"
    },
    {
        "NL": "A plant that grows in water and has a high tolerance for salt is adapted to live in saltwater habitats.",
        "FOL": "∀x∀y (Plant(x) ∧ GrowsInWater(x) ∧ HighToleranceForSalt(x) → AdaptedToSaltwaterHabitats(x, y))"
    },
    {
        "NL": "Planets in the solar system revolve around the sun, have a natural satellite, and some possess an atmosphere with various compositions.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ SolarSystem(y) ∧ NaturalSatellite(z) → RevolvesAroundSun(x, y) ∧ HasNaturalSatellite(x, z) ∧ (PossessesAtmosphereWithVariousCompositions(x) ∨ ¬PossessesAtmosphereWithVariousCompositions(x)))"
    },
    {
        "NL": "Countries with low unemployment rates and high GDP growth often have a strong economy.",
        "FOL": "∀x (Country(x) ∧ LowUnemploymentRate(x) ∧ HighGDPGrowth(x) → StrongEconomy(x))"
    },
    {
        "NL": "Either it is raining or it is snowing, but not both.",
        "FOL": "Raining(x) ⊕ Snowing(x)"
    },
    {
        "NL": "A machine is deemed an industrial machine if it requires human control, does complex tasks, and often automated processes.",
        "FOL": "∀x (Machine(x) → HumanControl(x) ∧ ComplexTasks(x) ∧ AutomatedProcesses(x) → IndustrialMachine(x))"
    },
    {
        "NL": "A device functions wirelessly if it can transmit and receive data without the need for physical connections.",
        "FOL": "∀x (Device(x) ∧ TransmitData(x) ∧ ReceiveData(x) ∧ ¬PhysicalConnection(x) → Wireless(x))"
    },
    {
        "NL": "Carnivorous animals consume meat, while herbivorous animals feed on plants.",
        "FOL": "∀x (Animal(x) → ((Carnivorous(x) ∧ ∀y (Meat(y) → Consumes(x, y))) ⊕ (Herbivorous(x) ∧ ∀z (Plant(z) → FeedsOn(x, z)))))"
    },
    {
        "NL": "A vacation spot is popular for tourists if it boasts beautiful scenery and a range of activities.",
        "FOL": "∀x (VacationSpot(x) ∧ BeautifulScenery(x) ∧ RangeOfActivities(x) → PopularForTourists(x))"
    },
    {
        "NL": "Certain beverages are either hot or cold, but not both.",
        "FOL": "∃x (Beverage(x) ∧ (Hot(x) ⊕ Cold(x)))"
    },
    {
        "NL": "An animal x is a predator of animal y if x hunts y for food and y is not a predator of x.",
        "FOL": "∀x ∀y (Animal(x) ∧ Animal(y) ∧ HuntsForFood(x, y) ∧ ¬HuntsForFood(y, x) → Predator(x, y))"
    },
    {
        "NL": "A book is enjoyable if it has an interesting narrative and relatable characters.",
        "FOL": "∀x (Book(x) ∧ InterestingNarrative(x) ∧ RelatableCharacters(x) → Enjoyable(x))"
    },
    {
        "NL": "A train arrives at its destination when it departs on time, maintains its speed, and does not encounter any delays.",
        "FOL": "∀x (Train(x) ∧ DepartsOnTime(x) ∧ MaintainsSpeed(x) ∧ ¬EncountersDelays(x) → ArrivesAtDestination(x))"
    },
    {
        "NL": "A container is a bottle if it is narrow-necked, cylindrical, and used to store liquids.",
        "FOL": "∀x (Container(x) ∧ NarrowNecked(x) ∧ Cylindrical(x) ∧ StoresLiquids(x) → Bottle(x))"
    },
    {
        "NL": "No dogs enjoy thunder.",
        "FOL": "∀x ∀y (Dog(x) ∧ Thunder(y) → ¬Enjoy(x, y))"
    },
    {
        "NL": "A bird is singing on the branch in the morning.",
        "FOL": "∃x ∃y (Bird(x) ∧ Branch(y) ∧ Singing(x, y) ∧ InTheMorning(x))"
    },
    {
        "NL": "A person who is a doctor or a nurse works in healthcare.",
        "FOL": "∀x ((Doctor(x) ∨ Nurse(x)) → WorksInHealthcare(x))"
    },
    {
        "NL": "A painting is a self-portrait if it illustrates the personal emotions of a distinct painter, created by the painter themselves.",
        "FOL": "∀x ∃y (Painting(x) ∧ Painter(y) ∧ IllustratesPersonalEmotions(x, y) ∧ CreatedBy(x, y) → SelfPortrait(x))"
    },
    {
        "NL": "A chemical reaction is endothermic if it absorbs heat from the surroundings, causing a decrease in temperature.",
        "FOL": "∀x (ChemicalReaction(x) ∧ AbsorbsHeat(x) ∧ DecreaseTemperature(x) → Endothermic(x))"
    },
    {
        "NL": "A course is informative if the instructor is knowledgeable and the material is well-organized.",
        "FOL": "∀x (Course(x) ∧ KnowledgeableInstructor(x) ∧ WellOrganizedMaterial(x) → Informative(x))"
    },
    {
        "NL": "Some materials are good conductors of heat, while others are poor conductors but efficient insulators.",
        "FOL": "∃x∃y (Material(x) ∧ GoodConductorOfHeat(x) ∧ Material(y) ∧ PoorConductorOfHeat(y) ∧ EfficientInsulator(y))"
    },
    {
        "NL": "A city is a popular tourist destination if it has beautiful scenery, cultural attractions, and good infrastructure, but not if it has high crime rates.",
        "FOL": "∀x (City(x) ∧ ((BeautifulScenery(x) ∧ CulturalAttractions(x) ∧ GoodInfrastructure(x)) ∧ ¬HighCrimeRates(x) → PopularTouristDestination(x)))"
    },
    {
        "NL": "Bicycles rely on human power and have two wheels for transportation.",
        "FOL": "∀x (Bicycle(x) → (ReliesOnHumanPower(x) ∧ HasTwoWheels(x)))"
    },
    {
        "NL": "When a fire alarm detects smoke or fire, it emits a loud sound to alert occupants of a potential danger.",
        "FOL": "∀x (FireAlarm(x) ∧ DetectsSmokeOrFire(x) → EmitsLoudSound(x))"
    },
    {
        "NL": "If a student is friendly, then that student is approachable.",
        "FOL": "∀x (Student(x) ∧ Friendly(x) → Approachable(x))"
    },
    {
        "NL": "An email is marked as spam if it contains phishing links, has an unknown sender, or its content has a high percentage of promotional keywords.",
        "FOL": "∀x ∀y ∀z (Email(x) ∧ PhishingLinks(x, y) ∧ UnknownSender(x) ∧ HighPercentagePromotionalKeywords(x, z) → MarkedAsSpam(x))"
    },
    {
        "NL": "Every musician who inspires a singer will be inspired by a drummer.",
        "FOL": "∀x ∃y (Musician(x) ∧ Singer(y) ∧ Inspire(x, y) → ∃z (Drummer(z) ∧ WillInspire(z, x)))"
    },
    {
        "NL": "A plant is suitable for an indoor environment if it requires low light, needs little water, and has air-purifying properties.",
        "FOL": "∀x ∀y ∀z (Plant(x) ∧ IndoorEnvironment(y) ∧ Light(z) ∧ RequiresLowLight(x, z) ∧ NeedsLittleWater(x) ∧ AirPurifying(x) → SuitableForIndoor(x, y))"
    },
    {
        "NL": "A university offers a degree program in a subject if there are enough qualified faculty members and adequate resources.",
        "FOL": "∀x∀y (University(x) ∧ Subject(y) → (OffersDegreeProgram(x, y) ↔ (EnoughQualifiedFaculty(x, y) ∧ AdequateResources(x, y))))"
    },
    {
        "NL": "If an appliance is energy-efficient, easy to use, and durable, it is likely to be popular among consumers.",
        "FOL": "∀x (Appliance(x) ∧ EnergyEfficient(x) ∧ EasyToUse(x) ∧ Durable(x) → LikelyPopularAmongConsumers(x))"
    },
    {
        "NL": "A telescope is used to observe celestial objects, while a microscope is for examining tiny specimens.",
        "FOL": "∀x (Telescope(x) → ObservesCelestialObjects(x)) ∧ ∀y (Microscope(y) → ExaminesTinySpecimens(y))"
    },
    {
        "NL": "Animals that hibernate during winter store energy in the form of fat to survive the cold season.",
        "FOL": "∀x (Animal(x) ∧ HibernateDuringWinter(x) → StoreEnergyAsFat(x))"
    },
    {
        "NL": "A smartphone app is useful if it helps users accomplish tasks, is easy to use, and has a clean interface.",
        "FOL": "∀x ∀y ∀z (SmartphoneApp(x) ∧ Task(y) ∧ Interface(z) ∧ HelpsAccomplishTasks(x, y) ∧ EasyToUse(x) ∧ CleanInterface(x, z) → Useful(x))"
    },
    {
        "NL": "A person is considered a chef if they are trained to prepare and cook food in a professional kitchen.",
        "FOL": "∀x (Person(x) ∧ TrainedToPrepareFood(x) ∧ TrainedToCookFood(x) ∧ WorksInProfessionalKitchen(x) → Chef(x))"
    },
    {
        "NL": "A job position can be full-time or part-time, but not both at once.",
        "FOL": "∀x (JobPosition(x) → (FullTime(x) ⊕ PartTime(x)))"
    },
    {
        "NL": "Nothing is a purple circle.",
        "FOL": "¬∃x (Circle(x) ∧ Purple(x))"
    },
    {
        "NL": "A flat, thin, round object made of metal or plastic, typically used for storing and playing recorded music or video, is a disc.",
        "FOL": "∀x (FlatThinRoundObject(x) ∧ (Metal(x) ∨ Plastic(x)) ∧ StoresAndPlaysRecordings(x) → Disc(x))"
    },
    {
        "NL": "A healthy diet consisting of a variety of fruits, vegetables, whole grains, and lean proteins promotes overall well-being and reduces the risk of chronic diseases.",
        "FOL": "∀x (HealthyDiet(x) ∧ ContainsVarietyOfFruitsVegetablesWholeGrainsLeanProteins(x) → PromotesWellBeingAndReducesRiskOfChronicDiseases(x))"
    },
    {
        "NL": "Maria is a doctor if and only if she is a nurse.",
        "FOL": "Doctor(maria) ↔ Nurse(maria)"
    },
    {
        "NL": "A material is either magnetic or non-magnetic, but not both.",
        "FOL": "∀x (Material(x) ∧ (Magnetic(x) ⊕ NonMagnetic(x)))"
    },
    {
        "NL": "A drink is classified as an alcoholic beverage if it contains ethanol and has a fermentation process in its production.",
        "FOL": "∀x (Drink(x) ∧ ContainsEthanol(x) ∧ FermentationProcess(x) → AlcoholicBeverage(x))"
    },
    {
        "NL": "A book is either fiction or non-fiction, but not both.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "Every scientist who researches daily makes significant discoveries.",
        "FOL": "∀x (Scientist(x) ∧ ResearchesDaily(x) → MakesSignificantDiscoveries(x))"
    },
    {
        "NL": "A doctor diagnoses diabetes or hypertension.",
        "FOL": "∀x (Doctor(x) → DiagnosesDiabetes(x) ∨ DiagnosesHypertension(x))"
    },
    {
        "NL": "Children learn faster and adapt quickly.",
        "FOL": "∀x (Child(x) → (LearnsFaster(x) ∧ AdaptsQuickly(x)))"
    },
    {
        "NL": "Cats meow, while dogs bark.",
        "FOL": "∀x∀y (Cat(x) ∧ Dog(y) → (Meows(x) ∧ Barks(y)))"
    },
    {
        "NL": "A student must pass the final exam and complete the course assignments to earn a passing grade.",
        "FOL": "∀x∀c (Student(x) ∧ Course(c) → (PassesFinalExam(x, c) ∧ CompletesAssignments(x, c) → EarnsPassingGrade(x, c)))"
    },
    {
        "NL": "Tropical storms become hurricanes when their wind speeds exceed a certain threshold.",
        "FOL": "∀x (TropicalStorm(x) ∧ WindSpeed(x, s) ∧ ExceedsThreshold(s) → Hurricane(x))"
    },
    {
        "NL": "A parachute is a device that slows the descent of an object through the atmosphere by creating drag.",
        "FOL": "∀x (Parachute(x) → (Device(x) ∧ SlowsDescent(x) ∧ OfObject(x) ∧ ThroughAtmosphere(x) ∧ CreatesDrag(x)))"
    },
    {
        "NL": "Fish live in water and breathe through gills.",
        "FOL": "∀x (Fish(x) → (LivesIn(x, water) ∧ BreathesThrough(x, gills)))"
    },
    {
        "NL": "Some rivers are both navigable and sources of drinking water.",
        "FOL": "∃x (River(x) ∧ Navigable(x) ∧ SourceOfDrinkingWater(x))"
    },
    {
        "NL": "A rectangle is a parallelogram with all angles equal to 90 degrees.",
        "FOL": "∀x (Rectangle(x) ↔ (Parallelogram(x) ∧ ∀y (AngleIn(x, y) → RightAngle(y))))"
    },
    {
        "NL": "A scientist performs experiments, which sometimes yield unexpected results, whereas other times they confirm existing theories.",
        "FOL": "∀x (Scientist(x) → (PerformsExperiments(x) ∧ (∃y (Experiment(y) ∧ (YieldsUnexpectedResults(y) ⊕ ConfirmsExistingTheories(y))))))"
    },
    {
        "NL": "A library contains books, periodicals, and other materials for patrons to read, study, and borrow.",
        "FOL": "∀x (Library(x) ∧ Books(b) ∧ Periodicals(p) ∧ OtherMaterials(m) → ProvidesForReadingStudyingBorrowing(x, b, p, m))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains more than 0.5% alcohol by volume.",
        "FOL": "∀x (Beverage(x) ∧ ContainsAlcoholGreaterThan0_5PercentByVolume(x) → Alcoholic(x))"
    },
    {
        "NL": "A cake can be sweet, salty, or both sweet and salty.",
        "FOL": "∃x (Cake(x) ∧ (Sweet(x) ∨ Salty(x) ∨ (Sweet(x) ∧ Salty(x))))"
    },
    {
        "NL": "A snake is coiling on a rock, and a lizard is basking.",
        "FOL": "∃x ∃y (Snake(x) ∧ Rock(y) ∧ CoilingOn(x, y)) ∧ ∃z (Lizard(z) ∧ Basking(z))"
    },
    {
        "NL": "All doctors are not indifferent or careless.",
        "FOL": "∃x (Doctor(x) ∧ (¬Indifferent(x) ∨ ¬Careless(x)))"
    },
    {
        "NL": "A mammal can live in the ocean or on land, but not both at the same time.",
        "FOL": "∀x∀y (Mammal(x) ∧ (Ocean(y) ∨ Land(y)) → LiveIn(x, y) ⊕ ¬LiveIn(x, y))"
    },
    {
        "NL": "A room designed for relaxation, entertainment, and equipped with comfortable seating is a living room.",
        "FOL": "∀x (Room(x) ∧ DesignedForRelaxation(x) ∧ DesignedForEntertainment(x) ∧ HasComfortableSeating(x) → LivingRoom(x))"
    },
    {
        "NL": "A tool is a microscope when it is used to observe small objects at high magnification, relies on visible light or electrons for imaging, and serves various purposes in scientific research, medical diagnosis, or quality control.",
        "FOL": "∀x (Tool(x) ∧ UsedToObserveSmallObjectsAtHighMagnification(x) ∧ ReliesOnVisibleLightOrElectronsForImaging(x) ∧ ServesVariousPurposes(x, scientificResearch, medicalDiagnosis, qualityControl) → Microscope(x))"
    },
    {
        "NL": "Airplanes fly in the sky, while submarines travel underwater and cars drive on land.",
        "FOL": "∀x∀y∀z (Airplane(x) → FliesInSky(x)) ∧ (Submarine(y) → TravelsUnderwater(y)) ∧ (Car(z) → DrivesOnLand(z))"
    },
    {
        "NL": "An apple grows on trees, whereas a carrot grows underground.",
        "FOL": "∀x (Apple(x) → GrowsOnTrees(x)) ∧ ∀y (Carrot(y) → GrowsUnderground(y))"
    },
    {
        "NL": "In an ecosystem, predators prey on herbivores, and herbivores consume plants.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) ∧ Predator(y) ∧ Herbivore(z) → (PreysOn(y, z) ∧ ConsumesPlants(z)))"
    },
    {
        "NL": "A person is considered a translator if they convert written or spoken content from one language to another.",
        "FOL": "∀x (Translator(x) ↔ ConvertsContentBetweenLanguages(x))"
    },
    {
        "NL": "If a vehicle is electric, then it does not use gasoline and has a battery.",
        "FOL": "∀x (Vehicle(x) ∧ Electric(x) → ¬UsesGasoline(x) ∧ HasBattery(x))"
    },
    {
        "NL": "A leap year has 366 days and occurs every four years, except for years divisible by 100 but not divisible by 400.",
        "FOL": "∀x (Year(x) ∧ Days(x, 366) ∧ OccursEvery(x, 4) ∧ ¬(DivisibleBy(x, 100) ∧ ¬DivisibleBy(x, 400)) → LeapYear(x))"
    },
    {
        "NL": "All painters use brushes, but not all brush users are painters.",
        "FOL": "∀x (Painter(x) → UseBrush(x)) ∧ ∃y (UseBrush(y) ∧ ¬Painter(y))"
    },
    {
        "NL": "An object is a triangle if it is not round.",
        "FOL": "∀x (¬Round(x) → Triangle(x))"
    },
    {
        "NL": "Each swan likes water, but not all water likers are swans.",
        "FOL": "∀x (Swan(x) → LikesWater(x)) ∧ ¬∀x (LikesWater(x) → Swan(x))"
    },
    {
        "NL": "A tropical rainforest, characterized by high levels of rainfall and humidity, hosts a diverse range of plant and animal species, making it one of the most biologically rich ecosystems on Earth.",
        "FOL": "∀x (TropicalRainforest(x) → (HighLevelsOfRainfallAndHumidity(x) ∧ HostsDiverseRangeOfPlantAndAnimalSpecies(x) ∧ BiologicallyRichEcosystem(x)))"
    },
    {
        "NL": "Every song has lyrics, none has deeper lyrics than itself.",
        "FOL": "∀x ∃y (Has(x, y)) ∧ ¬∃z ∃w (Has(z, w) ∧ DeeperThan(w, z))"
    },
    {
        "NL": "A startup attracts investment if it demonstrates growth potential, has a strong team, and presents a viable business plan.",
        "FOL": "∀x∀y (Startup(x) ∧ Investment(y) → (AttractsInvestment(x, y) ↔ (GrowthPotential(x) ∧ StrongTeam(x) ∧ ViableBusinessPlan(x))))"
    },
    {
        "NL": "There exists a triangle facing all red squares.",
        "FOL": "∃x (Triangle(x) ∧ ∀y (Red(y) ∧ Square(y) → Facing(x, y)))"
    },
    {
        "NL": "Bicycles have two wheels.",
        "FOL": "∀x (Bicycle(x) → HasWheels(x, 2))"
    },
    {
        "NL": "An organism that belongs to the kingdom Fungi, reproduces by spores, and obtains nutrients by decomposing organic matter is a fungus.",
        "FOL": "∀x (Organism(x) ∧ BelongsToKingdomFungi(x) ∧ ReproducesBySpores(x) ∧ ObtainsNutrientsByDecomposingOrganicMatter(x) → Fungus(x))"
    },
    {
        "NL": "A fridge can keep food cold or frozen.",
        "FOL": "∀x (Fridge(x) → (KeepCold(x) ∨ KeepFrozen(x)))"
    },
    {
        "NL": "Nothing is a big square or a small hexagon.",
        "FOL": "¬∃x ((Big(x) ∧ Square(x)) ∨ (Small(x) ∧ Hexagon(x)))"
    },
    {
        "NL": "If Susan is a pilot then there are airplanes.",
        "FOL": "Pilot(susan) → ∃x (Airplane(x))"
    },
    {
        "NL": "A team wins a game if they score more points than their opponents.",
        "FOL": "∀x∀y∀z (Team(x) ∧ Game(y) ∧ Opponent(z) ∧ ScoresMorePoints(x, z, y) → Wins(x, y))"
    },
    {
        "NL": "Every artist creates something they visualize and visualizes something they do not create.",
        "FOL": "∀x (Artist(x) → ∃y (Visualize(x, y) ∧ Create(x, y)) ∧ ∃z (Visualize(x, z) ∧ ¬Create(x, z)))"
    },
    {
        "NL": "A library stores and lends books, magazines, and other media materials.",
        "FOL": "∀x∀y (Library(x) ∧ (Book(y) ∨ Magazine(y) ∨ MediaMaterial(y)) → (Stores(x, y) ∧ Lends(x, y)))"
    },
    {
        "NL": "A location is remote if it is far from cities and lacks transportation access.",
        "FOL": "∀x (Location(x) ∧ FarFromCities(x) ∧ ¬TransportationAccess(x) → Remote(x))"
    },
    {
        "NL": "Every sedan is a car, but not every car is a sedan.",
        "FOL": "∀x (Sedan(x) → Car(x)) ∧ ¬∀x (Car(x) → Sedan(x))"
    },
    {
        "NL": "A drone can take photos, record videos, and fly autonomously.",
        "FOL": "∀x (Drone(x) → TakePhotos(x) ∧ RecordVideos(x) ∧ FlyAutonomously(x))"
    },
    {
        "NL": "All chefs are meticulous and artistic.",
        "FOL": "∀x (Chef(x) → (Meticulous(x) ∧ Artistic(x)))"
    },
    {
        "NL": "A student graduates with honors if they maintain a high grade point average and complete additional academic requirements.",
        "FOL": "∀x (Student(x) ∧ HighGradePointAverage(x) ∧ CompletesAdditionalAcademicRequirements(x) → GraduatesWithHonors(x))"
    },
    {
        "NL": "A toy that is fun and educational is in demand, but not if it contains hazardous materials.",
        "FOL": "∀x (Toy(x) ∧ ((Fun(x) ∧ Educational(x)) ∧ ¬HazardousMaterials(x) → InDemand(x)))"
    },
    {
        "NL": "An object that is round, lightweight, and used for playing games is a ball.",
        "FOL": "∀x (Object(x) ∧ Round(x) ∧ Lightweight(x) ∧ UsedForPlayingGames(x) → Ball(x))"
    },
    {
        "NL": "A tiger is a large feline with stripes, native to Asia, and is not a lion.",
        "FOL": "∀x (Tiger(x) ↔ (LargeFeline(x) ∧ HasStripes(x) ∧ NativeTo(x, Asia) ∧ ¬Lion(x)))"
    },
    {
        "NL": "Architects design buildings, engineers construct buildings, and owners maintain buildings.",
        "FOL": "∀x ∀y ∀z (Architect(x) ∧ Engineer(y) ∧ Owner(z) → (DesignsBuildings(x) ∧ ConstructsBuildings(y) ∧ MaintainsBuildings(z)))"
    },
    {
        "NL": "An athlete who competes in running, swimming, and cycling events is a triathlete if they participate in all three events consecutively.",
        "FOL": "∀x (Athlete(x) ∧ CompetesInRunning(x) ∧ CompetesInSwimming(x) ∧ CompetesInCycling(x) ∧ ParticipatesConsecutively(x) → Triathlete(x))"
    },
    {
        "NL": "A type of outdoor activity can be either recreational or competitive.",
        "FOL": "∀x (OutdoorActivityType(x) → Recreational(x) ⊕ Competitive(x))"
    },
    {
        "NL": "A planet orbits a star, and the star can be part of a galaxy.",
        "FOL": "∀x∀y∀z (Planet(x) ∧ Star(y) ∧ Galaxy(z) → (Orbits(x, y) ∧ PartOf(y, z)))"
    },
    {
        "NL": "A city is considered a tourist destination if it attracts a large number of visitors and has various attractions to offer.",
        "FOL": "∀x (City(x) ∧ AttractsVisitors(x) ∧ VariousAttractions(x) → TouristDestination(x))"
    },
    {
        "NL": "Public transport, cycling, and walking are environmentally friendly alternatives to driving a car.",
        "FOL": "EnvironmentallyFriendly(PublicTransport) ∧ EnvironmentallyFriendly(Cycling) ∧ EnvironmentallyFriendly(Walking) ∧ AlternativeTo(DrivingCar)"
    },
    {
        "NL": "In winter, snow covers the ground, people wear coats, and lakes freeze.",
        "FOL": "∀x ∀y ∀z (Winter(x) ∧ Ground(y) ∧ Lake(z) → (SnowCovers(y, x) ∧ PeopleWearCoats(x) ∧ LakeFreezes(z, x)))"
    },
    {
        "NL": "A few colors are primary, some are secondary, and others are tertiary.",
        "FOL": "∃x∃y∃z (Color(x) ∧ Primary(x) ∧ Color(y) ∧ Secondary(y) ∧ Color(z) ∧ Tertiary(z))"
    },
    {
        "NL": "A citizen is bilingual if and only if they speak German or French, but not both.",
        "FOL": "∀x (Citizen(x) → (Bilingual(x) ↔ (SpeakGerman(x) ⊕ SpeakFrench(x))))"
    },
    {
        "NL": "A person is satisfied if and only if they are wealthy and have a job.",
        "FOL": "∀x (Person(x) → (Satisfied(x) ↔ (Wealthy(x) ∧ HasJob(x))))"
    },
    {
        "NL": "There is a computer that every programmer uses.",
        "FOL": "∃x (Computer(x) ∧ ∀y (Programmer(y) → Use(y, x)))"
    },
    {
        "NL": "An animal is an herbivore if its diet consists solely of plants.",
        "FOL": "∀x (Animal(x) ∧ ∀y (Consumes(x, y) → Plant(y)) → Herbivore(x))"
    },
    {
        "NL": "Some chefs either bake or grill, but do not do both.",
        "FOL": "∃x (Chef(x) ∧ (Bake(x) ⊕ Grill(x)))"
    },
    {
        "NL": "During a race, a runner can either speed up, slow down, or maintain their pace.",
        "FOL": "∀x (Runner(x) → (SpeedUp(x) ∨ SlowDown(x) ∨ MaintainPace(x)))"
    },
    {
        "NL": "A gardener plants flowers, while a farmer plants crops.",
        "FOL": "∀x ∀y (Gardener(x) ∧ Flower(y) → Plants(x, y)) ∧ ∀z ∀w (Farmer(z) ∧ Crop(w) → Plants(z, w))"
    },
    {
        "NL": "All cities that are neither large nor tiny are a metropolis if and only if they are bustling.",
        "FOL": "∀x (¬Large(x) ∧ ¬Tiny(x) → (Metropolis(x) ↔ Bustling(x)))"
    },
    {
        "NL": "A lighthouse emits light, a siren emits sound, and a radio tower emits radio waves.",
        "FOL": "∀x ∀y ∀z (Lighthouse(x) ∧ Siren(y) ∧ RadioTower(z) → (EmitsLight(x) ∧ EmitsSound(y) ∧ EmitsRadioWaves(z)))"
    },
    {
        "NL": "A mirror reflects light, allowing you to see your reflection.",
        "FOL": "∀x (Mirror(x) ↔ (ReflectsLight(x) ∧ AllowsSeeingReflection(x)))"
    },
    {
        "NL": "A food item is high in antioxidants if it contains compounds that help neutralize free radicals and protect cells from damage caused by oxidative stress.",
        "FOL": "∀x ∀y ∀z (FoodItem(x) ∧ ContainsCompounds(x, y) ∧ NeutralizesFreeRadicals(y, z) ∧ ProtectsCellsFromDamage(z) → HighInAntioxidants(x))"
    },
    {
        "NL": "A bakery that uses high-quality ingredients and offers a variety of fresh-baked goods satisfies customer cravings and creates a loyal clientele.",
        "FOL": "∀x∀y (Bakery(x) ∧ UsesHighQualityIngredients(x) ∧ OffersVarietyOfFreshBakedGoods(x) → (SatisfiesCustomerCravings(y) ∧ CreatesLoyalClientele(y)))"
    },
    {
        "NL": "Whenever a farmer uses organic methods, his crops yield more and are healthy.",
        "FOL": "∀x (Farmer(x) ∧ UsesOrganicMethods(x) → YieldsMore(x) ∧ AreHealthy(x))"
    },
    {
        "NL": "A book is either fiction or nonfiction but not both.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ Nonfiction(x)))"
    },
    {
        "NL": "If a vehicle is not a car, it cannot have a trunk, and it doesn't have four wheels.",
        "FOL": "∀x (Vehicle(x) ∧ ¬Car(x) → (¬HasTrunk(x) ∧ ¬HasFourWheels(x)))"
    },
    {
        "NL": "Houses are built with materials such as wood, brick, or concrete.",
        "FOL": "∀x (House(x) → (∃y (Wood(y) ∨ Brick(y) ∨ Concrete(y)) ∧ BuiltWith(x, y)))"
    },
    {
        "NL": "Every cat is a mammal, but not every mammal is a cat.",
        "FOL": "∀x (Cat(x) → Mammal(x)) ∧ ¬∀x (Mammal(x) → Cat(x))"
    },
    {
        "NL": "A dessert can either be a cake with rich flavor and moist texture, or a pie with crispy crust and juicy filling.",
        "FOL": "∀x (Dessert(x) → ((Cake(x) ∧ RichFlavor(x) ∧ MoistTexture(x)) ⊕ (Pie(x) ∧ CrispyCrust(x) ∧ JuicyFilling(x))))"
    },
    {
        "NL": "A university offers a range of degree programs, such as engineering with specializations in civil and mechanical, life sciences with disciplines like biology and chemistry, and humanities with subjects like history and literature.",
        "FOL": "∀x ∀y (University(x) ∧ (Engineering(x, y) ∧ (CivilEngineering(y) ∨ MechanicalEngineering(y)) ∨ LifeSciences(x, y) ∧ (Biology(y) ∨ Chemistry(y)) ∨ Humanities(x, y) ∧ (History(y) ∨ Literature(y))))"
    },
    {
        "NL": "An art piece is a sculpture if it is a three-dimensional work of art created by carving, modeling, or assembling materials.",
        "FOL": "∀x (Sculpture(x) ↔ (ArtPiece(x) ∧ ThreeDimensional(x) ∧ (Carved(x) ∨ Modeled(x) ∨ AssembledMaterials(x))))"
    },
    {
        "NL": "If a ball is red and small, then it is not a basketball.",
        "FOL": "∀x (Ball(x) ∧ Red(x) ∧ Small(x) → ¬Basketball(x))"
    },
    {
        "NL": "A game is either a puzzle or not a puzzle.",
        "FOL": "∀x (Game(x) → (Puzzle(x) ⊕ ¬Puzzle(x)))"
    },
    {
        "NL": "A garment is a dress if it is a one-piece clothing item, covers the upper and lower body, and is typically worn by women.",
        "FOL": "∀x (Garment(x) ∧ OnePieceClothingItem(x) ∧ CoversUpperAndLowerBody(x) ∧ TypicallyWornByWomen(x) → Dress(x))"
    },
    {
        "NL": "A painting is colorful, abstract, and thought-provoking.",
        "FOL": "∃x (Painting(x) ∧ Colorful(x) ∧ Abstract(x) ∧ ThoughtProvoking(x))"
    },
    {
        "NL": "If a computer is connected to the internet, it can access online resources.",
        "FOL": "∀x (Computer(x) ∧ ConnectedToInternet(x) → CanAccessOnlineResources(x))"
    },
    {
        "NL": "Not everyone who trains diligently wins, but only those who train diligently win.",
        "FOL": "¬∀x (TrainsDiligently(x) → Wins(x)) ∧ ∀y (Wins(y) → TrainsDiligently(y))"
    },
    {
        "NL": "Many birds, like sparrows and pigeons, can be found in urban environments.",
        "FOL": "∀x ((Sparrow(x) ∨ Pigeon(x)) → FoundInUrbanEnvironment(x))"
    },
    {
        "NL": "A flashlight emits light for visibility in the dark, a radio receives and broadcasts signals, and a compass provides directional information.",
        "FOL": "∀x (Flashlight(x) → EmitsLightForVisibility(x)) ∧ ∀y (Radio(y) → (ReceivesSignals(y) ∧ BroadcastsSignals(y))) ∧ ∀z (Compass(z) → ProvidesDirectionalInformation(z))"
    },
    {
        "NL": "A type of liquid that is used as a fuel for internal combustion engines, typically derived from petroleum, is gasoline.",
        "FOL": "∀x (Liquid(x) ∧ UsedAsFuel(x) ∧ ForInternalCombustionEngines(x) ∧ DerivedFromPetroleum(x) → Gasoline(x))"
    },
    {
        "NL": "A book can be written by one or more authors and is composed of multiple chapters.",
        "FOL": "∀x (Book(x) → ((∃y Author(x, y)) ∧ (∃z Chapter(x, z))))"
    },
    {
        "NL": "A watch displays time and can have additional features.",
        "FOL": "∀x (Watch(x) → DisplaysTime(x) ∧ HasAdditionalFeatures(x))"
    },
    {
        "NL": "A poetry is a sonnet when it is a traditional form of English literature, consists of fourteen lines, and follows a rhyming scheme.",
        "FOL": "∀x (Poetry(x) ∧ TraditionalEnglishLiterature(x) ∧ ConsistsOfFourteenLines(x) ∧ FollowsRhymingScheme(x) → Sonnet(x))"
    },
    {
        "NL": "A board game is enjoyable if it involves strategy and either encourages teamwork or provides a competitive atmosphere, but not if the rules are too complicated.",
        "FOL": "∀x (BoardGame(x) → (Enjoyable(x) ↔ (Strategy(x) ∧ ((EncouragesTeamwork(x) ∨ CompetitiveAtmosphere(x)) ∧ ¬ComplicatedRules(x)))))"
    },
    {
        "NL": "An appliance can be categorized as a kitchen appliance if it is designed for use in preparing or processing food and is typically found in a kitchen.",
        "FOL": "∀x (Appliance(x) ∧ DesignedForFoodPreparationOrProcessing(x) ∧ TypicallyFoundInKitchen(x) → KitchenAppliance(x))"
    },
    {
        "NL": "At a concert, musicians perform on stage while the audience enjoys the live music.",
        "FOL": "∀x ∀y ∀z (Concert(x) ∧ Musician(y) ∧ Audience(z) → (PerformsOnStage(y, x) ∧ EnjoysLiveMusic(z, x)))"
    },
    {
        "NL": "Each teacher who has planned lessons, all of which have improved student grades and received excellent feedback, either has been awarded teacher of the year or has been supported by all her co-teachers.",
        "FOL": "∀x (Teacher(x) ∧ ∀y (Lesson(y) ∧ Planned(x, y) ∧ ImprovedStudentGrades(y) ∧ ExcellentFeedback(y)) → (WonTeacherOfYearAward(x) ∨ ∀z (Coteacher(z, x) → Support(z, x))))"
    },
    {
        "NL": "Only the brave win.",
        "FOL": "∀x (¬Brave(x) → ¬Win(x))"
    },
    {
        "NL": "A restaurant is popular when it has great food, a cozy ambiance, and either low prices or unique dishes.",
        "FOL": "∀x (Restaurant(x) ∧ GreatFood(x) ∧ CozyAmbiance(x) ∧ (LowPrices(x) ∨ UniqueDishes(x)) → Popular(x))"
    },
    {
        "NL": "All teachers are either strict or lenient.",
        "FOL": "∀x (Teacher(x) → (Strict(x) ⊕ Lenient(x)))"
    },
    {
        "NL": "Every musician plays an instrument or composes music.",
        "FOL": "∀x (Musician(x) → (PlayInstrument(x) ∨ ComposeMusic(x)))"
    },
    {
        "NL": "A radio receives signals and plays audio.",
        "FOL": "∀x (Radio(x) → (ReceivesSignals(x) ∧ PlaysAudio(x)))"
    },
    {
        "NL": "A software's reliability is contingent on consistent performance, user-friendly design, and timely updates.",
        "FOL": "∀x (Software(x) → (ConsistentPerformance(x) ∧ UserFriendlyDesign(x) ∧ TimelyUpdates(x)) ↔ Reliable(x))"
    },
    {
        "NL": "Telescopes allow us to observe celestial objects by gathering and focusing light from distant sources, such as stars and galaxies.",
        "FOL": "∀x ∀y ∀z (Telescope(x) ∧ CelestialObject(y) ∧ LightSource(z) → (GathersLight(x, z) ∧ FocusesLight(x, z) ∧ Observes(x, y)))"
    },
    {
        "NL": "A sports team competes against other teams in a league, aiming to win games and earn points.",
        "FOL": "∀x∀y (SportsTeam(x) ∧ League(y) ∧ CompetesIn(x, y) → (AimsToWinGames(x) ∧ EarnPoints(x)))"
    },
    {
        "NL": "A trip is considered adventurous if it involves exploring new places, participating in outdoor activities, or facing unexpected challenges.",
        "FOL": "∀x (AdventurousTrip(x) ↔ (InvolvesExploringNewPlaces(x) ∨ ParticipatesInOutdoorActivities(x) ∨ FacesUnexpectedChallenges(x)))"
    },
    {
        "NL": "A phone uses Android or Windows.",
        "FOL": "∀x (Phone(x) → (Android(x) ∨ Windows(x)))"
    },
    {
        "NL": "People who wear glasses usually have a prescription for their vision correction.",
        "FOL": "∀x (WearsGlasses(x) → HasPrescriptionForVision(x))"
    },
    {
        "NL": "A pen writes, can use ink or graphite, and can be capped, retractable, or have a twist mechanism.",
        "FOL": "∀x (Pen(x) → (Writes(x) ∧ ((Ink(x) ∧ ¬Graphite(x)) ∨ (¬Ink(x) ∧ Graphite(x))) ∧ (((Capped(x) ∧ ¬Retractable(x)) ∨ (¬Capped(x) ∧ Retractable(x))) ∨ ((¬Capped(x) ∧ ¬Retractable(x)) ∧ TwistMechanism(x)))))"
    },
    {
        "NL": "A computer needs power, hardware, and software to function.",
        "FOL": "∀x (Computer(x) → (NeedsPower(x) ∧ NeedsHardware(x) ∧ NeedsSoftware(x)) → Functions(x))"
    },
    {
        "NL": "Humans need food, water, and sleep to survive.",
        "FOL": "∀x (Human(x) → (NeedsFood(x) ∧ NeedsWater(x) ∧ NeedsSleep(x)))"
    },
    {
        "NL": "A device needs charging if its battery level is low.",
        "FOL": "∀x (Device(x) ∧ LowBattery(x) → NeedsCharging(x))"
    },
    {
        "NL": "Trees provide shade, produce oxygen through photosynthesis, and can act as windbreaks, reducing wind speed and erosion.",
        "FOL": "∀x∀y∀z (Tree(x) ∧ Shade(y) ∧ Photosynthesis(z) → (Provides(x, y) ∧ ProducesOxygenThrough(x, z) ∧ ActsAsWindbreakReducingWindSpeedAndErosion(x)))"
    },
    {
        "NL": "Fruits are grown on trees, bushes, or vines.",
        "FOL": "∀x (Fruit(x) → GrownOnTree(x) ∨ GrownOnBush(x) ∨ GrownOnVine(x))"
    },
    {
        "NL": "A museum displays artifacts and can offer guided tours to visitors.",
        "FOL": "∀x (Museum(x) → (Displays(x, Artifacts) ∧ (Offers(x, GuidedTours))))"
    },
    {
        "NL": "A violin is played with a bow, and a guitar is played by plucking strings.",
        "FOL": "∀x∀y (Violin(x) ∧ Guitar(y) → (PlayedWith(x, Bow) ∧ PlayedByPluckingStrings(y)))"
    },
    {
        "NL": "A scientific theory gains widespread acceptance when it is supported by empirical evidence, withstands rigorous testing, and offers explanatory power.",
        "FOL": "∀x (ScientificTheory(x) ∧ EmpiricalEvidence(x) ∧ RigorousTesting(x) ∧ ExplanatoryPower(x) → WidespreadAcceptance(x))"
    },
    {
        "NL": "Every rectangle is a quadrilateral, but not every quadrilateral is a rectangle.",
        "FOL": "∀x (Rectangle(x) → Quadrilateral(x)) ∧ ¬∀x (Quadrilateral(x) → Rectangle(x))"
    },
    {
        "NL": "If a fish is a shark, it is a predator.",
        "FOL": "∀x (Shark(x) → Predator(x))"
    },
    {
        "NL": "No athlete who plays both football and basketball, unless they have won an Olympic gold medal, has represented more than ten teams or has not conducted a sports clinic.",
        "FOL": "¬∃x (Athlete(x) ∧ PlaysFootball(x) ∧ PlaysBasketball(x) ∨ WonOlympicGoldMedal(x) ∧ (RepresentedMoreThanTenTeams(x) ∨ ¬ConductedSportsClinic(x)))"
    },
    {
        "NL": "If a room is dirty, then it needs to be cleaned.",
        "FOL": "∀x (Room(x) ∧ Dirty(x) → NeedsCleaning(x))"
    },
    {
        "NL": "Books with torn pages or missing covers are often considered damaged.",
        "FOL": "∀x (Book(x) ∧ (TornPages(x) ∨ MissingCovers(x)) → Damaged(x))"
    },
    {
        "NL": "A doctor prescribes medication to patients unless they are allergic.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Medication(z) → (Prescribes(x, y, z) ↔ ¬Allergic(y, z)))"
    },
    {
        "NL": "A sport that is played between two teams on a field with a ball and the objective is to score points by getting the ball into the opposing team's goal is a goal-based sport.",
        "FOL": "∀x (Sport(x) ∧ PlayedBetweenTwoTeams(x) ∧ PlayedOnField(x) ∧ PlayedWithBall(x) ∧ ObjectiveToScorePointsByGettingBallIntoOpposingTeamsGoal(x) → GoalBasedSport(x))"
    },
    {
        "NL": "A dog is recognized as a service dog if it has completed training and performs tasks for individuals with disabilities.",
        "FOL": "∀x (Dog(x) ∧ CompletedTraining(x) ∧ PerformsTasks(x) → ServiceDog(x))"
    },
    {
        "NL": "Cows are herbivores and eat grass, while lions are carnivores and eat meat.",
        "FOL": "∀x (Cow(x) → (Herbivore(x) ∧ EatsGrass(x))) ∧ ∀y (Lion(y) → (Carnivore(y) ∧ EatsMeat(y)))"
    },
    {
        "NL": "A phone can be on silent mode or have sound enabled.",
        "FOL": "∀x (Phone(x) → (SilentMode(x) ∨ SoundEnabled(x)))"
    },
    {
        "NL": "Liam is a firefighter or Sophie is not an artist.",
        "FOL": "Firefighter(liam) ∨ ¬Artist(sophie)"
    },
    {
        "NL": "A musical instrument that has strings, is played with a bow, and has a hollow body is a violin.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ PlayedWithBow(x) ∧ HollowBody(x) → Violin(x))"
    },
    {
        "NL": "There's no one in the class who read either Hamlet or Macbeth.",
        "FOL": "∀x (Person(x) ∧ InClass(x) → ¬(Read(x, hamlet) ∨ Read(x, macbeth)))"
    },
    {
        "NL": "A vehicle can be a car or a bicycle.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Bicycle(x)))"
    },
    {
        "NL": "Every tall tree connects to at least one short plant that connects to only broad leafs.",
        "FOL": "∀x (TallTree(x) → ∃y (ShortPlant(y) ∧ ConnectsTo(x, y) ∧ ¬∃z (ConnectsTo(y, z) ∧ ¬BroadLeaf(z))))"
    },
    {
        "NL": "A concert venue has seating or standing areas, but not if it's a small jazz club or if it's an outdoor amphitheater with grassy areas.",
        "FOL": "∀x (ConcertVenue(x) ∧ ¬(SmallJazzClub(x) ∨ OutdoorAmphitheater(x)) → (HasSeating(x) ∨ HasStandingAreas(x)))"
    },
    {
        "NL": "Some buildings are both historic and open to the public.",
        "FOL": "∃x (Building(x) ∧ Historic(x) ∧ OpenToPublic(x))"
    },
    {
        "NL": "No cats favor cold areas.",
        "FOL": "∀x ∀y (Cat(x) ∧ Area(y) ∧ Cold(y) → ¬Favors(x, y))"
    },
    {
        "NL": "A film is a box office success if it generates significant revenue and attracts a large audience.",
        "FOL": "∀x (Film(x) → (BoxOfficeSuccess(x) ↔ (GeneratesRevenue(x) ∧ LargeAudience(x))))"
    },
    {
        "NL": "Insects have six legs and a three-part body.",
        "FOL": "∀x (Insect(x) → (SixLegs(x) ∧ ThreePartBody(x)))"
    },
    {
        "NL": "A book has pages, while a computer mouse does not.",
        "FOL": "∀x ∀y ((Book(x) ∧ HasPages(x)) ∧ (ComputerMouse(y) ∧ ¬HasPages(y)))"
    },
    {
        "NL": "A camera captures images by exposing a light-sensitive sensor to incoming light.",
        "FOL": "∀x∀y (Camera(x) ∧ LightSensitiveSensor(y) ∧ ExposedTo(x, y) → CapturesImages(x))"
    },
    {
        "NL": "Some planets are rocky.",
        "FOL": "∃x (Planet(x) ∧ Rocky(x))"
    },
    {
        "NL": "An animal is an herbivore if it only consumes plants.",
        "FOL": "∀x (Animal(x) ∧ ConsumesPlants(x) ∧ ¬∃y (ConsumesAnimals(x, y)) → Herbivore(x))"
    },
    {
        "NL": "A natural disaster, such as an earthquake, hurricane, or flood, results from environmental phenomena, often causing significant damage, loss of life, and economic disruption.",
        "FOL": "∀x ∀y ∀z (NaturalDisaster(x) → ((Earthquake(x) ∨ Hurricane(x) ∨ Flood(x)) ∧ ResultsFromEnvironmentalPhenomena(x, y) ∧ CausesSignificantDamage(x, z) ∧ CausesLossOfLife(x, z) ∧ CausesEconomicDisruption(x, z)))"
    },
    {
        "NL": "A dish is a dessert or an appetizer.",
        "FOL": "∀x (Dish(x) → (Dessert(x) ∨ Appetizer(x)))"
    },
    {
        "NL": "A dessert can be sweet or sour, but not both sweet and sour.",
        "FOL": "∀x (Dessert(x) → (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "Linda listens to a song if and only if it was recorded before 1990.",
        "FOL": "∀w (Song(w) → (RecordedBeforenineteenninety(w) ↔ Listens(linda, w)))"
    },
    {
        "NL": "A square has four equal sides and four angles of 90 degrees.",
        "FOL": "∀x (Square(x) → (FourEqualSides(x) ∧ FourNinetyDegreeAngles(x)))"
    },
    {
        "NL": "In a laboratory, scientists conduct experiments using equipment and collect data for analysis.",
        "FOL": "∀x ∀y ∀z (Laboratory(x) ∧ Scientist(y) ∧ Equipment(z) → (ConductExperiments(y, x, z) ∧ CollectData(y, x)))"
    },
    {
        "NL": "All squares are rectangles, but not all rectangles are squares.",
        "FOL": "∀x ((Square(x) → Rectangle(x)) ∧ (Rectangle(x) → ¬Square(x)))"
    },
    {
        "NL": "A car is fast or not fast.",
        "FOL": "∀x (Car(x) → (Fast(x) ⊕ ¬Fast(x)))"
    },
    {
        "NL": "A device functions as a smartphone if it can make calls, send messages, and access the internet.",
        "FOL": "∀x (Device(x) ∧ CanMakeCalls(x) ∧ CanSendMessages(x) ∧ CanAccessInternet(x) → Smartphone(x))"
    },
    {
        "NL": "A bakery sells its bread at a discounted price if the bread is made the day before and it's almost closing time.",
        "FOL": "∀x∀y (Bakery(x) ∧ Bread(y) → (MadeDayBefore(y) ∧ AlmostClosingTime(x) → SellsAtDiscountedPrice(x, y)))"
    },
    {
        "NL": "A student is on the honor roll if they have an A average and no failing grades.",
        "FOL": "∀x (HonorRoll(x) ↔ (AAverage(x) ∧ ¬FailingGrades(x)))"
    },
    {
        "NL": "A person is a neighbor if they live in close proximity to another person.",
        "FOL": "∀x ∀y (Neighbor(x, y) ↔ (Person(x) ∧ Person(y) ∧ LivesInCloseProximity(x, y)))"
    },
    {
        "NL": "An eagle is flying in the sky, while a fish is swimming in the water.",
        "FOL": "∃x ∃y (Eagle(x) ∧ Sky(y) ∧ FlyingIn(x, y)) ∧ ∃z (Fish(z) ∧ Swimming(z) ∧ InWater(z))"
    },
    {
        "NL": "A contagious disease can spread from one individual to another through direct contact or airborne transmission.",
        "FOL": "∀x∀y∀z (ContagiousDisease(x) ∧ Individual(y) ∧ Individual(z) → (SpreadsThroughDirectContactOrAirborneTransmission(x, y, z)))"
    },
    {
        "NL": "Astronauts successfully complete space missions when they undergo rigorous training, possess excellent problem-solving skills, and work effectively in teams.",
        "FOL": "∀x ∀y ∀z (Astronaut(x) ∧ RigorousTraining(x, y) ∧ ExcellentProblemSolving(x, z) ∧ EffectiveTeamwork(x) → SuccessfulSpaceMission(x))"
    },
    {
        "NL": "An electronic device is portable if it operates on batteries and is small enough to be easily carried by a single individual.",
        "FOL": "∀x (ElectronicDevice(x) ∧ BatteryOperated(x) ∧ EasilyCarried(x) → Portable(x))"
    },
    {
        "NL": "If a place is a museum, it is open to the public and displays art or historical artifacts.",
        "FOL": "∀x (Museum(x) → (OpenToPublic(x) ∧ DisplaysArtOrHistoricalArtifacts(x)))"
    },
    {
        "NL": "A school offers courses in history, mathematics, or biology, but it does not offer all three subjects in a single course.",
        "FOL": "∀x (School(x) → ∀y (Course(y) ∧ OfferedBy(y, x) → (CoversHistory(y) ⊕ CoversMathematics(y) ⊕ CoversBiology(y))))"
    },
    {
        "NL": "A vehicle that can traverse rough terrain, has a powerful engine, and provides ample cargo space is an off-road vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ TraverseRoughTerrain(x) ∧ PowerfulEngine(x) ∧ AmpleCargoSpace(x) → OffRoadVehicle(x))"
    },
    {
        "NL": "An innovative company often invests in research and development, encourages employee creativity, and fosters a culture of continuous improvement.",
        "FOL": "∀x (InnovativeCompany(x) → (InvestsInResearchAndDevelopment(x) ∧ EncouragesEmployeeCreativity(x) ∧ FostersContinuousImprovementCulture(x)))"
    },
    {
        "NL": "A person who is a translator converts text or speech from one language to another.",
        "FOL": "∀x (Translator(x) → ConvertsLanguage(x))"
    },
    {
        "NL": "Some doctors are also scientists.",
        "FOL": "∃x (Doctor(x) ∧ Scientist(x))"
    },
    {
        "NL": "A person is considered a professional athlete if they compete in sports and earn a living from it.",
        "FOL": "∀x (Person(x) ∧ CompetesInSports(x) ∧ EarnsLivingFromSports(x) → ProfessionalAthlete(x))"
    },
    {
        "NL": "In order to germinate, seeds need exposure to light, warmth, and moisture, but not all three factors are required simultaneously.",
        "FOL": "∀x (Seed(x) ∧ Germinates(x) → ((ExposureToLight(x) ⊕ Warmth(x) ⊕ Moisture(x)) ∨ (ExposureToLight(x) ∧ Warmth(x)) ∨ (ExposureToLight(x) ∧ Moisture(x)) ∨ (Warmth(x) ∧ Moisture(x))))"
    },
    {
        "NL": "There is no triangle that connects with all the elastic cones.",
        "FOL": "¬∃z (Triangle(z) ∧ ∀x (Elastic(x) ∧ Cone(x) → ConnectsWith(z, x)))"
    },
    {
        "NL": "Bees pollinate flowers, helping them reproduce.",
        "FOL": "∀x∀y (Bee(x) ∧ Flower(y) → Pollinates(x, y))"
    },
    {
        "NL": "An animal is a herbivore if and only if it eats plants but does not eat meat.",
        "FOL": "∀x (Animal(x) → (Herbivore(x) ↔ (EatsPlants(x) ∧ ¬EatsMeat(x))))"
    },
    {
        "NL": "A song is a masterpiece if and only if it is harmonious or emotionally moving.",
        "FOL": "∀x (Song(x) → (Masterpiece(x) ↔ (Harmonious(x) ∨ EmotionallyMoving(x))))"
    },
    {
        "NL": "Trees grow taller in sunlight and produce oxygen through photosynthesis.",
        "FOL": "∀x (Tree(x) → (GrowsTallerInSunlight(x) ∧ ProducesOxygen(x) ∧ Photosynthesis(x)))"
    },
    {
        "NL": "Butterflies emerge from cocoons, whereas birds hatch from eggs, and mammals are born live.",
        "FOL": "∀x∀y∀z (Butterfly(x) → EmergesFromCocoon(x)) ∧ (Bird(y) → HatchesFromEgg(y)) ∧ (Mammal(z) → BornLive(z))"
    },
    {
        "NL": "Not all movies are entertaining or meaningful.",
        "FOL": "¬∀x (Movie(x) → (Entertaining(x) ∨ Meaningful(x)))"
    },
    {
        "NL": "A cake is delicious if it has the right balance of flavors, is moist, and not overly sweet.",
        "FOL": "∀x (Cake(x) ∧ BalanceOfFlavors(x) ∧ Moist(x) ∧ ¬OverlySweet(x) → Delicious(x))"
    },
    {
        "NL": "A painting is colorful if it uses a wide range of colors.",
        "FOL": "∀x (Painting(x) ∧ WideRangeOfColors(x) → Colorful(x))"
    },
    {
        "NL": "Musicians play instruments such as guitars, pianos, or drums.",
        "FOL": "∀x (Musician(x) → Plays(x, y) ∧ (Guitar(y) ∨ Piano(y) ∨ Drum(y)))"
    },
    {
        "NL": "A mountain has a peak and slopes.",
        "FOL": "∀x (Mountain(x) → HasPeak(x) ∧ HasSlopes(x))"
    },
    {
        "NL": "A plant that receives adequate sunlight and water grows healthy and strong.",
        "FOL": "∀x (Plant(x) ∧ AdequateSunlight(x) ∧ AdequateWater(x) → (GrowsHealthy(x) ∧ GrowsStrong(x)))"
    },
    {
        "NL": "A trip is adventurous if it involves exploring new places or trying new activities.",
        "FOL": "∀x (Trip(x) ∧ (ExploringNewPlaces(x) ∨ TryingNewActivities(x)) → Adventurous(x))"
    },
    {
        "NL": "A fruit can be either sweet or sour, but not all fruits are both sweet and sour.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ∨ Sour(x)) ∧ ¬(Sweet(x) ∧ Sour(x)))"
    },
    {
        "NL": "A solar eclipse occurs when the moon is positioned between the Earth and the Sun, blocking sunlight.",
        "FOL": "∀x (SolarEclipse(x) ↔ MoonBetweenEarthAndSun(x) ∧ BlocksSunlight(x))"
    },
    {
        "NL": "No horses are dangerous or unmanageable.",
        "FOL": "∃x (Horses(x) ∧ (¬Dangerous(x) ∨ ¬Unmanageable(x)))"
    },
    {
        "NL": "A building is energy-efficient if it has solar panels and proper insulation.",
        "FOL": "∀x (Building(x) ∧ EnergyEfficient(x) → (SolarPanels(x) ∧ ProperInsulation(x)))"
    },
    {
        "NL": "A book can be a novel, a biography, or neither.",
        "FOL": "∀x (Book(x) → Novel(x) ∨ Biography(x) ∨ ¬(Novel(x) ∨ Biography(x)))"
    },
    {
        "NL": "An airport has terminals for domestic and international flights, while also offering services such as baggage claim, check-in counters, and security checkpoints.",
        "FOL": "∀x (Airport(x) ∧ (DomesticTerminal(x) ∨ InternationalTerminal(x)) → OffersServices(x))"
    },
    {
        "NL": "Some balls are yellow and some balls are blue, but there are no yellow and blue balls.",
        "FOL": "∃x (Yellow(x)) ∧ ∃x (Blue(x)) ∧ ¬∃x (Yellow(x) ∧ Blue(x))"
    },
    {
        "NL": "A garden is thriving if it has flowers in bloom or lush greenery.",
        "FOL": "∀x (Garden(x) ∧ (FlowersInBloom(x) ∨ LushGreenery(x)) → Thriving(x))"
    },
    {
        "NL": "An oven is for baking and cooking.",
        "FOL": "∀x (Oven(x) → (Bakes(x) ∧ Cooks(x)))"
    },
    {
        "NL": "An object is considered a musical instrument if it is designed to produce musical sounds.",
        "FOL": "∀x (Object(x) ∧ DesignedToProduceMusicalSounds(x) → MusicalInstrument(x))"
    },
    {
        "NL": "A country with strong economic growth usually has low unemployment rates and a high GDP per capita.",
        "FOL": "∀x (Country(x) ∧ StrongEconomicGrowth(x) → (LowUnemploymentRates(x) ∧ HighGDPPerCapita(x)))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, and pedals that allow the rider to propel the bicycle forward.",
        "FOL": "∀x (Bicycle(x) → (TwoWheels(x) ∧ Frame(x) ∧ Pedals(x) ∧ AllowsRiderToPropelForward(x)))"
    },
    {
        "NL": "An online learning platform that offers a wide range of courses and accessible resources enables professional development and supports lifelong learning.",
        "FOL": "∀x∀y (OnlineLearningPlatform(x) ∧ OffersWideRangeOfCourses(x) ∧ AccessibleResources(x) → (EnablesProfessionalDevelopment(y) ∧ SupportsLifelongLearning(y)))"
    },
    {
        "NL": "A battery stores electricity for later use.",
        "FOL": "∀x (Battery(x) → StoresElectricity(x))"
    },
    {
        "NL": "An insightful research study presents original findings, demonstrates rigorous methodology, and contributes to existing knowledge.",
        "FOL": "∀x (ResearchStudy(x) ∧ OriginalFindings(x) ∧ RigorousMethodology(x) ∧ ContributesToExistingKnowledge(x) → Insightful(x))"
    },
    {
        "NL": "All blue items are smooth unless they are thick.",
        "FOL": "∀x (Blue(x) → (¬Thick(x) → Smooth(x)))"
    },
    {
        "NL": "Jake eats the apple if and only if it is juicy.",
        "FOL": "∀x (Apple(x) → (Juicy(x) ↔ Eats(jake, x)))"
    },
    {
        "NL": "A dog barks loudly when it senses danger or becomes excited.",
        "FOL": "∀x∀y∀z (Dog(x) ∧ (SensesDanger(y) ∨ BecomesExcited(z)) → BarksLoudly(x))"
    },
    {
        "NL": "All mammals give birth to live young.",
        "FOL": "∀x (Mammal(x) → GivesBirthToLiveYoung(x))"
    },
    {
        "NL": "A door is open if it is not locked, but a door can be closed and locked or closed and unlocked.",
        "FOL": "∀x (Door(x) → ((Open(x) ↔ ¬Locked(x)) ⊕ (Closed(x) ∧ (Locked(x) ∨ ¬Locked(x)))))"
    },
    {
        "NL": "A driver drives a car or a bike.",
        "FOL": "∀x (Driver(x) → (DrivesCar(x) ∨ DrivesBike(x)))"
    },
    {
        "NL": "A lake contains fresh water, while an ocean contains salt water.",
        "FOL": "∀x ∀y (Lake(x) ∧ Ocean(y) → (ContainsFreshWater(x) ∧ ContainsSaltWater(y)))"
    },
    {
        "NL": "A creature is a human or an animal.",
        "FOL": "∀x (Creature(x) → (Human(x) ∨ Animal(x)))"
    },
    {
        "NL": "A person who investigates, gathers, and reports news for various media platforms, such as newspapers, television, and radio, is a journalist.",
        "FOL": "∀x (Person(x) ∧ InvestigatesNews(x) ∧ GathersNews(x) ∧ ReportsNews(x) ∧ WorksForNewspapers(x) ∨ WorksForTelevision(x) ∨ WorksForRadio(x) → Journalist(x))"
    },
    {
        "NL": "A person who prepares and cooks food professionally is called a chef.",
        "FOL": "∀x (PreparesAndCooksFoodProfessionally(x) → Chef(x))"
    },
    {
        "NL": "Hats are worn on the head, while shoes are worn on the feet.",
        "FOL": "∀x ((Hat(x) → WornOnHead(x)) ∧ (Shoe(x) → WornOnFeet(x)))"
    },
    {
        "NL": "Objects are fruits if they are not vegetables.",
        "FOL": "∀v (¬Vegetable(v) → Fruit(v))"
    },
    {
        "NL": "Sunburn occurs when skin is exposed to excessive ultraviolet radiation, which can lead to pain and redness or in severe cases, blisters.",
        "FOL": "∀x ∀y ∀z (Skin(x) ∧ UltravioletRadiation(y) ∧ Exposed(x, y) ∧ Excessive(y) → (Pain(x, z) ∧ Redness(x, z)) ⊕ Blisters(x, z))"
    },
    {
        "NL": "Certain musicians either play guitar or piano, but do not play both.",
        "FOL": "∃x (Musician(x) ∧ (PlayGuitar(x) ⊕ PlayPiano(x)))"
    },
    {
        "NL": "A film can be nominated for best drama, best comedy, or best documentary, but not all three at once.",
        "FOL": "∀x (Film(x) ∧ Nominated(x) → (BestDramaNomination(x) ⊕ BestComedyNomination(x) ⊕ BestDocumentaryNomination(x)))"
    },
    {
        "NL": "A country has a democratic government if it holds elections, but not if it is under military control.",
        "FOL": "∀x (Country(x) → (HoldsElections(x) ∧ ¬UnderMilitaryControl(x) → DemocraticGovernment(x)))"
    },
    {
        "NL": "Rain occurs when clouds are full and air pressure drops.",
        "FOL": "∀x (Rain(x) ↔ (CloudsFull(x) ∧ AirPressureDrops(x)))"
    },
    {
        "NL": "A student is from high school or college.",
        "FOL": "∀x (Student(x) → FromHighSchool(x) ∨ FromCollege(x))"
    },
    {
        "NL": "A dessert that consists of layers of sponge cake, fruit filling, and whipped cream is called a trifle.",
        "FOL": "∀x (Dessert(x) ∧ SpongeCakeLayers(x) ∧ FruitFilling(x) ∧ WhippedCream(x) → Trifle(x))"
    },
    {
        "NL": "A planet orbits a star in an elliptical path.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) → OrbitsInEllipticalPath(x, y))"
    },
    {
        "NL": "A laptop has a keyboard and a display screen.",
        "FOL": "∀x (Laptop(x) → (HasKeyBoard(x) ∧ HasDisplayScreen(x)))"
    },
    {
        "NL": "When an animal possesses the ability to fly, lays eggs, and is covered in feathers, it is a bird.",
        "FOL": "∀x (Animal(x) ∧ CanFly(x) ∧ LaysEggs(x) ∧ CoveredInFeathers(x) → Bird(x))"
    },
    {
        "NL": "A film that is both critically acclaimed and commercially successful may win an award.",
        "FOL": "∀x (Film(x) ∧ CriticallyAcclaimed(x) ∧ CommerciallySuccessful(x) → MayWinAward(x))"
    },
    {
        "NL": "A dessert that is a cake includes flour, sugar, and is baked in an oven.",
        "FOL": "∀x (Dessert(x) ∧ Cake(x) → IncludesFlour(x) ∧ IncludesSugar(x) ∧ BakedInOven(x))"
    },
    {
        "NL": "A computer stores digital data and utilizes it when required to execute tasks.",
        "FOL": "∀x (Computer(x) → (StoresDigitalData(x) ∧ (IsRequiredToExecuteTasks(x) → UtilizesData(x))))"
    },
    {
        "NL": "A student is diligent if they are punctual and always do their homework.",
        "FOL": "∀x (Student(x) ∧ IsPunctual(x) ∧ DoesHomework(x) → Diligent(x))"
    },
    {
        "NL": "If there are no fascinating installations, then no assessor esteems any artwork.",
        "FOL": "¬∃x (Installation(x)) → ¬∃y (Assessor(y) ∧ ∃z (Artwork(z) ∧ Esteem(y, z)))"
    },
    {
        "NL": "A bag is soft or hard.",
        "FOL": "∀x (Bag(x) → (Soft(x) ∨ Hard(x)))"
    },
    {
        "NL": "Every chef uses ingredients.",
        "FOL": "∀x (Chef(x) → Usesingredients(x))"
    },
    {
        "NL": "A smartphone is 5G-compatible when it supports 5G networks and has a 5G chipset.",
        "FOL": "∀x (Smartphone(x) ∧ Supports5GNetworks(x) ∧ Has5GChipset(x) → 5GCompatible(x))"
    },
    {
        "NL": "A car is considered a hybrid if it uses both gasoline and electricity for propulsion.",
        "FOL": "∀x (Car(x) ∧ UsesGasoline(x) ∧ UsesElectricity(x) → Hybrid(x))"
    },
    {
        "NL": "Rainforests provide habitat for a diverse range of plant and animal species.",
        "FOL": "∀x∀y∀z (Rainforest(x) ∧ Plant(y) ∧ Animal(z) → ProvidesHabitat(x, y, z))"
    },
    {
        "NL": "A vehicle that can travel on water, uses wind as a source of propulsion, and is operated by a crew is usually a sailboat.",
        "FOL": "∀x∀y∀z (Vehicle(x) ∧ CanTravelOnWater(x) ∧ WindPropulsion(x) ∧ Crew(y) ∧ OperatedBy(x, y) → Sailboat(x))"
    },
    {
        "NL": "A bird that sings beautifully and lives in cages is a canary.",
        "FOL": "∀x (Bird(x) ∧ SingsBeautifully(x) ∧ LivesInCages(x) → Canary(x))"
    },
    {
        "NL": "A university student is eligible for a scholarship if their grades are above average and they demonstrate financial need.",
        "FOL": "∀x (UniversityStudent(x) → (AboveAverageGrades(x) ∧ FinancialNeed(x) → EligibleForScholarship(x)))"
    },
    {
        "NL": "Frogs live on land and in water, whereas snakes live on land but not in water.",
        "FOL": "∀x (Frog(x) → (LiveOnLand(x) ∧ LiveInWater(x))) ∧ ∀y (Snake(y) → (LiveOnLand(y) ∧ ¬LiveInWater(y)))"
    },
    {
        "NL": "If a professional is a footballer, they either play in a stadium or at a sports complex.",
        "FOL": "∀x (Professional(x) ∧ Footballer(x) → PlayInStadium(x) ∨ PlayAtSportsComplex(x))"
    },
    {
        "NL": "A volcano erupts when molten rock, ash, and gases escape from an opening in the Earth's surface, causing the release of energy and the formation of new land.",
        "FOL": "∀x (Volcano(x) → (Erupts(x) ∧ ReleasesMoltenRockAshGases(x) ∧ ReleasesEnergy(x) ∧ FormsNewLand(x)))"
    },
    {
        "NL": "There is no bicycle that attracts all the green cars.",
        "FOL": "¬∃x (Bicycle(x) → ∀y (Green(y) ∧ Car(y) → Attracts(x, y)))"
    },
    {
        "NL": "An office is considered a healthy work environment when it provides ergonomic furniture, good air quality, and natural light.",
        "FOL": "∀x (Office(x) ∧ ErgonomicFurniture(x) ∧ GoodAirQuality(x) ∧ NaturalLight(x) → HealthyWorkEnvironment(x))"
    },
    {
        "NL": "A bank account is either a checking account, a savings account, or a business account, and not more than one type.",
        "FOL": "∀x (BankAccount(x) → ((CheckingAccount(x) ∨ SavingsAccount(x) ∨ BusinessAccount(x)) ∧ ¬(CheckingAccount(x) ∧ SavingsAccount(x)) ∧ ¬(CheckingAccount(x) ∧ BusinessAccount(x)) ∧ ¬(SavingsAccount(x) ∧ BusinessAccount(x))))"
    },
    {
        "NL": "A person is considered a risk-taker if they often engage in activities with uncertain outcomes.",
        "FOL": "∀x (EngagesInActivitiesWithUncertainOutcomes(x) → RiskTaker(x))"
    },
    {
        "NL": "Pizza toppings include cheese, vegetables, and various meats.",
        "FOL": "∀x (Pizza(x) → (∃y (Cheese(y) ∨ Vegetable(y) ∨ Meat(y)) ∧ Topping(x, y)))"
    },
    {
        "NL": "A triangle connects to a hexagon only if that hexagon connects back to it.",
        "FOL": "∀x (Triangle(x) → ∀y (Hexagon(y) ∧ ConnectsTo(x, y) → ConnectsTo(y, x)))"
    },
    {
        "NL": "There is a sky where no stars shine.",
        "FOL": "∃x ¬∃y (Sky(x) ∧ Star(y) ∧ ShineIn(y, x))"
    },
    {
        "NL": "An electronic item is a laptop when it is a portable computer, typically has a clamshell design, and combines the features of a desktop computer with a mobile device's portability.",
        "FOL": "∀x (ElectronicItem(x) ∧ PortableComputer(x) ∧ ClamshellDesign(x) ∧ CombinesFeatures(x, desktopComputer, mobileDevice) → Laptop(x))"
    },
    {
        "NL": "A podcast is informative if it has knowledgeable hosts, accurate information, and an engaging format.",
        "FOL": "∀x (Podcast(x) → (Informative(x) ↔ (KnowledgeableHosts(x) ∧ AccurateInformation(x) ∧ EngagingFormat(x))))"
    },
    {
        "NL": "Cities can be coastal or inland.",
        "FOL": "∀x (City(x) → (Coastal(x) ⊕ Inland(x)))"
    },
    {
        "NL": "An athlete achieves top performance when they maintain a healthy diet, follow a rigorous training regimen, and have a strong mental focus.",
        "FOL": "∀x (Athlete(x) ∧ HealthyDiet(x) ∧ RigorousTraining(x) ∧ StrongMentalFocus(x) → TopPerformance(x))"
    },
    {
        "NL": "A movie is a blockbuster if it has a large budget and a famous director, but not if it has poor reviews.",
        "FOL": "∀x (Movie(x) ∧ Blockbuster(x) ↔ (LargeBudget(x) ∧ FamousDirector(x) ∧ ¬PoorReviews(x)))"
    },
    {
        "NL": "There are deserts where no crops can thrive.",
        "FOL": "∃x ∃y (Desert(x) ∧ Crop(y) ∧ ¬ThriveIn(y, x))"
    },
    {
        "NL": "Watches display time, and calendars display dates.",
        "FOL": "∀x∀y (Watch(x) → DisplaysTime(x)) ∧ (Calendar(y) → DisplaysDates(y))"
    },
    {
        "NL": "All books are interesting.",
        "FOL": "∀w (Book(w) → Interesting(w))"
    },
    {
        "NL": "An athlete participates in running, swimming, and cycling events.",
        "FOL": "∃x (Athlete(x) ∧ ParticipatesInRunning(x) ∧ ParticipatesInSwimming(x) ∧ ParticipatesInCycling(x))"
    },
    {
        "NL": "Every student who helps a teacher is appreciated by that teacher.",
        "FOL": "∀x ∀y (Student(x) ∧ Teacher(y) ∧ Help(x, y) → Appreciate(y, x))"
    },
    {
        "NL": "A triangle has three sides, whereas a square has four sides.",
        "FOL": "∀x (Triangle(x) → ThreeSides(x)) ∧ ∀y (Square(y) → FourSides(y))"
    },
    {
        "NL": "Tablets have touchscreens for user interaction.",
        "FOL": "∀x (Tablet(x) → (Has(y) ∧ Touchscreen(y) ∧ For(z) ∧ UserInteraction(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "A computer program executes tasks by processing input data and generating output results.",
        "FOL": "∀x (ComputerProgram(x) → (∃y (InputData(y) ∧ Processes(x, y)) ∧ ∃z (OutputResults(z) ∧ Generates(x, z))))"
    },
    {
        "NL": "A helicopter is an aircraft that generates lift and propulsion by using one or more horizontal rotors.",
        "FOL": "∀x (Helicopter(x) → (Aircraft(x) ∧ GeneratesLift(x) ∧ GeneratesPropulsion(x) ∧ UsesHorizontalRotors(x)))"
    },
    {
        "NL": "A television displays images and receives signals.",
        "FOL": "∀x (Television(x) → (DisplaysImages(x) ∧ ReceivesSignals(x)))"
    },
    {
        "NL": "Some flowers are fragrant.",
        "FOL": "∃x (Flower(x) ∧ Fragrant(x))"
    },
    {
        "NL": "Birds can fly, but fish swim.",
        "FOL": "∀x ∀y (Bird(x) ∧ Fish(y) → (CanFly(x) ⊕ CanSwim(y)))"
    },
    {
        "NL": "A museum exhibits an artifact if it has historical significance, is well-preserved, and attracts visitors.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Artifact(y) ∧ Visitor(z) ∧ HistoricalSignificance(y) ∧ WellPreserved(y) ∧ AttractsVisitors(y, z) → Exhibits(x, y))"
    },
    {
        "NL": "If a person is a nurse, they assist doctors and care for patients.",
        "FOL": "∀x (Nurse(x) → ∃y (AssistsDoctorsAndCaresForPatients(x, y)))"
    },
    {
        "NL": "A tree provides shade when it has a dense canopy and is taller than the surrounding structures.",
        "FOL": "∀x (Tree(x) ∧ DenseCanopy(x) ∧ TallerThanSurroundingStructures(x) → ProvidesShade(x))"
    },
    {
        "NL": "A plant needs water, sunlight, and space to grow properly.",
        "FOL": "∀x (Plant(x) → (GetsWater(x) ∧ GetsSunlight(x) ∧ HasSpace(x)) → GrowsProperly(x))"
    },
    {
        "NL": "A smart device can be controlled with a voice command or a touchscreen, but not exclusively with physical buttons.",
        "FOL": "∀x (SmartDevice(x) → (VoiceControl(x) ∨ Touchscreen(x)) ∧ ¬PhysicalButtonsOnly(x))"
    },
    {
        "NL": "An object is magnetic if it generates an attractive force on ferromagnetic materials, and repels objects with the same magnetic poles.",
        "FOL": "∀x (Object(x) ∧ GeneratesAttractiveForceOnFerromagneticMaterials(x) ∧ RepelsSameMagneticPoles(x) → Magnetic(x))"
    },
    {
        "NL": "A river flows into a sea or an ocean, but not into both.",
        "FOL": "∀x∀y∀z (River(x) ∧ Sea(y) ∧ Ocean(z) → (FlowsInto(x, y) ⊕ FlowsInto(x, z)))"
    },
    {
        "NL": "A marathon is held in a city if it has a route that spans parks, bridges, and historical sites.",
        "FOL": "∀x (Marathon(x) ∧ HeldInCity(x) ↔ (∃y ∃z ∃w (Route(y) ∧ Park(z) ∧ Bridge(w) ∧ HistoricalSite(y) ∧ Spans(x, y) ∧ Spans(x, z) ∧ Spans(x, w))))"
    },
    {
        "NL": "A beverage is refreshing if it is cold and has a pleasant taste.",
        "FOL": "∀x (Beverage(x) ∧ Cold(x) ∧ PleasantTaste(x) → Refreshing(x))"
    },
    {
        "NL": "A place is considered a restaurant if it is an establishment that prepares and serves food and beverages, often with table service, and is open to the public for dining.",
        "FOL": "∀x (Place(x) ∧ PreparesAndServesFoodAndBeverages(x) ∧ OftenWithTableService(x) ∧ OpenToPublicForDining(x) → Restaurant(x))"
    },
    {
        "NL": "Lions that are hungry and aggressive are dangerous.",
        "FOL": "∀x (Lion(x) ∧ Hungry(x) ∧ Aggressive(x) → Dangerous(x))"
    },
    {
        "NL": "An exothermic reaction releases energy, usually in the form of heat, when chemical bonds are formed during the reaction process.",
        "FOL": "∀x (ExothermicReaction(x) → (ReleasesEnergy(x) ∧ FormsChemicalBonds(x) ∧ HeatProduced(x)))"
    },
    {
        "NL": "Not every student is either a junior or a sophomore.",
        "FOL": "¬∀x (Student(x) → (Junior(x) ∨ Sophomore(x)))"
    },
    {
        "NL": "All athletes are fit or some roses are red if and only if there exists a poem which is beautiful unless there are no nightmares.",
        "FOL": "(∀x (Athlete(x) → Fit(x)) ∨ ∃y (Rose(y) ∧ Red(y))) ↔ (∃z (Poem(z) ∧ (Beautiful(z) ∨ ∀w (¬Nightmare(w)))))"
    },
    {
        "NL": "All students who study mathematics are intelligent.",
        "FOL": "∀x (Student(x) ∧ StudyMathematics(x) → Intelligent(x))"
    },
    {
        "NL": "Some musicians who play the guitar also write their own songs.",
        "FOL": "∃x (Musician(x) ∧ PlayGuitar(x) ∧ WriteOwnSongs(x))"
    },
    {
        "NL": "A house has a modern design when it features minimalism and incorporates technology.",
        "FOL": "∀x (House(x) ∧ Minimalism(x) ∧ Technology(x) → ModernDesign(x))"
    },
    {
        "NL": "A recycling program that efficiently processes waste materials, promotes sustainable practices, and raises community awareness reduces landfill waste and conserves natural resources.",
        "FOL": "∀x∀y∀z (RecyclingProgram(x) ∧ WasteMaterials(y) ∧ SustainablePractices(z) ∧ EfficientlyProcesses(x, y) ∧ Promotes(x, z) ∧ RaisesCommunityAwareness(x) → (ReducesLandfillWaste(x) ∧ ConservesNaturalResources(x)))"
    },
    {
        "NL": "A room is suitable for an event if it can accommodate the number of attendees, provides the necessary equipment, and is available on the desired date.",
        "FOL": "∀x (Room(x) ∧ (AccommodatesAttendees(x) ∧ ProvidesEquipment(x) ∧ AvailableOnDate(x)) → SuitableForEvent(x))"
    },
    {
        "NL": "Lakes are bodies of water surrounded by land, while rivers are bodies of water that flow towards an ocean or another river.",
        "FOL": "∀x∀y (Lake(x) ∧ River(y) → (SurroundedByLand(x) ∧ FlowsToWater(y)))"
    },
    {
        "NL": "A book's author is the person who wrote it.",
        "FOL": "∀x∀y (Book(x) ∧ Person(y) → (Author(x, y) ↔ Wrote(y, x)))"
    },
    {
        "NL": "An author writes books, articles, or essays and may receive literary awards for their work.",
        "FOL": "∀x ∀y (Author(x) ∧ (Book(y) ∨ Article(y) ∨ Essay(y)) → (Writes(x, y) ∧ (∃z (LiteraryAward(z) ∧ MayReceive(x, z)))))"
    },
    {
        "NL": "Cameras capture images, microphones record sound, and thermometers detect temperature changes.",
        "FOL": "∀x (Camera(x) → CapturesImages(x)) ∧ ∀y (Microphone(y) → RecordsSound(y)) ∧ ∀z (Thermometer(z) → DetectsTemperatureChanges(z))"
    },
    {
        "NL": "A vehicle is considered a convertible if it has a removable or retractable roof.",
        "FOL": "∀x (Vehicle(x) ∧ (RemovableRoof(x) ∨ RetractableRoof(x)) → Convertible(x))"
    },
    {
        "NL": "An athlete is a professional if they compete at a high level, receive sponsorships, and earn a living from their sport.",
        "FOL": "∀x (Athlete(x) ∧ CompetesAtHighLevel(x) ∧ ReceivesSponsorships(x) ∧ EarnsLivingFromSport(x) → Professional(x))"
    },
    {
        "NL": "A creature that can live both on land and in water is an amphibian.",
        "FOL": "∀x (Creature(x) ∧ CanLiveBothOnLandAndInWater(x) → Amphibian(x))"
    },
    {
        "NL": "A restaurant serves dishes with meat or fish, but not both, and never serves vegetarian dishes.",
        "FOL": "∀x∀y (Restaurant(x) ∧ Dish(y) ∧ (Meat(y) ⊕ Fish(y)) ∧ ¬Vegetarian(y) → Serves(x, y))"
    },
    {
        "NL": "Books that are old and torn always require more care.",
        "FOL": "∀x (Book(x) ∧ Old(x) ∧ Torn(x) → RequireMoreCare(x))"
    },
    {
        "NL": "A car can be automatic or manual.",
        "FOL": "∀x (Car(x) → (Automatic(x) ∨ Manual(x)))"
    },
    {
        "NL": "An animal is a pet only if it is domesticated or it is a goldfish.",
        "FOL": "∀v (Animal(v) → (Pet(v) ↔ (Domesticated(v) ∨ IsGoldfish(v))))"
    },
    {
        "NL": "A car is considered eco-friendly if it has low emissions and high fuel efficiency.",
        "FOL": "∀x (Car(x) ∧ LowEmissions(x) ∧ HighFuelEfficiency(x) → EcoFriendly(x))"
    },
    {
        "NL": "In an ecosystem, the energy flow from primary producers to primary consumers, and then to secondary consumers through a series of trophic levels.",
        "FOL": "∀x∀y∀z (PrimaryProducer(x) ∧ PrimaryConsumer(y) ∧ SecondaryConsumer(z) → (EnergyFlow(x, y) ∧ EnergyFlow(y, z)))"
    },
    {
        "NL": "A vending machine dispenses snacks or beverages.",
        "FOL": "∀x (VendingMachine(x) → (DispensesSnacks(x) ∨ DispensesBeverages(x)))"
    },
    {
        "NL": "A city is crowded if it has a dense population and limited space.",
        "FOL": "∀x (City(x) ∧ (DensePopulation(x) ∧ LimitedSpace(x)) → Crowded(x))"
    },
    {
        "NL": "If a person is a writer, they either write fiction or non-fiction.",
        "FOL": "∀x (Person(x) ∧ Writer(x) → WriteFiction(x) ⊕ WriteNonFiction(x))"
    },
    {
        "NL": "A beverage is alcoholic if it contains ethanol but not if it has less than 0.5% alcohol by volume.",
        "FOL": "∀x (Beverage(x) → (Alcoholic(x) ↔ (ContainsEthanol(x) ∧ ¬LessThan0_5PercentAlcohol(x))))"
    },
    {
        "NL": "A soccer player kicks a ball and scores goals.",
        "FOL": "∀x ∀y (SoccerPlayer(x) ∧ Ball(y) → (Kicks(x, y) ∧ ScoresGoals(x)))"
    },
    {
        "NL": "A book that has an engaging plot, well-developed characters, and a captivating writing style is more likely to become a bestseller.",
        "FOL": "∀x (Book(x) ∧ EngagingPlot(x) ∧ WellDevelopedCharacters(x) ∧ CaptivatingWritingStyle(x) → LikelyToBecomeBestseller(x))"
    },
    {
        "NL": "Rainforests are characterized by high rainfall, dense vegetation, and a large variety of animal species.",
        "FOL": "∀x (Rainforest(x) → (HighRainfall(x) ∧ DenseVegetation(x) ∧ ∀y (Animal(y) ∧ InRainforest(y, x) → LargeVarietyOfSpecies(x))))"
    },
    {
        "NL": "A chemical reaction is exothermic if it releases energy in the form of heat or light, leading to a decrease in the internal energy of the system.",
        "FOL": "∀x ∀y ∀z (ChemicalReaction(x) ∧ ReleasesEnergy(x, y) ∧ (Heat(y) ∨ Light(y)) ∧ DecreasesInternalEnergy(x, z) → Exothermic(x))"
    },
    {
        "NL": "Eagles fly, horses gallop, and fish swim.",
        "FOL": "∀x ∀y ∀z (Eagle(x) ∧ Horse(y) ∧ Fish(z) → (Fly(x) ∧ Gallop(y) ∧ Swim(z)))"
    },
    {
        "NL": "Eagles are predators and fly during the day, while fireflies are nocturnal and fly at night.",
        "FOL": "∀x (Eagle(x) → (Predator(x) ∧ FliesDuringDay(x))) ∧ ∀y (Firefly(y) → (Nocturnal(y) ∧ FliesAtNight(y)))"
    },
    {
        "NL": "A country's national anthem is a song that represents the nation and its values.",
        "FOL": "∀x∀y (Country(x) ∧ NationalAnthem(x, y) → (Song(y) ∧ RepresentsNationAndValues(y, x)))"
    },
    {
        "NL": "A successful entrepreneur identifies market opportunities, takes calculated risks, and effectively manages resources.",
        "FOL": "∀x (Entrepreneur(x) ∧ IdentifiesMarketOpportunities(x) ∧ TakesCalculatedRisks(x) ∧ EffectivelyManagesResources(x) → Successful(x))"
    },
    {
        "NL": "A camera captures images or records videos.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∨ RecordsVideos(x)))"
    },
    {
        "NL": "A podcast is engaging if it features interesting topics and charismatic speakers.",
        "FOL": "∀x (Podcast(x) ∧ FeaturesInterestingTopics(x) ∧ FeaturesCharismaticSpeakers(x) → Engaging(x))"
    },
    {
        "NL": "A pencil has an eraser.",
        "FOL": "∀x (Pencil(x) → HasEraser(x))"
    },
    {
        "NL": "Something is a bright lamp, and something is a dark mirror.",
        "FOL": "∃x (Bright(x) ∧ Lamp(x)) ∧ ∃x (Dark(x) ∧ Mirror(x))"
    },
    {
        "NL": "A machine is autonomous if it can navigate and make decisions.",
        "FOL": "∀x (Machine(x) ∧ CanNavigate(x) ∧ MakeDecisions(x) → Autonomous(x))"
    },
    {
        "NL": "Books can be fiction or nonfiction, but not both.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ Nonfiction(x)))"
    },
    {
        "NL": "Some books are fiction and have a mystery theme.",
        "FOL": "∃x (Book(x) ∧ Fiction(x) ∧ MysteryTheme(x))"
    },
    {
        "NL": "The more exercise a person does, the healthier they generally are.",
        "FOL": "∀x ∀y (Person(x) ∧ Person(y) ∧ MoreExercise(x, y) → Healthier(x, y))"
    },
    {
        "NL": "A river provides a habitat for various aquatic species and contributes to the water cycle by flowing into lakes or the ocean.",
        "FOL": "∀x∀y (River(x) ∧ ProvidesHabitatForAquaticSpecies(x, y) ∧ (FlowsIntoLakes(x) ∨ FlowsIntoOcean(x)) → ContributesToWaterCycle(x))"
    },
    {
        "NL": "A biologist studies living organisms, focusing either on animals or plants, and may investigate microscopic organisms.",
        "FOL": "∀x∀y∀z (Biologist(x) ∧ LivingOrganism(y) ∧ (Animal(y) ∨ Plant(y)) ∧ (MicroscopicOrganism(z) ∨ ¬MicroscopicOrganism(z)) → Studies(x, y, z))"
    },
    {
        "NL": "A gym has exercise equipment.",
        "FOL": "∀x ∃y (Gym(x) ∧ ExerciseEquipment(y) ∧ LocatedIn(y, x))"
    },
    {
        "NL": "A computer can run an operating system, and the performance of the computer depends on the compatibility of its hardware, software, and the chosen operating system.",
        "FOL": "∀x ∀y ∀z ∀w (Computer(x) ∧ OperatingSystem(y) ∧ Hardware(x, z) ∧ Software(x, w) ∧ RunsOperatingSystem(x, y) → (HighPerformance(x) ∨ LowPerformance(x) ∨ AveragePerformance(x)))"
    },
    {
        "NL": "A flight is preferred by passengers if it has comfortable seats, friendly staff, and arrives on time.",
        "FOL": "∀x (Flight(x) → (PreferredByPassengers(x) ↔ (ComfortableSeats(x) ∧ FriendlyStaff(x) ∧ ArrivesOnTime(x))))"
    },
    {
        "NL": "An animal is classified as endangered if its population is decreasing and it faces a high risk of extinction.",
        "FOL": "∀x (Animal(x) ∧ DecreasingPopulation(x) ∧ HighRiskOfExtinction(x) → Endangered(x))"
    },
    {
        "NL": "Trees absorb carbon dioxide and release oxygen through a process called photosynthesis.",
        "FOL": "∀x (Tree(x) → (Absorbs(x, carbonDioxide) ∧ Releases(x, oxygen) ∧ Photosynthesis(x)))"
    },
    {
        "NL": "No vehicle is both a car and a motorcycle.",
        "FOL": "¬∃x (Vehicle(x) ∧ Car(x) ∧ Motorcycle(x))"
    },
    {
        "NL": "A person is considered an athlete if they engage in physical activities or sports professionally or as a hobby.",
        "FOL": "∀x (EngagesInPhysicalActivities(x) ∨ EngagesInSports(x) → Athlete(x))"
    },
    {
        "NL": "A dog is considered friendly if it doesn't bite or growl.",
        "FOL": "∀x (Dog(x) ∧ ¬(Bites(x) ∨ Growls(x)) → Friendly(x))"
    },
    {
        "NL": "Every student has a favorite subject.",
        "FOL": "∀x∃y (Student(x) → (FavoriteSubject(x, y)))"
    },
    {
        "NL": "A person who is a vegetarian does not eat meat.",
        "FOL": "∀x (Vegetarian(x) → ¬EatsMeat(x))"
    },
    {
        "NL": "A musical instrument produces sound when it is played by applying a specific technique, such as striking, plucking, or blowing.",
        "FOL": "∀x (MusicalInstrument(x) ∧ (PlayedByStriking(x) ∨ PlayedByPlucking(x) ∨ PlayedByBlowing(x)) → ProducesSound(x))"
    },
    {
        "NL": "A store is popular when it has many customers or offers unique products, but not if it has high prices.",
        "FOL": "Popular(Store) ↔ (ManyCustomers(Store) ∨ UniqueProducts(Store)) ∧ ¬HighPrices(Store)"
    },
    {
        "NL": "A father teaches his child how to ride a bicycle.",
        "FOL": "∀x∀y (Father(x) ∧ Child(y) → TeachesRidingBicycle(x, y))"
    },
    {
        "NL": "A smartphone with a long-lasting battery, a high-quality camera, and ample storage capacity is desirable for most users.",
        "FOL": "∀x (Smartphone(x) ∧ LongLastingBattery(x) ∧ HighQualityCamera(x) ∧ AmpleStorageCapacity(x) → DesirableForMostUsers(x))"
    },
    {
        "NL": "A chef prepares a dish that is visually appealing and flavorful.",
        "FOL": "∀x ∀y (Chef(x) ∧ Dish(y) ∧ Prepares(x, y) → (VisuallyAppealing(y) ∧ Flavorful(y)))"
    },
    {
        "NL": "A dog chases a cat.",
        "FOL": "∃x ∃y (Dog(x) ∧ Cat(y) ∧ Chases(x, y))"
    },
    {
        "NL": "A celestial body that implodes due to its self-gravity and is transformed into a highly compact object is a black hole.",
        "FOL": "∀x (CelestialBody(x) ∧ ImplodesDueToSelfGravity(x) ∧ TransformsIntoHighlyCompactObject(x) → BlackHole(x))"
    },
    {
        "NL": "There isn't any museum that exhibits all ancient artifacts.",
        "FOL": "¬∃x (Museum(x) ∧ ∀y (Ancient(y) ∧ Artifact(y) → Exhibits(x, y)))"
    },
    {
        "NL": "A student studies and takes exams, while a teacher instructs and grades exams.",
        "FOL": "∀x (Student(x) ∧ (Studies(x) ∨ TakesExams(x)) ∧ Teacher(x) ∧ (Instructs(x) ∨ GradesExams(x)))"
    },
    {
        "NL": "A garden looks beautiful if it is well-maintained and has a variety of colorful flowers.",
        "FOL": "∀x (Garden(x) → (Beautiful(x) ↔ (WellMaintained(x) ∧ ColorfulFlowers(x))))"
    },
    {
        "NL": "A bachelor's degree is required for admission to a master's degree program.",
        "FOL": "∀x∀y (MastersDegreeProgram(x) ∧ Applicant(y) → RequiresBachelorsDegree(x, y))"
    },
    {
        "NL": "Some architects either design houses or commercial buildings, but do not do both.",
        "FOL": "∃x (Architect(x) ∧ (Houses(x) ⊕ CommercialBuildings(x)))"
    },
    {
        "NL": "An appliance is termed a fridge if it utilizes cooling mechanisms to chill and preserve food.",
        "FOL": "∀x (Appliance(x) ∧ UtilizesCoolingMechanisms(x) ∧ ChillsFood(x) ∧ PreservesFood(x) → Fridge(x))"
    },
    {
        "NL": "A movie is successful if it has a high box office revenue and positive reviews.",
        "FOL": "∀x (Movie(x) ∧ HighBoxOfficeRevenue(x) ∧ PositiveReviews(x) → Successful(x))"
    },
    {
        "NL": "A triangle is either isosceles, equilateral, or scalene, but not a combination of these.",
        "FOL": "∀x (Triangle(x) → (Isosceles(x) ⊕ Equilateral(x) ⊕ Scalene(x)))"
    },
    {
        "NL": "When a software is open-source and has an active community, it often receives regular updates and improvements.",
        "FOL": "∀x ∀y (Software(x) ∧ OpenSource(x) ∧ ActiveCommunity(x) → ReceivesRegularUpdatesAndImprovements(y))"
    },
    {
        "NL": "A flower is a perennial if it lives for more than two years.",
        "FOL": "∀x (Flower(x) ∧ LivesMoreThanTwoYears(x) → Perennial(x))"
    },
    {
        "NL": "Each orange object points to at least one thing that points to only brown things.",
        "FOL": "∀x (Orange(x) → ∃y (PointsTo(x, y) ∧ ¬∃z (PointsTo(y, z) ∧ ¬Brown(z))))"
    },
    {
        "NL": "Some employees are either salesmen or lawyers, but not both.",
        "FOL": "∃x (Employee(x) ∧ (Salesman(x) ⊕ Lawyer(x)))"
    },
    {
        "NL": "A building that serves as a gathering place for religious activities, features distinctive architectural elements, and is associated with a specific religious tradition is a place of worship.",
        "FOL": "∀x∀y∀z (Building(x) ∧ ServesAsGatheringPlaceForReligiousActivities(x) ∧ FeaturesDistinctiveArchitecturalElements(x, y) ∧ AssociatedWithSpecificReligiousTradition(x, z) → PlaceOfWorship(x))"
    },
    {
        "NL": "An umbrella shields against rain, while sunglasses protect from sunlight.",
        "FOL": "∀x∀y (Umbrella(x) ∧ Rain(y) → Shields(x, y)) ∧ ∀z∀w (Sunglasses(z) ∧ Sunlight(w) → Protects(z, w))"
    },
    {
        "NL": "A professional photographer uses high-quality cameras, understands composition, and masters post-processing techniques.",
        "FOL": "∀x (ProfessionalPhotographer(x) → (UsesHighQualityCameras(x) ∧ UnderstandsComposition(x) ∧ MastersPostProcessingTechniques(x)))"
    },
    {
        "NL": "A planet is habitable if it has water and no harmful gases.",
        "FOL": "∀x (Planet(x) ∧ HaveWater(x) ∧ ¬HaveHarmfulGases(x) → Habitable(x))"
    },
    {
        "NL": "A game with a ball and a net is volleyball.",
        "FOL": "∀x (Game(x) ∧ HasBall(x) ∧ HasNet(x) → Volleyball(x))"
    },
    {
        "NL": "A food is considered spicy if it contains capsaicin, which is found in chili peppers.",
        "FOL": "∀x (Food(x) ∧ ContainsCapsaicin(x) → Spicy(x))"
    },
    {
        "NL": "In an organization, employees who have management positions or hold technical expertise but not both have more decision-making authority than those who only have entry-level roles.",
        "FOL": "∀x ∀y (Employee(x) ∧ Employee(y) ∧ (Management(x) ⊕ TechnicalExpertise(x)) ∧ ¬(Management(x) ∧ TechnicalExpertise(x)) ∧ EntryLevel(y) ∧ ¬Management(y) ∧ ¬TechnicalExpertise(y) → MoreDecisionMakingAuthority(x, y))"
    },
    {
        "NL": "A device is classified as a musical instrument if it is designed to produce musical sounds through human manipulation or control.",
        "FOL": "∀x (Device(x) ∧ DesignedToProduceMusicalSounds(x) ∧ HumanManipulationOrControl(x) → MusicalInstrument(x))"
    },
    {
        "NL": "An airline upgrades a passenger to business class if their frequent flyer status is high and the flight is not fully booked.",
        "FOL": "∀x∀y (Airline(x) ∧ Passenger(y) → (HighFrequentFlyerStatus(y) ∧ NotFullyBookedFlight(x) → UpgradesToBusinessClass(x, y)))"
    },
    {
        "NL": "In a solar system, planets orbit around the sun, moons orbit around planets, and comets travel in elongated orbits.",
        "FOL": "∀x ∀y ∀z (Sun(x) ∧ Planet(y) ∧ Comet(z) → (OrbitsAround(y, x) ∧ OrbitsAroundMoon(y) ∧ ElongatedOrbit(z)))"
    },
    {
        "NL": "Some animals are mammals and some animals are marine, but there are no marine mammals.",
        "FOL": "∃x (Mammal(x)) ∧ ∃x (Marine(x)) ∧ ¬∃x (Mammal(x) ∧ Marine(x))"
    },
    {
        "NL": "A car needs gas, air, and oil to run smoothly.",
        "FOL": "∀z (Car(z) → (NeedsGas(z) ∧ NeedsAir(z) ∧ NeedsOil(z)) → RunsSmoothly(z))"
    },
    {
        "NL": "A computer programming language is categorized as object-oriented if it supports the concepts of classes, objects, inheritance, and polymorphism.",
        "FOL": "∀x (ProgrammingLanguage(x) ∧ SupportsClasses(x) ∧ SupportsObjects(x) ∧ SupportsInheritance(x) ∧ SupportsPolymorphism(x) → ObjectOriented(x))"
    },
    {
        "NL": "If every teacher who has a Master's degree is assigned, then some assistants who haven't enrolled in a school will also be assigned.",
        "FOL": "∀x (Teacher(x) ∧ MastersDegree(x) → Assigned(x)) → ∃y (Assistant(y) ∧ ¬SchoolStudent(y) ∧ Assigned(y))"
    },
    {
        "NL": "A city has a mayor.",
        "FOL": "∀x ∃y (City(x) ∧ Mayor(y) ∧ Governs(y, x))"
    },
    {
        "NL": "A smartphone has a touchscreen display, camera, and can access the internet.",
        "FOL": "∀x (Smartphone(x) → (HasTouchscreenDisplay(x) ∧ HasCamera(x) ∧ AccessesInternet(x)))"
    },
    {
        "NL": "A television show can be broadcast on a network or streamed online, but not both simultaneously.",
        "FOL": "∀x (TelevisionShow(x) → (BroadcastOnNetwork(x) ⊕ StreamedOnline(x)))"
    },
    {
        "NL": "Noah is not a photographer if and only if Grace is an architect.",
        "FOL": "¬Photographer(noah) ↔ Architect(grace)"
    },
    {
        "NL": "All dogs bark loudly if not all cats are black.",
        "FOL": "¬∀x (Cat(x) → Black(x)) → ∃y (Dog(y) ∧ ∀z (Dog(z) → BarkLoudly(z, y)))"
    },
    {
        "NL": "In a library, books are organized into categories such as fiction, non-fiction, biography, and reference, and are placed on shelves according to their categories.",
        "FOL": "∀x ∀y (Library(x) ∧ Book(y) ∧ InLibrary(y, x) → ((Fiction(y) ∨ NonFiction(y) ∨ Biography(y) ∨ Reference(y)) ∧ OnShelf(y)))"
    },
    {
        "NL": "A factory produces products.",
        "FOL": "∀x ∃y (Factory(x) ∧ Product(y) ∧ Produces(x, y))"
    },
    {
        "NL": "In a forest, trees grow taller by absorbing sunlight and nutrients from the soil.",
        "FOL": "∀x∀y∀z (Forest(x) ∧ Tree(y) ∧ Sunlight(z) ∧ AbsorbsSunlight(y, z) ∧ NutrientsFromSoil(y) → GrowsTaller(y))"
    },
    {
        "NL": "A camera captures images, while a microphone records sounds.",
        "FOL": "∀x ∀y (Camera(x) ∧ Microphone(y) → (CapturesImages(x) ∧ RecordsSounds(y)))"
    },
    {
        "NL": "A modern smartphone can take photos, make calls or install apps.",
        "FOL": "∀x (ModernSmartphone(x) → TakePhotos(x) ∧ MakeCalls(x) ∧ InstallApps(x))"
    },
    {
        "NL": "An avivore feeds on birds for energy, while a scavenger seeks dead organisms for survival.",
        "FOL": "∀x ∀y (Avivore(x) ∧ Birds(y) → FeedsForEnergy(x, y)) ∧ ∀z ∀w (Scavenger(z) ∧ DeadOrganisms(w) → SeeksForSurvival(z, w))"
    },
    {
        "NL": "A book can be romance, filled with passion and desire, or it can be mystery, filled with secrets and uncovered truths.",
        "FOL": "∀x (Book(x) → ((Romance(x) ∧ Passion(x) ∧ Desire(x)) ⊕ (Mystery(x) ∧ Secrets(x) ∧ UncoveredTruths(x))))"
    },
    {
        "NL": "An expensive pen can be ballpoint or fountain.",
        "FOL": "∀x (Pen(x) ∧ Expensive(x) → (Ballpoint(x) ⊕ Fountain(x)))"
    },
    {
        "NL": "A square indicates a pentagon only if that pentagon indicates back to it.",
        "FOL": "∀x ∀y (Square(x) ∧ Pentagon(y) ∧ (Indicates(x, y) → Indicates(y, x)))"
    },
    {
        "NL": "Lucas fears Mona and Lila.",
        "FOL": "Fear(lucas, mona) ∧ Fear(lucas, lila)"
    },
    {
        "NL": "A planet is habitable if and only if it orbits at least one life-sustaining star.",
        "FOL": "∀x (Habitable(x) ↔ ∃y (LifeSustaining(y) ∧ Orbits(x, y)))"
    },
    {
        "NL": "Every scholar who has published more than five papers or has a doctoral degree, but not both, teaches in two different faculties unless they are a head of department, in which case they lead a research group.",
        "FOL": "∀x (Scholar(x) ∧ (PublishedMoreThanFivePapers(x) ⊕ HasDoctoralDegree(x)) → (TeachesInTwoDifferentFaculties(x) ∨ (HeadOfDepartment(x) ∧ LeadsResearchGroup(x))))"
    },
    {
        "NL": "Certain meals are either vegetarian or non-vegetarian, but not both.",
        "FOL": "∃x (Meal(x) ∧ (Vegetarian(x) ⊕ NonVegetarian(x)))"
    },
    {
        "NL": "A company can launch a product in a market if the product complies with market regulations, the company has a distribution network in the market, and the company has completed the required marketing activities.",
        "FOL": "∀x∀y∀z (Company(x) ∧ Product(y) ∧ Market(z) ∧ CompliesWithRegulations(y, z) ∧ DistributionNetwork(x, z) ∧ CompletedMarketingActivities(x, y) → CanLaunchProduct(x, y, z))"
    },
    {
        "NL": "A chair can have four legs or three legs, but not both.",
        "FOL": "∀x (Chair(x) → (HasFourLegs(x) ⊕ HasThreeLegs(x)))"
    },
    {
        "NL": "A dessert can be sweet or sour, but it should not be spicy.",
        "FOL": "∀x (Dessert(x) → (Sweet(x) ∨ Sour(x)) ∧ ¬Spicy(x))"
    },
    {
        "NL": "All tigers hunt skillfully.",
        "FOL": "∀x (Tiger(x) → HuntSkillfully(x))"
    },
    {
        "NL": "A spider catches insects in its web.",
        "FOL": "∀x∀y (Spider(x) ∧ Insect(y) → CatchesInWeb(x, y))"
    },
    {
        "NL": "In a wetland ecosystem, water-tolerant plants and a variety of animal species coexist, with the plants providing habitat and the animals contributing to nutrient cycling.",
        "FOL": "∀x ∀y (WetlandEcosystem(x) ∧ (WaterTolerantPlants(x, y) ∧ ProvidesHabitat(y)) ∧ (VarietyOfAnimalSpecies(x) ∧ ContributesToNutrientCycling(x)))"
    },
    {
        "NL": "A tree sheds its leaves in autumn unless it's an evergreen.",
        "FOL": "∀x (Tree(x) → (Autumn(x) ∧ ¬Evergreen(x) → ShedsLeaves(x)))"
    },
    {
        "NL": "A submarine is an underwater vessel designed for navigation beneath the ocean's surface, often used for scientific research, military purposes, or deep-sea exploration.",
        "FOL": "∀x (Submarine(x) → (UnderwaterVessel(x) ∧ DesignedForNavigation(x) ∧ BeneathOceanSurface(x) ∧ (ScientificResearch(x) ∨ MilitaryPurposes(x) ∨ DeepSeaExploration(x))))"
    },
    {
        "NL": "An area is considered a wetland if it is saturated with water, supports aquatic plants, and provides habitat for a diverse range of wildlife.",
        "FOL": "∀x (Area(x) ∧ SaturatedWithWater(x) ∧ SupportsAquaticPlants(x) ∧ ProvidesHabitatForWildlife(x) → Wetland(x))"
    },
    {
        "NL": "It's not accurate that every student who studies hard is intelligent, and no such student can play football.",
        "FOL": "¬∀x (Student(x) ∧ StudiesHard(x) → Intelligent(x)) ∧ ¬∃y (Student(y) ∧ StudiesHard(y) ∧ CanPlayFootball(y))"
    },
    {
        "NL": "A person is considered bilingual if they can fluently speak and understand at least two languages.",
        "FOL": "∀x (Person(x) ∧ CanSpeakAndUnderstandAtLeastTwoLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "A cat is gentle, whereas a dog is energetic.",
        "FOL": "∀x (Cat(x) → IsGentle(x)) ∧ ∀y (Dog(y) → IsEnergetic(y))"
    },
    {
        "NL": "A volcano can be active, dormant, or extinct, depending on its current state of activity.",
        "FOL": "∀x (Volcano(x) → (Active(x) ∨ Dormant(x) ∨ Extinct(x)))"
    },
    {
        "NL": "A person can be a teacher, a student, or neither, but not both.",
        "FOL": "∀x (Person(x) → (Teacher(x) ⊕ Student(x) ⊕ ¬(Teacher(x) ∨ Student(x))))"
    },
    {
        "NL": "A liquid that has a high boiling point, low freezing point, and is capable of dissolving various substances is a solvent.",
        "FOL": "∀x (Liquid(x) ∧ HighBoilingPoint(x) ∧ LowFreezingPoint(x) ∧ CapableOfDissolvingSubstances(x) → Solvent(x))"
    },
    {
        "NL": "No software is both bug-free and slow.",
        "FOL": "¬∃x (Software(x) ∧ BugFree(x) ∧ Slow(x))"
    },
    {
        "NL": "Lions hunt in groups called prides, while tigers are solitary hunters.",
        "FOL": "∀x ∀y (Lion(x) ∧ Group(y) ∧ HuntsInGroup(x, y) → Pride(y)) ∧ ∀z (Tiger(z) → SolitaryHunter(z))"
    },
    {
        "NL": "A mammal is a cat if it isn't a dog.",
        "FOL": "∀x (¬Dog(x) → Cat(x))"
    },
    {
        "NL": "An artistic expression that utilizes physical movement, conveys emotions or ideas, and is performed before an audience is a dance.",
        "FOL": "∀x∀y∀z (ArtisticExpression(x) ∧ UtilizesPhysicalMovement(x) ∧ ConveysEmotionsOrIdeas(x, y) ∧ PerformedBeforeAudience(x, z) → Dance(x))"
    },
    {
        "NL": "An umbrella protects against rain, while a parasol shields against sunlight.",
        "FOL": "∀x (Umbrella(x) → ProtectsAgainstRain(x)) ∧ ∀y (Parasol(y) → ShieldsAgainstSunlight(y))"
    },
    {
        "NL": "Photosynthesis is the process by which plants convert sunlight, carbon dioxide, and water into glucose and oxygen.",
        "FOL": "∀x (Photosynthesis(x) ↔ (PlantsConvertSunlight(x) ∧ ConvertsCarbonDioxide(x) ∧ ConvertsWater(x) ∧ ProducesGlucose(x) ∧ ProducesOxygen(x)))"
    },
    {
        "NL": "A building is residential or commercial.",
        "FOL": "∀x (Building(x) → (Residential(x) ∨ Commercial(x)))"
    },
    {
        "NL": "All robots are artificial.",
        "FOL": "∀x (Robot(x) → Artificial(x))"
    },
    {
        "NL": "Designers design for clients, and project managers oversee them.",
        "FOL": "∀x ∀y ∀z (Designer(x) ∧ Client(y) ∧ ProjectManager(z) → DesignsFor(x, y) ∧ Oversees(z, y))"
    },
    {
        "NL": "A food is a dessert if it is sweet, typically eaten after a main meal, and can be either cold or warm.",
        "FOL": "∀x (Food(x) ∧ Sweet(x) ∧ EatenAfterMainMeal(x) ∧ (Cold(x) ∨ Warm(x)) → Dessert(x))"
    },
    {
        "NL": "Every student visits some library.",
        "FOL": "∀x (Student(x) → ∃y (Library(y) ∧ Visits(x, y)))"
    },
    {
        "NL": "A bicycle has a frame, wheels, and a chain.",
        "FOL": "∃x (Bicycle(x) ∧ Frame(x) ∧ Wheels(x) ∧ Chain(x))"
    },
    {
        "NL": "An athlete can participate in either summer or winter Olympic Games, but not both.",
        "FOL": "∀x (Athlete(x) → ParticipatesInSummerOlympics(x) ⊕ ParticipatesInWinterOlympics(x))"
    },
    {
        "NL": "A balanced ecosystem maintains a stable population of various species, has a healthy food chain, and supports natural processes.",
        "FOL": "∀x (BalancedEcosystem(x) ↔ (StablePopulation(x) ∧ HealthyFoodChain(x) ∧ SupportsNaturalProcesses(x)))"
    },
    {
        "NL": "All books are either fiction or non-fiction, but not both.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "If a person is a cashier, they handle transactions and payments.",
        "FOL": "∀x (Cashier(x) → HandlesTransactionsAndPayments(x))"
    },
    {
        "NL": "A clean energy source, like wind or solar power, can generate power without exhausting the earth's resources, and it aids in lowering carbon footprint.",
        "FOL": "∀x (CleanEnergySource(x) ∧ (WindPower(x) ∨ SolarPower(x)) → (GeneratesPower(x) ∧ ¬ExhaustEarthResources(x) ∧ AidLowerCarbonFootprint(x)))"
    },
    {
        "NL": "A type of computer memory that is non-volatile, allows for fast data retrieval, and is commonly found in solid-state drives is flash memory.",
        "FOL": "∀x∀y∀z (ComputerMemory(x) ∧ NonVolatile(x) ∧ FastDataRetrieval(x) ∧ SolidStateDrives(y) ∧ CommonlyFoundIn(x, y) ∧ ElectronicDevice(z) ∧ Uses(z, x) → FlashMemory(x))"
    },
    {
        "NL": "An item is classified as fragile if it can break easily.",
        "FOL": "∀x (Item(x) ∧ CanBreakEasily(x) → Fragile(x))"
    },
    {
        "NL": "Puzzles and games intrigue Student Melissa.",
        "FOL": "∀x ((Puzzle(x) ∨ Game(x)) → Intrigue(x, studentmelissa))"
    },
    {
        "NL": "A device that can receive and send messages wirelessly is a mobile phone.",
        "FOL": "∀x (Device(x) ∧ ReceiveMessagesWirelessly(x) ∧ SendMessagesWirelessly(x) → MobilePhone(x))"
    },
    {
        "NL": "A meal prepared with fresh ingredients and proper cooking techniques offers a delightful culinary experience.",
        "FOL": "∀x (Meal(x) ∧ PreparedWithFreshIngredients(x) ∧ ProperCookingTechniques(x) → OffersDelightfulCulinaryExperience(x))"
    },
    {
        "NL": "If a city has a low crime rate and a high employment rate, it is considered a safe place to live.",
        "FOL": "∀x (City(x) ∧ LowCrimeRate(x) ∧ HighEmploymentRate(x) → SafePlaceToLive(x))"
    },
    {
        "NL": "There exists a book that every story originates from, unless all authors are creative.",
        "FOL": "¬∀x (Author(x) → Creative(x)) → ∃y (Book(y) ∧ ∀z (Story(z) → OriginatesFrom(z, y)))"
    },
    {
        "NL": "A traffic light regulates vehicle flow at intersections by displaying red, yellow, or green signals.",
        "FOL": "∀x∀y∀z (TrafficLight(x) ∧ Intersection(y) ∧ (Red(z) ∨ Yellow(z) ∨ Green(z)) → RegulatesVehicleFlow(x, y, z))"
    },
    {
        "NL": "A thunderstorm occurs when warm, moist air rises and encounters cooler air, causing the formation of clouds, precipitation, and lightning, which can result in flooding and property damage.",
        "FOL": "∀x∀y∀z (Thunderstorm(x) ∧ WarmMoistAir(y) ∧ EncounterCoolerAir(z) → (CausesFormationOfCloudsPrecipitationLightning(x) → (CanResultInFlooding(x) ∧ PropertyDamage(x))))"
    },
    {
        "NL": "All cars have wheels, but not all wheeled vehicles are cars.",
        "FOL": "∀x (Car(x) → HasWheels(x)) ∧ ¬∀x (HasWheels(x) → Car(x))"
    },
    {
        "NL": "An antidote can subdue a venom by fostering defence against it.",
        "FOL": "∀x ∀y (Antidote(x) ∧ Venom(y) → (Subdues(x, y) → FostersDefence(x, y)))"
    },
    {
        "NL": "A planet orbits a star due to the gravitational attraction between them.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) → OrbitsDueToGravitationalAttraction(x, y))"
    },
    {
        "NL": "A shape is a square if and only if all lines it includes are equal.",
        "FOL": "∀x (Square(x) ↔ ∀y (Includes(x, y) → Equal(y)))"
    },
    {
        "NL": "A place is considered a bakery if it produces and sells baked goods.",
        "FOL": "∀x (Bakery(x) ↔ (ProducesBakedGoods(x) ∧ SellsBakedGoods(x)))"
    },
    {
        "NL": "A computer has a mouse, but no touchpad.",
        "FOL": "∃x (Computer(x) ∧ Mouse(x) ∧ ¬Touchpad(x))"
    },
    {
        "NL": "A building is considered safe if it passes structural inspections, complies with fire codes, and has emergency exits.",
        "FOL": "∀x (Building(x) ∧ PassesStructuralInspections(x) ∧ CompliesWithFireCodes(x) ∧ HasEmergencyExits(x) → Safe(x))"
    },
    {
        "NL": "No athlete who plays either tennis or soccer is unfit, and not every one of them is a world champion.",
        "FOL": "¬∃x (Athlete(x) ∧ (PlaysTennis(x) ∨ PlaysSoccer(x)) ∧ Unfit(x)) ∧ ¬∀y (Athlete(y) → WorldChampion(y))"
    },
    {
        "NL": "In a sports match, the winner is determined by having more points than the opponent, unless there is a tie, in which case there is no winner.",
        "FOL": "∀x ∀y ((SportsMatch(x) ∧ Opponents(x, y)) → ((HasMorePoints(x, y) ∧ ¬Tie(x)) → Winner(x) ∧ ¬Winner(y)))"
    },
    {
        "NL": "In a tropical rainforest, various species of plants and animals coexist, forming a diverse and complex ecosystem.",
        "FOL": "∀x∀y∀z (TropicalRainforest(x) ∧ Plant(y) ∧ Animal(z) → CoexistsInEcosystem(x, y, z) ∧ DiverseAndComplexEcosystem(x))"
    },
    {
        "NL": "An airplane is a powered aircraft with fixed wings used for air travel, while a helicopter is a powered aircraft with rotating blades that enable vertical takeoff and landing.",
        "FOL": "∀x∀y (Airplane(x) ∧ Helicopter(y) → (PoweredAircraft(x) ∧ FixedWings(x) ∧ AirTravel(x)) ∧ (PoweredAircraft(y) ∧ RotatingBlades(y) ∧ VerticalTakeoffAndLanding(y)))"
    },
    {
        "NL": "A workout is effective when it increases strength or endurance and doesn't cause injuries.",
        "FOL": "∃x (Workout(x) ∧ ((IncreasesStrength(x) ∨ IncreasesEndurance(x)) ∧ ¬CausesInjuries(x) → Effective(x)))"
    },
    {
        "NL": "A device that uses electricity and can process information is a computer.",
        "FOL": "∀x (Device(x) ∧ UsesElectricity(x) ∧ CanProcessInformation(x) → Computer(x))"
    },
    {
        "NL": "Any yellow bird watches at least one bird that only hunts grey rodents.",
        "FOL": "∀x (YellowBird(x) → ∃y (Watches(x, y) ∧ ¬∃z (Hunts(y, z) ∧ ¬GreyRodent(z))))"
    },
    {
        "NL": "All reptiles have a dry, scaly skin.",
        "FOL": "∀x (Reptile(x) → HasDryScalySkin(x))"
    },
    {
        "NL": "A mammal is classified as a marine mammal if it primarily lives in the ocean.",
        "FOL": "∀x (Mammal(x) ∧ LivesInOcean(x) → MarineMammal(x))"
    },
    {
        "NL": "Every dog has four legs.",
        "FOL": "∀x (Dog(x) → HasFourLegs(x))"
    },
    {
        "NL": "An effective transportation system includes well-maintained roads, reliable public transportation, and safe infrastructure for pedestrians and cyclists.",
        "FOL": "∀x∀y∀z (TransportationSystem(x) ∧ WellMaintainedRoads(x, y) ∧ ReliablePublicTransportation(x, z) → SafeInfrastructureForPedestriansAndCyclists(x))"
    },
    {
        "NL": "Not every painting is either abstract or realistic.",
        "FOL": "¬(∀x (Painting(x) → (Abstract(x) ∨ Realistic(x))))"
    },
    {
        "NL": "If a person is a tour guide, they either give city tours or nature tours.",
        "FOL": "∀x (Person(x) ∧ TourGuide(x) → GiveCityTours(x) ⊕ GiveNatureTours(x))"
    },
    {
        "NL": "An animal is either a bird or a reptile.",
        "FOL": "∀x (Animal(x) → (Bird(x) ⊕ Reptile(x)))"
    },
    {
        "NL": "If a bird is a sparrow, then it is not a penguin.",
        "FOL": "∀x (Sparrow(x) → ¬Penguin(x))"
    },
    {
        "NL": "A bird x migrates to a location y during a specific season if y provides suitable conditions and resources for x during that time.",
        "FOL": "∀x ∀y (Bird(x) ∧ Location(y) ∧ SpecificSeason(x, y) ∧ ProvidesSuitableConditions(y, x) ∧ ProvidesResources(y, x) → MigratesTo(x, y))"
    },
    {
        "NL": "A teacher lectures on history or philosophy.",
        "FOL": "∀x (Teacher(x) → (LecturesHistory(x) ∨ LecturesPhilosophy(x)))"
    },
    {
        "NL": "Unless a car is both fast and affordable, it is not desired.",
        "FOL": "∀x (¬(Fast(x) ∧ Affordable(x)) → ¬Desired(x))"
    },
    {
        "NL": "An elevator transports people between floors.",
        "FOL": "∀x (Elevator(x) → TransportsPeopleBetweenFloors(x))"
    },
    {
        "NL": "A plant that has green leaves and uses sunlight for photosynthesis is considered a producer in an ecosystem.",
        "FOL": "∀x (Plant(x) ∧ GreenLeaves(x) ∧ UsesSunlightForPhotosynthesis(x) → ProducerInEcosystem(x))"
    },
    {
        "NL": "An apple can be red or green, but an orange is typically orange in color.",
        "FOL": "∀x ∀y (Apple(x) ∧ Orange(y) → ((Red(x) ∨ Green(x)) ⊕ TypicallyOrange(y)))"
    },
    {
        "NL": "A device is considered a machine if it performs calculations or accepts instructions.",
        "FOL": "∀x (Machine(x) ↔ (PerformCalculations(x) ∨ AcceptInstructions(x)))"
    },
    {
        "NL": "A car is electric or gasoline.",
        "FOL": "∀v (Car(v) → (Electric(v) ∨ Gasoline(v)))"
    },
    {
        "NL": "Any teacher who respects a student is also respected by that student.",
        "FOL": "∀x ∀y (Teacher(x) ∧ Student(y) ∧ Respects(x, y) → Respects(y, x))"
    },
    {
        "NL": "A musician composes a song by arranging notes, chords, and rhythms to convey a specific emotion.",
        "FOL": "∀x∀y∀z∀w (Musician(x) ∧ Song(y) ∧ Notes(z) ∧ Chords(w) ∧ Rhythms(y) ∧ ConveyEmotion(y) → Compose(x, y, z, w))"
    },
    {
        "NL": "If there are no books, then no author writes any poem.",
        "FOL": "¬∃x (Book(x)) → ¬∃y (Author(y) ∧ ∃z (Poem(z) ∧ Write(y, z)))"
    },
    {
        "NL": "Some sports are played indoors, some outdoors, and others can be played in both environments.",
        "FOL": "∃x (Sport(x) ∧ (Indoor(x) ∨ Outdoor(x) ∨ (Indoor(x) ∧ Outdoor(x))))"
    },
    {
        "NL": "In a right-angled triangle, the square of the hypotenuse is equal to the sum of the squares of the other two sides.",
        "FOL": "∀x ∀y ∀z (RightAngledTriangle(x) ∧ Hypotenuse(x, y) ∧ OtherSides(x, z) → SquareEqualToSumOfSquares(y, z))"
    },
    {
        "NL": "A publisher prints a book if it has been proofread, edited, and approved by a committee.",
        "FOL": "∀x∀y (Publisher(x) ∧ Book(y) ∧ Proofread(y) ∧ Edited(y) ∧ ApprovedByCommittee(y) → Prints(x, y))"
    },
    {
        "NL": "Some cities become popular tourist destinations due to their rich history, beautiful architecture, and vibrant cultural scene.",
        "FOL": "∃x (City(x) ∧ RichHistory(x) ∧ BeautifulArchitecture(x) ∧ VibrantCulturalScene(x) → PopularTouristDestination(x))"
    },
    {
        "NL": "A restaurant with excellent customer service and high-quality food will receive positive ratings.",
        "FOL": "∀x (Restaurant(x) ∧ ExcellentCustomerService(x) ∧ HighQualityFood(x) → PositiveRatings(x))"
    },
    {
        "NL": "A student passes the exam if they score at least 60 points and do not cheat.",
        "FOL": "∀x (Student(x) ∧ ScoreAtLeast60(x) ∧ ¬Cheat(x) → PassesExam(x))"
    },
    {
        "NL": "Birds that migrate to warmer regions during winter months avoid harsh weather conditions.",
        "FOL": "∀x∀y (Bird(x) ∧ MigratesToWarmerRegion(x, y) ∧ Winter(y) → AvoidsHarshWeatherConditions(x))"
    },
    {
        "NL": "An individual is perceived as intelligent if they have a comprehensive knowledge and either quick reasoning or a creative outlook.",
        "FOL": "∀x (Individual(x) ∧ HasComprehensiveKnowledge(x) ∧ (HasQuickReasoning(x) ∨ HasCreativeOutlook(x)) → Intelligent(x))"
    },
    {
        "NL": "A musical instrument with a hollow wooden body, a long neck, and strings that are plucked or strummed is a guitar.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HollowWoodenBody(x) ∧ LongNeck(x) ∧ Strings(x) ∧ PluckedOrStrummed(x) → Guitar(x))"
    },
    {
        "NL": "All doctors either diagnose illnesses or treat patients.",
        "FOL": "∀x (Person(x) ∧ Doctor(x) → DiagnoseIllnesses(x) ⊕ TreatPatients(x))"
    },
    {
        "NL": "A spider spins a web.",
        "FOL": "∀x∀y (Spider(x) ∧ Web(y) → Spins(x, y))"
    },
    {
        "NL": "Hikers need to carry sufficient water, food, and essential gear when exploring remote trails to ensure their safety and well-being.",
        "FOL": "∀x∀y∀z (Hiker(x) ∧ Trail(y) ∧ Gear(z) → (ExploresRemoteTrails(x, y) → (CarriesSufficientWater(x) ∧ CarriesFood(x) ∧ CarriesEssentialGear(x, z) ∧ EnsuresSafetyAndWellBeing(x))))"
    },
    {
        "NL": "Only herbivorous animals eat plants exclusively.",
        "FOL": "∀x∀y (Animal(x) ∧ EatsExclusively(x, y) ∧ Plant(y) → Herbivorous(x))"
    },
    {
        "NL": "A camera captures images by focusing light through a lens and recording it on a sensor.",
        "FOL": "∀x∀y (Camera(x) ∧ Image(y) → (FocusesLightThroughLens(x, y) ∧ RecordsOnSensor(x, y)))"
    },
    {
        "NL": "A person is considered a firefighter if they extinguish fires and rescue people and property from dangerous situations.",
        "FOL": "∀x (Person(x) ∧ ExtinguishesFires(x) ∧ RescuesPeople(x) ∧ RescuesProperty(x) ∧ FromDangerousSituations(x) → Firefighter(x))"
    },
    {
        "NL": "A vehicle designed for air travel, with wings, engines, and a streamlined body, is an airplane.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForAirTravel(x) ∧ HasWings(x) ∧ HasEngines(x) ∧ StreamlinedBody(x) → Airplane(x))"
    },
    {
        "NL": "If an object is a computer, it must be an electronic device that processes, stores, and retrieves data, often used for tasks such as word processing, internet browsing, and software development.",
        "FOL": "∀x ((ElectronicDevice(x) ∧ ProcessesStoresAndRetrievesData(x) ∧ UsedForWordProcessingInternetBrowsingAndSoftwareDevelopment(x)) → Computer(x))"
    },
    {
        "NL": "A phone is a smartphone if it has internet capabilities and is not a landline or a basic mobile phone.",
        "FOL": "∀x (Phone(x) ∧ InternetCapabilities(x) ∧ ¬Landline(x) ∧ ¬BasicMobilePhone(x) → Smartphone(x))"
    },
    {
        "NL": "A car is either a vintage Model-T or a modern Tesla, but not both.",
        "FOL": "∀x ((Vintage(x) ∧ ModelT(x)) ⊕ (Modern(x) ∧ Tesla(x)))"
    },
    {
        "NL": "If a number is even, it is divisible by 2.",
        "FOL": "∀x (Number(x) ∧ Even(x) → DivisibleBy(x, 2))"
    },
    {
        "NL": "Not every clothing item is a formal wear, and some items are made of sustainable materials or designed for specific activities.",
        "FOL": "¬∀x (ClothingItem(x) → FormalWear(x)) ∧ ∃y (ClothingItem(y) ∧ (SustainableMaterials(y) ∨ DesignedForSpecificActivity(y)))"
    },
    {
        "NL": "In a bakery, some products are gluten-free, others contain dairy, and a few items are both gluten-free and dairy-free.",
        "FOL": "∀x (BakeryProduct(x) → (IsGlutenFree(x) ∨ ContainsDairy(x) ∨ (IsGlutenFree(x) ∧ ¬ContainsDairy(x))))"
    },
    {
        "NL": "A box is either empty or contains a ball.",
        "FOL": "∀x (Box(x) → (Empty(x) ⊕ ContainsBall(x)))"
    },
    {
        "NL": "A document that records the financial transactions of a business and helps in determining its financial position is called a balance sheet.",
        "FOL": "∀x (Document(x) ∧ RecordsFinancialTransactions(x) ∧ DeterminesFinancialPosition(x) → BalanceSheet(x))"
    },
    {
        "NL": "If a shape is a square, it has four equal sides and four right angles.",
        "FOL": "∀x (Shape(x) ∧ Square(x) → (EqualSides(x, 4) ∧ RightAngles(x, 4)))"
    },
    {
        "NL": "Wolves are carnivores, cows are herbivores, and humans are omnivores.",
        "FOL": "∀x ∀y ∀z (Wolf(x) ∧ Cow(y) ∧ Human(z) → (Carnivore(x) ∧ Herbivore(y) ∧ Omnivore(z)))"
    },
    {
        "NL": "In a coral reef ecosystem, corals provide habitat and shelter for marine species, photosynthesizing algae produce oxygen, and cleaner fish remove parasites from other fish.",
        "FOL": "∀x ∀y ∀z (CoralReefEcosystem(x) ∧ (Corals(x, y) ∧ ProvidesHabitatAndShelter(y)) ∧ (PhotosynthesizingAlgae(x, z) ∧ ProducesOxygen(z)) ∧ (CleanerFish(x) ∧ RemovesParasitesFromOtherFish(x)))"
    },
    {
        "NL": "A planet is habitable if it has a stable climate, liquid water, and the right conditions to support life.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ StableClimate(x) ∧ LiquidWater(x, y) ∧ RightConditionsToSupportLife(x, z) → Habitable(x))"
    },
    {
        "NL": "Students who study effectively may achieve higher grades.",
        "FOL": "∀x (Student(x) ∧ StudyEffectively(x) → MayAchieveHigherGrades(x))"
    },
    {
        "NL": "A person who assesses the value of properties, such as land and buildings, is called an appraiser.",
        "FOL": "∀x (AssessesValueOfProperties(x) → Appraiser(x))"
    },
    {
        "NL": "A triangle is not both green and purple.",
        "FOL": "∀x (Triangle(x) → ¬(Green(x) ∧ Purple(x)))"
    },
    {
        "NL": "A volcano can be active, dormant, or extinct depending on its eruption history.",
        "FOL": "∀x (Volcano(x) → (Active(x) ∨ Dormant(x) ∨ Extinct(x)))"
    },
    {
        "NL": "A fire needs oxygen and heat to burn.",
        "FOL": "∀x (Fire(x) → (Burns(x) ↔ (NeedsOxygen(x) ∧ NeedsHeat(x))))"
    },
    {
        "NL": "A human is either active or lethargic.",
        "FOL": "∀w (Person(w) → (Active(w) ⊕ Lethargic(w)))"
    },
    {
        "NL": "A lighthouse emits a powerful beam of light to guide ships and prevent them from running aground.",
        "FOL": "∀x (Lighthouse(x) → (EmitsPowerfulBeamOfLight(x) ∧ GuidesShips(x) ∧ PreventsRunningAground(x)))"
    },
    {
        "NL": "Not all films are interesting, and none of them are censored.",
        "FOL": "¬∀x (Film(x) → Interesting(x)) ∧ ∀y (Film(y) → ¬Censored(y))"
    },
    {
        "NL": "If an individual has a strong network of friends and family, they are more likely to receive emotional support and encouragement during difficult times.",
        "FOL": "∀x (StrongNetworkOfFriendsAndFamily(x) → (ReceiveEmotionalSupport(x) ∧ ReceiveEncouragementDuringDifficultTimes(x)))"
    },
    {
        "NL": "A chair provides support for sitting.",
        "FOL": "∀x (Chair(x) → ProvidesSittingSupport(x))"
    },
    {
        "NL": "An animal x hibernates during winter if x enters a state of dormancy to conserve energy when the temperature drops.",
        "FOL": "∀x (Animal(x) ∧ EntersDormancy(x) ∧ ConservesEnergy(x) ∧ TemperatureDrops(x) → HibernatesDuringWinter(x))"
    },
    {
        "NL": "Oceans and seas are vast bodies of saltwater that cover a significant portion of the Earth's surface and support diverse marine life.",
        "FOL": "∀x ∀y (Ocean(x) ∧ Sea(y) → (VastBodyOfSaltwater(x) ∧ CoversSignificantPortionOfEarth(x) ∧ SupportsDiverseMarineLife(x)))"
    },
    {
        "NL": "Libraries store books, periodicals, and digital resources for public access.",
        "FOL": "∀x∀y∀z (Library(x) ∧ (Books(y) ∨ Periodicals(y) ∨ DigitalResources(y)) → StoresForPublicAccess(x, y))"
    },
    {
        "NL": "A dog has fur and can run, while a fish lacks fur and cannot run.",
        "FOL": "∀x (Dog(x) → HasFur(x) ∧ CanRun(x)) ∧ ∀y (Fish(y) → ¬HasFur(y) ∧ ¬CanRun(y))"
    },
    {
        "NL": "A smartphone requires charging when its battery is low.",
        "FOL": "∀x (Smartphone(x) ∧ LowBattery(x) → RequiresCharging(x))"
    },
    {
        "NL": "An animal is a herbivore if it eats only plants.",
        "FOL": "∀x (Animal(x) ∧ EatsOnlyPlants(x) → Herbivore(x))"
    },
    {
        "NL": "A computer x can run software y if it meets the system requirements of y.",
        "FOL": "∀x ∀y (Computer(x) ∧ Software(y) ∧ MeetsSystemRequirements(x, y) → CanRun(x, y))"
    },
    {
        "NL": "A place is considered a theater if it is a venue for live stage performances, often with a stage, curtains, and audience seating, and hosting plays, musicals, or other productions.",
        "FOL": "∀x (Place(x) ∧ VenueForLiveStagePerformances(x) ∧ OftenWithStageCurtainsAndAudienceSeating(x) ∧ HostsPlaysMusicalsOrOtherProductions(x) → Theater(x))"
    },
    {
        "NL": "A smartphone has a camera and a touchscreen.",
        "FOL": "∀x (Smartphone(x) → (Camera(x) ∧ Touchscreen(x)))"
    },
    {
        "NL": "A person is a plumber if they are trained and skilled in installing and repairing pipes and fixtures for water, gas, or sewage systems.",
        "FOL": "∀x (Plumber(x) ↔ (Person(x) ∧ Trained(x) ∧ SkilledInPipesAndFixtures(x) ∧ InstallsAndRepairs(x)))"
    },
    {
        "NL": "Lions are carnivorous and hunt during the day, while owls are nocturnal and hunt at night.",
        "FOL": "∀x (Lion(x) → (Carnivorous(x) ∧ HuntsDuringDay(x))) ∧ ∀y (Owl(y) → (Nocturnal(y) ∧ HuntsAtNight(y)))"
    },
    {
        "NL": "A volcano that has erupted in the past 50 years and is located on an island is an active island volcano.",
        "FOL": "∀x∀y (Volcano(x) ∧ Island(y) ∧ EruptedInPastYears(x, 50) ∧ LocatedOn(x, y) → ActiveIslandVolcano(x))"
    },
    {
        "NL": "An electronic device can be portable and affordable or have advanced capabilities and be more costly.",
        "FOL": "∃x (ElectronicDevice(x) ∧ ((Portable(x) ∧ Affordable(x)) ∨ (AdvancedCapabilities(x) ∧ Costly(x))))"
    },
    {
        "NL": "A tree grows, provides shade, and produces oxygen.",
        "FOL": "∀x (Tree(x) → (Grows(x) ∧ ProvidesShade(x) ∧ ProducesOxygen(x)))"
    },
    {
        "NL": "A printer can be either online or offline, but not both simultaneously.",
        "FOL": "∀x (Printer(x) → (Online(x) ⊕ Offline(x)))"
    },
    {
        "NL": "Cities located near the coastline are more prone to flooding due to rising sea levels.",
        "FOL": "∀x (City(x) ∧ LocatedNearCoastline(x) → ProneToFloodingFromRisingSeaLevels(x))"
    },
    {
        "NL": "A medication is effective against a disease if it targets the underlying cause of the disease.",
        "FOL": "∀x∀y (Medication(x) ∧ Disease(y) → (EffectiveAgainst(x, y) ↔ TargetsCause(x, y)))"
    },
    {
        "NL": "A shape that has three angles is called a triangle.",
        "FOL": "∀x (ThreeAngles(x) → Triangle(x))"
    },
    {
        "NL": "A smartphone with a long battery life and a large storage capacity is in high demand.",
        "FOL": "∀x (Smartphone(x) ∧ LongBatteryLife(x) ∧ LargeStorageCapacity(x) → HighDemand(x))"
    },
    {
        "NL": "A substance is a metal if it is shiny, conducts electricity, and can be bent or hammered into various shapes.",
        "FOL": "∀x (Substance(x) ∧ Shiny(x) ∧ ConductsElectricity(x) ∧ Malleable(x) → Metal(x))"
    },
    {
        "NL": "Some cultures are either matrilineal or patrilineal, but not both.",
        "FOL": "∃x (Culture(x) ∧ (Matrilineal(x) ⊕ Patrilineal(x)))"
    },
    {
        "NL": "A smartphone requires a battery and a screen to function.",
        "FOL": "∀x (Smartphone(x) ∧ HasBattery(x) ∧ HasScreen(x) → Functions(x))"
    },
    {
        "NL": "A type of footwear with a flat sole, open design, and straps to secure it to the foot is called a sandal.",
        "FOL": "∀x (Footwear(x) ∧ FlatSole(x) ∧ OpenDesign(x) ∧ StrapsToSecureToFoot(x) → Sandal(x))"
    },
    {
        "NL": "A laptop requires charging when its battery is low, while a desktop relies on direct power from an outlet.",
        "FOL": "∀x (Laptop(x) ∧ LowBattery(x) → RequiresCharging(x)) ⊕ ∀y (Desktop(y) → RequiresDirectPower(y))"
    },
    {
        "NL": "Some desserts are low in calories, but not all desserts are gluten-free or made with natural ingredients and without artificial sweeteners.",
        "FOL": "∃x (Dessert(x) ∧ LowCalories(x)) ∧ ¬∀y (Dessert(y) → (GlutenFree(y) ∨ (NaturalIngredients(y) ∧ NoArtificialSweeteners(y))))"
    },
    {
        "NL": "There is a song everybody loves.",
        "FOL": "∃x (Song(x) ∧ ∀y (Person(y) → Loves(y, x)))"
    },
    {
        "NL": "Doctors diagnose and treat illnesses, while nurses provide care and assistance.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Nurse(y) → (DiagnosesAndTreatsIllnesses(x) ⊕ ProvidesCareAndAssistance(y)))"
    },
    {
        "NL": "Honey is sweet, whereas lemon is sour and not sweet.",
        "FOL": "∀x ∀y (Honey(x) ∧ Lemon(y) → (Sweet(x) ∧ (Sour(y) ∧ ¬Sweet(y))))"
    },
    {
        "NL": "An object is a telescope if it is an optical instrument designed to magnify distant objects, such as stars or planets.",
        "FOL": "∀x ((OpticalInstrument(x) ∧ MagnifiesDistantObjects(x)) → Telescope(x))"
    },
    {
        "NL": "An object is a telescope when it is an optical instrument designed for observing distant objects, magnifies images, and commonly comes in refracting or reflecting varieties.",
        "FOL": "∀x (Object(x) ∧ OpticalInstrument(x) ∧ DesignedForObservingDistantObjects(x) ∧ MagnifiesImages(x) ∧ ComesInVarieties(x, refracting, reflecting) → Telescope(x))"
    },
    {
        "NL": "In an orchestra, a conductor leads the musicians and ensures that they play in harmony.",
        "FOL": "∀x∀y∀z (Orchestra(x) ∧ Conductor(y) ∧ Musician(z) → (Leads(y, z) ∧ EnsuresHarmony(y, x)))"
    },
    {
        "NL": "If an object is round and large, then it links to at least one green object, unless it is a pentagon.",
        "FOL": "∀x ((Round(x) ∧ Large(x)) → ∃y (Green(y) ∧ LinksTo(x, y) ∨ Pentagon(x)))"
    },
    {
        "NL": "An art piece that is not made of paint, but is visually striking and conveys strong emotions, captivates viewers.",
        "FOL": "∀x (ArtPiece(x) ∧ ¬MadeOfPaint(x) ∧ VisuallyStriking(x) ∧ ConveysStrongEmotions(x) → CaptivatesViewers(x))"
    },
    {
        "NL": "A researcher investigates a phenomenon, collects data, and draws conclusions based on the data.",
        "FOL": "∀x ∀y (Researcher(x) ∧ Investigates(x, y) ∧ Phenomenon(y) ∧ CollectsData(x, z) ∧ Data(z) → DrawsConclusionsBasedOn(x, z))"
    },
    {
        "NL": "A bicycle can be ridden on land, but not in water or air.",
        "FOL": "∀x (Bicycle(x) → (RiddenOnLand(x) ∧ ¬RiddenInWater(x) ∧ ¬RiddenInAir(x)))"
    },
    {
        "NL": "A scientist discovers a new element if it has unique properties and is not found in existing periodic table.",
        "FOL": "∀x∀y (Scientist(x) ∧ Element(y) → (DiscoversNewElement(x, y) ↔ (UniqueProperties(y) ∧ ¬InPeriodicTable(y))))"
    },
    {
        "NL": "A piece of furniture can be classified as either seating, storage, or surface, but not more than one of these categories.",
        "FOL": "∀x (Furniture(x) → ((Seating(x) ⊕ Storage(x)) ⊕ Surface(x)))"
    },
    {
        "NL": "Unless a vehicle is neither fast nor durable, it is a sports car.",
        "FOL": "∀x ((Fast(x) ∨ Durable(x)) → Sportscar(x))"
    },
    {
        "NL": "A river is either shallow or deep.",
        "FOL": "∀x (River(x) → (Shallow(x) ⊕ Deep(x)))"
    },
    {
        "NL": "Mountains are tall.",
        "FOL": "∀x (Mountain(x) → Tall(x))"
    },
    {
        "NL": "A mountain is taller than another mountain if its height is greater.",
        "FOL": "∀x ∀y (Mountain(x) ∧ Mountain(y) ∧ HeightGreater(x, y) → TallerThan(x, y))"
    },
    {
        "NL": "Every book contains pages.",
        "FOL": "∀w (Book(w) → ContainsPages(w))"
    },
    {
        "NL": "A movie is a biography if it portrays the protagonist's real-life experiences.",
        "FOL": "∀x ∃y ∃z (Movie(x) ∧ Protagonist(y) ∧ ProtagonistOf(y, x) ∧ PortraysRealLifeExperiences(x, y) → Biography(x))"
    },
    {
        "NL": "Sunglasses block ultraviolet rays.",
        "FOL": "∀x (Sunglasses(x) → BlocksUVRays(x))"
    },
    {
        "NL": "A bird is considered migratory if it travels more than 1000 miles annually, is not a flightless species, and its habitat is subject to seasonal changes.",
        "FOL": "∀x (Bird(x) → (AnnualTravel(x, >1000) ∧ ¬Flightless(x) ∧ SeasonalHabitatChange(x)))"
    },
    {
        "NL": "A shape with three sides is a triangle, but if it also has right angles, it's a right triangle and not an equilateral triangle.",
        "FOL": "∀x (Shape(x) ∧ ThreeSides(x) → (Triangle(x) ∧ ((RightAngle(x) → (RightTriangle(x) ∧ ¬EquilateralTriangle(x))))))"
    },
    {
        "NL": "Any software engineer coding in Python and C++, unless they are a team lead, either has received a salary hike or hasn't worked on a machine learning project.",
        "FOL": "∀x (SoftwareEngineer(x) ∧ CodesPython(x) ∧ CodesCPlusPlus(x) ∨ TeamLead(x) → (ReceivedSalaryHike(x) ∨ ¬WorkedOnMachineLearningProject(x)))"
    },
    {
        "NL": "A dog is sleeping on the mat.",
        "FOL": "∃x ∃y (Dog(x) ∧ Mat(y) ∧ SleepingOn(x, y))"
    },
    {
        "NL": "A museum exhibits artifacts and organizes educational programs.",
        "FOL": "∀x (Museum(x) → (ExhibitsArtifacts(x) ∧ OrganizesPrograms(x, Educational)))"
    },
    {
        "NL": "A tree is a conifer if and only if it's not deciduous or is very tall.",
        "FOL": "∀x (Tree(x) → (Conifer(x) ↔ (¬Deciduous(x) ∨ VeryTall(x))))"
    },
    {
        "NL": "All plants are living beings.",
        "FOL": "∀x (Plant(x) → LivingBeing(x))"
    },
    {
        "NL": "If every teacher who has a master's degree gets a promotion, then there are teachers who do not have a master's degree who will also get a promotion.",
        "FOL": "∀x (Teacher(x) ∧ MastersDegree(x) → Promotion(x)) → ∃y (Teacher(y) ∧ ¬MastersDegree(y) ∧ Promotion(y))"
    },
    {
        "NL": "A region is classified as a desert if it receives very little precipitation and supports sparse vegetation.",
        "FOL": "∀x (Region(x) ∧ ReceivesLittlePrecipitation(x) ∧ SparseVegetation(x) → Desert(x))"
    },
    {
        "NL": "A suspenseful book can instill suspense in its readers.",
        "FOL": "∀x ∀y (Book(x) ∧ Suspenseful(x) ∧ Reader(y) → CanInstillSuspense(x, y))"
    },
    {
        "NL": "David is not a scientist.",
        "FOL": "¬Scientist(david)"
    },
    {
        "NL": "No dog is friendly with all blue cats.",
        "FOL": "¬∃x (Dog(x) ∧ ∀y (Blue(y) ∧ Cat(y) → FriendlyWith(x,y)))"
    },
    {
        "NL": "An artist is painting a portrait in the studio.",
        "FOL": "∃x ∃y (Artist(x) ∧ Portrait(y) ∧ Painting(x, y) ∧ InTheStudio(x))"
    },
    {
        "NL": "A teacher who instructs a student will be instructed by someone else.",
        "FOL": "∀x ∃y (Teacher(x) ∧ Student(y) ∧ Instruct(x, y) → ∃z (Person(z) ∧ WillInstruct(z, x)))"
    },
    {
        "NL": "Public transportation includes buses or trains, but not taxis.",
        "FOL": "∀x (PublicTransportation(x) → (Buses(x) ∨ Trains(x)) ∧ ¬Taxis(x))"
    },
    {
        "NL": "There doesn't exist a doctor who hasn't analysed all the samples in the lab.",
        "FOL": "¬∃x (Doctor(x) ∧ ∀y (Sample(y) ∧ InLab(y) → Analysed(x, y)))"
    },
    {
        "NL": "Some professional athletes who play rugby are also proficient in cricket.",
        "FOL": "∃x (ProfessionalAthlete(x) ∧ PlayRugby(x) ∧ ProficientInCricket(x))"
    },
    {
        "NL": "A river flows into a lake or an ocean, but not both.",
        "FOL": "∀x∀y∀z (River(x) ∧ (Lake(y) ∨ Ocean(z)) → (FlowsInto(x, y) ⊕ FlowsInto(x, z)))"
    },
    {
        "NL": "Enzymes are biological catalysts that speed up chemical reactions in living organisms by lowering the activation energy.",
        "FOL": "∀x (Enzyme(x) → (BiologicalCatalyst(x) ∧ SpeedsUpChemicalReactions(x) ∧ LowersActivationEnergy(x)))"
    },
    {
        "NL": "All chefs are skilled cooks, or some cooks are not excellent preservers.",
        "FOL": "∀x (Chef(x) → SkilledCook(x)) ∨ ∃y (Cook(y) ∧ ¬ExcellentPreserver(y))"
    },
    {
        "NL": "A person is considered a writer if they produce written works, such as novels, essays, or articles.",
        "FOL": "∀x (ProducesWrittenWorks(x) → Writer(x))"
    },
    {
        "NL": "A customer buys a book at a bookstore.",
        "FOL": "∀x∀y∀z (Customer(x) ∧ Book(y) ∧ Bookstore(z) → Buys(x, y, z))"
    },
    {
        "NL": "An international student is always welcomed in the institution, enhancing cultural diversity and bolstering global understanding.",
        "FOL": "∀x (InternationalStudent(x) → (AlwaysWelcomed(x) ∧ EnhancesCulturalDiversity(x) ∧ BoostsGlobalUnderstanding(x)))"
    },
    {
        "NL": "If a person is a scientist, they either conduct experiments or analyze data.",
        "FOL": "∀x (Person(x) ∧ Scientist(x) → ConductExperiments(x) ⊕ AnalyzeData(x))"
    },
    {
        "NL": "A bird is omnivorous if it eats both plants and insects.",
        "FOL": "∀x (Bird(x) ∧ EatsPlants(x) ∧ EatsInsects(x) → Omnivorous(x))"
    },
    {
        "NL": "A city is vibrant if it has diverse cultural offerings, abundant green spaces, and lively nightlife.",
        "FOL": "∀x∀y∀z (City(x) ∧ DiverseCulturalOfferings(y) ∧ AbundantGreenSpaces(z) ∧ LivelyNightlife(x) → Vibrant(x, y, z))"
    },
    {
        "NL": "Daisies are white, sunflowers are yellow, and poppies are red.",
        "FOL": "∀x (Daisy(x) → White(x)) ∧ ∀y (Sunflower(y) → Yellow(y)) ∧ ∀z (Poppy(z) → Red(z))"
    },
    {
        "NL": "A book is a bestseller if it has a high sales rate or wins a prestigious award, but not if it has low sales and no awards.",
        "FOL": "∀x (Book(x) → ((HighSalesRate(x) ∨ PrestigiousAward(x)) ∧ ¬(LowSales(x) ∧ NoAwards(x)) → Bestseller(x)))"
    },
    {
        "NL": "All birds lay eggs and have feathers.",
        "FOL": "∀x (Bird(x) → (LaysEggs(x) ∧ HasFeathers(x)))"
    },
    {
        "NL": "A piece of clothing is considered a dress if it is a one-piece garment for women or girls, typically with a skirt and covering the upper body.",
        "FOL": "∀x (Clothing(x) ∧ OnePieceGarment(x) ∧ ForWomenOrGirls(x) ∧ TypicallyWithSkirtAndCoveringUpperBody(x) → Dress(x))"
    },
    {
        "NL": "No bird can fly, if there is an element that all elements are heavier than.",
        "FOL": "¬∃w (Element(w) ∧ ∀v (Element(v) → HeavierThan(v, w))) → ¬∀x (Bird(x) → CanFly(x))"
    },
    {
        "NL": "An object's buoyancy is determined by the relationship between its volume, mass, and the density of the fluid it displaces.",
        "FOL": "∀x ∀y ∀z (Object(x) ∧ Fluid(y) ∧ Displaces(x, y) → Buoyancy(x, z))"
    },
    {
        "NL": "A number is either positive, negative, or zero.",
        "FOL": "∀x (Number(x) → (Positive(x) ⊕ Negative(x) ⊕ Zero(x)))"
    },
    {
        "NL": "There is no poorest man, and no richest man.",
        "FOL": "∀x (Man(x) → (∃y (Man(y) ∧ Poorer(y, x)) ∧ ∃z (Man(z) ∧ Richer(z, x))))"
    },
    {
        "NL": "A tropical rainforest receives high rainfall, has high humidity, and is characterized by a dense canopy and diverse plant and animal species.",
        "FOL": "∀x (TropicalRainforest(x) ↔ (ReceivesHighRainfall(x) ∧ HighHumidity(x) ∧ DenseCanopy(x) ∧ ∀y∀z (DiverseSpecies(y, z) ∧ Plant(y) ∧ Animal(z))))"
    },
    {
        "NL": "A game is exciting if and only if it has brilliant graphics, engaging gameplay, but doesn't have too many redundant levels.",
        "FOL": "∀x (Game(x) → (Exciting(x) ↔ (HasBrilliantGraphics(x) ∧ HasEngagingGameplay(x) ∧ ¬ManyRedundantLevels(x))))"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects or other small animals for nutrients, supplementing the nutrients obtained from the soil.",
        "FOL": "∀x (CarnivorousPlant(x) ↔ (∃y (Insects(y) ∨ SmallAnimals(y) ∧ CapturesAndConsumes(x, y) ∧ SupplementsNutrients(x))))"
    },
    {
        "NL": "A book contains text, and a painting displays images.",
        "FOL": "∀x∀y (Book(x) ∧ Painting(y) → (ContainsText(x) ∧ DisplaysImages(y)))"
    },
    {
        "NL": "An author writes books, while an illustrator creates illustrations for them.",
        "FOL": "∀x∀y∀z (Author(x) ∧ Illustrator(y) ∧ Book(z) → (Writes(x, z) ∧ CreatesIllustrations(y, z)))"
    },
    {
        "NL": "If a person is an electrician, they install or repair electrical systems.",
        "FOL": "∀x (Electrician(x) → (InstallsElectricalSystems(x) ∨ RepairsElectricalSystems(x)))"
    },
    {
        "NL": "A judge will validate the verdict only if he does not eat his lunch.",
        "FOL": "∀x (Judge(x) ∧ ValidateVerdict(x) → ¬EatLunch(x))"
    },
    {
        "NL": "All dogs that are well-trained and gentle are suitable as therapy animals.",
        "FOL": "∀x (Dog(x) ∧ WellTrained(x) ∧ Gentle(x) → TherapyAnimal(x))"
    },
    {
        "NL": "A celestial event is a solar eclipse if it occurs when the moon passes between the sun and the earth, casting a shadow on the earth's surface.",
        "FOL": "∀e ∀m ∀s ∀t (CelestialEvent(e) ∧ MoonPassesBetween(e, m, s, t) ∧ CastsShadow(e, t) → SolarEclipse(e))"
    },
    {
        "NL": "A painter creates artwork on canvas or paper using various materials, such as acrylics, oils, or watercolors.",
        "FOL": "∀x ∀y (Painter(x) ∧ Artwork(y) → (Creates(x, y) ∧ (OnCanvas(y) ∨ OnPaper(y)) ∧ (UsesAcrylics(x) ∨ UsesOils(x) ∨ UsesWatercolors(x))))"
    },
    {
        "NL": "A planet orbits a star.",
        "FOL": "∀x (Planet(x) → ∃y (Star(y) ∧ Orbits(x, y)))"
    },
    {
        "NL": "A refrigerator preserves food by maintaining a low temperature.",
        "FOL": "∀x (Refrigerator(x) ↔ (PreservesFood(x) ∧ MaintainsLowTemperature(x)))"
    },
    {
        "NL": "All architects who possess imagination and scientific knowledge are renowned.",
        "FOL": "∀x (Architect(x) ∧ HasImagination(x) ∧ HasScientificKnowledge(x) → Renowned(x))"
    },
    {
        "NL": "A doctor diagnoses patients with illnesses.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) ∧ Illness(z) → Diagnoses(x, y, z))"
    },
    {
        "NL": "A musical instrument produces sound by manipulating the vibration of air, strings, or membranes to create different pitches and timbres.",
        "FOL": "∀x (MusicalInstrument(x) → (Air(y) ∨ Strings(y) ∨ Membranes(y) → ManipulatesVibrationToCreateSound(x, y)))"
    },
    {
        "NL": "A smartphone can make calls and access the internet.",
        "FOL": "∀x (Smartphone(x) → (CanMakeCalls(x) ∧ CanAccessInternet(x)))"
    },
    {
        "NL": "A music festival showcases live performances by bands, solo artists, and DJs across various genres and styles.",
        "FOL": "∀x ∀y (MusicFestival(x) ∧ (Band(y) ∨ SoloArtist(y) ∨ DJ(y)) ∧ AcrossGenresAndStyles(x, y) → Showcases(x, y))"
    },
    {
        "NL": "If a person is a parent of someone and that someone is a parent of another person, then the first person is a grandparent.",
        "FOL": "∀x∀y∀z (Parent(x, y) ∧ Parent(y, z) → Grandparent(x, z))"
    },
    {
        "NL": "A dish made from fresh ingredients tastes delicious.",
        "FOL": "∀x (Dish(x) ∧ FreshIngredients(x) → TastesDelicious(x))"
    },
    {
        "NL": "A circle is not black and does not point to any white object.",
        "FOL": "∀x (Circle(x) → (¬Black(x) ∧ ¬∃y (White(y) ∧ PointsTo(x, y))))"
    },
    {
        "NL": "A violinist plays the violin, a pianist plays the piano, and a guitarist plays the guitar.",
        "FOL": "∀x ∀y ∀z (Violinist(x) ∧ Pianist(y) ∧ Guitarist(z) → (PlaysViolin(x) ∧ PlaysPiano(y) ∧ PlaysGuitar(z)))"
    },
    {
        "NL": "A place is a park if it has green spaces, is open to the public, and offers recreational activities.",
        "FOL": "∀x (Place(x) ∧ HasGreenSpaces(x) ∧ OpenToPublic(x) ∧ OffersRecreationalActivities(x) → Park(x))"
    },
    {
        "NL": "A mirror reflects light when it is clean and well-positioned",
        "FOL": "∀x (Mirror(x) ∧ (Clean(x) ∧ WellPositioned(x)) → ReflectsLight(x))"
    },
    {
        "NL": "A cyclist leaves from a starting point and arrives at a finishing point without resting at any spots.",
        "FOL": "∃x ∃y ∃z (Cyclist(x) ∧ StartingPoint(y) ∧ FinishingPoint(z) → LeavesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Spot(w) ∧ RestsAt(x, w)))"
    },
    {
        "NL": "Something is either a green hexagon or a red square, but not both.",
        "FOL": "∀x ((Green(x) ∧ Hexagon(x)) ⊕ (Red(x) ∧ Square(x)))"
    },
    {
        "NL": "A meal is considered healthy if it contains a balanced proportion of proteins, carbohydrates, and fats.",
        "FOL": "∀x (Meal(x) ∧ BalancedProportionOfProteins(x) ∧ BalancedProportionOfCarbohydrates(x) ∧ BalancedProportionOfFats(x) → Healthy(x))"
    },
    {
        "NL": "A city is a tourist destination if it has famous landmarks or cultural attractions.",
        "FOL": "∀x (City(x) ∧ TouristDestination(x) ↔ (FamousLandmarks(x) ∨ CulturalAttractions(x)))"
    },
    {
        "NL": "Everyone in the class either likes mathematics or chemistry.",
        "FOL": "∀x (Person(x) ∧ InClass(x) → (Like(x, mathematics) ⊕ Like(x, chemistry)))"
    },
    {
        "NL": "A vacation destination is exotic if it is located in a tropical or remote region, but not if it is a common tourist spot.",
        "FOL": "∀x (VacationDestination(x) → (((TropicalRegion(x) ∨ RemoteRegion(x)) ∧ ¬CommonTouristSpot(x)) → Exotic(x)))"
    },
    {
        "NL": "A smartphone with a powerful battery and fast-charging capabilities allows users to have longer usage times and minimizes the need for frequent recharging.",
        "FOL": "∀x (Smartphone(x) ∧ PowerfulBattery(x) ∧ FastChargingCapabilities(x) → LongerUsageTimes(x) ∧ MinimizesNeedForFrequentRecharging(x))"
    },
    {
        "NL": "In a symbiotic relationship, two different species interact with one another, providing mutual benefits, such as protection or access to resources, that help both species to survive.",
        "FOL": "∀x∀y∀z (SymbioticRelationship(x) ∧ DifferentSpecies(y, z) → (InteractWithOneAnother(y, z) ∧ ProvidesMutualBenefits(x) ∧ (Protection(x) ∨ AccessToResources(x)) ∧ HelpsBothSpeciesSurvive(y, z)))"
    },
    {
        "NL": "A product is efficient only if it is technologically advanced.",
        "FOL": "∀x (Product(x) ∧ Efficient(x) → TechAdvanced(x))"
    },
    {
        "NL": "A computer holds software applications and launches them when required for operation.",
        "FOL": "∀x (Computer(x) → (HoldsSoftwareApplications(x) ∧ (IsRequiredForOperation(x) → LaunchesThem(x))))"
    },
    {
        "NL": "A gemstone is classified as precious if it is rare and has a high economic value.",
        "FOL": "∀x (Gemstone(x) ∧ Rare(x) ∧ HighEconomicValue(x) → Precious(x))"
    },
    {
        "NL": "A stellar system boasts a multitude of intergalactic bodies if it is filled with stars, exoplanets, and meteors with unique features.",
        "FOL": "∀x (StellarSystem(x) ∧ ∃y ∃z ∃w (Star(y) ∧ ExoPlanet(z) ∧ Meteor(w) ∧ UniqueFeatures(y, z, w) ∧ FilledWith(x, y, z, w)) → BoastsMultitudeOfIntergalacticBodies(x))"
    },
    {
        "NL": "Deserts are characterized by low precipitation, extreme temperatures, and sparse vegetation, providing a harsh environment for the limited number of species that inhabit them.",
        "FOL": "∀x∀y∀z (Desert(x) ∧ LowPrecipitation(y) ∧ ExtremeTemperature(z) → (CharacterizedBy(x, y, z) ∧ SparseVegetation(x) ∧ HarshEnvironmentForLimitedNumberOfSpecies(x)))"
    },
    {
        "NL": "A library contains books and offers a quiet space for reading.",
        "FOL": "∀x (Library(x) → (Contains(x, books) ∧ OffersQuietSpace(x, reading)))"
    },
    {
        "NL": "A computer is a laptop or a desktop.",
        "FOL": "∀x (Computer(x) → (Laptop(x) ∨ Desktop(x)))"
    },
    {
        "NL": "A fruit is an apple or a banana.",
        "FOL": "∀x (Fruit(x) → (Apple(x) ∨ Banana(x)))"
    },
    {
        "NL": "An electronic device can be turned off if it is currently turned on.",
        "FOL": "∀x (ElectronicDevice(x) ∧ TurnedOn(x) → CanBeTurnedOff(x))"
    },
    {
        "NL": "Maria is a doctor if and only if she is not a doctor.",
        "FOL": "Doctor(maria) ↔ ¬Doctor(maria)"
    },
    {
        "NL": "A dog has a nose and can bark, while a snail does not have a nose and cannot bark.",
        "FOL": "∀x (Dog(x) → HasNose(x) ∧ CanBark(x)) ∧ ∀y (Snail(y) → ¬HasNose(y) ∧ ¬CanBark(y))"
    },
    {
        "NL": "Photographers capture images using a camera.",
        "FOL": "∀x∀y (Photographer(x) ∧ Camera(y) → CapturesImages(x, y))"
    },
    {
        "NL": "A movie is enjoyable if it has an engaging plot or well-developed characters and a skilled director.",
        "FOL": "∀x (Movie(x) → Enjoyable(x) ↔ (EngagingPlot(x) ∨ (WellDevelopedCharacters(x) ∧ SkilledDirector(x))))"
    },
    {
        "NL": "A technology conference features presentations on different topics, such as artificial intelligence with machine learning and neural networks, cybersecurity with encryption and threat analysis, and virtual reality with immersive experiences and haptic feedback.",
        "FOL": "∀x ∀y (TechnologyConference(x) ∧ (ArtificialIntelligence(x, y) ∧ (MachineLearning(y) ∧ NeuralNetwork(y)) ∨ Cybersecurity(x, y) ∧ (Encryption(y) ∧ ThreatAnalysis(y)) ∨ VirtualReality(x, y) ∧ (ImmersiveExperiences(y) ∧ HapticFeedback(y))))"
    },
    {
        "NL": "A fruit that has a thick rind, is divided into segments, and contains citrus juice is an orange.",
        "FOL": "∀x (Fruit(x) ∧ ThickRind(x) ∧ DividedIntoSegments(x) ∧ ContainsCitrusJuice(x) → Orange(x))"
    },
    {
        "NL": "A movie that is highly rated by both critics and audiences often wins awards and gains popularity.",
        "FOL": "∀x (Movie(x) ∧ HighlyRatedByCritics(x) ∧ HighlyRatedByAudiences(x) → WinsAwards(x) ∧ GainsPopularity(x))"
    },
    {
        "NL": "An aircraft, fueled and maintained, can transport passengers and cargo long distances through the air by generating lift using its wings.",
        "FOL": "∀x ∀y ∀z (Aircraft(x) ∧ Fueled(x) ∧ Maintained(x) → (TransportPassengers(x, y) ∧ TransportCargo(x, z) ∧ GeneratesLift(x)))"
    },
    {
        "NL": "A social media platform is popular among users if it allows sharing multimedia content, supports real-time communication, and maintains user privacy, but it is not preferred by those who avoid online interactions.",
        "FOL": "∀x (SocialMediaPlatform(x) ∧ PopularAmongUsers(x) ↔ (SharingMultimediaContent(x) ∧ SupportsRealTimeCommunication(x) ∧ MaintainsUserPrivacy(x) ∧ ¬AvoidsOnlineInteractions(x)))"
    },
    {
        "NL": "A dessert made with fruit and sugar tastes sweet, but if made with artificial sweeteners, it tastes less sweet.",
        "FOL": "∀x ∀y ∀z (Dessert(x) ∧ MadeWith(x, y) ∧ Fruit(y) ∧ MadeWith(x, z) ∧ Sugar(z) → Sweet(x)) ∧ (Dessert(x) ∧ MadeWith(x, z) ∧ ArtificialSweetener(z) → LessSweet(x))"
    },
    {
        "NL": "A radio receives signals, a television displays images, and a speaker emits sound.",
        "FOL": "∀x∀y∀z (Radio(x) ∧ Television(y) ∧ Speaker(z) → (ReceivesSignals(x) ∧ DisplaysImages(y) ∧ EmitsSound(z)))"
    },
    {
        "NL": "There is an artist who appreciates all forms of art that he encounters.",
        "FOL": "∃x (Artist(x) ∧ ∀y (ArtForm(y) ∧ Encounter(x, y) → Appreciate(x, y)))"
    },
    {
        "NL": "None of the houses are big.",
        "FOL": "¬∃x (House(x) ∧ Big(x))"
    },
    {
        "NL": "A room is spacious if it has a large area or high ceiling.",
        "FOL": "∀x (Room(x) ∧ (LargeArea(x) ∨ HighCeiling(x)) → Spacious(x))"
    },
    {
        "NL": "A scientist conducts research and experiments to discover new knowledge and advance understanding.",
        "FOL": "∀x (Scientist(x) → (ConductsResearch(x) ∧ PerformsExperiments(x) ∧ DiscoversNewKnowledge(x) ∧ AdvancesUnderstanding(x)))"
    },
    {
        "NL": "Giraffes have long necks, elephants have large ears, and rhinos have thick skin.",
        "FOL": "∀x (Giraffe(x) → LongNeck(x)) ∧ (Elephant(x) → LargeEars(x)) ∧ (Rhino(x) → ThickSkin(x))"
    },
    {
        "NL": "A language learning app is beneficial when it offers personalized lessons, incorporates real-life scenarios, and provides instant feedback.",
        "FOL": "∀x ∀y ∀z (LanguageLearningApp(x) ∧ OffersPersonalizedLessons(y) ∧ IncorporatesRealLifeScenarios(z) ∧ ProvidesInstantFeedback(x) → Beneficial(x))"
    },
    {
        "NL": "A musical composition that is written for multiple instruments, has a specific structure, and is performed by a group of musicians is usually an orchestra piece.",
        "FOL": "∀x∀y∀z (MusicalComposition(x) ∧ WrittenForInstruments(x) ∧ SpecificStructure(y) ∧ Has(x, y) ∧ GroupOfMusicians(z) ∧ PerformedBy(x, z) → OrchestraPiece(x))"
    },
    {
        "NL": "Zoe, Chloe, and Max are dancers.",
        "FOL": "Dancer(zoe) ∧ Dancer(chloe) ∧ Dancer(max)"
    },
    {
        "NL": "A smartphone has a touchscreen interface and allows users to install and run various applications.",
        "FOL": "∀x (Smartphone(x) → (TouchscreenInterface(x) ∧ AllowsInstallationOfApplications(x) ∧ AllowsRunningOfApplications(x)))"
    },
    {
        "NL": "An email is marked as spam if it contains certain keywords or is from an unknown sender.",
        "FOL": "∀x (Email(x) ∧ (ContainsKeywords(x) ∨ UnknownSender(x)) → MarkedAsSpam(x))"
    },
    {
        "NL": "Antibiotics are ineffective against viruses.",
        "FOL": "∀x (Antibiotic(x) → IneffectiveAgainstViruses(x))"
    },
    {
        "NL": "A white dwarf comes to existence when a low-to-average mass star collapses under its gravity and evacuates its outer shell.",
        "FOL": "∀x (LowToAverageMassStar(x) ∧ CollapsesDueToGravity(x) ∧ EvacuatesOuterShell(x) → WhiteDwarf(x))"
    },
    {
        "NL": "Every tree is either old or young.",
        "FOL": "∀x (Tree(x) → (Old(x) ∨ Young(x)))"
    },
    {
        "NL": "An object is regarded as a carnivore if it eats meat and has sharp teeth.",
        "FOL": "∀x ((Object(x) ∧ EatsMeat(x) ∧ HasSharpTeeth(x)) → Carnivore(x))"
    },
    {
        "NL": "A biological organism that can fly, has feathers, and lays eggs with hard shells is classified as a bird.",
        "FOL": "∀x (BiologicalOrganism(x) ∧ CanFly(x) ∧ HasFeathers(x) ∧ LaysEggsWithHardShells(x) → Bird(x))"
    },
    {
        "NL": "It is a huge pyramid only if it isn't red.",
        "FOL": "∀x (Huge(x) ∧ Pyramid(x) ↔ ¬Red(x))"
    },
    {
        "NL": "A valid email address contains an \"@\" symbol and a period following the \"@\" symbol.",
        "FOL": "∀x (EmailAddress(x) → (ContainsAtSymbol(x) ∧ ContainsPeriodAfterAtSymbol(x)))"
    },
    {
        "NL": "Birds migrate south in the winter to find warmer climates and more abundant food sources, while they return north in the spring for breeding purposes.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ Winter(y) ∧ South(z) → (Migrates(x, z) ∧ WarmerClimate(z) ∧ AbundantFood(z))) ∧ (Bird(x) ∧ Spring(y) ∧ North(z) → (Migrates(x, z) ∧ BreedingPurpose(z)))"
    },
    {
        "NL": "A truck departs from the initial warehouse and arrives at the final warehouse without stopping at any other warehouses.",
        "FOL": "∃x ∃y ∃z (Truck(x) ∧ InitialWarehouse(y) ∧ FinalWarehouse(z) → LeavesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Warehouse(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A book that is written by a renowned author, covers a specific subject matter, and is highly recommended by experts in the field is typically a bestseller or an academic publication.",
        "FOL": "∀x∀y∀z (Book(x) ∧ WrittenByRenownedAuthor(x, y) ∧ CoversSpecificSubjectMatter(x, z) ∧ HighlyRecommendedByExperts(x) → (Bestseller(x) ∨ AcademicPublication(x)))"
    },
    {
        "NL": "Animals that hibernate during the winter months conserve energy and avoid harsh environmental conditions.",
        "FOL": "∀x (Animal(x) ∧ HibernatesDuringWinter(x) → ConservesEnergyAndAvoidsHarshConditions(x))"
    },
    {
        "NL": "A snack is vegan if it does not contain any dairy products.",
        "FOL": "∀x (Snack(x) ∧ ¬ContainDairyProducts(x) → Vegan(x))"
    },
    {
        "NL": "All cats have whiskers.",
        "FOL": "∀x ∃y (Cat(x) → Whisker(y) ∧ Has(x, y))"
    },
    {
        "NL": "Stephen cherishes a Tolkien book if and only if it was published before 1947.",
        "FOL": "∀x (Book(x) ∧ WrittenBy(x, tolkien) → (PublishedBeforenineteenfourtyseven(x) ↔ Cherish(stephen, x)))"
    },
    {
        "NL": "A mountainous region is suitable for skiing when it has consistent snowfall, well-groomed trails, and modern lift infrastructure.",
        "FOL": "∀x ∀y ∀z (MountainousRegion(x) ∧ ConsistentSnowfall(y) ∧ WellGroomedTrails(z) ∧ ModernLiftInfrastructure(x) → SuitableForSkiing(x))"
    },
    {
        "NL": "A writer will publish a book only if he writes daily.",
        "FOL": "∀x (Writer(x) ∧ PublishBook(x) → WriteDaily(x))"
    },
    {
        "NL": "No one at the seminar sees either Rome or Berlin.",
        "FOL": "∀x (Person(x) ∧ AtSeminar(x) → ¬(See(x, rome) ∨ See(x, berlin)))"
    },
    {
        "NL": "An insect has three pairs of legs and a three-part body.",
        "FOL": "∀x (Insect(x) ↔ (ThreePairsOfLegs(x) ∧ ThreePartBody(x)))"
    },
    {
        "NL": "A movie is a blockbuster if it has a large budget and earns significant revenue.",
        "FOL": "∀x (Movie(x) ∧ LargeBudget(x) ∧ SignificantRevenue(x) → Blockbuster(x))"
    },
    {
        "NL": "A fish is a Clown Fish if it has orange stripes, small size, and lives in sea anemone.",
        "FOL": "∀x (Fish(x) ∧ HasOrangeStripes(x) ∧ IsSmall(x) ∧ LivesInSeaAnemone(x) → ClownFish(x))"
    },
    {
        "NL": "A few architects are either interior designers or landscapers, but not both.",
        "FOL": "∃x (Architect(x) ∧ (InteriorDesigner(x) ⊕ Landscaper(x)))"
    },
    {
        "NL": "A facility where athletes train and compete in various sports is a sports complex.",
        "FOL": "∀x (Facility(x) ∧ AthleteTraining(x) ∧ SportCompetitions(x) → SportsComplex(x))"
    },
    {
        "NL": "In a food chain, a primary producer is consumed by a primary consumer, which is then consumed by a secondary consumer.",
        "FOL": "∀x∀y∀z (FoodChain(x) ∧ PrimaryProducer(y) ∧ PrimaryConsumer(z) → (ConsumedBy(y, z) ∧ ConsumedBySecondaryConsumer(z)))"
    },
    {
        "NL": "A smartphone has a touchscreen, can make calls, and access the internet, but not all have a long battery life.",
        "FOL": "∀x (Smartphone(x) → (HasTouchscreen(x) ∧ CanMakeCalls(x) ∧ AccessInternet(x) ∧ ¬(∀y (Smartphone(y) → LongBatteryLife(y)))))"
    },
    {
        "NL": "No player has won all games.",
        "FOL": "¬∃x (Player(x) ∧ ∀y (Game(y) → Won(x, y)))"
    },
    {
        "NL": "A musical piece is classified as a symphony if it is composed for an orchestra, follows a specific structure, and typically consists of four movements.",
        "FOL": "∀x (MusicalPiece(x) ∧ ComposedForOrchestra(x) ∧ FollowsSpecificStructure(x) ∧ TypicallyConsistsOfFourMovements(x) → Symphony(x))"
    },
    {
        "NL": "A movie is considered a blockbuster when it has a large budget, a high-profile cast, and achieves significant box office success.",
        "FOL": "∀x (Movie(x) ∧ LargeBudget(x) ∧ HighProfileCast(x) ∧ SignificantBoxOfficeSuccess(x) → Blockbuster(x))"
    },
    {
        "NL": "Every bird can fly or swim.",
        "FOL": "∀x (Bird(x) → CanFly(x) ∨ CanSwim(x))"
    },
    {
        "NL": "Maria is a doctor and a nurse.",
        "FOL": "Doctor(maria) ∧ Nurse(maria)"
    },
    {
        "NL": "A nurse is treating a patient in the hospital.",
        "FOL": "∃x ∃y (Nurse(x) ∧ Patient(y) ∧ Treating(x, y) ∧ InTheHospital(x))"
    },
    {
        "NL": "A meal is deemed healthy if and only if it has vegetables and proteins.",
        "FOL": "∀x (Meal(x) → (Healthy(x) ↔ HasVegetables(x) ∧ HasProteins(x)))"
    },
    {
        "NL": "A sport that involves teams, uses a ball, and is played on a field is either soccer or rugby.",
        "FOL": "∀x (Sport(x) ∧ InvolvesTeams(x) ∧ UsesBall(x) ∧ PlayedOnField(x) → (Soccer(x) ∨ Rugby(x)))"
    },
    {
        "NL": "Every cat snores if not all dogs bark.",
        "FOL": "¬∀x (Dog(x) → Bark(x)) → ∃y (Cat(y) ∧ ∀z (Cat(z) → Snore(z, y)))"
    },
    {
        "NL": "In a computer network, a router directs data packets between devices, while a switch connects devices within the same network, and a firewall protects the network from unauthorized access.",
        "FOL": "∀x∀y∀z (ComputerNetwork(x) ∧ Router(y) ∧ Switch(z) → (DirectsDataPackets(y, x) ∧ ConnectsDevicesWithinNetwork(z, x) ∧ ProtectsFromUnauthorizedAccess(x)))"
    },
    {
        "NL": "A movie is a blockbuster when it has a large budget, generates high revenue, and is not an independent film.",
        "FOL": "∀x (Movie(x) ∧ LargeBudget(x) ∧ HighRevenue(x) ∧ ¬IndependentFilm(x) → Blockbuster(x))"
    },
    {
        "NL": "An orange octagon overlays something.",
        "FOL": "∃x (Orange(x) ∧ Octagon(x) → ∃y (Overlays(x, y)))"
    },
    {
        "NL": "Fruits contain seeds and grow on plants.",
        "FOL": "∀x (Fruit(x) → (Contains(y) ∧ Seeds(y) ∧ GrowsOn(z) ∧ Plant(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "Antibiotics are effective against bacterial infections but do not work against viral infections.",
        "FOL": "∀x (Antibiotic(x) → (EffectiveAgainstBacterialInfections(x) ∧ ¬EffectiveAgainstViralInfections(x)))"
    },
    {
        "NL": "A person is a professional athlete if they participate in sports competitions and earn a living from it.",
        "FOL": "∀x (Person(x) ∧ ParticipatesInSportsCompetitions(x) ∧ EarnsLivingFromIt(x) → ProfessionalAthlete(x))"
    },
    {
        "NL": "There does not exist a building that shades all large trees.",
        "FOL": "¬∃x (Building(x) ∧ ∀y (Large(y) ∧ Tree(y) → Shades(x, y)))"
    },
    {
        "NL": "An animal can be either a vertebrate or an invertebrate, but not both.",
        "FOL": "∀x (Animal(x) → (Vertebrate(x) ⊕ Invertebrate(x)))"
    },
    {
        "NL": "A painting is created using a canvas, paint, and various types of brushes.",
        "FOL": "∀x ∀y ∀z (Painting(x) → (CreatedWith(x, y) ∧ Canvas(y) ∧ UsesPaint(x, z) ∧ VariousTypesOfBrushes(z)))"
    },
    {
        "NL": "Butterflies undergo metamorphosis, starting as caterpillars and transforming into winged insects.",
        "FOL": "∀x ∀y (Butterfly(x) ∧ Caterpillar(y) → UndergoesMetamorphosisFromTo(y, x))"
    },
    {
        "NL": "If a person is an architect, they design buildings and oversee their construction.",
        "FOL": "∀x (Architect(x) → (DesignsBuildings(x) ∧ OverseesBuildingConstruction(x)))"
    },
    {
        "NL": "A dessert is satisfying when it has a balanced sweetness and (contains rich flavors or has a pleasing texture).",
        "FOL": "∀x (Dessert(x) ∧ Satisfying(x) ↔ (BalancedSweetness(x) ∧ (RichFlavors(x) ∨ PleasingTexture(x))))"
    },
    {
        "NL": "A vacation destination is appealing if it offers a variety of activities, has beautiful scenery, and provides a unique cultural experience.",
        "FOL": "∀x ∀y ∀z (VacationDestination(x) ∧ VarietyOfActivities(x, y) ∧ BeautifulScenery(x, z) ∧ UniqueCulturalExperience(x) → Appealing(x))"
    },
    {
        "NL": "There are animals that are both carnivorous and dangerous, while all the others are herbivorous and harmless.",
        "FOL": "∀x (Animal(x) → (Carnivorous(x) ∧ Dangerous(x)) ⊕ (Herbivorous(x) ∧ Harmless(x)))"
    },
    {
        "NL": "Astronauts living in microgravity environments must exercise regularly to prevent muscle atrophy and bone loss.",
        "FOL": "∀x (Astronaut(x) ∧ LivingInMicrogravity(x) → MustExerciseToPreventMuscleAtrophyAndBoneLoss(x))"
    },
    {
        "NL": "A language is spoken in a country if it is an official language or a widely spoken minority language, but not if it is a dead language.",
        "FOL": "∀x ∀y (Language(x) ∧ Country(y) → (((OfficialLanguage(x, y) ∨ WidelySpokenMinorityLanguage(x, y)) ∧ ¬DeadLanguage(x)) → SpokenInCountry(x, y)))"
    },
    {
        "NL": "If a person is a nurse, they must provide healthcare services, including patient assessment, treatment, and education, often working in hospitals, clinics, or other medical facilities.",
        "FOL": "∀x (Nurse(x) → (ProvidesHealthcareServices(x) ∧ IncludingPatientAssessmentTreatmentAndEducation(x) ∧ WorksInHospitalsClinicsOrOtherMedicalFacilities(x)))"
    },
    {
        "NL": "All cats dislike wet surfaces.",
        "FOL": "∀x ∀y (Cat(x) ∧ Wet(y) ∧ Surface(y) → ¬Dislike(x, y))"
    },
    {
        "NL": "A doctor prescribes medication only if the patient has a bacterial infection, and not if it's viral.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → ((HasBacterialInfection(y) ∧ ¬HasViralInfection(y)) → PrescribesMedication(x, y)))"
    },
    {
        "NL": "A conference is informative if it features expert speakers, covers relevant topics, and encourages networking, but not if it has limited attendance.",
        "FOL": "∀x (Conference(x) ∧ Informative(x) ↔ (ExpertSpeakers(x) ∧ RelevantTopics(x) ∧ EncouragesNetworking(x) ∧ ¬LimitedAttendance(x)))"
    },
    {
        "NL": "Bakers bake bread in ovens.",
        "FOL": "∀x∀y∀z (Baker(x) ∧ Bread(y) ∧ Oven(z) → BakesIn(x, y, z))"
    },
    {
        "NL": "A telescope is used to observe distant objects, while a microscope is used to observe tiny objects.",
        "FOL": "∀x ∀y (Telescope(x) ∧ Microscope(y) → (ObserveDistantObjects(x) ∧ ObserveTinyObjects(y)))"
    },
    {
        "NL": "A constructor builds houses, and an inspector examines them.",
        "FOL": "∀x ∀y (Constructor(x) ∧ House(y) → Builds(x, y)) ∧ ∀z ∀w (Inspector(z) ∧ House(w) → Examines(z, w))"
    },
    {
        "NL": "A door is opened or closed, never both.",
        "FOL": "∀x (Door(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "Carnivorous plants, such as Venus flytraps, pitcher plants, or sundews, consume insects and small animals as a source of nutrients.",
        "FOL": "∀x ∀y ∀z (CarnivorousPlant(x) → (ExampleOf(x, y) ∧ (VenusFlytrap(y) ∨ PitcherPlant(y) ∨ Sundew(y)) ∧ Consumes(x, z) ∧ (Insects(z) ∨ SmallAnimals(z)) ∧ SourceOfNutrients(x)))"
    },
    {
        "NL": "A mammal gives birth to live young and nurses them with milk.",
        "FOL": "∀x (Mammal(x) → (GivesBirthToLiveYoung(x) ∧ NursesWithMilk(x)))"
    },
    {
        "NL": "If a person is a composer, they create and arrange musical compositions.",
        "FOL": "∀x (Composer(x) → (CreatesMusicalCompositions(x) ∧ ArrangesMusicalCompositions(x)))"
    },
    {
        "NL": "Some parks allow dogs or picnics, but not both activities.",
        "FOL": "∃x (Park(x) ∧ (AllowsDogs(x) ⊕ AllowsPicnics(x)))"
    },
    {
        "NL": "A software program that is user-friendly, regularly updated, and compatible with multiple operating systems has a high likelihood of success in the market.",
        "FOL": "∀x (SoftwareProgram(x) ∧ UserFriendly(x) ∧ RegularlyUpdated(x) ∧ CompatibleWithMultipleOperatingSystems(x) → HighLikelihoodOfMarketSuccess(x))"
    },
    {
        "NL": "All cars have wheels and can drive, while all boats have no wheels and cannot drive.",
        "FOL": "∀x (Car(x) → HasWheels(x) ∧ CanDrive(x)) ∧ ∀y (Boat(y) → ¬HasWheels(y) ∧ ¬CanDrive(y))"
    },
    {
        "NL": "A book is fiction if it is a novel or a short story.",
        "FOL": "∀x (Book(x) ∧ (Novel(x) ∨ ShortStory(x)) → Fiction(x))"
    },
    {
        "NL": "Mia plays with Nick if and only if Nick plays with Mia.",
        "FOL": "Play(mia, nick) ↔ Play(nick, mia)"
    },
    {
        "NL": "A musical instrument produces sound by vibrating strings, resonating air, or striking surfaces.",
        "FOL": "∀x (MusicalInstrument(x) → (ProducesSoundByVibratingStrings(x) ∨ ProducesSoundByResonatingAir(x) ∨ ProducesSoundByStrikingSurfaces(x)))"
    },
    {
        "NL": "Not all films are funny, but every funny film brings joy.",
        "FOL": "¬∀x (Film(x) → Funny(x)) ∧ ∀y (Funny(y) ∧ Film(y) → BringsJoy(y))"
    },
    {
        "NL": "Linguists analyze languages for patterns.",
        "FOL": "∀x∀y∀z (Linguist(x) ∧ Language(y) ∧ Pattern(z) → AnalyzesFor(x, y, z))"
    },
    {
        "NL": "There aren't any keyboards that are wireless.",
        "FOL": "¬∃x (Keyboard(x) ∧ Wireless(x))"
    },
    {
        "NL": "Birds search for nesting materials.",
        "FOL": "∀x ∀y (Bird(x) ∧ NestingMaterial(y) → Search(x, y))"
    },
    {
        "NL": "A doctor is specialized in cardiology if they diagnose and treat heart-related conditions.",
        "FOL": "∀x (Doctor(x) ∧ DiagnosesHeartConditions(x) ∧ TreatsHeartConditions(x) → Cardiologist(x))"
    },
    {
        "NL": "There are cyclists who respect only those runners who are faster than they.",
        "FOL": "∃x ∀y (Cyclist(x) ∧ Runner(y) ∧ FasterThan(y, x) → Respect(x, y))"
    },
    {
        "NL": "A structure is a school if it provides education, is approachable for students, and has a learning environment.",
        "FOL": "∀x (Structure(x) ∧ ProvidesEducation(x) ∧ ApproachableForStudents(x) ∧ HasLearningEnvironment(x) → School(x))"
    },
    {
        "NL": "A piano is big, and a flute is small.",
        "FOL": "∃x (Big(x) ∧ Piano(x)) ∧ ∃x (Small(x) ∧ Flute(x))"
    },
    {
        "NL": "A job can be either paid or unpaid.",
        "FOL": "∀x (Job(x) → (Paid(x) ⊕ Unpaid(x)))"
    },
    {
        "NL": "Every apple is a fruit, but not all fruits are apples.",
        "FOL": "∀x (Apple(x) → Fruit(x)) ∧ ¬∀x (Fruit(x) → Apple(x))"
    },
    {
        "NL": "A research center focuses on diverse scientific disciplines, such as biology, chemistry, and physics, and collaborates with institutions from different countries, like the United States, China, and Germany.",
        "FOL": "∀x∀y∀z (ResearchCenter(x) ∧ (BiologyDiscipline(y) ∨ ChemistryDiscipline(y) ∨ PhysicsDiscipline(y)) ∧ (UnitedStatesInstitution(z) ∨ ChinaInstitution(z) ∨ GermanyInstitution(z)) → FocusesOnDisciplinesAndCollaboratesWithInstitutions(x, y, z))"
    },
    {
        "NL": "A product sells well if it is of high quality, reasonably priced, and effectively marketed.",
        "FOL": "∀x (Product(x) ∧ IsHighQuality(x) ∧ ReasonablyPriced(x) ∧ EffectivelyMarketed(x) → SellsWell(x))"
    },
    {
        "NL": "When a location experiences heavy rainfall, it is prone to flooding.",
        "FOL": "∀x (Location(x) ∧ HeavyRainfall(x) → ProneToFlooding(x))"
    },
    {
        "NL": "A PC can be desktop or laptop.",
        "FOL": "∀x (PC(x) → (Desktop(x) ∨ Laptop(x)))"
    },
    {
        "NL": "A celestial body is a comet if it is composed of ice, dust, and rock and orbits the sun in an elongated path.",
        "FOL": "∀x (CelestialBody(x) ∧ ComposedOfIceDustAndRock(x) ∧ OrbitsSunInElongatedPath(x) → Comet(x))"
    },
    {
        "NL": "An employee who is punctual and diligent will usually be considered a good worker.",
        "FOL": "∀x (Employee(x) ∧ Punctual(x) ∧ Diligent(x) → GoodWorker(x))"
    },
    {
        "NL": "A fruit is ripe when it's not green and not rotten.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ↔ (¬Green(x) ∧ ¬Rotten(x))))"
    },
    {
        "NL": "A student who consistently performs well in mathematics, science, and language arts courses demonstrates strong academic abilities across multiple subjects.",
        "FOL": "∀x (Student(x) ∧ PerformsWellInMathematics(x) ∧ PerformsWellInScience(x) ∧ PerformsWellInLanguageArts(x) → StrongAcademicAbilities(x))"
    },
    {
        "NL": "All bachelors are not sloths or wastrels.",
        "FOL": "∃x (Bachelor(x) ∧ (¬Sloth(x) ∨ ¬Wastrel(x)))"
    },
    {
        "NL": "Universities with world-class faculty, state-of-the-art infrastructure, and well-designed curriculum generally have a high ranking.",
        "FOL": "∀x (University(x) ∧ HasWorldClassFaculty(x) ∧ HasModernInfrastructure(x) ∧ HasWellDesignedCurriculum(x) → HasHighRanking(x))"
    },
    {
        "NL": "An article is a chronicle if it details the private history of a particular character, written by the character himself.",
        "FOL": "∀x ∃y (Article(x) ∧ Character(y) ∧ DetailsPrivateHistory(x, y) ∧ WrittenBy(x, y) → Chronicle(x))"
    },
    {
        "NL": "Not all materials are either solid or liquid.",
        "FOL": "¬(∀x (Material(x) → (Solid(x) ∨ Liquid(x))))"
    },
    {
        "NL": "Nothing is a fast cheetah and a slow turtle.",
        "FOL": "¬∃x ((Fast(x) ∧ Cheetah(x)) ∧ (Slow(x) ∧ Turtle(x)))"
    },
    {
        "NL": "A student is considered a high achiever if they consistently receive high grades and excel in extracurricular activities.",
        "FOL": "∀x (Student(x) ∧ ConsistentlyHighGrades(x) ∧ ExcelsInExtracurricular(x) → HighAchiever(x))"
    },
    {
        "NL": "An object is a pentagon if and only if every object it indicates to is big.",
        "FOL": "∀x (Pentagon(x) ↔ ∀y (Indicates(x, y) → Big(y)))"
    },
    {
        "NL": "An artist can have their artwork displayed in a gallery if the artwork matches the gallery's theme and the artist is already represented by the gallery.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Artwork(y) ∧ Gallery(z) ∧ MatchesTheme(y, z) ∧ RepresentedBy(x, z) → CanDisplayInGallery(x, y, z))"
    },
    {
        "NL": "A locked door increases security.",
        "FOL": "∀x (LockedDoor(x) → IncreasesSecurity(x))"
    },
    {
        "NL": "A restaurant serves breakfast if it offers dishes like pancakes, eggs, and bacon in the morning.",
        "FOL": "∀x (Restaurant(x) ∧ OffersDishes(x, Pancakes) ∧ OffersDishes(x, Eggs) ∧ OffersDishes(x, Bacon) ∧ InTheMorning(x) → ServesBreakfast(x))"
    },
    {
        "NL": "A dog is chasing a ball in the yard.",
        "FOL": "∃x ∃y (Dog(x) ∧ Ball(y) ∧ Chasing(x, y) ∧ InTheYard(x))"
    },
    {
        "NL": "The Earth's atmosphere is composed of different layers, including the troposphere, stratosphere, and mesosphere.",
        "FOL": "∀x (EarthsAtmosphere(x) → (HasLayer(x, troposphere) ∧ HasLayer(x, stratosphere) ∧ HasLayer(x, mesosphere)))"
    },
    {
        "NL": "A vaccine is effective against a virus if it has undergone successful clinical trials and is approved by health authorities.",
        "FOL": "∀x (Vaccine(x) ∧ SuccessfulClinicalTrials(x) ∧ ApprovedByHealthAuthorities(x) → EffectiveAgainstVirus(x))"
    },
    {
        "NL": "No musicians are talented unless they are expressive, but all of them aspire to produce.",
        "FOL": "∀x (Musician(x) → (¬Talented(x) ∨ Expressive(x))) ∧ ∀y (Musician(y) → AspireToProduce(y))"
    },
    {
        "NL": "Hurricanes form over warm ocean waters.",
        "FOL": "∀x (Hurricane(x) → ∃y (WarmOceanWater(y) ∧ FormsOver(x, y)))"
    },
    {
        "NL": "A vehicle is considered a motorcycle if it has two wheels and an engine.",
        "FOL": "∀x (Vehicle(x) ∧ TwoWheels(x) ∧ HasEngine(x) → Motorcycle(x))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it is powered by an electric motor and uses a battery as its energy source.",
        "FOL": "∀x (ElectricVehicle(x) ↔ (Vehicle(x) ∧ PoweredByElectricMotor(x) ∧ UsesBatteryAsEnergySource(x)))"
    },
    {
        "NL": "A teacher helps a student learn new skills through guidance and support.",
        "FOL": "∀x ∀y (Teacher(x) ∧ Student(y) → Helps(x, y, guidance, support))"
    },
    {
        "NL": "A tree loses its leaves in autumn, and its branches are bare in winter.",
        "FOL": "∀x (Tree(x) → (LosesLeavesInAutumn(x) ∧ BranchesBareInWinter(x)))"
    },
    {
        "NL": "Students attend lectures and complete assignments to learn and earn a degree.",
        "FOL": "∀x (Student(x) → (AttendLectures(x) ∧ CompleteAssignments(x) ∧ Learn(x) ∧ EarnDegree(x)))"
    },
    {
        "NL": "A building primarily used for storing and preserving books, documents, and other materials is a library.",
        "FOL": "∀x (Building(x) ∧ UsedForStoringBooks(x) ∧ PreservesDocuments(x) → Library(x))"
    },
    {
        "NL": "A student who studies regularly and has good time management skills is likely to succeed academically.",
        "FOL": "∀x (Student(x) ∧ StudiesRegularly(x) ∧ GoodTimeManagement(x) → AcademicSuccess(x))"
    },
    {
        "NL": "Insects have six legs.",
        "FOL": "∀x (Insect(x) → HasSixLegs(x))"
    },
    {
        "NL": "An engineer builds a stable bridge by designing a robust structure, using strong materials, and following safety guidelines.",
        "FOL": "∀x (Engineer(x) → (DesignRobustStructure(x) ∧ UseStrongMaterials(x) ∧ FollowSafetyGuidelines(x) → BuildStableBridge(x)))"
    },
    {
        "NL": "A restaurant can be a fast food, a buffet, or a fine dining.",
        "FOL": "∀x (Restaurant(x) → (FastFood(x) ∨ Buffet(x) ∨ FineDining(x)))"
    },
    {
        "NL": "A farmer grows crops in a field and sells the harvest at the market.",
        "FOL": "∀x∀y∀z (Farmer(x) ∧ Crop(y) ∧ Field(z) → (GrowsIn(x, y, z) ∧ SellsAtMarket(x, y)))"
    },
    {
        "NL": "A transportation device that is designed for carrying goods over water and is powered by wind or an engine is classified as a ship.",
        "FOL": "∀x (TransportationDevice(x) ∧ DesignedForCarryingGoods(x) ∧ TravelsOnWater(x) ∧ (PoweredByWind(x) ∨ PoweredByEngine(x)) → Ship(x))"
    },
    {
        "NL": "An electronic device that captures and stores images, typically using a lens and a sensor, and can be used for photography or videography is a digital camera or a camcorder.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CapturesAndStoresImages(x) ∧ UsesLensAndSensor(x) ∧ (UsedForPhotography(x) ∨ UsedForVideography(x)) → (DigitalCamera(x) ∨ Camcorder(x)))"
    },
    {
        "NL": "An author writes a novel, an editor reviews it, and a publisher releases it.",
        "FOL": "∀x∀y∀z (Author(x) ∧ Novel(y) ∧ Editor(z) → (Writes(x, y) ∧ Reviews(z, y) ∧ Publisher(z) ∧ Releases(z, y)))"
    },
    {
        "NL": "Insects typically have six legs, but not all six-legged creatures are insects.",
        "FOL": "∀x (Insect(x) → (HasSixLegs(x) ∧ ¬∀y (HasSixLegs(y) → Insect(y))))"
    },
    {
        "NL": "Anyone who treats existence as a roulette game deserves disappointment.",
        "FOL": "∀v (TreatsExistenceAsRoulette(v) → DeservesDisappointment(v))"
    },
    {
        "NL": "A tailor is sewing a dress in the shop.",
        "FOL": "∃x ∃y (Tailor(x) ∧ Dress(y) ∧ Sewing(x, y) ∧ InTheShop(x))"
    },
    {
        "NL": "A film is widely praised when it contains thrilling scenes, engaging story, and charming cast.",
        "FOL": "∀x (Film(x) ∧ HasThrillingScenes(x) ∧ HasEngagingStory(x) ∧ HasCharmingCast(x) → IsWidelyPraised(x))"
    },
    {
        "NL": "An ecosystem is in danger if its biodiversity is decreasing and human activities are contributing to this decline.",
        "FOL": "∀x (Ecosystem(x) ∧ DecreasingBiodiversity(x) ∧ HumanActivitiesContribute(x) → InDanger(x))"
    },
    {
        "NL": "If a person is a gardener, they maintain and cultivate plants in gardens.",
        "FOL": "∀x (Gardener(x) → (MaintainsGardenPlants(x) ∧ CultivatesGardenPlants(x)))"
    },
    {
        "NL": "Sensible writers do not drink.",
        "FOL": "∀x (Writer(x) ∧ Sensible(x) → ¬Drink(x))"
    },
    {
        "NL": "A device is either wireless or requires a cable, but not both.",
        "FOL": "∀x (Device(x) → (Wireless(x) ⊕ RequiresCable(x)))"
    },
    {
        "NL": "A person is a nephew if they are the offspring of another person's sibling",
        "FOL": "∀x ∃y ∃z (Person(x) ∧ Person(y) ∧ Person(z) ∧ ChildOf(x, y) ∧ SiblingOf(y, z) → Nephew(x))"
    },
    {
        "NL": "A well-maintained garden features lush greenery, vibrant flowers, and healthy soil, creating a pleasant environment for relaxation and enjoyment.",
        "FOL": "∀x (Garden(x) ∧ WellMaintained(x) ∧ LushGreenery(x) ∧ VibrantFlowers(x) → CreatesPleasantEnvironmentForRelaxationAndEnjoyment(x))"
    },
    {
        "NL": "An athlete excels in a sport if they possess natural talent, receive proper training, and maintain a healthy lifestyle, but not if they suffer from frequent injuries.",
        "FOL": "∀x (Athlete(x) ∧ ((NaturalTalent(x) ∧ ProperTraining(x) ∧ HealthyLifestyle(x)) ∧ ¬FrequentInjuries(x) → ExcelsInSport(x)))"
    },
    {
        "NL": "Students study subjects such as math, science, or history.",
        "FOL": "∀x (Student(x) → Studies(x, y) ∧ (Math(y) ∨ Science(y) ∨ History(y)))"
    },
    {
        "NL": "Fish can live underwater and they cannot breathe air, while humans cannot live underwater and can breathe air.",
        "FOL": "∀x (Fish(x) → CanLiveUnderwater(x) ∧ ¬CanBreatheAir(x)) ∧ ∀y (Human(y) → ¬CanLiveUnderwater(y) ∧ CanBreatheAir(y))"
    },
    {
        "NL": "A musical instrument with strings and a hollow body is a guitar.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ HollowBody(x) → Guitar(x))"
    },
    {
        "NL": "Insects that fly and produce honey are bees.",
        "FOL": "∀x (Insect(x) ∧ CanFly(x) ∧ ProducesHoney(x) → Bee(x))"
    },
    {
        "NL": "A bicycle remains upright when it is in motion and properly balanced.",
        "FOL": "∀x (Bicycle(x) ∧ InMotion(x) ∧ ProperlyBalanced(x) → RemainsUpright(x))"
    },
    {
        "NL": "No visitor in the park played games.",
        "FOL": "∀x (Visitor(x) ∧ InPark(x) → ¬PlayedGame(x))"
    },
    {
        "NL": "A dog barks loudly when it is excited or scared.",
        "FOL": "∀x (Dog(x) ∧ (Excited(x) ∨ Scared(x)) → BarksLoudly(x))"
    },
    {
        "NL": "A computer program is user-friendly if it has a simple interface and provides clear instructions.",
        "FOL": "∀x (ComputerProgram(x) ∧ SimpleInterface(x) ∧ ClearInstructions(x) → UserFriendly(x))"
    },
    {
        "NL": "A story is mesmerizing if and only if its theme is gripping and the description is clear, but it doesn't hold too many complex elements.",
        "FOL": "∀x (Story(x) ∧ Mesmerizing(x) ↔ (GrippingTheme(x) ∧ ClearDescription(x) ∧ ¬HoldManyComplexElements(x)))"
    },
    {
        "NL": "An author writes books, while an illustrator creates illustrations for books.",
        "FOL": "∀x∀y (Author(x) ∧ Book(y) → Writes(x, y)) ∧ (Illustrator(x) ∧ Book(y) → CreatesIllustrations(x, y))"
    },
    {
        "NL": "An exercise routine promotes health when it combines cardiovascular workouts, strengthens muscles, and incorporates flexibility training.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ CardiovascularWorkouts(x) ∧ StrengthensMuscles(x) ∧ FlexibilityTraining(x) → PromotesHealth(x))"
    },
    {
        "NL": "A solar panel generates electricity by converting sunlight into electrical energy.",
        "FOL": "∀x (SolarPanel(x) → (∃y (Sunlight(y) ∧ ConvertsIntoElectricalEnergy(x, y))))"
    },
    {
        "NL": "A chemical reaction that absorbs heat from its surroundings, results in a decrease in temperature, and requires an input of energy to proceed is an endothermic reaction.",
        "FOL": "∀x (ChemicalReaction(x) ∧ AbsorbsHeatFromSurroundings(x) ∧ DecreasesTemperature(x) ∧ RequiresEnergyInput(x) → EndothermicReaction(x))"
    },
    {
        "NL": "Some flowers bloom in the spring, while others bloom in the summer, autumn, or winter.",
        "FOL": "∃x (Flower(x) ∧ (BloomsIn(x, spring) ∨ BloomsIn(x, summer) ∨ BloomsIn(x, autumn) ∨ BloomsIn(x, winter)))"
    },
    {
        "NL": "If a mountain isn't snow-capped, then it's either volcanic or made of limestone.",
        "FOL": "∀x (Mountain(x) ∧ ¬SnowCapped(x) → (Volcanic(x) ∨ Limestone(x)))"
    },
    {
        "NL": "A deep fryer fries potatoes by submerging them in hot oil.",
        "FOL": "∀x ∀y (DeepFryer(x) ∧ Potatoes(y) ∧ SubmergesInHotOil(x, y) → Fry(x, y))"
    },
    {
        "NL": "A person is considered a painter if they create works of art using paint, often on canvas or other surfaces.",
        "FOL": "∀x (Person(x) ∧ CreatesArtUsingPaint(x) ∧ OftenOnCanvasOrOtherSurfaces(x) → Painter(x))"
    },
    {
        "NL": "A university is prestigious if it has a strong faculty, a high graduation rate, and a significant research output.",
        "FOL": "∀x (University(x) → (StrongFaculty(x) ∧ HighGraduationRate(x) ∧ SignificantResearchOutput(x) → Prestigious(x)))"
    },
    {
        "NL": "A bird is migratory if it moves to different regions instead of staying in one place.",
        "FOL": "∀x (Bird(x) ∧ MovesDifferentRegions(x) ∧ ¬StaysOnePlace(x) → MigratoryBird(x))"
    },
    {
        "NL": "A plant is dubbed a tree if it's large and has more than 200 rings.",
        "FOL": "∀x (Plant(x) ∧ Large(x) ∧ HasMoreThanTwoHundredRings(x) → Tree(x))"
    },
    {
        "NL": "A city is considered a capital if it is the primary seat of government for a country or a state.",
        "FOL": "∀x∀y (City(x) ∧ (Country(y) ∨ State(y)) ∧ PrimarySeatOfGovernment(x, y) → Capital(x))"
    },
    {
        "NL": "Each scientist is curious.",
        "FOL": "∀x (Scientist(x) → Curious(x))"
    },
    {
        "NL": "All mathematicians are precise thinkers and some thinkers are not good communicators.",
        "FOL": "∀x (Mathematician(x) → PreciseThinker(x)) ∧ ∃y (Thinker(y) ∧ ¬GoodCommunicator(y))"
    },
    {
        "NL": "Humans talk using language, while dogs communicate by barking.",
        "FOL": "∀x (Human(x) → TalkUsingLanguage(x)) ∧ ∀y (Dog(y) → CommunicateByBarking(y))"
    },
    {
        "NL": "Natural disasters, such as hurricanes, earthquakes, and wildfires, can cause significant damage to infrastructure and property.",
        "FOL": "∀x∀y∀z∀w (NaturalDisaster(x) ∧ (Hurricane(y) ∨ Earthquake(y) ∨ Wildfire(y)) ∧ Infrastructure(z) ∧ Property(w) → CausesSignificantDamage(x, z, w))"
    },
    {
        "NL": "A person is a chef if they can cook Thai or Japanese food, but not both.",
        "FOL": "∀x (Person(x) → (Chef(x) → (CookThaiFood(x) ⊕ CookJapaneseFood(x))))"
    },
    {
        "NL": "A programming language that is designed for web development, allows for dynamic web page content, and is interpreted by web browsers is called JavaScript.",
        "FOL": "∀x (ProgrammingLanguage(x) ∧ DesignedForWebDevelopment(x) ∧ AllowsDynamicWebPageContent(x) ∧ InterpretedByWebBrowsers(x) → JavaScript(x))"
    },
    {
        "NL": "In a competition, a participant wins a gold medal or a silver medal, but not both, and some don't win any medals.",
        "FOL": "∃x∃y∃z (Participant(x) ∧ Participant(y) ∧ Participant(z) ∧ (WinsGold(x) ⊕ WinsSilver(x)) ∧ ¬WinsGold(y) ∧ ¬WinsSilver(y) ∧ ¬WinsGold(z) ∧ ¬WinsSilver(z))"
    },
    {
        "NL": "A plant that grows in a specific climate and has a particular type of leaves is typically a tree or a shrub.",
        "FOL": "∀x∀y∀z (Plant(x) ∧ GrowsInClimate(x, y) ∧ HasLeafType(x, z) → (Tree(x) ∨ Shrub(x)))"
    },
    {
        "NL": "An individual needs exercise, a balanced diet, and adequate sleep to be healthy.",
        "FOL": "∀x (Individual(x) → (DoesExercise(x) ∧ HasBalancedDiet(x) ∧ GetsAdequateSleep(x)) → IsHealthy(x))"
    },
    {
        "NL": "A vehicle is considered a bus if it has multiple seats and is used for the transportation of passengers along a predetermined route, often with scheduled stops.",
        "FOL": "∀x (Vehicle(x) ∧ MultipleSeats(x) ∧ TransportsPassengersAlongPredeterminedRoute(x) ∧ OftenWithScheduledStops(x) → Bus(x))"
    },
    {
        "NL": "No fruit is both a banana and an apple.",
        "FOL": "¬∃x (Fruit(x) ∧ Banana(x) ∧ Apple(x))"
    },
    {
        "NL": "A candy is considered tangy if it contains citrus or tamarind.",
        "FOL": "∀x (Candy(x) ∧ (HasCitrus(x) ∨ HasTamarind(x)) → Tangy(x))"
    },
    {
        "NL": "A car can be considered eco-friendly when it has low emissions, uses renewable energy sources, and is made from sustainable materials.",
        "FOL": "∀x (Car(x) ∧ LowEmissions(x) ∧ RenewableEnergySources(x) ∧ SustainableMaterials(x) → EcoFriendly(x))"
    },
    {
        "NL": "Cats and dogs are both common domestic pets.",
        "FOL": "∀x∀y (Cat(x) ∧ Dog(y) → (DomesticPet(x) ∧ DomesticPet(y)))"
    },
    {
        "NL": "A tree provides shade when its leaves block sunlight and the sun is at a certain angle.",
        "FOL": "∀x ∀y ∀z (Tree(x) ∧ LeavesBlockSunlight(x, y) ∧ SunAtCertainAngle(z) → ProvidesShade(x))"
    },
    {
        "NL": "Analog and digital are two types of signals used in communication systems, with analog representing continuous waves and digital representing discrete values.",
        "FOL": "∀x ∀y (Signal(x) ∧ (Analog(x) ∨ Digital(x)) ∧ CommunicationSystem(y) → (RepresentsContinuousWaves(x, y) ∨ RepresentsDiscreteValues(x, y)))"
    },
    {
        "NL": "A cook makes dessert or appetizers.",
        "FOL": "∀x (Cook(x) → MakesDessert(x) ∨ MakesAppetizers(x))"
    },
    {
        "NL": "A car requires fuel, such as gasoline or electricity, to function.",
        "FOL": "∀x (Car(x) → (RequiresGasoline(x) ∨ RequiresElectricity(x)))"
    },
    {
        "NL": "A bag is functional if it has multiple compartments and is made of durable material.",
        "FOL": "∀x (Bag(x) → (Functional(x) ↔ (MultipleCompartments(x) ∧ DurableMaterial(x))))"
    },
    {
        "NL": "A car leaves the garage and reaches the motorway without stopping at traffic lights.",
        "FOL": "∃x ∃y ∃z (Car(x) ∧ Garage(y) ∧ Motorway(z) → LeavesFrom(x, y) ∧ Reaches(x, z) ∧ ¬∃w (TrafficLight(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "If an individual embraces a growth mindset, they are more likely to learn from their mistakes and continually develop their skills.",
        "FOL": "∀x (EmbracesGrowthMindset(x) → (LearnFromMistakes(x) ∧ ContinuallyDevelopSkills(x)))"
    },
    {
        "NL": "Cacti store water in their stems and can survive in dry environments.",
        "FOL": "∀x ∀y ∀z (Cactus(x) → (Water(y) ∧ StoresInStem(x, y) ∧ DryEnvironment(z) ∧ CanSurvive(x, z)))"
    },
    {
        "NL": "A movie that is a comedy is not a drama.",
        "FOL": "∀x (Movie(x) ∧ Comedy(x) → ¬Drama(x))"
    },
    {
        "NL": "Some humans respect John.",
        "FOL": "∃x (Human(x) ∧ Respect(x, john))"
    },
    {
        "NL": "A pizza is vegetarian if it has no meat toppings.",
        "FOL": "∀x (Pizza(x) → (Vegetarian(x) ↔ ∀y (Topping(y, x) → ¬Meat(y))))"
    },
    {
        "NL": "A play is a memoir if it unfolds the playwright's experiences.",
        "FOL": "∀x ∃y ∃z (Play(x) ∧ Playwright(y) ∧ PlaywrightOf(y, x) ∧ UnfoldsPersonalExperiences(x, y) → Memoir(x))"
    },
    {
        "NL": "A train travels on tracks, while a boat navigates on water.",
        "FOL": "∀x∀y∀z (Train(x) ∧ Tracks(y) ∧ Water(z) → (TravelsOn(x, y) ∧ ¬NavigatesOn(x, z))) ∧ (Boat(x) ∧ Water(z) ∧ Tracks(y) → (NavigatesOn(x, z) ∧ ¬TravelsOn(x, y)))"
    },
    {
        "NL": "Some paintings depict historical events or figures.",
        "FOL": "∃x∃y (Painting(x) ∧ (HistoricalEvent(y) ∨ HistoricalFigure(y)) → Depicts(x, y))"
    },
    {
        "NL": "A microwave heats food with electromagnetic waves, while a stove does so with direct heat.",
        "FOL": "∀x∀y (Microwave(x) ∧ Stove(y) → (HeatsFoodElectromagneticWaves(x) ∨ HeatsFoodDirectHeat(y)))"
    },
    {
        "NL": "Wood comes from trees, while plastic is synthesized from petroleum.",
        "FOL": "∀x∀y (Wood(x) → ComesFromTrees(x)) ∧ (Plastic(y) → SynthesizedFromPetroleum(y))"
    },
    {
        "NL": "A person who plans, directs, and oversees the construction of buildings, roads, bridges, and other structures is a civil engineer.",
        "FOL": "∀x (Person(x) ∧ PlansConstruction(x) ∧ DirectsConstruction(x) ∧ OverseesConstruction(x) ∧ BuildsBuildings(x) ∧ BuildsRoads(x) ∧ BuildsBridges(x) ∧ BuildsOtherStructures(x) → CivilEngineer(x))"
    },
    {
        "NL": "A vehicle that is designed for off-road use and has four-wheel drive is an off-road vehicle.",
        "FOL": "∀x ((Vehicle(x) ∧ DesignedForOffRoadUse(x) ∧ HasFourWheelDrive(x)) → OffRoadVehicle(x))"
    },
    {
        "NL": "There are elements in the periodic table that haven't been explored.",
        "FOL": "∃x (Element(x) ∧ InPeriodicTable(x) ∧ ¬Explored(x))"
    },
    {
        "NL": "If a vehicle can travel on both land and water, it is an amphibious vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ CanTravelOnLand(x) ∧ CanTravelOnWater(x) → AmphibiousVehicle(x))"
    },
    {
        "NL": "A tree absorbs carbon dioxide, releases oxygen through the process of photosynthesis, and provides shade and shelter for various organisms.",
        "FOL": "∀x (Tree(x) → (∃y (AbsorbsCarbonDioxide(x, y) ∧ ReleasesOxygenThroughPhotosynthesis(x) ∧ ProvidesShadeAndShelter(x, y))))"
    },
    {
        "NL": "An electronic machine can store information, process information, or exhibit information.",
        "FOL": "∀x (ElectronicMachine(x) → StoreInformation(x) ∧ ProcessInformation(x) ∧ ExhibitInformation(x))"
    },
    {
        "NL": "Some engineers are either structural or electrical, but not both.",
        "FOL": "∃x (Engineer(x) ∧ (Structural(x) ⊕ Electrical(x)))"
    },
    {
        "NL": "A bus is combustion-powered if it adopts a combustion engine rather than a hydrogen fuel cell.",
        "FOL": "∀x (Bus(x) ∧ HasCombustionEngine(x) ∧ ¬HasHydrogenFuelCell(x) → CombustionPowered(x))"
    },
    {
        "NL": "Each scientist who has discovered a new element or holds a patent, but not in both cases, works in a lab unless they are a director, in which case they run the institute.",
        "FOL": "∀x (Scientist(x) ∧ (DiscoveredNewElement(x) ⊕ HoldsPatent(x)) → (WorksInLab(x) ∨ (Director(x) ∧ RunsInstitute(x))))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur, is warm-blooded, and gives birth to live offspring.",
        "FOL": "∀x (Animal(x) ∧ (HasHair(x) ∨ HasFur(x)) ∧ WarmBlooded(x) ∧ GivesBirthToLiveOffspring(x) → Mammal(x))"
    },
    {
        "NL": "Countries with strong international relations benefit from trade, cultural exchange, and increased tourism.",
        "FOL": "∀x (Country(x) ∧ StrongInternationalRelations(x) → (BenefitsFromTrade(x) ∧ CulturalExchange(x) ∧ IncreasedTourism(x)))"
    },
    {
        "NL": "Every artist in the gallery hasn't met either Mona or Lisa.",
        "FOL": "∀x (Artist(x) ∧ InGallery(x) → ¬Met(x, mona) ∧ ¬Met(x, lisa))"
    },
    {
        "NL": "A film festival gains international recognition by showcasing diverse films, inviting prominent guests, and promoting cultural exchange.",
        "FOL": "∀x (FilmFestival(x) ∧ ShowcasesDiverseFilms(x) ∧ InvitesProminentGuests(x) ∧ PromotesCulturalExchange(x) → InternationalRecognition(x))"
    },
    {
        "NL": "A mountain has a peak and is often taller than its surrounding terrain.",
        "FOL": "∀x∀y (Mountain(x) ∧ Peak(y, x) → TallerThanSurroundingTerrain(x))"
    },
    {
        "NL": "In a forest, birds nest in trees while insects live under rocks and soil.",
        "FOL": "∀x∀y∀z (Forest(x) ∧ Bird(y) ∧ Tree(z) ∧ Insect(w) ∧ Rock(v) ∧ Soil(u) → (NestsIn(y, z) ∧ LivesUnder(w, v) ∧ LivesIn(w, u)))"
    },
    {
        "NL": "An electronic device that can receive and display television signals, has a screen for viewing, and contains speakers for audio is a television set.",
        "FOL": "∀x∀y∀z (ElectronicDevice(x) ∧ ReceivesAndDisplaysTelevisionSignals(x) ∧ HasScreenForViewing(x, y) ∧ ContainsSpeakersForAudio(x, z) → TelevisionSet(x))"
    },
    {
        "NL": "A baker prepares baked goods like bread and pastries, whereas a chef is responsible for preparing a variety of dishes in a restaurant.",
        "FOL": "∀x ∀y (Baker(x) ∧ Chef(y) → (PreparesBakedGoods(x) ∧ BreadAndPastries(x) ∧ PreparesDishes(y) ∧ InRestaurant(y)))"
    },
    {
        "NL": "A song is pleasing if it has a catchy tune and profound lyrics.",
        "FOL": "∀x (Song(x) ∧ HasCatchyTune(x) ∧ HasProfoundLyrics(x) → Pleasing(x))"
    },
    {
        "NL": "A retail store sells a variety of products, and customers make purchases based on their needs and preferences.",
        "FOL": "∀x∀y∀z (RetailStore(x) ∧ Product(y) ∧ Customer(z) → (Sells(x, y) ∧ MakesPurchase(z, y, x)))"
    },
    {
        "NL": "When a solid reaches its melting point, it transitions from the solid phase to the liquid phase.",
        "FOL": "∀x (Solid(x) ∧ MeltingPoint(x) → TransitionsToLiquidPhase(x))"
    },
    {
        "NL": "A smartphone is user-friendly or feature-rich, but not if it's obsolete or has a short battery life.",
        "FOL": "∀x (Smartphone(x) ∧ ¬(Obsolete(x) ∨ ShortBatteryLife(x)) → (UserFriendly(x) ∨ FeatureRich(x)))"
    },
    {
        "NL": "A door is open or closed.",
        "FOL": "∀x (Door(x) → (Open(x) ∨ Closed(x)))"
    },
    {
        "NL": "If John is a teacher then he is not a mechanic.",
        "FOL": "Teacher(john) → ¬Mechanic(john)"
    },
    {
        "NL": "A plant species is endangered if its population size is critically low and its habitat is threatened.",
        "FOL": "∀x (PlantSpecies(x) ∧ CriticallyLowPopulation(x) ∧ ThreatenedHabitat(x) → Endangered(x))"
    },
    {
        "NL": "A machine that utilizes energy to perform mechanical work is known as an engine.",
        "FOL": "∀x (Machine(x) ∧ UtilizesEnergy(x) ∧ PerformsMechanicalWork(x) → Engine(x))"
    },
    {
        "NL": "In a theater, the audience watches movies while sitting in rows of seats.",
        "FOL": "∀x∀y (Theater(x) ∧ Audience(y) → (WatchesMovies(y) ∧ SitsInRowsOfSeats(y)))"
    },
    {
        "NL": "If there are no delicious meals, then no customer enjoys any dish.",
        "FOL": "¬∃x (DeliciousMeals(x)) → ¬∃y (Customer(y) ∧ ∃z (Dish(z) ∧ Enjoy(y, z)))"
    },
    {
        "NL": "It is not the case that every tree is tall.",
        "FOL": "¬∀x (Tree(x) → Tall(x))"
    },
    {
        "NL": "Children love sweets.",
        "FOL": "∀x ∀y (Child(x) ∧ Sweet(y) → Love(x, y))"
    },
    {
        "NL": "A company may offer a product that is highly popular and in-demand, leading to increased sales and profit for the business.",
        "FOL": "∀x∀y∀z (Company(x) ∧ Product(y) ∧ HighlyPopular(y) ∧ InDemand(y) → (IncreasedSales(x, y) ∧ IncreasedProfit(x, z)))"
    },
    {
        "NL": "All students either study math or science, but do not study both.",
        "FOL": "∃x (Student(x) ∧ (StudyMath(x) ⊕ StudyScience(x)))"
    },
    {
        "NL": "A package is delivered by a courier to a recipient if it is sent to the recipient's address.",
        "FOL": "∀x∀y∀z (Package(x) ∧ Courier(y) ∧ Recipient(z) ∧ SendsTo(y, x, z) → DeliveredBy(x, y, z))"
    },
    {
        "NL": "Books that are thick and vintage are valuable for collectors.",
        "FOL": "∀x (Book(x) ∧ Thick(x) ∧ Vintage(x) → ValuableForCollectors(x))"
    },
    {
        "NL": "Some athletes either run marathons or sprints, but do not run both.",
        "FOL": "∃x (Athlete(x) ∧ (RunMarathon(x) ⊕ RunSprint(x)))"
    },
    {
        "NL": "A cell phone has a strong signal when it is close to a cell tower, there is no interference, and the weather is clear.",
        "FOL": "∀x ∀y ∀z (CellPhone(x) ∧ CloseToCellTower(x, y) ∧ NoInterference(x) ∧ ClearWeather(z) → StrongSignal(x))"
    },
    {
        "NL": "A few dishes are spicy, but some are not.",
        "FOL": "∃x (Dish(x) ∧ Spicy(x)) ∧ ∃x (Dish(x) ∧ ¬Spicy(x))"
    },
    {
        "NL": "A movie is captivating when it has an excellent script and outstanding cinematography.",
        "FOL": "∀x (Movie(x) ∧ ExcellentScript(x) ∧ OutstandingCinematography(x) → Captivating(x))"
    },
    {
        "NL": "A person is left-handed if they can write and use their left hand primarily.",
        "FOL": "∀x (Person(x) ∧ CanWrite(x) ∧ UsesLeftHandPrimarily(x) → IsLeftHanded(x))"
    },
    {
        "NL": "Flowers that bloom during the day and close at night are classified as diurnal flowers.",
        "FOL": "∀x (Flower(x) ∧ BloomsDuringDay(x) ∧ ClosesAtNight(x) → DiurnalFlower(x))"
    },
    {
        "NL": "A machine is known as intelligent equipment when it can use software, forward messages, browse the web, and comes with a tactile screen.",
        "FOL": "∀w ((Machine(w) ∧ CanUseSoftware(w) ∧ ForwardMessages(w) ∧ BrowseWeb(w) ∧ ComesWithTactileScreen(w)) → IntelligentEquipment(w))"
    },
    {
        "NL": "A place is considered a theater if it hosts live performances, such as plays, concerts, or dance shows.",
        "FOL": "∀x (Place(x) ∧ HostsLivePerformances(x) ∧ (Plays(x) ∨ Concerts(x) ∨ DanceShows(x)) → Theater(x))"
    },
    {
        "NL": "A record is a memoir if it recounts the personal experiences of the creator himself.",
        "FOL": "∀x ∃y (Record(x) ∧ Creator(y) ∧ RecountsPersonalExperience(x, y) → Memoir(x))"
    },
    {
        "NL": "A room is considered cozy if it has comfortable furniture, warm lighting, and a pleasant atmosphere.",
        "FOL": "∀x ((ComfortableFurniture(x) ∧ WarmLighting(x) ∧ PleasantAtmosphere(x)) → CozyRoom(x))"
    },
    {
        "NL": "A scientist who researches living organisms and their interactions is a biologist or an ecologist.",
        "FOL": "∀x (Scientist(x) ∧ ResearchesLivingOrganisms(x) ∧ ResearchesInteractions(x) → (Biologist(x) ∨ Ecologist(x)))"
    },
    {
        "NL": "All students study a subject they like and like a subject they do not study.",
        "FOL": "∀x (Student(x) → (∃y (Studies(x, y) ∧ Likes(x, y)) ∧ ∃z (Likes(x, z) ∧ ¬Studies(x, z))))"
    },
    {
        "NL": "Ice cream melts quickly if it is exposed to heat or not stored in a cold environment.",
        "FOL": "∀x (IceCream(x) ∧ (ExposedToHeat(x) ∨ ¬StoredInColdEnvironment(x)) → MeltsQuickly(x))"
    },
    {
        "NL": "A park that provides playgrounds, walking trails, and picnic areas promotes physical activity and social interaction among visitors.",
        "FOL": "∀x∀y∀z (Park(x) ∧ ProvidesPlaygrounds(x, y) ∧ ProvidesWalkingTrails(x, y) ∧ ProvidesPicnicAreas(x, z) → PromotesPhysicalActivityAndSocialInteraction(x))"
    },
    {
        "NL": "Fruits are either sweet or sour, but not both.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "A microscope is an instrument used to magnify small objects for detailed examination, while a telescope is utilized for observing distant objects like stars and planets.",
        "FOL": "∀x∀y (Microscope(x) ∧ Telescope(y) → (MagnifiesSmallObjects(x) ∧ DetailedExamination(x)) ∧ (ObservesDistantObjects(y) ∧ StarsAndPlanets(y)))"
    },
    {
        "NL": "If a person is a firefighter, they are responsible for extinguishing fires and rescuing people in emergencies.",
        "FOL": "∀x (Person(x) ∧ Firefighter(x) → (ExtinguishesFires(x) ∧ RescuesPeopleInEmergencies(x)))"
    },
    {
        "NL": "A film is captivating if it has an engaging plot, well-developed characters, and impressive visual effects.",
        "FOL": "∀x (Film(x) ∧ EngagingPlot(x) ∧ WellDevelopedCharacters(x) ∧ ImpressiveVisualEffects(x) → Captivating(x))"
    },
    {
        "NL": "A dessert that consists of a pastry crust, a sweet filling, and is typically baked in a round dish is a pie.",
        "FOL": "∀x (Dessert(x) ∧ PastryCrust(x) ∧ SweetFilling(x) ∧ TypicallyBakedIn(x, roundDish) → Pie(x))"
    },
    {
        "NL": "An effective exercise routine incorporates cardiovascular workouts, strength training, and flexibility exercises.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ CardiovascularWorkouts(x) ∧ StrengthTraining(x) ∧ FlexibilityExercises(x) → Effective(x))"
    },
    {
        "NL": "Mountains can form through volcanic activity, tectonic plate movements, or erosion.",
        "FOL": "∀x (Mountain(x) → (FormedByVolcanicActivity(x) ∨ FormedByTectonicPlateMovements(x) ∨ FormedByErosion(x)))"
    },
    {
        "NL": "If some cars cannot start, then every road is congested or some motorcycles are malfunctioning.",
        "FOL": "∃x (Car(x) ∧ ¬CanStart(x)) → ∀y (Road(y) ∧ Congested(y)) ∨ ∃z (Motorcycle(z) ∧ Malfunctioning(z))"
    },
    {
        "NL": "Not every shape is a polygon or a circle.",
        "FOL": "¬∀x (Shape(x) → (Polygon(x) ∨ Circle(x)))"
    },
    {
        "NL": "There is not a single movie that all critics like.",
        "FOL": "¬∃x (Movie(x) → ∀y (Critic(y) → Likes(y, x)))"
    },
    {
        "NL": "Every chef has a special dish for some customer.",
        "FOL": "∀x (Chef(x) → ∃y (Customer(y) ∧ SpecialDishFor(x, y)))"
    },
    {
        "NL": "A restaurant serves meals.",
        "FOL": "∀x∀y (Restaurant(x) ∧ Meal(y) → Serves(x, y))"
    },
    {
        "NL": "Instruments that produce sound through vibrating strings are either guitars, violins, or pianos.",
        "FOL": "∀x (Instrument(x) ∧ VibratingStrings(x) → (Guitar(x) ∨ Violin(x) ∨ Piano(x)))"
    },
    {
        "NL": "A computer game that features an immersive storyline, impressive graphics, and engaging gameplay is likely to be popular among gamers.",
        "FOL": "∀x (ComputerGame(x) ∧ ImmersiveStoryline(x) ∧ ImpressiveGraphics(x) ∧ EngagingGameplay(x) → PopularAmongGamers(x))"
    },
    {
        "NL": "An institution can be a cooperative, a sole proprietorship, or a multi-national corporation.",
        "FOL": "∀x (Institution(x) → (Cooperative(x) ∨ SoleProprietorship(x) ∨ MultiNationalCorporation(x)))"
    },
    {
        "NL": "A bookstore sells novels, while a stationery store sells pens.",
        "FOL": "∃x ∃y (Bookstore(x) ∧ Novels(y) ∧ Sells(x, y)) ∧ ∃z ∃w (StationeryStore(z) ∧ Pens(w) ∧ Sells(z, w))"
    },
    {
        "NL": "If a student is an undergrad, they either study in a library or at home.",
        "FOL": "∀x (Student(x) ∧ Undergrad(x) → StudyInLibrary(x) ⊕ StudyAtHome(x))"
    },
    {
        "NL": "A password is considered secure if it contains a mix of uppercase and lowercase letters, numbers, and special characters.",
        "FOL": "∀x (Password(x) ∧ Uppercase(x) ∧ Lowercase(x) ∧ Numbers(x) ∧ SpecialCharacters(x) → Secure(x))"
    },
    {
        "NL": "All hexagons have six sides.",
        "FOL": "∀x (Hexagon(x) → HasSixSides(x))"
    },
    {
        "NL": "A bird x can successfully breed in a habitat y if it finds a suitable nesting site z within y and there is an adequate food supply for raising offspring.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ Habitat(y) ∧ NestingSite(z) ∧ SuitableNestingSite(x, z, y) ∧ AdequateFoodSupply(x, y) → CanSuccessfullyBreed(x, y))"
    },
    {
        "NL": "A language has a set of phonemes, a grammar system, and a vocabulary used for communication by speakers.",
        "FOL": "∀x∀y∀z (Language(x) ∧ SetOfPhonemes(x, y) ∧ GrammarSystem(x, z) → (Vocabulary(x) ∧ UsedForCommunication(x)))"
    },
    {
        "NL": "If all dogs are not friendly, then there is a cat that all cats are afraid of.",
        "FOL": "¬∀x (Dog(x) → Friendly(x)) → ∃y (Cat(y) ∧ ∀z (Cat(z) → AfraidOf(z, y)))"
    },
    {
        "NL": "A doctor diagnoses illnesses while a pharmacist dispenses medications and a nurse administers care.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Pharmacist(y) ∧ Nurse(z) → ((DiagnosesIllnesses(x) ∧ DispensesMedications(y)) ∧ AdministersCare(z)))"
    },
    {
        "NL": "If a car runs out of gas, then it will not be able to move.",
        "FOL": "∀x (RunOutOfGas(x) → ¬AbleToMove(x))"
    },
    {
        "NL": "A material can be a conductor if it allows the flow of electric current, heat, or both.",
        "FOL": "∀x (Material(x) ∧ (ElectricCurrentFlow(x) ∨ HeatFlow(x)) → Conductor(x))"
    },
    {
        "NL": "A bicycle has a chain.",
        "FOL": "∀x (Bicycle(x) → HasChain(x))"
    },
    {
        "NL": "A square has all equal sides and all right angles.",
        "FOL": "∀x (Square(x) ↔ (EqualSides(x) ∧ RightAngles(x)))"
    },
    {
        "NL": "There are board games that involve strategy and can be played by multiple players.",
        "FOL": "∃x (BoardGame(x) ∧ Involves(x, Strategy) ∧ MultiplePlayers(x))"
    },
    {
        "NL": "A storm with heavy rain and strong winds can cause flooding.",
        "FOL": "∀x (Storm(x) ∧ HeavyRain(x) ∧ StrongWinds(x) → CausesFlooding(x))"
    },
    {
        "NL": "A machine is a printer if it transfers text or images onto a physical medium, such as paper or fabric, under the control of a computer.",
        "FOL": "∀x∀y (Machine(x) ∧ TransfersTextOrImages(x) ∧ PhysicalMedium(y) ∧ (Paper(y) ∨ Fabric(y)) ∧ ControlledByComputer(x) → Printer(x))"
    },
    {
        "NL": "A beverage that is hot, sweet, and contains caffeine is coffee or tea.",
        "FOL": "∀x (Beverage(x) ∧ Hot(x) ∧ Sweet(x) ∧ ContainsCaffeine(x) → (Coffee(x) ∨ Tea(x)))"
    },
    {
        "NL": "In a democracy, citizens vote to elect their leaders, but in a dictatorship, the leader has absolute power.",
        "FOL": "∀x∀y (Democracy(x) ∧ Dictatorship(y) → (CitizensVoteToElectLeaders(x) ∧ LeaderHasAbsolutePower(y)))"
    },
    {
        "NL": "A film festival screens documentaries, feature films, and short films, showcasing a variety of cinematic works from different genres.",
        "FOL": "∀x∀y∀z (FilmFestival(x) ∧ Documentary(y) ∧ FeatureFilm(z) → Screens(x, y) ∧ Screens(x, z))"
    },
    {
        "NL": "A square is a quadrilateral with four equal sides and four right angles, while a rectangle has four right angles and opposite sides of equal length.",
        "FOL": "∀x ∀y (Square(x) → (Quadrilateral(x) ∧ EqualSides(x, 4) ∧ RightAngles(x, 4))) ∧ (Rectangle(y) → (Quadrilateral(y) ∧ RightAngles(y, 4) ∧ OppositeSidesEqualLength(y)))"
    },
    {
        "NL": "A cat is a Persian Cat if it has green eyes, long fur, and a flat face.",
        "FOL": "∀x (Cat(x) ∧ HasGreenEyes(x) ∧ HasLongFur(x) ∧ HasFlatFace(x) → PersianCat(x))"
    },
    {
        "NL": "An animal with wings that can sing is a bird.",
        "FOL": "∀x (Animal(x) ∧ HasWings(x) ∧ CanSing(x) → Bird(x))"
    },
    {
        "NL": "A celestial object is a moon if it orbits a planet.",
        "FOL": "∀x (CelestialObject(x) ∧ Moon(x) ↔ OrbitsPlanet(x))"
    },
    {
        "NL": "Some cars are both electric and self-driving.",
        "FOL": "∃x (Car(x) ∧ Electric(x) ∧ SelfDriving(x))"
    },
    {
        "NL": "A novel is a mystery if it includes an unsolved crime, written by the investigator themselves.",
        "FOL": "∀x ∃y (Novel(x) ∧ Investigator(y) ∧ IncludesUnsolvedCrime(x, y) ∧ WrittenBy(x, y) → Mystery(x))"
    },
    {
        "NL": "A document is regarded as a legal document when it is recognized and enforceable by law.",
        "FOL": "∀x (Document(x) ∧ RecognizedByLaw(x) ∧ EnforceableByLaw(x) → LegalDocument(x))"
    },
    {
        "NL": "A smartphone is waterproof if it can be submerged in water without any damage.",
        "FOL": "∀x (Waterproof(x) → (Smartphone(x) ∧ ∀y (Water(y) ∧ SubmergedIn(x, y) → NoDamage(x))))"
    },
    {
        "NL": "Some fish do not swim.",
        "FOL": "∃x (Fish(x) ∧ ¬Swim(x))"
    },
    {
        "NL": "A vehicle is a car if and only if it has 4 wheels and is fast, but not both.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ↔ (HasFourWheels(x) ⊕ IsFast(x))))"
    },
    {
        "NL": "A portal grants access when it is active or unguarded.",
        "FOL": "∀x (Portal(x) ∧ (Active(x) ∨ Unguarded(x)) → GrantsAccess(x))"
    },
    {
        "NL": "Listening to music can improve mood, reduce stress, and enhance focus.",
        "FOL": "∀x (ListenToMusic(x) → (ImprovesMood(x) ∧ ReducesStress(x) ∧ EnhancesFocus(x)))"
    },
    {
        "NL": "A medical treatment is effective when it targets the root cause of a disease, has minimal side effects, and leads to improved patient outcomes.",
        "FOL": "∀x ∀y ∀z (MedicalTreatment(x) ∧ TargetsRootCause(y) ∧ MinimalSideEffects(z) ∧ ImprovedPatientOutcomes(x) → Effective(x))"
    },
    {
        "NL": "An object is considered a weapon if it is designed to inflict harm or damage on others.",
        "FOL": "∀x (Object(x) ∧ DesignedToInflictHarmOrDamage(x) → Weapon(x))"
    },
    {
        "NL": "John admires Mary and Alice.",
        "FOL": "Admire(john, mary) ∧ Admire(john, alice)"
    },
    {
        "NL": "Every athlete who has trained for over five years and either played in Olympics or has endorsement deals, but not both, must have either achieved a world record or be a team captain.",
        "FOL": "∀v (Athlete(v) ∧ TrainedForOverFiveYears(v) ∧ (PlayedInOlympics(v) ⊕ HasEndorsementDeals(v)) → (AchievedWorldRecord(v) ∨ TeamCaptain(v)))"
    },
    {
        "NL": "A coin lands on heads, tails, or its edge.",
        "FOL": "∀x (Coin(x) ↔ (LandsOnHeads(x) ⊕ LandsOnTails(x) ⊕ LandsOnEdge(x)))"
    },
    {
        "NL": "An inoculation can repel an infection by provoking protection against it.",
        "FOL": "∀x ∀y (Inoculation(x) ∧ Infection(y) → (Repels(x, y) → ProvokesProtection(x, y)))"
    },
    {
        "NL": "A player can participate in a match if they are on the team roster and not injured.",
        "FOL": "∀x (Player(x) ∧ CanParticipate(x) → (OnRoster(x) ∧ ¬Injured(x)))"
    },
    {
        "NL": "An electronic device can input data, process data, and output data.",
        "FOL": "∀x (ElectronicDevice(x) → InputData(x) ∧ ProcessData(x) ∧ OutputData(x))"
    },
    {
        "NL": "If a book is engaging, then it entertains readers and sells a lot.",
        "FOL": "∀x (Book(x) ∧ Engaging(x) → EntertainsReaders(x) ∧ SellsALot(x))"
    },
    {
        "NL": "All dogs who are friendly are loved by every kid.",
        "FOL": "∀x (Dog(x) ∧ Friendly(x) → ∀y (Kid(y) → Loves(y, x)))"
    },
    {
        "NL": "A business is considered profitable if it generates substantial revenue and has low operating costs.",
        "FOL": "∀x (Business(x) ∧ Profitable(x) ↔ (GeneratesSubstantialRevenue(x) ∧ LowOperatingCosts(x)))"
    },
    {
        "NL": "A liquid is either hot or cold, but not lukewarm.",
        "FOL": "∀x (Liquid(x) → ((Hot(x) ∨ Cold(x)) ∧ ¬Lukewarm(x)))"
    },
    {
        "NL": "An apple grows on a tree, while a potato grows underground.",
        "FOL": "∀x (Apple(x) → GrowsOnTree(x)) ∧ ∀y (Potato(y) → GrowsUnderground(y))"
    },
    {
        "NL": "A garage is used to store vehicles.",
        "FOL": "∀x (Garage(x) → UsedToStoreVehicles(x))"
    },
    {
        "NL": "An archaeologist is excavating a relic in the jungle.",
        "FOL": "∃x ∃y (Archaeologist(x) ∧ Relic(y) ∧ Excavating(x, y) ∧ InTheJungle(x))"
    },
    {
        "NL": "Volcanoes erupt, releasing molten rock called lava onto the Earth's surface.",
        "FOL": "∀x (Volcano(x) → (Erupt(x) ∧ ReleaseLava(x)))"
    },
    {
        "NL": "A language can be scripting, compiled, or interpreted.",
        "FOL": "∀x (Language(x) → (Scripting(x) ∨ Compiled(x) ∨ Interpreted(x)))"
    },
    {
        "NL": "No pen is a pencil.",
        "FOL": "¬∃x (Pen(x) ∧ Pencil(x))"
    },
    {
        "NL": "Each green object links to at least one object that links to only blue objects.",
        "FOL": "∀x (Green(x) → ∃y (LinksTo(x, y) ∧ ¬∃z (LinksTo(y, z) ∧ ¬Blue(z))))"
    },
    {
        "NL": "If a book is on the shelf, then certain pages are either torn or intact.",
        "FOL": "∃x ∃y (Book(x) ∧ Shelf(y) ∧ On(x, y) → ∃z (Page(z) ∧ (Torn(z) ⊕ Intact(z))))"
    },
    {
        "NL": "A chef is esteemed as a master if he's skilled and has more than 15 years experience.",
        "FOL": "∀x (Chef(x) ∧ Skilled(x) ∧ HasMoreThanFifteenYearsExperience(x) → Master(x))"
    },
    {
        "NL": "A train is either electric or diesel-powered, but not both.",
        "FOL": "∀x (Train(x) → (ElectricPowered(x) ⊕ DieselPowered(x)))"
    },
    {
        "NL": "A laptop with a high-capacity battery has a longer usage time, while one with a smaller battery has a shorter usage time.",
        "FOL": "∀x (Laptop(x) ∧ HighCapacityBattery(x) → LongUsageTime(x)) ∧ ∀y (Laptop(y) ∧ ¬HighCapacityBattery(y) → ShortUsageTime(y))"
    },
    {
        "NL": "Hotels provide accommodation, while restaurants serve food.",
        "FOL": "∀x (Hotel(x) ∧ ProvidesAccommodation(x) ⊕ (Restaurant(x) ∧ ServesFood(x)))"
    },
    {
        "NL": "An organism that converts sunlight into chemical energy through photosynthesis and releases oxygen is a photosynthetic organism.",
        "FOL": "∀x (Organism(x) ∧ ConvertsSunlight(x) ∧ Photosynthesis(x) ∧ ReleasesOxygen(x) → PhotosyntheticOrganism(x))"
    },
    {
        "NL": "A tree needs water, sunlight, and nutrients to grow properly.",
        "FOL": "∀x (Tree(x) → (GetsWater(x) ∧ GetsSunlight(x) ∧ GetsNutrients(x)) → GrowsProperly(x))"
    },
    {
        "NL": "An individual who practices medicine and has a medical degree is a doctor.",
        "FOL": "∀x (Individual(x) ∧ PracticesMedicine(x) ∧ MedicalDegree(x) → Doctor(x))"
    },
    {
        "NL": "Authors create books, and librarians catalog them.",
        "FOL": "∀x ∀y (Author(x) ∧ Book(y) → Create(x, y)) ∧ ∀z ∀w (Librarian(z) ∧ Book(w) → Catalog(z, w))"
    },
    {
        "NL": "It is not accurate that every flower is beautiful only if it smells good.",
        "FOL": "¬∀x (Flower(x) ∧ Beautiful(x) → SmellsGood(x))"
    },
    {
        "NL": "Libraries offer books and resources, while museums display artifacts and exhibits.",
        "FOL": "∀x ∀y (Library(x) ∧ Museum(y) → (OffersBooksAndResources(x) ⊕ DisplaysArtifactsAndExhibits(y)))"
    },
    {
        "NL": "Each house has a door.",
        "FOL": "∀x (House(x) → ∃y (Door(y) ∧ Has(x, y)))"
    },
    {
        "NL": "A car with a flat tire and no spare tire cannot be driven.",
        "FOL": "∀x (Car(x) ∧ FlatTire(x) ∧ ¬SpareTire(x) → ¬CanBeDriven(x))"
    },
    {
        "NL": "A game is categorized as a board game when it is played on a flat surface with pieces that are moved according to a set of rules.",
        "FOL": "∀x (Game(x) ∧ PlayedOnFlatSurface(x) ∧ UsesPieces(x) ∧ FollowsSetOfRules(x) → BoardGame(x))"
    },
    {
        "NL": "A celestial event is a solar eclipse if the Moon passes between the Earth and the Sun, causing the Sun to be partially or completely obscured.",
        "FOL": "∀x (CelestialEvent(x) ∧ MoonPassesBetween(x, Earth, Sun) ∧ (PartiallyObscured(x, Sun) ∨ CompletelyObscured(x, Sun)) → SolarEclipse(x))"
    },
    {
        "NL": "A soccer match ends in a draw when both teams have scored the same number of goals.",
        "FOL": "∀x ∀y ∀z (SoccerMatch(x) ∧ Team(y) ∧ Team(z) ∧ SameNumberOfGoals(y, z) → Draw(x))"
    },
    {
        "NL": "No painting is both priceless and worthless.",
        "FOL": "¬∃x (Painting(x) ∧ Priceless(x) ∧ Worthless(x))"
    },
    {
        "NL": "A garment is classified as a hat if it is designed to be worn on the head, provides protection or decoration, and may include a brim or visor.",
        "FOL": "∀x (Garment(x) ∧ DesignedToBeWornOnHead(x) ∧ ProvidesProtectionOrDecoration(x) ∧ (IncludesBrim(x) ∨ IncludesVisor(x)) → Hat(x))"
    },
    {
        "NL": "A person who owns a house and doesn't have any outstanding mortgage can be referred to as a homeowner with no mortgage.",
        "FOL": "∀x (Person(x) ∧ House(y) ∧ Owns(x, y) ∧ ¬OutstandingMortgage(x, y) → HomeownerNoMortgage(x))"
    },
    {
        "NL": "A garden flourishes with proper sunlight, nutrient-rich soil, and consistent watering.",
        "FOL": "∀x (Garden(x) → (Flourishes(x) ↔ (ProperSunlight(x) ∧ NutrientRichSoil(x) ∧ ConsistentWatering(x))))"
    },
    {
        "NL": "A play that is a tragedy can make audience feel grief.",
        "FOL": "∀x ∀y (Play(x) ∧ Tragedy(x) ∧ Audience(y) → CanMakeFeelGrief(x, y))"
    },
    {
        "NL": "A desert is an area with little precipitation and sparse vegetation.",
        "FOL": "∀x (Desert(x) → (LittlePrecipitation(x) ∧ SparseVegetation(x)))"
    },
    {
        "NL": "A student can be either undergraduate or graduate, but not both.",
        "FOL": "∀x (Student(x) → (Undergraduate(x) ⊕ Graduate(x)))"
    },
    {
        "NL": "If a substance is a solid at room temperature and conducts electricity, it is a metal.",
        "FOL": "∀x ((SolidAtRoomTemperature(x) ∧ ConductsElectricity(x)) → Metal(x))"
    },
    {
        "NL": "Animals hibernate during winter if they need to conserve energy due to a scarcity of food.",
        "FOL": "∀x (Animal(x) ∧ WinterConservationOfEnergy(x) ∧ ScarcityOfFood(x) → Hibernates(x))"
    },
    {
        "NL": "A film earns a cult following when it initially receives mixed reviews, later gains popularity, and has devoted fans who engage in discussions and events.",
        "FOL": "∀x (Film(x) ∧ MixedReviews(x) ∧ GainsPopularity(x) ∧ DevotedFans(x) ∧ EngagesInDiscussionsAndEvents(x) → CultFollowing(x))"
    },
    {
        "NL": "A shape has four sides if it is a square or a rectangle.",
        "FOL": "∀x (Shape(x) ∧ (Square(x) ∨ Rectangle(x)) → HasFourSides(x))"
    },
    {
        "NL": "A vehicle manufacturer produces cars, which are then distributed by dealerships, and purchased by consumers.",
        "FOL": "∀x ∀y ∀z (VehicleManufacturer(x) ∧ Car(y) ∧ Dealership(z) ∧ Produces(x, y) ∧ Distributes(z, y) → PurchasedByConsumers(y))"
    },
    {
        "NL": "All apples are fruits.",
        "FOL": "∀x (Apple(x) → Fruit(x))"
    },
    {
        "NL": "A place is considered a hospital if it provides medical care and treatment to patients.",
        "FOL": "∀x (Hospital(x) ↔ (ProvidesMedicalCare(x) ∧ TreatsPatients(x)))"
    },
    {
        "NL": "All birds can fly, except for flightless birds such as penguins and ostriches.",
        "FOL": "∀x (Bird(x) → ((¬Penguin(x) ∧ ¬Ostrich(x)) → CanFly(x)))"
    },
    {
        "NL": "A medicine can cure an illness by fighting against its causes.",
        "FOL": "∀x ∀y (Medicine(x) ∧ Illness(y) → (Cures(x, y) → FightsAgainstCausesOf(x, y)))"
    },
    {
        "NL": "A printer creates physical copies of digital documents, while a scanner digitizes physical documents.",
        "FOL": "∀x ∀y (Printer(x) ∧ Scanner(y) → (CreatesPhysicalCopies(x) ⊕ DigitizesDocuments(y)))"
    },
    {
        "NL": "Photographers are not always famous.",
        "FOL": "∃x (Photographer(x) ∧ ¬Famous(x))"
    },
    {
        "NL": "There exist cars that are fast and luxurious, but not affordable, or they are affordable but not fast and luxurious.",
        "FOL": "∀x (Car(x) → ((Fast(x) ∧ Luxurious(x) ∧ ¬Affordable(x)) ⊕ (Affordable(x) ∧ ¬(Fast(x) ∧ Luxurious(x)))))"
    },
    {
        "NL": "A building made of bricks and having a fireplace is typically warm and cozy.",
        "FOL": "∀x (Building(x) ∧ MadeOfBricks(x) ∧ HasFireplace(x) → (Warm(x) ∧ Cozy(x)))"
    },
    {
        "NL": "All leaders who are honest and inspiring are admired.",
        "FOL": "∀x (Leader(x) ∧ Honest(x) ∧ Inspiring(x) → Admired(x))"
    },
    {
        "NL": "A book is either fiction or non-fiction, and it contains written content.",
        "FOL": "∀x (Book(x) → ((Fiction(x) ⊕ NonFiction(x)) ∧ ContainsWrittenContent(x)))"
    },
    {
        "NL": "Some items are either antiques or replicas.",
        "FOL": "∃x (Item(x) ∧ (Antique(x) ⊕ Replica(x)))"
    },
    {
        "NL": "A company director will endorse the rule only if he does not clear his liabilities.",
        "FOL": "∀x (CompanyDirector(x) ∧ EndorseRule(x) → ¬ClearLiabilities(x))"
    },
    {
        "NL": "A conference can focus on technology, healthcare, or finance, but not all three topics.",
        "FOL": "∀x (Conference(x) → (FocusesOnTechnology(x) ⊕ FocusesOnHealthcare(x) ⊕ FocusesOnFinance(x)))"
    },
    {
        "NL": "A plant is classified as a tree if it has a tall, woody stem, branches, and typically grows in forests or parks.",
        "FOL": "∀x (Plant(x) ∧ TallWoodyStem(x) ∧ HasBranches(x) ∧ TypicallyGrowsIn(x, forests, parks) → Tree(x))"
    },
    {
        "NL": "A room is considered well-lit if it has an adequate amount of natural or artificial light.",
        "FOL": "∀x (Room(x) ∧ (AdequateNaturalLight(x) ∨ AdequateArtificialLight(x)) → WellLit(x))"
    },
    {
        "NL": "A volcano is created when tectonic plates shift and molten rock rises to the surface.",
        "FOL": "∀x (TectonicPlateShift(x) ∧ MoltenRockRises(x) → Volcano(x))"
    },
    {
        "NL": "There exists a strong man, and there exists a graceful woman.",
        "FOL": "∃x (Strong(x) ∧ Man(x)) ∧ ∃y (Graceful(y) ∧ Woman(y))"
    },
    {
        "NL": "A natural event x is an earthquake if it involves the sudden release of energy in the Earth's crust, causing the ground to shake.",
        "FOL": "∀x (NaturalEvent(x) ∧ SuddenReleaseOfEnergy(x) ∧ CausesGroundToShake(x) → Earthquake(x))"
    },
    {
        "NL": "An eco-friendly hotel that incorporates energy-saving technologies, green building materials, and waste reduction strategies minimizes its environmental footprint and promotes sustainable tourism.",
        "FOL": "∀x∀y∀z (EcoFriendlyHotel(x) ∧ EnergySavingTechnologies(y) ∧ GreenBuildingMaterials(z) ∧ WasteReductionStrategies(x) ∧ Incorporates(x, y, z) → (MinimizesEnvironmentalFootprint(x) ∧ PromotesSustainableTourism(x)))"
    },
    {
        "NL": "In a relay race, team members pass a baton to each other as they complete their individual sections of the race.",
        "FOL": "∀x∀y∀z (RelayRace(x) ∧ Team(y) ∧ Member(z) ∧ InTeam(z, y) → (PassBaton(z) ∧ CompleteSection(z, x)))"
    },
    {
        "NL": "A person is considered a good listener if they pay attention and empathize with others.",
        "FOL": "∀x (PaysAttention(x) ∧ EmpathizesWithOthers(x) → GoodListener(x))"
    },
    {
        "NL": "Vaccination can prevent certain diseases and boost the immune system.",
        "FOL": "∀x∀y (Vaccination(x) ∧ Disease(y) → (Prevents(x, y) ∧ BoostsImmuneSystem(x)))"
    },
    {
        "NL": "Nina studies astrology or Nina is a dancer.",
        "FOL": "StudyAstrology(nina) ∨ Dancer(nina)"
    },
    {
        "NL": "All crows are black unless it's a raven or a hawk.",
        "FOL": "∀x ((Raven(x) ∨ Hawk(x)) → Black(x))"
    },
    {
        "NL": "All nonagons have nine sides.",
        "FOL": "∀x (Nonagon(x) → HasNineSides(x))"
    },
    {
        "NL": "A research project is groundbreaking when it addresses a previously unexplored topic, generates novel insights, and has a far-reaching impact on its field.",
        "FOL": "∀x (ResearchProject(x) ∧ AddressesUnexploredTopic(x) ∧ GeneratesNovelInsights(x) ∧ FarReachingImpactOnField(x) → Groundbreaking(x))"
    },
    {
        "NL": "There is no athlete who plays both soccer and baseball but has never been awarded MVP.",
        "FOL": "¬∃x (Athlete(x) ∧ PlaysSoccer(x) ∧ PlaysBaseball(x) ∧ ¬AwardedMVP(x))"
    },
    {
        "NL": "A flower x blooms when the temperature is above a certain threshold, and the daylight hours exceed a minimum duration.",
        "FOL": "∀x (Flower(x) ∧ TemperatureAboveThreshold(x) ∧ DaylightExceedsMinimum(x) → Blooms(x))"
    },
    {
        "NL": "A high-quality camera captures sharp images, performs well in low light, and has a fast autofocus system.",
        "FOL": "∀x (Camera(x) ∧ SharpImages(x) ∧ LowLightPerformance(x) ∧ FastAutofocusSystem(x) → HighQuality(x))"
    },
    {
        "NL": "A person is considered a pilot if they are trained and licensed to fly aircraft.",
        "FOL": "∀x (Person(x) ∧ TrainedToFlyAircraft(x) ∧ LicensedToFlyAircraft(x) → Pilot(x))"
    },
    {
        "NL": "A beverage can be hot, cold, or frozen, and it can be sweet, bitter, or sour.",
        "FOL": "∀x∀y∀z (Beverage(x) ∧ ((Hot(x, y) ∨ Cold(x, y) ∨ Frozen(x, z)) ∧ (Sweet(x, z) ∨ Bitter(x, z) ∨ Sour(x, z))))"
    },
    {
        "NL": "A bicycle can be parked indoors, outdoors, or in a designated parking area.",
        "FOL": "∀x (Bicycle(x) → (ParkIndoors(x) ∨ ParkOutdoors(x) ∨ ParkDesignatedArea(x)))"
    },
    {
        "NL": "No idea is both innovative and outdated.",
        "FOL": "¬∃x (Idea(x) ∧ Innovative(x) ∧ Outdated(x))"
    },
    {
        "NL": "If a tree provides shade, it is tall and has many leaves.",
        "FOL": "∀x (Tree(x) ∧ ProvidesShade(x) → (Tall(x) ∧ HasManyLeaves(x)))"
    },
    {
        "NL": "A memorable vacation features exciting activities, delicious cuisine, and comfortable accommodations.",
        "FOL": "∀x (Vacation(x) ∧ ExcitingActivities(x) ∧ DeliciousCuisine(x) ∧ ComfortableAccommodations(x) → Memorable(x))"
    },
    {
        "NL": "An individual might be a vegetarian or a vegan, but not both.",
        "FOL": "∃x (Individual(x) ∧ (Vegetarian(x) ⊕ Vegan(x)))"
    },
    {
        "NL": "A river provides a habitat for various species of fish and plants, supporting a diverse ecosystem with interconnected food chains.",
        "FOL": "∀x∀y∀z (River(x) ∧ ProvidesHabitat(x, y, z) ∧ Fish(y) ∧ Plant(z) → (SupportsDiverseEcosystem(x) ∧ InterconnectedFoodChains(x)))"
    },
    {
        "NL": "An outdoor event may be canceled if there is heavy rain, strong winds, or extreme temperatures, but not if the weather is cloudy or moderately cold.",
        "FOL": "∀x (OutdoorEvent(x) ∧ (HeavyRain(x) ∨ StrongWinds(x) ∨ ExtremeTemperatures(x)) ∧ ¬(Cloudy(x) ∨ ModeratelyCold(x)) → Canceled(x))"
    },
    {
        "NL": "There is no book that all readers read if and only if there is a book that no reader reads.",
        "FOL": "¬∃x (Book(x) ∧ ∀y (Reader(y) → Reads(y, x))) ↔ ∃z (Book(z) ∧ ∀w (Reader(w) → ¬Reads(z, w)))"
    },
    {
        "NL": "A university is prestigious when it has renowned faculty, rigorous academic programs, and a strong research focus.",
        "FOL": "∀x ∀y (University(x) ∧ RenownedFaculty(y) ∧ RigorousAcademicPrograms(x) ∧ StrongResearchFocus(x) → Prestigious(x))"
    },
    {
        "NL": "A shape is a rectangle if it has four sides and all angles are right angles.",
        "FOL": "∀x (Shape(x) ∧ FourSides(x) ∧ AllRightAngles(x) → Rectangle(x))"
    },
    {
        "NL": "A book is interesting if and only if it has a plot and characters.",
        "FOL": "∀x (Book(x) → (Interesting(x) ↔ HasPlot(x) ∧ HasCharacters(x)))"
    },
    {
        "NL": "All books are not interesting or long.",
        "FOL": "∃x (Book(x) ∧ (¬Interesting(x) ∨ ¬Long(x)))"
    },
    {
        "NL": "A machine is either operational or non-operational, not both at the same time.",
        "FOL": "∀x (Machine(x) → (Operational(x) ⊕ NonOperational(x)))"
    },
    {
        "NL": "A novel is thought-provoking when it presents complex characters, explores deep themes, and challenges readers' perspectives.",
        "FOL": "∀x (Novel(x) ∧ PresentsComplexCharacters(x) ∧ ExploresDeepThemes(x) ∧ ChallengesReadersPerspectives(x) → ThoughtProvoking(x))"
    },
    {
        "NL": "All attempts do not result in achievement, but whoever achieves must have attempted.",
        "FOL": "¬∀x (Attempt(x) → Achieve(x)) ∧ ∀y (Achieve(y) → Attempt(y))"
    },
    {
        "NL": "Dogs bark at strangers.",
        "FOL": "∀x∀y (Dog(x) ∧ Stranger(y) → BarksAt(x, y))"
    },
    {
        "NL": "A landform that has a steep slope on one side and a gentle slope on the other side is a cuesta.",
        "FOL": "∀x (Landform(x) ∧ HasSteepSlope(x) ∧ HasGentleSlope(x) ∧ SlopesOnDifferentSides(x) → Cuesta(x))"
    },
    {
        "NL": "A movie is a blockbuster if it has a high budget and generates massive revenue.",
        "FOL": "∀x (Movie(x) ∧ HighBudget(x) ∧ MassiveRevenue(x) → Blockbuster(x))"
    },
    {
        "NL": "Mathematicians study mathematics and research new theories.",
        "FOL": "∀x (Mathematician(x) → (Studies(x, mathematics) ∧ Researches(x, newTheories)))"
    },
    {
        "NL": "A telescope is an optical instrument that magnifies distant objects and is used for observing celestial bodies or other distant phenomena.",
        "FOL": "∀x (Telescope(x) → (OpticalInstrument(x) ∧ MagnifiesDistantObjects(x) ∧ UsedForObservingCelestialBodiesOrDistantPhenomena(x)))"
    },
    {
        "NL": "A blue ball interests a purple boat only if that boat shows interest to it.",
        "FOL": "∀x (Ball(x) → ∀y (Boat(y) ∧ Blue(x) ∧ Purple(y) ∧ Interests(x, y) → Interests(y, x)))"
    },
    {
        "NL": "A recipe is vegan if it contains no animal products or by-products.",
        "FOL": "∀x (Recipe(x) ∧ ¬AnimalProducts(x) ∧ ¬AnimalByProducts(x) → Vegan(x))"
    },
    {
        "NL": "A car is either diesel or petrol if it is not electric.",
        "FOL": "∀x (Car(x) ∧ ¬Electric(x) → (Diesel(x) ∨ Petrol(x)))"
    },
    {
        "NL": "An apple is a fruit, a carrot is a vegetable, and a steak is a meat product.",
        "FOL": "∀x∀y∀z (Apple(x) ∧ Carrot(y) ∧ Steak(z) → (Fruit(x) ∧ Vegetable(y) ∧ MeatProduct(z)))"
    },
    {
        "NL": "A restaurant serves breakfast if it opens early and offers morning meals.",
        "FOL": "∀x (Restaurant(x) ∧ OpensEarly(x) ∧ MorningMeals(x) → ServesBreakfast(x))"
    },
    {
        "NL": "A sparrow is small, a hawk is medium-sized, and an albatross has a large wingspan.",
        "FOL": "∀x ∀y ∀z (Sparrow(x) ∧ Hawk(y) ∧ Albatross(z) → (Small(x) ∧ MediumSized(y) ∧ LargeWingspan(z)))"
    },
    {
        "NL": "A pencil writes by leaving a trail of graphite on the surface it is pressed against.",
        "FOL": "∀x ∀y (Pencil(x) ∧ Surface(y) → (PressedAgainst(x, y) → Writes(x, y)))"
    },
    {
        "NL": "A person who paints, draws, or creates visual art is called an artist.",
        "FOL": "∀x (PaintsDrawsOrCreatesVisualArt(x) → Artist(x))"
    },
    {
        "NL": "A carnivorous animal hunts, catches, and eats other animals for food.",
        "FOL": "∀x (CarnivorousAnimal(x) → ∀y (Animal(y) → (HuntsForFood(x, y) ∧ CatchesForFood(x, y) ∧ EatsForFood(x, y))))"
    },
    {
        "NL": "A disease can be controlled by maintaining hygiene, implementing vaccination programs, or using effective medications.",
        "FOL": "∀x (Disease(x) → (MaintainingHygiene(x) ∨ ImplementingVaccinationPrograms(x) ∨ UsingEffectiveMedications(x)) → Controlled(x))"
    },
    {
        "NL": "An object is considered furniture if it is designed to support various human activities, such as seating or storage.",
        "FOL": "∀x (Object(x) ∧ DesignedToSupportHumanActivities(x) ∧ (Seating(x) ∨ Storage(x)) → Furniture(x))"
    },
    {
        "NL": "A door closes.",
        "FOL": "∀x (Door(x) → Closes(x))"
    },
    {
        "NL": "A vehicle is a bicycle if it has two wheels and is powered by pedaling.",
        "FOL": "∀x (Vehicle(x) ∧ Bicycle(x) ↔ (HasTwoWheels(x) ∧ PoweredByPedaling(x)))"
    },
    {
        "NL": "A doctor diagnoses illnesses, a nurse administers care, and a pharmacist dispenses medication.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Nurse(y) ∧ Pharmacist(z) → (DiagnosesIllnesses(x) ∧ AdministersCare(y) ∧ DispensesMedication(z)))"
    },
    {
        "NL": "A book can be written in a foreign language, translated, and then published.",
        "FOL": "∀x∀y∀z (Book(x) ∧ ForeignLanguage(y) ∧ WrittenIn(x, y) → (Translated(x, z) ∧ Published(x, z)))"
    },
    {
        "NL": "An athlete is running a marathon.",
        "FOL": "∃x ∃y (Athlete(x) ∧ Marathon(y) ∧ Running(x, y))"
    },
    {
        "NL": "A person is considered a hairdresser if they cut, style, and maintain hair for clients.",
        "FOL": "∀x (Person(x) ∧ CutStyleAndMaintainHair(x) ∧ ForClients(x) → Hairdresser(x))"
    },
    {
        "NL": "There is a cat that some mice are frightened of.",
        "FOL": "∃x ∃y (Cat(x) ∧ Mouse(y) ∧ FrightenedOf(y, x))"
    },
    {
        "NL": "Sophia is a pilot if and only if she is a pilot.",
        "FOL": "Pilot(sophia) ↔ Pilot(sophia)"
    },
    {
        "NL": "A composition is an autobiography if it relays the life experiences of the composer himself.",
        "FOL": "∀x ∃y (Composition(x) ∧ Composer(y) ∧ RelaysLifeExperiences(x, y) → Autobiography(x))"
    },
    {
        "NL": "A television displays moving images by receiving broadcast signals or streaming content.",
        "FOL": "∀x (Television(x) → (DisplaysMovingImagesByReceivingBroadcastSignals(x) ∨ DisplaysMovingImagesByStreamingContent(x)))"
    },
    {
        "NL": "A space holds an array of astrological items if it envelops black holes, galaxies, and pulsars with distinctive traits.",
        "FOL": "∀x (Space(x) ∧ ∃y ∃z ∃w (BlackHole(y) ∧ Galaxy(z) ∧ Pulsar(w) ∧ DistinctiveTraits(y, z, w) ∧ Envelops(x, y, z, w)) → HoldsArrayOfAstrologicalItems(x))"
    },
    {
        "NL": "A fast mouse catches a slow cheese only if that cheese is caught by it.",
        "FOL": "∀x (Mouse(x) → ∀y (Cheese(y) ∧ Fast(x) ∧ Slow(y) ∧ Catches(x, y) → Catches(y, x)))"
    },
    {
        "NL": "A customer pays a bill issued by a company.",
        "FOL": "∀x∀y (Customer(x) ∧ Bill(y) ∧ IssuedBy(y, x) → Pays(x, y))"
    },
    {
        "NL": "A caravan leaves from an initial campground and arrives at a final site without stopping at any parks.",
        "FOL": "∃x ∃y ∃z (Caravan(x) ∧ InitialCampground(y) ∧ FinalSite(z) → LeavesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Park(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A solid substance that dissolves in a solvent to form a homogeneous mixture is a solute.",
        "FOL": "∀x∀y (SolidSubstance(x) ∧ DissolvesIn(x, y) ∧ FormsHomogeneousMixture(x, y) → Solute(x))"
    },
    {
        "NL": "Films can be of various genres, such as comedy or drama, and are directed by filmmakers who collaborate with actors and crew members.",
        "FOL": "∀x ∀y ∀z (Film(x) ∧ Genre(y) ∧ (Comedy(y) ∨ Drama(y)) ∧ Filmmaker(z) → (DirectedBy(x, z) ∧ CollaboratesWith(z, x) ∧ (Actor(x) ∨ CrewMember(x))))"
    },
    {
        "NL": "In a magnetic field, the north pole of a magnet attracts the south pole of another magnet, while the south pole of the first magnet attracts the north pole of the second magnet.",
        "FOL": "∀x∀y (MagneticField(x) ∧ Magnet(y) → (NorthPole(y) ↔ AttractsSouthPole(y)) ∧ (SouthPole(y) ↔ AttractsNorthPole(y)))"
    },
    {
        "NL": "An organism is an insect if it has six legs, a three-part body, and typically has wings and antennae.",
        "FOL": "∀x (Organism(x) ∧ SixLegs(x) ∧ ThreePartBody(x) ∧ TypicallyHasWings(x) ∧ TypicallyHasAntennae(x) → Insect(x))"
    },
    {
        "NL": "A digital device can retain data, manage data, and exhibit data.",
        "FOL": "∀x (DigitalDevice(x) → RetainData(x) ∧ ManageData(x) ∧ ExhibitData(x))"
    },
    {
        "NL": "Floods can lead to significant infrastructure damage, loss of life, and extensive soil erosion.",
        "FOL": "∀x (Flood(x) → (CausesInfrastructureDamage(x) ∨ CausesLossOfLife(x) ∨ CausesSoilErosion(x)))"
    },
    {
        "NL": "In a library, books are organized by subject, and patrons can borrow them for a limited time.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Book(y) ∧ Patron(z) → (OrganizedBySubject(x, y) ∧ CanBorrow(z, y, x)))"
    },
    {
        "NL": "An artwork is valuable if it is an original or signed by the artist and not a reproduction or damaged.",
        "FOL": "∀x (Artwork(x) → (((Original(x) ∨ SignedByArtist(x)) ∧ ¬Reproduction(x) ∧ ¬Damaged(x)) → Valuable(x)))"
    },
    {
        "NL": "A person is an athlete if they engage in physical training and participate in sports competitions.",
        "FOL": "∀x (Person(x) ∧ PhysicalTraining(x) ∧ ParticipatesInSportsCompetitions(x) → Athlete(x))"
    },
    {
        "NL": "A married couple is either in a monogamous or a polygamous relationship.",
        "FOL": "∀x∀y (MarriedCouple(x, y) → (MonogamousRelationship(x, y) ⊕ PolygamousRelationship(x, y)))"
    },
    {
        "NL": "If a bird sings in the garden, then some circles are either red or green.",
        "FOL": "∃x ∃y (Bird(x) ∧ Garden(y) ∧ SingsIn(x, y) → ∃z (Circle(z) ∧ (Red(z) ⊕ Green(z))))"
    },
    {
        "NL": "A video game that offers challenging gameplay and immersive storytelling can receive high praise from players and critics alike.",
        "FOL": "∀x ∀y (VideoGame(x) ∧ ChallengingGameplay(x) ∧ ImmersiveStorytelling(x) → CanReceiveHighPraiseFromPlayersAndCritics(y))"
    },
    {
        "NL": "An exhibition is esteemed if it showcases visionary art, insightful curation, and a genius curator.",
        "FOL": "∀x (Exhibition(x) ∧ ShowcasesVisionaryArt(x) ∧ HasInsightfulCuration(x) ∧ HasGeniusCurator(x) → Esteemed(x))"
    },
    {
        "NL": "An actor performs in plays, films, or television shows.",
        "FOL": "∀x (Actor(x) → (PerformsInPlays(x) ∨ PerformsInFilms(x) ∨ PerformsInTelevisionShows(x)))"
    },
    {
        "NL": "If a person practices effective conflict resolution skills, they are more likely to maintain harmonious relationships and prevent unnecessary disputes.",
        "FOL": "∀x (PracticesEffectiveConflictResolutionSkills(x) → (MaintainHarmoniousRelationships(x) ∧ PreventUnnecessaryDisputes(x)))"
    },
    {
        "NL": "If a person is a journalist, they either write for newspapers or work on television.",
        "FOL": "∀x (Person(x) ∧ Journalist(x) → WriteForNewspapers(x) ⊕ WorkOnTelevision(x))"
    },
    {
        "NL": "No triangle encloses all big circles.",
        "FOL": "¬∃x (Triangle(x) ∧ ∀y (Big(y) ∧ Circle(y) → Encloses(x, y)))"
    },
    {
        "NL": "A software application is considered user-centric when it is designed with a focus on user needs, offers customization options, and provides helpful support resources.",
        "FOL": "∀x∀y∀z (SoftwareApplication(x) ∧ FocusOnUserNeeds(x, y) ∧ CustomizationOptions(x, z) ∧ HelpfulSupportResources(x) → UserCentric(x))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote and express their opinions, while in an autocracy, these rights are restricted.",
        "FOL": "∀x∀y (Citizen(x) ∧ (Democracy(y) → (RightToVote(x, y) ∧ ExpressOpinions(x, y))) ∧ (Autocracy(y) → (¬RightToVote(x, y) ∧ ¬ExpressOpinions(x, y))))"
    },
    {
        "NL": "Only the diligent will get success.",
        "FOL": "∀x (¬Diligent(x) → ¬GetSuccess(x))"
    },
    {
        "NL": "A drink is considered alcoholic if it contains ethanol.",
        "FOL": "∀x (Drink(x) ∧ ContainsEthanol(x) → Alcoholic(x))"
    },
    {
        "NL": "A woman is pregnant if she has nausea, missed periods, and experienced significant weight gain.",
        "FOL": "∀x (Woman(x) → HasNausea(x) ∧ MissedPeriods(x) ∧ HasExperiencedSignificantWeightGain(x) → Pregnant(x))"
    },
    {
        "NL": "A student studies biology or chemistry.",
        "FOL": "∀x (Student(x) → (StudiesBiology(x) ∨ StudiesChemistry(x)))"
    },
    {
        "NL": "A play that is a drama can evoke viewers' emotions.",
        "FOL": "∀x ∀y (Play(x) ∧ Drama(x) ∧ Viewer(y) → CanEvokeEmotion(x, y))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity if the panel is exposed to direct sunlight and the solar cells within the panel function efficiently.",
        "FOL": "∀x ∀y ∀z (SolarPanel(x) ∧ Sunlight(y) ∧ ExposedToDirectSunlight(x, y) ∧ SolarCells(z) ∧ FunctionEfficiently(z, x) → ConvertsToElectricity(x))"
    },
    {
        "NL": "A garden flourishes when it receives sunlight, is watered properly, or has nutrient-rich soil, but not when it is infested with pests.",
        "FOL": "∀x (Garden(x) ∧ Flourish(x) ↔ (ReceiveSunlight(x) ∧ ProperWatering(x) ∧ (NutrientRichSoil(x) ∨ ¬PestInfested(x))))"
    },
    {
        "NL": "Butterflies undergo metamorphosis, while snakes shed their skin.",
        "FOL": "∀x ∀y (Butterfly(x) ∧ Snake(y) → (UndergoesMetamorphosis(x) ∧ ShedsSkin(y)))"
    },
    {
        "NL": "Lions primarily hunt during the night, while cheetahs are more active during the day.",
        "FOL": "∀x ∀y (Lion(x) ∧ Cheetah(y) → (HuntAtNight(x) ∧ ActiveDuringDay(y)))"
    },
    {
        "NL": "A game is challenging if it requires strategy and problem-solving or has elements of skill and competition, but not if it is purely luck-based.",
        "FOL": "∀x (Game(x) → ((RequiresStrategy(x) ∧ ProblemSolving(x)) ∨ (Skill(x) ∧ Competition(x))) ∧ ¬LuckBased(x) ↔ Challenging(x))"
    },
    {
        "NL": "A country has a capital city, and each city belongs to a single country.",
        "FOL": "∀x (Country(x) → ∃y (CapitalCity(x, y) ∧ City(y))) ∧ ∀z (City(z) → ∃w (Country(w) ∧ BelongsTo(z, w)))"
    },
    {
        "NL": "A material x is a metal if it is typically hard, shiny, and conducts electricity.",
        "FOL": "∀x (Material(x) ∧ Hard(x) ∧ Shiny(x) ∧ ConductsElectricity(x) → Metal(x))"
    },
    {
        "NL": "Sunlight is essential for photosynthesis in green plants.",
        "FOL": "∀x ∀y (Sunlight(x) ∧ GreenPlant(y) → EssentialForPhotosynthesis(x, y))"
    },
    {
        "NL": "An organism is a parasite if it lives on or inside another organism and benefits at the expense of the host.",
        "FOL": "∀x∀y (Organism(x) ∧ LivesOnOrInside(x, y) ∧ BenefitsAtExpenseOfHost(x, y) → Parasite(x))"
    },
    {
        "NL": "A telescope magnifies and collects light from distant celestial objects, allowing astronomers to study stars, galaxies, and other celestial phenomena.",
        "FOL": "∀x∀y∀z (Telescope(x) → (MagnifiesAndCollectsLight(x, y) ∧ DistantCelestialObjects(y) ∧ AllowsAstronomersToStudy(x, z) ∧ CelestialPhenomena(z)))"
    },
    {
        "NL": "It is not always correct that every car is fast if and only if it is expensive.",
        "FOL": "¬∀x (Car(x) ∧ Fast(x) ↔ Expensive(x))"
    },
    {
        "NL": "A mountain is taller than a hill, and a skyscraper is taller than a house.",
        "FOL": "∀x∀y∀z∀w (Mountain(x) ∧ Hill(y) → TallerThan(x, y)) ∧ (Skyscraper(z) ∧ House(w) → TallerThan(z, w))"
    },
    {
        "NL": "Rainforests host a diverse range of species, while deserts are home to cacti and hardy plants that can withstand arid conditions.",
        "FOL": "∀x ∀y ∀z (Rainforest(x) ∧ Desert(y) ∧ Species(z) → (HostsDiverseSpecies(x, z) ∧ (HomeToCacti(y, z) ∨ HardyPlants(y, z, AridConditions))))"
    },
    {
        "NL": "No musical instrument is both easy and discordant.",
        "FOL": "¬∃x (MusicalInstrument(x) ∧ Easy(x) ∧ Discordant(x))"
    },
    {
        "NL": "A vehicle is considered electric if it is primarily powered by electricity.",
        "FOL": "∀x (Vehicle(x) ∧ PrimarilyPoweredByElectricity(x) → Electric(x))"
    },
    {
        "NL": "An effective communication strategy relies on a clear message, appropriate channels, and timely delivery to reach its target audience.",
        "FOL": "∀x (CommunicationStrategy(x) → (Effective(x) ↔ (ClearMessage(x) ∧ AppropriateChannels(x) ∧ TimelyDelivery(x) ∧ ReachesTargetAudience(x))))"
    },
    {
        "NL": "A person is a programmer if they write and debug computer code.",
        "FOL": "∀x (Person(x) ∧ Programmer(x) ↔ WritesAndDebugsComputerCode(x))"
    },
    {
        "NL": "A language is considered easy to learn if it has a simple grammar structure and a small vocabulary, but not if it has irregularities and complex pronunciation rules.",
        "FOL": "∀x (Language(x) ∧ EasyToLearn(x) ↔ (SimpleGrammar(x) ∧ SmallVocabulary(x) ∧ ¬Irregularities(x) ∧ ¬ComplexPronunciationRules(x)))"
    },
    {
        "NL": "If Rachel is not a nurse then Tom is a scientist.",
        "FOL": "¬Nurse(rachel) → Scientist(tom)"
    },
    {
        "NL": "A device x is portable if it is lightweight and compact in size.",
        "FOL": "∀x (Device(x) ∧ Lightweight(x) ∧ CompactSize(x) → Portable(x))"
    },
    {
        "NL": "A sunflower grows when a seed receives enough sunlight and nutrients.",
        "FOL": "∀x (Seed(x) ∧ ReceiveEnoughSunlight(x) ∧ HasNutrients(x) → Sunflower(x))"
    },
    {
        "NL": "A body of water that is surrounded by land on all sides and is smaller than a lake is a pond.",
        "FOL": "∀x (BodyOfWater(x) ∧ SurroundedByLand(x) ∧ SmallerThanLake(x) → Pond(x))"
    },
    {
        "NL": "A bicycle moves when its pedals are pushed and the chain is not broken.",
        "FOL": "∀x (Bicycle(x) → (PedalsPushed(x) ∧ ¬ChainBroken(x) → Moves(x)))"
    },
    {
        "NL": "A fruit is ripe if it has a sweet aroma and soft texture, or if it is a specific color.",
        "FOL": "∀x (Fruit(x) → ((SweetAroma(x) ∧ SoftTexture(x)) ∨ SpecificColor(x) → Ripe(x)))"
    },
    {
        "NL": "Every doctor heals patients, but not every one who heals is a doctor.",
        "FOL": "∀x (Doctor(x) → HealsPatients(x)) ∧ ¬∀x (HealsPatients(x) → Doctor(x))"
    },
    {
        "NL": "A movie attracts a large audience with a talented cast and an engaging plot.",
        "FOL": "∀x (Movie(x) ∧ TalentedCast(x) ∧ EngagingPlot(x) → LargeAudience(x))"
    },
    {
        "NL": "An appliance is deemed a refrigerator if it employs electricity to cool and preserve items.",
        "FOL": "∀x (Appliance(x) ∧ UsesElectricity(x) ∧ CoolItems(x) ∧ PreserveItems(x) → Refrigerator(x))"
    },
    {
        "NL": "Peter dislikes all cats and dogs.",
        "FOL": "∀x (Animal(x) ∧ (Cat(x) ∨ Dog(x)) → ¬Like(peter, x))"
    },
    {
        "NL": "A house has walls, a roof, and is stationary, while a car has wheels, no roof, and is mobile.",
        "FOL": "∀x ∀y (House(x) ∧ Car(y) → ((HasWalls(x) ∧ HasRoof(x) ∧ IsStationary(x)) ∧ (HasWheels(y) ∧ ¬HasRoof(y) ∧ IsMobile(y))))"
    },
    {
        "NL": "There isn't a square that surrounds every tiny circle.",
        "FOL": "¬∃x (Square(x) ∧ ∀y (Tiny(y) ∧ Circle(y) → Surrounds(x, y)))"
    },
    {
        "NL": "All stars emit light and produce heat.",
        "FOL": "∀x (Star(x) → (EmitsLight(x) ∧ ProducesHeat(x)))"
    },
    {
        "NL": "Not all birds can fly or swim.",
        "FOL": "¬∀x (Bird(x) → (Fly(x) ∨ Swim(x)))"
    },
    {
        "NL": "If a country is landlocked, it is surrounded by land and has no coastline.",
        "FOL": "∀x (Country(x) ∧ Landlocked(x) → (SurroundedByLand(x) ∧ NoCoastline(x)))"
    },
    {
        "NL": "An innovative product solves a problem, has unique features, and offers a competitive advantage.",
        "FOL": "∀x (Product(x) → (SolvesProblem(x) ∧ UniqueFeatures(x) ∧ CompetitiveAdvantage(x) → Innovative(x)))"
    },
    {
        "NL": "A light bulb is either on or off, never both.",
        "FOL": "∀x (LightBulb(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A greenhouse is a structure made of glass or transparent material, designed to trap heat and maintain a controlled environment for growing plants.",
        "FOL": "∀x (Greenhouse(x) → (StructureMadeOfTransparentMaterial(x) ∧ TrapsHeat(x) ∧ ControlledEnvironmentForGrowingPlants(x)))"
    },
    {
        "NL": "A book gets damaged when it is exposed to water or excessive heat.",
        "FOL": "∀x ∀y (Book(x) ∧ (ExposedToWater(y) ∨ ExcessiveHeat(y)) → Damaged(x))"
    },
    {
        "NL": "An object will float in water if its density is less than the density of water, otherwise, it sinks.",
        "FOL": "∀x (Object(x) ∧ DensityLessThanWater(x) → Floats(x)) ∧ (Object(x) ∧ ¬DensityLessThanWater(x) → Sinks(x))"
    },
    {
        "NL": "An athlete competes in running races, swimming competitions, or cycling events, but not all three.",
        "FOL": "∀x (Athlete(x) → ((Runner(x) ∨ Swimmer(x) ∨ Cyclist(x)) ∧ ¬(Runner(x) ∧ Swimmer(x) ∧ Cyclist(x))))"
    },
    {
        "NL": "A bird can fly unless it is a flightless bird.",
        "FOL": "∀x (Bird(x) ∧ ¬Flightless(x) → CanFly(x))"
    },
    {
        "NL": "Wax candles are made from solidified wax, while LED candles use a light-emitting diode to simulate a flame.",
        "FOL": "∀x∀y (WaxCandle(x) ∧ LEDCandle(y) → (MadeFromSolidifiedWax(x) ∧ UsesLED(y)))"
    },
    {
        "NL": "A facility is a power plant when it is an industrial complex, responsible for generating electricity, and uses a variety of energy sources, such as fossil fuels, nuclear energy, or renewable resources like solar or wind power.",
        "FOL": "∀x (Facility(x) ∧ IndustrialComplex(x) ∧ ResponsibleForGeneratingElectricity(x) ∧ UsesVarietyOfEnergySources(x, fossilFuels, nuclearEnergy, renewableResources) → PowerPlant(x))"
    },
    {
        "NL": "An earthquake is the result of a sudden release of energy in the Earth's crust, causing the ground to shake and sometimes leading to significant damage.",
        "FOL": "∀x (Earthquake(x) → (SuddenReleaseOfEnergy(x) ∧ CausesGroundToShake(x) ∧ SometimesLeadsToSignificantDamage(x)))"
    },
    {
        "NL": "If a person is an architect, they must design and plan buildings and other structures, considering aesthetics, functionality, and safety.",
        "FOL": "∀x (Architect(x) → (DesignsAndPlansBuildingsAndOtherStructures(x) ∧ ConsideringAestheticsFunctionalityAndSafety(x)))"
    },
    {
        "NL": "Mice are usually scared of cats.",
        "FOL": "∀x∀y (Mouse(x) ∧ Cat(y) → ScaredOf(x, y))"
    },
    {
        "NL": "A film is a comedy or a tragedy.",
        "FOL": "∀x (Film(x) → (Comedy(x) ∨ Tragedy(x)))"
    },
    {
        "NL": "A solid material has a fixed shape and volume, while a liquid material has a fixed volume but can change its shape.",
        "FOL": "∀x (SolidMaterial(x) → (FixedShape(x) ∧ FixedVolume(x))) ⊕ ∀y (LiquidMaterial(y) → (ChangeableShape(y) ∧ FixedVolume(y)))"
    },
    {
        "NL": "A game is enjoyable for players if it has immersive graphics, well-designed levels, and offers challenging gameplay.",
        "FOL": "∀x∀y (Game(x) ∧ Player(y) → (Enjoyable(x, y) ↔ (ImmersiveGraphics(x) ∧ WellDesignedLevels(x) ∧ ChallengingGameplay(x))))"
    },
    {
        "NL": "If all humans are lifeforms then there are some humans who hate Alice.",
        "FOL": "∀x (Human(x) → Lifeform(x)) → ∃x (Human(x) ∧ Hate(x, alice))"
    },
    {
        "NL": "In a chess game, a player can move a pawn forward one or two squares on its first move, and only one square on subsequent moves.",
        "FOL": "∀x∀y∀z (ChessGame(x) ∧ Player(y) ∧ Pawn(z) ∧ (FirstMove(z) → (MoveOneSquare(y, z) ∨ MoveTwoSquares(y, z))) ∧ (¬FirstMove(z) → MoveOneSquare(y, z)))"
    },
    {
        "NL": "A painter applies color to surfaces, utilizing different techniques to create visual art.",
        "FOL": "∀x (Painter(x) → (∃y ∃z (Color(y) ∧ Technique(z) ∧ AppliesColorToSurface(x, y, z))))"
    },
    {
        "NL": "A smartphone can have a built-in camera, GPS, or fingerprint sensor.",
        "FOL": "∀x (Smartphone(x) → (BuiltInCamera(x) ∨ BuiltInGPS(x) ∨ FingerprintSensor(x)))"
    },
    {
        "NL": "A museum exhibits paintings, sculptures, and photographs.",
        "FOL": "∀x (Museum(x) → (ExhibitsPaintings(x) ∧ ExhibitsSculptures(x) ∧ ExhibitsPhotographs(x)))"
    },
    {
        "NL": "Students who study consistently and complete assignments on time usually achieve better grades.",
        "FOL": "∀s ∀c (Student(s) ∧ Course(c) ∧ ConsistentStudy(s, c) ∧ OnTimeAssignments(s, c) → BetterGrades(s, c))"
    },
    {
        "NL": "A few mathematicians are poets.",
        "FOL": "∃x (Mathematician(x) ∧ Poet(x))"
    },
    {
        "NL": "A driver will receive a bonus only if he maintains his car.",
        "FOL": "∀x (Driver(x) ∧ ReceiveBonus(x) → MaintainCar(x))"
    },
    {
        "NL": "An object that reflects light and is placed in a room can either brighten the space or create glare, depending on the angle of the light source.",
        "FOL": "∀x (ReflectsLight(x) ∧ PlacedInRoom(x) → (BrightensSpace(x) ⊕ CreatesGlare(x, y))) ∧ ∃y LightSource(y)"
    },
    {
        "NL": "A musical instrument that belongs to the string family has strings.",
        "FOL": "∀x (MusicalInstrument(x) ∧ BelongsToStringFamily(x) → HasStrings(x))"
    },
    {
        "NL": "A triangle has one right angle if and only if it is a right triangle.",
        "FOL": "∀x∀y∀z (Triangle(x) ∧ Angle(y) ∧ Right(z) → (HasAngle(x, y, z) ↔ RightTriangle(x)))"
    },
    {
        "NL": "A film is critically acclaimed if it has excellent reviews or has won prestigious awards.",
        "FOL": "∀x (Film(x) ∧ (ExcellentReviews(x) ∨ PrestigiousAwards(x)) → CriticallyAcclaimed(x))"
    },
    {
        "NL": "A computer network consists of interconnected devices that exchange data and communicate with each other, enabling the sharing of resources and information.",
        "FOL": "∀x∀y∀z (ComputerNetwork(x) ∧ Device(y) ∧ Resource(z) → (InterconnectedDevices(x, y) ∧ ExchangesData(x, y) ∧ CommunicatesWith(x, y) ∧ EnablesSharingOfResources(x, z)))"
    },
    {
        "NL": "A tree has leaves and roots, while a flower has petals and a stem.",
        "FOL": "∀x∀y (Tree(x) ∧ Flower(y) → (Leaves(x) ∧ Roots(x) ∧ Petals(y) ∧ Stem(y)))"
    },
    {
        "NL": "Bees are insects, and they play a crucial role in pollination, but they can also sting.",
        "FOL": "Insect(bee) ∧ Pollinators(bee) ∧ CanSting(bee)"
    },
    {
        "NL": "In a wildlife reserve, endangered species are protected from threats and their habitats are preserved, which aids in the conservation of biodiversity.",
        "FOL": "∀x∀y (WildlifeReserve(x) ∧ EndangeredSpecies(y) ∧ LocatedIn(y, x) → (ProtectedFromThreats(y) ∧ HabitatsPreserved(y) ∧ AidsConservationOfBiodiversity(y)))"
    },
    {
        "NL": "A room can be illuminated by natural light or artificial light sources, but not both at the same time.",
        "FOL": "∀x (Room(x) → (NaturalLight(x) ⊕ ArtificialLightSources(x)))"
    },
    {
        "NL": "Either a beverage is hot, or it is cold, but not both.",
        "FOL": "∀x (Beverage(x) → (Hot(x) ⊕ Cold(x)))"
    },
    {
        "NL": "A knife is used for cutting and slicing.",
        "FOL": "∀x (Knife(x) → (UsedForCutting(x) ∧ UsedForSlicing(x)))"
    },
    {
        "NL": "A student is considered an undergraduate if they are pursuing a bachelor's degree but have not yet completed it.",
        "FOL": "∀x (Student(x) ∧ PursuingBachelorsDegree(x) ∧ ¬CompletedBachelorsDegree(x) → Undergraduate(x))"
    },
    {
        "NL": "A mirror reflects light, while a black hole absorbs it.",
        "FOL": "∀x (Mirror(x) → ReflectsLight(x)) ∧ (BlackHole(x) → AbsorbsLight(x))"
    },
    {
        "NL": "A laptop is portable when it is not heavy and has a long battery life.",
        "FOL": "∀x (Laptop(x) ∧ ¬Heavy(x) ∧ LongBatteryLife(x) → Portable(x))"
    },
    {
        "NL": "A restaurant is awarded a Michelin star if it demonstrates exceptional culinary skill, uses high-quality ingredients, and offers outstanding customer service.",
        "FOL": "∀x (Restaurant(x) ∧ ExceptionalCulinarySkill(x) ∧ HighQualityIngredients(x) ∧ OutstandingCustomerService(x) → AwardedMichelinStar(x))"
    },
    {
        "NL": "A spacecraft that is designed for human spaceflight, can land on other celestial bodies, and return safely to Earth is a manned space vehicle.",
        "FOL": "∀x ((Spacecraft(x) ∧ DesignedForHumanSpaceflight(x) ∧ CanLandOnCelestialBodies(x) ∧ ReturnsSafelyToEarth(x)) → MannedSpaceVehicle(x))"
    },
    {
        "NL": "In a classroom, students attend lectures and participate in group discussions.",
        "FOL": "∀x ∀y (Classroom(x) ∧ Student(y) → (AttendsLecture(y, x) ∧ ParticipatesInGroupDiscussion(y, x)))"
    },
    {
        "NL": "A fruit is ripe if it is not green and not hard.",
        "FOL": "∀x (Fruit(x) ∧ ¬Green(x) ∧ ¬Hard(x) → Ripe(x))"
    },
    {
        "NL": "If an object is a magnet, it attracts iron and other ferromagnetic materials.",
        "FOL": "∀x (Object(x) ∧ Magnet(x) → AttractsIronAndFerromagneticMaterials(x))"
    },
    {
        "NL": "An album becomes a bestseller when the songs are well-produced, the artist has a loyal fanbase, and it receives extensive media coverage.",
        "FOL": "∀x∀y (Album(x) ∧ Artist(y) → (Bestseller(x) ↔ (WellProducedSongs(x) ∧ LoyalFanbase(y) ∧ ExtensiveMediaCoverage(x))))"
    },
    {
        "NL": "All triangles have a sum of internal angles equal to 180 degrees.",
        "FOL": "∀x (Triangle(x) → SumOfInternalAnglesEquals180(x))"
    },
    {
        "NL": "A piece of furniture designed to hold and display various items, such as books, decorative objects, or kitchenware, is a shelf.",
        "FOL": "∀x∀y∀z (PieceOfFurniture(x) ∧ DesignedToHoldAndDisplay(x, y) ∧ (Books(y) ∨ DecorativeObjects(y) ∨ Kitchenware(y)) ∧ VariousItems(z) → Shelf(x))"
    },
    {
        "NL": "A figure is a rectangle only if it is yellow.",
        "FOL": "∀w (Rectangle(w) → Yellow(w))"
    },
    {
        "NL": "A restaurant attracts customers when it serves delicious food, provides excellent service, and maintains a clean environment.",
        "FOL": "∀x (Restaurant(x) ∧ DeliciousFood(x) ∧ ExcellentService(x) ∧ CleanEnvironment(x) → AttractsCustomers(x))"
    },
    {
        "NL": "A sports team x wins a championship if it consistently outperforms other teams y in matches throughout the season.",
        "FOL": "∀x ∀y (SportsTeam(x) ∧ OtherTeams(y) ∧ ConsistentlyOutperforms(x, y) → WinsChampionship(x))"
    },
    {
        "NL": "A sofa offers seating, and a bed provides a place to sleep.",
        "FOL": "∀x∀y (Sofa(x) ∧ Bed(y) → (OffersSeating(x) ∧ ProvidesPlaceToSleep(y)))"
    },
    {
        "NL": "An online shopping platform provides a wide variety of products, such as electronics, clothing, and groceries, and enables customers to compare prices, read reviews, and make informed purchasing decisions.",
        "FOL": "∀x ∀y ∀z (OnlineShoppingPlatform(x) → (Provides(x, y) ∧ (Electronics(y) ∨ Clothing(y) ∨ Groceries(y)) ∧ Enables(x, z) ∧ (ComparePrices(z) ∨ ReadReviews(z) ∨ MakeInformedPurchasingDecisions(z))))"
    },
    {
        "NL": "A river flows into a lake or the ocean.",
        "FOL": "∀x (River(x) → (FlowsIntoLake(x) ∨ FlowsIntoOcean(x)))"
    },
    {
        "NL": "A watch has hands if it indicates hours, minutes, and seconds.",
        "FOL": "∀x (Watch(x) ∧ IndicatesHours(x) ∧ IndicatesMinutes(x) ∧ IndicatesSeconds(x) → HasHands(x))"
    },
    {
        "NL": "An apple is a fruit, a carrot is a vegetable, and a salmon is a fish.",
        "FOL": "∀x ∀y ∀z (Apple(x) ∧ Carrot(y) ∧ Salmon(z) → (Fruit(x) ∧ Vegetable(y) ∧ Fish(z)))"
    },
    {
        "NL": "If a mammal is a marsupial, it gives birth to undeveloped offspring.",
        "FOL": "∀x (Mammal(x) ∧ Marsupial(x) → GivesBirthToUndevelopedOffspring(x))"
    },
    {
        "NL": "Every shape is either a square or a circle, but not both.",
        "FOL": "∀x (Shape(x) → (Square(x) ⊕ Circle(x)))"
    },
    {
        "NL": "A room can be considered dark if it has no windows or the lights are turned off.",
        "FOL": "∀x (Room(x) ∧ (NoWindows(x) ∨ LightsOff(x)) → Dark(x))"
    },
    {
        "NL": "A train travels on tracks and can transport passengers or cargo.",
        "FOL": "∀x (Train(x) → (TravelsOnTracks(x) ∧ (TransportsPassengers(x) ∨ TransportsCargo(x))))"
    },
    {
        "NL": "A device is either digital or analog.",
        "FOL": "∀v (Device(v) → (Digital(v) ∨ Analog(v)))"
    },
    {
        "NL": "No bird in the sky is singing.",
        "FOL": "∀y (Bird(y) ∧ InSky(y) → ¬Singing(y))"
    },
    {
        "NL": "There is no artist that draws all the blue skies.",
        "FOL": "¬∃x (Artist(x) ∧ ∀y (Blue(y) ∧ Sky(y) → Draws(x, y)))"
    },
    {
        "NL": "A written work of fiction, divided into chapters and composed of a series of connected events, is a novel.",
        "FOL": "∀x (WrittenWork(x) ∧ Fiction(x) ∧ DividedIntoChapters(x) ∧ ComposedOfConnectedEvents(x) → Novel(x))"
    },
    {
        "NL": "A well-designed website attracts visitors by being visually appealing, easy to navigate, and loading quickly.",
        "FOL": "∀x (Website(x) ∧ VisuallyAppealing(x) ∧ EasyToNavigate(x) ∧ QuickLoading(x) → AttractsVisitors(x))"
    },
    {
        "NL": "A sculpture is defined as an artwork if it has three dimensions and is made using materials like stone, wood, or metal.",
        "FOL": "∀x (Artwork(x) ∧ ThreeDimensional(x) ∧ (MadeWithStone(x) ∨ MadeWithWood(x) ∨ MadeWithMetal(x)) → Sculpture(x))"
    },
    {
        "NL": "A restaurant that serves only vegetarian dishes is called a vegetarian restaurant.",
        "FOL": "∀x (ServesOnlyVegetarianDishes(x) → VegetarianRestaurant(x))"
    },
    {
        "NL": "Not every painter is highly-skilled, which implies there is an artform that all other artforms are derived from.",
        "FOL": "¬∀x (Painter(x) → HighlySkilled(x)) → ∃y (Artform(y) ∧ ∀z (Artform(z) → DerivedFrom(z, y)))"
    },
    {
        "NL": "An individual is nocturnal if and only if they howl or hoot, but not both.",
        "FOL": "∀x (Individual(x) → (Nocturnal(x) ↔ (Howl(x) ⊕ Hoot(x))))"
    },
    {
        "NL": "A country imposes a tariff on imported goods if it is trying to protect domestic industries, while a country without tariffs is promoting free trade.",
        "FOL": "∀x (Country(x) → ((ImposesTariff(x, y) ↔ ProtectsDomesticIndustries(x)) ∧ (¬ImposesTariff(x, y) ↔ PromotesFreeTrade(x))))"
    },
    {
        "NL": "A book is written by an author, who develops a story, creates characters, and defines settings.",
        "FOL": "∀x∀y (Book(x) ∧ Author(y) ∧ Writes(y, x) → (DevelopsStory(y, x) ∧ CreatesCharacters(y, x) ∧ DefinesSettings(y, x)))"
    },
    {
        "NL": "The penguin is flightless.",
        "FOL": "∀x (Penguin(x) → Flightless(x))"
    },
    {
        "NL": "Students attend classes at a university.",
        "FOL": "∀x ∀y (Student(x) ∧ University(y) → AttendsClassesAt(x, y))"
    },
    {
        "NL": "Books are informative, magazines are entertaining, and newspapers are factual.",
        "FOL": "∀x (Book(x) → Informative(x)) ∧ ∀y (Magazine(y) → Entertaining(y)) ∧ ∀z (Newspaper(z) → Factual(z))"
    },
    {
        "NL": "A restaurant serves vegan food, vegetarian food, or both, but not neither.",
        "FOL": "∀x (Restaurant(x) → (ServesVeganFood(x) ∨ ServesVegetarianFood(x)) ∧ ¬(¬ServesVeganFood(x) ∧ ¬ServesVegetarianFood(x)))"
    },
    {
        "NL": "A mammal is considered a marsupial if it carries and nourishes its young in a pouch.",
        "FOL": "∀x (Mammal(x) ∧ CarriesYoungInPouch(x) ∧ NourishesYoung(x) → Marsupial(x))"
    },
    {
        "NL": "An artist creates compelling artwork with a unique style and a strong concept.",
        "FOL": "∀x (Artist(x) ∧ UniqueStyle(x) ∧ StrongConcept(x) → CreatesCompellingArtwork(x))"
    },
    {
        "NL": "A natural disaster involving strong winds, heavy rain, and flooding is a hurricane.",
        "FOL": "∀x (NaturalDisaster(x) ∧ InvolvesStrongWinds(x) ∧ InvolvesHeavyRain(x) ∧ InvolvesFlooding(x) → Hurricane(x))"
    },
    {
        "NL": "A bird can fly if it is not injured and has functional wings.",
        "FOL": "∀x (Bird(x) → (¬Injured(x) ∧ FunctionalWings(x) → CanFly(x)))"
    },
    {
        "NL": "A novel is a type of book, while a film is a type of visual media.",
        "FOL": "∀x ∀y (Novel(x) ∧ Film(y) → (TypeOfBook(x) ∧ TypeOfVisualMedia(y)))"
    },
    {
        "NL": "If a polygon is a pentagon, it has five sides.",
        "FOL": "∀x (Pentagon(x) → HasFiveSides(x))"
    },
    {
        "NL": "A material is recyclable if it can be processed and transformed into new products.",
        "FOL": "∀x (Material(x) ∧ CanBeProcessed(x) ∧ CanBeTransformed(x) → Recyclable(x))"
    },
    {
        "NL": "A creature is either happy or sad.",
        "FOL": "∀x (Creature(x) → (Happy(x) ⊕ Sad(x)))"
    },
    {
        "NL": "A company that prioritizes employee well-being, invests in sustainable practices, and fosters innovation is more likely to be successful in the long term.",
        "FOL": "∀x ∀y ∀z (Company(x) ∧ PrioritizesEmployeeWellBeing(x) ∧ InvestsInSustainablePractices(x) ∧ FostersInnovation(x) → MoreLikelyToBeSuccessfulInTheLongTerm(y, z))"
    },
    {
        "NL": "Pollination is necessary for the reproduction of flowering plants.",
        "FOL": "∀x (FloweringPlant(x) → (Pollination(x) → Reproduction(x)))"
    },
    {
        "NL": "A park that features well-maintained green spaces, safe play areas for children, and accessible walking paths can be a popular destination for families and outdoor enthusiasts.",
        "FOL": "∀x (Park(x) ∧ WellMaintainedGreenSpaces(x) ∧ SafePlayAreasForChildren(x) ∧ AccessibleWalkingPaths(x) → PopularDestinationForFamiliesAndOutdoorEnthusiasts(x))"
    },
    {
        "NL": "A star goes super-nova when it is overly massive and reaches extreme luminosity due to an internal explosion.",
        "FOL": "∀x (OverlyMassive(x) ∧ ReachesExtremeLuminosity(x) ∧ InternalExplosion(x) → Supernova(x))"
    },
    {
        "NL": "A planet has a moon if it is in orbit around the planet, but a star does not have a moon.",
        "FOL": "∀x (Planet(x) → (InOrbitAround(y, x) → Moon(y))) ∧ ∀z (Star(z) → ¬∃w (InOrbitAround(w, z) ∧ Moon(w)))"
    },
    {
        "NL": "A toy is educational if it develops creativity or critical thinking, and it is also safe for children.",
        "FOL": "∀x (Toy(x) → ((DevelopsCreativity(x) ∨ DevelopsCriticalThinking(x)) ∧ SafeForChildren(x)) ↔ Educational(x))"
    },
    {
        "NL": "A concert may be held indoors or outdoors, but not both.",
        "FOL": "∀x (Concert(x) → (HeldIndoors(x) ⊕ HeldOutdoors(x)))"
    },
    {
        "NL": "There is a green triangle that communicates with something.",
        "FOL": "∃x (Green(x) ∧ Triangle(x) → ∃y (CommunicatesWith(x, y)))"
    },
    {
        "NL": "Every chef cooks a dish they love and loves a dish they do not cook.",
        "FOL": "∀x (Chef(x) → (∃y (Love(x, y) ∧ Cook(x, y)) ∧ ∃z (Love(x, z) ∧ ¬Cook(x, z))))"
    },
    {
        "NL": "A type of music can be either instrumental or vocal.",
        "FOL": "∀x (MusicType(x) → (Instrumental(x) ⊕ Vocal(x)))"
    },
    {
        "NL": "An animal is considered endangered if its population is declining, and it faces threats such as habitat loss, pollution, or hunting.",
        "FOL": "∀x (Endangered(x) ↔ (Animal(x) ∧ PopulationDeclining(x) ∧ (∃y (HabitatLoss(y) ∧ FacesThreat(x, y)) ∨ ∃z (Pollution(z) ∧ FacesThreat(x, z)) ∨ ∃w (Hunting(w) ∧ FacesThreat(x, w)))))"
    },
    {
        "NL": "A window is open, allowing fresh air and sunlight to enter.",
        "FOL": "∀x (Window(x) ∧ (Open(x) → (FreshAir(x) ∧ Sunlight(x))))"
    },
    {
        "NL": "Not all stars emit visible light; some emit primarily infrared radiation.",
        "FOL": "¬(∀x (Star(x) → EmitsVisibleLight(x))) ∧ ∃y (Star(y) ∧ EmitsInfraredRadiation(y))"
    },
    {
        "NL": "Not every artist is either a painter or sculptor and none of them despises creativity.",
        "FOL": "¬∀x (Artist(x) → (Painter(x) ∨ Sculptor(x))) ∧ ∀y (Artist(y) → ¬DespiseCreativity(y))"
    },
    {
        "NL": "Each purple object is related to at least one thing that connects only to orange things.",
        "FOL": "∀x (Purple(x) → ∃y (RelatesTo(x, y) ∧ ∀z (RelatesTo(y, z) → Orange(z))))"
    },
    {
        "NL": "Only the brave shall inherit the land.",
        "FOL": "∀x (¬Brave(x) → ¬InheritLand(x))"
    },
    {
        "NL": "An object can float in a liquid if it is less dense than the liquid, while it will sink if it is denser.",
        "FOL": "∀x∀y (Object(x) ∧ Liquid(y) → ((LessDense(x, y) ∧ FloatsIn(x, y)) ⊕ (Denser(x, y) ∧ SinksIn(x, y))))"
    },
    {
        "NL": "A painting is considered abstract if it does not represent a recognizable object.",
        "FOL": "∀x (Painting(x) ∧ ¬RepresentsRecognizableObject(x) → Abstract(x))"
    },
    {
        "NL": "A vehicle is powered by either gasoline, electricity, or a hybrid system.",
        "FOL": "∀x (Vehicle(x) → (PoweredByGasoline(x) ∨ PoweredByElectricity(x) ∨ HybridSystem(x)))"
    },
    {
        "NL": "No singer is both famous and talentless.",
        "FOL": "¬∃x (Singer(x) ∧ Famous(x) ∧ Talentless(x))"
    },
    {
        "NL": "An ice cream flavor is popular when it is chocolate or vanilla, but not when it is a rare flavor.",
        "FOL": "∀x (IceCream(x) → (Popular(x) ↔ (Chocolate(x) ∨ Vanilla(x) ∧ ¬RareFlavor(x))))"
    },
    {
        "NL": "A planet x orbits around a star y in a solar system z if it follows a stable trajectory and is influenced by the gravitational force of y.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ Star(y) ∧ SolarSystem(z) ∧ OrbitsInSystem(x, y, z) ∧ StableTrajectory(x, y) ∧ GravitationalInfluence(y, x) → OrbitsAroundStar(x, y, z))"
    },
    {
        "NL": "A dish with rice and meat is not a salad, and if it includes vegetables, it can be a stir-fry or a paella, but not both.",
        "FOL": "∀x (Dish(x) ∧ Rice(x) ∧ Meat(x) → (¬Salad(x) ∧ (Vegetables(x) → (StirFry(x) ⊕ Paella(x)))))"
    },
    {
        "NL": "A museum displays artifacts from history and culture, and often hosts educational programs.",
        "FOL": "∀x (Museum(x) → (DisplaysArtifacts(x, y) ∧ HostsEducationalPrograms(x)))"
    },
    {
        "NL": "A novel that is a thriller can captivate audience.",
        "FOL": "∀x ∀y (Novel(x) ∧ Thriller(x) ∧ Audience(y) → CanCaptivate(x, y))"
    },
    {
        "NL": "A region is a rainforest if it has high annual precipitation and supports diverse plant and animal life.",
        "FOL": "∀x (Region(x) ∧ HighAnnualPrecipitation(x) ∧ DiversePlantLife(x) ∧ DiverseAnimalLife(x) → Rainforest(x))"
    },
    {
        "NL": "Baking requires flour and sugar.",
        "FOL": "Requires(Baking, Flour) ∧ Requires(Baking, Sugar)"
    },
    {
        "NL": "A meal that is typically consumed in the morning, provides energy, and contains a variety of nutrients is a breakfast or a brunch.",
        "FOL": "∀x (Meal(x) ∧ ConsumedInTheMorning(x) ∧ ProvidesEnergy(x) ∧ ContainsVarietyOfNutrients(x) → (Breakfast(x) ∨ Brunch(x)))"
    },
    {
        "NL": "A vehicle is classified as an amphibious vehicle if it can operate on both land and water.",
        "FOL": "∀x (Vehicle(x) ∧ CanOperateOnLandAndWater(x) → AmphibiousVehicle(x))"
    },
    {
        "NL": "Except for the honest, none deserve respect.",
        "FOL": "∀z (¬Honest(z) → ¬DeserveRespect(z))"
    },
    {
        "NL": "A vehicle is a car if it has four wheels and is designed for passenger transportation.",
        "FOL": "∀x (Car(x) ↔ (Vehicle(x) ∧ FourWheels(x) ∧ PassengerTransportation(x)))"
    },
    {
        "NL": "A television series consists of multiple episodes, follows a storyline or theme, and may be broadcasted on a network, streaming platform, or cable service.",
        "FOL": "∀x (TelevisionSeries(x) → (MultipleEpisodes(x) ∧ StorylineOrTheme(x) ∧ (BroadcastedOnNetwork(x) ∨ BroadcastedOnStreamingPlatform(x) ∨ BroadcastedOnCableService(x))))"
    },
    {
        "NL": "Stars emit light, while black holes do not.",
        "FOL": "∀x (Star(x) → EmitsLight(x)) ∧ ∀y (BlackHole(y) → ¬EmitsLight(y))"
    },
    {
        "NL": "Houses can be built with bricks, wood, or concrete.",
        "FOL": "∀x (House(x) → (BuiltWith(x, Bricks) ∨ BuiltWith(x, Wood) ∨ BuiltWith(x, Concrete)))"
    },
    {
        "NL": "A robust machine learning model should have high accuracy, generalization ability, and be resistant to overfitting and underfitting.",
        "FOL": "∀x (MachineLearningModel(x) → (HighAccuracy(x) ∧ GeneralizationAbility(x) ∧ ResistantToOverfitting(x) ∧ ResistantToUnderfitting(x)))"
    },
    {
        "NL": "A chair is a piece of furniture designed for sitting.",
        "FOL": "∀x (Chair(x) → FurnitureDesignedForSitting(x))"
    },
    {
        "NL": "All birds have wings and can fly.",
        "FOL": "∀x (Bird(x) → HasWings(x) ∧ CanFly(x))"
    },
    {
        "NL": "A red traffic light indicates drivers should stop.",
        "FOL": "∀x∀y (TrafficLight(x) ∧ Red(x) ∧ Driver(y) → ShouldStop(y))"
    },
    {
        "NL": "A renewable energy source that harnesses wind power uses turbines, generates electricity, and has low greenhouse gas emissions.",
        "FOL": "∀x (RenewableEnergySource(x) ∧ WindPower(x) → UsesTurbines(x) ∧ GeneratesElectricity(x) ∧ LowGreenhouseGasEmissions(x))"
    },
    {
        "NL": "A chef can be a pastry maker, bake exquisite desserts, and work in a prestigious hotel, or they can be a gourmet specialist, create fine dining experiences, and run a Michelin star restaurant.",
        "FOL": "∀x (Chef(x) → ((PastryChef(x) ∧ BakesExquisiteDesserts(x) ∧ WorksInPrestigiousHotel(x)) ⊕ (GourmetSpecialist(x) ∧ CreatesFineDiningExperiences(x) ∧ RunsMichelinStarRestaurant(x))))"
    },
    {
        "NL": "National parks protect natural habitats and wildlife, provide opportunities for outdoor recreation, and contribute to environmental conservation and research.",
        "FOL": "∀x (NationalPark(x) → (ProtectsHabitats(x) ∧ ProtectsWildlife(x) ∧ OffersOutdoorRecreation(x) ∧ ContributesToConservation(x) ∧ ContributesToResearch(x)))"
    },
    {
        "NL": "A type of large, long-necked bird that is native to Africa and has a unique pattern of black and white feathers, is a zebra.",
        "FOL": "∀x (LargeBird(x) ∧ LongNecked(x) ∧ NativeToAfrica(x) ∧ UniquePattern(x) ∧ BlackAndWhiteFeathers(x) → Zebra(x))"
    },
    {
        "NL": "An athlete participates in running, swimming, or cycling competitions.",
        "FOL": "∀x (Athlete(x) → ∃y ∃z ∃w (ParticipateInCompetition(x, y, Running) ∨ ParticipateInCompetition(x, z, Swimming) ∨ ParticipateInCompetition(x, w, Cycling)))"
    },
    {
        "NL": "A surface can be flat or curved, but not both.",
        "FOL": "∀x (Surface(x) → ((Flat(x) ⊕ Curved(x))))"
    },
    {
        "NL": "For a student to excel academically, they must display consistent effort, possess strong study habits, and participate in class discussions, while not being absent frequently or neglecting assignments.",
        "FOL": "∀x (Student(x) → (AcademicExcellence(x) ↔ (ConsistentEffort(x) ∧ StrongStudyHabits(x) ∧ ParticipatesInDiscussions(x) ∧ ¬FrequentlyAbsent(x) ∧ ¬NeglectsAssignments(x))))"
    },
    {
        "NL": "A dish is a soup if it's served hot or cold, has a liquid base, and contains ingredients like vegetables or meat.",
        "FOL": "∀x (Dish(x) ∧ (ServedHot(x) ∨ ServedCold(x)) ∧ LiquidBase(x) ∧ (ContainsVegetables(x) ∨ ContainsMeat(x)) → Soup(x))"
    },
    {
        "NL": "An individual who regularly sets and reviews personal goals is more likely to maintain focus and achieve their desired outcomes.",
        "FOL": "∀x (RegularlySetsAndReviewsPersonalGoals(x) → (MaintainFocus(x) ∧ AchieveDesiredOutcomes(x)))"
    },
    {
        "NL": "A smartphone is considered waterproof if it can be submerged in water without being damaged.",
        "FOL": "∀x (Smartphone(x) ∧ ∃y (Water(y) ∧ CanBeSubmergedWithoutDamage(x, y)) → Waterproof(x))"
    },
    {
        "NL": "There isn't a cat which scratches a brown piece of furniture.",
        "FOL": "¬∀x ∃y (Brown(y) ∧ Scratches(x, y) → Cat(x))"
    },
    {
        "NL": "A vehicle can be a car, a motorcycle, or a bicycle.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Motorcycle(x) ∨ Bicycle(x)))"
    },
    {
        "NL": "A wind turbine generates electricity using wind, and a solar panel generates electricity using sunlight.",
        "FOL": "∀x∀y (WindTurbine(x) ∧ SolarPanel(y) → (GeneratesElectricity(x, wind) ∧ GeneratesElectricity(y, sunlight)))"
    },
    {
        "NL": "A movie becomes a blockbuster if it has a unique plot, engaging performances, and shocking ending.",
        "FOL": "∀x (Movie(x) ∧ HasUniquePlot(x) ∧ HasEngagingPerformances(x) ∧ HasShockingEnding(x) → BecomesBlockbuster(x))"
    },
    {
        "NL": "A beverage is alcoholic if it contains ethanol and its alcohol content is greater than 0.5%.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) ∧ AlcoholContent(x, greaterThanZeroPointFive) → Alcoholic(x))"
    },
    {
        "NL": "A teacher assigns homework to students on weekdays or weekends.",
        "FOL": "∀x ∀y (Teacher(x) ∧ Students(y) → (AssignsHomework(x, y) ∧ (On(x, Weekdays) ∨ On(x, Weekends))))"
    },
    {
        "NL": "A computer runs Linux or MacOS.",
        "FOL": "∀x (Computer(x) → (Linux(x) ∨ MacOS(x)))"
    },
    {
        "NL": "Cars run on either gasoline or electricity.",
        "FOL": "∀x (Car(x) → (RunsOn(x, gasoline) ⊕ RunsOn(x, electricity)))"
    },
    {
        "NL": "Writers compose books, and editors refine them.",
        "FOL": "∀x ∀y ∀z (Writer(x) ∧ Book(y) ∧ Editor(z) → Composes(x, y) ∧ Refines(z, x))"
    },
    {
        "NL": "A book contains pages with text and illustrations that convey information, stories, or ideas.",
        "FOL": "∀x (Book(x) ↔ (ContainsPages(x) ∧ WithTextAndIllustrations(x) ∧ ConveysInformationStoriesOrIdeas(x)))"
    },
    {
        "NL": "A mountain climber needs proper equipment, physical fitness, and experience to safely reach the summit.",
        "FOL": "∀x (MountainClimber(x) ∧ HasProperEquipment(x) ∧ PhysicallyFit(x) ∧ Experienced(x) → CanSafelyReachSummit(x))"
    },
    {
        "NL": "An airport can handle international flights if it has customs facilities, immigration services, and adequate infrastructure.",
        "FOL": "∀x∀y∀z (Airport(x) ∧ CustomsFacilities(y) ∧ ImmigrationServices(z) ∧ AdequateInfrastructure(x) ∧ Has(x, y) ∧ Has(x, z) → CanHandleInternationalFlights(x))"
    },
    {
        "NL": "If a plant has flowers, it is classified as an angiosperm.",
        "FOL": "∀x (Plant(x) ∧ HasFlowers(x) → Angiosperm(x))"
    },
    {
        "NL": "If a car is sleek and fast, then it surpasses at least one old car, unless it is a vintage car.",
        "FOL": "∀x ((Car(x) ∧ Sleek(x) ∧ Fast(x)) → ∃y (Old(y) ∧ Car(y) ∧ Surpasses(x, y) ∨ VintageCar(x)))"
    },
    {
        "NL": "Lions hunt prey and live in groups called prides.",
        "FOL": "∀x ∀y ∀z (Lion(x) ∧ Prey(y) ∧ Group(z) → Hunts(x, y) ∧ LivesIn(x, z))"
    },
    {
        "NL": "An almond tree is a breed of tree that provides almonds, an elderberry tree is a type of tree with small blossoms, and a cypress tree is a variety of tree with conical shape.",
        "FOL": "∀x ∃y (AlmondTree(x) → Almond(y) ∧ Provides(x,y)) ∧ ∀z (ElderberryTree(z) → HasSmallBlossoms(z)) ∧ ∀w (CypressTree(w) → HasConicalShape(w))"
    },
    {
        "NL": "A celestial body is considered a planet if it orbits a star and has cleared its orbit of debris.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ Star(y) ∧ Orbits(x, y) ∧ ClearedOrbitOfDebris(x) → Planet(x))"
    },
    {
        "NL": "Only if it is a diamond, everything blue is sharp.",
        "FOL": "∀x (Blue(x) → (Sharp(x) → Diamond(x)))"
    },
    {
        "NL": "A book has pages and contains text, while a painting has a canvas and doesn't contain text.",
        "FOL": "∀x∀y (Book(x) ∧ Painting(y) → (HasPages(x) ∧ ContainsText(x) ∧ HasCanvas(y) ∧ ¬ContainsText(y)))"
    },
    {
        "NL": "A comfortable living space needs adequate lighting and proper ventilation.",
        "FOL": "∀x (ComfortableLivingSpace(x) → (AdequateLighting(x) ∧ ProperVentilation(x)))"
    },
    {
        "NL": "A food item is unhealthy if it is high in sugar or high in fat.",
        "FOL": "∀x (FoodItem(x) ∧ (HighInSugar(x) ∨ HighInFat(x)) → Unhealthy(x))"
    },
    {
        "NL": "No animal is a vegetable.",
        "FOL": "¬∃x (Animal(x) ∧ Vegetable(x))"
    },
    {
        "NL": "A car with a flat tire is not drivable.",
        "FOL": "∀x (Car(x) ∧ FlatTire(x) → ¬Drivable(x))"
    },
    {
        "NL": "There exists a silver star and there exists a gold moon.",
        "FOL": "∃x (Silver(x) ∧ Star(x)) ∧ ∃x (Gold(x) ∧ Moon(x))"
    },
    {
        "NL": "A meal in a restaurant is delicious when the ingredients are fresh, the chef is skilled, and the presentation is appealing.",
        "FOL": "∀x ∀y ∀z (Meal(x) ∧ Restaurant(y) ∧ FreshIngredients(x) ∧ SkilledChef(z) ∧ AppealingPresentation(x) → Delicious(x))"
    },
    {
        "NL": "A tennis player is serving an ace.",
        "FOL": "∃x (TennisPlayer(x) ∧ ServeAce(x))"
    },
    {
        "NL": "An object is a circle if all points on its boundary are equidistant from its center.",
        "FOL": "∀x (Circle(x) ↔ ∀y ∀z (BoundaryPoint(x, y) ∧ BoundaryPoint(x, z) ∧ Center(x) → Equidistant(y, z)))"
    },
    {
        "NL": "A planet orbiting two stars instead of one is known as a circumbinary planet, often experiencing complex gravitational effects.",
        "FOL": "∀x (Planet(x) ∧ OrbitsTwoStars(x) → (CircumbinaryPlanet(x) ∧ ExperiencesComplexGravitationalEffects(x)))"
    },
    {
        "NL": "A mountain is considered tall if its height is above 3000 meters.",
        "FOL": "∀x (Mountain(x) ∧ HeightAbove3000Meters(x) → Tall(x))"
    },
    {
        "NL": "There exists a speaker that commands respect from all bright students.",
        "FOL": "∃x (Speaker(x) ∧ ∀y (Bright(y) ∧ Student(y) → CommandsRespect(x, y)))"
    },
    {
        "NL": "A kid is watching a movie at the cinema.",
        "FOL": "∃x ∃y (Kid(x) ∧ Movie(y) ∧ Watching(x, y) ∧ AtTheCinema(x))"
    },
    {
        "NL": "A device that measures the intensity of light, converts the light into an electrical signal, and displays the result numerically is a photometer.",
        "FOL": "∀x (Device(x) ∧ MeasuresLightIntensity(x) ∧ ConvertsLightToElectricalSignal(x) ∧ DisplaysNumericalResult(x) → Photometer(x))"
    },
    {
        "NL": "A fish is swimming in the ocean.",
        "FOL": "∃x ∃y (Fish(x) ∧ Ocean(y) ∧ SwimmingIn(x, y))"
    },
    {
        "NL": "A farm grows crops and raises livestock, while a greenhouse is specifically for growing plants.",
        "FOL": "∀x ∀y (Farm(x) ∧ Greenhouse(y) → (GrowsCrops(x) ∧ RaisesLivestock(x) ∧ GrowsPlants(y)))"
    },
    {
        "NL": "Pharmaceutical companies produce medications to treat various health conditions and diseases.",
        "FOL": "∀x∀y∀z (PharmaceuticalCompany(x) ∧ Medication(y) ∧ (HealthCondition(z) ∨ Disease(z)) → ProducesForTreatment(x, y, z))"
    },
    {
        "NL": "A television show gains popularity if it has fascinating characters, compelling storylines, and high-quality production.",
        "FOL": "∀x (TelevisionShow(x) ∧ HasFascinatingCharacters(x) ∧ CompellingStorylines(x) ∧ HighQualityProduction(x) → GainsPopularity(x))"
    },
    {
        "NL": "Wind turbines generate electricity using wind, while solar panels generate electricity using sunlight, but both are renewable energy sources.",
        "FOL": "∀x∀y (WindTurbine(x) → GeneratesElectricityWithWind(x)) ∧ (SolarPanel(y) → GeneratesElectricityWithSunlight(y)) ∧ (RenewableEnergySource(x) ∧ RenewableEnergySource(y))"
    },
    {
        "NL": "A restaurant with a diverse menu is appealing.",
        "FOL": "∀x (Restaurant(x) ∧ DiverseMenu(x) → Appealing(x))"
    },
    {
        "NL": "Sculptures are three-dimensional.",
        "FOL": "∀x (Sculpture(x) → ThreeDimensional(x))"
    },
    {
        "NL": "All humans need water to survive.",
        "FOL": "∀x (Human(x) → NeedsWaterToSurvive(x))"
    },
    {
        "NL": "Chefs are not always creative.",
        "FOL": "∃x (Chef(x) ∧ ¬Creative(x))"
    },
    {
        "NL": "Cats are known for their ability to climb trees and catch birds.",
        "FOL": "∀x (Cat(x) → (ClimbTrees(x) ∧ CatchBirds(x)))"
    },
    {
        "NL": "A musical instrument produces sound through vibrating strings if it belongs to the string family and requires plucking, bowing, or striking.",
        "FOL": "∀x (MusicalInstrument(x) ∧ StringFamily(x) ∧ (Plucking(x) ∨ Bowing(x) ∨ Striking(x)) → VibratingStrings(x))"
    },
    {
        "NL": "Laptops are not fruits.",
        "FOL": "¬∃x (Laptop(x) ∧ Fruit(x))"
    },
    {
        "NL": "A lighthouse emits a strong beam of light to guide ships and warn of hazardous coastlines.",
        "FOL": "∀x (Lighthouse(x) → (EmitsStrongBeamOfLight(x) ∧ GuidesShips(x) ∧ WarnsOfHazardousCoastlines(x)))"
    },
    {
        "NL": "A doctor diagnoses patients and prescribes treatments.",
        "FOL": "∀x (Doctor(x) → (∃y (Patient(y) ∧ Diagnoses(x, y) ∧ PrescribesTreatment(x, y))))"
    },
    {
        "NL": "A computer requires both hardware and software to function properly.",
        "FOL": "∀x∀y∀z (Computer(x) ∧ Hardware(y) ∧ Software(z) → Requires(x, y) ∧ Requires(x, z))"
    },
    {
        "NL": "In a relay race, each runner passes the baton to the next runner.",
        "FOL": "∀x ∀y (RelayRace(r) ∧ Runner(x) ∧ Runner(y) → (NextRunner(x, y) → PassesBaton(x, y)))"
    },
    {
        "NL": "In a soccer match, a player scores a goal by kicking the ball into the net, and the opposing team's goalkeeper fails to stop it.",
        "FOL": "∀x∀y∀z (SoccerMatch(y) ∧ Player(x) ∧ OpposingGoalkeeper(z) ∧ KicksBallIntoNet(x, y) ∧ FailsToStop(z, y) → ScoresGoal(x, y))"
    },
    {
        "NL": "Museums exhibit various artifacts and artworks to educate and inspire visitors, while libraries provide a vast collection of books and other resources for research and leisure reading.",
        "FOL": "∀x∀y (Museum(x) ∧ Library(y) → (ExhibitsArtifactsAndArtworks(x) ∧ EducatesAndInspiresVisitors(x)) ∧ (ProvidesBooksAndResources(y) ∧ SupportsResearchAndLeisureReading(y)))"
    },
    {
        "NL": "A child is reading in a quiet library.",
        "FOL": "∃x ∃y (Child(x) ∧ Reading(x) ∧ QuietLibrary(y) ∧ In(x, y))"
    },
    {
        "NL": "Rain occurs when clouds are full of water vapor and atmospheric conditions cause precipitation.",
        "FOL": "∀x∀y (Cloud(x) ∧ FullOfWaterVapor(x) ∧ AtmosphericConditions(y) ∧ CausesPrecipitation(y) → Rain(x, y))"
    },
    {
        "NL": "An athlete will win the race only if she practices daily.",
        "FOL": "∀x (Athlete(x) ∧ WinRace(x) → PracticeDaily(x))"
    },
    {
        "NL": "A mountain has a peak above the treeline, while a hill has a summit below the treeline.",
        "FOL": "∀x∀y (Mountain(x) ∧ Treeline(y) → PeakAbove(x, y)) ⊕ ∀z∀w (Hill(z) ∧ Treeline(w) → SummitBelow(z, w))"
    },
    {
        "NL": "A game is compelling when and only when its levels are challenging and the instruction is comprehensible, and it doesn't feature many difficult strategies.",
        "FOL": "∀x (Game(x) → (Compelling(x) ↔ (ChallengingLevels(x) ∧ ComprehensibleInstruction(x) ∧ ¬ManyDifficultStrategies(x))))"
    },
    {
        "NL": "A plant is a cactus or not a cactus.",
        "FOL": "∀x (Plant(x) → (Cactus(x) ⊕ ¬Cactus(x)))"
    },
    {
        "NL": "An organism that consumes other organisms to obtain nutrients and energy for survival is a predator or a scavenger.",
        "FOL": "∀x (Organism(x) ∧ ConsumesOtherOrganisms(x) ∧ ObtainsNutrients(x) ∧ ObtainsEnergy(x) → (Predator(x) ∨ Scavenger(x)))"
    },
    {
        "NL": "Each dog is a mammal.",
        "FOL": "∀x (Dog(x) → Mammal(x))"
    },
    {
        "NL": "A vaccine protects against a disease if it offers immunity to that disease.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ Disease(y) ∧ OffersImmunity(x, y) → ProtectsAgainst(x, y))"
    },
    {
        "NL": "A type of footwear that has a thick sole, is designed for outdoor activities, and provides support and protection for the feet is a hiking boot.",
        "FOL": "∀x (Footwear(x) ∧ ThickSole(x) ∧ DesignedForOutdoorActivities(x) ∧ ProvidesSupportAndProtection(x) → HikingBoot(x))"
    },
    {
        "NL": "An organism that can produce its own food through photosynthesis and serves as a primary producer in a food chain is classified as a plant.",
        "FOL": "∀x (Organism(x) ∧ ProducesOwnFood(x) ∧ UsesPhotosynthesis(x) ∧ PrimaryProducerInFoodChain(x) → Plant(x))"
    },
    {
        "NL": "If a person is a teacher, they instruct students.",
        "FOL": "∀x (Teacher(x) → InstructStudents(x))"
    },
    {
        "NL": "A substance that is solid at room temperature and conducts electricity is a metal or an alloy.",
        "FOL": "∀x (Substance(x) ∧ SolidAtRoomTemperature(x) ∧ ConductsElectricity(x) → (Metal(x) ∨ Alloy(x)))"
    },
    {
        "NL": "A cat is a carnivorous animal that purrs when content, a dog is a domesticated animal that barks to communicate, and a horse is a large herbivorous animal used for riding and racing.",
        "FOL": "∀x ∀y ∀z (Cat(x) → (Carnivorous(x) ∧ PurrsWhenContent(x))) ∧ (Dog(y) → (Domesticated(y) ∧ BarksToCommunicate(y))) ∧ (Horse(z) → (LargeHerbivore(z) ∧ UsedForRidingAndRacing(z)))"
    },
    {
        "NL": "A medical treatment is effective for a disease if it alleviates symptoms, reduces the risk of complications, and improves the patient's quality of life.",
        "FOL": "∀x ∀y (MedicalTreatment(x) ∧ Disease(y) ∧ AlleviatesSymptoms(x, y) ∧ ReducesRiskOfComplications(x, y) ∧ ImprovesQualityOfLife(x, y) → EffectiveFor(x, y))"
    },
    {
        "NL": "A bicycle has two wheels and is primarily powered by human effort.",
        "FOL": "∀x (Bicycle(x) ↔ (TwoWheels(x) ∧ HumanPowered(x)))"
    },
    {
        "NL": "A laptop requires a power source, which can be a battery or an external power supply, but not solar power.",
        "FOL": "∀x (Laptop(x) → (RequiresPower(x) ∧ (BatteryPower(x) ∨ ExternalPower(x)) ∧ ¬SolarPower(x)))"
    },
    {
        "NL": "Each musician who has teamed up with a composer lacking any state award, either created more than six songs or took part in all music festivals.",
        "FOL": "∀x (Musician(x) ∧ ∃y (Composer(y) ∧ ¬ReceivedStateAward(y) ∧ TeamedWith(x, y)) → (CreatedMoreThanSixSongs(x) ∨ ∀z (MusicFestival(z) → TookPartIn(x, z))))"
    },
    {
        "NL": "A dishwasher cleans dishes using detergent.",
        "FOL": "∀x (Dishwasher(x) → CleansDishes(x, Detergent))"
    },
    {
        "NL": "Governments issue passports to their citizens.",
        "FOL": "∀x∀y (Government(x) ∧ Citizen(y) → IssuesPassport(x, y))"
    },
    {
        "NL": "An object is heavy or light.",
        "FOL": "∀x (Object(x) → (Heavy(x) ∨ Light(x)))"
    },
    {
        "NL": "Some fruits are sweet.",
        "FOL": "∃x (Fruit(x) ∧ Sweet(x))"
    },
    {
        "NL": "People wear shoes for protection, comfort, and fashion purposes.",
        "FOL": "∀x (Person(x) → (∃y (Shoe(y) ∧ Wears(x, y)) ∧ (ProtectionPurpose(y) ∨ ComfortPurpose(y) ∨ FashionPurpose(y))))"
    },
    {
        "NL": "A book that is a mystery can make people think.",
        "FOL": "∀x ∀y (Book(x) ∧ Mystery(x) ∧ Person(y) → CanMakeThink(x, y))"
    },
    {
        "NL": "Pollinators, including bees, butterflies, and hummingbirds, play a vital role in the reproduction process of flowering plants by transferring pollen from the male anthers to the female stigma.",
        "FOL": "∀x∀y∀z (Pollinators(x) ∧ FloweringPlants(y) ∧ PollenTransfer(z) → (BeesButterfliesHummingbirds(x) ∧ ReproductionProcess(y) ∧ MaleAnthers(z) ∧ FemaleStigma(z) ∧ VitalRole(x, y, z)))"
    },
    {
        "NL": "A volcano is active if it has erupted in recent history and displays ongoing geological activity.",
        "FOL": "∀x (Volcano(x) ∧ EruptedInRecentHistory(x) ∧ OngoingGeologicalActivity(x) → Active(x))"
    },
    {
        "NL": "Not every song is catchy, but every catchy song makes people dance.",
        "FOL": "¬∀x (Song(x) → Catchy(x)) ∧ ∀y (Catchy(y) ∧ Song(y) → MakesPeopleDance(y))"
    },
    {
        "NL": "A planet that orbits a star and has a stable atmosphere supports life.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) ∧ Orbits(x, y) ∧ StableAtmosphere(x) → SupportsLife(x))"
    },
    {
        "NL": "A software program runs on a computer, processing input data to generate a desired output by following a predefined set of rules and algorithms.",
        "FOL": "∀x∀y∀z∀w (SoftwareProgram(x) ∧ Computer(y) ∧ InputData(z) ∧ OutputData(w) → (RunsOn(x, y) ∧ ProcessesInputData(x, z) ∧ GeneratesOutput(x, w) ∧ FollowsRulesAndAlgorithms(x)))"
    },
    {
        "NL": "A book is considered a bestseller if it has sold a large number of copies and has received widespread acclaim.",
        "FOL": "∀x (Book(x) ∧ SoldLargeNumberOfCopies(x) ∧ ReceivedWidespreadAcclaim(x) → Bestseller(x))"
    },
    {
        "NL": "If an object is a fruit, it comes from a plant.",
        "FOL": "∀x (Fruit(x) → ComesFromPlant(x))"
    },
    {
        "NL": "No conveyance is both a car and a bicycle.",
        "FOL": "¬∃x (Conveyance(x) ∧ Car(x) ∧ Bicycle(x))"
    },
    {
        "NL": "A washing machine cleans clothes by agitating them in water and detergent, removing dirt and stains through mechanical action.",
        "FOL": "∀x (WashingMachine(x) → (CleansClothes(x) ∧ AgitatesInWaterAndDetergent(x) ∧ RemovesDirtAndStains(x)))"
    },
    {
        "NL": "An ingredient makes a dish spicy if it has a high Scoville rating or is rich in capsaicin, but not if it's used sparingly.",
        "FOL": "∀x∀y∀z (Ingredient(x) ∧ Dish(y) ∧ (HighScoville(x, z) ∨ RichInCapsaicin(x, z)) ∧ ¬UsedSparingly(x, y) → MakesSpicy(x, y))"
    },
    {
        "NL": "Some books are written in multiple languages.",
        "FOL": "∃x∀y (Book(x) ∧ Language(y) → WrittenIn(x, y))"
    },
    {
        "NL": "A volcano erupts due to pressure buildup and magma flow.",
        "FOL": "∀x (Volcano(x) ∧ PressureBuildup(x) ∧ MagmaFlow(x) → Erupts(x))"
    },
    {
        "NL": "In an ecosystem, predators consume prey, leading to population fluctuations that contribute to the overall balance and stability of the environment.",
        "FOL": "∀x∀y (Ecosystem(x) ∧ Predator(y) → (ConsumesPrey(y) → (PopulationFluctuations(x) ∧ ContributesToBalanceAndStability(x))))"
    },
    {
        "NL": "A person who can fluently speak two languages is bilingual.",
        "FOL": "∀x (Person(x) ∧ CanSpeakTwoLanguages(x) → Bilingual(x))"
    },
    {
        "NL": "A bicycle allows people to travel on two wheels.",
        "FOL": "∀x (Bicycle(x) → AllowsTwoWheelTravel(x))"
    },
    {
        "NL": "A volcano is considered active if it has erupted recently, shows signs of volcanic activity, or has the potential to erupt in the near future.",
        "FOL": "∀x (Volcano(x) ∧ (EruptedRecently(x) ⊕ VolcanicActivity(x) ⊕ PotentialEruption(x)) → Active(x))"
    },
    {
        "NL": "If a person is a dentist, they must diagnose, treat, and prevent oral health problems, as well as perform dental procedures such as cleanings, fillings, and extractions.",
        "FOL": "∀x (Dentist(x) → (DiagnosesTreatsAndPreventsOralHealthProblems(x) ∧ PerformsDentalProcedures(x)))"
    },
    {
        "NL": "No amphibian having lungs lacks limbs.",
        "FOL": "∀x (Amphibian(x) → (HaveLungs(x) → ¬LackLimbs(x)))"
    },
    {
        "NL": "A volcano can be dormant, active, or extinct, and is formed by geological processes.",
        "FOL": "∀x (Volcano(x) → (Dormant(x) ∨ Active(x) ∨ Extinct(x)) ∧ FormedByGeologicalProcesses(x))"
    },
    {
        "NL": "An object is a telescope if it is an optical instrument, designed to magnify distant objects, and is used for astronomical observation or research.",
        "FOL": "∀x (Object(x) ∧ OpticalInstrument(x) ∧ DesignedToMagnifyDistantObjects(x) ∧ UsedForAstronomicalObservationOrResearch(x) → Telescope(x))"
    },
    {
        "NL": "Some items are round and some items are flat, but there are no round flats.",
        "FOL": "∃x (Round(x)) ∧ ∃x (Flat(x)) ∧ ¬∃x (Round(x) ∧ Flat(x))"
    },
    {
        "NL": "A baker bakes bread, and a seller sells it.",
        "FOL": "∀x ∀y (Baker(x) ∧ Bread(y) → Bake(x, y)) ∧ ∀z ∀w (Seller(z) ∧ Bread(w) → Sell(z, w))"
    },
    {
        "NL": "A person can be either a morning person or a night owl, but not both.",
        "FOL": "∀x (Person(x) → (MorningPerson(x) ⊕ NightOwl(x)))"
    },
    {
        "NL": "A person is successful if and only if they're hard-working or innovative.",
        "FOL": "∀x (Successful(x) ↔ (HardWorking(x) ∨ Innovative(x)))"
    },
    {
        "NL": "Unless a person is both polite and friendly, they are not pleasant.",
        "FOL": "∀x (¬(Polite(x) ∧ Friendly(x)) → ¬Pleasant(x))"
    },
    {
        "NL": "A restaurant is highly rated if it has excellent food quality, outstanding service, and a pleasant ambiance.",
        "FOL": "∀x (Restaurant(x) → (HighlyRated(x) ↔ (ExcellentFoodQuality(x) ∧ OutstandingService(x) ∧ PleasantAmbiance(x))))"
    },
    {
        "NL": "A day is sunny if it is not rainy.",
        "FOL": "∀x (Day(x) → (¬Rainy(x) → Sunny(x)))"
    },
    {
        "NL": "A person is an architect if they design buildings and oversee their construction.",
        "FOL": "∀x (Person(x) ∧ DesignsBuildings(x) ∧ OverseesConstruction(x) → Architect(x))"
    },
    {
        "NL": "Doctors diagnose and treat diseases, while pharmacists dispense medications.",
        "FOL": "∀x (Doctor(x) → (Diagnose(x) ∧ TreatDiseases(x))) ∧ ∀y (Pharmacist(y) → DispenseMedications(y))"
    },
    {
        "NL": "A fashion brand is considered prestigious if it has a long history, produces high-quality products, and is associated with luxury and exclusivity.",
        "FOL": "∀x (FashionBrand(x) → (Prestigious(x) ↔ (LongHistory(x) ∧ HighQualityProducts(x) ∧ AssociatedWithLuxuryAndExclusivity(x))))"
    },
    {
        "NL": "A substance is a metal if it is conductive and malleable.",
        "FOL": "∀x (Substance(x) ∧ Conductive(x) ∧ Malleable(x) → Metal(x))"
    },
    {
        "NL": "A star connects to a circle only if that circle is bright.",
        "FOL": "∀x (Star(x) → ∀y (Circle(y) ∧ ConnectsTo(x, y) → Bright(y)))"
    },
    {
        "NL": "In a symbiotic relationship, two different species interact in a manner that benefits one or both of the organisms involved, such as mutualism, commensalism, or parasitism.",
        "FOL": "∀x ∀y (SymbioticRelationship(x, y) → (DifferentSpecies(x, y) ∧ (BenefitsOneOrBoth(x, y) ∧ (Mutualism(x, y) ∨ Commensalism(x, y) ∨ Parasitism(x, y)))))"
    },
    {
        "NL": "A cat is sleeping on a rug, while a dog is playing in the garden.",
        "FOL": "∃x ∃y (Cat(x) ∧ Rug(y) ∧ SleepingOn(x, y)) ∧ ∃z (Dog(z) ∧ Playing(z) ∧ InGarden(z))"
    },
    {
        "NL": "A star with a larger mass will typically have a shorter lifespan and a more rapid fusion process.",
        "FOL": "∀x (Star(x) ∧ LargerMass(x) → (ShorterLifespan(x) ∧ MoreRapidFusionProcess(x)))"
    },
    {
        "NL": "Frogs are amphibians, lizards are reptiles, and eagles are birds.",
        "FOL": "∀x ∀y ∀z (Frog(x) ∧ Lizard(y) ∧ Eagle(z) → (Amphibian(x) ∧ Reptile(y) ∧ Bird(z)))"
    },
    {
        "NL": "A country is landlocked if it does not have a coastline and is surrounded by other countries.",
        "FOL": "∀x ∀y (Country(x) ∧ ¬Coastline(x) ∧ SurroundedBy(x, y) ∧ Country(y) → Landlocked(x))"
    },
    {
        "NL": "A document that provides a detailed description of an invention, discloses the method of operation, and establishes legal protection is a patent.",
        "FOL": "∀x∀y∀z (Document(x) ∧ DetailedDescriptionOfInvention(x, y) ∧ DisclosesMethodOfOperation(x) ∧ EstablishesLegalProtection(x, z) → Patent(x))"
    },
    {
        "NL": "An organism is a tree if it does not move, lives on land, and photosynthesizes.",
        "FOL": "∀z (Organism(z) ∧ ¬Move(z) ∧ LivesOnLand(z) ∧ Photosynthesizes(z) → Tree(z))"
    },
    {
        "NL": "Rainforests are rich in biodiversity due to their high annual rainfall, warm climate, and fertile soil.",
        "FOL": "∀x ∀y ∀z (Rainforest(x) ∧ HighAnnualRainfall(x, y) ∧ WarmClimate(x, z) ∧ FertileSoil(x) → RichInBiodiversity(x))"
    },
    {
        "NL": "A beverage is hot or cold.",
        "FOL": "∀x (Beverage(x) → (Hot(x) ∨ Cold(x)))"
    },
    {
        "NL": "A bicycle may have a basket and be electrically powered.",
        "FOL": "∀x (Bicycle(x) → (HasBasket(x) ∧ ElectricallyPowered(x)))"
    },
    {
        "NL": "Unless a planet is neither hot nor cold, it is inhabitable.",
        "FOL": "∀x ((Hot(x) ∨ Cold(x)) → Inhabitable(x))"
    },
    {
        "NL": "A computer program is called open-source software when its source code is freely available for modification and distribution.",
        "FOL": "∀x (ComputerProgram(x) ∧ SourceCodeFreelyAvailable(x) ∧ Modifiable(x) ∧ Distributable(x) → OpenSourceSoftware(x))"
    },
    {
        "NL": "A white dwarf results when a sun-like star exhausts its nuclear fuel and collapses into a dense state.",
        "FOL": "∀x (SunLikeStar(x) ∧ ExhaustsNuclearFuel(x) ∧ CollapsesIntoDenseState(x) → WhiteDwarf(x))"
    },
    {
        "NL": "A document is a biography if it records the personal affairs of a singular entity, transcribed by the entity itself.",
        "FOL": "∀x ∃y (Document(x) ∧ Entity(y) ∧ RecordsPersonalAffairs(x, y) ∧ TranscribedBy(x, y) → Biography(x))"
    },
    {
        "NL": "A beverage is classified as alcoholic if it contains ethanol and its alcohol content is above a certain threshold.",
        "FOL": "∀x (Beverage(x) → (Alcoholic(x) ↔ (ContainsEthanol(x) ∧ AlcoholContentAboveThreshold(x))))"
    },
    {
        "NL": "Climate change exacerbates the frequency and intensity of extreme weather events, such as hurricanes and droughts, leading to increased vulnerability and economic losses.",
        "FOL": "∀x∀y (ClimateChange(x) ∧ ExtremeWeatherEvents(y) → (ExacerbatesFrequencyAndIntensity(x, y) ∧ IncreasesVulnerabilityAndEconomicLosses(y)))"
    },
    {
        "NL": "Mars is smaller than Earth, and Earth is smaller than Jupiter.",
        "FOL": "Smaller(Mars, Earth) ∧ Smaller(Earth, Jupiter)"
    },
    {
        "NL": "A scientific theory is considered valid if it has empirical evidence, withstands rigorous testing, and receives acceptance from the scientific community.",
        "FOL": "∀x ∀y ∀z (Valid(x) → (ScientificTheory(x) ∧ EmpiricalEvidence(x, y) ∧ WithstandsRigorousTesting(x, y) ∧ AcceptanceFromScientificCommunity(x, z)))"
    },
    {
        "NL": "A star is pink if and only if it is not huge and it points to a green or orange object.",
        "FOL": "∀x (Star(x) → ((Pink(x) ↔ ¬Huge(x)) ∧ ∃y (PointsTo(x, y) → (Green(y) ∨ Orange(y)))))"
    },
    {
        "NL": "A museum exhibit is engaging if it presents information in an interactive and visually appealing manner.",
        "FOL": "∀x (MuseumExhibit(x) → (InteractivePresentation(x) ∧ VisuallyAppealing(x) → Engaging(x)))"
    },
    {
        "NL": "An academic degree earned after completing a program of study in a specific field is a bachelor's degree.",
        "FOL": "∀x ∀y (AcademicDegree(x) ∧ ProgramOfStudy(y) ∧ EarnedAfterCompleting(y) ∧ InSpecificField(y) → BachelorsDegree(x))"
    },
    {
        "NL": "None of the teachers in the meeting discussed either calculus or algebra.",
        "FOL": "∀x (Teacher(x) ∧ InMeeting(x) → ¬(Discuss(x, calculus) ∨ Discuss(x, algebra)))"
    },
    {
        "NL": "An event can be fun or boring, but not neither or both.",
        "FOL": "∀x (Event(x) → (Fun(x) ⊕ Boring(x)))"
    },
    {
        "NL": "A book consists of a cover, pages, and content that can be organized into chapters, sections, and paragraphs.",
        "FOL": "∀x (Book(x) → (HasCover(x) ∧ HasPages(x) ∧ HasContent(x) ∧ CanBeOrganizedIntoChaptersSectionsAndParagraphs(x)))"
    },
    {
        "NL": "A person is considered a chef if they prepare meals, have culinary skills and good knives",
        "FOL": "∀x (Person(x) ∧ PrepareMeals(x) ∧ HaveCulinarySkills(x) ∧ HaveGoodKnives(x) → Chef(x))"
    },
    {
        "NL": "If a person is a teacher, they have a teaching degree and work at an educational institution.",
        "FOL": "∀x (Person(x) ∧ Teacher(x) → (HasTeachingDegree(x) ∧ WorksAtEducationalInstitution(x)))"
    },
    {
        "NL": "A book that explores scientific concepts and includes illustrations is more likely to engage readers who have a visual learning style.",
        "FOL": "∀x∀y (Book(x) ∧ ExploresScientificConcepts(x) ∧ IncludesIllustrations(x) → MoreLikelyToEngageVisualLearners(y))"
    },
    {
        "NL": "Some scientists are either physicists or chemists, but not both.",
        "FOL": "∃x (Scientist(x) ∧ (Physicist(x) ⊕ Chemist(x)))"
    },
    {
        "NL": "Not every bird that can sing is rare.",
        "FOL": "¬∀x (Bird(x) ∧ CanSing(x) → Rare(x))"
    },
    {
        "NL": "A novel becomes a bestseller if it receives positive reviews, has strong sales, and generates media attention.",
        "FOL": "∀n ∀r ∀s ∀m (Novel(n) ∧ Review(r) ∧ Sale(s) ∧ Media(m) → (Bestseller(n) ↔ (PositiveReview(n, r) ∧ StrongSales(n, s) ∧ GeneratesAttention(n, m))))"
    },
    {
        "NL": "A painting x is displayed in a museum y if x is exhibited in y and y makes x available for public viewing.",
        "FOL": "∀x ∀y (Painting(x) ∧ Museum(y) ∧ ExhibitedIn(x, y) ∧ AvailableForPublicViewing(x, y) → DisplayedIn(x, y))"
    },
    {
        "NL": "A functional city infrastructure relies on well-maintained roads, efficient public transportation, and accessible public services.",
        "FOL": "∀x (CityInfrastructure(x) → (Functional(x) ↔ (WellMaintainedRoads(x) ∧ EfficientPublicTransportation(x) ∧ AccessiblePublicServices(x))))"
    },
    {
        "NL": "A festival is successful if it attracts a large audience and has either good weather or indoor venues.",
        "FOL": "∀x (Festival(x) → (Successful(x) ↔ (LargeAudience(x) ∧ (GoodWeather(x) ∨ IndoorVenues(x)))))"
    },
    {
        "NL": "A river flows into a lake if the river carries enough water, and the lake can accommodate the incoming water without overflowing.",
        "FOL": "∀x∀y∀z (River(x) ∧ Lake(y) ∧ Water(z) → (FlowsInto(x, y) ↔ (CarriesEnoughWater(x, z) ∧ AccommodatesWithoutOverflowing(y, z))))"
    },
    {
        "NL": "There are dogs that are both playful and belong to a small breed, while all others are serious and belong to a large breed.",
        "FOL": "∀x (Dog(x) → (Playful(x) ∧ SmallBreed(x)) ⊕ (Serious(x) ∧ LargeBreed(x)))"
    },
    {
        "NL": "If a book is interesting, then it has more readers and better reviews.",
        "FOL": "∀x (Book(x) ∧ Interesting(x) → HasMoreReaders(x) ∧ BetterReviews(x))"
    },
    {
        "NL": "A movie becomes a blockbuster when it achieves high box office revenue and gains widespread popularity.",
        "FOL": "∀x ∀y (Movie(x) ∧ HighBoxOfficeRevenue(x) ∧ WidespreadPopularity(y) → Blockbuster(x, y))"
    },
    {
        "NL": "A vehicle can be a car, a bike, or a boat.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Bike(x) ∨ Boat(x)))"
    },
    {
        "NL": "A sculpture is appreciated if it is made of marble or has an intricate design, but not if it is damaged.",
        "FOL": "∀x (Sculpture(x) ∧ ((MadeOfMarble(x) ∨ IntricateDesign(x)) ∧ ¬Damaged(x) → Appreciated(x)))"
    },
    {
        "NL": "A product is eco-friendly if it is made from recycled materials or has a low carbon footprint.",
        "FOL": "∀x (Product(x) ∧ EcoFriendly(x) → (RecycledMaterials(x) ∨ LowCarbonFootprint(x)))"
    },
    {
        "NL": "A cellphone is waterproof if it can be submerged in water without sustaining damage.",
        "FOL": "∀x (Waterproof(x) ↔ (Cellphone(x) ∧ ∀y (Water(y) → SubmergibleWithoutDamage(x, y))))"
    },
    {
        "NL": "Some products are either useful or useless, but not both.",
        "FOL": "∃x (Product(x) ∧ (Useful(x) ⊕ Useless(x)))"
    },
    {
        "NL": "All actors in the play have rehearsed their lines.",
        "FOL": "∀x (ActorInPlay(x) → RehearsedLines(x))"
    },
    {
        "NL": "A restaurant serves food to customers who place an order and wait for their meal to be prepared.",
        "FOL": "∀x ∀y ∀z (Restaurant(x) ∧ Customer(y) ∧ Food(z) ∧ PlacesOrder(y, z) ∧ WaitsForMeal(y) → Serves(x, y, z))"
    },
    {
        "NL": "A drone is an unmanned aerial vehicle that can be controlled remotely or autonomously through an onboard computer system.",
        "FOL": "∀x (Drone(x) → (∃y (UnmannedAerialVehicle(x) ∧ RemotelyControlled(x, y)) ∨ ∃z (OnboardComputerSystem(x) ∧ AutonomouslyControlled(x, z))))"
    },
    {
        "NL": "All doctors who have graduated from a top medical school or have a specialization, but not both, work in a clinic unless they run a hospital, in which case they oversee the hospital.",
        "FOL": "∀x (Doctor(x) ∧ (GraduatedTopMedSchool(x) ⊕ HasSpecialization(x)) → (WorksInClinic(x) ∨ (RunsHospital(x) ∧ OverseesHospital(x))))"
    },
    {
        "NL": "Every teacher who is gentle is liked by all students.",
        "FOL": "∀x (Teacher(x) ∧ Gentle(x) → ∀y (Student(y) → Likes(y, x)))"
    },
    {
        "NL": "If a fruit is ripe and juicy, then it attracts at least one hungry bird, unless it is bitter.",
        "FOL": "∀x ((Ripe(x) ∧ Juicy(x)) → ∃y (Hungry(y) ∧ Attracts(x, y) ∨ Bitter(x)))"
    },
    {
        "NL": "A dish cannot be both spicy and bland.",
        "FOL": "∀x (Dish(x) → ¬(Spicy(x) ∧ Bland(x)))"
    },
    {
        "NL": "To be eligible for a promotion, an employee must have worked at the company for at least two years and have a good performance record, unless they have a recommendation from a supervisor.",
        "FOL": "∀x (Employee(x) ∧ EligibleForPromotion(x) ↔ ((WorkedAtCompanyForTwoYears(x) ∧ GoodPerformanceRecord(x)) ∨ RecommendationFromSupervisor(x)))"
    },
    {
        "NL": "A film wins an award if it is critically acclaimed and has exceptional storytelling or groundbreaking visuals, but not if it plagiarizes or violates copyright laws.",
        "FOL": "∀x (Film(x) ∧ CriticallyAcclaimed(x) ∧ (ExceptionalStorytelling(x) ∨ GroundbreakingVisuals(x)) ∧ ¬Plagiarizes(x) ∧ ¬ViolatesCopyright(x) → WinsAward(x))"
    },
    {
        "NL": "A plant that grows well in partial shade, has colorful flowers, and requires moderate water is suitable for a shaded garden.",
        "FOL": "∀x (Plant(x) ∧ GrowsWellInPartialShade(x) ∧ ColorfulFlowers(x) ∧ RequiresModerateWater(x) → SuitableForShadedGarden(x))"
    },
    {
        "NL": "An athlete excels in competitions when they have consistent training, proper nutrition, and a strong mindset.",
        "FOL": "∀x (Athlete(x) ∧ ConsistentTraining(x) ∧ ProperNutrition(x) ∧ StrongMindset(x) → ExcelsInCompetitions(x))"
    },
    {
        "NL": "A student is writing on a blackboard in the classroom.",
        "FOL": "∃x ∃y (Student(x) ∧ BlackBoard(y) ∧ WritingOn(x, y) ∧ InTheClassroom(x))"
    },
    {
        "NL": "An airline operates a flight route when it has the necessary aircraft, crew, and permission from relevant authorities.",
        "FOL": "∀x ∀y ∀z (Airline(x) ∧ FlightRoute(y) ∧ HasNecessaryAircraft(x, y) ∧ HasNecessaryCrew(x, y) ∧ PermissionFromAuthorities(x, y, z) → Operates(x, y))"
    },
    {
        "NL": "A pen writes on paper, and a highlighter emphasizes text on paper.",
        "FOL": "∀x∀y (Pen(x) ∧ Highlighter(y) → (WritesOnPaper(x) ∧ EmphasizesText(y) ∧ OnPaper(y)))"
    },
    {
        "NL": "A bird is singing on the roof.",
        "FOL": "∃x ∃y (Bird(x) ∧ Roof(y) ∧ SingingOn(x, y))"
    },
    {
        "NL": "A beach is suitable for swimming if the water is clean, calm, and warm.",
        "FOL": "∀x (Beach(x) ∧ CleanWater(x) ∧ CalmWater(x) ∧ WarmWater(x) → SuitableForSwimming(x))"
    },
    {
        "NL": "Roses need sunlight and water to grow, whereas cacti require sunlight but can survive with little water.",
        "FOL": "∀x ∀y (Rose(x) → (NeedsSunlight(x) ∧ NeedsWater(x))) ∧ (Cactus(y) → (NeedsSunlight(y) ∧ CanSurviveWithLittleWater(y)))"
    },
    {
        "NL": "Insects have six legs, while spiders have eight legs.",
        "FOL": "∀x (Insect(x) → SixLegs(x)) ∧ ∀y (Spider(y) → EightLegs(y))"
    },
    {
        "NL": "A device functions correctly if its software is up-to-date, the hardware is functioning properly, and there are no security vulnerabilities.",
        "FOL": "∀x (Device(x) → ((SoftwareUpToDate(x) ∧ HardwareFunctioningProperly(x) ∧ ¬SecurityVulnerabilities(x)) → FunctionsCorrectly(x)))"
    },
    {
        "NL": "If a person is a skilled dancer and performs in shows, they are considered a professional dancer.",
        "FOL": "∀x (SkilledDancerAndPerformsInShows(x) → ProfessionalDancer(x))"
    },
    {
        "NL": "On a weekday, offices operate for eight hours, while on the weekend they operate for five hours.",
        "FOL": "∀x (Weekday(x) → OfficesOperateForEightHours(x)) ∧ ∀y (Weekend(y) → OfficesOperateForFiveHours(y))"
    },
    {
        "NL": "A natural disaster is considered severe if it results in significant property damage, causes numerous fatalities, and disrupts infrastructure.",
        "FOL": "∀x (NaturalDisaster(x) ∧ SignificantPropertyDamage(x) ∧ NumerousFatalities(x) ∧ DisruptsInfrastructure(x) → Severe(x))"
    },
    {
        "NL": "A movie is blockbuster if and only if its plot is interesting and the acting is superb, but it doesn't include too many special effects.",
        "FOL": "∀x (Movie(x) ∧ Blockbuster(x) ↔ (InterestingPlot(x) ∧ SuperbActing(x) ∧ ¬TooManySpecialEffects(x)))"
    },
    {
        "NL": "No actor who stars in both drama and comedy films, unless they have won an Academy award, has featured in more than ten movies or has not featured in a television series.",
        "FOL": "¬∃x (Actor(x) ∧ StarsInDrama(x) ∧ StarsInComedy(x) ∨ WonAcademyAward(x) ∧ (FeaturedInMoreThanTenMovies(x) ∨ ¬FeaturedInTelevisionSeries(x)))"
    },
    {
        "NL": "iPads allow users to browse the internet and download various apps.",
        "FOL": "∀x (iPad(x) → (BrowseInternet(x) ∧ DownloadApps(x)))"
    },
    {
        "NL": "A convex polygon has all its interior angles less than 180 degrees, whereas a concave polygon has at least one interior angle greater than 180 degrees.",
        "FOL": "∀x (ConvexPolygon(x) → ∀y (InteriorAngle(x, y) → LessThan(y, 180))) ∧ (ConcavePolygon(x) → ∃y (InteriorAngle(x, y) ∧ GreaterThan(y, 180)))"
    },
    {
        "NL": "A dish is delicious if it has balanced flavors and an appealing presentation.",
        "FOL": "∀x (Dish(x) ∧ HasBalancedFlavors(x) ∧ HasAppealingPresentation(x) → Delicious(x))"
    },
    {
        "NL": "It is wrong to say that every book is a novel.",
        "FOL": "¬∀x (Book(x) → Novel(x))"
    },
    {
        "NL": "A celestial event that occurs when the moon passes between the sun and the Earth, casting a shadow on the Earth's surface, is called a solar eclipse.",
        "FOL": "∀x (CelestialEvent(x) ∧ MoonPassesBetweenSunAndEarth(x) ∧ CastsShadowOnEarthSurface(x) → SolarEclipse(x))"
    },
    {
        "NL": "An umbrella provides protection from rain or sun.",
        "FOL": "∀x ∀y (Umbrella(x) ∧ (Rain(y) ∨ Sun(y)) → ProvidesProtection(x, y))"
    },
    {
        "NL": "A restaurant is crowded if it has a long waiting list or many customers.",
        "FOL": "∀x (Restaurant(x) ∧ (LongWaitingList(x) ∨ ManyCustomers(x)) → Crowded(x))"
    },
    {
        "NL": "A zoo houses animals from different habitats, such as mammals, birds, and reptiles.",
        "FOL": "∀x (Zoo(x) → (∃y (Mammals(y) ∧ Houses(x, y)) ∧ ∃z (Birds(z) ∧ Houses(x, z)) ∧ ∃w (Reptiles(w) ∧ Houses(x, w))))"
    },
    {
        "NL": "A disease x is contagious if x can be transmitted from one individual to another through direct or indirect contact.",
        "FOL": "∀x (Disease(x) ∧ TransmittedThroughContact(x) → Contagious(x))"
    },
    {
        "NL": "A renewable resource, like wind or solar energy, can generate power without significant pollution, and it contributes to fight global warming.",
        "FOL": "∀x (RenewableResource(x) ∧ (WindEnergy(x) ∨ SolarEnergy(x)) → (GeneratesPower(x) ∧ ¬SignificantPollution(x)) ∧ ContributesFightGlobalWarming(x))"
    },
    {
        "NL": "A cake is delicious if it has a moist texture and the right balance of sweetness.",
        "FOL": "∀x (Cake(x) ∧ MoistTexture(x) ∧ BalancedSweetness(x) → Delicious(x))"
    },
    {
        "NL": "A pilot flies an airplane between two cities if there is an established route and the airplane has enough fuel.",
        "FOL": "∀x∀y∀z∀w (Pilot(x) ∧ Airplane(y) ∧ City(z) ∧ City(w) ∧ EstablishedRoute(z, w) ∧ EnoughFuel(y) → Flies(x, y, z, w))"
    },
    {
        "NL": "Musical instruments can produce sound through vibration, while electronic instruments generate sound using electrical signals.",
        "FOL": "∀x (MusicalInstrument(x) → ((ProducesSoundThroughVibration(x) ∧ ¬ElectronicInstrument(x)) ∨ (GeneratesSoundUsingElectricalSignals(x) ∧ ElectronicInstrument(x))))"
    },
    {
        "NL": "A theme park offers variety of rides if it has roller coasters, water slides, and Ferris wheels with different features.",
        "FOL": "∀x (ThemePark(x) ∧ ∃y ∃z ∃w (RollerCoaster(y) ∧ WaterSlide(z) ∧ FerrisWheel(w) ∧ DifferentFeatures(y, z, w) ∧ Offers(x, y, z, w)) → HasVarietyOfRides(x))"
    },
    {
        "NL": "An academic institution offers undergraduate or graduate programs, or both.",
        "FOL": "∀x (AcademicInstitution(x) → (OffersUndergraduate(x) ∨ OffersGraduate(x)))"
    },
    {
        "NL": "A medical condition can be contagious if it is caused by a transmissible agent, such as a virus or bacteria, and spreads through direct or indirect contact.",
        "FOL": "∀x (MedicalCondition(x) ∧ (TransmissibleAgent(x) ∨ DirectContact(x) ∨ IndirectContact(x)) → Contagious(x))"
    },
    {
        "NL": "A roller coaster consists of a track with twists, turns, and loops that passengers ride on in specially designed carts.",
        "FOL": "∀x∀y∀z (RollerCoaster(x) ∧ Track(y) ∧ Cart(z) → (HasTwists(y) ∧ HasTurns(y) ∧ HasLoops(y) ∧ PassengersRideOn(x, y, z)))"
    },
    {
        "NL": "A room is well-lit if it has enough natural light or artificial light sources.",
        "FOL": "∀x (Room(x) → ((NaturalLight(x) ∧ Enough(x)) ∨ ArtificialLightSources(x) → WellLit(x)))"
    },
    {
        "NL": "A scientist is successful if they publish many papers or get grants, but not if they plagiarize or falsify results.",
        "FOL": "∀x (Scientist(x) → (((PublishesPapers(x) ∨ GetsGrants(x)) ∧ ¬(Plagiarizes(x) ∨ FalsifiesResults(x))) → Successful(x)))"
    },
    {
        "NL": "There is a fruit that some monkeys do not eat.",
        "FOL": "∃x ∃y (Fruit(x) ∧ Monkey(y) ∧ ¬Eat(y, x))"
    },
    {
        "NL": "An airplane is designed for cargo transport if it has a large cargo capacity, reinforced structure, and powerful engines.",
        "FOL": "∀x (Airplane(x) ∧ LargeCargoCapacity(x) ∧ ReinforcedStructure(x) ∧ PowerfulEngines(x) → CargoTransport(x))"
    },
    {
        "NL": "A computer network transmits data between devices through wired or wireless connections.",
        "FOL": "∀x∀y∀z (ComputerNetwork(x) ∧ Device(y) ∧ Device(z) ∧ (WiredConnection(y, z) ∨ WirelessConnection(y, z)) → TransmitsData(x, y, z))"
    },
    {
        "NL": "A book is a biography if it is a written account of another person's life.",
        "FOL": "∀x (Biography(x) ↔ (Book(x) ∧ ∃y (Person(y) ∧ WrittenAccountOfLife(x, y))))"
    },
    {
        "NL": "An object can be a pencil, a car, or a house.",
        "FOL": "∀x (Object(x) → (Pencil(x) ∨ Car(x) ∨ House(x)))"
    },
    {
        "NL": "A computer is portable if it's a laptop instead of a desktop.",
        "FOL": "∀x (Computer(x) ∧ Laptop(x) ∧ ¬Desktop(x) → PortableComputer(x))"
    },
    {
        "NL": "A software application is user-friendly if it has an intuitive interface, provides helpful documentation, and offers responsive customer support.",
        "FOL": "∀x (SoftwareApplication(x) ∧ IntuitiveInterface(x) ∧ HelpfulDocumentation(x) ∧ ResponsiveCustomerSupport(x) → UserFriendly(x))"
    },
    {
        "NL": "A well-insulated building conserves energy, maintains comfortable indoor temperatures, and reduces heating and cooling costs for its occupants.",
        "FOL": "∀x∀y (Building(x) ∧ WellInsulated(x) ∧ ConservesEnergy(x, y) ∧ MaintainsComfortableIndoorTemperatures(x, y) → ReducesHeatingAndCoolingCosts(x, y))"
    },
    {
        "NL": "Carnivorous plants obtain nutrients primarily by consuming insects and small animals, while photosynthetic plants obtain nutrients through photosynthesis.",
        "FOL": "∀x (CarnivorousPlant(x) → ObtainsNutrientsByConsumingInsectsAndSmallAnimals(x)) ∧ ∀y (PhotosyntheticPlant(y) → ObtainsNutrientsThroughPhotosynthesis(y))"
    },
    {
        "NL": "All chefs who cook with dedication have a successful restaurant.",
        "FOL": "∀x (Chef(x) ∧ CookWithDedication(x) → HaveSuccessfulRestaurant(x))"
    },
    {
        "NL": "A cat has fur, meows, and hunts, while a dog has fur, barks, and does not hunt.",
        "FOL": "∀x ∀y (Cat(x) ∧ Dog(y) → ((HasFur(x) ∧ Meows(x) ∧ Hunts(x)) ∧ (HasFur(y) ∧ Barks(y) ∧ ¬Hunts(y))))"
    },
    {
        "NL": "A chef is cooking a soup in the kitchen.",
        "FOL": "∃x ∃y ∃z (Chef(x) ∧ Soup(y) ∧ Kitchen(z) ∧ CookingAt(x, y) ∧ At(x, z) ∧ InTheKitchen(x))"
    },
    {
        "NL": "A gadget is portable if it's lightweight or compact.",
        "FOL": "∀x (Gadget(x) ∧ (Lightweight(x) ∨ Compact(x)) → Portable(x))"
    },
    {
        "NL": "A poem is loved if it has emotional depth, perfect rhythm, and expressive language.",
        "FOL": "∀x (Poem(x) ∧ HasEmotionalDepth(x) ∧ HasPerfectRhythm(x) ∧ HasExpressiveLanguage(x) → Loved(x))"
    },
    {
        "NL": "A plant can be a flowering type, exhibit vibrant blooms, and be a gardener's delight, or it can be a succulent, display minimal needs, and suit indoor conditions.",
        "FOL": "∀x (Plant(x) → ((Flowering(x) ∧ ExhibitsVibrantBlooms(x) ∧ GardenersDelight(x)) ⊕ (Succulent(x) ∧ DisplaysMinimalNeeds(x) ∧ SuitsIndoorConditions(x))))"
    },
    {
        "NL": "Instruments can be played with hands or with a bow.",
        "FOL": "∀x (Instrument(x) → (PlayedWithHands(x) ∨ PlayedWithBow(x)))"
    },
    {
        "NL": "If a restaurant offers vegetarian options and maintains a clean environment, it will attract vegetarian customers.",
        "FOL": "∀x∀y (Restaurant(x) ∧ OffersVegetarianOptions(x) ∧ CleanEnvironment(x) → AttractsVegetarianCustomers(y))"
    },
    {
        "NL": "All dogs bark loudly or are afraid of cats.",
        "FOL": "∀x (Dog(x) → (BarksLoudly(x) ∨ AfraidOfCats(x)))"
    },
    {
        "NL": "A coat is suitable for cold weather when it is both insulated and wind-resistant.",
        "FOL": "∀x (Coat(x) ∧ Insulated(x) ∧ WindResistant(x) → SuitableForColdWeather(x))"
    },
    {
        "NL": "A circle is not purple and does not point to any yellow object.",
        "FOL": "∀x (Circle(x) → (¬Purple(x) ∧ ¬∃y (Yellow(y) ∧ PointsTo(x, y))))"
    },
    {
        "NL": "A chair is comfortable with cushions and a backrest.",
        "FOL": "∀x (Chair(x) ∧ Cushions(x) ∧ Backrest(x) → Comfortable(x))"
    },
    {
        "NL": "An award-winning movie captivates audiences with exceptional acting, an intriguing plot, and skillful cinematography.",
        "FOL": "∀x (Movie(x) ∧ ExceptionalActing(x) ∧ IntriguingPlot(x) ∧ SkillfulCinematography(x) → AwardWinning(x))"
    },
    {
        "NL": "A smartphone connects to the internet through Wi-Fi or cellular networks.",
        "FOL": "∀x∀y∀z (Smartphone(x) ∧ (WiFi(y) ∨ CellularNetwork(z)) ∧ ConnectsToInternet(x, y, z) → InternetAccess(x))"
    },
    {
        "NL": "An escalator moves people between floors.",
        "FOL": "∀x (Escalator(x) → MovesPeopleBetweenFloors(x))"
    },
    {
        "NL": "No one in the hotel knows either Johnson or Carter.",
        "FOL": "¬∃x (Person(x) ∧ InHotel(x) ∧ (Know(x, johnson) ∨ Know(x, carter)))"
    },
    {
        "NL": "A computer with a solid-state drive has faster read and write speeds.",
        "FOL": "∀x (Computer(x) ∧ SolidStateDrive(x) → FasterReadWriteSpeeds(x))"
    },
    {
        "NL": "An individual can be an athlete, artist, or scientist.",
        "FOL": "∀x (Individual(x) → (Athlete(x) ∨ Artist(x) ∨ Scientist(x)))"
    },
    {
        "NL": "There exist doctors who respect only those engineers who are more experienced than them.",
        "FOL": "∃x ∀y (Doctor(x) ∧ Engineer(y) ∧ MoreExperiencedThan(y, x) → Respect(x, y))"
    },
    {
        "NL": "A boat floats on water if it has a buoyant design that displaces enough water.",
        "FOL": "∀x (Boat(x) ∧ BuoyantDesign(x) ∧ DisplacesEnoughWater(x) → FloatsOnWater(x))"
    },
    {
        "NL": "An artist creates paintings on canvas.",
        "FOL": "∀x∀y (Artist(x) ∧ Canvas(y) → CreatesPaintingsOn(x, y))"
    },
    {
        "NL": "A celestial body that orbits another celestial body is called a satellite.",
        "FOL": "∀x ∀y (CelestialBody(x) ∧ CelestialBody(y) ∧ Orbits(x, y) → Satellite(x))"
    },
    {
        "NL": "An astronomical body is a satellite of another if it orbits the larger body, is held in place by gravitational forces, and has a stable trajectory.",
        "FOL": "∀x∀y (AstronomicalBody(x) ∧ AstronomicalBody(y) ∧ OrbitsLargerBody(x, y) ∧ GravitationalForces(x, y) ∧ StableTrajectory(x, y) → Satellite(x, y))"
    },
    {
        "NL": "Every movie that is exciting becomes a blockbuster.",
        "FOL": "∀x (Movie(x) ∧ Exciting(x) → Blockbuster(x))"
    },
    {
        "NL": "In a tropical forest ecosystem, trees with large leaves provide shade for ferns and mosses, while trees bearing fruit supply nourishment for monkeys and birds.",
        "FOL": "∀x ∀y (TropicalForest(x) ∧ (TreeWithLargeLeaves(x, y) ∧ (ShadeForFerns(y) ∧ ShadeForMosses(y)) ∨ FruitBearingTree(x, y) ∧ (NourishmentForMonkeys(y) ∧ NourishmentForBirds(y))))"
    },
    {
        "NL": "If none of the apples are fresh, then there's a cake that every cake is made of.",
        "FOL": "¬∀x (Apple(x) → Fresh(x)) → ∃y (Cake(y) ∧ ∀z (Cake(z) → MadeOf(z, y)))"
    },
    {
        "NL": "No machine is both efficient and unnecessary.",
        "FOL": "¬∃x (Machine(x) ∧ Efficient(x) ∧ Unnecessary(x))"
    },
    {
        "NL": "A painting is valuable if it is created by a renowned artist, well-preserved, and has historical significance.",
        "FOL": "∀x (Painting(x) ∧ CreatedByRenownedArtist(x) ∧ WellPreserved(x) ∧ HistoricallySignificant(x) → Valuable(x))"
    },
    {
        "NL": "A machine that separates components of a liquid mixture based on their densities by spinning the mixture at high speeds is a centrifuge.",
        "FOL": "∀x (Machine(x) ∧ SeparatesComponentsOfLiquid(x) ∧ BasedOnDensity(x) ∧ SpinsAtHighSpeeds(x) → Centrifuge(x))"
    },
    {
        "NL": "If an object is a smartphone, it must be a mobile device that combines the functions of a cellphone, computer, and personal digital assistant, often featuring internet access and touchscreen display.",
        "FOL": "∀x ((MobileDevice(x) ∧ CombinesFunctionsOfCellphoneComputerAndPDA(x) ∧ FeaturesInternetAccessAndTouchscreenDisplay(x)) → Smartphone(x))"
    },
    {
        "NL": "A pencil is a writing instrument made of wood and graphite, but it is not a pen.",
        "FOL": "∀x (Pencil(x) ↔ (WritingInstrument(x) ∧ MadeOfWood(x) ∧ MadeOfGraphite(x) ∧ ¬Pen(x)))"
    },
    {
        "NL": "A game is exciting if and only if its gameplay is engaging and the graphics are top-notch, but it doesn't have excessive ads.",
        "FOL": "∀x (Game(x) → (Exciting(x) ↔ (EngagingGameplay(x) ∧ TopNotchGraphics(x) ∧ ¬ExcessiveAds(x))))"
    },
    {
        "NL": "A software company develops apps, while a hardware company manufactures computers.",
        "FOL": "∃x ∃y (SoftwareCompany(x) ∧ App(y) ∧ Develop(x, y)) ∧ ∃z ∃w (HardwareCompany(z) ∧ Computer(w) ∧ Manufacture(z, w))"
    },
    {
        "NL": "An organism that can synthesize its own food using light, water, and carbon dioxide, and produces oxygen as a byproduct, is called a photoautotroph.",
        "FOL": "∀x (Organism(x) ∧ SynthesizesOwnFood(x) ∧ UsesLightWaterAndCarbonDioxide(x) ∧ ProducesOxygenAsByproduct(x) → Photoautotroph(x))"
    },
    {
        "NL": "A writer composes a story using characters and a plot if the characters are developed and the plot is well-structured.",
        "FOL": "∀x ∀y ∀z (Writer(x) ∧ Story(y) ∧ Characters(z) ∧ DevelopedCharacters(y, z) ∧ WellStructuredPlot(y) → ComposesStory(x, y, z))"
    },
    {
        "NL": "A person is considered an actuary if they analyze financial risks, often in the context of insurance and pension plans.",
        "FOL": "∀x (Person(x) ∧ AnalyzesFinancialRisks(x) ∧ WorksWithInsuranceAndPensionPlans(x) → Actuary(x))"
    },
    {
        "NL": "A bioreactor uses microorganisms or enzymes to break down pollutants in contaminated water or soil.",
        "FOL": "∀x ∀y ∀z (Bioreactor(x) ∧ Microorganism(m) ∧ Enzyme(e) ∧ Pollutant(y) ∧ ContaminatedWater(w) ∧ ContaminatedSoil(z) → BreaksDownPollutants(x, m, e, y, w, z))"
    },
    {
        "NL": "A flower blooms in response to specific environmental conditions, such as sunlight, temperature, and soil moisture.",
        "FOL": "∀x∀y∀z (Flower(x) ∧ EnvironmentalConditions(y) ∧ (Sunlight(y) ∧ Temperature(y) ∧ SoilMoisture(y)) → BloomsInResponseTo(x, z))"
    },
    {
        "NL": "A bicycle has two wheels, is human-powered, and is not an electric scooter.",
        "FOL": "∀x (Bicycle(x) → (NumberOfWheels(x, 2) ∧ HumanPowered(x) ∧ ¬ElectricScooter(x)))"
    },
    {
        "NL": "A government collects taxes from its citizens and uses the revenue to fund public services and infrastructure.",
        "FOL": "∀x∀y (Government(x) ∧ Citizen(y) → (CollectsTaxes(x, y) ∧ FundsPublicServices(x) ∧ FundsInfrastructure(x)))"
    },
    {
        "NL": "A circle is round, a square has equal sides, and a triangle is a polygon with three angles.",
        "FOL": "∀x∀y∀z (Circle(x) → Round(x)) ∧ (Square(y) → EqualSides(y)) ∧ (Triangle(z) → (Polygon(z) ∧ Angles(z, 3)))"
    },
    {
        "NL": "A movie is a blockbuster if it has a large budget and either positive reviews or high box office earnings.",
        "FOL": "∀x (Movie(x) → (Blockbuster(x) ↔ (LargeBudget(x) ∧ (PositiveReviews(x) ∨ HighBoxOfficeEarnings(x)))))"
    },
    {
        "NL": "A fruit is ripe if it is sweet and has a soft texture.",
        "FOL": "∀x (Fruit(x) ∧ Sweet(x) ∧ SoftTexture(x) → Ripe(x))"
    },
    {
        "NL": "A substance is either acidic, basic, or neutral.",
        "FOL": "∀x (Substance(x) → (Acidic(x) ⊕ Basic(x) ⊕ Neutral(x)))"
    },
    {
        "NL": "A person is considered a pupil if they are enrolled in elementary or high school",
        "FOL": "∀x (Person(x) ∧ (EnrolledInElementarySchool(x) ∨ EnrolledInHighSchool(x)) → Pupil(x))"
    },
    {
        "NL": "Writers are not always published.",
        "FOL": "∃x (Writer(x) ∧ ¬Published(x))"
    },
    {
        "NL": "A volcano is active if it has erupted recently or is showing signs of unrest.",
        "FOL": "∀x (Volcano(x) → (IsActive(x) ↔ (EruptedRecently(x) ∨ ShowsUnrest(x))))"
    },
    {
        "NL": "Not all wooden objects float, and not all metal objects sink.",
        "FOL": "¬∀x ((Wooden(x) → Floats(x)) ∧ (Metal(x) → ¬Floats(x)))"
    },
    {
        "NL": "A river where multiple ducks swim is real.",
        "FOL": "∃x ∃y (River(x) ∧ Duck(y) ∧ SwimIn(y, x))"
    },
    {
        "NL": "All dogs are friendly animals, or some animals are not good pets.",
        "FOL": "∀x (Dog(x) → FriendlyAnimal(x)) ∨ ∃y (Animal(y) ∧ ¬GoodPet(y))"
    },
    {
        "NL": "There are students who are diligent.",
        "FOL": "∃x (Student(x) ∧ Diligent(x))"
    },
    {
        "NL": "A photographer captures images using a camera.",
        "FOL": "∀x ∀y ∀z (Photographer(x) ∧ Image(y) ∧ Camera(z) → Capture(x, y, z))"
    },
    {
        "NL": "A pharmaceutical company researches, develops, and markets some drugs, fulfilling various patient needs.",
        "FOL": "∀x ∃y ∃z (PharmaCompany(x) → Drug(y) ∧ PatientNeed(z) ∧ Researches(x, y) ∧ Develops(x, y) ∧ Markets(x, y) ∧ Fulfills(x, z))"
    },
    {
        "NL": "During photosynthesis, plants use sunlight, water, and carbon dioxide to produce oxygen and glucose, which they use for energy.",
        "FOL": "∀x (Photosynthesis(x) → (Plant(x) ∧ UsesSunlight(x) ∧ UsesWater(x) ∧ UsesCarbonDioxide(x) ∧ ProducesOxygen(x) ∧ ProducesGlucose(x) ∧ UsesForEnergy(x)))"
    },
    {
        "NL": "If a person works with electrical systems and equipment, they are considered an electrician.",
        "FOL": "∀x (WorksWithElectricalSystemsAndEquipment(x) → Electrician(x))"
    },
    {
        "NL": "Eating fruits and vegetables regularly contributes to a healthier lifestyle.",
        "FOL": "∀x (ConsumesRegularly(x, Fruits) ∧ ConsumesRegularly(x, Vegetables) → HealthierLifestyle(x))"
    },
    {
        "NL": "A vegan diet excludes animal products, such as meat, dairy, and eggs, while including plant-based foods, like fruits, vegetables, and grains.",
        "FOL": "∀x∀y∀z (VeganDiet(x) → (ExcludesAnimalProducts(x, y, z) ∧ IncludesPlantBasedFoods(x, fruits, vegetables, grains)))"
    },
    {
        "NL": "A vehicle can be acclaimed for its innovation, its performance, or its aesthetics, but not all three simultaneously.",
        "FOL": "∀x (Vehicle(x) ∧ Acclaimed(x) → (AcclaimedForInnovation(x) ⊕ AcclaimedForPerformance(x) ⊕ AcclaimedForAesthetics(x)))"
    },
    {
        "NL": "An animal can survive in an arctic environment if it has thick fur, can find food, and can maintain its body temperature.",
        "FOL": "∀x (Animal(x) ∧ SurvivesInArcticEnvironment(x) ↔ (ThickFur(x) ∧ CanFindFood(x) ∧ MaintainsBodyTemperature(x)))"
    },
    {
        "NL": "Violins are played with a bow, producing sounds from their strings, and are used in orchestras.",
        "FOL": "∀x∀y (Violin(x) ∧ PlayedWithBow(x) → (ProducesSoundFromStrings(x) ∧ UsedIn(x, y, orchestras)))"
    },
    {
        "NL": "Trees absorb carbon dioxide and release oxygen during photosynthesis.",
        "FOL": "∀x (Tree(x) → (Absorbs(x, carbonDioxide) ∧ Releases(x, oxygen) ∧ Photosynthesis(x)))"
    },
    {
        "NL": "A building is considered a skyscraper if it has a significant height and multiple floors.",
        "FOL": "∀x (Building(x) ∧ SignificantHeight(x) ∧ MultipleFloors(x) → Skyscraper(x))"
    },
    {
        "NL": "A successful startup either has innovative ideas and a strong team or receives substantial funding and has effective marketing.",
        "FOL": "∀x (Startup(x) ∧ ((InnovativeIdeas(x) ∧ StrongTeam(x)) ∨ (SubstantialFunding(x) ∧ EffectiveMarketing(x))) → Successful(x))"
    },
    {
        "NL": "A garden is irrigated by a sprinkler system when it distributes water to the plants and covers the entire area.",
        "FOL": "∀x∀y∀z (Garden(x) ∧ SprinklerSystem(y) ∧ Plants(z) ∧ DistributesWater(y, z) ∧ CoversEntireArea(y, x) → Irrigated(x, y))"
    },
    {
        "NL": "A climate pattern is intense if it includes high temperatures, severe winds, and the potential for heat waves or desertification.",
        "FOL": "∀x (ClimatePattern(x) ∧ IncludesHighTemperatures(x) ∧ IncludesSevereWinds(x) ∧ (PotentialForHeatWaves(x) ∨ PotentialForDesertification(x)) → Intense(x))"
    },
    {
        "NL": "A student is a brilliant if he shows consistent hard work, excellent results, and exhibits leadership qualities or creativity.",
        "FOL": "∀x (Student(x) ∧ ShowsHardwork(x) ∧ ExcellentResults(x) ∧ (LeadershipQualities(x) ∨ Creativity(x)) → Brilliant(x))"
    },
    {
        "NL": "A train transports passengers and goods on tracks.",
        "FOL": "∀x (Train(x) → TransportsPassengersAndGoodsOnTracks(x))"
    },
    {
        "NL": "There is no highest prime number, and no lowest prime number.",
        "FOL": "∀x (PrimeNumber(x) → (∃y (PrimeNumber(y) ∧ Higher(y, x)) ∧ ∃z (PrimeNumber(z) ∧ Lower(z, x))))"
    },
    {
        "NL": "Drones are used for aerial photography, surveillance, and package delivery.",
        "FOL": "∀x (Drone(x) → (UsedFor(y) ∧ AerialPhotography(y) ∨ Surveillance(y) ∨ PackageDelivery(y) ∧ In(x, y)))"
    },
    {
        "NL": "A submarine navigates underwater, using sonar technology to detect objects and avoid obstacles.",
        "FOL": "∀x (Submarine(x) → (NavigatesUnderwater(x) ∧ UsesSonarTechnology(x) ∧ DetectsObjectsAndAvoidsObstacles(x)))"
    },
    {
        "NL": "Pharmacists dispense medication, provide advice, and monitor patient health.",
        "FOL": "∀x∀y (Pharmacist(x) ∧ Patient(y) → (DispensesMedication(x) ∧ ProvidesAdvice(x) ∧ MonitorsHealth(x, y)))"
    },
    {
        "NL": "An item can be fragile or sturdy, but not simultaneously.",
        "FOL": "∀x (Item(x) → (Fragile(x) ⊕ Sturdy(x)))"
    },
    {
        "NL": "An animal is a carnivore if it primarily eats other animals.",
        "FOL": "∀x (Carnivore(x) ↔ (Animal(x) ∧ ∀y (Eats(x, y) → Animal(y))))"
    },
    {
        "NL": "A doctor diagnoses illnesses or prescribes medications.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Illness(y) → (Diagnoses(x, y) ∨ PrescribesMedication(x, y)))"
    },
    {
        "NL": "A painting has a canvas and paint.",
        "FOL": "∀x (Painting(x) → (∃y CanvasOf(x, y) ∧ ∃z PaintOn(x, z)))"
    },
    {
        "NL": "A vehicle has wheels and a propulsion system.",
        "FOL": "∀x (Vehicle(x) → (∃y WheelsOf(x, y) ∧ ∃z PropulsionSystemOf(x, z)))"
    },
    {
        "NL": "John is not a teacher or Alice is not a dancer.",
        "FOL": "¬Teacher(john) ∨ ¬Dancer(alice)"
    },
    {
        "NL": "A dog is kid-friendly if and only if it is not fierce and noisy.",
        "FOL": "∀x (Dog(x) → (KidFriendly(x) ↔ ¬Fierce(x) ∧ ¬Noisy(x)))"
    },
    {
        "NL": "There is a chef who despises no dish he creates.",
        "FOL": "∃x (Chef(x) ∧ ∀y (Dish(y) ∧ Create(x, y) → ¬Despise(x, y)))"
    },
    {
        "NL": "A cyclist starts from point A and finishes at point B without stopping at any other points.",
        "FOL": "∃x ∃y ∃z (Cyclist(x) ∧ PointA(y) ∧ PointB(z) → StartsFrom(x, y) ∧ FinishesAt(x, z) ∧ ¬∃w (Point(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "Not every artist who specializes in impressionism or surrealism has exhibited in a gallery or published a book on the topic.",
        "FOL": "¬∀x (Artist(x) ∧ (SpecializesImpressionism(x) ∨ SpecializesSurrealism(x)) → (ExhibitedInGallery(x) ∨ PublishedBookOnTopic(x)))"
    },
    {
        "NL": "A good conductor of heat allows heat to flow through it easily, while a poor conductor restricts heat flow.",
        "FOL": "∀x (GoodConductorOfHeat(x) → AllowsHeatFlow(x)) ∧ ∀y (PoorConductor(y) → RestrictsHeatFlow(y))"
    },
    {
        "NL": "A scientist conducts research, an engineer designs and builds structures, and an artist creates visual or performing art.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Engineer(y) ∧ Artist(z) → (ConductsResearch(x) ∧ DesignsStructures(y) ∧ BuildsStructures(y) ∧ CreatesVisualOrPerformingArt(z)))"
    },
    {
        "NL": "An island is uninhabited if it has no permanent residents and lacks infrastructure for human habitation.",
        "FOL": "∀x (Island(x) ∧ Uninhabited(x) ↔ (NoPermanentResidents(x) ∧ LacksInfrastructure(x)))"
    },
    {
        "NL": "A student is awarded a scholarship if they demonstrate academic excellence, financial need, and extracurricular involvement.",
        "FOL": "∀x ∀y (Student(x) ∧ Scholarship(y) ∧ DemonstratesAcademicExcellence(x) ∧ DemonstratesFinancialNeed(x) ∧ InvolvedInExtracurricularActivities(x) → Awarded(x, y))"
    },
    {
        "NL": "An organism that can synthesize its own food using sunlight as an energy source, releases oxygen as a byproduct, and is typically green in color is a photosynthetic plant.",
        "FOL": "∀x (Organism(x) ∧ SynthesizesOwnFood(x) ∧ UsesSunlight(x) ∧ ReleasesOxygen(x) ∧ TypicallyGreen(x) → PhotosyntheticPlant(x))"
    },
    {
        "NL": "Certain paintings are abstract, colorful, and not for sale.",
        "FOL": "∃x (Painting(x) ∧ Abstract(x) ∧ Colorful(x) ∧ ¬ForSale(x))"
    },
    {
        "NL": "There is no number that every fruit corresponds to if and only if there is a number that corresponds to no fruit.",
        "FOL": "¬∃x (Number(x) ∧ ∀y (Fruit(y) → Corresponds(y, x))) ↔ ∃z (Number(z) ∧ ∀w (Fruit(w) → ¬Corresponds(z, w)))"
    },
    {
        "NL": "A body of water that is surrounded by land, contains freshwater, and is larger than a pond is a lake if it is not connected to the ocean.",
        "FOL": "∀x (BodyOfWater(x) ∧ SurroundedByLand(x) ∧ ContainsFreshwater(x) ∧ LargerThanPond(x) ∧ NotConnectedToOcean(x) → Lake(x))"
    },
    {
        "NL": "A bakery sells bread, pastries, and cakes, but not all three items are always available.",
        "FOL": "∀x (Bakery(x) → ((SellsBread(x) ∨ SellsPastries(x) ∨ SellsCakes(x)) ∧ ¬(SellsBread(x) ∧ SellsPastries(x) ∧ SellsCakes(x))))"
    },
    {
        "NL": "Jupiter is a gas giant, Mars is a terrestrial planet, and Saturn has rings.",
        "FOL": "∀x ∀y ∀z (Jupiter(x) ∧ Mars(y) ∧ Saturn(z) → (GasGiant(x) ∧ TerrestrialPlanet(y) ∧ HasRings(z)))"
    },
    {
        "NL": "An island is uninhabited when it has no human residents and no domesticated animals.",
        "FOL": "∀x (Island(x) ∧ ¬∃y (Human(y) ∧ Resident(y, x)) ∧ ¬∃z (DomesticatedAnimal(z) ∧ Present(z, x)) → Uninhabited(x))"
    },
    {
        "NL": "A substance that conducts electricity and has a shiny appearance is typically a metal.",
        "FOL": "∀x (Substance(x) ∧ ConductsElectricity(x) ∧ ShinyAppearance(x) → Metal(x))"
    },
    {
        "NL": "A plant that grows in arid environments, has specialized adaptations for water storage, and can survive long periods of drought is a cactus.",
        "FOL": "∀x (Plant(x) ∧ GrowsInAridEnvironments(x) ∧ AdaptedForWaterStorage(x) ∧ SurvivesLongPeriodsOfDrought(x) → Cactus(x))"
    },
    {
        "NL": "A country is prosperous if it has a strong economy, low unemployment rate, and high life expectancy.",
        "FOL": "∀x (Prosperous(x) ↔ (Country(x) ∧ ∃y (StrongEconomy(y) ∧ Has(x, y)) ∧ ∃z (LowUnemploymentRate(z) ∧ Has(x, z)) ∧ ∃w (HighLifeExpectancy(w) ∧ Has(x, w))))"
    },
    {
        "NL": "Any engineer who has worked for over a decade and either designs new technology or conducts tech studies, but not both, must either have received an engineering award or a member of international engineering society.",
        "FOL": "∀x (Engineer(x) ∧ WorkedForOverADecade(x) ∧ (DesignsNewTechnology(x) ⊕ ConductsTechStudies(x)) → (ReceivedEngineeringAward(x) ∨ MemberOfInternationalEngineeringSociety(x)))"
    },
    {
        "NL": "Some dishes can be made with beef, while others are made with chicken.",
        "FOL": "∀x (Dish(x) → MadeWithBeef(x) ⊕ MadeWithChicken(x))"
    },
    {
        "NL": "A robot can navigate a maze if it has a functioning sensor system, can process the gathered data, and can adapt its movement based on the data.",
        "FOL": "∀x∀y∀z (Robot(x) ∧ Maze(y) ∧ SensorSystem(z) ∧ CanNavigate(x, y) ↔ (FunctioningSensorSystem(x, z) ∧ ProcessesData(x, z) ∧ AdaptsMovement(x, z)))"
    },
    {
        "NL": "A bicycle requires maintenance if the tires are flat or the chain is rusty.",
        "FOL": "∀x (Bicycle(x) → (RequiresMaintenance(x) ↔ (FlatTires(x) ∨ RustyChain(x))))"
    },
    {
        "NL": "A cat is fluffy, and a dog is loyal.",
        "FOL": "∃x (Fluffy(x) ∧ Cat(x)) ∧ ∃x (Loyal(x) ∧ Dog(x))"
    },
    {
        "NL": "A meal is satisfying if it's tasty, nutritious, and filling.",
        "FOL": "∀x (Meal(x) → ((Tasty(x) ∧ Nutritious(x) ∧ Filling(x)) → Satisfying(x)))"
    },
    {
        "NL": "No dogs are barking.",
        "FOL": "¬∃x (Dog(x) ∧ Barking(x))"
    },
    {
        "NL": "A person who volunteers their time and resources to help others is seen as altruistic.",
        "FOL": "∀x (VolunteersToHelpOthers(x) → Altruistic(x))"
    },
    {
        "NL": "No one in the choir has sung with either Jackson or Harris.",
        "FOL": "¬∃x (Singer(x) ∧ InChoir(x) ∧ (SangWith(x, jackson) ∨ SangWith(x, harris)))"
    },
    {
        "NL": "Something is either a beautiful flower or a nasty weed, but not both.",
        "FOL": "∀x ((Beautiful(x) ∧ Flower(x)) ⊕ (Nasty(x) ∧ Weed(x)))"
    },
    {
        "NL": "It is untrue that a book is interesting if it was written by a famous author.",
        "FOL": "¬∀x ∃y (Famous(y) ∧ WrittenBy(x, y) → Interesting(x))"
    },
    {
        "NL": "A city's transportation system is effective when it offers a variety of options, operates on time, and reduces traffic congestion.",
        "FOL": "∀x (CityTransportationSystem(x) → (Effective(x) ↔ (VarietyOfOptions(x) ∧ OperatesOnTime(x) ∧ ReducesTrafficCongestion(x))))"
    },
    {
        "NL": "A cake that isn't chocolate-flavored, fruity, or vegan might not be popular at a party.",
        "FOL": "∀x (Cake(x) ∧ (¬ChocolateFlavored(x) ∨ ¬Fruity(x) ∨ ¬Vegan(x)) → ¬PopularAtParty(x))"
    },
    {
        "NL": "An artwork can be a painting, sculpture, or photograph, but not a mix of these.",
        "FOL": "∀x (Artwork(x) → (Painting(x) ⊕ Sculpture(x) ⊕ Photograph(x)))"
    },
    {
        "NL": "A workout can focus on strength, flexibility, or endurance, but not multiple focuses at the same time.",
        "FOL": "∀x (Workout(x) → ((Strength(x) ∨ Flexibility(x) ∨ Endurance(x)) ∧ ¬(Strength(x) ∧ Flexibility(x)) ∧ ¬(Strength(x) ∧ Endurance(x)) ∧ ¬(Flexibility(x) ∧ Endurance(x))))"
    },
    {
        "NL": "A shop sells clothing and has a physical location, or it sells electronics and operates online.",
        "FOL": "∀x (Shop(x) → ((SellsClothing(x) ∧ HasPhysicalLocation(x)) ∨ (SellsElectronics(x) ∧ OperatesOnline(x))))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the earth and the sun, blocking the sun's light.",
        "FOL": "∀x (SolarEclipse(x) → (∃y∃z∃w (Moon(y) ∧ Earth(z) ∧ Sun(w) ∧ PassesBetween(y, z, w) ∧ BlocksLight(w))))"
    },
    {
        "NL": "Owls are nocturnal and have a keen sense of hearing, which helps them hunt their prey in the dark.",
        "FOL": "∀x∀y (Owl(x) ∧ Prey(y) → (Nocturnal(x) ∧ KeenSenseOfHearing(x) ∧ HuntsInDark(x, y)))"
    },
    {
        "NL": "A type of organism that can photosynthesize, usually possesses chlorophyll, and is the primary producer of organic matter in an ecosystem is a plant.",
        "FOL": "∀x∀y∀z (Organism(x) ∧ CanPhotosynthesize(x) ∧ UsuallyPossessesChlorophyll(x, y) ∧ PrimaryProducerOfOrganicMatterInEcosystem(x, z) → Plant(x))"
    },
    {
        "NL": "An apple falls from a tree, while a coin falls from a pocket.",
        "FOL": "∀x (Apple(x) → FallsFromTree(x)) ∧ ∀y (Coin(y) → FallsFromPocket(y))"
    },
    {
        "NL": "Every employee who respects a person is respected by someone.",
        "FOL": "∀x (Employee(x) ∧ ∃y (Person(y) ∧ Respects(x, y)) → ∃z (Person(z) ∧ Respects(z, x)))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains ethanol and has a specific alcohol content.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) ∧ SpecificAlcoholContent(x) → Alcoholic(x))"
    },
    {
        "NL": "A journalist reports news, an editor reviews and approves articles, and a photographer captures images.",
        "FOL": "∀x∀y∀z (Journalist(x) ∧ Editor(y) ∧ Photographer(z) → (ReportsNews(x) ∧ ReviewsArticles(y) ∧ ApprovesArticles(y) ∧ CapturesImages(z)))"
    },
    {
        "NL": "An ice cream melts if the temperature is above its melting point.",
        "FOL": "∀x (IceCream(x) ∧ TemperatureAboveMeltingPoint(x) → Melts(x))"
    },
    {
        "NL": "A bee collects pollen from flowers and makes honey.",
        "FOL": "∀x∀y (Bee(x) ∧ Flower(y) → CollectsPollenFrom(x, y) ∧ MakesHoney(x))"
    },
    {
        "NL": "A place is considered a restaurant if it prepares and serves food and beverages to customers in exchange for money.",
        "FOL": "∀x (Place(x) ∧ PreparesAndServesFoodAndBeverages(x) ∧ ToCustomers(x) ∧ InExchangeForMoney(x) → Restaurant(x))"
    },
    {
        "NL": "Successful parenting includes discipline, love, and good communication.",
        "FOL": "∀x (Parenting(x) ∧ Discipline(x) ∧ Love(x) ∧ GoodCommunication(x) → Successful(x))"
    },
    {
        "NL": "An umbrella is used to protect from rain or sun.",
        "FOL": "∀x (Umbrella(x) → (ProtectsFromRain(x) ∨ ProtectsFromSun(x)))"
    },
    {
        "NL": "A plant can be a tree, a shrub, or a vine based on its growth habit.",
        "FOL": "∀x (Plant(x) → (Tree(x) ∨ Shrub(x) ∨ Vine(x)))"
    },
    {
        "NL": "An art exhibition displays a painting when it is part of the curated collection, insured, and installed in the appropriate gallery space.",
        "FOL": "∀x ∀y ∀z (ArtExhibition(x) ∧ Painting(y) ∧ CuratedCollection(y, x) ∧ Insured(y) ∧ InstalledInGallerySpace(y, z) → Displays(x, y, z))"
    },
    {
        "NL": "If some instruments cannot play, then all musicians are talented or some concerts are too noisy.",
        "FOL": "∃x (Instrument(x) ∧ ¬CanPlay(x)) → ∀y (Musician(y) ∨ Talented(y)) ∨ ∃z (Concert(z) ∧ Noisy(z))"
    },
    {
        "NL": "A storm is classified as a hurricane if it forms over warm ocean waters and has sustained winds of at least 74 miles per hour.",
        "FOL": "∀x (Storm(x) ∧ FormsOverWarmOceanWaters(x) ∧ SustainedWindsAtLeast74MPH(x) → Hurricane(x))"
    },
    {
        "NL": "A chemical reaction occurs when two or more substances interact and form new compounds.",
        "FOL": "∀x ∀y ∀z (ChemicalReaction(x) ↔ (Substance(y) ∧ Substance(z) ∧ Interact(y, z) ∧ FormNewCompounds(x)))"
    },
    {
        "NL": "Every recipe that is tasty and easy becomes popular.",
        "FOL": "∀x (Recipe(x) ∧ Tasty(x) ∧ Easy(x) → Popular(x))"
    },
    {
        "NL": "There are artists who are neither untalented nor misguided.",
        "FOL": "∃x (Artist(x) ∧ ¬(Untalented(x) ∨ Misguided(x)))"
    },
    {
        "NL": "A smartphone that offers a high-quality camera and long battery life appeals to photography enthusiasts.",
        "FOL": "∀x (Smartphone(x) ∧ HighQualityCamera(x) ∧ LongBatteryLife(x) → AppealsToPhotographyEnthusiasts(x))"
    },
    {
        "NL": "A painting that represents a person, animal, or object in a realistic manner is a representational painting.",
        "FOL": "∀x∀y (Painting(x) ∧ (Person(y) ∨ Animal(y) ∨ Object(y)) ∧ RealisticallyRepresents(x, y) → RepresentationalPainting(x))"
    },
    {
        "NL": "A building is eco-friendly if it uses solar power and has a green roof.",
        "FOL": "∀x (Building(x) → (EcoFriendly(x) ↔ (UsesSolarPower(x) ∧ HasGreenRoof(x))))"
    },
    {
        "NL": "A volcano is dormant if it has not erupted for an extended period and shows no signs of imminent eruption.",
        "FOL": "∀x (Volcano(x) → (Dormant(x) ↔ (¬EruptedRecently(x) ∧ ¬ShowsSignsOfImminentEruption(x))))"
    },
    {
        "NL": "A successful marketing campaign increases brand awareness, generates leads, and boosts sales.",
        "FOL": "∀x (MarketingCampaign(x) ∧ IncreasesBrandAwareness(x) ∧ GeneratesLeads(x) ∧ BoostsSales(x) → Successful(x))"
    },
    {
        "NL": "A library lends books, provides access to digital resources, and may offer quiet study spaces.",
        "FOL": "∀x (Library(x) → (LendsBooks(x) ∧ ProvidesAccessToDigitalResources(x) ∧ (OffersQuietStudySpaces(x) ∨ ¬QuietStudySpaces(x))))"
    },
    {
        "NL": "A turtle has a hard shell and can swim, while a rabbit does not have a shell and cannot swim.",
        "FOL": "∀x (Turtle(x) → HasShell(x) ∧ CanSwim(x)) ∧ ∀y (Rabbit(y) → ¬HasShell(y) ∧ ¬CanSwim(y))"
    },
    {
        "NL": "An album can win awards for best lyrics, best composition, or best male vocals, but not all three simultaneously.",
        "FOL": "∀x (Album(x) ∧ WinAward(x) → (BestLyricsAward(x) ⊕ BestCompositionAward(x) ⊕ BestMaleVocalsAward(x)))"
    },
    {
        "NL": "A renewable energy source that generates electricity without producing greenhouse gases and has low operational costs contributes to a sustainable energy future.",
        "FOL": "∀x (RenewableEnergySource(x) ∧ GeneratesElectricity(x) ∧ ¬ProducesGreenhouseGases(x) ∧ LowOperationalCosts(x) → ContributesToSustainableEnergyFuture(x))"
    },
    {
        "NL": "A plane leaves the airport and lands at another airport without revisiting any other airports.",
        "FOL": "∃x ∃y ∃z (Plane(x) ∧ Airport(y) ∧ Airport(z) → LeavesFrom(x, y) ∧ LandsAt(x, z) ∧ ¬∃w (Airport(w) ∧ Revisits(x, w)))"
    },
    {
        "NL": "A rainforest is a dense, wet, and biodiverse forest that receives a high amount of rainfall annually and is home to a wide variety of plant and animal species.",
        "FOL": "∀x (Rainforest(x) → (DenseForest(x) ∧ WetForest(x) ∧ BiodiverseForest(x) ∧ HighAnnualRainfall(x) ∧ HomeToWideVarietyOfSpecies(x, plantAndAnimalSpecies)))"
    },
    {
        "NL": "Oceans cover the majority of Earth's surface and are home to diverse marine life.",
        "FOL": "∀x (Ocean(x) → (CoversEarthSurface(x) ∧ DiverseMarineLife(x)))"
    },
    {
        "NL": "A painter will paint the canvas only if he prepares his colors.",
        "FOL": "∀x (Painter(x) ∧ PaintCanvas(x) → PrepareColors(x))"
    },
    {
        "NL": "A chef cooks a dish only if that dish is spicy.",
        "FOL": "∀x (Chef(x) → ∀y (Dish(y) ∧ Cooks(x, y) → Spicy(y)))"
    },
    {
        "NL": "A solar panel generates electricity by absorbing sunlight and converting it into electrical energy.",
        "FOL": "∀x ∀y ∀z (SolarPanel(x) ∧ Sunlight(y) ∧ ElectricalEnergy(z) → (Absorbs(x, y) → GeneratesElectricity(x, z)))"
    },
    {
        "NL": "A building is energy-efficient if it utilizes renewable energy sources and has proper insulation.",
        "FOL": "∀x (Building(x) ∧ UtilizesRenewableEnergySources(x) ∧ ProperInsulation(x) → EnergyEfficient(x))"
    },
    {
        "NL": "Birds that migrate may have a longer lifespan.",
        "FOL": "∀x (Bird(x) ∧ Migrates(x) → MayHaveLongerLifespan(x))"
    },
    {
        "NL": "All books are informative.",
        "FOL": "∀x (Book(x) → Informative(x))"
    },
    {
        "NL": "There is a teacher who teaches all and only the students who do not study for themselves.",
        "FOL": "∃x (Teacher(x) ∧ ∀y (Student(y) → (Teach(x, y) ↔ ¬Study(y, y))))"
    },
    {
        "NL": "A phone rings only if it receives a call or a message.",
        "FOL": "∀x (Phone(x) ∧ (ReceivesCall(x) ∨ ReceivesMessage(x)) → Rings(x))"
    },
    {
        "NL": "A beverage is refreshing when it is cold, hydrating, and not overly sweet.",
        "FOL": "∀x (Beverage(x) ∧ Refreshing(x) ↔ (Cold(x) ∧ Hydrating(x) ∧ ¬OverlySweet(x)))"
    },
    {
        "NL": "A sport can be recognized as an individual sport when it involves a single competitor, focuses on individual skills, and does not require teamwork.",
        "FOL": "∀x (Sport(x) ∧ InvolvesSingleCompetitor(x) ∧ FocusesOnIndividualSkills(x) ∧ NoTeamworkRequired(x) → IndividualSport(x))"
    },
    {
        "NL": "Honeybees collect nectar and pollen from flowers, which they use to produce honey and feed their young.",
        "FOL": "∀x ∀y (Honeybee(x) ∧ Flower(y) → (CollectsNectar(x, y) ∧ CollectsPollen(x, y) ∧ ProducesHoney(x) ∧ FeedsYoung(x)))"
    },
    {
        "NL": "A person is considered a doctor if they diagnose and treat illnesses and injuries in patients.",
        "FOL": "∀x (DiagnosesAndTreatsIllnessesAndInjuries(x) → Doctor(x))"
    },
    {
        "NL": "Fruits decay faster at room temperature than in the refrigerator.",
        "FOL": "∀x (Fruit(x) ∧ RoomTemperature(y) ∧ Refrigerator(z) → DecayFaster(x, y, z))"
    },
    {
        "NL": "People who have allergies experience sneezing and runny nose.",
        "FOL": "∀x (Person(x) ∧ HasAllergies(x) → ExperienceSneezing(x) ∧ ExperienceRunnyNose(x))"
    },
    {
        "NL": "A parasite-host interaction occurs when a parasite lives on or within a host organism, extracting nutrients and often causing harm to the host without providing any benefits in return.",
        "FOL": "∀x ∀y ∀z (Parasite(x) ∧ Host(y) ∧ Nutrients(z) ∧ LivesOnOrWithinHost(x, y, z) ∧ ExtractsNutrientsAndCausesHarm(x, y, z) → ParasiteHostInteraction(x, y))"
    },
    {
        "NL": "A medical procedure that involves the removal or alteration of a body part, is performed by a surgeon, and requires anesthesia is surgery.",
        "FOL": "∀x (MedicalProcedure(x) ∧ InvolvesRemovalOrAlterationOfBodyPart(x) ∧ PerformedBySurgeon(x) ∧ RequiresAnesthesia(x) → Surgery(x))"
    },
    {
        "NL": "A building has either an elevator or stairs, but not both.",
        "FOL": "∀x (Building(x) → ((HasElevator(x) ⊕ HasStairs(x))))"
    },
    {
        "NL": "An institution is a museum if it displays art, is receptive to visitors, and has a historical value.",
        "FOL": "∀x (Institution(x) ∧ DisplaysArt(x) ∧ ReceptiveToVisitors(x) ∧ HasHistoricalValue(x) → Museum(x))"
    },
    {
        "NL": "An object is a refrigerator if it is an appliance that uses cooling technology to preserve food and beverages at low temperatures.",
        "FOL": "∀x ((Appliance(x) ∧ UsesCoolingTechnology(x) ∧ PreservesFoodAndBeverages(x)) → Refrigerator(x))"
    },
    {
        "NL": "A bank account can be either a checking or a savings account, but not both.",
        "FOL": "∀x (BankAccount(x) → (CheckingAccount(x) ⊕ SavingsAccount(x)))"
    },
    {
        "NL": "People who speak more than one language are bilingual or multilingual.",
        "FOL": "∀x (SpeakMultipleLanguages(x) → (Bilingual(x) ∨ Multilingual(x)))"
    },
    {
        "NL": "A city is coastal if it is near the ocean or a large body of water like a sea or a lake, but not all three.",
        "FOL": "∀x (City(x) → ((NearOcean(x) ∨ NearSea(x) ∨ NearLake(x)) ⊕ (NearOcean(x) ∧ NearSea(x) ∧ NearLake(x)) ∧ Coastal(x)))"
    },
    {
        "NL": "No gadget is considered innovative unless it is either AI-based or uses cloud technology, and not every one of them is easy to use.",
        "FOL": "¬∃v (Gadget(v) ∧ Innovative(v) ∨ (AIBased(v) ∨ UsesCloudTechnology(v))) ∧ ¬∀x (Gadget(x) → EasyToUse(x))"
    },
    {
        "NL": "In photography, cameras capture light to create images of a scene, which can then be printed or displayed on screens.",
        "FOL": "∀x ∀y ∀z (Photography(x) ∧ Camera(y) ∧ Scene(z) → (CapturesLight(y, z) ∧ CreatesImage(y, z) ∧ (CanBePrinted(x, z) ∨ DisplayedOnScreen(x, z))))"
    },
    {
        "NL": "A fruit is ripe when it is not green and not hard.",
        "FOL": "∀x (Fruit(x) ∧ ¬Green(x) ∧ ¬Hard(x) → Ripe(x))"
    },
    {
        "NL": "A book that is scientific can educate students.",
        "FOL": "∀x ∀y (Book(x) ∧ Scientific(x) ∧ Student(y) → CanEducate(x, y))"
    },
    {
        "NL": "A celestial body that orbits a star, has a stable atmosphere, and possesses liquid water on its surface is a potentially habitable exoplanet.",
        "FOL": "∀x ∀y ∀z (CelestialBody(x) ∧ Star(y) ∧ StableAtmosphere(z) ∧ Orbits(x, y) ∧ Has(x, z) ∧ PossessesLiquidWater(x) → PotentiallyHabitableExoplanet(x))"
    },
    {
        "NL": "A detective solves a crime by gathering evidence, interrogating suspects, and analyzing the collected information.",
        "FOL": "∀d ∀c ∀e ∀s (Detective(d) ∧ Crime(c) ∧ Evidence(e) ∧ Suspect(s) → (Solves(d, c) ↔ (Gathers(d, e) ∧ Interrogates(d, s) ∧ Analyzes(d, e))))"
    },
    {
        "NL": "A train is steam-driven if it involves a steam engine instead of an electric locomotive.",
        "FOL": "∀x (Train(x) ∧ HasSteamEngine(x) ∧ ¬HasElectricLocomotive(x) → SteamDriven(x))"
    },
    {
        "NL": "Apples grow on trees and are fruit.",
        "FOL": "∀x (Apple(x) → (GrowsOnTrees(x) ∧ Fruit(x)))"
    },
    {
        "NL": "An object is considered a decoration if it is designed to beautify or adorn a space or an object.",
        "FOL": "∀x (Object(x) ∧ DesignedToBeautifyOrAdorn(x) → Decoration(x))"
    },
    {
        "NL": "An entity is a plant if and only if it can photosynthesize or grow towards sunlight.",
        "FOL": "∀x (Plant(x) ↔ (CanPhotosynthesize(x) ∨ GrowTowardsSunlight(x)))"
    },
    {
        "NL": "A light bulb emits light when it is turned on and not burnt out.",
        "FOL": "∀x (LightBulb(x) → (EmitsLight(x) ↔ (TurnedOn(x) ∧ ¬BurntOut(x))))"
    },
    {
        "NL": "A musician is viewed as gifted if and only if they perform concerts frequently or receive accolades.",
        "FOL": "∀x (Musician(x) → (Gifted(x) ↔ (PerformConcertsFrequently(x) ∨ ReceiveAccolades(x))))"
    },
    {
        "NL": "If a person is an athlete, they either play individual sports or team sports.",
        "FOL": "∀x (Person(x) ∧ Athlete(x) → PlayIndividualSports(x) ⊕ PlayTeamSports(x))"
    },
    {
        "NL": "A violinist plays the violin, a pianist plays the piano, and a drummer plays drums, but all are musicians.",
        "FOL": "∀x∀y∀z (Violinist(x) → PlaysViolin(x)) ∧ (Pianist(y) → PlaysPiano(y)) ∧ (Drummer(z) → PlaysDrums(z)) ∧ (Musician(x) ∧ Musician(y) ∧ Musician(z))"
    },
    {
        "NL": "A book becomes a bestseller if it has an engaging story, strong marketing, and positive reviews.",
        "FOL": "∀x (Book(x) ∧ EngagingStory(x) ∧ StrongMarketing(x) ∧ PositiveReviews(x) → Bestseller(x))"
    },
    {
        "NL": "Not all artists are either painters or sculptors, and none of them hates creativity.",
        "FOL": "¬∀x (Artist(x) → (Painter(x) ∨ Sculptor(x))) ∧ ∀y (Artist(y) → ¬HateCreativity(y))"
    },
    {
        "NL": "A song is captivating if and only if it has harmonious melody, meaningful lyrics, but doesn't have too many clashing sounds.",
        "FOL": "∀x (Song(x) ∧ Captivating(x) ↔ (HasHarmoniousMelody(x) ∧ HasMeaningfulLyrics(x) ∧ ¬ManyClashingSounds(x)))"
    },
    {
        "NL": "It is not true that everything is a huge square only if it is red.",
        "FOL": "¬∀x (Huge(x) ∧ Square(x) ↔ Red(x))"
    },
    {
        "NL": "A deer is grazing in the meadow.",
        "FOL": "∃x ∃y (Deer(x) ∧ Meadow(y) ∧ GrazingIn(x, y))"
    },
    {
        "NL": "No system is defect-free unless it has been analyzed intensively, but not all of them are convenient-to-run.",
        "FOL": "¬∃x (System(x) ∧ DefectFree(x) ∨ AnalyzedIntensively(x)) ∧ ¬∀y (System(y) → ConvenientToRun(y))"
    },
    {
        "NL": "A book has a hardcover or a softcover, but not both.",
        "FOL": "∀x (Book(x) → ((Hardcover(x) ⊕ Softcover(x)) ∧ ¬(Hardcover(x) ∧ Softcover(x))))"
    },
    {
        "NL": "A celestial body is a comet if it is composed of ice and dust, orbits the sun, and develops a visible tail when it approaches the sun.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ Sun(y) ∧ ComposedOfIceAndDust(x) ∧ Orbits(x, y) ∧ DevelopsVisibleTailWhenApproachingSun(x) → Comet(x))"
    },
    {
        "NL": "No human is a grey alien.",
        "FOL": "¬∃x (Human(x) ∧ GreyAlien(x))"
    },
    {
        "NL": "A structure designed for worship and religious activities is a temple.",
        "FOL": "∀x (Structure(x) ∧ DesignedForWorship(x) ∧ ForReligiousActivities(x) → Temple(x))"
    },
    {
        "NL": "A plant is a succulent if it stores water in its leaves, stems, or roots and can survive in arid conditions.",
        "FOL": "∀x (Plant(x) ∧ StoresWaterInLeavesStemsOrRoots(x) ∧ SurvivesInAridConditions(x) → Succulent(x))"
    },
    {
        "NL": "A shopping mall attracts customers if it has a wide variety of stores, convenient parking, and a pleasant ambiance.",
        "FOL": "∀x (ShoppingMall(x) ∧ WideVarietyOfStores(x) ∧ ConvenientParking(x) ∧ PleasantAmbiance(x) → AttractsCustomers(x))"
    },
    {
        "NL": "A movie can be identified as a documentary when it presents factual information, provides expert insights, and maintains a focus on a specific subject or event.",
        "FOL": "∀x (Movie(x) ∧ PresentsFactualInformation(x) ∧ ProvidesExpertInsights(x) ∧ FocusesOnSpecificSubjectOrEvent(x) → Documentary(x))"
    },
    {
        "NL": "To win a chess game, a player must checkmate the opponent's king, avoid stalemate, and not run out of time.",
        "FOL": "∀x ∀y (Player(x) ∧ Opponent(y) → (CheckmateKing(x, y) ∧ ¬Stalemate(x, y) ∧ ¬OutOfTime(x) → WinChessGame(x, y)))"
    },
    {
        "NL": "If a device is not a computer, it uses electricity, and it is portable.",
        "FOL": "∀x (Device(x) ∧ ¬Computer(x) → (UsesElectricity(x) ∧ IsPortable(x)))"
    },
    {
        "NL": "A woman is a granddaughter if she is the kid of an individual's son or daughter.",
        "FOL": "∀x ∃y ∃z (Woman(x) ∧ Person(y) ∧ Person(z) ∧ ChildOf(x, y) ∧ (SonOf(y, z) ∨ DaughterOf(y, z)) → Granddaughter(x))"
    },
    {
        "NL": "A piece of clothing is considered a hat if it is worn on the head and primarily serves to protect or cover the head.",
        "FOL": "∀x (Clothing(x) ∧ WornOnHead(x) ∧ ProtectOrCoverHead(x) → Hat(x))"
    },
    {
        "NL": "A beverage that is brewed from roasted coffee beans, is served hot or cold, and contains caffeine is coffee.",
        "FOL": "∀x (Beverage(x) ∧ BrewedFromRoastedCoffeeBeans(x) ∧ ServedHotOrCold(x) ∧ ContainsCaffeine(x) → Coffee(x))"
    },
    {
        "NL": "A laptop is portable, a desktop computer is not portable, and a tablet is portable.",
        "FOL": "∀x ∀y ∀z (Laptop(x) ∧ DesktopComputer(y) ∧ Tablet(z) → (Portable(x) ∧ ¬Portable(y) ∧ Portable(z)))"
    },
    {
        "NL": "An amphibian can live both on land and in water, and it is a cold-blooded animal.",
        "FOL": "∀x (Amphibian(x) → (LivesOnLand(x) ∧ LivesInWater(x) ∧ ColdBlooded(x)))"
    },
    {
        "NL": "A medical treatment that effectively addresses the symptoms, targets the underlying cause, and has minimal side effects is considered an optimal therapy.",
        "FOL": "∀x (MedicalTreatment(x) ∧ AddressesSymptoms(x) ∧ TargetsUnderlyingCause(x) ∧ MinimalSideEffects(x) → OptimalTherapy(x))"
    },
    {
        "NL": "There isn't a lecturer who has taught every module.",
        "FOL": "¬∃x (Lecturer(x) ∧ ∀y (Module(y) → Taught(x, y)))"
    },
    {
        "NL": "A kite flies in the sky, while a boat floats on water and doesn't fly in the sky.",
        "FOL": "∀x∀y (Kite(x) ∧ Boat(y) → (FliesInSky(x) ∧ FloatsOnWater(y) ∧ ¬FliesInSky(y)))"
    },
    {
        "NL": "No large triangle is not red.",
        "FOL": "¬∃x (Large(x) ∧ Triangle(x) ∧ ¬Red(x))"
    },
    {
        "NL": "A camera captures images, while a microphone records sound, and a speaker produces sound.",
        "FOL": "∀x∀y∀z (Camera(x) ∧ Microphone(y) ∧ Speaker(z) → (CapturesImages(x) ∧ RecordsSound(y) ∧ ProducesSound(z)))"
    },
    {
        "NL": "A teacher is discussing a topic in the classroom, while a principal is reviewing paperwork in the office.",
        "FOL": "∃x ∃y (Teacher(x) ∧ Topic(y) ∧ Discussing(x, y) ∧ InTheClassroom(x)) ∧ ∃z ∃w (Principal(z) ∧ Paperwork(w) ∧ Reviewing(z, w) ∧ InTheOffice(z))"
    },
    {
        "NL": "A tool with a blade used for cutting is a knife.",
        "FOL": "∀x (Tool(x) ∧ HasBlade(x) ∧ UsedForCutting(x) → Knife(x))"
    },
    {
        "NL": "A book can be fiction or nonfiction, may be printed on paper or available in digital format, and covers a wide range of topics and genres.",
        "FOL": "∀x (Book(x) → (Fiction(x) ∨ Nonfiction(x)) ∧ (PrintedOnPaper(x) ∨ AvailableInDigitalFormat(x)) ∧ CoversWideRangeOfTopicsAndGenres(x))"
    },
    {
        "NL": "If a piece is part of a musician's instrument, it is a string, key, or valve.",
        "FOL": "∀x (Piece(x) ∧ PartOfMusiciansInstrument(x) → String(x) ∨ Key(x) ∨ Valve(x))"
    },
    {
        "NL": "Cacti are plants that store water in their thick stems and leaves, enabling them to survive in dry environments, whereas ferns are non-flowering plants that thrive in moist, shady habitats.",
        "FOL": "∀x∀y (Cactus(x) ∧ Fern(y) → (StoresWaterInThickStemsAndLeaves(x) ∧ SurvivesInDryEnvironments(x)) ∧ (NonFloweringPlant(y) ∧ ThrivesInMoistShadyHabitats(y)))"
    },
    {
        "NL": "A workout that targets the upper body and incorporates weightlifting or calisthenics is effective.",
        "FOL": "∀x (Workout(x) ∧ TargetsUpperBody(x) ∧ (IncorporatesWeightlifting(x) ∨ IncorporatesCalisthenics(x)) → Effective(x))"
    },
    {
        "NL": "Not all actresses are shy or bold.",
        "FOL": "¬∀x (Actress(x) → (Shy(x) ∨ Bold(x)))"
    },
    {
        "NL": "A vehicle that operates on electricity, has a rechargeable battery, and does not emit greenhouse gases is an electric vehicle.",
        "FOL": "∀x∀y (Vehicle(x) ∧ OperatesOnElectricity(x) ∧ HasRechargeableBattery(x, y) ∧ DoesNotEmitGreenhouseGases(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A hexagon can have equal or unequal sides, but always has six angles.",
        "FOL": "∀x (Hexagon(x) → (EqualSides(x) ∨ UnequalSides(x)) ∧ NumberOfAngles(x, 6))"
    },
    {
        "NL": "A computer system is considered secure if it has strong encryption, requires authentication, and has regular software updates.",
        "FOL": "∀x (ComputerSystem(x) ∧ StrongEncryption(x) ∧ RequiresAuthentication(x) ∧ RegularSoftwareUpdates(x) → Secure(x))"
    },
    {
        "NL": "A well-designed garden typically has diverse plant species, a balanced layout, and proper irrigation systems.",
        "FOL": "∀x (WellDesignedGarden(x) → (DiversePlantSpecies(x) ∧ BalancedLayout(x) ∧ ProperIrrigationSystems(x)))"
    },
    {
        "NL": "Some art pieces are both sculptures and made of metal.",
        "FOL": "∃x (ArtPiece(x) ∧ Sculpture(x) ∧ MadeOfMetal(x))"
    },
    {
        "NL": "A dish is spicy if it contains chili peppers or black pepper.",
        "FOL": "∀x (Dish(x) ∧ (ContainsChiliPeppers(x) ∨ ContainsBlackPepper(x)) → Spicy(x))"
    },
    {
        "NL": "A room is dark if there is no light source or the light sources are turned off.",
        "FOL": "∀x (Room(x) ∧ (¬∃y (LightSource(x, y) ∧ TurnedOn(y))) → Dark(x))"
    },
    {
        "NL": "To become a certified professional, an individual must complete a certification program and pass the relevant examination or possess extensive experience in the field.",
        "FOL": "∀x∀y (Individual(x) ∧ Certification(y) → ((CompletesProgram(x, y) ∧ PassesExam(x, y)) ∨ ExtensiveExperience(x, y) → CertifiedProfessional(x, y)))"
    },
    {
        "NL": "Cats and dogs can be domesticated, and they often provide companionship to their human owners.",
        "FOL": "∀x∀y (Cat(x) ∨ Dog(x) ∧ Human(y) → (CanBeDomesticated(x) ∧ ProvidesCompanionship(x, y)))"
    },
    {
        "NL": "A fruit is considered ripe if it is soft to touch and has a sweet aroma.",
        "FOL": "∀x (Fruit(x) ∧ SoftToTouch(x) ∧ SweetAroma(x) → Ripe(x))"
    },
    {
        "NL": "Hurricanes form over warm ocean waters and can cause extensive damage to coastal regions through strong winds, heavy rain, and storm surges.",
        "FOL": "∀x∀y (Hurricane(x) ∧ FormsOverWarmOceanWaters(x) → (CausesDamageToCoastalRegions(x, y) ∧ (StrongWinds(x) ∧ HeavyRain(x) ∧ StormSurges(x))))"
    },
    {
        "NL": "There is a hospital where all doctors work.",
        "FOL": "∃x (Hospital(x) ∧ ∀y (Doctor(y) → WorkIn(y, x)))"
    },
    {
        "NL": "Fruits that grow on trees and have a seed inside are classified as stone fruits.",
        "FOL": "∀x∀y (Fruit(x) ∧ Tree(y) ∧ GrowsOn(x, y) ∧ HasSeedInside(x) → StoneFruit(x))"
    },
    {
        "NL": "A lake x contains fish species y if y is found in the aquatic environment of x and its population is stable.",
        "FOL": "∀x ∀y (Lake(x) ∧ FishSpecies(y) ∧ FoundInAquaticEnvironment(x, y) ∧ StablePopulation(y, x) → Contains(x, y))"
    },
    {
        "NL": "A volcano is dormant if it has not erupted for a long time but still has the potential to erupt in the future.",
        "FOL": "∀x ∀y ∀z (Volcano(x) ∧ ¬EruptedRecently(x, y) ∧ PotentialToErupt(x, z) → Dormant(x))"
    },
    {
        "NL": "A planet that orbits two stars is called a circumbinary planet, while a planet that orbits one star is called an exoplanet.",
        "FOL": "∀x (Planet(x) ∧ OrbitsTwoStars(x) → CircumbinaryPlanet(x)) ∧ ∀y (Planet(y) ∧ OrbitsOneStar(y) → Exoplanet(y))"
    },
    {
        "NL": "Birds can fly if they have feathers and functional wings, and they are not flightless.",
        "FOL": "∀x (Bird(x) ∧ HasFeathers(x) ∧ FunctionalWings(x) ∧ ¬Flightless(x) → CanFly(x))"
    },
    {
        "NL": "An athlete wins a gold medal if they finish first in their event, but they do not win a gold medal if they are disqualified or withdraw from the competition.",
        "FOL": "∀x (Athlete(x) ∧ GoldMedal(x) ↔ (FinishesFirst(x, y) ∧ Event(y) ∧ ¬Disqualified(x) ∧ ¬Withdraws(x)))"
    },
    {
        "NL": "Birds either lay eggs or give birth to live young, but not both.",
        "FOL": "∀x (Bird(x) → (LaysEggs(x) ⊕ GivesBirthToLiveYoung(x)))"
    },
    {
        "NL": "There is a dance that every dancer practices if triangles are two dimensional.",
        "FOL": "∀x (Triangle(x) → TwoDimensional(x)) → ∃y (Dance(y) ∧ ∀z (Dancer(z) → Practices(z, y)))"
    },
    {
        "NL": "A motorcycle has two wheels.",
        "FOL": "∀x (Motorcycle(x) → HasWheels(x, 2))"
    },
    {
        "NL": "A car can be classified as a convertible if it has a retractable or removable roof.",
        "FOL": "∀x (Car(x) ∧ (RetractableRoof(x) ∨ RemovableRoof(x)) → Convertible(x))"
    },
    {
        "NL": "A team is successful if it has skilled players, a strong strategy, and effective communication.",
        "FOL": "∀x (Team(x) ∧ SkilledPlayers(x) ∧ StrongStrategy(x) ∧ EffectiveCommunication(x) → Successful(x))"
    },
    {
        "NL": "There are players who honor only those coaches who are more experienced than they.",
        "FOL": "∃x ∀y (Player(x) ∧ Coach(y) ∧ MoreExperiencedThan(y, x) → Honor(x, y))"
    },
    {
        "NL": "Each chef who has partnered with a single farmer, who subsequently has not obtained an agricultural recognition, has either cooked for more than six restaurants or participated in all cooking contests.",
        "FOL": "∀x (Chef(x) ∧ ∃y (Farmer(y) ∧ ¬ObtainedAgricultureRecognition(y) ∧ PartneredWith(x, y)) → (CookedForMoreThanSixRestaurants(x) ∨ ∀z (CookingContests(z) → ParticipatedIn(x, z))))"
    },
    {
        "NL": "A library contains books, journals, and digital resources for patrons to access and use.",
        "FOL": "∀x ∀y (Library(x) ∧ (Book(y) ∨ Journal(y) ∨ DigitalResource(y)) → (Contains(x, y) ∧ AccessAndUse(y)))"
    },
    {
        "NL": "Some paintings are abstract or depict landscapes.",
        "FOL": "∃x (Painting(x) ∧ (Abstract(x) ∨ DepictsLandscapes(x)))"
    },
    {
        "NL": "A radio telescope detects radio waves from space, allowing astronomers to study celestial objects and phenomena that emit radio frequency radiation.",
        "FOL": "∀x ∀y (RadioTelescope(x) ∧ (DetectsRadioWaves(x, y) ∧ FromSpace(y)) ∧ AllowsAstronomersToStudyCelestialObjectsAndPhenomena(x))"
    },
    {
        "NL": "Mountains form through geological processes, including volcanic activity, plate tectonics, and the uplift of rock layers.",
        "FOL": "∀x (Mountain(x) → (FormedByVolcanicActivity(x) ∨ FormedByPlateTectonics(x) ∨ FormedByUpliftOfRockLayers(x)))"
    },
    {
        "NL": "Each pink thing is cylindrical unless it is heavy.",
        "FOL": "∀x (Pink(x) → (¬Heavy(x) → Cylindrical(x)))"
    },
    {
        "NL": "During a scientific experiment, researchers collect data, analyze results, and draw conclusions to test their hypotheses.",
        "FOL": "∀x∀y∀z (ScientificExperiment(x) ∧ Researcher(y) ∧ Hypothesis(z) → (CollectData(y, x) ∧ AnalyzeResults(y, x) ∧ DrawConclusions(y, x, z)))"
    },
    {
        "NL": "A book x becomes a bestseller if it receives positive reviews and attracts a large audience.",
        "FOL": "∀x (Book(x) → (BecomesBestseller(x) ↔ (ReceivesPositiveReviews(x) ∧ AttractsLargeAudience(x))))"
    },
    {
        "NL": "An athlete is considered a top performer if he trains every day, eats a healthy diet, and either wins at least one championship or breaks a record.",
        "FOL": "∀x (Athlete(x) ∧ TrainsEveryDay(x) ∧ EatsHealthy(x) ∧ (WinsChampionship(x) ∨ BreaksRecord(x)) → TopPerformer(x))"
    },
    {
        "NL": "Some strawberries are red and sour.",
        "FOL": "∃x (Strawberry(x) ∧ Red(x) ∧ Sour(x))"
    },
    {
        "NL": "A tablet connects to the internet and permits users to use different apps and services.",
        "FOL": "∀x (Tablet(x) → (ConnectsToInternet(x) ∧ AllowsUseOfApps(x) ∧ AllowsUseOfServices(x)))"
    },
    {
        "NL": "Authors write books.",
        "FOL": "∀x ∀y (Author(x) ∧ Book(y) → Write(x, y))"
    },
    {
        "NL": "A scientist discovers new knowledge by conducting experiments, analyzing data, and interpreting results.",
        "FOL": "∀x (Scientist(x) → (ConductExperiments(x) ∧ AnalyzeData(x) ∧ InterpretResults(x) → DiscoverNewKnowledge(x)))"
    },
    {
        "NL": "A train is moving when its speed is greater than zero, but it is stationary when its speed is equal to zero.",
        "FOL": "∀x (Train(x) → ((SpeedGreaterThanZero(x) → Moving(x)) ⊕ (SpeedEqualToZero(x) → Stationary(x))))"
    },
    {
        "NL": "An animal is considered a bird if it has feathers and can fly.",
        "FOL": "∀x (Animal(x) ∧ HasFeathers(x) ∧ CanFly(x) → Bird(x))"
    },
    {
        "NL": "Some animals are pets, while others are wild.",
        "FOL": "∀x (Animal(x) → Pet(x) ⊕ Wild(x))"
    },
    {
        "NL": "A container is empty when it does not contain any items, and it is full when it can no longer accommodate any more items.",
        "FOL": "∀x (Container(x) → ((¬ContainsItems(x) → Empty(x)) ⊕ (CannotAccommodateMoreItems(x) → Full(x))))"
    },
    {
        "NL": "In a school, a student who attends math class and has a passing grade in the class will be allowed to participate in the math club.",
        "FOL": "∀x∀y∀z (Student(x) ∧ School(y) ∧ MathClass(z) ∧ Attends(x, z) ∧ PassingGrade(x, z) → AllowedInMathClub(x, y))"
    },
    {
        "NL": "Dogs bark when they sense danger.",
        "FOL": "∀x (Dog(x) ∧ SensesDanger(x) → Barks(x))"
    },
    {
        "NL": "Students who complete their homework and attend classes regularly have a higher chance of passing exams, while those who don't are more likely to fail.",
        "FOL": "∀x (Student(x) ∧ CompleteHomework(x) ∧ AttendClassesRegularly(x) → HigherChanceOfPassing(x)) ∧ (Student(x) ∧ ¬(CompleteHomework(x) ∧ AttendClassesRegularly(x)) → HigherChanceOfFailing(x))"
    },
    {
        "NL": "A musical instrument that produces sound through vibrating strings and has a wooden body is a string instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundThroughVibratingStrings(x) ∧ HasWoodenBody(x) → StringInstrument(x))"
    },
    {
        "NL": "A dog barks loudly, while a cat purrs softly.",
        "FOL": "∀x (Dog(x) → BarksLoudly(x)) ∧ ∀y (Cat(y) → PurrsSoftly(y))"
    },
    {
        "NL": "If a fruit is an apple, then it is either red or green.",
        "FOL": "∀x (Fruit(x) ∧ Apple(x) → Red(x) ⊕ Green(x))"
    },
    {
        "NL": "For a vehicle to be a hybrid, it must use both gasoline and electricity as sources of power.",
        "FOL": "∀x ∀y ∀z (Vehicle(x) ∧ Gasoline(y) ∧ Electricity(z) → Hybrid(x, y, z))"
    },
    {
        "NL": "A substance is flammable if it is not an inert gas and can react with oxygen to produce heat.",
        "FOL": "∀x (Substance(x) → (Flammable(x) ↔ (¬InertGas(x) ∧ ReactsWithOxygen(x) ∧ ProducesHeat(x))))"
    },
    {
        "NL": "A place is considered a park if it is a public outdoor area with natural or landscaped spaces, often featuring amenities such as playgrounds, picnic areas, and walking trails for recreation and relaxation.",
        "FOL": "∀x (Park(x) ↔ (PublicOutdoorArea(x) ∧ WithNaturalOrLandscapedSpaces(x) ∧ FeaturesAmenitiesLikePlaygroundsPicnicAreasAndWalkingTrails(x) ∧ ForRecreationAndRelaxation(x)))"
    },
    {
        "NL": "Some plants need direct sunlight, and others can grow in shade.",
        "FOL": "∃x ∃y (Plant(x) ∧ Plant(y) ∧ NeedsDirectSunlight(x) ∧ CanGrowInShade(y))"
    },
    {
        "NL": "All books are either interesting or boring, but not both.",
        "FOL": "∀x (Book(x) ∧ (Interesting(x) ⊕ Boring(x)))"
    },
    {
        "NL": "A diet can consist of various food groups, such as proteins, carbohydrates, and fats.",
        "FOL": "∀x ∀y (Diet(x) → (ConsistsOfFoodGroups(x, y) ∧ (Proteins(y) ∨ Carbohydrates(y) ∨ Fats(y))))"
    },
    {
        "NL": "A type of fruit can be either a berry or a drupe.",
        "FOL": "∀x (Fruit(x) → (Berry(x) ⊕ Drupe(x)))"
    },
    {
        "NL": "A company sells products or services.",
        "FOL": "∀x (Company(x) → (Sells(x, Products) ∨ Sells(x, Services)))"
    },
    {
        "NL": "A library is open to the public if it is not a private or restricted access library.",
        "FOL": "∀x (Library(x) ∧ ¬Private(x) ∧ ¬RestrictedAccess(x) → OpenToPublic(x))"
    },
    {
        "NL": "A mountain is considered tall if its elevation exceeds 8,000 meters.",
        "FOL": "∀x (Mountain(x) → (Tall(x) ↔ ElevationGreaterThan8000Meters(x)))"
    },
    {
        "NL": "A living organism x is a mammal if it has hair or fur, gives birth to live young, and produces milk.",
        "FOL": "∀x (LivingOrganism(x) ∧ HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x) → Mammal(x))"
    },
    {
        "NL": "A person is considered a film director if they control and oversee the creative aspects of a film production.",
        "FOL": "∀x (Person(x) ∧ ControlsCreativeAspectsOfFilmProduction(x) ∧ OverseesFilmProduction(x) → FilmDirector(x))"
    },
    {
        "NL": "A college offers degree programs, has a campus, and enrolls students who attend classes.",
        "FOL": "∀x ∀y ∀z (College(x) ∧ DegreeProgram(y) ∧ Student(z) → (Offers(x, y) ∧ HasCampus(x) ∧ Enrolls(x, z) ∧ Attends(z, classes)))"
    },
    {
        "NL": "An item is a gigantic oval only if it is not purple.",
        "FOL": "∀x (Gigantic(x) ∧ Oval(x) → ¬Purple(x))"
    },
    {
        "NL": "A message can be sent through email or a text message.",
        "FOL": "∀x (Message(x) → (SentThroughEmail(x) ∨ SentThroughTextMessage(x)))"
    },
    {
        "NL": "In a movie, actors portray characters, the director manages the film production, and the editor assembles the final cut.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ Actor(y) ∧ Director(z) → (PortraysCharacters(y, x) ∧ ManagesProduction(z, x) ∧ AssemblesFinalCut(x)))"
    },
    {
        "NL": "A building that houses art collections, displays various exhibits, and is open to the public for viewing is called an art museum.",
        "FOL": "∀x (Building(x) ∧ HousesArtCollections(x) ∧ DisplaysExhibits(x) ∧ OpenToPublicForViewing(x) → ArtMuseum(x))"
    },
    {
        "NL": "A well-designed website should have clear navigation, relevant content, and an attractive layout.",
        "FOL": "∀x (Website(x) → (WellDesigned(x) ↔ (ClearNavigation(x) ∧ RelevantContent(x) ∧ AttractiveLayout(x))))"
    },
    {
        "NL": "A book is considered fiction if it is not based on real events or people.",
        "FOL": "∀x (Book(x) ∧ ¬BasedOnRealEvents(x) ∧ ¬BasedOnRealPeople(x) → Fiction(x))"
    },
    {
        "NL": "A chef cooks meals, prepares ingredients, and creates recipes.",
        "FOL": "∀x (Chef(x) → (CooksMeals(x) ∧ PreparesIngredients(x) ∧ CreatesRecipes(x)))"
    },
    {
        "NL": "A hotel guest can access the swimming pool if they have a room key and the pool is open.",
        "FOL": "∀x∀y (HotelGuest(x) ∧ SwimmingPool(y) ∧ HasRoomKey(x) ∧ PoolOpen(y) → CanAccess(x, y))"
    },
    {
        "NL": "A chair has legs, and a beanbag doesn't have legs.",
        "FOL": "∀x ∀y (Chair(x) ∧ Beanbag(y) → (HasLegs(x) ∧ ¬HasLegs(y)))"
    },
    {
        "NL": "A rainforest has a high density of trees.",
        "FOL": "∀x (Rainforest(x) → HighDensityOfTrees(x))"
    },
    {
        "NL": "An instrument can be a string instrument or not a string instrument.",
        "FOL": "∀x (Instrument(x) → (StringInstrument(x) ∨ ¬StringInstrument(x)))"
    },
    {
        "NL": "An employee is considered full-time if they work at least 40 hours per week.",
        "FOL": "∀x (Employee(x) ∧ WorksAtLeast40HoursPerWeek(x) → FullTime(x))"
    },
    {
        "NL": "A rainbow forms when sunlight refracts, reflects, and disperses through water droplets in the atmosphere, creating a spectrum of colors.",
        "FOL": "∀x (Rainbow(x) ↔ (FormsWhenSunlightRefractsReflectsDisperses(x) ∧ ThroughWaterDropletsInAtmosphere(x) ∧ CreatesSpectrumOfColors(x)))"
    },
    {
        "NL": "A flashlight emits light when the switch is on or when the batteries are full.",
        "FOL": "∀x (Flashlight(x) → (SwitchOn(x) ∨ BatteriesFull(x) → EmitsLight(x)))"
    },
    {
        "NL": "A type of computer software that allows users to create, edit, and manage digital documents, such as text, images, and multimedia, is a document editor.",
        "FOL": "∀x (ComputerSoftware(x) ∧ AllowsDocumentCreation(x) ∧ AllowsDocumentEditing(x) ∧ ManagesDigitalDocuments(x) ∧ ManagesText(x) ∧ ManagesImages(x) ∧ ManagesMultimedia(x) → DocumentEditor(x))"
    },
    {
        "NL": "A library houses a collection of books, magazines, and digital media for patrons to borrow and access.",
        "FOL": "∀x (Library(x) → (HousesCollectionOfMaterials(x) ∧ AllowsPatronsToBorrowAndAccess(x)))"
    },
    {
        "NL": "A library contains books, digital resources, and multimedia materials that cater to various interests and educational needs.",
        "FOL": "∀x (Library(x) → (ContainsBooks(x) ∧ ContainsDigitalResources(x) ∧ ContainsMultimediaMaterials(x) ∧ CatersToVariousInterestsAndEducationalNeeds(x)))"
    },
    {
        "NL": "An entrepreneur will defend the guideline only if he does not pay his outstandings.",
        "FOL": "∀x (Entrepreneur(x) ∧ DefendGuideline(x) → ¬PayOutstandings(x))"
    },
    {
        "NL": "Festivals that celebrate local culture, promote community engagement, and generate economic benefits contribute to a vibrant society.",
        "FOL": "∀x ∀y ∀z (Festival(x) ∧ CelebratesLocalCulture(x, y) ∧ PromotesCommunityEngagement(x, z) ∧ GeneratesEconomicBenefits(x) → VibrantSociety(x))"
    },
    {
        "NL": "A game is engaging for players when it combines challenging gameplay and captivating graphics, but the experience might be diminished if the soundtrack is annoying or the controls are unresponsive.",
        "FOL": "∀x∀y (Game(x) ∧ Player(y) → (Engaging(x, y) ↔ ((ChallengingGameplay(x) ∧ CaptivatingGraphics(x)) ∧ ¬(AnnoyingSoundtrack(x) ∨ UnresponsiveControls(x)))))"
    },
    {
        "NL": "An ingredient is allergenic if it can cause an allergic reaction in some individuals.",
        "FOL": "∀x ∀y (Ingredient(x) ∧ Individual(y) ∧ CanCauseAllergicReaction(x, y) → Allergenic(x))"
    },
    {
        "NL": "Each tree has roots.",
        "FOL": "∀x ∃y (Tree(x) → Roots(y) ∧ Has(x, y))"
    },
    {
        "NL": "An apple tree produces apples, an orange tree bears oranges, and a pear tree yields pears as their respective fruits.",
        "FOL": "∀x ∀y ∀z (AppleTree(x) → ProducesApples(x)) ∧ (OrangeTree(y) → BearsOranges(y)) ∧ (PearTree(z) → YieldsPears(z))"
    },
    {
        "NL": "Parks have playgrounds for children to play.",
        "FOL": "∀x ∀y (Park(x) ∧ Playground(y) ∧ In(x, y) → ∃z (Child(z) ∧ Plays(z, y)))"
    },
    {
        "NL": "A vehicle's engine overheats when the coolant level is low or the radiator is blocked.",
        "FOL": "∀x (Vehicle(x) ∧ (LowCoolantLevel(x) ∨ BlockedRadiator(x)) → OverheatsEngine(x))"
    },
    {
        "NL": "A doctor diagnoses illnesses and prescribes treatments for patients.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Illness(y) ∧ Patient(z) → DiagnosesAndPrescribesTreatment(x, y, z))"
    },
    {
        "NL": "An aircraft is supersonic when it can travel faster than the speed of sound.",
        "FOL": "∀x (Supersonic(x) ↔ (Aircraft(x) ∧ TravelsFasterThanSpeedOfSound(x)))"
    },
    {
        "NL": "An electronic device that records and stores video footage, uses a lens to capture images, and often includes audio recording is a video camera.",
        "FOL": "∀x (ElectronicDevice(x) ∧ RecordsAndStoresVideoFootage(x) ∧ UsesLensToCaptureImages(x) ∧ IncludesAudioRecording(x) → VideoCamera(x))"
    },
    {
        "NL": "A race that includes swimming, cycling, and running is a triathlon.",
        "FOL": "∀x (Race(x) ∧ IncludesSwimming(x) ∧ IncludesCycling(x) ∧ IncludesRunning(x) → Triathlon(x))"
    },
    {
        "NL": "An animal x can survive in an environment y if x is adapted to the temperature, humidity, and food sources available in y.",
        "FOL": "∀x ∀y (Animal(x) ∧ Environment(y) ∧ AdaptedToTemperature(x, y) ∧ AdaptedToHumidity(x, y) ∧ AdaptedToFoodSources(x, y) → CanSurviveIn(x, y))"
    },
    {
        "NL": "A celestial object that orbits a certain star, has a specific mass, and possesses a particular atmospheric composition, typically falls into the classification of a planet or a dwarf planet.",
        "FOL": "∀x∀y∀z∀w (CelestialObject(x) ∧ OrbitsStar(x, y) ∧ HasMass(x, z) ∧ PossessesAtmosphere(x, w) → (Planet(x) ∨ DwarfPlanet(x)))"
    },
    {
        "NL": "An animal is considered a mammal if it has hair or fur, gives birth to live young, and produces milk.",
        "FOL": "∀x (Animal(x) ∧ HairOrFur(x) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x) → Mammal(x))"
    },
    {
        "NL": "All black objects are spherical unless they are expensive.",
        "FOL": "∀x (Black(x) → (¬Expensive(x) → Spherical(x)))"
    },
    {
        "NL": "Not all students are diligent.",
        "FOL": "¬∀x (Student(x) → Diligent(x))"
    },
    {
        "NL": "Few kids either play football or basketball, but don't play both.",
        "FOL": "∃x (Kid(x) ∧ (PlayFootball(x) ⊕ PlayBasketball(x)))"
    },
    {
        "NL": "A lake is frozen if the temperature is below freezing and there is no sunlight.",
        "FOL": "∀x (Lake(x) ∧ BelowFreezing(x) ∧ ¬Sunlight(x) → Frozen(x))"
    },
    {
        "NL": "A hydropower source is replenished by natural water flow, minimizing the probability of exhaustion and decreasing ecological damages.",
        "FOL": "∀x (HydropowerSource(x) → (ReplenishedByNaturalWaterFlow(x) ∧ MinimizedProbabilityOfExhaustion(x) ∧ DecreasedEcologicalDamages(x)))"
    },
    {
        "NL": "Every student attends online or offline classes.",
        "FOL": "∀x (Student(x) → (OnlineClasses(x) ∨ OfflineClasses(x)))"
    },
    {
        "NL": "A grocery store offers a variety of food and household items, while a farmers' market offers fresh produce and locally made products.",
        "FOL": "∀x ∀y (GroceryStore(x) ∧ FarmersMarket(y) → (OffersFood(x) ∧ OffersHouseholdItems(x) ∧ OffersFreshProduce(y) ∧ OffersLocallyMadeProducts(y)))"
    },
    {
        "NL": "A national park that provides habitat for endangered species, protects ecosystems, and offers recreational opportunities contributes to biodiversity conservation.",
        "FOL": "∀x∀y (NationalPark(x) ∧ ProvidesHabitatForEndangeredSpecies(x) ∧ ProtectsEcosystems(x) ∧ OffersRecreationalOpportunities(x) → ContributesToBiodiversityConservation(y))"
    },
    {
        "NL": "A prime number is greater than 1 and divisible only by 1 and itself.",
        "FOL": "∀x (PrimeNumber(x) ↔ (GreaterThan(x, 1) ∧ DivisibleOnlyBy(x, 1) ∧ DivisibleOnlyBy(x, x)))"
    },
    {
        "NL": "An object is heavy if and only if it isn't light or is a boulder.",
        "FOL": "∀x (Object(x) → (Heavy(x) ↔ (¬Light(x) ∨ IsBoulder(x))))"
    },
    {
        "NL": "Fruits ripen faster in the presence of ethylene gas and warm temperatures.",
        "FOL": "∀x (Fruit(x) → (RipensFaster(x) ↔ (EthyleneGasPresent(x) ∧ WarmTemperatures(x))))"
    },
    {
        "NL": "Mary does not like any Australian or Canadian.",
        "FOL": "∀x (Person(x) ∧ (From(x, australia) ∨ From(x, canada)) → ¬Like(mary, x))"
    },
    {
        "NL": "A child is playing with the toys in the nursery.",
        "FOL": "∃x ∃y ∃z (Child(x) ∧ Toys(y) ∧ Nursery(z) ∧ PlayingWith(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A pilot flies an airplane to a destination.",
        "FOL": "∀x∀y∀z (Pilot(x) ∧ Airplane(y) ∧ Destination(z) → FliesTo(x, y, z))"
    },
    {
        "NL": "Mercury is the closest planet to the Sun, Venus is the second closest, and Mars is the fourth closest.",
        "FOL": "∀x ∀y ∀z (Mercury(x) ∧ Venus(y) ∧ Mars(z) → (ClosestToSun(x, 1) ∧ ClosestToSun(y, 2) ∧ ClosestToSun(z, 4)))"
    },
    {
        "NL": "Some spiders spin webs to catch prey, while others use ambush tactics.",
        "FOL": "∀x (Spider(x) ∧ SpinsWebs(x) → CatchPreyWithWebs(x)) ∧ ∀y (Spider(y) ∧ UsesAmbushTactics(y) → CatchPreyWithAmbush(y))"
    },
    {
        "NL": "A student will receive an A grade if they score above 90% on the final exam or have perfect attendance and complete all assignments.",
        "FOL": "∀x (Student(x) → ((ScoreAbove90Percent(x) ∨ (PerfectAttendance(x) ∧ CompleteAllAssignments(x))) → AGrade(x)))"
    },
    {
        "NL": "All artists who focus on painting and sculpture, unless they have exhibited in a museum, have either appeared in major art magazines or have not taught art students.",
        "FOL": "∀x (Artist(x) ∧ FocusOnPainting(x) ∧ FocusOnSculpture(x) ∨ ExhibitedInMuseum(x) → (AppearedInMajorArtMagazines(x) ∨ ¬TaughtArtStudents(x)))"
    },
    {
        "NL": "A plant is considered a tree if it has a single woody stem, grows to a considerable height, and has branches and leaves.",
        "FOL": "∀x (Plant(x) ∧ Tree(x) ↔ SingleWoodyStem(x) ∧ GrowsToConsiderableHeight(x) ∧ HasBranchesAndLeaves(x))"
    },
    {
        "NL": "All lawyers who practice criminal and civil law, unless they have won a high-profile case, either wrote for top law reviews or did not mentor law students.",
        "FOL": "∀x (Lawyer(x) ∧ PracticeCriminalLaw(x) ∧ PracticeCivilLaw(x) ∨ WonHighProfileCase(x) → (WroteForTopLawReviews(x) ∨ ¬MentoredLawStudents(x)))"
    },
    {
        "NL": "A predator hunts and consumes prey for sustenance.",
        "FOL": "∀x∀y (Predator(x) ∧ Hunts(x, y) ∧ Consumes(x, y) → Sustenance(x))"
    },
    {
        "NL": "A package is delivered if it has a valid shipping address and tracking number.",
        "FOL": "∀x (Package(x) ∧ ValidShippingAddress(x) ∧ TrackingNumber(x) → Delivered(x))"
    },
    {
        "NL": "A dog is friendly if it is a Golden Retriever or a Labrador.",
        "FOL": "∀x (Dog(x) ∧ (GoldenRetriever(x) ∨ Labrador(x)) → Friendly(x))"
    },
    {
        "NL": "A building primarily used for storing and protecting vehicles is a garage.",
        "FOL": "∀x (Building(x) ∧ UsedForStoringVehicles(x) ∧ ProtectsVehicles(x) → Garage(x))"
    },
    {
        "NL": "A liquid boils at its boiling point.",
        "FOL": "∀x (Liquid(x) ∧ BoilingPoint(x) → Boils(x))"
    },
    {
        "NL": "Frogs and toads, both belonging to the amphibian group, can live in water as well as on land.",
        "FOL": "∀x ∀y (Frog(x) ∧ Toad(y) → (Amphibian(x) ∧ Amphibian(y) ∧ CanLiveInWater(x) ∧ CanLiveInWater(y) ∧ CanLiveOnLand(x) ∧ CanLiveOnLand(y)))"
    },
    {
        "NL": "A hotel offers accommodations for guests, usually with various room types.",
        "FOL": "∀x∀y (Hotel(x) ∧ Guest(y) → OffersAccommodations(x, y, VariousRoomTypes))"
    },
    {
        "NL": "An organism survives in a habitat if it can adapt to the climate and find adequate food sources.",
        "FOL": "∀x ∀y ∀z (Organism(x) ∧ Habitat(y) ∧ Climate(z) ∧ Adapt(x, z) ∧ AdequateFoodSources(x, y) → Survives(x, y))"
    },
    {
        "NL": "Everyone who is a physician and has treated a patient who all recovered, either becomes head of department or earns an excellence award.",
        "FOL": "∀x (Physician(x) ∧ ∀y (Patient(y) ∧ Treated(x, y) ∧ Recovered(y)) → (BecomesHeadOfDepartment(x) ∨ EarnsExcellenceAward(x)))"
    },
    {
        "NL": "A violin is played with a bow, while a guitar is played by plucking or strumming the strings.",
        "FOL": "∀x ∀y (Violin(x) ∧ Guitar(y) → (PlayedWithBow(x) ∧ (PlayedByPlucking(y) ∨ PlayedByStrumming(y))))"
    },
    {
        "NL": "A tourist destination can be urban or rural, but not both crowded and deserted.",
        "FOL": "∀x (TouristDestination(x) → ((Urban(x) ⊕ Rural(x)) ∧ ¬(Crowded(x) ∧ Deserted(x))))"
    },
    {
        "NL": "A fruit is considered ripe if it has reached its peak flavor and texture.",
        "FOL": "∀x (Fruit(x) ∧ PeakFlavor(x) ∧ PeakTexture(x) → Ripe(x))"
    },
    {
        "NL": "Not all vegetables are healthy or tasty.",
        "FOL": "¬∀x (Vegetable(x) → (Healthy(x) ∨ Tasty(x)))"
    },
    {
        "NL": "A celestial object is an asteroid if it is a small rocky body orbiting the sun.",
        "FOL": "∀x (CelestialObject(x) ∧ Asteroid(x) ↔ (SmallRockyBody(x) ∧ OrbitsSun(x)))"
    },
    {
        "NL": "If a shape is not a circle, it has corners and it has sides.",
        "FOL": "∀x (Shape(x) ∧ ¬Circle(x) → (HasCorners(x) ∧ HasSides(x)))"
    },
    {
        "NL": "Red, green, and blue are primary colors.",
        "FOL": "PrimaryColor(red) ∧ PrimaryColor(green) ∧ PrimaryColor(blue)"
    },
    {
        "NL": "Every manager who communicates effectively and efficiently is successful.",
        "FOL": "∀x (Manager(x) ∧ CommunicatesEffectively(x) ∧ CommunicatesEfficiently(x) → Successful(x))"
    },
    {
        "NL": "An insect has six legs and can be either harmless or harmful, but not both.",
        "FOL": "∀x (Insect(x) → (HasSixLegs(x) ∧ (Harmless(x) ⊕ Harmful(x))))"
    },
    {
        "NL": "A museum displays artifacts, educates visitors, and organizes guided tours.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Artifact(y) ∧ GuidedTour(z) → (Displays(x, y) ∧ Educates(x, visitors) ∧ Organizes(x, z)))"
    },
    {
        "NL": "A trombone has a slide, a trumpet has valves, and a flute has keys but no reed.",
        "FOL": "∀x ∀y ∀z (Trombone(x) ∧ Trumpet(y) ∧ Flute(z) → (HasSlide(x) ∧ HasValves(y) ∧ (HasKeys(z) ∧ ¬HasReed(z))))"
    },
    {
        "NL": "Something is a fast car, and something is a slow bicycle.",
        "FOL": "∃x (Fast(x) ∧ Car(x)) ∧ ∃x (Slow(x) ∧ Bicycle(x))"
    },
    {
        "NL": "A vehicle running on gasoline emits carbon dioxide.",
        "FOL": "∀x (Vehicle(x) ∧ RunsOnGasoline(x) → EmitsCarbonDioxide(x))"
    },
    {
        "NL": "A fruit is either a berry, citrus, or stone fruit.",
        "FOL": "∀x (Fruit(x) → (Berry(x) ∨ Citrus(x) ∨ StoneFruit(x)))"
    },
    {
        "NL": "A movie is a box office success if it generates a substantial amount of revenue in relation to its production budget and receives favorable reviews from critics and audiences.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ ProductionBudget(x, y) ∧ Revenue(x, z) ∧ SubstantialAmount(y, z) ∧ FavorableReviewsFromCritics(x) ∧ FavorableReviewsFromAudiences(x) → BoxOfficeSuccess(x))"
    },
    {
        "NL": "A video game has a certain genre, a specific age rating, and can be played in single-player mode xor multiplayer mode.",
        "FOL": "∀x (VideoGame(x) → (∃y Genre(y) ∧ HasGenre(x, y) ∧ (∃z AgeRating(z) ∧ HasRating(x, z)) ∧ (SinglePlayer(x) ⊕ MultiPlayer(x))))"
    },
    {
        "NL": "All books are interesting if and only if they are either a fantasy or a biography.",
        "FOL": "∀x (Book(x) → (Interesting(x) ↔ (Fantasy(x) ∨ Biography(x))))"
    },
    {
        "NL": "An athlete competes in a triathlon if they participate in swimming, cycling, and running events consecutively.",
        "FOL": "∀x (Athlete(x) ∧ ParticipatesInSwimming(x) ∧ ParticipatesInCycling(x) ∧ ParticipatesInRunning(x) ∧ ConsecutiveEvents(x) → Triathlete(x))"
    },
    {
        "NL": "A substance is a pesticide when it is a chemical compound, formulated to prevent or control pests, and targets a variety of organisms, including insects, weeds, and fungi, to protect crops or other plants.",
        "FOL": "∀x (Substance(x) ∧ ChemicalCompound(x) ∧ FormulatedToPreventOrControlPests(x) ∧ TargetsVarietyOfOrganisms(x, insects, weeds, fungi) ∧ ProtectsCropsOrPlants(x) → Pesticide(x))"
    },
    {
        "NL": "A movie is shown in a cinema during a specific time slot if the cinema schedules the movie for that time.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ Cinema(y) ∧ TimeSlot(z) ∧ Schedules(y, x, z) → ShownIn(x, y, z))"
    },
    {
        "NL": "There is a person who respects no one they know.",
        "FOL": "∃x (Person(x) ∧ ∀y (Person(y) ∧ Know(x, y) → ¬Respect(x, y)))"
    },
    {
        "NL": "A song is catchy when it features memorable lyrics, a catchy melody, or a strong rhythm, but not all three factors simultaneously.",
        "FOL": "∀x (Song(x) ∧ ((MemorableLyrics(x) ∧ ¬(CatchyMelody(x) ∧ StrongRhythm(x))) ∨ (CatchyMelody(x) ∧ ¬(MemorableLyrics(x) ∧ StrongRhythm(x))) ∨ (StrongRhythm(x) ∧ ¬(MemorableLyrics(x) ∧ CatchyMelody(x)))) → Catchy(x))"
    },
    {
        "NL": "An event is memorable if it has live performances, exciting attractions, and not exclusively for children.",
        "FOL": "∀x (Event(x) ∧ (LivePerformances(x) ∧ ExcitingAttractions(x) ∧ ¬ExclusivelyForChildren(x)) → Memorable(x))"
    },
    {
        "NL": "Artificial intelligence can learn from experience, reasoning, and human input.",
        "FOL": "∀x (ArtificialIntelligence(x) → (LearnsFromExperience(x) ∨ LearnsFromReasoning(x) ∨ LearnsFromHumanInput(x)))"
    },
    {
        "NL": "For a business to be profitable, its revenue must exceed its expenses and it cannot have any outstanding debts.",
        "FOL": "∀x (Business(x) → ((RevenueExceedsExpenses(x) ∧ ¬OutstandingDebts(x)) → Profitable(x)))"
    },
    {
        "NL": "A national park can be established to protect natural habitats, historic sites, or geological features and can offer recreational activities, scientific research, or education opportunities.",
        "FOL": "∀x (NationalPark(x) → (ProtectsHabitats(x) ∨ ProtectsHistoricSites(x) ∨ ProtectsGeologicalFeatures(x) ∧ (RecreationalActivities(x) ∨ ScientificResearch(x) ∨ EducationOpportunities(x))))"
    },
    {
        "NL": "A kitten is chasing its tail in the room, and a puppy is chewing a bone in the yard.",
        "FOL": "∃x ∃y (Kitten(x) ∧ Room(y) ∧ ChasingIn(x, y)) ∧ ∃z (Puppy(z) ∧ Chewing(z) ∧InTheYard(z))"
    },
    {
        "NL": "All flowers are either roses or tulips, but not both.",
        "FOL": "∀x (Flower(x) ∧ (Rose(x) ⊕ Tulip(x)))"
    },
    {
        "NL": "A nature reserve preserves biodiversity, protecting endangered species and their habitats, while providing opportunities for ecological research and environmental education.",
        "FOL": "∀x (NatureReserve(x) → (PreservesBiodiversity(x) ∧ ProtectsEndangeredSpecies(x) ∧ ProtectsHabitats(x) ∧ ProvidesEcologicalResearchOpportunities(x) ∧ OffersEnvironmentalEducation(x)))"
    },
    {
        "NL": "Laptops have screens, keyboards, and touchpads for user interaction.",
        "FOL": "∀x (Laptop(x) → (Has(y) ∧ Screen(y) ∧ Has(z) ∧ Keyboard(z) ∧ Has(w) ∧ Touchpad(w) ∧ ForUserInteraction(x, y, z, w)))"
    },
    {
        "NL": "A movie captivates its audience with an intriguing plot or relatable characters, yet avoids excessive violence.",
        "FOL": "∀x (Movie(x) → (((IntriguingPlot(x) ∨ RelatableCharacters(x)) ∧ ¬ExcessiveViolence(x)) ↔ Captivating(x)))"
    },
    {
        "NL": "In a restaurant, chefs prepare meals that customers order from a menu.",
        "FOL": "∀x ∀y ∀z (Restaurant(x) ∧ Chef(y) ∧ Customer(z) ∧ OrderFromMenu(z, x) → PrepareMeals(y, x))"
    },
    {
        "NL": "Each scientist is knowledgeable or some cats are white if and only if there exists a theory which is intriguing unless there are no phobias.",
        "FOL": "(∀x (Scientist(x) → Knowledgeable(x)) ∨ ∃y (Cat(y) ∧ White(y))) ↔ (∃z (Theory(z) ∧ (Intriguing(z) ∨ ∀w (¬Phobia(w)))))"
    },
    {
        "NL": "A disease spreads rapidly in a population when there's high transmission rate and low immunity.",
        "FOL": "∀x∀y (Disease(x) ∧ Population(y) ∧ SpreadsRapidly(x, y) ↔ (HighTransmissionRate(x, y) ∧ LowImmunity(y)))"
    },
    {
        "NL": "Fish extract oxygen from water using their gills, allowing them to breathe underwater.",
        "FOL": "∀x ∀y (Fish(x) ∧ Oxygen(o) ∧ Water(w) ∧ Gills(g) → ExtractsAndBreathes(x, o, w, g))"
    },
    {
        "NL": "An organism belongs to the kingdom Fungi if it has a cell wall made of chitin and obtains nutrients through absorption.",
        "FOL": "∀x (Organism(x) ∧ CellWallMadeOfChitin(x) ∧ ObtainsNutrientsThroughAbsorption(x) → KingdomFungi(x))"
    },
    {
        "NL": "Every book has an author.",
        "FOL": "∀x (Book(x) → ∃y (Author(y) ∧ WrittenBy(x, y)))"
    },
    {
        "NL": "There are clients who have experienced each service.",
        "FOL": "∃x (Client(x) ∧ ∀y (Service(y) → Experienced(x, y)))"
    },
    {
        "NL": "No books are interesting unless you like reading, but not all of them are bestsellers.",
        "FOL": "¬∃x (Book(x) ∧ Interesting(x) ∨ LikeReading(x)) ∧ ¬∀y (Book(y) → Bestseller(y))"
    },
    {
        "NL": "If a vehicle is damaged, then it has more problems and functions poorly.",
        "FOL": "∀x (Vehicle(x) ∧ Damaged(x) → HasMoreProblems(x) ∧ FunctionsPoorly(x))"
    },
    {
        "NL": "A small business may succeed with an innovative product, while a large business may succeed with efficient operations.",
        "FOL": "∀x (SmallBusiness(x) ∧ InnovativeProduct(y) → Succeeds(x, y)) ∨ (LargeBusiness(x) ∧ EfficientOperations(z) → Succeeds(x, z))"
    },
    {
        "NL": "A person who is a dentist diagnoses and treats problems with teeth and gums.",
        "FOL": "∀x (Dentist(x) → DiagnosesAndTreatsTeethAndGums(x))"
    },
    {
        "NL": "A movie's length is measured in minutes or hours.",
        "FOL": "∀x (Movie(x) → (MeasuredIn(x, Minutes) ∨ MeasuredIn(x, Hours)))"
    },
    {
        "NL": "Each manager who is efficient is respected by all employees.",
        "FOL": "∀x (Manager(x) ∧ Efficient(x) → ∀y (Employee(y) → Respects(y, x)))"
    },
    {
        "NL": "A library maintains various kinds of books and manuscripts while offering opportunities for reading and research.",
        "FOL": "∀x ∃y ∃z (Library(x) → (Book(y) ∧ Manuscript(z) ∧ Maintains(x, y) ∧ Maintains(x, z) ∧ ProvidesReadingOpportunities(x) ∧ ProvidesResearchOpportunities(x)))"
    },
    {
        "NL": "An enzyme catalyzes a chemical reaction within a cell if the enzyme is specific to the reaction, the reaction occurs in the cell's metabolic pathway, and the enzyme binds to the reactants to facilitate the reaction.",
        "FOL": "∀x∀y∀z (Catalyzes(x, y, z) ↔ (Enzyme(x) ∧ ChemicalReaction(y) ∧ Cell(z) ∧ SpecificToReaction(x, y) ∧ OccursInMetabolicPathway(y, z) ∧ BindsToReactants(x, y)))"
    },
    {
        "NL": "A journalist reports news stories and conducts interviews to gather information and provide accurate coverage.",
        "FOL": "∀x (Journalist(x) → (ReportsNewsStories(x) ∧ ConductsInterviews(x) ∧ ProvidesAccurateCoverage(x)))"
    },
    {
        "NL": "A comedy show can provoke laughter in the spectators.",
        "FOL": "∀x ∀y (Show(x) ∧ Comedy(x) ∧ Spectator(y) → CanProvokeLaughter(x, y))"
    },
    {
        "NL": "Siblings may look alike, but they still have their unique interests.",
        "FOL": "∀x ∃y (Sibling(x, y) → LookAlike(x, y) ∧ HaveUniqueInterests(x) ∧ HaveUniqueInterests(y))"
    },
    {
        "NL": "A pencil is used for writing or drawing, while a paintbrush is used for painting.",
        "FOL": "∀x ∀y (Pencil(x) ∧ Paintbrush(y) → (ForWriting(x) ∨ ForDrawing(x)) ∧ ForPainting(y))"
    },
    {
        "NL": "If a room is dusty and dim, then it contains at least one book, unless it is a bathroom.",
        "FOL": "∀x ((Dusty(x) ∧ Dim(x)) → ∃y (Book(y) ∧ Contains(x, y) ∨ Bathroom(x)))"
    },
    {
        "NL": "The Moon orbits Earth, which in turn orbits the Sun, and both celestial bodies exert gravitational forces on each other.",
        "FOL": "Orbits(Moon, Earth) ∧ Orbits(Earth, Sun) ∧ GravitationalForce(Moon, Earth) ∧ GravitationalForce(Earth, Moon)"
    },
    {
        "NL": "An investment is considered risky if it has high volatility or low liquidity, even if it has a history of high returns.",
        "FOL": "∀x (Investment(x) ∧ Risky(x) ↔ (HighVolatility(x) ∨ LowLiquidity(x)) ∧ HighReturns(x))"
    },
    {
        "NL": "A Python is not venomous, while a cobra is venomous, but a turtle lacks venom.",
        "FOL": "∀x (Python(x) → ¬Venomous(x)) ∧ ∀y (Cobra(y) → Venomous(y)) ∧ ∀z (Turtle(z) → ¬HasVenom(z))"
    },
    {
        "NL": "A planet with a thick atmosphere can have a greenhouse effect or strong winds.",
        "FOL": "∀x (Planet(x) ∧ ThickAtmosphere(x) → (GreenhouseEffect(x) ∨ StrongWinds(x)))"
    },
    {
        "NL": "A successful startup generates innovative solutions, attracts funding from investors, and creates job opportunities in the market.",
        "FOL": "∀x∀y∀z (Startup(x) ∧ Successful(x) → (GeneratesInnovativeSolutions(x, y) ∧ AttractsFundingFromInvestors(x, z) ∧ CreatesJobOpportunities(x)))"
    },
    {
        "NL": "A person is considered a photographer if they capture images using a camera.",
        "FOL": "∀x (Person(x) ∧ CapturesImages(x) ∧ UsesCamera(x) → Photographer(x))"
    },
    {
        "NL": "It's not a fact that all machines are noisy.",
        "FOL": "¬∀x (Machine(x) → Noisy(x))"
    },
    {
        "NL": "A country is prosperous if it has a strong economy and low unemployment rate.",
        "FOL": "∀x (Country(x) ∧ StrongEconomy(x) ∧ LowUnemployment(x) → Prosperous(x))"
    },
    {
        "NL": "A computer processes data by executing instructions from a program stored in memory.",
        "FOL": "∀x∀y∀z (Computer(x) ∧ Data(y) ∧ Program(z) ∧ StoredInMemory(z) → ProcessesByExecuting(x, y, z))"
    },
    {
        "NL": "A snowflake has a unique crystalline structure.",
        "FOL": "∀x (Snowflake(x) → UniqueCrystallineStructure(x))"
    },
    {
        "NL": "A person is considered a writer if they compose literary works, such as novels, essays, or poetry.",
        "FOL": "∀x (Person(x) ∧ ComposesLiteraryWorks(x) ∧ (Novels(x) ∨ Essays(x) ∨ Poetry(x)) → Writer(x))"
    },
    {
        "NL": "A fruit is ripe if it has a sweet taste and a soft texture.",
        "FOL": "∀x (Fruit(x) ∧ SweetTaste(x) ∧ SoftTexture(x) → Ripe(x))"
    },
    {
        "NL": "A few smartphones support wireless charging, are waterproof, and have a high-resolution camera.",
        "FOL": "∃x (Smartphone(x) ∧ WirelessCharging(x) ∧ Waterproof(x) ∧ HighResolutionCamera(x))"
    },
    {
        "NL": "All gardeners who love every flower are admired by someone.",
        "FOL": "∀x (Gardener(x) → ∀y ((Flower(y) → Love(x, y)) → ∃z (Person(z) ∧ Admire(z, x))))"
    },
    {
        "NL": "An object is round if and only if it links to a small object.",
        "FOL": "∀x (Round(x) ↔ ∃y (Small(y) ∧ LinksTo(x, y)))"
    },
    {
        "NL": "A marathon is organized by a city, has a specific course, and a defined distance.",
        "FOL": "∀x∀y∀z (Marathon(x) ∧ City(y) ∧ Course(z) → (Organizes(y, x) ∧ HasCourse(x, z) ∧ HasDefinedDistance(z)))"
    },
    {
        "NL": "If Irene is a climber then there are trails.",
        "FOL": "Climber(irene) → ∃x (Trail(x))"
    },
    {
        "NL": "A fruit is ripe if and only if it is soft and sweet.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ↔ IsSoft(x) ∧ IsSweet(x)))"
    },
    {
        "NL": "A volume is an odyssey if it traces the life path of a distinct person, composed by that person.",
        "FOL": "∀x ∃y (Volume(x) ∧ Person(y) ∧ TracesLifePath(x, y) ∧ ComposedBy(x, y) → Odyssey(x))"
    },
    {
        "NL": "A renewable energy source, such as wind, solar, or hydroelectric power, produces energy with minimal environmental impact.",
        "FOL": "∀x∀y (RenewableEnergySource(x) ∧ (Wind(x) ∨ Solar(x) ∨ Hydroelectric(x)) → ProducesEnergyWithMinimalImpact(y))"
    },
    {
        "NL": "A coin can land on heads or tails but not both.",
        "FOL": "∀x (Coin(x) → (LandsOnHeads(x) ⊕ LandsOnTails(x)))"
    },
    {
        "NL": "Each scientist who researches quantum mechanics understands uncertainty.",
        "FOL": "∀x (Scientist(x) ∧ ResearchesQuantumMechanics(x) → UnderstandsUncertainty(x))"
    },
    {
        "NL": "A person is considered a nurse if they provide healthcare services and support to patients under the supervision of a doctor.",
        "FOL": "∀x ∃y (Person(x) ∧ ProvidesHealthcareServices(x) ∧ SupportsPatients(x) ∧ SupervisedByDoctor(x, y) ∧ Doctor(y) → Nurse(x))"
    },
    {
        "NL": "A triangle is purple or signals a orange thing.",
        "FOL": "∀x (Triangle(x) → (Purple(x) ∨ ∃y (Orange(y) ∧ Signals(x, y))))"
    },
    {
        "NL": "A product is sold in a store if it is part of the store's inventory and the product's price matches the store's pricing policy.",
        "FOL": "∀x∀y (Product(x) ∧ Store(y) ∧ InventoryItem(x, y) ∧ PricingPolicy(y, x) → SoldIn(x, y))"
    },
    {
        "NL": "A window is open if it is not closed.",
        "FOL": "∀x (Window(x) ∧ ¬Closed(x) → Open(x))"
    },
    {
        "NL": "When a plant receives sufficient sunlight, absorbs adequate water, and is provided with essential nutrients, it will flourish.",
        "FOL": "∀x (Plant(x) ∧ SufficientSunlight(x) ∧ AdequateWater(x) ∧ EssentialNutrients(x) → Flourish(x))"
    },
    {
        "NL": "All fruits are edible for some birds.",
        "FOL": "∀x (Fruit(x) → ∃y (Bird(y) ∧ EdibleFor(x, y)))"
    },
    {
        "NL": "A well-maintained bicycle offers a smoother and more enjoyable riding experience.",
        "FOL": "∀x (Bicycle(x) ∧ WellMaintained(x) → SmootherAndMoreEnjoyableRiding(x))"
    },
    {
        "NL": "Benjamin is a soldier, Harper is a physiotherapist, and Max is an accountant.",
        "FOL": "Soldier(benjamin) ∧ Physiotherapist(harper) ∧ Accountant(max)"
    },
    {
        "NL": "A painter creates artwork, a gallery displays artwork, and a collector purchases artwork.",
        "FOL": "∀x∀y∀z (Painter(x) ∧ Gallery(y) ∧ Collector(z) → (CreatesArtwork(x) ∧ DisplaysArtwork(y) ∧ PurchasesArtwork(z)))"
    },
    {
        "NL": "No writers are successful unless they are imaginative, but all of them strive to finish a book.",
        "FOL": "∀x (Writer(x) → (¬Successful(x) ∨ Imaginative(x))) ∧ ∀y (Writer(y) → StrivesToFinishBook(y))"
    },
    {
        "NL": "An individual is considered vegan if they do not consume any animal products or by-products.",
        "FOL": "∀x (Individual(x) ∧ ¬∃y (AnimalProductOrByProduct(y) ∧ Consumes(x, y)) → Vegan(x))"
    },
    {
        "NL": "A smartphone has a touchscreen and can make calls, while a tablet has a larger touchscreen but lacks the ability to make calls.",
        "FOL": "∀x∀y (Smartphone(x) ∧ Tablet(y) → (HasTouchscreen(x) ∧ CanMakeCalls(x) ∧ HasLargerTouchscreen(y) ∧ ¬CanMakeCalls(y)))"
    },
    {
        "NL": "Each dog in the park is wearing a collar.",
        "FOL": "∀x (Dog(x) → WearingCollar(x))"
    },
    {
        "NL": "A machine that processes raw materials and transforms them into a finished product is part of a manufacturing system.",
        "FOL": "∀x∀y∀z (Machine(x) ∧ ProcessesRawMaterials(x, y) ∧ TransformsIntoFinishedProduct(x, z) → PartOfManufacturingSystem(x))"
    },
    {
        "NL": "A diet that is rich in fruits and vegetables and low in saturated fats promotes heart health.",
        "FOL": "∀x ∀y (Diet(x) ∧ RichInFruitsAndVegetables(x) ∧ LowInSaturatedFats(x) → PromotesHeartHealth(y))"
    },
    {
        "NL": "A renewable energy source that generates consistent power, has low environmental impact, and is cost-effective can contribute to sustainable energy production.",
        "FOL": "∀x ∀y ∀z (RenewableEnergySource(x) ∧ GeneratesConsistentPower(x) ∧ LowEnvironmentalImpact(x) ∧ CostEffective(x) → ContributesToSustainableEnergyProduction(y, z))"
    },
    {
        "NL": "A computer is a laptop if it is portable, has a built-in keyboard, and has a built-in display.",
        "FOL": "∀x (Laptop(x) ↔ (Computer(x) ∧ Portable(x) ∧ ∃y (BuiltInKeyboard(y) ∧ Has(x, y)) ∧ ∃z (BuiltInDisplay(z) ∧ Has(x, z))))"
    },
    {
        "NL": "A painter creates artwork on a canvas.",
        "FOL": "∀x∀y (Painter(x) ∧ Canvas(y) → CreatesArtworkOn(x, y))"
    },
    {
        "NL": "A painting cannot be both abstract and realistic.",
        "FOL": "∀x (Painting(x) → ¬(Abstract(x) ∧ Realistic(x)))"
    },
    {
        "NL": "A car with advanced safety features and high fuel efficiency is more likely to receive positive consumer reviews.",
        "FOL": "∀x ∀y (Car(x) ∧ AdvancedSafetyFeatures(x) ∧ HighFuelEfficiency(x) → MoreLikelyToReceivePositiveConsumerReviews(y))"
    },
    {
        "NL": "A type of device that captures and records visual images, either as still photographs or as moving images, is a camera.",
        "FOL": "∀x (Device(x) ∧ CapturesVisualImages(x) ∧ RecordsVisualImages(x) ∧ TakesStillPhotographs(x) ∨ TakesMovingImages(x) → Camera(x))"
    },
    {
        "NL": "A beverage is cold or hot and served in a cup or glass.",
        "FOL": "∀x (Beverage(x) → ((Cold(x) ∨ Hot(x)) ∧ (ServedIn(x, \"cup\") ∨ ServedIn(x, \"glass\"))))"
    },
    {
        "NL": "A musical instrument that is a percussion instrument creates sound through striking, shaking, or scraping.",
        "FOL": "∀x (MusicalInstrument(x) ∧ PercussionInstrument(x) → CreatesSoundThroughStriking(x) ∨ CreatesSoundThroughShaking(x) ∨ CreatesSoundThroughScraping(x))"
    },
    {
        "NL": "If a person has a high fever and a persistent cough, they might have pneumonia.",
        "FOL": "∀x (Person(x) ∧ HighFever(x) ∧ PersistentCough(x) → MightHavePneumonia(x))"
    },
    {
        "NL": "All prime numbers have exactly two factors.",
        "FOL": "∀x (PrimeNumber(x) → HasTwoFactors(x))"
    },
    {
        "NL": "A fruit is either an apple or an orange if it is round and edible.",
        "FOL": "∀x (Fruit(x) ∧ Round(x) ∧ Edible(x) → (Apple(x) ⊕ Orange(x)))"
    },
    {
        "NL": "A spider has eight legs, an insect has six legs, and a snail has no legs.",
        "FOL": "∀x ∀y ∀z (Spider(x) ∧ Insect(y) ∧ Snail(z) → (HasLegs(x, 8) ∧ HasLegs(y, 6) ∧ HasLegs(z, 0)))"
    },
    {
        "NL": "Not all films continue forever, however, it is exciting to watch films.",
        "FOL": "¬∀x (Film(x) → ContinuesForever(x)) ∧ ∀y (Film(y) → ExcitingToWatch(y))"
    },
    {
        "NL": "A sport is a team sport if players work together in groups and compete against other groups.",
        "FOL": "∀x (Sport(x) ∧ WorkInGroups(x) ∧ CompeteAgainstGroups(x) → TeamSport(x))"
    },
    {
        "NL": "A laptop allows access to the internet and has various applications and services.",
        "FOL": "∀x (Laptop(x) → (AllowsAccessToInternet(x) ∧ HasVariousApplications(x) ∧ HasVariousServices(x)))"
    },
    {
        "NL": "Every teacher teaches something he studies and studies something he does not teach.",
        "FOL": "∀x (Teacher(x) → (∃y (Study(x, y) ∧ Teach(x, y)) ∧ ∃z (Study(x, z) ∧ ¬Teach(x, z))))"
    },
    {
        "NL": "A device that has a screen and can access the internet is a computer.",
        "FOL": "∀x (Device(x) ∧ HasScreen(x) ∧ CanAccessInternet(x) → Computer(x))"
    },
    {
        "NL": "No student who studies every complex subject exists.",
        "FOL": "¬∃x (Student(x) ∧ ∀y (Complex(y) ∧ Subject(y) → Studies(x, y)))"
    },
    {
        "NL": "Not all paintings are impressive, but every impressive painting inspires creativity.",
        "FOL": "¬∀x (Painting(x) → Impressive(x)) ∧ ∀y (Impressive(y) ∧ Painting(y) → InspiresCreativity(y))"
    },
    {
        "NL": "During the process of photosynthesis, plants use sunlight, carbon dioxide, and water as inputs to produce glucose and oxygen, which serve as energy sources and respiratory substrates for the plant, as well as other organisms in the ecosystem.",
        "FOL": "∀x∀y∀z (Photosynthesis(x) ∧ Inputs(y) ∧ Outputs(z) → (SunlightCarbonDioxideWater(y) ∧ GlucoseOxygen(z) ∧ ProduceUsingInputs(x, y) ∧ ProduceOutputs(x, z) ∧ EnergySourcesRespiratorySubstrates(x, z) ∧ ServesEcosystem(x)))"
    },
    {
        "NL": "A car is considered a convertible if it has a removable or retractable roof.",
        "FOL": "∀x (Car(x) → (Convertible(x) ↔ RemovableOrRetractableRoof(x)))"
    },
    {
        "NL": "Each student who is intelligent and industrious receives good grades.",
        "FOL": "∀x (Student(x) ∧ Intelligent(x) ∧ Industrious(x) → GoodGrades(x))"
    },
    {
        "NL": "A fashion choice is stylish if it is trendy, comfortable, and either colorful or has interesting patterns.",
        "FOL": "∀x (FashionChoice(x) ∧ Trendy(x) ∧ Comfortable(x) → (Colorful(x) ∨ InterestingPatterns(x)) ∧ Stylish(x))"
    },
    {
        "NL": "When a plant receives adequate sunlight, sufficient water, and proper nutrients, it will grow healthily and produce more flowers.",
        "FOL": "∀x (Plant(x) ∧ AdequateSunlight(x) ∧ SufficientWater(x) ∧ ProperNutrients(x) → (GrowsHealthily(x) ∧ ProducesMoreFlowers(x)))"
    },
    {
        "NL": "A toy is popular if it is fun to play with, safe for children, and it is either inexpensive or has educational value.",
        "FOL": "∀x (Toy(x) ∧ Fun(x) ∧ SafeForChildren(x) ∧ (Inexpensive(x) ∨ EducationalValue(x)) → Popular(x))"
    },
    {
        "NL": "A river is navigable if it has a wide channel, sufficient water depth, and relatively calm currents.",
        "FOL": "∀x (River(x) ∧ WideChannel(x) ∧ SufficientWaterDepth(x, y) ∧ CalmCurrents(x, z) → Navigable(x))"
    },
    {
        "NL": "If a person is a gardener, they maintain and cultivate plants.",
        "FOL": "∀x ∃y (Gardener(x) → (MaintainsPlants(x, y) ∧ CultivatesPlants(x, y)))"
    },
    {
        "NL": "A raincoat is a type of clothing designed to protect from rain, worn as an outer layer, and is not an umbrella.",
        "FOL": "∀x (Raincoat(x) ↔ (Clothing(x) ∧ ProtectsFromRain(x) ∧ OuterLayer(x) ∧ ¬Umbrella(x)))"
    },
    {
        "NL": "A tree loses its leaves in autumn if it is a deciduous tree, which helps the tree conserve water during the winter months.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → LosesLeavesInAutumnAndConservesWaterInWinter(x))"
    },
    {
        "NL": "Economies experience inflation when the average price level of goods and services increases over time.",
        "FOL": "∀x∀y (Economy(x) ∧ AveragePriceLevel(y) ∧ IncreasesOverTime(y) → Inflation(x))"
    },
    {
        "NL": "A building is a museum if it is dedicated to preserving, exhibiting, and interpreting artifacts or works of art for public education.",
        "FOL": "∀x∀y (Building(x) ∧ DedicatedToPreserving(x) ∧ Exhibiting(x) ∧ Interpreting(x, y) ∧ PublicEducation(x) → Museum(x))"
    },
    {
        "NL": "Paintings featuring vibrant colors and unique compositions can evoke strong emotions in viewers.",
        "FOL": "∀x (Painting(x) ∧ VibrantColors(x) ∧ UniqueComposition(x) → EvokesStrongEmotions(x))"
    },
    {
        "NL": "No apprentice who idolizes every master is admired by any being.",
        "FOL": "∀x (Apprentice(x) → ∀y ((Master(y) → Idolize(x, y)) → ¬∃z (Being(z) ∧ Admire(z, x))))"
    },
    {
        "NL": "A computer is considered portable if it has a lightweight design and can operate on battery power.",
        "FOL": "∀x (Computer(x) ∧ LightweightDesign(x) ∧ OperatesOnBatteryPower(x) → Portable(x))"
    },
    {
        "NL": "A phone call can be made using a landline, a mobile phone, or an internet-based service.",
        "FOL": "∀x ∀y (PhoneCall(x) ∧ (Landline(y) ∨ MobilePhone(y) ∨ InternetBasedService(y)) → MadeUsing(x, y))"
    },
    {
        "NL": "No one is a rich man or a poor woman.",
        "FOL": "¬∃x ((Rich(x) ∧ Man(x)) ∨ (Poor(x) ∧ Woman(x)))"
    },
    {
        "NL": "A restaurant is family-friendly if it has a kids' menu, affordable prices, and a welcoming atmosphere.",
        "FOL": "∀x (Restaurant(x) → (KidsMenu(x) ∧ AffordablePrices(x) ∧ WelcomingAtmosphere(x) ↔ FamilyFriendly(x)))"
    },
    {
        "NL": "A meal is enjoyable when it is not too spicy and combines sweet or savory flavors.",
        "FOL": "∀x (Meal(x) ∧ ¬TooSpicy(x) ∧ (SweetFlavors(x) ∨ SavoryFlavors(x)) → Enjoyable(x))"
    },
    {
        "NL": "There does not exist an oval that covers all big rectangles.",
        "FOL": "¬∃x (Oval(x) ∧ ∀y (Big(y) ∧ Rectangle(y) → Covers(x, y)))"
    },
    {
        "NL": "Birds build nests.",
        "FOL": "∀x ∀y (Bird(x) ∧ Nest(y) → Build(x, y))"
    },
    {
        "NL": "A plant needs sunlight and water to grow and thrive.",
        "FOL": "∀x (Plant(x) → (NeedsSunlight(x) ∧ NeedsWater(x) → GrowsAndThrives(x)))"
    },
    {
        "NL": "A celestial body is a planet if it orbits around a star and is not a satellite of another celestial body.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsAroundStar(x) ∧ ¬SatelliteOfOtherCelestialBody(x) → Planet(x))"
    },
    {
        "NL": "A school teaches subjects like mathematics, science, or literature.",
        "FOL": "∀x∀y (School(x) ∧ (Mathematics(y) ∨ Science(y) ∨ Literature(y)) → Teaches(x, y))"
    },
    {
        "NL": "All birds can fly, except for ostriches and penguins.",
        "FOL": "∀x (Bird(x) ∧ ¬Ostrich(x) ∧ ¬Penguin(x) → CanFly(x))"
    },
    {
        "NL": "Solar panels convert sunlight into electricity.",
        "FOL": "∀x (SolarPanel(x) → (Converts(x, Sunlight, Electricity)))"
    },
    {
        "NL": "A flower is colorful if it's a tulip or a rose, but not both.",
        "FOL": "∀x (Flower(x) → (Colorful(x) ↔ ((Tulip(x) ∨ Rose(x)) ∧ ¬(Tulip(x) ∧ Rose(x)))))"
    },
    {
        "NL": "Soap operas are not real life.",
        "FOL": "∀x (SoapOpera(x) → ¬RealLife(x))"
    },
    {
        "NL": "An optical instrument that magnifies distant objects, allowing them to be observed more closely, is referred to as a telescope.",
        "FOL": "∀x (OpticalInstrument(x) ∧ MagnifiesDistantObjects(x) ∧ AllowsCloseObservation(x) → Telescope(x))"
    },
    {
        "NL": "A publishing company prints books, while a recording company produces music.",
        "FOL": "∃x ∃y (PublishingCompany(x) ∧ Book(y) ∧ Print(x, y)) ∧ ∃z ∃w (RecordingCompany(z) ∧ Music(w) ∧ Produce(z, w))"
    },
    {
        "NL": "No one at the symposium converses with either Helen or Luke.",
        "FOL": "∀x (Person(x) ∧ AtSymposium(x) → ¬Converse(x, helen) ∧ ¬Converse(x, luke))"
    },
    {
        "NL": "No musician who plays either the guitar or the piano is unskilled, and not every one of them is a known artist.",
        "FOL": "¬∃x (Musician(x) ∧ (PlaysGuitar(x) ∨ PlaysPiano(x)) ∧ Unskilled(x)) ∧ ¬∀y (Musician(y) → KnownArtist(y))"
    },
    {
        "NL": "Effective communication fosters relationships and minimizes misunderstanding.",
        "FOL": "∀x (EffectiveCommunication(x) → (FostersRelationships(x) ∧ MinimizesMisunderstanding(x)))"
    },
    {
        "NL": "A chef makes pastries, and a bakery sells them.",
        "FOL": "∀x ∀y (Chef(x) ∧ Pastry(y) → Make(x, y)) ∧ ∀z ∀w (Bakery(z) ∧ Pastry(w) → Sell(z, w))"
    },
    {
        "NL": "Maria is not a doctor and Claire is not a doctor.",
        "FOL": "¬Doctor(maria) ∧ ¬Doctor(claire)"
    },
    {
        "NL": "A greenhouse is a structure with transparent walls and roof, designed for growing plants in a controlled environment, often used for cultivating fruits, vegetables, or flowers.",
        "FOL": "∀x (Greenhouse(x) → (Structure(x) ∧ TransparentWalls(x) ∧ TransparentRoof(x) ∧ DesignedForGrowingPlants(x) ∧ ControlledEnvironment(x) ∧ (CultivatesFruits(x) ∨ CultivatesVegetables(x) ∨ CultivatesFlowers(x))))"
    },
    {
        "NL": "Frogs are amphibians, while snakes are reptiles.",
        "FOL": "∀x∀y (Frog(x) → Amphibian(x)) ∧ (Snake(y) → Reptile(y))"
    },
    {
        "NL": "Every mineral is dissolvable in some substance.",
        "FOL": "∀x (Mineral(x) → ∃y (Substance(y) ∧ DissolvableIn(x, y)))"
    },
    {
        "NL": "A company that is profitable and innovative attracts investors.",
        "FOL": "∀x∀y (Company(x) ∧ Profitable(x) ∧ Innovative(x) → AttractsInvestors(y, x))"
    },
    {
        "NL": "Not every scientific discovery has practical applications, and some discoveries advance theoretical knowledge or lead to further research.",
        "FOL": "¬∀x (ScientificDiscovery(x) → PracticalApplications(x)) ∧ ∃y (ScientificDiscovery(y) ∧ (AdvancesTheoreticalKnowledge(y) ∨ LeadsToFurtherResearch(y)))"
    },
    {
        "NL": "A wind turbine generates electricity by converting the kinetic energy of wind into electrical energy.",
        "FOL": "∀x∀y (WindTurbine(x) ∧ KineticEnergy(y) ∧ Wind(y) ∧ ConvertsToElectricalEnergy(x, y) → GeneratesElectricity(x))"
    },
    {
        "NL": "A viable renewable energy solution that harnesses solar power, wind energy, and hydroelectric resources can reduce dependence on fossil fuels and decrease greenhouse gas emissions.",
        "FOL": "∀x (ViableRenewableEnergySolution(x) → HarnessesSolarPower(x) ∧ WindEnergy(x) ∧ HydroelectricResources(x) ∧ ReducesDependenceOnFossilFuels(x) ∧ DecreasesGreenhouseGasEmissions(x))"
    },
    {
        "NL": "Something is a cylinder only if it is blue.",
        "FOL": "∀x (Cylinder(x) → Blue(x))"
    },
    {
        "NL": "It is not the case that there is a teacher who teaches all difficult subjects.",
        "FOL": "¬∃x (Teacher(x) ∧ ∀y (Difficult(y) ∧ Subject(y) → Teaches(x, y)))"
    },
    {
        "NL": "All teachers are not lazy.",
        "FOL": "∀x (Teacher(x) → ¬Lazy(x))"
    },
    {
        "NL": "There isn't a country that trades with every developing nation.",
        "FOL": "¬∃x (Country(x) ∧ ∀y (DevelopingNation(y) → TradesWith(x, y)))"
    },
    {
        "NL": "A type of coniferous tree with needle-like leaves, producing cones, and often found in cold climates is a pine tree.",
        "FOL": "∀x (ConiferousTree(x) ∧ NeedleLikeLeaves(x) ∧ ProducesCones(x) ∧ FoundInColdClimates(x) → PineTree(x))"
    },
    {
        "NL": "A person who is both a student and an employee is considered a working student.",
        "FOL": "∀x ((Student(x) ∧ Employee(x)) → WorkingStudent(x))"
    },
    {
        "NL": "An artwork is captivating if it exhibits striking visuals, conveys a powerful message, and evokes an emotional response.",
        "FOL": "∀x (Artwork(x) ∧ StrikingVisuals(x) ∧ PowerfulMessage(x) ∧ EmotionalResponse(x) → Captivating(x))"
    },
    {
        "NL": "There's no teacher who has taught all history topics but has never taught a math subject.",
        "FOL": "¬∃x (Teacher(x) ∧ ∀y (HistoryTopic(y) → HasTaught(x, y)) ∧ ¬∃z (MathSubject(z) ∧ HasTaught(x, z)))"
    },
    {
        "NL": "A man is happy if and only if they are wealthy and have friends.",
        "FOL": "∀x (Man(x) → (Happy(x) ↔ (Wealthy(x) ∧ HasFriends(x))))"
    },
    {
        "NL": "Some handguns are either semi-automatic or fully automatic, but not both.",
        "FOL": "∃x (Handgun(x) ∧ (SemiAutomatic(x) ⊕ FullyAutomatic(x)))"
    },
    {
        "NL": "Healthy sleeping patterns increase productivity.",
        "FOL": "∀x (HealthySleepingPatterns(x) → IncreaseProductivity(x))"
    },
    {
        "NL": "A fruit is ripe if it is ready to be consumed and has reached its optimal taste.",
        "FOL": "∀x (Fruit(x) ∧ ReadyToBeConsumed(x) ∧ OptimalTaste(x) → Ripe(x))"
    },
    {
        "NL": "A celestial body that is spherical, has a natural satellite orbiting it, and is not a star, is a planet or a dwarf planet.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ Spherical(x) ∧ NaturalSatellite(y) ∧ Orbits(y, x) ∧ ¬Star(x) → (Planet(x) ∨ DwarfPlanet(x)))"
    },
    {
        "NL": "All roses are red.",
        "FOL": "∀x (Rose(x) → Red(x))"
    },
    {
        "NL": "There are athletes who are neither arrogant nor lazy.",
        "FOL": "∃x (Athlete(x) ∧ ¬(Arrogant(x) ∨ Lazy(x)))"
    },
    {
        "NL": "Unless a thing is neither yellow nor blue, it is a square.",
        "FOL": "∀x ((Yellow(x) ∨ Blue(x)) → Square(x))"
    },
    {
        "NL": "A medical imaging technique that uses ultrasound is non-invasive, utilizes high-frequency sound waves, and produces real-time images.",
        "FOL": "∀x (MedicalImagingTechnique(x) ∧ Ultrasound(x) → NonInvasive(x) ∧ UtilizesHighFrequencySoundWaves(x) ∧ ProducesRealTimeImages(x))"
    },
    {
        "NL": "A species of plant, when grown in a specific habitat with appropriate environmental conditions, can provide shelter and food for various animals, like insects or birds.",
        "FOL": "∀x ∀y ∀z (PlantSpecies(x) ∧ SpecificHabitat(y) ∧ AppropriateEnvironmentalConditions(y) → ProvidesShelterAndFood(x, z))"
    },
    {
        "NL": "Marathon runners must maintain a steady pace to conserve energy and prevent exhaustion.",
        "FOL": "∀x (MarathonRunner(x) → (MaintainSteadyPace(x) ∧ ConserveEnergy(x) ∧ PreventExhaustion(x)))"
    },
    {
        "NL": "If any entity is a triangle, then all paths lead to a tiny particle.",
        "FOL": "∃x (Triangle(x)) → ∀y ∃z (Tiny(z) ∧ LeadsTo(y, z))"
    },
    {
        "NL": "Some musicians either play guitar or drums, but do not do both.",
        "FOL": "∃x (Musician(x) ∧ (Guitar(x) ⊕ Drums(x)))"
    },
    {
        "NL": "Rainbows appear after rain and sunshine.",
        "FOL": "∀x (Rainbow(x) ↔ (AfterRain(x) ∧ Sunshine(x)))"
    },
    {
        "NL": "No appliance is green unless it uses wind energy or recycles materials, and not all of them are budget-friendly.",
        "FOL": "¬∃x (Appliance(x) ∧ Green(x) ∨ (UsesWindEnergy(x) ∨ RecyclesMaterials(x))) ∧ ¬∀y (Appliance(y) → BudgetFriendly(y))"
    },
    {
        "NL": "Some fruits, like oranges and lemons, are citrus fruits.",
        "FOL": "∃x∃y (Fruit(x) ∧ Fruit(y) ∧ Citrus(x) ∧ Citrus(y) ∧ Orange(x) ∧ Lemon(y))"
    },
    {
        "NL": "No city is both glamorous and cheap.",
        "FOL": "¬∃x (City(x) ∧ Glamorous(x) ∧ Cheap(x))"
    },
    {
        "NL": "A good book with an engaging plot and well-developed characters can transport readers to another world.",
        "FOL": "∀x (GoodBook(x) ∧ EngagingPlot(x) ∧ WellDevelopedCharacters(x) → TransportsReadersToAnotherWorld(x))"
    },
    {
        "NL": "A sport that requires participants to run, swim, and cycle is a triathlon.",
        "FOL": "∀x (Sport(x) ∧ RequiresRunning(x) ∧ RequiresSwimming(x) ∧ RequiresCycling(x) → Triathlon(x))"
    },
    {
        "NL": "If a food is spicy, it contains hot peppers or spices.",
        "FOL": "∀x (Food(x) ∧ Spicy(x) → (ContainsHotPeppers(x) ∨ ContainsSpices(x)))"
    },
    {
        "NL": "Rainforests, rich in biodiversity, provide habitats for countless species of plants and animals, while also playing a critical role in regulating the global climate.",
        "FOL": "∀x (Rainforest(x) → (RichInBiodiversity(x) ∧ ProvidesHabitats(x) ∧ RegulatesGlobalClimate(x)))"
    },
    {
        "NL": "A car doesn't move when it sees the red light.",
        "FOL": "¬∀x ∃y (Red(y) ∧ Sees(x, y) → Moves(x))"
    },
    {
        "NL": "A pen writes with ink, while a pencil writes with graphite and can be erased.",
        "FOL": "∀x (Pen(x) ∧ (WritesWithInk(x) ∨ ¬CanBeErased(x)) ∧ Pencil(x) ∧ (WritesWithGraphite(x) ∨ CanBeErased(x)))"
    },
    {
        "NL": "A student receives a passing grade if they score at least 60% on a test.",
        "FOL": "∀x∀y (Student(x) ∧ Test(y) ∧ ScoreAtLeast60Percent(x, y) → PassingGrade(x, y))"
    },
    {
        "NL": "A person who takes care of animals and plants is considered an environmentalist.",
        "FOL": "∀x ((TakesCareOfAnimals(x) ∧ TakesCareOfPlants(x)) → Environmentalist(x))"
    },
    {
        "NL": "Although everything indicates something, nothing indicates anything larger than itself.",
        "FOL": "∀x ∃y (Indicates(x, y)) ∧ ¬∃z ∃w (Indicates(z, w) ∧ LargerThan(w, z))"
    },
    {
        "NL": "A natural phenomenon is classified as a weather event if it occurs in the atmosphere and affects the Earth's surface.",
        "FOL": "∀x (NaturalPhenomenon(x) ∧ OccursInAtmosphere(x) ∧ AffectsEarthSurface(x) → WeatherEvent(x))"
    },
    {
        "NL": "Trains run on tracks, boats float on water, and airplanes fly in the sky.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ Boat(y) ∧ Airplane(z) → (RunsOnTracks(x) ∧ FloatsOnWater(y) ∧ FliesInSky(z)))"
    },
    {
        "NL": "An award-winning film can have a captivating plot, outstanding performances, or exceptional cinematography.",
        "FOL": "∀x (Film(x) ∧ AwardWinning(x) → (CaptivatingPlot(x) ∨ OutstandingPerformances(x) ∨ ExceptionalCinematography(x)))"
    },
    {
        "NL": "A bakery sells bread, cakes, or pastries, while a grocery store offers a wide range of products including fruits, vegetables, and dairy products.",
        "FOL": "∀x ∀y (Bakery(x) ∧ GroceryStore(y) → ((Sells(x, Bread) ∨ Sells(x, Cakes) ∨ Sells(x, Pastries)) ∧ (Sells(y, Fruits) ∧ Sells(y, Vegetables) ∧ Sells(y, Dairy))))"
    },
    {
        "NL": "An ingredient is included in a recipe if the chef adds it while cooking a dish.",
        "FOL": "∀x∀y∀z (Ingredient(x) ∧ Recipe(y) ∧ Chef(z) ∧ AddsTo(z, x, y) → IncludedIn(x, y))"
    },
    {
        "NL": "There is a book that every student reads if all squares don't have nine corners.",
        "FOL": "¬∀x (Square(x) → NineCorners(x)) → ∃y (Book(y) ∧ ∀z (Student(z) → Reads(z, y)))"
    },
    {
        "NL": "A neighborhood is considered safe if it has a low frequency of offenses and either a robust police department or extensive resident involvement.",
        "FOL": "∀x (Neighborhood(x) ∧ HasLowFrequencyOfOffenses(x) ∧ (HasRobustPoliceDepartment(x) ∨ HasExtensiveResidentInvolvement(x)) → Safe(x))"
    },
    {
        "NL": "A girl is eating an apple in the school.",
        "FOL": "∃x ∃y ∃z (Girl(x) ∧ Apple(y) ∧ School(z) ∧ Eating(x, y) ∧ In(x, z))"
    },
    {
        "NL": "Not every river in Asia is larger than every river in Africa.",
        "FOL": "¬∀x ∀y (River(x) ∧ In(x, asia) ∧ River(y) ∧ In(y, africa) → Larger(x, y))"
    },
    {
        "NL": "A meal can be a breakfast, include eggs, and have juice, or it can be a dinner, include steak, and have wine.",
        "FOL": "∀x (Meal(x) → ((Breakfast(x) ∧ IncludesEggs(x) ∧ HasJuice(x)) ⊕ (Dinner(x) ∧ IncludesSteak(x) ∧ HasWine(x))))"
    },
    {
        "NL": "Books are usually made of paper, but e-books are digital.",
        "FOL": "∀x (Book(x) → (MadeOfPaper(x) ⊕ EBook(x)))"
    },
    {
        "NL": "If all athletes who have Olympic medals win awards, then some athletes who do not have Olympic medals will also win awards.",
        "FOL": "∀x (Athlete(x) ∧ HasOlympicMedal(x) → WinsAward(x)) → ∃y (Athlete(y) ∧ ¬HasOlympicMedal(y) ∧ WinsAward(y))"
    },
    {
        "NL": "Frogs are amphibians and can jump.",
        "FOL": "∀x (Frog(x) → (Amphibian(x) ∧ CanJump(x)))"
    },
    {
        "NL": "A chemical element that has a full outer electron shell and does not readily form compounds is a noble gas.",
        "FOL": "∀x ((ChemicalElement(x) ∧ FullOuterElectronShell(x) ∧ ¬ReadilyFormCompounds(x)) → NobleGas(x))"
    },
    {
        "NL": "A movie is a box office hit if it generates a substantial profit and attracts a large audience.",
        "FOL": "∀x (Movie(x) ∧ SubstantialProfit(x) ∧ LargeAudience(x) → BoxOfficeHit(x))"
    },
    {
        "NL": "Birds lay eggs and can fly.",
        "FOL": "∀x (Bird(x) → (LaysEggs(x) ∧ CanFly(x)))"
    },
    {
        "NL": "A basketball court is used for playing basketball, a tennis court is used for playing tennis, and a soccer field is used for playing soccer.",
        "FOL": "∀x (BasketballCourt(x) → UsedForPlayingBasketball(x)) ∧ ∀y (TennisCourt(y) → UsedForPlayingTennis(y)) ∧ ∀z (SoccerField(z) → UsedForPlayingSoccer(z))"
    },
    {
        "NL": "In a basketball game, a player scores points by shooting the ball into the opposing team's hoop.",
        "FOL": "∀x∀y∀z (BasketballGame(x) ∧ Player(y) ∧ Hoop(z) ∧ OpposingTeamHoop(z, x) → ScoresPoints(y, x, z))"
    },
    {
        "NL": "A botanical garden cultivates and displays a variety of plants, including trees, shrubs, and flowers, for the purposes of conservation, research, or public enjoyment.",
        "FOL": "∀x (BotanicalGarden(x) → (CultivatesTrees(x) ∧ CultivatesShrubs(x) ∧ CultivatesFlowers(x) ∧ (ConservationPurpose(x) ∨ ResearchPurpose(x) ∨ PublicEnjoyment(x))))"
    },
    {
        "NL": "Lions roam in prides and are carnivores.",
        "FOL": "∀x (Lion(x) → (RoamInPrides(x) → Carnivore(x)))"
    },
    {
        "NL": "A teacher educates students by delivering lectures and assigning homework.",
        "FOL": "∀x∀y∀z (Teacher(x) ∧ Student(y) ∧ Lecture(z) ∧ Delivers(x, z) ∧ AssignsHomework(x, y) → Educates(x, y))"
    },
    {
        "NL": "A town is considered safe if it has a low crime rate and a responsive emergency service.",
        "FOL": "∀x (Town(x) ∧ HasLowCrimeRate(x) ∧ HasResponsiveEmergencyService(x) → Safe(x))"
    },
    {
        "NL": "A locked door requires a key to open.",
        "FOL": "∀x∀y (Door(x) ∧ Locked(x) ∧ Key(y) → RequiresToOpen(x, y))"
    },
    {
        "NL": "A mammal is considered a carnivore if its primary diet consists of other animals.",
        "FOL": "∀x (Mammal(x) ∧ PrimaryDietOfAnimals(x) → Carnivore(x))"
    },
    {
        "NL": "A scientist who specializes in the study of weather patterns and atmospheric conditions is a meteorologist.",
        "FOL": "∀x (Scientist(x) ∧ SpecializesInStudyOfWeatherPatterns(x) ∧ StudiesAtmosphericConditions(x) → Meteorologist(x))"
    },
    {
        "NL": "Every planet is round and orbits the sun and has moons.",
        "FOL": "∀x (Planet(x) → (Round(x) ∧ OrbitsSun(x) ∧ HasMoons(x)))"
    },
    {
        "NL": "A room appears larger with minimal furniture and light-colored walls.",
        "FOL": "∀x (Room(x) ∧ MinimalFurniture(x) ∧ LightColoredWalls(x) → AppearsLarger(x))"
    },
    {
        "NL": "For an airplane to take off, it needs to reach a certain speed and have enough runway length.",
        "FOL": "∀x (Airplane(x) → (ReachSpeed(x) ∧ SufficientRunwayLength(x) → TakeOff(x)))"
    },
    {
        "NL": "A number is even if it's divisible by 2, but odd if not.",
        "FOL": "∀x (Number(x) → (DivisibleBy(x, 2) ⊕ ¬DivisibleBy(x, 2)))"
    },
    {
        "NL": "Some restaurants serve Italian cuisine, have outdoor seating, and are family-owned.",
        "FOL": "∃x (Restaurant(x) ∧ (∃y (Cuisine(y) ∧ Italian(y) ∧ Serves(x, y))) ∧ OutdoorSeating(x) ∧ FamilyOwned(x))"
    },
    {
        "NL": "A rhombus has four equal sides and opposite angles equal in measure.",
        "FOL": "∀x (Rhombus(x) → (HasFourEqualSides(x) ∧ OppositeAnglesEqual(x)))"
    },
    {
        "NL": "A vehicle is a bicycle if it has two wheels, a frame, pedals, and is powered by human effort.",
        "FOL": "∀x (Vehicle(x) ∧ HasTwoWheels(x) ∧ HasFrame(x) ∧ HasPedals(x) ∧ PoweredByHumanEffort(x) → Bicycle(x))"
    },
    {
        "NL": "A student learns from a teacher, who imparts knowledge in a subject.",
        "FOL": "∀x ∀y (Student(x) ∧ Teacher(y) ∧ ImpartsKnowledgeInSubject(y) → LearnsFrom(x, y))"
    },
    {
        "NL": "A desert ecosystem, characterized by low rainfall and high temperatures, supports a range of adapted plant and animal species, such as cacti and reptiles, which can survive in the harsh conditions.",
        "FOL": "∀x ∀y (DesertEcosystem(x) ∧ (LowRainfall(x) ∧ HighTemperatures(x)) → (SupportsRangeOfAdaptedSpecies(x, y) ∧ (Cacti(y) ∨ Reptiles(y)) ∧ SurvivesInHarshConditions(y)))"
    },
    {
        "NL": "An ecosystem consists of a variety of species interacting with each other and their environment.",
        "FOL": "∀x (Ecosystem(x) → (ContainsVarietyOfSpecies(x) ∧ InteractsWithEnvironment(x)))"
    },
    {
        "NL": "Each animal is either carnivorous or herbivorous, but not both.",
        "FOL": "∀x (Animal(x) → (Carnivorous(x) ⊕ Herbivorous(x)))"
    },
    {
        "NL": "If a person prepares and serves food in a restaurant, they are considered a chef.",
        "FOL": "∀x (PreparesAndServeFoodInRestaurant(x) → Chef(x))"
    },
    {
        "NL": "A scientist who studies biology or chemistry will focus on living organisms or chemical reactions.",
        "FOL": "∀x (Scientist(x) ∧ (StudiesBiology(x) ∨ StudiesChemistry(x)) → (FocusOnLivingOrganisms(x) ∨ FocusOnChemicalReactions(x)))"
    },
    {
        "NL": "An athlete who competes in sprint races might be fast but not have enough endurance to excel in long-distance events.",
        "FOL": "∀x (Athlete(x) ∧ CompetesInSprintRaces(x) → (Fast(x) ∧ ¬HasEnduranceForLongDistance(x)))"
    },
    {
        "NL": "Libraries lend books to patrons, and patrons return those books after reading them.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Patron(y) ∧ Book(z) → (Lends(x, z, y) ∧ Returns(y, z, x)))"
    },
    {
        "NL": "An animal is a carnivore if it primarily consumes other animals as food.",
        "FOL": "∀x∀y (Animal(x) ∧ Animal(y) ∧ PrimarilyConsumes(x, y) → Carnivore(x))"
    },
    {
        "NL": "A valid passport must have a clear photo, an unexpired issue date, and a signature from the holder.",
        "FOL": "∀x (Passport(x) ∧ ClearPhoto(x) ∧ UnexpiredIssueDate(x) ∧ HolderSignature(x) → Valid(x))"
    },
    {
        "NL": "A cat chases a mouse, or a dog chases a cat, but not both.",
        "FOL": "∀x∀y∀z (Cat(x) ∧ Mouse(y) ∧ Dog(z) → (Chases(x, y) ⊕ Chases(z, x)))"
    },
    {
        "NL": "A four-wheeled vehicle designed primarily for transporting goods or cargo, with an enclosed or open space for storage, is a truck.",
        "FOL": "∀x (Vehicle(x) ∧ FourWheeled(x) ∧ DesignedForTransportingGoodsOrCargo(x) ∧ EnclosedOrOpenSpaceForStorage(x) → Truck(x))"
    },
    {
        "NL": "A platform is described as a social media if it allows content sharing, facilitates communication, supports likes and comments, and can follow users.",
        "FOL": "∀x ((Platform(x) ∧ AllowsContentSharing(x) ∧ FacilitatesCommunication(x) ∧ SupportsLikesAndComments(x) ∧ CanFollowUsers(x)) → SocialMedia(x))"
    },
    {
        "NL": "Grass is green, while the sky is blue or gray depending on the weather.",
        "FOL": "∀x ∀y (Grass(x) ∧ Sky(y) → (Green(x) ∧ (Blue(y) ∨ Gray(y))))"
    },
    {
        "NL": "Lakes can be freshwater or saltwater based on the dissolved salt content.",
        "FOL": "∀x (Lake(x) ∧ (Freshwater(x) ↔ LowSaltContent(x)) ∧ (Saltwater(x) ↔ HighSaltContent(x)))"
    },
    {
        "NL": "An engineer is designing a blueprint in the drafting room, or a drafter is reviewing a model in the studio.",
        "FOL": "∃x ∃y (Engineer(x) ∧ Blueprint(y) ∧ Designing(x, y) ∧ InTheDraftingRoom(x)) ∨ ∃z ∃w (Drafter(z) ∧ Model(w) ∧ Reviewing(z, w) ∧ InTheStudio(z))"
    },
    {
        "NL": "Books that are old and rare are always worth collecting.",
        "FOL": "∀x (Book(x) ∧ Old(x) ∧ Rare(x) → WorthCollecting(x))"
    },
    {
        "NL": "Trees produce oxygen.",
        "FOL": "∀x (Tree(x) → ProducesOxygen(x))"
    },
    {
        "NL": "A tree loses its leaves if it is deciduous.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → LosesLeaves(x))"
    },
    {
        "NL": "An ecosystem is classified as a wetland if it is characterized by the presence of water, supports aquatic plants, and provides a habitat for diverse wildlife.",
        "FOL": "∀x (Ecosystem(x) ∧ PresenceOfWater(x) ∧ SupportsAquaticPlants(x) ∧ ProvidesHabitatForDiverseWildlife(x) → Wetland(x))"
    },
    {
        "NL": "A glacier forms when snow accumulates over time, compresses into ice, and begins to flow under its own weight.",
        "FOL": "∀x (Glacier(x) ↔ (SnowAccumulates(x) ∧ CompressesIntoIce(x) ∧ BeginsToFlowUnderOwnWeight(x)))"
    },
    {
        "NL": "A bicycle requires human power to move, whereas an electric scooter can run on electricity or human power.",
        "FOL": "∀x (Bicycle(x) ∧ (RequiresHumanPower(x) ∨ ¬RunsOnElectricity(x)) ∧ ElectricScooter(x) ∧ (RunsOnElectricity(x) ∨ RequiresHumanPower(x)))"
    },
    {
        "NL": "Some mountains are both snow-capped and popular hiking destinations.",
        "FOL": "∃x (Mountain(x) ∧ SnowCapped(x) ∧ PopularHikingDestination(x))"
    },
    {
        "NL": "A celestial event that involves the alignment of a planet, a moon, and a star, causes an observable eclipse, and occurs periodically is a planetary eclipse.",
        "FOL": "∀x∀y∀z (CelestialEvent(x) ∧ Planet(y) ∧ Moon(z) ∧ Star(w) ∧ Alignment(x, y, z, w) ∧ CausesObservableEclipse(x) ∧ OccursPeriodically(x) → PlanetaryEclipse(x))"
    },
    {
        "NL": "A fruit exists that all people eat if no vegetables are green.",
        "FOL": "¬∀x (Vegetable(x) → Green(x)) → ∃y (Fruit(y) ∧ ∀z (Person(z) → Eats(z, y)))"
    },
    {
        "NL": "A museum displays artifacts to educate visitors about history.",
        "FOL": "∀x∀y∀z (Museum(x) ∧ Artifact(y) ∧ Visitor(z) → EducatesAboutHistory(x, y, z))"
    },
    {
        "NL": "A book is fiction if it has a fabricated narrative and does not contain factual information.",
        "FOL": "∀v (Book(v) ∧ HasFabricatedNarrative(v) ∧ ¬HasFactualInformation(v) → Fiction(v))"
    },
    {
        "NL": "A place is a desert if it has a dry climate, low precipitation, and sparse vegetation.",
        "FOL": "∀x (Place(x) ∧ DryClimate(x) ∧ LowPrecipitation(x) ∧ SparseVegetation(x) → Desert(x))"
    },
    {
        "NL": "A bird is yellow if and only if it eats at least one worm.",
        "FOL": "∀x (Bird(x) → (Yellow(x) ↔ ∃y (Worm(y) ∧ Eats(x, y))))"
    },
    {
        "NL": "A student is considered graduate if he has completed all his courses.",
        "FOL": "∀x (Student(x) ∧ CompletedAllCourses(x) → Graduate(x))"
    },
    {
        "NL": "A teacher instructs in either an online or a physical classroom, but not in both simultaneously.",
        "FOL": "∀x (Teacher(x) → (InstructsOnline(x) ⊕ InstructsPhysicalClassroom(x)))"
    },
    {
        "NL": "A boat is floating on the lake, and a plane is flying in the sky.",
        "FOL": "∃x ∃y (Boat(x) ∧ Lake(y) ∧ FloatingOn(x, y)) ∧ ∃z (Plane(z) ∧ Flying(z) ∧ InTheSky(z))"
    },
    {
        "NL": "An animal is a mammal if it has fur and feeds its young with milk.",
        "FOL": "∀v (Animal(v) ∧ HasFur(v) ∧ FeedsYoungWithMilk(v) → Mammal(v))"
    },
    {
        "NL": "A television program can be broadcasted live or pre-recorded and can belong to different genres.",
        "FOL": "∀x (TelevisionProgram(x) → ((BroadcastedLive(x) ⊕ PreRecorded(x)) ∧ (∃y Genre(x, y))))"
    },
    {
        "NL": "A library offers digital resources if it provides access to ebooks, databases, and online journals.",
        "FOL": "∀x (OffersDigitalResources(x) ↔ (Library(x) ∧ ∃y (Ebooks(y) ∧ ProvidesAccessTo(x, y)) ∧ ∃z (Databases(z) ∧ ProvidesAccessTo(x, z)) ∧ ∃w (OnlineJournals(w) ∧ ProvidesAccessTo(x, w))))"
    },
    {
        "NL": "A person who is a doctor and specializes in the heart is a cardiologist.",
        "FOL": "∀x (Person(x) ∧ Doctor(x) ∧ SpecializesInHeart(x) → Cardiologist(x))"
    },
    {
        "NL": "A district is designated as secure when it exhibits a lower prevalence of felonies and provides competent law enforcement or consistent public cooperation.",
        "FOL": "∀x (District(x) ∧ LowerPrevalenceOfFelonies(x) ∧ (ProvidesCompetentLawEnforcement(x) ∨ ConsistentPublicCooperation(x)) → Secure(x))"
    },
    {
        "NL": "A child is playing a game at a table in the room.",
        "FOL": "∃x ∃y ∃z (Child(x) ∧ Game(y) ∧ Table(z) ∧ PlayingAt(x, y, z) ∧ InTheRoom(x))"
    },
    {
        "NL": "A predator hunts and feeds on its prey to obtain nutrients and energy for survival.",
        "FOL": "∀x ∀y ∀z (Predator(x) ∧ Prey(y) ∧ Nutrients(z) ∧ Energy(z) ∧ Hunts(x, y) ∧ FeedsOn(x, y) → Obtains(x, z))"
    },
    {
        "NL": "A taxi leaves from a rank and arrives at another rank without stopping at any stops.",
        "FOL": "∃x ∃y ∃z (Taxi(x) ∧ Rank(y) ∧ Rank(z) → LeavesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Stop(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "Students achieve academic success by studying consistently, seeking help when needed, and staying organized.",
        "FOL": "∀x (Student(x) ∧ ConsistentStudy(x) ∧ SeekHelp(x) ∧ StayOrganized(x) → AcademicSuccess(x))"
    },
    {
        "NL": "A marine animal that has a soft body, a muscular foot for locomotion, and a protective shell is a mollusk.",
        "FOL": "∀x (MarineAnimal(x) ∧ SoftBody(x) ∧ MuscularFootForLocomotion(x) ∧ ProtectiveShell(x) → Mollusk(x))"
    },
    {
        "NL": "An individual receives a discount if they have a membership, the purchase amount exceeds $100, and the purchase was made on a weekday.",
        "FOL": "∀x (Individual(x) → (ReceivesDiscount(x) ↔ (HasMembership(x) ∧ PurchaseAmountExceeds100(x) ∧ PurchaseOnWeekday(x))))"
    },
    {
        "NL": "A person is an employee if they work for a company.",
        "FOL": "∀x (Person(x) ∧ ∃y (Company(y) ∧ WorksFor(x, y)) → Employee(x))"
    },
    {
        "NL": "A park has benches.",
        "FOL": "∀x ∃y (Park(x) ∧ Bench(y) ∧ LocatedIn(y, x))"
    },
    {
        "NL": "An accurate clock keeps precise time.",
        "FOL": "∀x (AccurateClock(x) → KeepsPreciseTime(x))"
    },
    {
        "NL": "A coin can be heads or tails, but not both.",
        "FOL": "∀x (Coin(x) → (Heads(x) ⊕ Tails(x)))"
    },
    {
        "NL": "An antibiotic is a type of medication that targets and kills bacteria or inhibits their growth, helping to treat bacterial infections in animals and humans.",
        "FOL": "∀x∀y (Antibiotic(x) ∧ (Bacteria(y) ∨ BacterialInfection(y)) → (TargetsAndKills(x, y) ∨ InhibitsGrowth(x, y)))"
    },
    {
        "NL": "A father becomes a grandparent if his son has a kid.",
        "FOL": "∀x ∃y ∃z (Father(x) ∧ Person(y) ∧ Person(z) ∧ SonOf(y, x) ∧ ChildOf(z, y) → Grandparent(x))"
    },
    {
        "NL": "Rainbows are visible when sunlight is refracted and reflected by water droplets in the air.",
        "FOL": "∀x (Rainbow(x) → (SunlightRefracted(x) ∧ SunlightReflected(x) ∧ WaterDropletsInAir(x)))"
    },
    {
        "NL": "A gift can be wrapped in paper, cloth, or a bag.",
        "FOL": "∀x∀y∀z∀w (Gift(x) ∧ (Paper(y) ∨ Cloth(z) ∨ Bag(w)) → WrappedIn(x, y) ∨ WrappedIn(x, z) ∨ WrappedIn(x, w))"
    },
    {
        "NL": "Every writer who has worked with at least one author, who in turn has not received a significant recognition, has either published more than three novels or attended all book fairs.",
        "FOL": "∀x (Writer(x) ∧ ∃y (Author(y) ∧ ¬GotSignificantRecognition(y) ∧ WorkedWith(x, y)) → (PublishedMoreThanThreeNovels(x) ∨ ∀z (BookFair(z) → Attended(x, z))))"
    },
    {
        "NL": "A laptop with a touchscreen can be operated with a stylus or a finger.",
        "FOL": "∀x (Laptop(x) ∧ Touchscreen(x) → (OperatedWithStylus(x) ∨ OperatedWithFinger(x)))"
    },
    {
        "NL": "A person is considered a teacher if they educate and instruct students, often in a classroom setting, and create lesson plans and assignments to facilitate learning.",
        "FOL": "∀x (Person(x) ∧ EducatesAndInstructsStudents(x) ∧ OftenInClassroomSetting(x) ∧ CreatesLessonPlansAndAssignments(x) → Teacher(x))"
    },
    {
        "NL": "Tornadoes form under specific atmospheric conditions, often during thunderstorms, and can cause extensive damage to buildings and infrastructure.",
        "FOL": "∀x∀y∀z (Tornado(x) ∧ SpecificAtmosphericConditions(y) ∧ Thunderstorm(z) → (FormsUnder(x, y) ∧ OftenDuring(x, z) ∧ CausesExtensiveDamageToBuildingsAndInfrastructure(x)))"
    },
    {
        "NL": "An animal is either a mammal, a reptile, or an amphibian.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ⊕ Reptile(x) ⊕ Amphibian(x)))"
    },
    {
        "NL": "Not all books are intriguing, but every intriguing book captivates readers.",
        "FOL": "¬∀x (Book(x) → Intriguing(x)) ∧ ∀y (Intriguing(y) ∧ Book(y) → CaptivatesReaders(y))"
    },
    {
        "NL": "A planet can support life if it has a stable climate, liquid water, and a suitable atmosphere.",
        "FOL": "∀x (Planet(x) ∧ SupportsLife(x) ↔ (StableClimate(x) ∧ LiquidWater(x) ∧ SuitableAtmosphere(x)))"
    },
    {
        "NL": "A fruit that has a tough outer rind, juicy flesh, and contains numerous seeds is classified as a melon if it grows on a vine.",
        "FOL": "∀x (Fruit(x) ∧ HasToughRind(x) ∧ JuicyFlesh(x) ∧ ContainsNumerousSeeds(x) ∧ GrowsOnVine(x) → Melon(x))"
    },
    {
        "NL": "A musical instrument is a string instrument if it has strings, is played by plucking, striking, or bowing the strings, and produces sound through the vibration of the strings.",
        "FOL": "∀x∀y∀z (MusicalInstrument(x) ∧ Strings(y) ∧ (Plucking(z) ∨ Striking(z) ∨ Bowing(z)) ∧ PlayedBy(x, z, y) ∧ ProducesSoundThroughVibration(x, y) → StringInstrument(x))"
    },
    {
        "NL": "A student passes an exam if their score is above the passing threshold.",
        "FOL": "∀x∀y (Student(x) ∧ Exam(y) ∧ ScoreAboveThreshold(x, y) → Passes(x, y))"
    },
    {
        "NL": "A teacher teaches a student only if that student learns from him.",
        "FOL": "∀x (Teacher(x) → ∀y (Student(y) ∧ Teaches(x, y) → Learns(y, x)))"
    },
    {
        "NL": "A device that requires charging is electronic.",
        "FOL": "∀x (Device(x) ∧ RequiresCharging(x) → Electronic(x))"
    },
    {
        "NL": "A shape is a sphere only if it is black.",
        "FOL": "∀y (Sphere(y) → Black(y))"
    },
    {
        "NL": "Vehicles require fuel, either gasoline or electric, but not both.",
        "FOL": "∀x (Vehicle(x) → (RequiresFuel(x, y) ∧ (Gasoline(y) ⊕ Electric(y))))"
    },
    {
        "NL": "A movie that is a thriller can make people afraid.",
        "FOL": "∀x ∀y (Movie(x) ∧ Thriller(x) ∧ Person(y) → CanMakeAfraid(x, y))"
    },
    {
        "NL": "A smartphone is easy to use when it has an intuitive interface and does not require frequent charging.",
        "FOL": "∀x (Smartphone(x) ∧ IntuitiveInterface(x) ∧ ¬FrequentChargingRequired(x) → EasyToUse(x))"
    },
    {
        "NL": "Every student who studies well will pass the exam and score high grades.",
        "FOL": "∀x (Student(x) ∧ StudiesWell(x) → PassExam(x) ∧ ScoreHighGrade(x))"
    },
    {
        "NL": "Something is either a massive cube or a tiny circle, and regardless, it is not yellow.",
        "FOL": "∃x (((Massive(x) ∧ Cube(x)) ⊕ (Tiny(x) ∧ Circle(x))) ∧ ¬Yellow(x))"
    },
    {
        "NL": "A tree produces oxygen and absorbs carbon dioxide.",
        "FOL": "∀x (Tree(x) → (ProducesOxygen(x) ∧ AbsorbsCarbonDioxide(x)))"
    },
    {
        "NL": "A knife cuts and has a sharp edge.",
        "FOL": "∀x (Knife(x) → (Cuts(x) ∧ HasSharpEdge(x)))"
    },
    {
        "NL": "A conference has a theme, features speakers, and includes sessions for attendees.",
        "FOL": "∀x (Conference(x) → (HasTheme(x) ∧ FeaturesSpeakers(x) ∧ IncludesSessions(x)))"
    },
    {
        "NL": "Each purple person directs to at least a single object that directs only to yellow objects.",
        "FOL": "∀x (Purple(x) → ∃y (DirectsTo(x, y) ∧ ¬∃z (DirectsTo(y, z) ∧ ¬Yellow(z))))"
    },
    {
        "NL": "A university accepts a student's application if they meet the minimum academic requirements, submit a complete application, and have no academic dishonesty on record.",
        "FOL": "∀x∀y (University(x) ∧ Student(y) → (AcceptsApplication(x, y) ↔ (MinimumAcademicRequirements(y) ∧ CompleteApplication(y) ∧ ¬AcademicDishonesty(y))))"
    },
    {
        "NL": "Something is a gigantic triangle if and only if it isn't green.",
        "FOL": "∀x (Gigantic(x) ∧ Triangle(x) ↔ ¬Green(x))"
    },
    {
        "NL": "A laptop requires a battery and a charger.",
        "FOL": "∀x (Laptop(x) → (RequiresBattery(x) ∧ RequiresCharger(x)))"
    },
    {
        "NL": "In a chess match, a player can move a rook horizontally or vertically, while a bishop moves diagonally.",
        "FOL": "∀x∀y (Rook(x) ∧ Bishop(y) → (MovesHorizontalOrVertical(x) ∧ MovesDiagonal(y)))"
    },
    {
        "NL": "A book is open if its cover is not closed.",
        "FOL": "∀x (Book(x) → ¬ClosedCover(x) → Open(x))"
    },
    {
        "NL": "Some movies are comedies, but not all movies are directed by award-winning directors or feature famous actors and received critical acclaim.",
        "FOL": "∃x (Movie(x) ∧ Comedy(x)) ∧ ¬∀y (Movie(y) → (DirectedByAwardWinner(y) ∨ (FeaturesFamousActors(y) ∧ CriticalAcclaim(y))))"
    },
    {
        "NL": "All dogs are loyal only if they're trained.",
        "FOL": "∀x (Dog(x) → (Loyal(x) → Trained(x)))"
    },
    {
        "NL": "A landform that rises steeply from the surrounding terrain, has a peak or summit, and is formed by geological processes is called a mountain.",
        "FOL": "∀x (Landform(x) ∧ RisesSteeply(x) ∧ PeakOrSummit(x) ∧ FormedByGeologicalProcesses(x) → Mountain(x))"
    },
    {
        "NL": "A greenhouse is a structure that allows for the cultivation of plants by controlling temperature and humidity.",
        "FOL": "∀x (Greenhouse(x) → (ControlsTemperature(x) ∧ ControlsHumidity(x)))"
    },
    {
        "NL": "A doctor treats patients with medicine or therapy.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ (Medicine(z) ∨ Therapy(z)) → Treats(x, y, z))"
    },
    {
        "NL": "A person can either be an introvert or an extrovert, but not both.",
        "FOL": "∀x (Person(x) → (Introvert(x) ⊕ Extrovert(x)))"
    },
    {
        "NL": "Mathematical problems that require the use of formulas and calculations can be found in algebra, geometry, or calculus.",
        "FOL": "∀x (MathProblem(x) ∧ RequiresFormulas(x) ∧ RequiresCalculations(x) → (Algebra(x) ∨ Geometry(x) ∨ Calculus(x)))"
    },
    {
        "NL": "A smartphone x has a feature y when it is equipped with the necessary hardware and software components to provide that functionality.",
        "FOL": "∀x ∀y (Smartphone(x) ∧ Feature(y) ∧ HardwareComponents(x, y) ∧ SoftwareComponents(x, y) → HasFeature(x, y))"
    },
    {
        "NL": "Every student in class either studies hard or fails.",
        "FOL": "∀x (Student(x) → (StudiesHard(x) ⊕ Fails(x)))"
    },
    {
        "NL": "Maria is not a doctor and all humans love each other.",
        "FOL": "¬Doctor(maria) ∧ ∀x ∀y (Human(x) ∧ Human(y) → Love(x, y))"
    },
    {
        "NL": "A vehicle is either petrol or diesel if it isn't electric.",
        "FOL": "∀x (Vehicle(x) ∧ ¬Electric(x) → (Petrol(x) ∨ Diesel(x)))"
    },
    {
        "NL": "There are calculators that are compact and efficient, but not durable, or they are durable but not compact and efficient.",
        "FOL": "∀x (Calculator(x) → ((Compact(x) ∧ Efficient(x) ∧ ¬Durable(x)) ⊕ (Durable(x) ∧ ¬(Compact(x) ∧ Efficient(x)))))"
    },
    {
        "NL": "A shape is either square or round, but not both.",
        "FOL": "∀x (Shape(x) → (Square(x) ⊕ Round(x)))"
    },
    {
        "NL": "A vehicle is an electric bike when it is a type of bicycle, powered by an electric motor, and allows the rider to pedal-assist or fully rely on the motor for propulsion.",
        "FOL": "∀x (Vehicle(x) ∧ TypeOfBicycle(x) ∧ PoweredByElectricMotor(x) ∧ AllowsPedalAssistOrFullMotorPropulsion(x) → ElectricBike(x))"
    },
    {
        "NL": "Engineers can design structures, analyze data, and solve complex problems.",
        "FOL": "∀x (Engineer(x) → (DesignsStructures(x) ∧ AnalyzesData(x) ∧ SolvesComplexProblems(x)))"
    },
    {
        "NL": "Mathematicians study numbers, shapes, and patterns to solve problems and create theories.",
        "FOL": "∀x (Mathematician(x) → (StudyNumbers(x) ∧ StudyShapes(x) ∧ StudyPatterns(x) ∧ SolveProblems(x) ∧ CreateTheories(x)))"
    },
    {
        "NL": "Sharks are marine predators with sharp teeth and a streamlined body, whereas dolphins are intelligent marine mammals known for their playful behavior.",
        "FOL": "∀x∀y (Shark(x) ∧ Dolphin(y) → (MarinePredator(x) ∧ SharpTeeth(x) ∧ StreamlinedBody(x)) ∧ (IntelligentMarineMammal(y) ∧ PlayfulBehavior(y)))"
    },
    {
        "NL": "An item is recyclable if it is made of paper, plastic, or metal.",
        "FOL": "∀x (Recyclable(x) ↔ (MadeOfPaper(x) ∨ MadeOfPlastic(x) ∨ MadeOfMetal(x)))"
    },
    {
        "NL": "A library lends books to patrons who have an active membership and no overdue materials.",
        "FOL": "∀x ∀y ∀z (Library(x) ∧ Book(y) ∧ Patron(z) ∧ ActiveMembership(z, x) ∧ ¬OverdueMaterials(z) → Lends(x, y, z))"
    },
    {
        "NL": "Zoe is an accountant if and only if she is not a banker.",
        "FOL": "Accountant(zoe) ↔ ¬Banker(zoe)"
    },
    {
        "NL": "Some flowers are both fragrant and attract butterflies.",
        "FOL": "∃x (Flower(x) ∧ Fragrant(x) ∧ AttractsButterflies(x))"
    },
    {
        "NL": "Sun rises in the east, sets in the west, and shines during the day.",
        "FOL": "∀x (Sun(x) → (RisesInEast(x) ∧ SetsInWest(x) ∧ ShinesDuringDay(x)))"
    },
    {
        "NL": "A plant requires water, sunlight, and nutrients to grow.",
        "FOL": "∀x (Plant(x) → (RequiresWater(x) ∧ RequiresSunlight(x) ∧ RequiresNutrients(x)))"
    },
    {
        "NL": "An event is successful if it has a large attendance and either good weather or an indoor venue.",
        "FOL": "∀x (Event(x) ∧ LargeAttendance(x) ∧ (GoodWeather(x) ∨ IndoorVenue(x)) → Successful(x))"
    },
    {
        "NL": "A fruit is a banana or not a banana.",
        "FOL": "∀x (Fruit(x) → (Banana(x) ⊕ ¬Banana(x)))"
    },
    {
        "NL": "A fabric is comfortable if it's soft, breathable, and has good moisture-wicking properties.",
        "FOL": "∀x (Fabric(x) → (Comfortable(x) ↔ (Soft(x) ∧ Breathable(x) ∧ GoodMoistureWicking(x))))"
    },
    {
        "NL": "Every mobile phone is a smartphone, but not every smartphone is a mobile phone.",
        "FOL": "∀x (MobilePhone(x) → Smartphone(x)) ∧ ¬∀x (Smartphone(x) → MobilePhone(x))"
    },
    {
        "NL": "There is a child that hates no toy he owns.",
        "FOL": "∃x (Child(x) ∧ ∀y (Toy(y) ∧ Own(x, y) → ¬Hate(x, y)))"
    },
    {
        "NL": "If not all lions are wild, there is a jungle that each jungle adjoins to.",
        "FOL": "¬∀x (Lion(x) → Wild(x)) → ∃y (Jungle(y) ∧ ∀z (Jungle(z) → AdjoinsTo(z, y)))"
    },
    {
        "NL": "A cat chases a mouse in a house.",
        "FOL": "∀x∀y∀z (Cat(x) ∧ Mouse(y) ∧ House(z) → Chases(x, y, z))"
    },
    {
        "NL": "A tornado forms when warm air rises and meets cool air, creating a rotating column of air.",
        "FOL": "∀x∀y∀z (Tornado(x) ∧ WarmAir(y) ∧ CoolAir(z) → (Forms(x) ↔ (Meets(y, z) ∧ RotatingColumn(x))))"
    },
    {
        "NL": "An artwork is considered valuable if it was created by a famous artist and has historical significance, or if it is a rare piece with unique characteristics.",
        "FOL": "∀x (Artwork(x) ∧ ((FamousArtist(x) ∧ HistoricalSignificance(x)) ∨ (RarePiece(x) ∧ UniqueCharacteristics(x))) → Valuable(x))"
    },
    {
        "NL": "A mathematical operation is a function if it takes an input, applies a specific set of rules, and produces a corresponding output.",
        "FOL": "∀x∀y∀z (MathematicalOperation(x) ∧ TakesInput(x, y) ∧ AppliesSpecificRules(x) ∧ ProducesOutput(x, z) → Function(x))"
    },
    {
        "NL": "There is no writer who wrote all thriller novels.",
        "FOL": "¬∃x (Writer(x) ∧ ∀y (Thriller(y) ∧ Novel(y) → Wrote(x, y)))"
    },
    {
        "NL": "A subscription box service delivers curated products, such as clothing, beauty items, or snacks, to customers on a regular basis, and may offer customization options or different pricing plans.",
        "FOL": "∀x (SubscriptionBoxService(x) → (DeliversCuratedProducts(x) ∧ (ClothingProducts(x) ∨ BeautyProducts(x) ∨ SnackProducts(x)) ∧ (CustomizationOptions(x) ∨ DifferentPricingPlans(x))))"
    },
    {
        "NL": "A computer program that can learn and improve its performance over time without being explicitly programmed is an artificial intelligence.",
        "FOL": "∀x ((ComputerProgram(x) ∧ CanLearnAndImproveOverTime(x) ∧ ¬ExplicitlyProgrammed(x)) → ArtificialIntelligence(x))"
    },
    {
        "NL": "A bird can fly, walk, or swim.",
        "FOL": "∀x (Bird(x) → ∃y ∃z ∃w (Fly(x, y) ∨ Walk(x, z) ∨ Swim(x, w)))"
    },
    {
        "NL": "It's not the case that every city is cosmopolitan.",
        "FOL": "¬∀x (City(x) → Cosmopolitan(x))"
    },
    {
        "NL": "A sports team wins a championship if it has the best overall record, wins the playoff series, and defeats the final opponent.",
        "FOL": "∀x (SportsTeam(x) ∧ BestOverallRecord(x) ∧ WinsPlayoffSeries(x) ∧ DefeatsFinalOpponent(x) → WinsChampionship(x))"
    },
    {
        "NL": "An airport serves air transportation.",
        "FOL": "∀x (Airport(x) → ServesAirTransportation(x))"
    },
    {
        "NL": "A jacket keeps you warm, a raincoat keeps you dry, and a hat keeps your head covered.",
        "FOL": "∀x (Jacket(x) → KeepsWarm(x)) ∧ (Raincoat(x) → KeepsDry(x)) ∧ (Hat(x) → CoversHead(x))"
    },
    {
        "NL": "There isn't a cook who can prepare all Japanese dishes but hasn't ever cooked a Thai dish.",
        "FOL": "¬∃x (Cook(x) ∧ ∀y (JapaneseDish(y) → CanPrepare(x, y)) ∧ ¬∃z (ThaiDish(z) ∧ HasCooked(x, z)))"
    },
    {
        "NL": "Airlines charge extra fees for overweight luggage.",
        "FOL": "∀x∀y (Airline(x) ∧ Overweight(y) → ChargesExtraFees(x, y))"
    },
    {
        "NL": "Tornadoes can form in thunderstorms, causing severe damage to buildings and infrastructure.",
        "FOL": "∀x∀y∀z (Tornado(x) ∧ Thunderstorm(y) ∧ (Buildings(z) ∨ Infrastructure(z)) → (FormsIn(x, y) ∧ CausesSevereDamage(x, z)))"
    },
    {
        "NL": "An animal can be a cat, have a soft fur, and be independent, or it can be a dog, be energetic, and keep people company.",
        "FOL": "∀x (Animal(x) → ((Cat(x) ∧ SoftFur(x) ∧ Independent(x)) ⊕ (Dog(x) ∧ Energetic(x) ∧ KeepsPeopleCompany(x))))"
    },
    {
        "NL": "An object is a parallelogram if it has four sides and opposite sides are parallel.",
        "FOL": "∀x (Parallelogram(x) ↔ (Object(x) ∧ FourSides(x) ∧ OppositeSidesParallel(x)))"
    },
    {
        "NL": "If a musical instrument has strings and is played with a bow, it belongs to the string family, like a violin or a cello.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ PlayedWithBow(x) → (StringFamily(x) ∧ (Violin(x) ∨ Cello(x))))"
    },
    {
        "NL": "A movie is a biopic if it illustrates the hero's life journey.",
        "FOL": "∀x ∃y ∃z (Movie(x) ∧ Hero(y) ∧ HeroOf(y, x) ∧ IllustratesSelfLifeStory(x, y) → Biopic(x))"
    },
    {
        "NL": "A building is accessible to wheelchair users if it has ramps and wide doorways.",
        "FOL": "∀x (Building(x) → (AccessibleToWheelchairUsers(x) ↔ (HasRamps(x) ∧ WideDoorways(x))))"
    },
    {
        "NL": "If a person is skilled in preparing and cooking food, they are considered a chef.",
        "FOL": "∀x (SkilledInPreparingAndCookingFood(x) → Chef(x))"
    },
    {
        "NL": "A movie is directed by a director and stars one or more actors.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ Director(y) ∧ Actor(z) → (DirectedBy(x, y) ∧ StarsIn(z, x)))"
    },
    {
        "NL": "A river flows from its source, through various landscapes, and eventually empties into a larger body of water, such as a lake or ocean.",
        "FOL": "∀x∀y∀z (River(x) ∧ Source(y) ∧ (Lake(z) ∨ Ocean(z)) → (FlowsFromSourceThroughLandscapesToBodyOfWater(x, y, z)))"
    },
    {
        "NL": "If a restaurant serves vegan food, it does not use any animal-derived ingredients.",
        "FOL": "∀x (Restaurant(x) ∧ ServesVeganFood(x) → ¬UsesAnimalDerivedIngredients(x))"
    },
    {
        "NL": "Doctors diagnose illnesses, whereas pharmacists dispense medication.",
        "FOL": "∀x (Doctor(x) → DiagnosesIllness(x)) ∧ ∀y (Pharmacist(y) → DispensesMedication(y))"
    },
    {
        "NL": "An archipelago is a group of islands located close to each other and often formed by volcanic activity.",
        "FOL": "∀x (Archipelago(x) ↔ (GroupOfIslands(x) ∧ LocatedCloseToEachOther(x) ∧ OftenFormedByVolcanicActivity(x)))"
    },
    {
        "NL": "All cats are fluffy if there is not a single banana that is not yellow.",
        "FOL": "¬∃x (Banana(x) ∧ ¬Yellow(x)) → ∀y (Cat(y) → Fluffy(y))"
    },
    {
        "NL": "Cats meow.",
        "FOL": "∀x (Cat(x) → Meow(x))"
    },
    {
        "NL": "A city x is overcrowded when the population exceeds capacity.",
        "FOL": "∀x (City(x) ∧ PopulationExceedsCapacity(x) → Overcrowded(x))"
    },
    {
        "NL": "In a predator-prey interaction, the population of the predator influences the number of prey, and the number of prey also affects the predator's population.",
        "FOL": "∀x∀y (Predator(x) ∧ Prey(y) ∧ Interacts(x, y) → (InfluencesPopulation(x, y) ∧ InfluencesPopulation(y, x)))"
    },
    {
        "NL": "A cat is sitting under the table.",
        "FOL": "∃x ∃y (Cat(x) ∧ Table(y) ∧ SittingUnder(x, y))"
    },
    {
        "NL": "Instruments like the guitar or piano are played by musicians.",
        "FOL": "∀x ∀y (Musician(x) ∧ (Instrument(y) ∧ (Guitar(y) ∨ Piano(y))) → Plays(x, y))"
    },
    {
        "NL": "Certain bacteria break down organic matter in the soil, releasing nutrients for plants to absorb.",
        "FOL": "∀x ∀y ∀z (Bacteria(x) ∧ OrganicMatter(m) ∧ Soil(s) ∧ Nutrients(n) ∧ Plant(y) → BreaksDownAndReleases(x, m, s, n, y))"
    },
    {
        "NL": "If one planet is larger than another, then there is a planet located between them.",
        "FOL": "∀x ∀y ∃z (Planet(x) ∧ Planet(y) ∧ Planet(z) ∧ LargerThan(x, y) → LocatedBetween(z, x, y))"
    },
    {
        "NL": "A book is a mystery if it contains suspense and isn't a romance.",
        "FOL": "∀x (Mystery(x) ↔ (Book(x) ∧ Suspense(x) ∧ ¬Romance(x)))"
    },
    {
        "NL": "During a solar eclipse, the Moon passes between the Earth and the Sun, casting a shadow on the Earth's surface and temporarily blocking the Sun's light for observers in the shadow's path.",
        "FOL": "∀x∀y∀z (SolarEclipse(x) → (MoonPassesBetween(y, Earth, Sun) ∧ CastsShadowOnSurface(y, Earth, z) ∧ TemporarilyBlocksSunLight(x, z) ∧ ObserversInShadowsPath(z)))"
    },
    {
        "NL": "The light is on or off, never both.",
        "FOL": "∀x (Light(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A game is a board game or a video game.",
        "FOL": "∀x (Game(x) → (BoardGame(x) ∨ VideoGame(x)))"
    },
    {
        "NL": "A smartphone is advanced if it supports 5G, has a high-resolution display, and includes AI capabilities.",
        "FOL": "∀x (Smartphone(x) ∧ Supports5G(x) ∧ HighResolutionDisplay(x) ∧ AICapabilities(x) → Advanced(x))"
    },
    {
        "NL": "A restaurant is a fast food joint if and only if it serves burgers or fries, but not healthy food.",
        "FOL": "∀v (Restaurant(v) ∧ FastFoodJoint(v) ↔ (ServeBurger(v) ∨ ServeFries(v) ∧ ¬HealthyFood(v)))"
    },
    {
        "NL": "A liquid is considered a solvent if it can dissolve other substances.",
        "FOL": "∀x (Liquid(x) ∧ CanDissolveSubstances(x) → Solvent(x))"
    },
    {
        "NL": "A video game features multiple playable characters, like warriors, mages, and archers, and takes place in different environments, such as forests, mountains, and deserts.",
        "FOL": "∀x∀y∀z (VideoGame(x) ∧ (WarriorCharacter(y) ∨ MageCharacter(y) ∨ ArcherCharacter(y)) ∧ (ForestEnvironment(z) ∨ MountainEnvironment(z) ∨ DesertEnvironment(z)) → FeaturesPlayableCharactersAndEnvironments(x, y, z))"
    },
    {
        "NL": "A fruit that is round and has a hard, inedible shell with a fleshy interior is called a coconut.",
        "FOL": "∀x (Fruit(x) ∧ RoundShape(x) ∧ HardInedibleShell(x) ∧ FleshyInterior(x) → Coconut(x))"
    },
    {
        "NL": "An object is a triangle if and only if every object it points to is large.",
        "FOL": "∀x (Triangle(x) ↔ ∀y (PointsTo(x, y) → Large(y)))"
    },
    {
        "NL": "A mobile application that is user-friendly, secure, and offers useful features gains popularity.",
        "FOL": "∀x (MobileApplication(x) ∧ UserFriendly(x) ∧ Secure(x) ∧ UsefulFeatures(x) → GainsPopularity(x))"
    },
    {
        "NL": "An athlete needs proper sleep, balanced nutrition, and regular training to perform optimally.",
        "FOL": "∀x (Athlete(x) → (ProperSleep(x) ∧ BalancedNutrition(x) ∧ RegularTraining(x) → OptimalPerformance(x)))"
    },
    {
        "NL": "A computer is high-end if and only if it has a fast processor and a large memory.",
        "FOL": "∀x (Computer(x) → (HighEnd(x) ↔ HasFastProcessor(x) ∧ HasLargeMemory(x)))"
    },
    {
        "NL": "A healthy diet consists of a balance of carbohydrates, proteins, fats, vitamins, and minerals.",
        "FOL": "∀x (Diet(x) ∧ BalancedCarbohydrates(x) ∧ BalancedProteins(x) ∧ BalancedFats(x) ∧ BalancedVitamins(x) ∧ BalancedMinerals(x) → Healthy(x))"
    },
    {
        "NL": "A boat floats on water, and an airplane flies in the air.",
        "FOL": "∀x ∀y (Boat(x) ∧ Airplane(y) → (FloatsOnWater(x) ∧ FliesInAir(y)))"
    },
    {
        "NL": "A city has a broad spectrum of architecture if it contains gothic, modern, and baroque styles with unique aspects.",
        "FOL": "∀x (City(x) ∧ ∃y ∃z ∃w (Gothic(y) ∧ Modern(z) ∧ Baroque(w) ∧ UniqueAspects(y, z, w) ∧ Contains(x, y, z, w)) → HasBroadSpectrumOfArchitecture(x))"
    },
    {
        "NL": "When a musician plays multiple instruments and performs in a variety of musical genres, they are considered a versatile musician.",
        "FOL": "∀x∀y (Musician(x) ∧ PlaysMultipleInstruments(x) ∧ PerformsInVarietyOfGenres(x, y) → VersatileMusician(x))"
    },
    {
        "NL": "A song that is a ballad can touch listeners' hearts.",
        "FOL": "∀x ∀y (Song(x) ∧ Ballad(x) ∧ Listener(y) → CanTouchHeart(x, y))"
    },
    {
        "NL": "An artist creates sculptures by shaping materials such as clay, wood, or metal.",
        "FOL": "∀x (Artist(x) → (CreatesSculptures(x) ↔ (ShapesClay(x) ∨ ShapesWood(x) ∨ ShapesMetal(x))))"
    },
    {
        "NL": "All keys are not only gold.",
        "FOL": "¬∀x (Key(x) → Gold(x))"
    },
    {
        "NL": "Lions hunt prey, while zebras graze on grass.",
        "FOL": "∀x∀y (Lion(x) → HuntsPrey(x)) ∧ (Zebra(y) → GrazesOnGrass(y))"
    },
    {
        "NL": "A worker is skilled if they can operate a crane or forklift, but not both.",
        "FOL": "∀x (Worker(x) → (Skilled(x) → (OperateCrane(x) ⊕ OperateForklift(x))))"
    },
    {
        "NL": "An email can be sent with attachments, while a postcard has a picture on one side and a message on the other.",
        "FOL": "∀x∀y (Email(x) → (WithAttachments(x, y) ∨ ¬WithAttachments(x, y))) ∧ ∀z∀w∀v (Postcard(z) ∧ Picture(z, w) ∧ Message(z, v) → (OnOneSide(w) ∧ OnOtherSide(v)))"
    },
    {
        "NL": "A city is considered a capital if it is the administrative center of a country.",
        "FOL": "∀x∀y (City(x) ∧ Country(y) ∧ AdministrativeCenter(x, y) → Capital(x, y))"
    },
    {
        "NL": "A type of fuel can be either gasoline or diesel.",
        "FOL": "∀x (FuelType(x) → Gasoline(x) ⊕ Diesel(x))"
    },
    {
        "NL": "A guitar is played by plucking or strumming strings, while a piano is played by pressing keys.",
        "FOL": "∀x ∀y (Guitar(x) ∧ Piano(y) → (PlayedBy(x, PluckingOrStrumming) ∧ PlayedBy(y, PressingKeys)))"
    },
    {
        "NL": "If a few dogs cannot bark, then everything is rolling or some bones are motionless.",
        "FOL": "∃x (Dog(x) ∧ ¬CanBark(x)) → ∀y (Rolling(y)) ∨ ∃z (Bone(z) ∧ Motionless(z))"
    },
    {
        "NL": "A lady is reading in a park, and a child is playing in a garden.",
        "FOL": "∃x ∃y (Lady(x) ∧ Park(y) ∧ ReadingIn(x, y)) ∧ ∃z ∃w (Child(z) ∧ Garden(w) ∧ PlayingIn(z, w))"
    },
    {
        "NL": "Some fruit is red, juicy, and sweet.",
        "FOL": "∃x (Fruit(x) ∧ Red(x) ∧ Juicy(x) ∧ Sweet(x))"
    },
    {
        "NL": "A building functions as a museum if it displays a collection of historical, cultural, or scientific artifacts for public viewing.",
        "FOL": "∀x (Building(x) ∧ DisplaysCollectionOfArtifacts(x) ∧ PublicViewing(x) → Museum(x))"
    },
    {
        "NL": "A chef specializes in either baking, grilling, or sauteing, but not more than one.",
        "FOL": "∀x (Chef(x) → (SpecializesInBaking(x) ⊕ SpecializesInGrilling(x) ⊕ SpecializesInSauteing(x)))"
    },
    {
        "NL": "A printer prints documents and images.",
        "FOL": "∀x∀y∀z (Printer(x) ∧ Document(y) ∧ Image(z) → (Prints(x, y) ∧ Prints(x, z)))"
    },
    {
        "NL": "A garden blooms when it is well-watered and receives sunlight.",
        "FOL": "∀x (Garden(x) ∧ (WellWatered(x) ∧ ReceivesSunlight(x)) → Blooms(x))"
    },
    {
        "NL": "All cats need water.",
        "FOL": "∀x ∃y (Cat(x) → Water(y) ∧ Need(x, y))"
    },
    {
        "NL": "A sculpture is created by an artist using a variety of materials, such as stone, wood, or metal, and tools to shape and form the artwork.",
        "FOL": "∀x ∀y ∀z (Sculpture(x) ∧ Artist(y) ∧ Materials(z) ∧ (Stone(z) ∨ Wood(z) ∨ Metal(z)) ∧ UsesTools(y) → Creates(y, x, z))"
    },
    {
        "NL": "Trains are delayed if there are track issues, severe weather, or mechanical problems, but will operate normally if none of these issues occur.",
        "FOL": "∀x (Train(x) ∧ ((TrackIssues(x) ∨ SevereWeather(x) ∨ MechanicalProblems(x)) → Delayed(x)) ∧ ¬(TrackIssues(x) ∨ SevereWeather(x) ∨ MechanicalProblems(x)) → OperateNormally(x))"
    },
    {
        "NL": "A dessert can be either sweet or savory, but not both.",
        "FOL": "∀x (Dessert(x) → ((Sweet(x) ⊕ Savory(x))))"
    },
    {
        "NL": "Athletes are not always fit.",
        "FOL": "∃x (Athlete(x) ∧ ¬Fit(x))"
    },
    {
        "NL": "If a car is maintained, then it performs effectively and lasts longer.",
        "FOL": "∀x (Car(x) ∧ Maintained(x) → PerformsEffectively(x) ∧ LastsLonger(x))"
    },
    {
        "NL": "A tiger is prowling in the jungle.",
        "FOL": "∃x (Tiger(x) ∧ Prowling(x) ∧ InTheJungle(x))"
    },
    {
        "NL": "An athlete becomes a professional athlete when they participate in a sport and receive payment for their performance.",
        "FOL": "∀x (Athlete(x) ∧ ParticipateInSport(x) ∧ ReceivePaymentForPerformance(x) → ProfessionalAthlete(x))"
    },
    {
        "NL": "An artist can be rewarded for best painting, best sculpture, or best installation, but not everything at once.",
        "FOL": "∀x (Artist(x) ∧ BeRewarded(x) → (BestPaintingAward(x) ⊕ BestSculptureAward(x) ⊕ BestInstallationAward(x)))"
    },
    {
        "NL": "A bird can fly by flapping its wings or by gliding on air currents.",
        "FOL": "∀x (Bird(x) → (FliesByFlappingWings(x) ∨ FliesByGlidingOnAirCurrents(x)))"
    },
    {
        "NL": "A movie can be classified as a comedy, drama, thriller, or documentary based on its content and style.",
        "FOL": "∀x (Movie(x) → (Comedy(x) ⊕ Drama(x) ⊕ Thriller(x) ⊕ Documentary(x)))"
    },
    {
        "NL": "A teacher either teaches at a school or a university, but not both.",
        "FOL": "∀x (Teacher(x) → ((TeachesAtSchool(x) ∨ TeachesAtUniversity(x)) ∧ ¬(TeachesAtSchool(x) ∧ TeachesAtUniversity(x))))"
    },
    {
        "NL": "Every writer is expressive, but not all expressive people are writers.",
        "FOL": "∀x (Writer(x) → Expressive(x)) ∧ ¬∀x (Expressive(x) → Writer(x))"
    },
    {
        "NL": "A novel's genre can be determined by its setting, plot, or characters.",
        "FOL": "∀x (Novel(x) → (DeterminedBySetting(x) ∨ DeterminedByPlot(x) ∨ DeterminedByCharacters(x)))"
    },
    {
        "NL": "A battery charges when connected to a charger and the charger is plugged in.",
        "FOL": "∀x (Battery(x) ∧ ConnectedToCharger(x) ∧ ChargerPluggedIn(x) → Charges(x))"
    },
    {
        "NL": "In a library, books are usually organized by their subjects and authors.",
        "FOL": "∀x ∀y (Library(x) ∧ Book(y) → OrganizedBy(x, y, subject) ∧ OrganizedBy(x, y, author))"
    },
    {
        "NL": "A bird that flies, lays eggs, and has feathers is an eagle.",
        "FOL": "∀x (Bird(x) ∧ Flies(x) ∧ LaysEggs(x) ∧ HasFeathers(x) → Eagle(x))"
    },
    {
        "NL": "Either John is a lawyer or Alice is a lawyer, but not both.",
        "FOL": "Lawyer(john) ⊕ Lawyer(alice)"
    },
    {
        "NL": "A person is considered an editor if they review and revise written material for publication or other types of dissemination.",
        "FOL": "∀x (Person(x) ∧ ReviewsWrittenMaterial(x) ∧ RevisesMaterialForPublicationOrDissemination(x) → Editor(x))"
    },
    {
        "NL": "A refrigerator keeps items cold, and an oven heats items.",
        "FOL": "∀x ∀y ((Refrigerator(x) ∧ KeepsCold(x)) ∧ (Oven(y) ∧ HeatsItems(y)))"
    },
    {
        "NL": "A mayor will support the proposal only if she does not drive her car.",
        "FOL": "∀x (Mayor(x) ∧ SupportProposal(x) → ¬DriveCar(x))"
    },
    {
        "NL": "Each painting is significant if and only if it is either a portrait or an abstract.",
        "FOL": "∀x (Painting(x) → (Significant(x) ↔ (Portrait(x) ∨ Abstract(x))))"
    },
    {
        "NL": "A cat is healthy if it eats well and has a normal body weight.",
        "FOL": "∀x (Cat(x) ∧ EatsWell(x) ∧ HasNormalBodyWeight(x) → IsHealthy(x))"
    },
    {
        "NL": "If a liquid is a solvent, it can dissolve other substances.",
        "FOL": "∀x (Solvent(x) → CanDissolveSubstances(x))"
    },
    {
        "NL": "A book is either a novel or a documentary if it is not a drama.",
        "FOL": "∀x (Book(x) ∧ ¬Drama(x) → (Novel(x) ∨ Documentary(x)))"
    },
    {
        "NL": "A building is a skyscraper if it is a tall, multi-story structure with a steel framework.",
        "FOL": "∀x (Building(x) ∧ Tall(x) ∧ MultiStory(x) ∧ SteelFramework(x) → Skyscraper(x))"
    },
    {
        "NL": "A person who eats no animal products is considered a vegan.",
        "FOL": "∀x (Person(x) ∧ NoAnimalProducts(x) → Vegan(x))"
    },
    {
        "NL": "A square has four equal sides and has either four right angles or no right angles.",
        "FOL": "∀x (Square(x) → (FourEqualSides(x) ∧ ((FourRightAngles(x) ∧ ¬NoRightAngles(x)) ∨ (¬FourRightAngles(x) ∧ NoRightAngles(x)))))"
    },
    {
        "NL": "An agent sells a property only if that property is bought by someone.",
        "FOL": "∀x (Agent(x) → ∀y (Property(y) ∧ Sells(x, y) → IsBought(y, x)))"
    },
    {
        "NL": "A train station is busy during peak hours, but less crowded during off-peak hours.",
        "FOL": "∀x (TrainStation(x) ∧ PeakHours(x) → Busy(x)) ∧ (TrainStation(x) ∧ ¬PeakHours(x) → LessCrowded(x))"
    },
    {
        "NL": "There are artists who value only critics who are more insightful than them.",
        "FOL": "∃x ∀y (Artist(x) ∧ Critic(y) ∧ MoreInsightfulThan(y, x) → Value(x, y))"
    },
    {
        "NL": "Trees produce oxygen through photosynthesis, provide habitats for various species, and help prevent soil erosion.",
        "FOL": "∀x (Tree(x) → ProducesOxygenThroughPhotosynthesis(x) ∧ ProvidesHabitatsForVariousSpecies(x) ∧ HelpsPreventSoilErosion(x))"
    },
    {
        "NL": "Each book contains pages and doesn't contain music.",
        "FOL": "∀x (Book(x) → (ContainsPages(x) ∧ ¬ContainsMusic(x)))"
    },
    {
        "NL": "A bicycle with flat tires cannot be ridden efficiently until the tires are inflated.",
        "FOL": "∀x (Bicycle(x) ∧ FlatTires(x) → ¬CanBeRiddenEfficientlyUntilInflated(x))"
    },
    {
        "NL": "In a university, professors with tenure have job security, and they engage in teaching, research, and service activities.",
        "FOL": "∀x (Professor(x) ∧ HasTenure(x) → (JobSecurity(x) ∧ EngagesInTeaching(x) ∧ EngagesInResearch(x) ∧ EngagesInService(x)))"
    },
    {
        "NL": "People living in the mountains experience lower temperatures than those living in the valley.",
        "FOL": "∀x∀y (LivesInMountains(x) ∧ LivesInValley(y) → LowerTemperature(x, y))"
    },
    {
        "NL": "A type of natural disaster that involves the rapid shaking of the Earth's surface, often caused by the movement of tectonic plates, and can result in significant damage is an earthquake.",
        "FOL": "∀x (NaturalDisaster(x) ∧ InvolvesRapidShakingOfEarthSurface(x) ∧ CausedByTectonicPlateMovement(x) ∧ CanResultInSignificantDamage(x) → Earthquake(x))"
    },
    {
        "NL": "There is a musician who doesn't play any instrument he owns.",
        "FOL": "∃x (Musician(x) ∧ ∀y (Instrument(y) ∧ Own(x, y) → ¬Play(x, y)))"
    },
    {
        "NL": "An event is a concert when it is a live performance of music, typically features one or more musicians or bands, and takes place in a variety of venues, from small clubs to large stadiums.",
        "FOL": "∀x (Event(x) ∧ LivePerformanceOfMusic(x) ∧ FeaturesMusiciansOrBands(x) ∧ TakesPlaceInVariousVenues(x, smallClubs, largeStadiums) → Concert(x))"
    },
    {
        "NL": "A fruit salad contains fruits and may include vegetables, such as avocado or cucumber.",
        "FOL": "∀x (FruitSalad(x) → ContainsFruits(x)) ∧ ∃y (FruitSalad(y) ∧ IncludesVegetables(y))"
    },
    {
        "NL": "A book has pages, a cover, and contains text, while a magazine has pages, a cover, and contains both text and images.",
        "FOL": "∀x ∀y (Book(x) ∧ Magazine(y) → ((HasPages(x) ∧ HasCover(x) ∧ ContainsText(x)) ∧ (HasPages(y) ∧ HasCover(y) ∧ ContainsText(y) ∧ ContainsImages(y))))"
    },
    {
        "NL": "A neurotransmitter is a stimulus when it is a bioactive compound, designed to transmit signals in the nervous system, and affects various structures such as the synapses, neurons, axons, and dendrites, to ensure normal brain function.",
        "FOL": "∀x ∃y ∃z ∃w ∃v (Neurotransmitter(x) ∧ BioactiveCompound(x) ∧ Synapse(y) ∧ Neuron(z) ∧ Axon(w) ∧ Dendrite(v) ∧ DesignedToTransmitSignals(x) ∧ Affects(x, y) ∧ Affects(x, z) ∧ Affects(x, w) ∧ Affects(x, v) ∧ EnsuresBrainFunction(x) → Stimulus(x))"
    },
    {
        "NL": "A person is considered an introvert if they prefer solitary activities and need time alone to recharge.",
        "FOL": "∀x (Person(x) ∧ PrefersSolitaryActivities(x) ∧ NeedsAloneTime(x) → Introvert(x))"
    },
    {
        "NL": "An object floats in water if its density is less than the density of water.",
        "FOL": "∀x (Object(x) ∧ DensityLessThan(x, water) → FloatsInWater(x))"
    },
    {
        "NL": "No students are teachers.",
        "FOL": "∀x (Student(x) → ¬Teacher(x))"
    },
    {
        "NL": "A shirt is either long-sleeved or short-sleeved, but not both.",
        "FOL": "∀x (Shirt(x) → (LongSleeved(x) ⊕ ShortSleeved(x)))"
    },
    {
        "NL": "A guava tree is a type of tree that gives guavas, a weeping beech tree is a type of tree with draping branches, and a teak tree is a type of tree with hard wood.",
        "FOL": "∀x ∃y (GuavaTree(x) → Guava(y) ∧ Gives(x, y)) ∧ ∀z (WeepingBeech(z) → HasDrapingBranches(z)) ∧ ∀w (TeakTree(w) → HasHardWood(w))"
    },
    {
        "NL": "A chemical is an acid when it has a low pH value, reacts with metals, and turns blue litmus paper red.",
        "FOL": "∀x (Chemical(x) ∧ HasLowPH(x) ∧ ReactsWithMetals(x) ∧ TurnsBlueLitmusPaperRed(x) → Acid(x))"
    },
    {
        "NL": "An animal is classified as an herbivore if it primarily consumes plants and does not eat meat.",
        "FOL": "∀x (Animal(x) ∧ PrimarilyConsumesPlants(x) ∧ ¬EatsMeat(x) → Herbivore(x))"
    },
    {
        "NL": "A bee collects nectar from flowers and turns it into honey, which is then consumed by humans.",
        "FOL": "∀x ∀y ∀z (Bee(x) ∧ Flower(y) ∧ CollectsNectar(x, y) ∧ TurnsIntoHoney(x, z) → ConsumedByHumans(z))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the sun and the Earth, casting a shadow on the Earth's surface and temporarily blocking the sun's light.",
        "FOL": "∀x (SolarEclipse(x) → (MoonPassesBetweenSunAndEarth(x) ∧ CastsShadowOnEarth(x) ∧ TemporarilyBlocksSunlight(x)))"
    },
    {
        "NL": "A bird can fly if it has feathers, wings, and the ability to generate lift.",
        "FOL": "∀x (Bird(x) ∧ HasFeathers(x) ∧ HasWings(x) ∧ GeneratesLift(x) → CanFly(x))"
    },
    {
        "NL": "A vacation is relaxing if it involves a beach and no work.",
        "FOL": "∀x (Vacation(x) ∧ Beach(x) ∧ ¬Work(x) → Relaxing(x))"
    },
    {
        "NL": "Regular stretching improves flexibility.",
        "FOL": "∀x (RegularStretching(x) → ImprovesFlexibility(x))"
    },
    {
        "NL": "If some humans cannot sing, then all notes are important or some songs are uncomfortable.",
        "FOL": "∃x (Human(x) ∧ ¬CanSing(x)) → ∀y (Note(y) ∨ Important(y)) ∨ ∃z (Song(z) ∧ Uncomfortable(z))"
    },
    {
        "NL": "No chair is either old or new, but not both.",
        "FOL": "∀x (Chair(x) → ¬(Old(x) ⊕ New(x)))"
    },
    {
        "NL": "An email is marked as spam if it contains suspicious content and comes from an unknown sender.",
        "FOL": "∀x (Email(x) ∧ ContainsSuspiciousContent(x) ∧ UnknownSender(x) → MarkedAsSpam(x))"
    },
    {
        "NL": "An astronomical event that occurs when one celestial body moves into the shadow of another, causing a temporary reduction in the amount of light it receives, is an eclipse.",
        "FOL": "∀x∀y (AstronomicalEvent(x) ∧ CelestialBodyMovesIntoShadow(x, y) ∧ TemporaryReductionInLight(x) → Eclipse(x))"
    },
    {
        "NL": "A footballer who trains regularly and plays well is professional.",
        "FOL": "∀x (Footballer(x) ∧ TrainsRegularly(x) ∧ PlaysWell(x) → Professional(x))"
    },
    {
        "NL": "A car's speed is controlled by the driver pressing on the accelerator pedal and releasing the brake pedal.",
        "FOL": "∀x∀y∀z (Car(x) ∧ Driver(y) ∧ AcceleratorPedal(z) ∧ BrakePedal(z) ∧ Presses(y, z) ∧ Releases(y, z) → ControlsSpeed(y, x))"
    },
    {
        "NL": "A door unlocks if you insert the correct key, enter the right code, or use a fingerprint scanner, but not when multiple methods are employed.",
        "FOL": "∀x (Door(x) → ((InsertCorrectKey(x) ∧ ¬EnterRightCode(x) ∧ ¬UseFingerprintScanner(x)) ∨ (EnterRightCode(x) ∧ ¬InsertCorrectKey(x) ∧ ¬UseFingerprintScanner(x)) ∨ (UseFingerprintScanner(x) ∧ ¬InsertCorrectKey(x) ∧ ¬EnterRightCode(x))))"
    },
    {
        "NL": "A museum is educational if it has well-curated exhibits, knowledgeable staff, and engaging interactive displays.",
        "FOL": "∀x (Museum(x) → (Educational(x) ↔ (WellCuratedExhibits(x) ∧ KnowledgeableStaff(x) ∧ EngagingInteractiveDisplays(x))))"
    },
    {
        "NL": "No singers are famous unless they are skillful, but all of them strive to be great.",
        "FOL": "∀x (Singer(x) → (¬Famous(x) ∨ Skillful(x))) ∧ ∀y (Singer(y) → StriveToBeGreat(y))"
    },
    {
        "NL": "A location is tranquil if it is not noisy and is away from crowded areas.",
        "FOL": "∀x (Location(x) ∧ ¬Noisy(x) ∧ ¬CrowdedArea(x) → Tranquil(x))"
    },
    {
        "NL": "Some planets have a moon or ring system, but not all have both.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ Moon(y) ∧ RingSystem(z) → (Has(x, y) ∨ Has(x, z)) ∧ ¬(Has(x, y) ∧ Has(x, z)))"
    },
    {
        "NL": "An artwork is marked as painting if it is two-dimensional and made by applying colors on a canvas.",
        "FOL": "∀x (Artwork(x) ∧ TwoDimensional(x) ∧ MadeByApplyingColorsOnCanvas(x) → Painting(x))"
    },
    {
        "NL": "A musical instrument produces sound through vibration and is either stringed, wind, percussion, or electronic.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundThroughVibration(x) → (Stringed(x) ⊕ Wind(x) ⊕ Percussion(x) ⊕ Electronic(x)))"
    },
    {
        "NL": "A store sells either clothing or electronics, but not both.",
        "FOL": "∀x (Store(x) → (SellsClothing(x) ⊕ SellsElectronics(x)))"
    },
    {
        "NL": "Not all books are informative or interesting.",
        "FOL": "¬∀x (Book(x) → (Informative(x) ∨ Interesting(x)))"
    },
    {
        "NL": "If a person is a scientist, they either work in a laboratory or a research institution.",
        "FOL": "∀x (Person(x) ∧ Scientist(x) → WorkInLaboratory(x) ⊕ WorkInResearchInstitution(x))"
    },
    {
        "NL": "A painting can be displayed on a wall or stored in a gallery's collection, but not both at the same time.",
        "FOL": "∀x (Painting(x) → (DisplayedOnWall(x) ⊕ StoredInCollection(x)))"
    },
    {
        "NL": "Not every bird that can sing is a nightingale.",
        "FOL": "¬∀x (Bird(x) ∧ CanSing(x) → Nightingale(x))"
    },
    {
        "NL": "If an instrument is part of a symphony orchestra, it is a string, woodwind, or brass instrument.",
        "FOL": "∀x (Instrument(x) ∧ PartOfSymphonyOrchestra(x) → StringInstrument(x) ∨ WoodwindInstrument(x) ∨ BrassInstrument(x))"
    },
    {
        "NL": "An event is successful if it attracts a large audience or receives positive feedback.",
        "FOL": "∀x (Event(x) ∧ (LargeAudience(x) ∨ PositiveFeedback(x)) → Successful(x))"
    },
    {
        "NL": "Lizards are cold-blooded, meaning they rely on external sources of heat to regulate their body temperature.",
        "FOL": "∀x (Lizard(x) → (ColdBlooded(x) ∧ ReliesOnExternalHeat(x)))"
    },
    {
        "NL": "A thing is recognized as a tree if it has roots and it grows leaves.",
        "FOL": "∀v (Thing(v) ∧ HasRoots(v) ∧ GrowsLeaves(v) → Tree(v))"
    },
    {
        "NL": "A scientific theory gains acceptance when it explains observed phenomena, is supported by empirical evidence, and gets validation from peer-reviewed studies or expert consensus.",
        "FOL": "∀x∀y∀z (ScientificTheory(x) ∧ ExplainsPhenomena(x, y) ∧ EmpiricalEvidence(x, z) ∧ (PeerReviewedStudies(x) ∨ ExpertConsensus(x)) → GainsAcceptance(x))"
    },
    {
        "NL": "Some dogs are both friendly and have a playful personality, while all others are aggressive and have a dominant nature.",
        "FOL": "∀x (Dog(x) → (Friendly(x) ∧ Playful(x)) ⊕ (Aggressive(x) ∧ Dominant(x)))"
    },
    {
        "NL": "An athlete is successful if they have a consistent winning record, a strong work ethic, and a supportive team.",
        "FOL": "∀x (Athlete(x) → Successful(x) ↔ (ConsistentWinningRecord(x) ∧ StrongWorkEthic(x) ∧ SupportiveTeam(x)))"
    },
    {
        "NL": "A university student is considered brainy if and only if they burn the midnight oil or they are a genius.",
        "FOL": "∀x (UniversityStudent(x) → (Brainy(x) ↔ (BurnsTheMidnightOil(x) ∨ Genius(x))))"
    },
    {
        "NL": "A bird can fly if it has wings and the ability to generate lift.",
        "FOL": "∀x (Bird(x) ∧ HasWings(x) ∧ GeneratesLift(x) → CanFly(x))"
    },
    {
        "NL": "Some athletes are sprinters.",
        "FOL": "∃x (Athlete(x) ∧ Sprinter(x))"
    },
    {
        "NL": "A key is for unlocking but not for tightening.",
        "FOL": "∀x (Key(x) → (UnlocksWith(x) ∧ ¬TightensWith(x)))"
    },
    {
        "NL": "A transport that can accommodate more than 15 passengers and has six or more wheels is categorized as a coach.",
        "FOL": "∀x (Transport(x) ∧ CanAccommodateMoreThanFifteenPassengers(x) ∧ (HasSixWheels(x) ∨ HasMoreThanSixWheels(x)) → Coach(x))"
    },
    {
        "NL": "A bird flies if it's not injured, the weather is good, or it's migrating.",
        "FOL": "∃x (Bird(x) ∧ ((¬Injured(x) ∧ GoodWeather(x)) ∨ Migrating(x) → Flies(x)))"
    },
    {
        "NL": "The dinosaur is carnivorous.",
        "FOL": "∀x (Dinosaur(x) → Carnivorous(x))"
    },
    {
        "NL": "An athlete can compete in track and field events, swimming events, or gymnastics events, but not all events simultaneously.",
        "FOL": "∀x (Athlete(x) ∧ (CompeteInTrackAndField(x) ⊕ CompeteInSwimming(x) ⊕ CompeteInGymnastics(x)))"
    },
    {
        "NL": "An island is a landmass surrounded by water and can be formed by volcanic activity, tectonic plate movement, or sediment deposition.",
        "FOL": "∀x (Island(x) → (SurroundedByWater(x) ∧ (FormedByVolcanicActivity(x) ∨ FormedByTectonicPlateMovement(x) ∨ FormedBySedimentDeposition(x))))"
    },
    {
        "NL": "A software engineer is assigned to work on a project if their skills match the project requirements and the project deadline is within the engineer's availability.",
        "FOL": "∀x ∀y ∀z (SoftwareEngineer(x) ∧ Project(y) ∧ SkillsMatch(x, y) ∧ Deadline(y, d) ∧ Availability(x, d) → AssignedToWorkOn(x, y))"
    },
    {
        "NL": "A student who works diligently and consistently gets good grades.",
        "FOL": "∀x (Student(x) ∧ WorksDiligently(x) ∧ WorksConsistently(x) → GetsGoodGrades(x))"
    },
    {
        "NL": "A sports team that demonstrates strong teamwork, has skilled players, and is well-coached often performs well in competitions.",
        "FOL": "∀x (SportsTeam(x) ∧ DemonstratesStrongTeamwork(x) ∧ HasSkilledPlayers(x) ∧ WellCoached(x) → PerformsWellInCompetitions(x))"
    },
    {
        "NL": "An animal is a reptile if it is cold-blooded and has scales.",
        "FOL": "∀x ((ColdBlooded(x) ∧ HasScales(x)) → Reptile(x))"
    },
    {
        "NL": "An athlete wins a gold medal in a competition if they achieve the highest score, finish the race first, or meet specific performance criteria.",
        "FOL": "∀x ∀y ∀z (Athlete(x) ∧ Competition(y) ∧ (HighestScore(x, y) ∨ FinishRaceFirst(x, y) ∨ MeetPerformanceCriteria(x, y, z)) → GoldMedal(x))"
    },
    {
        "NL": "An eagle is attacking a rabbit in the mountains.",
        "FOL": "∃x ∃y (Eagle(x) ∧ Rabbit(y) ∧ Attacking(x, y) ∧ InTheMountains(x))"
    },
    {
        "NL": "If there are no exemplary performances, then no critic praises any musical composition.",
        "FOL": "¬∃x (Performance(x)) → ¬∃y (Critic(y) ∧ ∃z (Composition(z) ∧ Praise(y, z)))"
    },
    {
        "NL": "A predator x hunts prey y if the prey is part of x's natural diet.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) ∧ PartOfNaturalDiet(y, x) → Hunts(x, y))"
    },
    {
        "NL": "Some music can be performed by a solo artist, while others are performed by bands.",
        "FOL": "∀x (Music(x) → PerformedBySoloArtist(x) ⊕ PerformedByBand(x))"
    },
    {
        "NL": "A plant can be a flower, a tree, or a shrub.",
        "FOL": "∀x (Plant(x) → (Flower(x) ∨ Tree(x) ∨ Shrub(x)))"
    },
    {
        "NL": "A person can be vegetarian, or enjoy playing Mozart, but not both",
        "FOL": "∀x (Vegetarian(x) ⊕ EnjoyPlayingMozart(x))"
    },
    {
        "NL": "A substance can be a solid, liquid, or gas, but it cannot be in two states at the same time.",
        "FOL": "∀x (Substance(x) → ((Solid(x) ⊕ Liquid(x)) ⊕ Gas(x)))"
    },
    {
        "NL": "A country achieves economic growth if it experiences an increase in gross domestic product, a decrease in unemployment rates, and an improvement in living standards.",
        "FOL": "∀x (Country(x) ∧ IncreaseInGDP(x) ∧ DecreaseInUnemploymentRates(x) ∧ ImprovementInLivingStandards(x) → EconomicGrowth(x))"
    },
    {
        "NL": "Not all who desire succeed, but only those who desire succeed.",
        "FOL": "¬∀x (Desires(x) → Succeeds(x)) ∧ ∀y (Succeeds(y) → Desires(y))"
    },
    {
        "NL": "A studio produces movies, while another studio produces series.",
        "FOL": "∃x ∃y (Studio(x) ∧ Movie(y) ∧ Produce(x, y)) ∧ ∃z ∃w (Studio(z) ∧ Series(w) ∧ Produce(z, w))"
    },
    {
        "NL": "An electronic device that is designed for communication, can send and receive voice and text messages, and uses a cellular network is a mobile phone.",
        "FOL": "∀x∀y (ElectronicDevice(x) ∧ DesignedForCommunication(x) ∧ CanSendAndReceiveVoiceAndTextMessages(x) ∧ CellularNetwork(y) ∧ Uses(x, y) → MobilePhone(x))"
    },
    {
        "NL": "A cake with fruit, whipped cream, and sprinkles is a popular party dessert.",
        "FOL": "∀x (Cake(x) ∧ Fruit(x) ∧ WhippedCream(x) ∧ Sprinkles(x) → PopularPartyDessert(x))"
    },
    {
        "NL": "If all birds are flying creatures, there exists a nest that every bird makes it.",
        "FOL": "∀x (Bird(x) → FlyingCreature(x)) → ∃y (Nest(y) ∧ ∀z (Bird(z) → Makes(z, y)))"
    },
    {
        "NL": "There are no humans who like Tom.",
        "FOL": "¬∃x (Human(x) ∧ Like(x, tom))"
    },
    {
        "NL": "A book is interesting if it is not boring or has numerous plot twists.",
        "FOL": "∀x (Book(x) ∧ (¬Boring(x) ∨ NumerousPlotTwists(x)) → Interesting(x))"
    },
    {
        "NL": "A city with a low crime rate, good job opportunities, and a strong education system is considered livable.",
        "FOL": "∀x (City(x) ∧ LowCrimeRate(x) ∧ GoodJobOpportunities(x) ∧ StrongEducationSystem(x) → Livable(x))"
    },
    {
        "NL": "An airport has terminals where passengers check-in, go through security, and wait for their flights.",
        "FOL": "∀x (Airport(x) → (∃y (Terminal(y) ∧ InAirport(y, x) ∧ CheckIn(y) ∧ Security(y) ∧ WaitForFlight(y))))"
    },
    {
        "NL": "A structure is a building or a bridge.",
        "FOL": "∀x (Structure(x) → (Building(x) ∨ Bridge(x)))"
    },
    {
        "NL": "A machine is noisy if it produces a high level of sound and vibrations.",
        "FOL": "∀x (Machine(x) ∧ HighLevelOfSound(x) ∧ Vibrations(x) → Noisy(x))"
    },
    {
        "NL": "Frogs catch insects with their long, sticky tongues.",
        "FOL": "∀x ∀y ∀z (Frog(x) ∧ Insect(y) ∧ LongStickyTongue(z) → CatchesWithTongue(x, y, z))"
    },
    {
        "NL": "A book is considered a biography if it contains a detailed account of a person's life and experiences.",
        "FOL": "∀x (Book(x) ∧ ContainsDetailedAccountOfPersonsLifeAndExperiences(x) → Biography(x))"
    },
    {
        "NL": "A cactus is a type of plant that stores water in its thick stem and has sharp spines.",
        "FOL": "∀x (Cactus(x) → (StoresWaterInThickStem(x) ∧ HasSharpSpines(x)))"
    },
    {
        "NL": "A person is considered a scientist if they conduct research, experiments, and observations to advance knowledge in a specific field of study.",
        "FOL": "∀x (Person(x) ∧ ConductsResearchExperimentsAndObservations(x) ∧ AdvancesKnowledgeInSpecificField(x) → Scientist(x))"
    },
    {
        "NL": "No bird is a colorful parrot or a black raven.",
        "FOL": "¬∃x ((Colorful(x) ∧ Parrot(x)) ∨ (Black(x) ∧ Raven(x)))"
    },
    {
        "NL": "Organic farming reduces the use of synthetic fertilizers and promotes biodiversity.",
        "FOL": "∀x (OrganicFarming(x) → (ReducesSyntheticFertilizers(x) ∧ PromotesBiodiversity(x)))"
    },
    {
        "NL": "A robot can navigate on land or in the air, but not both.",
        "FOL": "∀x (Robot(x) → (NavigatesOnLand(x) ⊕ NavigatesInAir(x)))"
    },
    {
        "NL": "A duck is quacking on the pond at night.",
        "FOL": "∃x ∃y ∃z (Duck(x) ∧ Pond(y) ∧ QuackingOn(x, y) ∧ Night(z))"
    },
    {
        "NL": "A chef is preparing a dish.",
        "FOL": "∃x ∃y (Chef(x) ∧ Dish(y) ∧ Preparing(x, y))"
    },
    {
        "NL": "A train connects two cities if it has a direct route, operates on a frequent schedule, and offers comfortable accommodations.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ City(y) ∧ City(z) ∧ DirectRoute(x, y, z) ∧ FrequentSchedule(x) ∧ ComfortableAccommodations(x) → Connects(x, y, z))"
    },
    {
        "NL": "A student is happy if and only if they are intelligent and have friends.",
        "FOL": "∀x (Student(x) → (Happy(x) ↔ (Intelligent(x) ∧ HasFriends(x))))"
    },
    {
        "NL": "A musical ensemble consists of musicians playing different instruments in harmony.",
        "FOL": "∀x∀y∀z (MusicalEnsemble(x) ∧ Musician(y) ∧ Instrument(z) ∧ PlaysInstrument(y, z) → PerformsInHarmony(x, y, z))"
    },
    {
        "NL": "All people who are addicted to coffee also enjoy tea.",
        "FOL": "∀x (Person(x) ∧ AddictedToCoffee(x) → EnjoyTea(x))"
    },
    {
        "NL": "A number is either positive or negative, but not both, if it is not zero.",
        "FOL": "∀x (Number(x) ∧ ¬Zero(x) → (Positive(x) ⊕ Negative(x)))"
    },
    {
        "NL": "An apple has seeds, while a banana has no seeds, but a pear has multiple seeds.",
        "FOL": "∀x (Apple(x) → HasSeeds(x)) ∧ ∀y (Banana(y) → ¬HasSeeds(y)) ∧ ∀z (Pear(z) → HasMultipleSeeds(z))"
    },
    {
        "NL": "A chef prepares meals, while a waiter serves food and drinks to customers.",
        "FOL": "∀x∀y (Chef(x) ∧ Waiter(y) → (PreparesMeals(x) ∧ ServesFood(y) ∧ ServesDrinks(y)))"
    },
    {
        "NL": "A photographer takes photos, a model poses, and a designer designs.",
        "FOL": "∃x ∃y ∃z (Photographer(x) ∧ TakesPhotos(x) ∧ Model(y) ∧ Poses(y) ∧ Designer(z) ∧ Designs(z))"
    },
    {
        "NL": "A policy is effective if it addresses the root cause of a problem, has widespread support, and leads to measurable improvements, but it does not have unintended negative consequences.",
        "FOL": "∀x (Policy(x) → ((Effective(x) ↔ (AddressesRootCause(x) ∧ WidespreadSupport(x) ∧ MeasurableImprovements(x))) ∧ ¬NegativeConsequences(x)))"
    },
    {
        "NL": "A plant with thorns provides protection against herbivores, may deter some predators, and generally requires less energy for defense mechanisms.",
        "FOL": "∀x (Plant(x) ∧ HasThorns(x) → ProvidesProtectionAgainstHerbivores(x) ∧ MayDeterSomePredators(x) ∧ GenerallyRequiresLessEnergyForDefenseMechanisms(x))"
    },
    {
        "NL": "Mammals are warm-blooded, give birth to live young, and nurse their offspring with milk.",
        "FOL": "∀x (Mammal(x) → (WarmBlooded(x) ∧ GivesBirthToLiveYoung(x) ∧ NursesOffspringWithMilk(x)))"
    },
    {
        "NL": "A celestial body that orbits another larger celestial body, is not self-luminous, and has a stable trajectory is a natural satellite.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsLargerCelestialBody(x) ∧ ¬SelfLuminous(x) ∧ StableTrajectory(x) → NaturalSatellite(x))"
    },
    {
        "NL": "Every white object is matte only if it's a pyramid.",
        "FOL": "∀x (White(x) → (Matte(x) → Pyramid(x)))"
    },
    {
        "NL": "An event is successful if it has many attendees and good weather, but not if it's poorly organized.",
        "FOL": "∀x (Event(x) ∧ Successful(x) → ((ManyAttendees(x) ∧ GoodWeather(x)) ∧ ¬PoorlyOrganized(x)))"
    },
    {
        "NL": "A gardener waters flowers or mows the lawn.",
        "FOL": "∀x (Gardener(x) → (WatersFlowers(x) ∨ MowsLawn(x)))"
    },
    {
        "NL": "A bag can be designed for travel or everyday use, feature compartments or pockets, and be made of leather, canvas, or synthetic materials.",
        "FOL": "∀x (Bag(x) → ((TravelDesign(x) ⊕ EverydayUseDesign(x)) ∧ (Compartments(x) ∨ Pockets(x)) ∧ (Leather(x) ∨ Canvas(x) ∨ Synthetic(x))))"
    },
    {
        "NL": "A fruit is considered ripe if it is soft, has a strong aroma, and has reached its full color.",
        "FOL": "∀x (Fruit(x) ∧ Soft(x) ∧ StrongAroma(x) ∧ FullColor(x) → Ripe(x))"
    },
    {
        "NL": "Some mushrooms are edible, while others are poisonous.",
        "FOL": "∃x (Mushroom(x) ∧ (Edible(x) ⊕ Poisonous(x)))"
    },
    {
        "NL": "A tool is useful for a task if it can perform that task.",
        "FOL": "∀x ∀y (Tool(x) ∧ Task(y) ∧ CanPerform(x, y) → UsefulFor(x, y))"
    },
    {
        "NL": "A kitchen contains appliances and utensils.",
        "FOL": "∀x (Kitchen(x) → (ContainsAppliances(x) ∧ ContainsUtensils(x)))"
    },
    {
        "NL": "A train is reliable when it consistently arrives and departs on schedule.",
        "FOL": "∀x (Train(x) ∧ ConsistentArrival(x) ∧ ConsistentDeparture(x) → Reliable(x))"
    },
    {
        "NL": "Not all birds can fly.",
        "FOL": "∃x (Bird(x) ∧ ¬Fly(x))"
    },
    {
        "NL": "If an instrument is stringed and not a guitar, then it's not a percussion instrument, and when it has a bow, it could be a violin or a cello.",
        "FOL": "∀x (Instrument(x) ∧ Stringed(x) ∧ ¬Guitar(x) → (¬Percussion(x) ∧ (HasBow(x) → (Violin(x) ∨ Cello(x)))))"
    },
    {
        "NL": "Only the brave succeed.",
        "FOL": "∀x (¬Brave(x) → ¬Succeed(x))"
    },
    {
        "NL": "All foods are either spicy or bland.",
        "FOL": "∀x (Food(x) → (Spicy(x) ∨ Bland(x)))"
    },
    {
        "NL": "A person is an engineer if they apply scientific principles to design, build, and maintain structures, machines, or systems.",
        "FOL": "∀x (Engineer(x) ↔ (Person(x) ∧ AppliesScientificPrinciples(x) ∧ Designs(x) ∧ Builds(x) ∧ Maintains(x)))"
    },
    {
        "NL": "An object is a big circle only if it is not red.",
        "FOL": "∀x (Big(x) ∧ Circle(x) → ¬Red(x))"
    },
    {
        "NL": "Every cook who has worked for over ten years and either creates new recipes or conducts cooking workshops, but not both, must have either received a culinary excellence award or be a head chef.",
        "FOL": "∀x (Cook(x) ∧ WorkedForOverTenYears(x) ∧ (CreatesNewRecipes(x) ⊕ ConductsCookingWorkshops(x)) → (ReceivedCulinaryExcellenceAward(x) ∨ HeadChef(x)))"
    },
    {
        "NL": "A company is environmentally responsible if it reduces waste, minimizes emissions, and uses sustainable resources.",
        "FOL": "∀x (Company(x) → (EnvironmentallyResponsible(x) ↔ (ReducesWaste(x) ∧ MinimizesEmissions(x) ∧ UsesSustainableResources(x))))"
    },
    {
        "NL": "An entity is distinguished as a computer if it can process data.",
        "FOL": "∀x (Entity(x) ∧ ProcessData(x) → Computer(x))"
    },
    {
        "NL": "A student must pass an exam or complete a project to receive a passing grade in a course.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) → (PassingGrade(x, y) ↔ (PassExam(x, y) ∨ CompleteProject(x, y))))"
    },
    {
        "NL": "A plant that requires low light, minimal watering, and can tolerate a range of temperatures is well-suited for indoor cultivation.",
        "FOL": "∀x (Plant(x) ∧ RequiresLowLight(x) ∧ MinimalWatering(x) ∧ ToleratesRangeOfTemperatures(x) → SuitedForIndoorCultivation(x))"
    },
    {
        "NL": "A natural satellite that orbits a planet and reflects light from the planet's star is considered a moon.",
        "FOL": "∀x∀y∀z (NaturalSatellite(x) ∧ OrbitsPlanet(x, y) ∧ ReflectsLightFromStar(x, z) → Moon(x))"
    },
    {
        "NL": "The gardener is planting a tree in the garden.",
        "FOL": "∃x ∃y (Gardener(x) ∧ Tree(y) ∧ Planting(x, y) ∧ InTheGarden(x))"
    },
    {
        "NL": "A teacher is more effective if they are knowledgeable or patient, but not if they lack communication skills.",
        "FOL": "∃x (Teacher(x) ∧ ((Knowledgeable(x) ∨ Patient(x)) ∧ ¬LacksCommunicationSkills(x) → MoreEffective(x)))"
    },
    {
        "NL": "Dark chocolate contains antioxidants and can be beneficial for heart health.",
        "FOL": "∀x (DarkChocolate(x) → ContainsAntioxidants(x) ∧ CanBeBeneficialForHeartHealth(x))"
    },
    {
        "NL": "A musical composition created for and performed by a large ensemble of musicians, including string, brass, woodwind, and percussion instruments, is known as an orchestra piece.",
        "FOL": "∀x (MusicalComposition(x) ∧ CreatedForLargeEnsemble(x) ∧ PerformedByLargeEnsemble(x) ∧ IncludesStringBrassWoodwindPercussion(x) → OrchestraPiece(x))"
    },
    {
        "NL": "Some lions roar loudly.",
        "FOL": "∃x (Lion(x) ∧ RoarLoudly(x))"
    },
    {
        "NL": "An architect designs a building, which is then constructed by a construction company, and finally inhabited by tenants.",
        "FOL": "∀x ∀y ∀z (Architect(x) ∧ Building(y) ∧ ConstructionCompany(z) ∧ Designs(x, y) ∧ Constructs(z, y) → InhabitedByTenants(y))"
    },
    {
        "NL": "A mammal has hair or fur, while a reptile has scales.",
        "FOL": "∀x (Mammal(x) → (HasHair(x) ∨ HasFur(x))) ∧ ∀y (Reptile(y) → HasScales(y))"
    },
    {
        "NL": "Someone can be a chef, or like jogging in the morning, but not both.",
        "FOL": "∀v (Chef(v) ⊕ LikesJoggingMorning(v))"
    },
    {
        "NL": "A fabric is synthetic if it is not made of cotton, silk, or wool.",
        "FOL": "∀x (Fabric(x) ∧ ¬(MadeOfCotton(x) ∨ MadeOfSilk(x) ∨ MadeOfWool(x)) → Synthetic(x))"
    },
    {
        "NL": "A river flows from a source, such as a spring or a glacier, to a larger body of water like a lake or an ocean.",
        "FOL": "∀x (River(x) → (∃y (Source(y) ∧ (Spring(y) ∨ Glacier(y)) ∧ FlowsFrom(x, y)) ∧ (∃z (LargerBodyOfWater(z) ∧ (Lake(z) ∨ Ocean(z)) ∧ FlowsTo(x, z)))))"
    },
    {
        "NL": "A country is a democracy if it has free elections, protects individual rights, and allows its citizens to participate in decision-making.",
        "FOL": "∀x (Country(x) → (Democracy(x) ↔ (FreeElections(x) ∧ ProtectsIndividualRights(x) ∧ CitizenParticipationInDecisionMaking(x))))"
    },
    {
        "NL": "An orchestra produces harmonious music when each musician plays their instrument skillfully, the conductor leads effectively, and the composition is well-arranged.",
        "FOL": "∀x∀y∀z∀w (Orchestra(x) ∧ Musician(y) ∧ Instrument(z) ∧ Conductor(w) ∧ PlaysSkillfully(y, z) ∧ LeadsEffectively(w) ∧ WellArranged(x) → HarmoniousMusic(x))"
    },
    {
        "NL": "The instrument is a string instrument or a percussion instrument, but not both.",
        "FOL": "∀x (Instrument(x) → (StringInstrument(x) ⊕ PercussionInstrument(x)))"
    },
    {
        "NL": "Each device that is neither old nor new is a smartphone if and only if it is an Android.",
        "FOL": "∀x (¬Old(x) ∧ ¬New(x) → (Smartphone(x) ↔ Android(x)))"
    },
    {
        "NL": "A thunderstorm produces thunder, lightning, and rain.",
        "FOL": "∀x ∀y ∀z ∀w (Thunderstorm(x) → (ProducesThunder(x, y) ∧ ProducesLightning(x, z) ∧ ProducesRain(x, w)))"
    },
    {
        "NL": "A satisfying meal leaves diners feeling full, meets their nutritional needs, and delights their taste buds.",
        "FOL": "∀x (Meal(x) ∧ LeavesDinersFeelingFull(x) ∧ MeetsNutritionalNeeds(x) ∧ DelightsTasteBuds(x) → Satisfying(x))"
    },
    {
        "NL": "A river flows into a sea or an ocean.",
        "FOL": "∀x (River(x) → (FlowsIntoSea(x) ∨ FlowsIntoOcean(x)))"
    },
    {
        "NL": "Through the force of gravity, a giant star condenses into a dense body, birthing a neutron star.",
        "FOL": "∀x (GiantStar(x) ∧ CondensesDueToGravity(x) ∧ BecomesDense(x) → NeutronStar(x))"
    },
    {
        "NL": "A plant thrives when it receives adequate sunlight, proper nutrients, or sufficient water.",
        "FOL": "∀x (Plant(x) ∧ (AdequateSunlight(x) ∨ ProperNutrients(x) ∨ SufficientWater(x)) → Thrives(x))"
    },
    {
        "NL": "In a city, a public transportation system consists of buses, trains, and sometimes ferries.",
        "FOL": "∀x (City(x) ∧ PublicTransportationSystem(x) → (HasBuses(x) ∧ HasTrains(x) ∧ (HasFerries(x) ∨ ¬HasFerries(x))))"
    },
    {
        "NL": "There is no rectangle that connects to all blue pentagons.",
        "FOL": "¬∃x (Rectangle(x) → ∀y (Blue(y) ∧ Pentagon(y) → ConnectsTo(x, y)))"
    },
    {
        "NL": "Every single thing is a parallelogram if it isn't elliptical.",
        "FOL": "∀x (¬Elliptical(x) → Parallelogram(x))"
    },
    {
        "NL": "An object is a bicycle if it is a human-powered vehicle with two wheels, a frame, and pedals, designed for transportation or recreation.",
        "FOL": "∀x ((HumanPoweredVehicle(x) ∧ TwoWheels(x) ∧ FrameAndPedals(x) ∧ ForTransportationOrRecreation(x)) → Bicycle(x))"
    },
    {
        "NL": "Musicians perform on stage, and they play instruments or sing.",
        "FOL": "∀x (Musician(x) → (PerformsOnStage(x) ∧ (PlaysInstrument(x) ∨ Sings(x))))"
    },
    {
        "NL": "The freezing point of a substance is the temperature at which it changes from a liquid to a solid state.",
        "FOL": "∀x ∀y (Substance(x) ∧ FreezingPoint(y) ∧ LiquidState(x) ∧ SolidState(x) → ChangesAtTemperature(x, y))"
    },
    {
        "NL": "An employee may be praised for exceptional skill, perfect attendance, or remarkable initiative, but not all three combined.",
        "FOL": "∀x (Employee(x) ∧ Praised(x) → (ExceptionalSkillRecognition(x) ⊕ PerfectAttendanceRecognition(x) ⊕ RemarkableInitiativeRecognition(x)))"
    },
    {
        "NL": "Each green item is triangle unless it is wide.",
        "FOL": "∀x (Green(x) → (¬Wide(x) → Triangle(x)))"
    },
    {
        "NL": "If a person is a financial advisor, they must provide guidance on financial matters and investments to clients.",
        "FOL": "∀x (FinancialAdvisor(x) → (ProvidesFinancialGuidance(x) ∧ AdvisesOnInvestments(x)))"
    },
    {
        "NL": "A building is environmentally friendly when it uses sustainable materials and incorporates energy-efficient design elements.",
        "FOL": "∀x ∀y (Building(x) ∧ SustainableMaterials(y) ∧ EnergyEfficientDesignElements(x) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "Either a movie is a blockbuster or it has a limited release, but not both.",
        "FOL": "∀x (Movie(x) ∧ (Blockbuster(x) ⊕ LimitedRelease(x)))"
    },
    {
        "NL": "A book gets published when it is written by an author, edited by a professional editor, and accepted by a publishing house.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ Author(y) ∧ Editor(z) ∧ WrittenBy(x, y) ∧ EditedBy(x, z) ∧ AcceptedByPublishingHouse(x) → GetsPublished(x))"
    },
    {
        "NL": "A podcast is a digital audio or video series, often episodic in nature, that can be downloaded or streamed on demand, covering a wide range of topics and formats.",
        "FOL": "∀x (Podcast(x) ↔ (DigitalAudioOrVideoSeries(x) ∧ EpisodicNature(x) ∧ DownloadableOrStreamableOnDemand(x) ∧ CoversWideRangeOfTopicsAndFormats(x)))"
    },
    {
        "NL": "Frogs are amphibians that have slimy skin and lay eggs in water.",
        "FOL": "∀x (Frog(x) → Amphibian(x) ∧ HasSlimySkin(x) ∧ LaysEggsInWater(x))"
    },
    {
        "NL": "A hotel receives excellent reviews if it's clean and has friendly staff or luxurious amenities, but not if it's located in a noisy area.",
        "FOL": "∀x (Hotel(x) ∧ Clean(x) ∧ (FriendlyStaff(x) ∨ LuxuriousAmenities(x)) ∧ ¬NoisyArea(x) → ExcellentReviews(x))"
    },
    {
        "NL": "A fruit is either sweet or sour, and it grows on plants.",
        "FOL": "∀x (Fruit(x) → ((Sweet(x) ⊕ Sour(x)) ∧ GrowsOnPlants(x)))"
    },
    {
        "NL": "A scientist can be a physicist, conduct laboratory experiments, and publish groundbreaking studies, or they can be a biologist, conduct field research, and discover new species.",
        "FOL": "∀x (Scientist(x) → ((Physicist(x) ∧ ConductsLabExperiments(x) ∧ PublishesGroundbreakingStudies(x)) ⊕ (Biologist(x) ∧ ConductsFieldResearch(x) ∧ DiscoverNewSpecies(x))))"
    },
    {
        "NL": "Every car is not a luxury car.",
        "FOL": "¬∀x (Car(x) → LuxuryCar(x))"
    },
    {
        "NL": "An airport is efficient if it minimizes wait times, maximizes the number of flights, and has convenient connections.",
        "FOL": "∀x (Airport(x) ∧ MinimizesWaitTimes(x) ∧ MaximizesFlights(x) ∧ ConvenientConnections(x) → Efficient(x))"
    },
    {
        "NL": "A rabbit has fur and can hop, while a lizard does not have fur and cannot hop.",
        "FOL": "∀x (Rabbit(x) → HasFur(x) ∧ CanHop(x)) ∧ ∀y (Lizard(y) → ¬HasFur(y) ∧ ¬CanHop(y))"
    },
    {
        "NL": "An employee works remotely and has flexible hours, or they work on-site and follow a fixed schedule.",
        "FOL": "∀x (Employee(x) → ((WorksRemotely(x) ∧ FlexibleHours(x)) ∨ (WorksOnSite(x) ∧ FixedSchedule(x))))"
    },
    {
        "NL": "Alice cherishes a Schubert song if and only if it was composed before 1825.",
        "FOL": "∀x (Song(x) ∧ ComposedBy(x, schubert) → (ComposedBeforeeighteentwentyfive(x) ↔ Cherishes(alice, x)))"
    },
    {
        "NL": "A place is considered a theater if it hosts live performances, such as plays, musicals, or concerts.",
        "FOL": "∀x (Place(x) ∧ HostsLivePerformances(x) ∧ (Plays(x) ∨ Musicals(x) ∨ Concerts(x)) → Theater(x))"
    },
    {
        "NL": "A rectangle has four sides with opposite sides equal in length, and all angles are 90 degrees, while a rhombus has four equal sides but not all angles are necessarily 90 degrees.",
        "FOL": "∀x ∀y (Rectangle(x) ∧ Rhombus(y) → (HasFourSides(x) ∧ HasFourSides(y) ∧ OppositeSidesEqual(x) ∧ AllSidesEqual(y) ∧ AllAngles90Degrees(x) ∧ ¬AllAngles90Degrees(y)))"
    },
    {
        "NL": "Pollination occurs when animals, such as bees and butterflies, transfer pollen from one flower to another, enabling fertilization.",
        "FOL": "∀x ∀y ∀z ∀w (Pollination(x) ∧ Animal(y) ∧ (Bee(y) ∨ Butterfly(y)) ∧ Flower(z) ∧ Flower(w) → (TransferPollen(y, z, w) ∧ EnablesFertilization(x)))"
    },
    {
        "NL": "A carnivore consumes meat, and an herbivore consumes plants.",
        "FOL": "∀x (Carnivore(x) → ConsumesMeat(x)) ∧ ∀y (Herbivore(y) → ConsumesPlants(y))"
    },
    {
        "NL": "If all bakers who will be promoted are diploma holders, then some associates will not be promoted.",
        "FOL": "∀x (Baker(x) ∧ Promoted(x) → DiplomaHolder(x)) → ∃y (Associate(y) ∧ ¬Promoted(y))"
    },
    {
        "NL": "A light is either on or off, never both.",
        "FOL": "∀x (Light(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A competitive athlete trains, improves, and surpasses his competitors.",
        "FOL": "∀x (Athlete(x) ∧ Competitive(x) → ∀y (Competitor(y) → (TrainsForImprovement(x, y) ∧ ImprovesForSurpassing(x, y) ∧ SurpassesCompetitors(x, y))))"
    },
    {
        "NL": "Cooking methods such as baking and grilling can be used to prepare food.",
        "FOL": "∀x∀y (CookingMethod(x) ∧ (Baking(y) ∨ Grilling(y)) → CanBeUsedToPrepareFood(x, y))"
    },
    {
        "NL": "A movie is in color, silent, and released after 1960, or it is black and white, has sound, and released before 1960.",
        "FOL": "∀x (Movie(x) → ((InColor(x) ∧ Silent(x) ∧ ReleasedAfter(x, 1960)) ∨ (BlackAndWhite(x) ∧ HasSound(x) ∧ ReleasedBefore(x, 1960))))"
    },
    {
        "NL": "A planet with a ring system is surrounded by a set of orbiting disk-shaped structures.",
        "FOL": "∀x (Planet(x) ∧ HasRingSystem(x) → SurroundedByOrbitingDiskShapedStructures(x))"
    },
    {
        "NL": "Doctors prescribe medication to patients based on their symptoms and diagnosis.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ (Symptoms(y, z) ∧ Diagnosis(y, z)) → PrescribesMedication(x, y, z))"
    },
    {
        "NL": "A place is considered a stadium if it is a large, open or enclosed venue designed for sports, concerts, or other events, often featuring seating for spectators.",
        "FOL": "∀x (Stadium(x) ↔ (LargeOpenOrEnclosedVenue(x) ∧ DesignedForSportsConcertsOrOtherEvents(x) ∧ FeaturesSeatingForSpectators(x)))"
    },
    {
        "NL": "A hurricane forms over warm ocean waters and is characterized by strong winds and heavy rain.",
        "FOL": "∀x∀y (Hurricane(x) ∧ OceanWater(y) → (FormsOverWarmWaters(x, y) ∧ StrongWinds(x) ∧ HeavyRain(x)))"
    },
    {
        "NL": "All computers are machines.",
        "FOL": "∀x (Computer(x) → Machine(x))"
    },
    {
        "NL": "A musical instrument is a string instrument if it produces sound through vibrating strings.",
        "FOL": "∀x (StringInstrument(x) ↔ (MusicalInstrument(x) ∧ VibratingStrings(x)))"
    },
    {
        "NL": "A printer creates physical copies of digital documents.",
        "FOL": "∀x (Printer(x) → CreatesPhysicalCopies(x))"
    },
    {
        "NL": "Stars shine, moons orbit planets, and comets have tails.",
        "FOL": "∀x (Star(x) → Shine(x)) ∧ ∀y (Moon(y) ∧ Planet(z) → Orbit(y, z)) ∧ ∀w (Comet(w) → HasTail(w))"
    },
    {
        "NL": "A girl is dancing with a ribbon on the stage.",
        "FOL": "∃x ∃y (Girl(x) ∧ Ribbon(y) ∧ DancingWith(x, y) ∧ OnTheStage(x))"
    },
    {
        "NL": "A vessel that is designed for traveling on water, has a hull, and is propelled by wind or an engine is a ship or a boat.",
        "FOL": "∀x (Vessel(x) ∧ DesignedForTravelingOnWater(x) ∧ HasHull(x) ∧ (PropelledByWind(x) ∨ PropelledByEngine(x)) → (Ship(x) ∨ Boat(x)))"
    },
    {
        "NL": "An airplane can land if the runway is clear and the pilot has received clearance from air traffic control.",
        "FOL": "∀x∀y∀z (Airplane(x) ∧ Runway(y) ∧ AirTrafficControl(z) → (Clear(y) ∧ Clearance(z, x) → CanLand(x)))"
    },
    {
        "NL": "Smart home systems control lighting, temperature, and security settings based on user preferences and environmental factors.",
        "FOL": "∀x∀y (SmartHomeSystem(x) ∧ User(y) → (ControlsLighting(x, y) ∧ ControlsTemperature(x, y) ∧ ControlsSecurity(x, y)))"
    },
    {
        "NL": "A celestial body is a dwarf planet if it orbits the Sun, has sufficient mass, but has not cleared its orbit of other debris.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsSun(x) ∧ SufficientMass(x) ∧ ¬ClearedOrbit(x) → DwarfPlanet(x))"
    },
    {
        "NL": "Movies can belong to various genres, such as action, comedy, drama, or science fiction, and can be directed by different filmmakers.",
        "FOL": "∀x ∀y ∀z (Movie(x) ∧ (Action(y) ∨ Comedy(y) ∨ Drama(y) ∨ ScienceFiction(y)) ∧ Filmmaker(z) → (BelongsToGenre(x, y) ∧ DirectedBy(x, z)))"
    },
    {
        "NL": "A piece of software that isn't user-friendly or doesn't have good performance is not recommended.",
        "FOL": "∀x (Software(x) ∧ (¬UserFriendly(x) ∨ ¬GoodPerformance(x)) → NotRecommended(x))"
    },
    {
        "NL": "A plant is drought-tolerant if it can survive long periods without water and has adapted to arid conditions.",
        "FOL": "∀x (Plant(x) ∧ SurvivesWithoutWater(x) ∧ AdaptedToAridConditions(x) → DroughtTolerant(x))"
    },
    {
        "NL": "No chef who cooks either French or Italian cuisine is unskilled, and not all of them are renowned.",
        "FOL": "¬∃x (Chef(x) ∧ (CooksFrench(x) ∨ CooksItalian(x)) ∧ Unskilled(x)) ∧ ¬∀y (Chef(y) → Renowned(y))"
    },
    {
        "NL": "A behavior is acceptable if and only if it's respectful or responsible.",
        "FOL": "∀x (Acceptable(x) ↔ (Respectful(x) ∨ Responsible(x)))"
    },
    {
        "NL": "A software application is accessible when it offers an intuitive interface, accommodates diverse user needs, and supports multiple languages.",
        "FOL": "∀x (SoftwareApplication(x) ∧ IntuitiveInterface(x) ∧ AccommodatesDiverseUserNeeds(x) ∧ SupportsMultipleLanguages(x) → Accessible(x))"
    },
    {
        "NL": "A car that runs on electricity is powered by an electric motor and often has lower emissions compared to gasoline-powered cars.",
        "FOL": "∀x (Car(x) ∧ RunsOnElectricity(x) → PoweredByElectricMotor(x) ∧ OftenHasLowerEmissions(x))"
    },
    {
        "NL": "A dog is an excellent guard animal if it is loyal, alert, and well-trained, but those who are overly friendly or timid may not perform well in this role.",
        "FOL": "∀x (Dog(x) ∧ ExcellentGuardAnimal(x) ↔ (Loyal(x) ∧ Alert(x) ∧ WellTrained(x) ∧ ¬OverlyFriendly(x) ∧ ¬Timid(x)))"
    },
    {
        "NL": "Any animal that isn't both a cat and a dog is a lion.",
        "FOL": "∀z ((¬(Cat(z) ∧ Dog(z))) → Lion(z))"
    },
    {
        "NL": "A person who practices meditation regularly and maintains a healthy diet is more likely to have a balanced emotional state.",
        "FOL": "∀x (Person(x) ∧ PracticesMeditationRegularly(x) ∧ MaintainsHealthyDiet(x) → BalancedEmotionalState(x))"
    },
    {
        "NL": "No cats adore sour things.",
        "FOL": "∀x ∀y (Cat(x) ∧ Sour(y) → ¬Adore(x, y))"
    },
    {
        "NL": "A building with more than 50 floors is considered a skyscraper.",
        "FOL": "∀x (Building(x) ∧ FloorsGreaterThan(x, 50) → Skyscraper(x))"
    },
    {
        "NL": "When an item is both rare and valuable, it often attracts collectors.",
        "FOL": "∀x (Item(x) ∧ Rare(x) ∧ Valuable(x) → AttractsCollectors(x))"
    },
    {
        "NL": "If a student consistently scores high marks on exams, they are likely to have a good understanding of the subject matter.",
        "FOL": "∀x (ConsistentlyHighExamScores(x) → GoodUnderstandingOfSubjectMatter(x))"
    },
    {
        "NL": "All meals that are nutritious and tasty are healthy.",
        "FOL": "∀x (Meal(x) ∧ Nutritious(x) ∧ Tasty(x) → Healthy(x))"
    },
    {
        "NL": "A person can either be a morning person or a night owl, but not both.",
        "FOL": "∀x (Person(x) → (MorningPerson(x) ⊕ NightOwl(x)))"
    },
    {
        "NL": "A vacation destination with beautiful beaches and exciting nightlife attracts tourists seeking relaxation and entertainment.",
        "FOL": "∀x ∀y ∀z (Destination(x) ∧ BeautifulBeaches(x) ∧ ExcitingNightlife(x) ∧ Tourist(y) ∧ (SeeksRelaxation(y) ∨ SeeksEntertainment(y)) → Attracts(x, y, z))"
    },
    {
        "NL": "An artist creates artwork with materials.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Artwork(y) ∧ Material(z) → CreatesWith(x, y, z))"
    },
    {
        "NL": "An electronic component that amplifies electrical signals, controls the flow of current, and is commonly used in circuits is called a transistor.",
        "FOL": "∀x (ElectronicComponent(x) ∧ AmplifiesElectricalSignals(x) ∧ ControlsCurrentFlow(x) ∧ CommonlyUsedInCircuits(x) → Transistor(x))"
    },
    {
        "NL": "Only doctors can prescribe medication.",
        "FOL": "∀x (PrescribesMedication(x) → Doctor(x))"
    },
    {
        "NL": "Tulips are pink, lilies are white, and sunflowers are yellow.",
        "FOL": "∀x (Tulip(x) → Pink(x)) ∧ ∀y (Lily(y) → White(y)) ∧ ∀z (Sunflower(z) → Yellow(z))"
    },
    {
        "NL": "Not all students who study hard receive top grades, and not all students with top grades study hard.",
        "FOL": "¬(∀x (Student(x) ∧ StudiesHard(x) → TopGrades(x)) ∧ ∀y (Student(y) ∧ TopGrades(y) → StudiesHard(y)))"
    },
    {
        "NL": "A computer mouse allows users to control a cursor.",
        "FOL": "∀x (ComputerMouse(x) → ControlsCursor(x))"
    },
    {
        "NL": "Every country where all horses migrate if no polygons possess five corners.",
        "FOL": "¬∀x (Polygon(x) → FiveCorners(x)) → ∃y (Country(y) ∧ ∀z (Horse(z) → MigratesTo(z, y)))"
    },
    {
        "NL": "A room is cozy if it has soft lighting or comfortable furniture.",
        "FOL": "∀x (Room(x) ∧ (SoftLighting(x) ∨ ComfortableFurniture(x)) → Cozy(x))"
    },
    {
        "NL": "Musicians perform on stage.",
        "FOL": "∀x ∀y (Musician(x) ∧ Stage(y) → PerformsOn(x, y))"
    },
    {
        "NL": "Clocks display time with hour and minute hands.",
        "FOL": "∀x (Clock(x) → (Display(y) ∧ Time(y) ∧ With(z) ∧ HourHand(z) ∧ With(w) ∧ MinuteHand(w) ∧ On(x, y, z, w)))"
    },
    {
        "NL": "A television show that has a captivating storyline, talented actors, and high production values is likely to gain a devoted following.",
        "FOL": "∀x (TelevisionShow(x) ∧ CaptivatingStoryline(x) ∧ TalentedActors(x) ∧ HighProductionValues(x) → GainsDevotedFollowing(x))"
    },
    {
        "NL": "A plum tree is a type of tree that produces plums, an azalea tree is a type of tree with blossoms, and a juniper tree is a type of tree with needles and cones.",
        "FOL": "∀x ∃y (PlumTree(x) → Plum(y) ∧ Produce(x,y)) ∧ ∀z (AzaleaTree(z) → HasBlossoms(z)) ∧ ∀w (JuniperTree(w) → HasNeedle(w) ∧ HasCone(w))"
    },
    {
        "NL": "Either it is daytime or nighttime, but not both.",
        "FOL": "∀x (Time(x) → (Daytime(x) ⊕ Nighttime(x)))"
    },
    {
        "NL": "An email is marked as spam when it contains unwanted advertising or suspicious links.",
        "FOL": "∀x (Email(x) ∧ (UnwantedAdvertising(x) ∨ SuspiciousLinks(x)) → MarkedAsSpam(x))"
    },
    {
        "NL": "A person is considered an extrovert if they are outgoing and draw energy from interacting with others.",
        "FOL": "∀x (OutgoingAndDrawsEnergyFromInteractingWithOthers(x) → Extrovert(x))"
    },
    {
        "NL": "A bird can fly if it has feathers and functional wings, but not if it is injured or in a confined space.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ↔ (HasFeathers(x) ∧ FunctionalWings(x) ∧ ¬Injured(x) ∧ ¬ConfinedSpace(x))))"
    },
    {
        "NL": "Telescopes help astronomers observe celestial objects far away in space.",
        "FOL": "∀x∀y (Telescope(x) ∧ Astronomer(y) → ObserveCelestialObjects(y, x))"
    },
    {
        "NL": "Rain occurs when water vapor in the air condenses and falls to the ground.",
        "FOL": "∀x∀y (Rain(x) ↔ (Air(y) ∧ WaterVapor(y) ∧ Condenses(x, y) ∧ FallsToGround(x)))"
    },
    {
        "NL": "Rainy weather often leads to an increase in umbrella usage or people staying indoors.",
        "FOL": "∀x (RainyWeather(x) → (IncreaseInUmbrellaUsage(x) ∨ PeopleStayingIndoors(x)))"
    },
    {
        "NL": "A car is either electric, hybrid, or fuel-powered.",
        "FOL": "∀x (Car(x) → (Electric(x) ⊕ Hybrid(x) ⊕ FuelPowered(x)))"
    },
    {
        "NL": "Students study to pass exams.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) → StudiesToPass(x, y))"
    },
    {
        "NL": "There is no artist who paints both on canvas and on wood but has never showcased in a gallery.",
        "FOL": "¬∃x (Artist(x) ∧ PaintsOnCanvas(x) ∧ PaintsOnWood(x) ∧ ¬ShowcasedInGallery(x))"
    },
    {
        "NL": "If an animal is a reptile, it is either cold-blooded or warm-blooded.",
        "FOL": "∀x (Animal(x) ∧ Reptile(x) → ColdBlooded(x) ⊕ WarmBlooded(x))"
    },
    {
        "NL": "A job is desirable if it pays well, has flexible hours, or both, but not if it's overly stressful.",
        "FOL": "∀x (Job(x) ∧ (PaysWell(x) ∨ FlexibleHours(x)) ∧ ¬OverlyStressful(x) → Desirable(x))"
    },
    {
        "NL": "A room is considered well-lit if it has natural light from windows or if it has artificial light from energy-efficient bulbs.",
        "FOL": "∀x (Room(x) → (WellLit(x) ↔ (NaturalLight(x) ∨ (ArtificialLight(x) ∧ EnergyEfficientBulbs(x)))))"
    },
    {
        "NL": "A tool that requires a specific skill to use and is intended for a particular function is usually a hand or a power tool.",
        "FOL": "∀x∀y∀z (Tool(x) ∧ RequiresSkill(x, y) ∧ IntendedForFunction(x, z) → (HandTool(x) ∨ PowerTool(x)))"
    },
    {
        "NL": "Chemists study elements and their reactions to create new compounds.",
        "FOL": "∀x∀y∀z∀w (Chemist(x) ∧ Element(y) ∧ Reaction(z) ∧ Compound(w) → StudiesAndCreates(x, y, z, w))"
    },
    {
        "NL": "A substance that increases the rate of a chemical reaction without being consumed is a catalyst.",
        "FOL": "∀x (Substance(x) ∧ IncreasesReactionRate(x) ∧ NotConsumed(x) → Catalyst(x))"
    },
    {
        "NL": "Some people either drink coffee or tea, but do not prefer both.",
        "FOL": "∃x (Person(x) ∧ (DrinkCoffee(x) ⊕ DrinkTea(x)))"
    },
    {
        "NL": "An object is a square or a triangle.",
        "FOL": "∀x (Object(x) → (Square(x) ∨ Triangle(x)))"
    },
    {
        "NL": "An electronic device that uses sensors to measure and display the current atmospheric pressure is a barometer.",
        "FOL": "∀x∀y (ElectronicDevice(x) ∧ UsesSensors(x) ∧ MeasuresAtmosphericPressure(x, y) ∧ DisplaysPressure(x, y) → Barometer(x))"
    },
    {
        "NL": "William does not respect any Australian or Canadian professor.",
        "FOL": "∀x (Professor(x) ∧ (From(x, australia) ∨ From(x, canada)) → ¬Respect(william, x))"
    },
    {
        "NL": "A chemical element that is a metal, conducts electricity well, and has a shiny appearance is classified as a conductive metal.",
        "FOL": "∀x (ChemicalElement(x) ∧ Metal(x) ∧ ConductsElectricity(x) ∧ ShinyAppearance(x) → ConductiveMetal(x))"
    },
    {
        "NL": "A person is considered a teacher if they instruct students in a specific subject or skill.",
        "FOL": "∀x (Person(x) ∧ InstructsStudents(x) ∧ InSpecificSubjectOrSkill(x) → Teacher(x))"
    },
    {
        "NL": "Not every vehicle is electric or runs on gas.",
        "FOL": "¬∀x (Vehicle(x) → (Electric(x) ∨ RunsOnGas(x)))"
    },
    {
        "NL": "A movie is considered a box office hit if it generates a high revenue compared to its production cost.",
        "FOL": "∀x (Movie(x) ∧ HighRevenue(x, y) ∧ ProductionCost(x, z) ∧ RevenueGreaterThanCost(y, z) → BoxOfficeHit(x))"
    },
    {
        "NL": "Unless a person is both tall and slim, they are not attractive.",
        "FOL": "∀x (¬(Tall(x) ∧ Slim(x)) → ¬Attractive(x))"
    },
    {
        "NL": "A puzzle is challenging if it requires critical thinking and is not too easy.",
        "FOL": "∀x (Puzzle(x) ∧ CriticalThinkingRequired(x) ∧ ¬TooEasy(x) → Challenging(x))"
    },
    {
        "NL": "A bicycle consists of a frame, wheels, and handlebars, may have additional components like gears, brakes, or suspension systems, and is used for transportation, exercise, or leisure activities.",
        "FOL": "∀x (Bicycle(x) → (Frame(x) ∧ Wheels(x) ∧ Handlebars(x) ∧ (Gears(x) ∨ Brakes(x) ∨ SuspensionSystems(x)) ∧ (TransportationUsage(x) ∨ ExerciseUsage(x) ∨ LeisureActivitiesUsage(x))))"
    },
    {
        "NL": "A museum offers guided tours or self-guided audio tours, but not if there is a special event or if the museum is closed for maintenance.",
        "FOL": "∀x (Museum(x) ∧ ¬(SpecialEvent(x) ∨ ClosedForMaintenance(x)) → (OffersGuidedTours(x) ∨ OffersAudioTours(x)))"
    },
    {
        "NL": "Not every person who can sing is an opera singer.",
        "FOL": "¬∀x (Person(x) ∧ CanSing(x) → OperaSinger(x))"
    },
    {
        "NL": "A machine that performs a specific function, requires a certain power source, and is utilized in a particular industry, typically belongs to the category of industrial or agricultural machines.",
        "FOL": "∀x∀y∀z∀w (Machine(x) ∧ PerformsFunction(x, y) ∧ RequiresPowerSource(x, z) ∧ UtilizedInIndustry(x, w) → (IndustrialMachine(x) ∨ AgriculturalMachine(x)))"
    },
    {
        "NL": "Not all chemicals are acidic or non-acidic.",
        "FOL": "¬(∀x (Chemical(x) → (Acidic(x) ∨ ¬Acidic(x))))"
    },
    {
        "NL": "A house is a building, a park is an outdoor space, and a road is a transportation route.",
        "FOL": "∀x ∀y ∀z (House(x) ∧ Park(y) ∧ Road(z) → (Building(x) ∧ OutdoorSpace(y) ∧ TransportationRoute(z)))"
    },
    {
        "NL": "There are stars in the universe that haven't yet been found.",
        "FOL": "∃x (Star(x) ∧ InUniverse(x) ∧ ¬Found(x))"
    },
    {
        "NL": "A place is considered a university if it is an institution of higher learning that offers undergraduate and graduate degree programs, as well as research and teaching opportunities for faculty.",
        "FOL": "∀x (University(x) ↔ (InstitutionOfHigherLearning(x) ∧ OffersUndergraduateAndGraduateDegreePrograms(x) ∧ ProvidesResearchAndTeachingOpportunitiesForFaculty(x)))"
    },
    {
        "NL": "Mathematics involves numbers and symbols, with arithmetic dealing with basic operations, geometry studying shapes and their properties, and algebra focusing on equations.",
        "FOL": "∀x ∀y ∀z (Mathematics(x) → (Involves(x, Numbers) ∧ Involves(x, Symbols))) ∧ (Arithmetic(y) → DealsWith(y, BasicOperations)) ∧ (Geometry(z) → Studies(z, Shapes) ∧ Studies(z, Properties)) ∧ (Algebra(x) → FocusesOn(x, Equations))"
    },
    {
        "NL": "A seed germinates, grows into a seedling, and then matures into a plant.",
        "FOL": "∀x ∀y ∀z (Seed(x) ∧ Germinates(x) → Seedling(y)) ∧ (Seedling(y) → GrowsInto(y, z)) ∧ (Plant(z) → MaturesFrom(z, y))"
    },
    {
        "NL": "A hospital treats patients and has medical staff, while a school educates students and employs teachers.",
        "FOL": "∀x ((Hospital(x) → (TreatsPatients(x) ∧ HasMedicalStaff(x))) ∧ (School(x) → (EducatesStudents(x) ∧ EmploysTeachers(x))))"
    },
    {
        "NL": "There is not a vehicle that can travel faster than light.",
        "FOL": "¬∃x (Vehicle(x) ∧ CanTravelFasterThanLight(x))"
    },
    {
        "NL": "A book is informative or engaging, but not if it's outdated or poorly written.",
        "FOL": "∀x (Book(x) ∧ ¬(Outdated(x) ∨ PoorlyWritten(x)) → (Informative(x) ∨ Engaging(x)))"
    },
    {
        "NL": "A shoe provides support while walking, but it's not comfortable unless it has a cushioned sole.",
        "FOL": "∀x (Shoe(x) → (ProvideSupport(x) ∧ (¬Comfortable(x) ∨ CushionedSole(x))))"
    },
    {
        "NL": "Drinking tea can aid in digestion, while consuming carbonated beverages may lead to bloating and indigestion.",
        "FOL": "∀x ∀y (DrinkingTea(x) ∧ ConsumingCarbonatedBeverages(y) → (AidsDigestion(x) ∧ ¬CausesBloatingOrIndigestion(x)) ∧ (¬AidsDigestion(y) ∧ CausesBloatingOrIndigestion(y)))"
    },
    {
        "NL": "A type of fuel can be either solid, liquid, or gas.",
        "FOL": "∀x (Fuel(x) → (Solid(x) ⊕ Liquid(x) ⊕ Gas(x)))"
    },
    {
        "NL": "A screwdriver is used to tighten or loosen screws.",
        "FOL": "∀x (Screwdriver(x) → (TightensScrews(x) ∨ LoosensScrews(x)))"
    },
    {
        "NL": "Every car is either moving or parked.",
        "FOL": "∀x (Car(x) → IsMoving(x) ⊕ IsParked(x))"
    },
    {
        "NL": "If all runners who will participate are university students, then some competitors will not participate.",
        "FOL": "∀x (Runner(x) ∧ Participate(x) → UniversityStudent(x)) → ∃y (Competitor(y) ∧ ¬Participate(y))"
    },
    {
        "NL": "A planet is not both earth and mars.",
        "FOL": "∀x (Planet(x) → ¬(Earth(x) ∧ Mars(x)))"
    },
    {
        "NL": "An antibiotic is effective against a bacterial infection if it destroys the bacteria or inhibits their growth, but not if the bacteria are resistant to the antibiotic.",
        "FOL": "∀x∀y (Antibiotic(x) ∧ BacterialInfection(y) → (Effective(x, y) ↔ ((DestroysBacteria(x, y) ∨ InhibitsGrowth(x, y)) ∧ ¬ResistantBacteria(y, x))))"
    },
    {
        "NL": "A ladder helps people reach higher places.",
        "FOL": "∀x (Ladder(x) → HelpsReachHigherPlaces(x))"
    },
    {
        "NL": "An innovative technology provides a novel solution, disrupts existing markets, and has a transformative impact.",
        "FOL": "∀x (Technology(x) ∧ NovelSolution(x) ∧ DisruptsExistingMarkets(x) → TransformativeImpact(x))"
    },
    {
        "NL": "A narrative that is thrilling can make people excited.",
        "FOL": "∀x ∀y (Narrative(x) ∧ Thrilling(x) ∧ Person(y) → CanMakeExcited(x, y))"
    },
    {
        "NL": "A butterfly is not sitting on the flower.",
        "FOL": "∃x (Butterfly(x) ∧ ¬∃y (Flower(y) ∧ SittingOn(x, y)))"
    },
    {
        "NL": "All planets orbit the sun.",
        "FOL": "∀x (Planet(x) → OrbitSun(x))"
    },
    {
        "NL": "A place is cold if it snows or the temperature falls below zero degrees.",
        "FOL": "∀x (Place(x) ∧ (Snows(x) ∨ TemperatureBelowZero(x)) → Cold(x))"
    },
    {
        "NL": "Photographers take pictures with cameras and may use various lenses.",
        "FOL": "∀x ∀y ∀z (Photographer(x) ∧ TakesPicturesWith(x, y) ∧ Camera(y) → (UsesLens(x, z) ∨ ¬UsesLens(x, z)))"
    },
    {
        "NL": "There is a cat that likes all and only the cats that do not like themselves.",
        "FOL": "∃x (Cat(x) ∧ ∀y (Cat(y) → (Like(x, y) ↔ ¬Like(y, y))))"
    },
    {
        "NL": "An individual who donates a significant portion of their income to charitable causes is considered generous.",
        "FOL": "∀x (SignificantDonationsToCharity(x) → Generous(x))"
    },
    {
        "NL": "Mars is smaller than Earth but larger than Mercury.",
        "FOL": "∀x∀y∀z (Mars(x) ∧ Earth(y) ∧ Mercury(z) → (SmallerThan(x, y) ∧ LargerThan(x, z)))"
    },
    {
        "NL": "A device that can play music and has a screen for displaying videos is a multimedia device.",
        "FOL": "∀x (Device(x) ∧ PlayMusic(x) ∧ DisplayVideos(x) → MultimediaDevice(x))"
    },
    {
        "NL": "A song is catchy if it has a memorable melody and is either fast-paced or has an engaging rhythm.",
        "FOL": "∀x (Song(x) ∧ MemorableMelody(x) ∧ (FastPaced(x) ∨ EngagingRhythm(x)) → Catchy(x))"
    },
    {
        "NL": "A computer program is an operating system if it manages computer hardware and software resources, provides common services for computer programs, and performs tasks such as memory management and process scheduling.",
        "FOL": "∀x (ComputerProgram(x) ∧ ManagesHardwareAndSoftwareResources(x) ∧ ProvidesCommonServices(x) ∧ PerformsMemoryManagementAndProcessScheduling(x) → OperatingSystem(x))"
    },
    {
        "NL": "A smart TV connects to Wi-Fi and allows viewers to watch Netflix and browse YouTube.",
        "FOL": "∀x (SmartTV(x) → (ConnectsToWifi(x) ∧ AllowsWatchNetflix(x) ∧ AllowsBrowseYoutube(x)))"
    },
    {
        "NL": "A restaurant provides meals like burgers or pizzas for remuneration, in the form of digital payment or cash.",
        "FOL": "∀x ∃y ∃z (Restaurant(x) ∧ Meal(y) ∧ (Burger(y) ∨ Pizza(y)) ∧ Remuneration(z) ∧ (DigitalPayment(z) ∨ Cash(z)) ∧ InExchangeFor(x, z) → Provides(x, y))"
    },
    {
        "NL": "Archaeologists excavate ancient sites to uncover artifacts and study past civilizations.",
        "FOL": "∀x ∀y ∀z (Archaeologist(x) ∧ AncientSite(y) ∧ Excavates(x, y) → (UncoversArtifacts(x, z) ∧ StudiesPastCivilizations(x, z)))"
    },
    {
        "NL": "A building that incorporates energy-efficient design, uses sustainable materials, and minimizes its environmental impact is classified as a green building.",
        "FOL": "∀x (Building(x) ∧ EnergyEfficientDesign(x) ∧ UsesSustainableMaterials(x) ∧ MinimizesEnvironmentalImpact(x) → GreenBuilding(x))"
    },
    {
        "NL": "Some cats purr loudly.",
        "FOL": "∃x (Cat(x) ∧ PurrLoudly(x))"
    },
    {
        "NL": "Restaurants serve meals prepared by chefs, and customers can order appetizers, main courses, or desserts.",
        "FOL": "∀x (Restaurant(x) → (∃y (Chef(y) ∧ PreparesMeals(y, x)) ∧ (∃z (Appetizer(z) ∨ MainCourse(z) ∨ Dessert(z)) ∧ Orders(x, z))))"
    },
    {
        "NL": "Parents teach their children life skills, which help them become independent adults.",
        "FOL": "∀x ∀y ∀z (Parent(x) ∧ Child(y) ∧ Teaches(x, y, z) ∧ LifeSkill(z) → (IndependentAdult(y) ∧ Helps(z, y)))"
    },
    {
        "NL": "A drug combats a specific infection by provoking the body's shield to create a unique result.",
        "FOL": "∀x ∃y (Drug(x) ∧ Infection(y) ∧ ProvokesBodyShield(x) ∧ CreatesUniqueResult(x, y) → Combats(x, y))"
    },
    {
        "NL": "Every teacher instructs, but only students learn.",
        "FOL": "∀x (Teacher(x) → Instructs(x)) ∧ ∀y (Student(y) → Learns(y))"
    },
    {
        "NL": "A beverage is alcoholic if it contains ethanol and is intended for human consumption.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) ∧ IntendedForHumanConsumption(x) → Alcoholic(x))"
    },
    {
        "NL": "Birds eat insects and seeds, while cats only eat meat.",
        "FOL": "∀x ∀y (Bird(x) ∧ (Insect(y) ∨ Seed(y)) → Eats(x, y)) ∧ ∀z ∀w (Cat(z) ∧ Eats(z, w) → Meat(w))"
    },
    {
        "NL": "Not everyone who studies hard gets good grades, but only those who study hard get good grades.",
        "FOL": "¬∀x (StudiesHard(x) → GetsGoodGrades(x)) ∧ ∀y (GetsGoodGrades(y) → StudiesHard(y))"
    },
    {
        "NL": "If all birds that will fly are caged, then some beasts will not run.",
        "FOL": "∀x (Bird(x) ∧ Fly(x) → Caged(x)) → ∃y (Beast(y) ∧ ¬Run(y))"
    },
    {
        "NL": "Countries with a democratic government tend to respect human rights more than those with authoritarian regimes.",
        "FOL": "∀x ∀y (Country(x) ∧ Country(y) ∧ DemocraticGovernment(x) ∧ AuthoritarianRegime(y) → MoreRespectHumanRights(x, y))"
    },
    {
        "NL": "A substance is considered flammable if it can easily catch fire and burn.",
        "FOL": "∀x (Substance(x) ∧ EasilyCatchesFire(x) ∧ Burns(x) → Flammable(x))"
    },
    {
        "NL": "An athlete who competes in running and swimming events participates in a triathlon.",
        "FOL": "∀x (Athlete(x) ∧ CompetesInRunning(x) ∧ CompetesInSwimming(x) → ParticipatesInTriathlon(x))"
    },
    {
        "NL": "A room is well-lit if it has sufficient natural light or artificial light sources.",
        "FOL": "∀x (Room(x) ∧ (SufficientNaturalLight(x) ∨ ArtificialLightSources(x)) → WellLit(x))"
    },
    {
        "NL": "Smartphones connect to wireless networks using cellular data or Wi-Fi, but not both simultaneously.",
        "FOL": "∀x (Smartphone(x) → (ConnectsToWireless(x, y) ∧ (CellularData(y) ⊕ WiFi(y))))"
    },
    {
        "NL": "Plants that are fragile and delicate always need more care.",
        "FOL": "∀x (Plant(x) ∧ Fragile(x) ∧ Delicate(x) → NeedMoreCare(x))"
    },
    {
        "NL": "A versatile tool can perform tasks such as cutting or drilling and is useful for carpenters or mechanics.",
        "FOL": "∀x ∀y (Tool(x) ∧ Versatile(x) ∧ Task(y) ∧ (Cutting(y) ∨ Drilling(y)) ∧ (Carpenter(z) ∨ Mechanic(z)) → UsefulFor(x, y, z))"
    },
    {
        "NL": "A librarian organizes books on shelves by categories and authors.",
        "FOL": "∀x ∀y ∀z (Librarian(x) ∧ Book(y) ∧ Category(z) → Organizes(x, y, z))"
    },
    {
        "NL": "A book is considered a bestseller if it receives positive reviews, sells many copies, and generates significant media attention.",
        "FOL": "∀x (Book(x) ∧ Bestseller(x) ↔ (PositiveReviews(x) ∧ SellsManyCopies(x) ∧ MediaAttention(x)))"
    },
    {
        "NL": "A bird is a migratory species if it travels long distances annually.",
        "FOL": "∀x (Bird(x) ∧ AnnualTravel(x) → MigratorySpecies(x))"
    },
    {
        "NL": "A dessert that is made from milk, sugar, and flavorings and is frozen is ice cream.",
        "FOL": "∀x (Dessert(x) ∧ MadeFromMilk(x) ∧ Sugar(x) ∧ Flavorings(x) ∧ Frozen(x) → IceCream(x))"
    },
    {
        "NL": "A zoo is well-maintained if it provides a clean environment, spacious enclosures, and proper nutrition for the animals.",
        "FOL": "∀x (Zoo(x) ∧ CleanEnvironment(x) ∧ SpaciousEnclosures(x, y) ∧ ProperNutrition(x, z) → WellMaintained(x))"
    },
    {
        "NL": "A violin is a stringed musical instrument played with a bow, while a piano is a keyboard musical instrument played by striking keys.",
        "FOL": "∀x∀y (Violin(x) ∧ Piano(y) → (StringedInstrument(x) ∧ PlayedWithBow(x) ∧ KeyboardInstrument(y) ∧ PlayedByStrikingKeys(y)))"
    },
    {
        "NL": "A river flows into a sea or an ocean and has a current, but it is not a stream.",
        "FOL": "∀x (River(x) ↔ ((FlowsInto(x, sea) ∨ FlowsInto(x, ocean)) ∧ HasCurrent(x) ∧ ¬Stream(x)))"
    },
    {
        "NL": "An employee is considered a manager if they oversee the work of other employees.",
        "FOL": "∀x (Employee(x) ∧ OverseesWorkOfOthers(x) → Manager(x))"
    },
    {
        "NL": "No one in the city council has ever met either Williams or Evans.",
        "FOL": "¬∃x (Member(x) ∧ InCityCouncil(x) ∧ (Met(x, williams) ∨ Met(x, evans)))"
    },
    {
        "NL": "If a person has a high income and lives in an expensive area, they are more likely to own a luxury car.",
        "FOL": "∀x∀y (Person(x) ∧ HighIncome(x) ∧ ExpensiveArea(y) ∧ LivesIn(x, y) → MoreLikelyToOwnLuxuryCar(x))"
    },
    {
        "NL": "An underwater environment that consists of a large structure formed by the skeletons of small marine organisms, provides habitat for various marine species, and is found in shallow tropical waters is a coral reef.",
        "FOL": "∀x∀y (UnderwaterEnvironment(x) ∧ LargeStructureFormedBySkeletons(x, y) ∧ ProvidesHabitatForMarineSpecies(x) ∧ FoundInShallowTropicalWaters(x) → CoralReef(x))"
    },
    {
        "NL": "Every artist who paints in oil and acrylic, unless they are a sculptor, either has exhibited in a gallery or has not taught a painting workshop.",
        "FOL": "∀x (Artist(x) ∧ PaintsInOil(x) ∧ PaintsInAcrylic(x) ∨ Sculptor(x) → (ExhibitedInGallery(x) ∨ ¬TaughtPaintingWorkshop(x)))"
    },
    {
        "NL": "A painting can be abstract, use bold colors, and be displayed in modern museums, or it can be realistic, use muted colors, and be shown in classical museums.",
        "FOL": "∀x (Painting(x) → ((Abstract(x) ∧ UsesBoldColors(x) ∧ DisplayedInModernMuseums(x)) ⊕ (Realistic(x) ∧ UsesMutedColors(x) ∧ ShownInClassicalMuseums(x))))"
    },
    {
        "NL": "A novel can be praised for best storyline, best character development, or best writing style, but not all three together.",
        "FOL": "∀x (Novel(x) ∧ Praised(x) → (BestStoryline(x) ⊕ BestCharacterDevelopment(x) ⊕ BestWritingStyle(x)))"
    },
    {
        "NL": "A persona is either a brave knight or a wise mage, but not both.",
        "FOL": "∀x ((Brave(x) ∧ Knight(x)) ⊕ (Wise(x) ∧ Mage(x)))"
    },
    {
        "NL": "If a shape is a triangle, then it is either equilateral or scalene, but not both.",
        "FOL": "∀x (Triangle(x) → (Equilateral(x) ⊕ Scalene(x)))"
    },
    {
        "NL": "A popular restaurant must offer tasty dishes, maintain cleanliness, and have friendly staff.",
        "FOL": "∀x (Restaurant(x) ∧ TastyDishes(x) ∧ Clean(x) ∧ FriendlyStaff(x) → Popular(x))"
    },
    {
        "NL": "A person who teaches at a university is called a professor.",
        "FOL": "∀x (TeachesAtUniversity(x) → Professor(x))"
    },
    {
        "NL": "A pilot navigates and controls an airplane.",
        "FOL": "∀x∀y (Pilot(x) ∧ Airplane(y) → NavigatesAndControls(x, y))"
    },
    {
        "NL": "A microwave oven uses electromagnetic radiation to heat food quickly and is often used for reheating, defrosting, or cooking small meals.",
        "FOL": "∀x (MicrowaveOven(x) → UsesElectromagneticRadiationToHeatFood(x) ∧ (UsedForReheating(x) ∨ UsedForDefrosting(x) ∨ UsedForCookingSmallMeals(x)))"
    },
    {
        "NL": "A student graduates with honors if they maintain a high GPA and have excellent attendance.",
        "FOL": "∀x (Student(x) → (GraduatesWithHonors(x) ↔ (HighGPA(x) ∧ ExcellentAttendance(x))))"
    },
    {
        "NL": "A movie is considered a comedy if it is intended to make the audience laugh and has a humorous storyline.",
        "FOL": "∀x (Movie(x) ∧ IntendedToMakeAudienceLaugh(x) ∧ HumorousStoryline(x) → Comedy(x))"
    },
    {
        "NL": "An exercise routine is effective when it combines cardio, strength training, and flexibility exercises.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ Effective(x) ↔ (Cardio(x) ∧ StrengthTraining(x) ∧ FlexibilityExercises(x)))"
    },
    {
        "NL": "If a person is a photographer, they capture images using a camera.",
        "FOL": "∀x (Photographer(x) → CapturesImagesUsingCamera(x))"
    },
    {
        "NL": "A person is considered a vegetarian if they do not consume meat or fish but may consume dairy and eggs.",
        "FOL": "∀x (¬ConsumesMeatOrFish(x) ∧ MayConsumeDairyAndEggs(x) → Vegetarian(x))"
    },
    {
        "NL": "A window is either open or closed, never both.",
        "FOL": "∀x (Window(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "A vehicle is a car or a motorcycle.",
        "FOL": "∀x (Vehicle(x) → (IsCar(x) ∨ IsMotorcycle(x)))"
    },
    {
        "NL": "A building is taller than another if it has more floors.",
        "FOL": "∀x∀y (Building(x) ∧ Building(y) ∧ MoreFloors(x, y) → Taller(x, y))"
    },
    {
        "NL": "A vehicle has an engine.",
        "FOL": "∀x (Vehicle(x) → HasEngine(x))"
    },
    {
        "NL": "A computer network enables communication and data sharing between connected devices, such as computers, printers, and servers.",
        "FOL": "∀x (ComputerNetwork(x) → (EnablesCommunication(x) ∧ EnablesDataSharing(x) ∧ ConnectsDevices(x)))"
    },
    {
        "NL": "A device is suitable for outdoor use if it is water-resistant, durable, and either solar-powered or has a long battery life.",
        "FOL": "∀x (Device(x) ∧ SuitableForOutdoorUse(x) ↔ (WaterResistant(x) ∧ Durable(x) ∧ (SolarPowered(x) ∨ LongBatteryLife(x))))"
    },
    {
        "NL": "Not all architects are either designers or builders.",
        "FOL": "¬∀x (Architect(x) → (Designer(x) ∨ Builder(x)))"
    },
    {
        "NL": "A house has a garden when it is located in a suburban area, but not all suburban houses have gardens.",
        "FOL": "∀x (House(x) ∧ SuburbanArea(x) → (HasGarden(x) ⊕ ¬(∀y (House(y) ∧ SuburbanArea(y) → HasGarden(y)))))"
    },
    {
        "NL": "Outdoor events should be held when there is no rain and the temperature is either mild or warm.",
        "FOL": "∀x (OutdoorEvent(x) → (ShouldHold(x) ↔ (¬Rain(x) ∧ (MildTemperature(x) ⊕ WarmTemperature(x)))))"
    },
    {
        "NL": "A speaker amplifies sound, enabling people to hear music or voice more clearly.",
        "FOL": "∀x∀y (Speaker(x) ∧ Sound(y) → AmplifiesAndEnablesHearing(x, y))"
    },
    {
        "NL": "A dog that barks loudly can alert its owner to possible dangers or intruders.",
        "FOL": "∀x ∀y (Dog(x) ∧ BarksLoudly(x) ∧ Owner(y) → CanAlert(x, y, dangers, intruders))"
    },
    {
        "NL": "When a volcano erupts, it releases lava, ash, and gases.",
        "FOL": "∀x (Volcano(x) ∧ Erupts(x) → (ReleasesLava(x) ∧ ReleasesAsh(x) ∧ ReleasesGases(x)))"
    },
    {
        "NL": "A food is considered spicy if it contains chili peppers or other ingredients that cause a burning sensation.",
        "FOL": "∀x (Food(x) ∧ ∃y (ChiliPepper(y) ∨ BurningSensationIngredient(y) ∧ Contains(x, y)) → Spicy(x))"
    },
    {
        "NL": "Chemical reactions occur when reactants combine and temperature increases or pressure decreases.",
        "FOL": "∀x ∀y ∀z (Reactant(x) ∧ Reactant(y) ∧ Reaction(z) → (Occurs(z) ↔ (Combine(x, y, z) ∧ IncreaseTemperature(z) ∨ DecreasePressure(z))))"
    },
    {
        "NL": "A musical instrument that has strings and is played with a bow is classified as a string instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ PlayedWithBow(x) → StringInstrument(x))"
    },
    {
        "NL": "Fish breathe through gills, while mammals breathe through lungs.",
        "FOL": "∀x ∀y (Fish(x) ∧ Mammal(y) → (BreathesThroughGills(x) ∧ ¬BreathesThroughGills(y) ∧ BreathesThroughLungs(y) ∧ ¬BreathesThroughLungs(x)))"
    },
    {
        "NL": "A film gains critical praise if it has a unique storyline, strong performances, and impressive cinematography.",
        "FOL": "∀x (Film(x) ∧ HasUniqueStoryline(x) ∧ HasStrongPerformances(x) ∧ HasImpressiveCinematography(x) → GainsCriticalPraise(x))"
    },
    {
        "NL": "A region with abundant natural resources and a stable political climate is likely to attract investments and support economic growth.",
        "FOL": "∀x∀y (Region(x) ∧ AbundantNaturalResources(x) ∧ StablePoliticalClimate(x) → AttractsInvestmentsAndSupportsEconomicGrowth(y))"
    },
    {
        "NL": "A waterfall forms where a river or stream flows over a steep drop, causing water to plunge downward.",
        "FOL": "∀x (Waterfall(x) ↔ (FormsWhereRiverOrStreamFlowsOverSteepDrop(x) ∧ CausesWaterToPlungeDownward(x)))"
    },
    {
        "NL": "Some movies are action-packed, have a strong female lead, and are set in the future.",
        "FOL": "∃x (Movie(x) ∧ ActionPacked(x) ∧ (∃y (Character(y) ∧ Female(y) ∧ Strong(y) ∧ Lead(y, x))) ∧ SetInFuture(x))"
    },
    {
        "NL": "There are dogs that are big and scary.",
        "FOL": "∃x (Dog(x) ∧ Big(x) ∧ Scary(x))"
    },
    {
        "NL": "A food item is high in fiber if it contains a substantial amount of dietary fiber relative to its serving size.",
        "FOL": "∀x (FoodItem(x) ∧ SubstantialDietaryFiber(x) → HighInFiber(x))"
    },
    {
        "NL": "Some plants are medicinal.",
        "FOL": "∃x (Plant(x) ∧ Medicinal(x))"
    },
    {
        "NL": "Every cat is a carnivore.",
        "FOL": "∀x (Cat(x) → Carnivore(x))"
    },
    {
        "NL": "A substance that is able to dissolve another substance, forming a homogeneous mixture, is called a solvent.",
        "FOL": "∀x∀y (Substance(x) ∧ AbleToDissolve(x, y) ∧ FormsHomogeneousMixture(x, y) → Solvent(x))"
    },
    {
        "NL": "A cat's meow can communicate hunger, desire for attention, or indicate discomfort.",
        "FOL": "∀x (Cat(x) → (Meows(x) → (CommunicatesHunger(x) ∨ DesiresAttention(x) ∨ IndicatesDiscomfort(x))))"
    },
    {
        "NL": "Cities with effective waste management systems reduce pollution, protect public health, and conserve natural resources by promoting recycling and proper waste disposal practices.",
        "FOL": "∀x∀y (City(x) ∧ EffectiveWasteManagementSystem(x) ∧ ReducesPollution(x, y) ∧ ProtectsPublicHealth(x, y) → ConservesNaturalResources(x, y))"
    },
    {
        "NL": "An escalator is a moving staircase that transports people between floors in a building.",
        "FOL": "∀x (Escalator(x) → (MovingStaircase(x) ∧ TransportsPeople(x) ∧ BetweenFloors(x)))"
    },
    {
        "NL": "There are animals that are either carnivorous or herbivorous, but not both.",
        "FOL": "∃x (Animal(x) ∧ (Carnivorous(x) ⊕ Herbivorous(x)))"
    },
    {
        "NL": "Emma does not trust any British or French.",
        "FOL": "∀x (Person(x) ∧ (From(x, britain) ∨ From(x, france)) → ¬Trust(emma, x))"
    },
    {
        "NL": "An object is a flat square only if it is white.",
        "FOL": "∀z (Flat(z) ∧ Square(z) → White(z))"
    },
    {
        "NL": "A bookworm is reading in the library, and a teacher is teaching in the classroom.",
        "FOL": "∃x ∃y (Bookworm(x) ∧ Library(y) ∧ ReadingIn(x, y)) ∧ ∃z (Teacher(z) ∧ Teaching(z) ∧ InClassroom(z))"
    },
    {
        "NL": "A painter paints a landscape when inspired and has a canvas.",
        "FOL": "∀x (Painter(x) → (PaintsLandscape(x) ↔ (Inspired(x) ∧ HasCanvas(x))))"
    },
    {
        "NL": "A bakery is popular if it sells a large number of pastries daily and has many returning customers.",
        "FOL": "∀x (Bakery(x) → (Popular(x) ↔ (SellsLargeNumberOfPastriesDaily(x) ∧ ManyReturningCustomers(x))))"
    },
    {
        "NL": "A bird is migratory if it travels to different regions depending on the season and climate.",
        "FOL": "∀x (Bird(x) → (Migratory(x) ↔ (TravelsToDifferentRegions(x) ∧ DependsOnSeasonAndClimate(x))))"
    },
    {
        "NL": "A square has four corners.",
        "FOL": "∀x (Square(x) → HasCorners(x, 4))"
    },
    {
        "NL": "A river flows into an ocean or a sea.",
        "FOL": "∀x (River(x) → ∃y (Ocean(y) ∨ Sea(y)) ∧ FlowsInto(x, y))"
    },
    {
        "NL": "The red ball is heavier than the blue ball, but lighter than the green ball.",
        "FOL": "∀x (RedBall(x) ∧ BlueBall(y) ∧ GreenBall(z) → (Heavier(x, y) ∧ Lighter(x, z)))"
    },
    {
        "NL": "A planet is deemed habitable if its atmosphere contains a certain level of oxygen and its temperature range supports liquid water.",
        "FOL": "∀x (Planet(x) ∧ ContainsOxygen(x) ∧ TemperatureRangeSupportsLiquidWater(x) → Habitable(x))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains ethanol and is produced through fermentation or distillation.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) ∧ (ProducedThroughFermentation(x) ∨ ProducedThroughDistillation(x)) → Alcoholic(x))"
    },
    {
        "NL": "A structure is termed a pyramid if it has a square base and triangular faces.",
        "FOL": "∀x (Structure(x) ∧ HasSquareBase(x) ∧ HasTriangularFaces(x) → Pyramid(x))"
    },
    {
        "NL": "A food item that is a rich source of protein and essential nutrients, but also high in saturated fat, is typically derived from animal products.",
        "FOL": "∀x (FoodItem(x) ∧ RichSourceOfProtein(x) ∧ HighInSaturatedFat(x) ∧ EssentialNutrients(x) → DerivedFromAnimalProducts(x))"
    },
    {
        "NL": "An organism that is multicellular, heterotrophic, and reproduces sexually is an animal.",
        "FOL": "∀x (Organism(x) ∧ Multicellular(x) ∧ Heterotrophic(x) ∧ ReproducesSexually(x) → Animal(x))"
    },
    {
        "NL": "Some objects are large and some objects are small, but there are no large and small objects.",
        "FOL": "∃x (Large(x)) ∧ ∃x (Small(x)) ∧ ¬∃x (Large(x) ∧ Small(x))"
    },
    {
        "NL": "A place is a swamp if it is a wetland with predominantly woody vegetation.",
        "FOL": "∀x (Swamp(x) ↔ (Place(x) ∧ Wetland(x) ∧ PredominantlyWoodyVegetation(x)))"
    },
    {
        "NL": "A building where works of art are displayed for public viewing is an art gallery.",
        "FOL": "∀x (Building(x) ∧ DisplaysWorksOfArt(x) ∧ PublicViewing(x) → ArtGallery(x))"
    },
    {
        "NL": "A toy is educational if it promotes cognitive development and encourages creativity.",
        "FOL": "∀x (Toy(x) → (PromotesCognitiveDevelopment(x) ∧ EncouragesCreativity(x) ↔ Educational(x)))"
    },
    {
        "NL": "A window can be made of glass or plastic, and if it's broken, it needs to be repaired.",
        "FOL": "∀x (Window(x) → ((MadeOfGlass(x) ∨ MadeOfPlastic(x)) ∧ (Broken(x) → NeedsRepair(x))))"
    },
    {
        "NL": "Some engineers are also painters.",
        "FOL": "∃x (Engineer(x) ∧ Painter(x))"
    },
    {
        "NL": "A company that is owned by the employees and shares profits among them is a cooperative.",
        "FOL": "∀x (Company(x) ∧ OwnedByEmployees(x) ∧ ShareProfits(x) → Cooperative(x))"
    },
    {
        "NL": "An athlete can win if and only if they are either fast or have high stamina, but not both.",
        "FOL": "∀x (Athlete(x) → (CanWin(x) ↔ (IsFast(x) ⊕ HasHighStamina(x))))"
    },
    {
        "NL": "A child is playing in the park.",
        "FOL": "∃x ∃y (Child(x) ∧ Park(y) ∧ PlayingIn(x, y))"
    },
    {
        "NL": "A painter is brushing a canvas, while a musician is playing in the room.",
        "FOL": "∃x ∃y (Painter(x) ∧ Canvas(y) ∧ Brushing(x, y)) ∧ ∃z (Musician(z) ∧ Playing(z) ∧ InRoom(z))"
    },
    {
        "NL": "A mountain forms due to tectonic forces, volcanic activity, or erosion and is characterized by its elevation, slope, and local relief.",
        "FOL": "∀x (Mountain(x) → (FormsDueToTectonicForces(x) ∨ FormsDueToVolcanicActivity(x) ∨ FormsDueToErosion(x) ∧ CharacterizedByElevation(x) ∧ CharacterizedBySlope(x) ∧ CharacterizedByLocalRelief(x)))"
    },
    {
        "NL": "An animal that is cold-blooded, has a backbone, lays eggs, and lives part of its life in water and part of its life on land is an amphibian.",
        "FOL": "∀x (Animal(x) ∧ ColdBlooded(x) ∧ HasBackbone(x) ∧ LaysEggs(x) ∧ (LivesInWater(x) ∧ LivesOnLand(x)) → Amphibian(x))"
    },
    {
        "NL": "A person is considered a nurse if they provide care and support for patients in a healthcare setting, often working under the supervision of a doctor.",
        "FOL": "∀x (Person(x) ∧ ProvidesCareForPatients(x) ∧ ProvidesSupportForPatients(x) ∧ InHealthcareSetting(x) ∧ WorksUnderDoctorSupervision(x) → Nurse(x))"
    },
    {
        "NL": "No programming language is both complicated and outdated.",
        "FOL": "¬∃x (ProgrammingLanguage(x) ∧ Complicated(x) ∧ Outdated(x))"
    },
    {
        "NL": "A student who studies regularly, participates in class, and completes assignments on time performs well academically.",
        "FOL": "∀x (Student(x) ∧ StudiesRegularly(x) ∧ ParticipatesInClass(x) ∧ CompletesAssignmentsOnTime(x) → PerformsWellAcademically(x))"
    },
    {
        "NL": "If a person maintains a clean and clutter-free living environment, they are more likely to experience reduced stress levels.",
        "FOL": "∀x (CleanAndClutterFreeEnvironment(x) → ReducedStressLevels(x))"
    },
    {
        "NL": "A tool that uses air pressure to drive nails into various materials is a pneumatic nail gun.",
        "FOL": "∀x ∀y ∀z (Tool(x) ∧ UsesAirPressure(x) ∧ DrivesNails(x, y) ∧ VariousMaterials(y, z) → PneumaticNailGun(x))"
    },
    {
        "NL": "In a healthy ecosystem, the predator-prey relationship maintains the balance of populations among different species.",
        "FOL": "∀x∀y∀z (HealthyEcosystem(x) ∧ Predator(y) ∧ Prey(z) → MaintainsPopulationBalance(x, y, z))"
    },
    {
        "NL": "A planet is habitable if it has liquid water, a stable climate, and conditions suitable for the existence of life.",
        "FOL": "∀x (Planet(x) ∧ LiquidWater(x) ∧ StableClimate(x) ∧ ConditionsSuitableForLife(x) → Habitable(x))"
    },
    {
        "NL": "A substance is recognized as a mineral if it is a naturally occurring, inorganic solid, has a crystalline structure, and a defined chemical composition.",
        "FOL": "∀x (Substance(x) ∧ NaturallyOccurring(x) ∧ InorganicSolid(x) ∧ CrystallineStructure(x) ∧ DefinedChemicalComposition(x) → Mineral(x))"
    },
    {
        "NL": "Mars is colder than Earth, while Venus is hotter than Earth.",
        "FOL": "∀x∀y∀z (Mars(x) ∧ Earth(y) ∧ Venus(z) → (Colder(x, y) ∧ Hotter(z, y)))"
    },
    {
        "NL": "A country has a coastline if it is bordered by an ocean or a sea.",
        "FOL": "∀x (Country(x) ∧ (BorderedByOcean(x) ∨ BorderedBySea(x)) → HasCoastline(x))"
    },
    {
        "NL": "A librarian is cataloging books in the library, or a director is planning a presentation in the auditorium.",
        "FOL": "∃x ∃y (Librarian(x) ∧ Books(y) ∧ Cataloging(x, y) ∧ InTheLibrary(x)) ∨ ∃z ∃w (Director(z) ∧ Presentation(w) ∧ Planning(z, w) ∧ InTheAuditorium(z))"
    },
    {
        "NL": "If a device is a camera, it captures images or videos.",
        "FOL": "∀x (Device(x) ∧ Camera(x) → CapturesImagesOrVideos(x))"
    },
    {
        "NL": "A building is a library if and only if it does not serve food or is very quiet.",
        "FOL": "∀x (Building(x) → (Library(x) ↔ (¬ServeFood(x) ∨ VeryQuiet(x))))"
    },
    {
        "NL": "An architect designs buildings and structures, while a civil engineer ensures their structural integrity and safety.",
        "FOL": "∀x∀y (Architect(x) ∧ CivilEngineer(y) → (DesignsBuildings(x) ∧ EnsuresStructuralIntegrityAndSafety(y)))"
    },
    {
        "NL": "A chair supports sitting.",
        "FOL": "∀x (Chair(x) → SupportsSitting(x))"
    },
    {
        "NL": "Cats are known for their grooming habits, while dogs are known for their loyalty.",
        "FOL": "∀x ∀y (Cat(x) ∧ Dog(y) → (KnownForGrooming(x) ∧ KnownForLoyalty(y)))"
    },
    {
        "NL": "A flourishing garden requires proper sunlight, nutrient-rich soil, and consistent watering.",
        "FOL": "∀x (Garden(x) → (Flourishing(x) ↔ (ProperSunlight(x) ∧ NutrientRichSoil(x) ∧ ConsistentWatering(x))))"
    },
    {
        "NL": "Every artist painted at least one canvas.",
        "FOL": "∀x (Artist(x) → ∃y (Canvas(y) ∧ Painted(x, y)))"
    },
    {
        "NL": "Some parks allow dogs but not cats or have a playground for children.",
        "FOL": "∃x (Park(x) ∧ ((AllowDogs(x) ∧ ¬AllowCats(x)) ∨ HasPlayground(x)))"
    },
    {
        "NL": "An electronic gadget is either a phone or a tablet, but not both.",
        "FOL": "∀x (ElectronicGadget(x) → (Phone(x) ⊕ Tablet(x)))"
    },
    {
        "NL": "A successful software project requires clear requirements, good communication, and efficient teamwork.",
        "FOL": "∀x (SuccessfulSoftwareProject(x) → (ClearRequirements(x) ∧ GoodCommunication(x) ∧ EfficientTeamwork(x)))"
    },
    {
        "NL": "No one at the conference interacts with either Martin or Isaac.",
        "FOL": "∀x (Person(x) ∧ AtConference(x) → ¬Interact(x, martin) ∧ ¬Interact(x, isaac))"
    },
    {
        "NL": "Wind turbines generate electricity by harnessing the kinetic energy of the wind.",
        "FOL": "∀x (WindTurbine(x) ∧ HarnessesKineticEnergy(x, y) ∧ Wind(y) → GeneratesElectricity(x))"
    },
    {
        "NL": "Each strawberry that is ripe and freshly plucked always tastes heavenly when eaten at once.",
        "FOL": "∀x (Strawberry(x) ∧ Ripe(x) ∧ FreshlyPlucked(x) ∧ EatenAtOnce(x) → TastesHeavenly(x))"
    },
    {
        "NL": "If a celestial body is a star, it emits light.",
        "FOL": "∀x (CelestialBody(x) ∧ Star(x) → EmitsLight(x))"
    },
    {
        "NL": "A film becomes a box office hit if it receives positive reviews, features a strong cast and engaging storyline, and generates substantial revenue during its theatrical run.",
        "FOL": "∀x∀y∀z (Film(x) ∧ PositiveReviews(x, y) ∧ StrongCast(x) ∧ EngagingStoryline(x) ∧ GeneratesSubstantialRevenue(x, z) → BoxOfficeHit(x))"
    },
    {
        "NL": "People who live in urban areas and use public transportation frequently are more likely to own a monthly pass.",
        "FOL": "∀x (Person(x) ∧ LivesInUrbanArea(x) ∧ UsesPublicTransportationFrequently(x) → LikelyOwnsMonthlyPass(x))"
    },
    {
        "NL": "Bridges are built over rivers or roads to connect areas.",
        "FOL": "∀x (Bridge(x) → (BuiltOverRiver(x) ∨ BuiltOverRoad(x)) ∧ ConnectsAreas(x))"
    },
    {
        "NL": "All rectangles have four sides.",
        "FOL": "∀x (Rectangle(x) → HasFourSides(x))"
    },
    {
        "NL": "Fish live in water and breathe through gills, while birds fly in the air and breathe through lungs.",
        "FOL": "∀x (Fish(x) → (LivesInWater(x) ∧ BreathesThroughGills(x))) ∧ ∀y (Bird(y) → (FliesInAir(y) ∧ BreathesThroughLungs(y)))"
    },
    {
        "NL": "A person is a coder if they write efficient codes and work in a tech company.",
        "FOL": "∀x (Person(x) ∧ WritesEfficientCodes(x) ∧ WorksInTechCompany(x) → Coder(x))"
    },
    {
        "NL": "A weather condition can include rain, snow, or sunshine, but not all simultaneously.",
        "FOL": "∀x (WeatherCondition(x) → ¬(Rain(x) ∧ Snow(x) ∧ Sunshine(x)))"
    },
    {
        "NL": "A solar eclipse occurs when the Moon passes between the Earth and the Sun, casting a shadow on the Earth's surface.",
        "FOL": "∀x∀y∀z (SolarEclipse(x) ∧ Moon(y) ∧ Earth(z) → (MoonPassesBetween(y, z) ∧ Sun(y) ∧ CastsShadowOnSurface(x, z)))"
    },
    {
        "NL": "A dessert can be a cake, a pie, or ice cream.",
        "FOL": "∀x (Dessert(x) → (Cake(x) ∨ Pie(x) ∨ IceCream(x)))"
    },
    {
        "NL": "An artwork that uses a digital medium for creation and display is called a digital art piece.",
        "FOL": "∀x (Artwork(x) ∧ UsesDigitalMediumForCreation(x) ∧ UsesDigitalMediumForDisplay(x) → DigitalArtPiece(x))"
    },
    {
        "NL": "A location can be a city, a rural area, or a seaside.",
        "FOL": "∀x (Location(x) → (City(x) ∨ RuralArea(x) ∨ Seaside(x)))"
    },
    {
        "NL": "A bird is singing in the morning.",
        "FOL": "∃x (Bird(x) ∧ Singing(x) ∧ InTheMorning(x))"
    },
    {
        "NL": "An athlete qualifies for a competition if they meet the age requirement, have a minimum skill level, and pass a drug test.",
        "FOL": "∀x (Athlete(x) ∧ Qualifies(x) → (MeetsAgeRequirement(x) ∧ MinimumSkillLevel(x) ∧ PassDrugTest(x)))"
    },
    {
        "NL": "A book is considered a bestseller if it has sold a high number of copies and received positive reviews.",
        "FOL": "∀x (Bestseller(x) ↔ (Book(x) ∧ HighNumberOfCopiesSold(x) ∧ ReceivedPositiveReviews(x)))"
    },
    {
        "NL": "Every student is not intelligent.",
        "FOL": "¬∀x (Student(x) → Intelligent(x))"
    },
    {
        "NL": "A city is deemed secure if it possesses a minimal pollution level and an efficient waste management system.",
        "FOL": "∀x (City(x) ∧ HasMinimalPollution(x) ∧ HasEfficientWasteManagement(x) → Secure(x))"
    },
    {
        "NL": "A refrigerator preserves food when it maintains a consistent temperature, has a functional cooling system, and the door seals properly.",
        "FOL": "∀x (Refrigerator(x) ∧ ConsistentTemperature(x) ∧ FunctionalCoolingSystem(x) ∧ ProperDoorSeal(x) → PreservesFood(x))"
    },
    {
        "NL": "A book is considered a bestseller if it is popular among readers and has sold a large number of copies.",
        "FOL": "∀x (Book(x) ∧ PopularAmongReaders(x) ∧ SellsLargeNumberOfCopies(x) → Bestseller(x))"
    },
    {
        "NL": "A person is a cousin if they are the child of the sibling of another’s parent.",
        "FOL": "∀x ∃y ∃z (Person(x) ∧ Parent(y) ∧ Person(z) ∧ ChildOf(x, y) ∧ SiblingOf(z, y) → Cousin(x))"
    },
    {
        "NL": "A movie that is a comedy can make audiences laugh.",
        "FOL": "∀x ∀y (Movie(x) ∧ Comedy(x) ∧ Audience(y) → CanMakeLaugh(x, y))"
    },
    {
        "NL": "Not all birds are colorful or nocturnal.",
        "FOL": "¬∀x (Bird(x) → (Colorful(x) ∨ Nocturnal(x)))"
    },
    {
        "NL": "A conference is informative if it presents valuable insights.",
        "FOL": "∀x (Conference(x) ∧ PresentsValuableInsights(x) → Informative(x))"
    },
    {
        "NL": "A watch measures time.",
        "FOL": "∀x (Watch(x) → MeasuresTime(x))"
    },
    {
        "NL": "A diet that excludes meat and dairy is a vegan diet.",
        "FOL": "∀x (Diet(x) ∧ ExcludesMeat(x) ∧ ExcludesDairy(x) → Vegan(x))"
    },
    {
        "NL": "The smartphone has a camera and a GPS.",
        "FOL": "HasCamera(Smartphone) ∧ HasGPS(Smartphone)"
    },
    {
        "NL": "An ellipse has a continuous curved line as its boundary with two fixed points, called foci, inside.",
        "FOL": "∀x (Ellipse(x) → (ContinuousCurvedLineBoundary(x) ∧ HasTwoFociInside(x)))"
    },
    {
        "NL": "A fish's swimming speed is affected by its body shape, while its scales and coloration impact its ability to blend into its environment.",
        "FOL": "∃x ∃y ∃z (Fish(x) ∧ BodyShape(x, y) ∧ ScalesAndColoration(x, z) ∧ (SwimmingSpeed(x) ↔ Shape(y)) ∧ (BlendEnvironment(x) ↔ Color(z)))"
    },
    {
        "NL": "Factories produce goods using raw materials and machines.",
        "FOL": "∀x ∀y ∀z (Factory(x) ∧ RawMaterial(y) ∧ Machine(z) → Produces(x, Goods, y, z))"
    },
    {
        "NL": "A microwave oven heats food by generating microwaves that cause water molecules to vibrate and produce heat.",
        "FOL": "∀x ∀y ∀z (MicrowaveOven(x) ∧ Food(y) ∧ Microwaves(z) → (Generates(x, z) ∧ CausesVibration(z, y) ∧ ProducesHeat(y)))"
    },
    {
        "NL": "Chemists analyze chemical compounds, synthesize new materials, and sometimes teach in universities.",
        "FOL": "∀x∀y∀z (Chemist(x) ∧ ChemicalCompound(y) ∧ Material(z) → (Analyzes(x, y) ∧ Synthesizes(x, z) ∧ (TeachesInUniversity(x) ∨ ¬TeachesInUniversity(x))))"
    },
    {
        "NL": "Not every dessert is sweet, and some desserts are cold or served with fruit.",
        "FOL": "¬∀x (Dessert(x) → Sweet(x)) ∧ ∃y (Dessert(y) ∧ (Cold(y) ∨ ServedWithFruit(y)))"
    },
    {
        "NL": "Diamonds are formed under extreme pressure.",
        "FOL": "∀x (Diamond(x) → FormedUnderExtremePressure(x))"
    },
    {
        "NL": "A hammer is used for pounding, a screwdriver is used for turning screws, and a wrench is used for tightening nuts and bolts.",
        "FOL": "∀x ∀y ∀z (Hammer(x) ∧ Screwdriver(y) ∧ Wrench(z) → (UsedForPounding(x) ∧ UsedForTurningScrews(y) ∧ UsedForTighteningNutsAndBolts(z)))"
    },
    {
        "NL": "A novel is a mystery if it contains suspenseful plot, written by its creator.",
        "FOL": "∀x ∃y (Novel(x) ∧ Person(y) ∧ ContainsSuspensefulPlot(x, y) ∧ WrittenBy(x, y) → Mystery(x))"
    },
    {
        "NL": "Not all parks have playgrounds and picnic areas.",
        "FOL": "¬∀x (Park(x) → (HasPlayground(x) ∧ HasPicnicArea(x)))"
    },
    {
        "NL": "An island is formed from volcanic activity when lava solidifies and accumulates above the ocean surface.",
        "FOL": "∀x∀y (Island(x) ∧ VolcanicActivity(y) → (FormedByLavaSolidifyingAndAccumulating(x, y)))"
    },
    {
        "NL": "In an orchestra, musicians playing string instruments sit separately from those playing wind instruments.",
        "FOL": "∀x∀y (Musician(x) ∧ Musician(y) ∧ StringInstrument(x) ∧ WindInstrument(y) → ¬SitTogether(x, y))"
    },
    {
        "NL": "An appliance is either on or off.",
        "FOL": "∀x (Appliance(x) → (On(x) ∨ Off(x)))"
    },
    {
        "NL": "A shoe can be designed for running, walking, or formal occasions, have a flat or heeled sole, and be available in various sizes and colors.",
        "FOL": "∀x (Shoe(x) → ((RunningDesign(x) ∨ WalkingDesign(x) ∨ FormalDesign(x)) ∧ (FlatSole(x) ∨ HeeledSole(x)) ∧ (VariousSizes(x) ∧ VariousColors(x))))"
    },
    {
        "NL": "A restaurant is a good choice for a date if it has a romantic ambiance, offers a variety of dishes, and has a quiet atmosphere.",
        "FOL": "∀x (Restaurant(x) ∧ RomanticAmbiance(x) ∧ VarietyOfDishes(x) ∧ QuietAtmosphere(x) → GoodForDate(x))"
    },
    {
        "NL": "There is not an artist who creates both sculptures and paintings but never had an exhibition.",
        "FOL": "¬∃x (Artist(x) ∧ CreatesSculptures(x) ∧ CreatesPaintings(x) ∧ ¬HadExhibition(x))"
    },
    {
        "NL": "A computer program solves a problem if it receives valid input, follows a correct algorithm, and produces the desired output.",
        "FOL": "∀x ∀y ∀z (ComputerProgram(x) ∧ Problem(y) ∧ Input(z) ∧ ValidInput(z) ∧ CorrectAlgorithm(x, y) ∧ DesiredOutput(x, y) → Solves(x, y))"
    },
    {
        "NL": "A software x is compatible with operating system y when it meets the system requirements and functions without errors or crashes.",
        "FOL": "∀x ∀y (Software(x) ∧ OperatingSystem(y) ∧ MeetsSystemRequirements(x, y) ∧ FunctionsWithoutErrors(x, y) → IsCompatible(x, y))"
    },
    {
        "NL": "A person can enter a building if they have a key or the door is unlocked.",
        "FOL": "∀x∀y (Person(x) ∧ Building(y) ∧ (HasKey(x, y) ∨ DoorUnlocked(y)) → CanEnter(x, y))"
    },
    {
        "NL": "A nation with a high literacy rate, equal access to education for all citizens, and a well-developed infrastructure for learning is considered to have a strong education system.",
        "FOL": "∀x (Nation(x) ∧ HighLiteracyRate(x) ∧ EqualAccessToEducation(x) ∧ WellDevelopedInfrastructureForLearning(x) → StrongEducationSystem(x))"
    },
    {
        "NL": "A bird can fly if it has wings and is not an ostrich.",
        "FOL": "∀x (Bird(x) ∧ HasWings(x) ∧ ¬Ostrich(x) → CanFly(x))"
    },
    {
        "NL": "No actor has played in every movie in the festival.",
        "FOL": "¬∃x (Actor(x) ∧ ∀y (Movie(y) ∧ InFestival(y) → PlayedIn(x, y)))"
    },
    {
        "NL": "A bus transports passengers.",
        "FOL": "∀x (Bus(x) → TransportsPassengers(x))"
    },
    {
        "NL": "A movie is either a thriller or not a thriller.",
        "FOL": "∀x (Movie(x) → (Thriller(x) ⊕ ¬Thriller(x)))"
    },
    {
        "NL": "There are shows that are both humorous and have a mysterious theme, and all the others are thrilling with a detective theme.",
        "FOL": "∀x (Show(x) → (Humorous(x) ∧ MysteriousTheme(x)) ⊕ (Thrilling(x) ∧ DetectiveTheme(x)))"
    },
    {
        "NL": "A structure is a bridge if it spans a gap and supports the passage of people or vehicles.",
        "FOL": "∀x (Structure(x) ∧ SpansGap(x) ∧ SupportsPassage(x) → Bridge(x))"
    },
    {
        "NL": "A musician can play multiple instruments if they have practiced and mastered each one.",
        "FOL": "∀x ∀y ∀z (Musician(x) ∧ Practices(x, y) ∧ Mastered(x, z) → CanPlayMultipleInstruments(x))"
    },
    {
        "NL": "It's untrue that a network can connect all small computers.",
        "FOL": "¬∃x (Network(x) ∧ ∀y (Small(y) ∧ Computer(y) → Connects(x, y)))"
    },
    {
        "NL": "If something is a big hexagon or a small square, then it is either orange or green, but not both.",
        "FOL": "∀x ((Big(x) ∧ Hexagon(x)) ∨ (Small(x) ∧ Square(x)) → (Orange(x) ⊕ Green(x)))"
    },
    {
        "NL": "If a person is a chef, they plan and prepare meals in a professional kitchen.",
        "FOL": "∀x (Chef(x) → (PlansMealsInProfessionalKitchen(x) ∧ PreparesMealsInProfessionalKitchen(x)))"
    },
    {
        "NL": "A pet is well-behaved when it follows basic commands and exhibits a friendly demeanor towards others.",
        "FOL": "∀x (Pet(x) → (WellBehaved(x) ↔ (FollowsBasicCommands(x) ∧ FriendlyDemeanor(x))))"
    },
    {
        "NL": "A rabbit is safe for kids if and only if it is not ferocious and very active.",
        "FOL": "∀z (Rabbit(z) → (SafeForKids(z) ↔ ¬Ferocious(z) ∧ ¬VeryActive(z)))"
    },
    {
        "NL": "A document can be printed if it is in a format supported by the printer and if there is enough ink or toner available.",
        "FOL": "∀x (Document(x) ∧ SupportedFormat(x) ∧ (EnoughInk(x) ∨ EnoughToner(x)) → CanBePrinted(x))"
    },
    {
        "NL": "Every square is a rectangle.",
        "FOL": "∀x (Square(x) → Rectangle(x))"
    },
    {
        "NL": "Telescopes on Earth are affected by atmospheric distortion, whereas space telescopes provide clearer images.",
        "FOL": "∀x∀y (TelescopeOnEarth(x) ∧ SpaceTelescope(y) → (AtmosphericDistortion(x) ∧ ¬AtmosphericDistortion(y)))"
    },
    {
        "NL": "A computer is operational if and only if it has power and it's hardware is intact.",
        "FOL": "∀x (Computer(x) → (Operational(x) ↔ HasPower(x) ∧ HardwareIntact(x)))"
    },
    {
        "NL": "A city with a high crime rate and a polluted environment is not suitable for living.",
        "FOL": "∀x (City(x) ∧ HighCrimeRate(x) ∧ PollutedEnvironment(x) → ¬SuitableForLiving(x))"
    },
    {
        "NL": "If a person plays a musical instrument, they are considered a musician.",
        "FOL": "∀x (PlaysMusicalInstrument(x) → Musician(x))"
    },
    {
        "NL": "A location with a temperature below 0 degrees Celsius and precipitation is a snowy area.",
        "FOL": "∀x (Location(x) ∧ TemperatureBelowZeroCelsius(x) ∧ HasPrecipitation(x) → SnowyArea(x))"
    },
    {
        "NL": "A library offers access to books and online resources, and sometimes provides study areas.",
        "FOL": "∀x (Library(x) → (OffersAccessToBooks(x) ∧ OffersAccessToOnlineResources(x) ∧ (ProvidesStudyAreas(x) ⊕ ¬ProvidesStudyAreas(x))))"
    },
    {
        "NL": "All birds are blue if and only if they are sparrows.",
        "FOL": "∀x (Bird(x) → (Blue(x) ↔ Sparrow(x)))"
    },
    {
        "NL": "A machine that is powered by electricity and flies in the air is a drone.",
        "FOL": "∀x (Machine(x) ∧ PoweredByElectricity(x) ∧ FliesInAir(x) → Drone(x))"
    },
    {
        "NL": "There isn't an artist who has used all colors.",
        "FOL": "¬∃x (Artist(x) ∧ ∀y (Color(y) → Used(x, y)))"
    },
    {
        "NL": "A book is a bestseller if it has a high number of sales and receives positive reviews.",
        "FOL": "∀x (Book(x) ∧ HighNumberOfSales(x) ∧ PositiveReviews(x) → Bestseller(x))"
    },
    {
        "NL": "All paintings that are fascinating and well-made become expensive.",
        "FOL": "∀x (Painting(x) ∧ Fascinating(x) ∧ WellMade(x) → Expensive(x))"
    },
    {
        "NL": "Something is a machine if and only if it computes or processes data.",
        "FOL": "∀x (Machine(x) ↔ (Computes(x) ∨ Processes(x)))"
    },
    {
        "NL": "Painters create artworks using brushes and paints.",
        "FOL": "∀x ∀y ∀z (Painter(x) ∧ Brush(y) ∧ Paint(z) → CreatesArtworkUsing(x, y, z))"
    },
    {
        "NL": "A river that flows through a city provides a source of water for its residents and contributes to the city's economic activities.",
        "FOL": "∀x∀y (River(x) ∧ City(y) ∧ FlowsThrough(x, y) → (ProvidesWaterSource(y, x) ∧ ContributesToEconomicActivities(y, x)))"
    },
    {
        "NL": "All authors who write fiction and non-fiction, unless they are journalists, either have won a literature prize or haven't conducted a public reading.",
        "FOL": "∀x (Author(x) ∧ WritesFiction(x) ∧ WritesNonFiction(x) ∨ Journalist(x) → (WonLiteraturePrize(x) ∨ ¬ConductedPublicReading(x)))"
    },
    {
        "NL": "A cake is delectable or not delectable.",
        "FOL": "∀x (Cake(x) → (Delectable(x) ⊕ ¬Delectable(x)))"
    },
    {
        "NL": "A person who is a programmer can write code.",
        "FOL": "∀x (Programmer(x) → CanWriteCode(x))"
    },
    {
        "NL": "A building is safe during an earthquake if it is built with strong materials and has a flexible structure.",
        "FOL": "∀x∀y (Building(x) ∧ Earthquake(y) ∧ SafeDuring(x, y) ↔ (StrongMaterials(x) ∧ FlexibleStructure(x)))"
    },
    {
        "NL": "A bird can fly if it has feathers and wings, but not if it has broken wings.",
        "FOL": "∀x (Bird(x) → ((HasFeathers(x) ∧ HasWings(x) ∧ ¬BrokenWings(x)) → CanFly(x)))"
    },
    {
        "NL": "A plant is alive if and only if it is watered and has sunlight.",
        "FOL": "∀x (Plant(x) → (Alive(x) ↔ (Watered(x) ∧ HasSunlight(x))))"
    },
    {
        "NL": "A chef prepares meals while a waiter serves them.",
        "FOL": "∀x ∀y (Chef(x) ∧ Waiter(y) → (PreparesMeals(x) ∧ ServesMeals(y)))"
    },
    {
        "NL": "A movie is captivating when it has an intriguing plot and skilled actors.",
        "FOL": "∀x (Movie(x) ∧ IntriguingPlot(x) ∧ SkilledActors(x) → Captivating(x))"
    },
    {
        "NL": "A refrigerator preserves food and releases it for consumption when needed.",
        "FOL": "∀x (Refrigerator(x) → (PreservesFood(x) ∧ (IsNeededForConsumption(x) → ReleasesFood(x))))"
    },
    {
        "NL": "Chefs prepare meals, and waiters serve the prepared meals to customers.",
        "FOL": "∀x∀y (Chef(x) ∧ Meal(y) ∧ Prepares(x, y)) ∧ ∀z∀w (Waiter(z) ∧ Serves(z, w, y) → Customer(w))"
    },
    {
        "NL": "A substance x will dissolve in a liquid y if x is soluble and y is a solvent.",
        "FOL": "∀x ∀y (Substance(x) ∧ Soluble(x) ∧ Liquid(y) ∧ Solvent(y) → DissolvesIn(x, y))"
    },
    {
        "NL": "A television displays visual content, including movies, shows, and news broadcasts, by receiving signals from various sources.",
        "FOL": "∀x (Television(x) → (DisplaysVisualContent(x) ∧ ReceivesSignalsFromVariousSources(x)))"
    },
    {
        "NL": "Every student is knowledgeable or some buildings are high provided there is a song which is melodious unless all are friendly.",
        "FOL": "(∀x (Student(x) → Knowledgeable(x)) ∨ ∃y (Building(y) ∧ High(y))) ↔ (∃z (Song(z) ∧ (Melodious(z) ∨ ∀w (¬Unfriendly(w)))))"
    },
    {
        "NL": "Each fruit is either sweet or sour, but not both.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "Bakers bake bread, while chefs prepare and cook various dishes.",
        "FOL": "∀x ∀y (Baker(x) ∧ Bread(y) → Bake(x, y)) ∧ ∀z ∀w (Chef(z) ∧ Dish(w) → PrepareAndCook(z, w))"
    },
    {
        "NL": "A bakery sells either bread or pastries, but not cakes.",
        "FOL": "∀x (Bakery(x) → ((SellsBread(x) ∨ SellsPastries(x)) ∧ ¬SellsCakes(x)))"
    },
    {
        "NL": "A sculpture is classified as metalwork if it is three-dimensional and formed by manipulating metals.",
        "FOL": "∀x (Sculpture(x) ∧ ThreeDimensional(x) ∧ FormedByManipulatingMetals(x) → Metalwork(x))"
    },
    {
        "NL": "Every footballer who has scored a goal that is disputed, either organizes a tutorial or is sidelined by all clubs.",
        "FOL": "∀x (Footballer(x) ∧ ∀y (Goal(y) ∧ Scored(x, y) ∧ Disputed(y)) → (OrganizesTutorial(x) ∨ ∀z (Club(z) → SidelinedBy(x, z))))"
    },
    {
        "NL": "A planet is labeled as habitable if it has an atmosphere.",
        "FOL": "∀x (Planet(x) ∧ HasAtmosphere(x) → Habitable(x))"
    },
    {
        "NL": "A pet is suitable for apartment living if it is small and does not require extensive outdoor activity.",
        "FOL": "∀x (Pet(x) ∧ Small(x) ∧ ¬ExtensiveOutdoorActivity(x) → SuitableForApartment(x))"
    },
    {
        "NL": "A gym provides exercise equipment, fitness classes, and personal training for members to improve their health and well-being.",
        "FOL": "∀x (Gym(x) ∧ ProvidesExerciseEquipment(x) ∧ ProvidesFitnessClasses(x) ∧ ProvidesPersonalTraining(x) → ImprovesHealthAndWellBeing(x))"
    },
    {
        "NL": "An art gallery displays paintings, sculptures, and photographs created by various artists.",
        "FOL": "∀x ∀y (ArtGallery(x) ∧ (Painting(y) ∨ Sculpture(y) ∨ Photograph(y)) ∧ CreatedByArtist(y) → Displays(x, y))"
    },
    {
        "NL": "A medical condition can be diagnosed based on a combination of symptoms, tests, and patient history, and the recommended treatment depends on the severity and underlying causes.",
        "FOL": "∀x ∀y ∀z ∀w (MedicalCondition(x) ∧ Symptoms(y) ∧ Tests(z) ∧ PatientHistory(w) ∧ DiagnosedBasedOn(x, y, z, w) → (RecommendedTreatment(x) ↔ (Severity(x) ∧ UnderlyingCauses(x))))"
    },
    {
        "NL": "Plants that receive an adequate amount of sunlight, water, and nutrients can thrive and grow.",
        "FOL": "∀x (Plant(x) ∧ AdequateSunlight(x) ∧ AdequateWater(x) ∧ AdequateNutrients(x) → ThrivesAndGrows(x))"
    },
    {
        "NL": "A building is a tourist attraction if it is an ancient temple or a modern skyscraper, while it has either stunning architecture or a panoramic view, but not both.",
        "FOL": "∀x (Building(x) ∧ (AncientTemple(x) ∨ ModernSkyscraper(x)) ∧ ((StunningArchitecture(x) ∧ ¬PanoramicView(x)) ∨ (¬StunningArchitecture(x) ∧ PanoramicView(x))) → TouristAttraction(x))"
    },
    {
        "NL": "Smart students don't cheat.",
        "FOL": "∀x (Student(x) ∧ Smart(x) → ¬Cheat(x))"
    },
    {
        "NL": "An animal is considered a mammal if it possesses hair, has mammary glands, and has a backbone.",
        "FOL": "∀x (Mammal(x) ↔ (PossessesHair(x) ∧ HasMammaryGlands(x) ∧ HasBackbone(x)))"
    },
    {
        "NL": "A smartphone offers superior battery life when it utilizes energy-efficient components, features advanced power management settings, and has a high-capacity battery.",
        "FOL": "∀x (Smartphone(x) ∧ EnergyEfficientComponents(x) ∧ AdvancedPowerManagementSettings(x) ∧ HighCapacityBattery(x) → SuperiorBatteryLife(x))"
    },
    {
        "NL": "A flower blooms when it opens its petals and becomes fully developed.",
        "FOL": "∀x (Flower(x) ∧ OpensPetals(x) ∧ FullyDeveloped(x) → Blooms(x))"
    },
    {
        "NL": "A vehicle is considered eco-friendly if it has low emissions, uses renewable energy sources, and has a minimal environmental impact during its life cycle.",
        "FOL": "∀x ∀y ∀z (EcoFriendly(x) → (Vehicle(x) ∧ LowEmissions(x, y) ∧ UsesRenewableEnergySources(x, y) ∧ MinimalEnvironmentalImpact(x, z)))"
    },
    {
        "NL": "No computer can perfectly simulate human emotions.",
        "FOL": "¬∃x (Computer(x) ∧ PerfectlySimulatesHumanEmotions(x))"
    },
    {
        "NL": "A healthy diet includes fruits, vegetables, and whole grains, while limiting processed foods, added sugars, and unhealthy fats.",
        "FOL": "∀x (Diet(x) → (Healthy(x) ↔ (IncludesFruits(x) ∧ IncludesVegetables(x) ∧ IncludesWholeGrains(x) ∧ ¬IncludesProcessedFoods(x) ∧ ¬IncludesAddedSugars(x) ∧ ¬IncludesUnhealthyFats(x))))"
    },
    {
        "NL": "A reptile that can endure temperature below 15 degrees and has two or four legs is categorized as a turtle.",
        "FOL": "∀x (Reptile(x) ∧ CanEndureBelowFifteenDegrees(x) ∧ (HasTwoLegs(x) ∨ HasFourLegs(x)) → Turtle(x))"
    },
    {
        "NL": "All birds are colorful and small and can fly.",
        "FOL": "∀x (Bird(x) → (Colorful(x) ∧ Small(x) ∧ CanFly(x)))"
    },
    {
        "NL": "Birds can fly, swim, or both, but some birds cannot fly.",
        "FOL": "∀x (Bird(x) → ((Fly(x) ⊕ Swim(x) ⊕ (Fly(x) ∧ Swim(x))) ∨ ¬Fly(x)))"
    },
    {
        "NL": "There is an island that is beautiful but not populated, or it's populated but not beautiful.",
        "FOL": "∃x (Island(x) → ((Beautiful(x) ∧ ¬Populated(x)) ⊕ (Populated(x) ∧ ¬Beautiful(x))))"
    },
    {
        "NL": "A monkey is swinging in a tree, while a snake is slithering in the grass.",
        "FOL": "∃x ∃y (Monkey(x) ∧ Tree(y) ∧ SwingingIn(x, y)) ∧ ∃z (Snake(z) ∧ Slithering(z) ∧ InTheGrass(z))"
    },
    {
        "NL": "Museums display collections of art and artifacts, while libraries house books and other information resources.",
        "FOL": "∀x∀y (Museum(x) ∧ Library(y) → (DisplayCollectionsOfArtAndArtifacts(x) ∧ HouseBooksAndInformationResources(y)))"
    },
    {
        "NL": "An email is sent by the sender and received by the recipient.",
        "FOL": "∀x∀y∀z (Email(x) ∧ Sender(y) ∧ Recipient(z) → (SentBy(x, y) ∧ ReceivedBy(x, z)))"
    },
    {
        "NL": "Planes can land at airports when the weather is clear and the runway is available.",
        "FOL": "∀x∀y (Plane(x) ∧ Airport(y) ∧ ClearWeather(y) ∧ RunwayAvailable(y) → CanLand(x, y))"
    },
    {
        "NL": "A fish can breathe underwater using gills and does not have lungs.",
        "FOL": "∀x (Fish(x) → (BreathesUnderwater(x) ∧ Gills(x) ∧ ¬Lungs(x)))"
    },
    {
        "NL": "Some painters either paint landscapes or portraits, but do not paint both.",
        "FOL": "∃x (Painter(x) ∧ (PaintLandscape(x) ⊕ PaintPortrait(x)))"
    },
    {
        "NL": "If a food is not a fruit, it needs cooking and it contains protein.",
        "FOL": "∀x (Food(x) ∧ ¬Fruit(x) → (NeedsCooking(x) ∧ ContainsProtein(x)))"
    },
    {
        "NL": "A person is a professional athlete if they participate in a sport, possess exceptional skills, and receive payment for their performance.",
        "FOL": "∀x (Person(x) ∧ ParticipatesInSport(x) ∧ ExceptionalSkills(x) ∧ ReceivesPayment(x) → ProfessionalAthlete(x))"
    },
    {
        "NL": "Some planets are terrestrial and some are gaseous, but there are no planets that are both.",
        "FOL": "∃x (Terrestrial(x)) ∧ ∃x (Gaseous(x)) ∧ ¬∃x (Terrestrial(x) ∧ Gaseous(x))"
    },
    {
        "NL": "Drones fly by receiving signals from a remote control or following a pre-programmed route.",
        "FOL": "∀x∀y∀z (Drone(x) ∧ (ReceivesSignals(x, y) ∨ FollowsPreProgrammedRoute(x, z)) → Fly(x))"
    },
    {
        "NL": "A laptop is a portable computer that typically has a built-in keyboard, display, and touchpad, and can be powered by a rechargeable battery or an external power source.",
        "FOL": "∀x (Laptop(x) → PortableComputer(x) ∧ HasBuiltInKeyboardDisplayTouchpad(x) ∧ (PoweredByRechargeableBattery(x) ∨ PoweredByExternalPowerSource(x)))"
    },
    {
        "NL": "A bakery sells either cakes or bread, but not both.",
        "FOL": "∃x (Bakery(x) ∧ (SellsCakes(x) ∧ ¬SellsBread(x) ∨ (¬SellsCakes(x) ∧ SellsBread(x))))"
    },
    {
        "NL": "A person becomes a citizen of a country either by being born there or by naturalization.",
        "FOL": "∀x ∀y (Person(x) ∧ (BornIn(x, y) ∨ Naturalized(x, y)) → CitizenOf(x, y))"
    },
    {
        "NL": "Sculptures are created by artists using materials such as stone, metal, or wood, and they can be displayed indoors or outdoors.",
        "FOL": "∀x ∀y ∀z (Sculpture(x) ∧ Artist(y) ∧ Material(z) → (CreatedBy(x, y) ∧ UsesMaterial(y, z) ∧ (DisplayedIndoors(x) ∨ DisplayedOutdoors(x))))"
    },
    {
        "NL": "A drink is refreshing if it has ice or lemon as an ingredient.",
        "FOL": "∀x (Drink(x) ∧ (HasIce(x) ∨ HasLemon(x)) → Refreshing(x))"
    },
    {
        "NL": "In a chess match, a player can move the queen in any direction along a rank, file, or diagonal.",
        "FOL": "∀x ∀y (ChessMatch(x) ∧ Player(y) ∧ QueenMove(y) → (MoveAlongRank(y) ∨ MoveAlongFile(y) ∨ MoveAlongDiagonal(y)))"
    },
    {
        "NL": "Cats meow when they are hungry, and dogs bark when they need attention.",
        "FOL": "∀x ((Cat(x) ∧ Hungry(x)) → Meows(x)) ∧ ((Dog(x) ∧ NeedsAttention(x)) → Barks(x))"
    },
    {
        "NL": "An object is considered a book if it consists of written or printed pages bound together with a cover.",
        "FOL": "∀x (Object(x) ∧ ConsistsOfPages(x) ∧ BoundTogetherWithCover(x) → Book(x))"
    },
    {
        "NL": "An entity is a dinosaur or a mammal.",
        "FOL": "∀x (Entity(x) → (Dinosaur(x) ∨ Mammal(x)))"
    },
    {
        "NL": "A medical professional who specializes in the care, diagnosis, and treatment of disorders of the nervous system is a neurologist.",
        "FOL": "∀x (MedicalProfessional(x) ∧ SpecializesIn(x, nervousSystem) ∧ Care(x) ∧ Diagnosis(x) ∧ Treatment(x) → Neurologist(x))"
    },
    {
        "NL": "A thriving garden exhibits a diverse array of plants, adequate sunlight, and proper soil conditions.",
        "FOL": "∀x (Garden(x) ∧ DiverseArrayofPlants(x) ∧ AdequateSunlight(x) ∧ ProperSoilConditions(x) → Thriving(x))"
    },
    {
        "NL": "A construction company builds houses using different materials and architectural designs.",
        "FOL": "∀x∀y∀z (ConstructionCompany(x) ∧ Material(y) ∧ ArchitecturalDesign(z) → BuildsHousesWith(x, y, z))"
    },
    {
        "NL": "Every book that is profound is worth reading.",
        "FOL": "∀w (Profound(w) ↔ WorthReading(w))"
    },
    {
        "NL": "A car either runs on gasoline or electricity.",
        "FOL": "∀x (Car(x) → (RunsOnGasoline(x) ⊕ RunsOnElectricity(x)))"
    },
    {
        "NL": "A room is comfortable for relaxation if it has soft lighting, quiet surroundings, and is either spacious or has cozy furniture.",
        "FOL": "∀x∀y∀z (Room(x) ∧ SoftLighting(x, y) ∧ QuietSurroundings(x, z) ∧ (Spacious(x) ∨ CozyFurniture(x)) → ComfortableForRelaxation(x))"
    },
    {
        "NL": "All dogs are either small or big, but not both.",
        "FOL": "∀x (Dog(x) → (Small(x) ⊕ Big(x)))"
    },
    {
        "NL": "Maria is not a doctor or there are humans who love Maria.",
        "FOL": "¬Doctor(maria) ∨ ∃x (Human(x) ∧ Love(x, maria))"
    },
    {
        "NL": "A computer is considered portable if it is lightweight and has a built-in battery.",
        "FOL": "∀x (Computer(x) ∧ Lightweight(x) ∧ BuiltInBattery(x) → Portable(x))"
    },
    {
        "NL": "Migratory birds travel long distances to find suitable breeding grounds, food sources, and to escape harsh weather conditions.",
        "FOL": "∀x∀y∀z (MigratoryBird(x) → (TravelsLongDistances(x) ∧ (FindsBreedingGrounds(x, y) ∧ FindsFoodSources(x, z) ∧ EscapesHarshWeather(x))))"
    },
    {
        "NL": "Athletes are not always successful.",
        "FOL": "∃x (Athlete(x) ∧ ¬Successful(x))"
    },
    {
        "NL": "A window is open when it is not closed.",
        "FOL": "∀x (Window(x) ∧ ¬Closed(x) → Open(x))"
    },
    {
        "NL": "Natural disasters, such as earthquakes and hurricanes, cause damage to infrastructure.",
        "FOL": "∀x∀y (NaturalDisaster(x) ∧ (Earthquake(x) ∨ Hurricane(x)) ∧ Infrastructure(y) → CausesDamage(x, y))"
    },
    {
        "NL": "Dogs, cats, and fish are common household pets.",
        "FOL": "∀x (Dog(x) ∨ Cat(x) ∨ Fish(x) → HouseholdPet(x))"
    },
    {
        "NL": "A vehicle powered by electricity, having four wheels, and designed for use on public roads is an electric car.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricity(x) ∧ HasFourWheels(x) ∧ DesignedForPublicRoads(x) → ElectricCar(x))"
    },
    {
        "NL": "A person is an architect if they are trained and skilled in the design and planning of buildings.",
        "FOL": "∀x (Architect(x) ↔ (Person(x) ∧ Trained(x) ∧ SkilledInDesign(x) ∧ PlansBuildings(x)))"
    },
    {
        "NL": "A planet orbits a star and has a gravitational field that attracts objects.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ Orbits(x, y) → AttractsObjects(x))"
    },
    {
        "NL": "A garden contains plants and may have decorative elements.",
        "FOL": "∀x (Garden(x) → (∃y PlantIn(x, y) ∧ ∃z (DecorativeElementIn(x, z) ∨ ¬DecorativeElementIn(x, z))))"
    },
    {
        "NL": "A food item can be stored in a refrigerator or a freezer.",
        "FOL": "∀x (FoodItem(x) → (StoredInRefrigerator(x) ∨ StoredInFreezer(x)))"
    },
    {
        "NL": "Students with dedicated study habits, enthusiastic participation, and positive outlook excel in their studies.",
        "FOL": "∀x (Student(x) ∧ DedicatedStudyHabits(x) ∧ EnthusiasticParticipation(x) ∧ PositiveOutlook(x) → ExcelInStudies(x))"
    },
    {
        "NL": "A television displays video content by receiving signals, processing the information, and emitting images on the screen.",
        "FOL": "∀x∀y∀z (Television(x) ∧ Signal(y) ∧ Information(z) → (DisplaysVideoContent(x) ↔ (ReceivesSignal(x, y) ∧ ProcessesInformation(x, z) ∧ EmitsImages(x))))"
    },
    {
        "NL": "A dog that can swim and fetch is highly skilled.",
        "FOL": "∀x (Dog(x) ∧ CanSwim(x) ∧ CanFetch(x) → HighlySkilled(x))"
    },
    {
        "NL": "A robust software application is scalable, secure, and easily maintainable while meeting user requirements.",
        "FOL": "∀x (SoftwareApplication(x) ∧ Scalable(x) ∧ Secure(x) ∧ EasilyMaintainable(x) ∧ MeetsUserRequirements(x) → Robust(x))"
    },
    {
        "NL": "Companies with strong management and efficient workflow have higher profit margins.",
        "FOL": "∀x (Company(x) ∧ StrongManagement(x) ∧ EfficientWorkflow(x) → HighProfitMargin(x))"
    },
    {
        "NL": "A whale is a mammal, not a fish.",
        "FOL": "∀x (Whale(x) → (Mammal(x) ∧ ¬Fish(x)))"
    },
    {
        "NL": "A location is a coastal area if it is situated along the shoreline of a sea or ocean.",
        "FOL": "∀x (CoastalArea(x) → (Location(x) ∧ ∃y (Shoreline(y) ∧ SituatedAlong(x, y)) ∧ (∃z (Sea(z) ∧ AdjacentTo(x, z)) ∨ ∃w (Ocean(w) ∧ AdjacentTo(x, w)))))"
    },
    {
        "NL": "Volcanoes can emit lava, ash, and gases, which can impact the surrounding environment and ecosystems.",
        "FOL": "∀x∀y∀z (Volcano(x) ∧ (Lava(y) ∨ Ash(y) ∨ Gases(y)) ∧ EnvironmentAndEcosystems(z) → EmitsAndImpacts(x, y, z))"
    },
    {
        "NL": "All dogs are either poodles or bulldogs.",
        "FOL": "∀x (Dog(x) → (Poodle(x) ⊕ Bulldog(x)))"
    },
    {
        "NL": "Outdoor activities are enjoyable with favorable weather, beautiful landscapes, and proper equipment.",
        "FOL": "∀x (OutdoorActivity(x) → (Enjoyable(x) ↔ (FavorableWeather(x) ∧ BeautifulLandscapes(x) ∧ ProperEquipment(x))))"
    },
    {
        "NL": "A carnivore preys on herbivores or other animals for sustenance.",
        "FOL": "∀x∀y (Carnivore(x) ∧ (Herbivore(y) ∨ Animal(y)) → PreysOn(x, y))"
    },
    {
        "NL": "During a solar eclipse, the moon passes between the earth and the sun, blocking the sun's light.",
        "FOL": "∀x∀y∀z (SolarEclipse(x) ∧ Moon(y) ∧ Earth(z) → PassesBetween(y, z, x))"
    },
    {
        "NL": "A fragrant flower emits a pleasant aroma.",
        "FOL": "∀x (FragrantFlower(x) → EmitsPleasantAroma(x))"
    },
    {
        "NL": "No creature is both a bird and a fish.",
        "FOL": "¬∃x (Creature(x) ∧ Bird(x) ∧ Fish(x))"
    },
    {
        "NL": "A coat can be waterproof or not, but if it's designed for winter, it must be insulated and not be made of thin material.",
        "FOL": "∀x (Coat(x) → ((Waterproof(x) ∨ ¬Waterproof(x)) ∧ (WinterDesign(x) → (Insulated(x) ∧ ¬ThinMaterial(x)))))"
    },
    {
        "NL": "A car is considered a convertible if its roof can be removed or folded down.",
        "FOL": "∀x (RemovableOrFoldableRoof(x) → Convertible(x))"
    },
    {
        "NL": "A meal is vegetarian if it consists of vegetables rather than meat.",
        "FOL": "∀x (Meal(x) ∧ ConsistsOfVegetables(x) ∧ ¬ConsistsOfMeat(x) → Vegetarian(x))"
    },
    {
        "NL": "A place is considered a hospital if it is a healthcare facility that provides medical treatment, care, and diagnostic services to patients, often staffed by doctors, nurses, and other healthcare professionals.",
        "FOL": "∀x (Hospital(x) ↔ (HealthcareFacilityProvidingMedicalTreatmentCareAndDiagnosticServices(x) ∧ StaffedByDoctorsNursesAndOtherHealthcareProfessionals(x)))"
    },
    {
        "NL": "A refrigerator can keep food cold, while an oven can heat food.",
        "FOL": "∀x (Refrigerator(x) → KeepsFoodCold(x)) ∧ ∀y (Oven(y) → HeatsFood(y))"
    },
    {
        "NL": "A fruit is a berry if and only if it is sweet and not considered poisonous.",
        "FOL": "∀x (Fruit(x) → (Berry(x) ↔ (Sweet(x) ∧ ¬ConsideredPoisonous(x))))"
    },
    {
        "NL": "A tree grows when it gets sunlight and has access to nutrients.",
        "FOL": "∀x (Tree(x) ∧ GetsSunlight(x) ∧ AccessToNutrients(x) → Grows(x))"
    },
    {
        "NL": "Airplanes fly in the sky, and ships sail on the sea.",
        "FOL": "∀x∀y (Airplane(x) ∧ Ship(y) → (FliesInSky(x) ∧ SailsOnSea(y)))"
    },
    {
        "NL": "A musical instrument that produces sound by vibrating strings and has a wooden body is classified as a guitar.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundByVibratingStrings(x) ∧ HasWoodenBody(x) → Guitar(x))"
    },
    {
        "NL": "No rectangle merges with all big spheres.",
        "FOL": "¬∃x (Rectangle(x) ∧ ∀y (Big(y) ∧ Sphere(y) → MergesWith(x, y)))"
    },
    {
        "NL": "A movie can be enjoyed if it has a captivating plot or great acting, but not both.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ (CaptivatingPlot(y) ⊕ GreatActing(z)) → CanBeEnjoyed(x, y, z))"
    },
    {
        "NL": "A room is cozy if it is warm and has comfortable seating.",
        "FOL": "∀x (Room(x) → (Cozy(x) ↔ (Warm(x) ∧ ComfortableSeating(x))))"
    },
    {
        "NL": "All dogs are mammals.",
        "FOL": "∀x (Dog(x) → Mammal(x))"
    },
    {
        "NL": "Mars is smaller than Earth, while Jupiter is larger than Earth.",
        "FOL": "∀x ∀y ∀z (Mars(x) ∧ Earth(y) ∧ Jupiter(z) → (SmallerThan(x, y) ∧ LargerThan(z, y)))"
    },
    {
        "NL": "A fabric that is waterproof resists water penetration and is typically used for outerwear or protective clothing.",
        "FOL": "∀x (Fabric(x) ∧ Waterproof(x) → ResistsWaterPenetration(x) ∧ TypicallyUsedForOuterwearOrProtectiveClothing(x))"
    },
    {
        "NL": "A movie can be in color or black and white, and have subtitles.",
        "FOL": "∀x (Movie(x) → ((Color(x) ∨ BlackAndWhite(x)) ∧ Subtitles(x)))"
    },
    {
        "NL": "A scientific discipline that studies the behavior and properties of matter, the interactions between different types of matter, and the transformations that result from these interactions is chemistry.",
        "FOL": "∀x (ScientificDiscipline(x) ∧ StudiesBehaviorAndPropertiesOfMatter(x) ∧ StudiesInteractionsBetweenMatter(x) ∧ StudiesTransformationsFromInteractions(x) → Chemistry(x))"
    },
    {
        "NL": "An artwork x is abstract if it does not depict recognizable objects and does not use realistic colors.",
        "FOL": "∀x (Artwork(x) ∧ ¬DepictsRecognizableObjects(x) ∧ ¬UsesRealisticColors(x) → Abstract(x))"
    },
    {
        "NL": "An individual is a vegetarian if they do not consume meat.",
        "FOL": "∀x (Individual(x) ∧ ¬ConsumesMeat(x) → Vegetarian(x))"
    },
    {
        "NL": "Not every dog barks.",
        "FOL": "∃x (Dog(x) ∧ ¬Bark(x))"
    },
    {
        "NL": "Every lawyer who has practiced more than five years or has a master degree, but not both, either works in a law firm or they are a professor.",
        "FOL": "∀x (Lawyer(x) ∧ (PracticedMoreThanFiveYears(x) ⊕ HasMasterDegree(x)) → (WorksInLawFirm(x) ∨ IsProfessor(x)))"
    },
    {
        "NL": "A molecule is polar when it contains atoms with different electronegativities and has an uneven distribution of charge.",
        "FOL": "∀x (Molecule(x) → (Polar(x) ↔ (ContainsAtomsWithDifferentElectronegativities(x) ∧ UnevenChargeDistribution(x))))"
    },
    {
        "NL": "Alice respects a Hemingway book if and only if it was published before 1950.",
        "FOL": "∀x (Book(x) ∧ WrittenBy(x, hemingway) → (PublishedBeforeNineteenfifty(x) ↔ Respects(alice, x)))"
    },
    {
        "NL": "A dish is spicy or sweet.",
        "FOL": "∀x (Dish(x) → (Spicy(x) ∨ Sweet(x)))"
    },
    {
        "NL": "An operating system is reliable if it is stable, secure, and compatible with various software, but not if it requires excessive system resources.",
        "FOL": "∀x (OperatingSystem(x) ∧ Stable(x) ∧ Secure(x) ∧ CompatibleWithSoftware(x) ∧ ¬ExcessiveSystemResources(x) → Reliable(x))"
    },
    {
        "NL": "Banks offer financial services like loans and investments, and customers open accounts to manage their money.",
        "FOL": "∀x∀y (Bank(x) ∧ Customer(y) → (OffersFinancialServices(x) ∧ OpensAccount(y, x)))"
    },
    {
        "NL": "A product with a durable and high-quality design is more likely to have a longer lifespan.",
        "FOL": "∀x ((DurableDesign(x) ∧ HighQualityDesign(x)) → LongerLifespan(x))"
    },
    {
        "NL": "Every object is either a tasty apple or a rotten orange, but not both.",
        "FOL": "∀x ((Tasty(x) ∧ Apple(x)) ⊕ (Rotten(x) ∧ Orange(x)))"
    },
    {
        "NL": "A cactus thrives in arid environments, whereas a fern thrives in humid environments.",
        "FOL": "∀x (Cactus(x) → ThrivesInAridEnvironments(x)) ∧ ∀y (Fern(y) → ThrivesInHumidEnvironments(y))"
    },
    {
        "NL": "A smartphone enables communication through calls, messages, or emails, has features such as a camera, GPS, and touch screen, and supports multiple applications for various purposes.",
        "FOL": "∀x (Smartphone(x) → (EnablesCommunication(x) ∧ (Calls(x) ∨ Messages(x) ∨ Emails(x)) ∧ (Camera(x) ∧ GPS(x) ∧ TouchScreen(x)) ∧ SupportsMultipleApplications(x)))"
    },
    {
        "NL": "A state belongs to Europe or Asia.",
        "FOL": "∀x (State(x) → (InEurope(x) ∨ InAsia(x)))"
    },
    {
        "NL": "There is someone who loves no one he respects.",
        "FOL": "∃x (Person(x) ∧ ∀y (Person(y) ∧ Respect(x, y) → ¬Love(x, y)))"
    },
    {
        "NL": "A carnivorous plant consumes insects, a herbivorous animal consumes plants, and an omnivorous animal consumes both plants and other animals.",
        "FOL": "∀x (CarnivorousPlant(x) → ConsumesInsects(x)) ∧ ∀y (HerbivorousAnimal(y) → ConsumesPlants(y)) ∧ ∀z (OmnivorousAnimal(z) → (ConsumesPlants(z) ∧ ConsumesAnimals(z)))"
    },
    {
        "NL": "While every element reacts with something, no element reacts with anything more reactive than itself.",
        "FOL": "∀x ∃y (ReactsWith(x, y)) ∧ ¬∃z ∃w (ReactsWith(z, w) ∧ MoreReactiveThan(w, z))"
    },
    {
        "NL": "A table has legs, while a shelf has brackets.",
        "FOL": "∀x (Table(x) → HasLegs(x)) ∧ ∀y (Shelf(y) → HasBrackets(y))"
    },
    {
        "NL": "A student may pass or fail a test based on their score.",
        "FOL": "∀x ∀y (Student(x) ∧ Test(y) → (PassTest(x, y) ∨ FailTest(x, y)))"
    },
    {
        "NL": "A battery stores energy in the form of chemical potential and releases it as electrical energy.",
        "FOL": "∀x (Battery(x) → (∃y (ChemicalPotentialEnergy(y) ∧ Stores(x, y)) ∧ ∃z (ElectricalEnergy(z) ∧ Releases(x, z))))"
    },
    {
        "NL": "A bicycle has two wheels, a tricycle has three wheels, and a unicycle has one wheel.",
        "FOL": "∀x ∀y ∀z (Bicycle(x) → Wheels(x, 2)) ∧ (Tricycle(y) → Wheels(y, 3)) ∧ (Unicycle(z) → Wheels(z, 1))"
    },
    {
        "NL": "Artists who work with paint often create art on canvas, paper, or walls.",
        "FOL": "∀x ∀y (Artist(x) ∧ WorksWithPaint(x) → (CreatesArtOn(x, y) ∧ (Canvas(y) ∨ Paper(y) ∨ Wall(y))))"
    },
    {
        "NL": "A refrigerator preserves food, but it doesn't freeze it unless it has a freezer compartment.",
        "FOL": "∀x (Refrigerator(x) → (PreserveFood(x) ∧ (¬FreezeFood(x) ∨ HasFreezerCompartment(x))))"
    },
    {
        "NL": "An illness that causes fever, cough, and difficulty breathing is a respiratory illness.",
        "FOL": "∀x (Illness(x) ∧ CausesFever(x) ∧ CausesCough(x) ∧ CausesDifficultyBreathing(x) → RespiratoryIllness(x))"
    },
    {
        "NL": "Having a regular sleep schedule contributes to improved mental health.",
        "FOL": "∀x (RegularSleepSchedule(x) → ImprovedMentalHealth(x))"
    },
    {
        "NL": "If there are no flowers, then no bee visits any sunflower.",
        "FOL": "¬∃x (Flower(x)) → ¬∃y (Bee(y) ∧ ∃z (Sunflower(z) ∧ Visit(y, z)))"
    },
    {
        "NL": "A judge decides the outcome of a legal case based on evidence.",
        "FOL": "∀x ∀y ∀z (Judge(x) ∧ LegalCase(y) ∧ Evidence(z) → DecidesOutcomeBasedOn(x, y, z))"
    },
    {
        "NL": "A painting can be appreciated for master craftsmanship, unique style, or provocative theme, but not all three at once.",
        "FOL": "∀v (Painting(v) ∧ Appreciated(v) → (MasterCraftsmanship(v) ⊕ UniqueStyle(v) ⊕ ProvocativeTheme(v)))"
    },
    {
        "NL": "A smartphone has a screen, a battery, and a processor.",
        "FOL": "∀x (Smartphone(x) → ∃y∃z∃w (Screen(y, x) ∧ Battery(z, x) ∧ Processor(w, x)))"
    },
    {
        "NL": "A square can be red or blue, but not both.",
        "FOL": "∀x (Square(x) → ((Red(x) ⊕ Blue(x))))"
    },
    {
        "NL": "Birds can fly, while reptiles cannot.",
        "FOL": "∀x (Bird(x) → CanFly(x)) ∧ ∀y (Reptile(y) → ¬CanFly(y))"
    },
    {
        "NL": "An athlete who excels in multiple sports is considered a versatile athlete, while an athlete who specializes in a single sport is considered focused.",
        "FOL": "∀x (Athlete(x) ∧ ExcelsInMultipleSports(x) → VersatileAthlete(x)) ∧ (SpecializesInSingleSport(x) → FocusedAthlete(x))"
    },
    {
        "NL": "A child is riding a bike in the garden.",
        "FOL": "∃x ∃y ∃z (Child(x) ∧ Bike(y) ∧ Garden(z) ∧ Riding(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A landform that has a steep slope, a peak, and is formed by geological processes is classified as a mountain.",
        "FOL": "∀x (Landform(x) ∧ SteepSlope(x) ∧ Peak(x) ∧ FormedByGeologicalProcesses(x) → Mountain(x))"
    },
    {
        "NL": "A truck transports goods from one place to another.",
        "FOL": "∀x ∀y ∀z (Truck(x) ∧ Goods(y) ∧ Place(z) ∧ Place(w) → Transports(x, y, z, w))"
    },
    {
        "NL": "There exist smartphones that are innovative and reliable, but not budget-friendly, or they are budget-friendly but not innovative and reliable.",
        "FOL": "∀x (Smartphone(x) → ((Innovative(x) ∧ Reliable(x) ∧ ¬BudgetFriendly(x)) ⊕ (BudgetFriendly(x) ∧ ¬(Innovative(x) ∧ Reliable(x)))))"
    },
    {
        "NL": "A smartphone requires a signal from a cell tower to make calls or send messages, but it can't do both at the same time.",
        "FOL": "∀x ∀y (Smartphone(x) ∧ CellTower(y) → ((MakesCalls(x, y) ⊕ SendsMessages(x, y)) ∧ ¬(MakesCalls(x, y) ∧ SendsMessages(x, y))))"
    },
    {
        "NL": "No plant is both colorful and dead.",
        "FOL": "¬∃x (Plant(x) ∧ Colorful(x) ∧ Dead(x))"
    },
    {
        "NL": "A vehicle is on a road if it's not off-road.",
        "FOL": "∀x (Vehicle(x) → (OnRoad(x) ↔ ¬OffRoad(x)))"
    },
    {
        "NL": "A place is considered a park if it is a public outdoor area used for recreation.",
        "FOL": "∀x (Park(x) ↔ (PublicOutdoorArea(x) ∧ UsedForRecreation(x)))"
    },
    {
        "NL": "A city is densely populated if it has a high population and a small land area.",
        "FOL": "∀x (City(x) ∧ HighPopulation(x) ∧ SmallLandArea(x) → DenselyPopulated(x))"
    },
    {
        "NL": "A person is considered a cashier if they handle cash transactions in a store or other business.",
        "FOL": "∀x (Person(x) ∧ HandlesCashTransactions(x) ∧ (StoreOrOtherBusiness(x)) → Cashier(x))"
    },
    {
        "NL": "A book is borrowed when a reader requests it, the library approves, and the due date is set.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ Reader(y) ∧ Library(z) ∧ Requests(y, x) ∧ Approves(z, x) ∧ SetsDueDate(x) → Borrowed(x))"
    },
    {
        "NL": "Every album is either rock or pop, but not both.",
        "FOL": "∀x (Album(x) → (Rock(x) ⊕ Pop(x)))"
    },
    {
        "NL": "A marine animal with a soft body, a muscular foot, and a protective shell is typically called a mollusk.",
        "FOL": "∀x (MarineAnimal(x) ∧ SoftBody(x) ∧ MuscularFoot(x) ∧ ProtectiveShell(x) → Mollusk(x))"
    },
    {
        "NL": "A photographer captures images and displays them in an exhibition.",
        "FOL": "∀x∀y∀z (Photographer(x) ∧ Image(y) ∧ Exhibition(z) → (Captures(x, y) ∧ DisplaysIn(x, y, z)))"
    },
    {
        "NL": "A lamp emits light.",
        "FOL": "∀x (Lamp(x) → EmitsLight(x))"
    },
    {
        "NL": "In an art gallery, paintings must be hung on walls, and no painting can be hung on the floor or ceiling.",
        "FOL": "∀x ∀y (ArtGallery(y) ∧ Painting(x) → (DisplayedIn(x, y) → (HungOnWall(x) ∧ ¬(HungOnFloor(x) ∨ HungOnCeiling(x)))))"
    },
    {
        "NL": "A museum displays art and historical artifacts.",
        "FOL": "∀x (Museum(x) → DisplaysArt(x) ∧ DisplaysHistoricalArtifacts(x))"
    },
    {
        "NL": "A star is twinkling in the sky, and a bat is fluttering in the night.",
        "FOL": "∃x ∃y (Star(x) ∧ Sky(y) ∧ TwinklingIn(x, y)) ∧ ∃z (Bat(z) ∧ Fluttering(z) ∧ InNight(z))"
    },
    {
        "NL": "All mothers are females, but not all females are mothers.",
        "FOL": "∀x (Mother(x) → Female(x)) ∧ ¬∀x (Female(x) → Mother(x))"
    },
    {
        "NL": "An object experiencing zero net force is in equilibrium.",
        "FOL": "∀x (Object(x) ∧ ZeroNetForce(x) → Equilibrium(x))"
    },
    {
        "NL": "A geological formation consisting of layers of sedimentary rock, containing fossils, and exhibiting signs of erosion can potentially be an important site for paleontological research.",
        "FOL": "∀x∀y∀z (GeologicalFormation(x) ∧ LayersOfSedimentaryRock(x, y) ∧ ContainsFossils(x) ∧ ExhibitsSignsOfErosion(x, z) → ImportantSiteForPaleontologicalResearch(x))"
    },
    {
        "NL": "A climate event is extreme if it incorporates thunderstorms, hurricane-like gusts, and the chance of flooding or further devastation.",
        "FOL": "∀x (ClimateEvent(x) ∧ IncorporatesThunderstorms(x) ∧ IncorporatesHurricaneLikeGusts(x) ∧ (ChanceOfFlooding(x) ∨ FurtherDevastation(x)) → Extreme(x))"
    },
    {
        "NL": "If a book is a bestseller, it has sold a large number of copies and is popular among readers.",
        "FOL": "∀x (Bestseller(x) → (SoldLargeNumberOfCopies(x) ∧ PopularAmongReaders(x)))"
    },
    {
        "NL": "Fruits that are rich in vitamin C help boost the immune system and promote healthy skin.",
        "FOL": "∀x (Fruit(x) ∧ RichInVitaminC(x) → BoostsImmuneSystemAndPromotesHealthySkin(x))"
    },
    {
        "NL": "In a food chain, primary producers are consumed by primary consumers, which are then consumed by secondary consumers.",
        "FOL": "∀x ∀y ∀z (PrimaryProducer(x) ∧ PrimaryConsumer(y) ∧ SecondaryConsumer(z) → (ConsumedBy(x, y) ∧ ConsumedBy(y, z)))"
    },
    {
        "NL": "Not all mechanics are able to fix a bike or a car, and none of them hate technical challenges.",
        "FOL": "¬∀x (Mechanic(x) → (FixBike(x) ∨ FixCar(x))) ∧ ∀y (Mechanic(y) → ¬HateTechnicalChallenges(y))"
    },
    {
        "NL": "A city attracts tourists if it has beautiful landmarks, rich history, and excellent cuisine.",
        "FOL": "∀x (City(x) ∧ HasBeautifulLandmarks(x) ∧ HasRichHistory(x) ∧ HasExcellentCuisine(x) → AttractsTourists(x))"
    },
    {
        "NL": "A game is enjoyable if it's not monotonous, has engaging gameplay, and either immersive graphics or a captivating storyline.",
        "FOL": "∀x (Game(x) → (Enjoyable(x) ↔ (¬Monotonous(x) ∧ EngagingGameplay(x) ∧ (ImmersiveGraphics(x) ∨ CaptivatingStoryline(x)))))"
    },
    {
        "NL": "If a vehicle is electric, it doesn't use fuel and reduces emissions.",
        "FOL": "∀x (Vehicle(x) ∧ Electric(x) → (¬UseFuel(x) ∧ ReduceEmissions(x)))"
    },
    {
        "NL": "A place is considered a theater if it is a venue for the performance of plays, musicals, and other live entertainment, often featuring a stage, seating, and backstage facilities for performers and crew.",
        "FOL": "∀x (Theater(x) ↔ (VenueForPerformanceOfPlaysMusicalsAndOtherLiveEntertainment(x) ∧ FeaturesStageSeatingAndBackstageFacilities(x) ∧ ForPerformersAndCrew(x)))"
    },
    {
        "NL": "Knives cut.",
        "FOL": "∀x (Knife(x) → Cuts(x))"
    },
    {
        "NL": "No circles are rectangles.",
        "FOL": "¬∃x (Circle(x) ∧ Rectangle(x))"
    },
    {
        "NL": "A room with a window is brighter than a room without a window.",
        "FOL": "∀x∀y (Room(x) ∧ Room(y) ∧ HasWindow(x) ∧ ¬HasWindow(y) → Brighter(x, y))"
    },
    {
        "NL": "An eagle is soaring above the mountains.",
        "FOL": "∃x ∃y (Eagle(x) ∧ Mountains(y) ∧ SoaringAbove(x, y))"
    },
    {
        "NL": "A television channel can be digital or analog, but not both.",
        "FOL": "∀x (TelevisionChannel(x) → (Digital(x) ⊕ Analog(x)) ∧ ¬(Digital(x) ∧ Analog(x)))"
    },
    {
        "NL": "A person is an artist if they create visual or performing art.",
        "FOL": "∀x (Person(x) ∧ Artist(x) ↔ (CreatesVisualArt(x) ∨ CreatesPerformingArt(x)))"
    },
    {
        "NL": "A bee is hovering over a rose.",
        "FOL": "∃x ∃y (Bee(x) ∧ Rose(y) ∧ HoveringOver(x, y))"
    },
    {
        "NL": "An animal exhibits social behavior if it forms groups or communities, communicates with others, and demonstrates cooperative interactions.",
        "FOL": "∀x (Animal(x) ∧ FormsGroupsOrCommunities(x) ∧ Communicates(x) ∧ DemonstratesCooperativeInteractions(x) → SocialBehavior(x))"
    },
    {
        "NL": "An item of clothing worn on the feet and made of fabric is a sock.",
        "FOL": "∀x (ClothingItem(x) ∧ WornOnFeet(x) ∧ MadeOfFabric(x) → Sock(x))"
    },
    {
        "NL": "A plant x requires sunlight to grow if it is a photosynthetic organism.",
        "FOL": "∀x (Plant(x) ∧ Photosynthetic(x) → RequiresSunlightToGrow(x))"
    },
    {
        "NL": "A medication is effective if it treats symptoms and has minimal side effects.",
        "FOL": "∀x (Medication(x) ∧ TreatsSymptoms(x) ∧ MinimalSideEffects(x) → Effective(x))"
    },
    {
        "NL": "An ice cream shop can create a new flavor by combining existing flavors, but must ensure that the new flavor is not too similar to any of the current offerings.",
        "FOL": "∀x∀y∀z (IceCreamShop(x) ∧ Flavor(y) ∧ Flavor(z) → (CreatesNewFlavor(x, y, z) ↔ (CombinesExistingFlavors(y, z) ∧ ¬TooSimilar(y, z))))"
    },
    {
        "NL": "If a creature is a bird, it either eats seeds or insects.",
        "FOL": "∀x (Creature(x) ∧ Bird(x) → EatsSeeds(x) ⊕ EatsInsects(x))"
    },
    {
        "NL": "A chef prepares meals, a waiter serves customers, and a bartender mixes drinks.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Waiter(y) ∧ Bartender(z) → (PreparesMeals(x) ∧ ServesCustomers(y) ∧ MixesDrinks(z)))"
    },
    {
        "NL": "A square has four sides of equal length and four right angles.",
        "FOL": "∀x (Square(x) → (NumberOfSides(x, 4) ∧ EqualLengthSides(x) ∧ NumberOfRightAngles(x, 4)))"
    },
    {
        "NL": "A bird is singing on a branch.",
        "FOL": "∃x ∃y (Bird(x) ∧ Branch(y) ∧ SingingOn(x, y))"
    },
    {
        "NL": "To complete a jigsaw puzzle, the player needs to correctly match the edges of the puzzle pieces according to the picture on the box.",
        "FOL": "∀x∀y∀z (JigsawPuzzle(x) ∧ Player(y) ∧ PuzzlePiece(z) → (CompletesPuzzle(y, x) ↔ (CorrectlyMatchesEdges(y, z) ∧ PictureOnBox(x, z))))"
    },
    {
        "NL": "A doctor treats patients, while a teacher educates students.",
        "FOL": "∀x∀y (Doctor(x) ∧ Teacher(y) → (TreatsPatients(x) ∧ EducatesStudents(y)))"
    },
    {
        "NL": "No singer sings both pop and country but has never performed on stage.",
        "FOL": "¬∃x (Singer(x) ∧ SingsPop(x) ∧ SingsCountry(x) ∧ ¬PerformedOnStage(x))"
    },
    {
        "NL": "Some buildings are made of brick, while others are constructed with wood or concrete.",
        "FOL": "∀x (Building(x) → (Brick(x) ⊕ Wood(x) ⊕ Concrete(x)))"
    },
    {
        "NL": "A spacecraft reaches a distant planet by following a calculated trajectory, using efficient propulsion, and navigating through space debris.",
        "FOL": "∀x ∀y (Spacecraft(x) ∧ DistantPlanet(y) ∧ CalculatedTrajectory(x, y) ∧ EfficientPropulsion(x) ∧ NavigatesSpaceDebris(x, y) → Reaches(x, y))"
    },
    {
        "NL": "A research paper is convincing if and only if it has clear argumentation, robust data analysis, but doesn't have too many weak references.",
        "FOL": "∀x (ResearchPaper(x) ∧ Convincing(x) ↔ (HasClearArgumentation(x) ∧ HasRobustDataAnalysis(x) ∧ ¬ManyWeakReferences(x)))"
    },
    {
        "NL": "No chef cooks for all fancy restaurants.",
        "FOL": "¬∃x (Chef(x) → ∀y (Fancy(y) ∧ Restaurant(y) → CooksFor(x, y)))"
    },
    {
        "NL": "If a restaurant has a clean and well-maintained environment, it is more likely to attract customers.",
        "FOL": "∀x (CleanAndWellMaintained(x) → AttractCustomers(x))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, and pedals.",
        "FOL": "∀x (Bicycle(x) ↔ (HasTwoWheels(x) ∧ HasFrame(x) ∧ HasPedals(x)))"
    },
    {
        "NL": "A doctor diagnoses illnesses, while a pharmacist dispenses medication.",
        "FOL": "∀x ((Doctor(x) → DiagnosesIllnesses(x)) ∧ (Pharmacist(x) → DispensesMedication(x)))"
    },
    {
        "NL": "A television series is renewed for another season if it attracts a large audience and receives positive reviews from critics.",
        "FOL": "∀x (TelevisionSeries(x) ∧ AttractsLargeAudience(x) ∧ ReceivesPositiveReviews(x) → RenewedForAnotherSeason(x))"
    },
    {
        "NL": "An organism is a carnivore if it primarily eats other animals, while it's an herbivore if it mostly consumes plants, and an omnivore if it eats both.",
        "FOL": "∀x (Organism(x) ∧ ((EatsAnimals(x) ∧ ¬EatsPlants(x)) → Carnivore(x)) ∧ ((¬EatsAnimals(x) ∧ EatsPlants(x)) → Herbivore(x)) ∧ (EatsAnimals(x) ∧ EatsPlants(x) → Omnivore(x)))"
    },
    {
        "NL": "A meal satisfies hunger when it includes a balance of carbohydrates, proteins, and fats, but it may not be sufficient if portion sizes are small or the individual has a fast metabolism.",
        "FOL": "∀x∀y (Meal(x) ∧ Individual(y) → (SatisfiesHunger(x, y) ↔ ((BalancedCarbohydrates(x) ∧ BalancedProteins(x) ∧ BalancedFats(x)) ∧ ¬(SmallPortionSize(x) ∨ FastMetabolism(y)))))"
    },
    {
        "NL": "A prescription medication can be obtained only with a doctor's authorization, while over-the-counter medications can be purchased without a prescription.",
        "FOL": "∀x (PrescriptionMedication(x) ↔ RequiresDoctorsAuthorization(x)) ∧ (OverTheCounterMedication(y) ↔ ¬RequiresPrescription(y))"
    },
    {
        "NL": "A triangle has an angle greater than 90 degrees if it is obtuse.",
        "FOL": "∀x (Triangle(x) ∧ Obtuse(x) → HasAngleGreaterThan90Degrees(x))"
    },
    {
        "NL": "A car is vintage if it was manufactured many decades ago and has a distinctive style.",
        "FOL": "∀x (Car(x) ∧ ManufacturedManyDecadesAgo(x) ∧ HasDistinctiveStyle(x) → Vintage(x))"
    },
    {
        "NL": "A room is well-lit if it receives sunlight or has artificial lighting.",
        "FOL": "∀x (Room(x) → (ReceivesSunlight(x) ∨ HasArtificialLighting(x)) → WellLit(x))"
    },
    {
        "NL": "Instruments can be played by striking, plucking, or blowing, but not all instruments are played in the same way.",
        "FOL": "∃x∃y (Instrument(x) ∧ Instrument(y) ∧ ((Striking(x) ∧ ¬Striking(y)) ⊕ (Plucking(x) ∧ ¬Plucking(y)) ⊕ (Blowing(x) ∧ ¬Blowing(y))))"
    },
    {
        "NL": "If an instrument is a part of a marching band, it is a brass, percussion, or wind instrument.",
        "FOL": "∀x (Instrument(x) ∧ PartOfMarchingBand(x) → BrassInstrument(x) ∨ PercussionInstrument(x) ∨ WindInstrument(x))"
    },
    {
        "NL": "There are architects who are neither incompetent nor unimaginative.",
        "FOL": "∃x (Architect(x) ∧ ¬(Incompetent(x) ∨ Unimaginative(x)))"
    },
    {
        "NL": "A computer x is obsolete if a more powerful and efficient model y is available in the market.",
        "FOL": "∀x ∃y (Computer(x) ∧ Computer(y) ∧ MorePowerful(y, x) ∧ MoreEfficient(y, x) → Obsolete(x))"
    },
    {
        "NL": "A molecule that dissolves in water and becomes gas is a water molecule.",
        "FOL": "∀x (Molecule(x) ∧ DissolvesInWater(x) ∧ BecomesGas(x) → WaterMolecule(x))"
    },
    {
        "NL": "No cat is a dog.",
        "FOL": "¬∃x (Cat(x) ∧ Dog(x))"
    },
    {
        "NL": "A museum displays artifacts and artworks that reflect a culture's history and artistic achievements.",
        "FOL": "∀x ∀y (Museum(x) ∧ ArtifactOrArtwork(y) ∧ ReflectsCultureHistoryAndArt(x, y) → Displays(x, y))"
    },
    {
        "NL": "A piano has keys that produce sound when pressed, while a drum produces sound when struck.",
        "FOL": "∀x (Piano(x) → SoundFromKeys(x)) ∧ ∀y (Drum(y) → SoundFromStriking(y))"
    },
    {
        "NL": "An airplane flies from one airport to another airport, carrying passengers and cargo.",
        "FOL": "∀x∀y∀z∀a∀b (Airplane(x) ∧ Airport(y) ∧ Airport(z) ∧ Passenger(a) ∧ Cargo(b) → (FliesFromTo(x, y, z) ∧ Carries(x, a) ∧ Carries(x, b)))"
    },
    {
        "NL": "Some athletes are either sprinters or swimmers, but not both.",
        "FOL": "∃x (Athlete(x) ∧ (Sprinter(x) ⊕ Swimmer(x)))"
    },
    {
        "NL": "A restaurant serves a dish when it has the necessary ingredients, a skilled chef to prepare it, and it's listed on the menu.",
        "FOL": "∀x ∀y ∀z (Restaurant(x) ∧ Dish(y) ∧ NecessaryIngredients(y) ∧ SkilledChef(z, y) ∧ ListedOnMenu(x, y) → Serves(x, y, z))"
    },
    {
        "NL": "A dog is a Siberian Husky if it has blue eyes, thick fur, and is a good sled puller.",
        "FOL": "∀x (Dog(x) ∧ HasBlueEyes(x) ∧ HasThickFur(x) ∧ GoodSledPuller(x) → SiberianHusky(x))"
    },
    {
        "NL": "Scientists conduct experiments to test hypotheses, gather data, and draw conclusions.",
        "FOL": "∀x∀y∀z∀w (Scientist(x) ∧ Experiment(y) ∧ Hypothesis(z) ∧ Data(w) → (Conducts(x, y) ∧ Tests(y, z) ∧ Gathers(y, w) ∧ DrawsConclusions(x, w)))"
    },
    {
        "NL": "Certain planets are either gas giants or ice giants.",
        "FOL": "∃x (Planet(x) ∧ (GasGiant(x) ⊕ IceGiant(x)))"
    },
    {
        "NL": "It's incorrect that each elephant that can trumpet is wild, and none of these elephants can climb.",
        "FOL": "¬∀x (Elephant(x) ∧ CanTrumpet(x) → Wild(x)) ∧ ¬∃y (Elephant(y) ∧ CanTrumpet(y) ∧ CanClimb(y))"
    },
    {
        "NL": "A chef prepares food in a kitchen, while a waiter serves food in a dining area.",
        "FOL": "∀x∀y (Chef(x) → PreparesFoodInKitchen(x)) ∧ (Waiter(y) → ServesFoodInDiningArea(y))"
    },
    {
        "NL": "Each fast car overtakes at least one vehicle that only overtakes slow vehicles.",
        "FOL": "∀x (FastCar(x) → ∃y (Overtakes(x, y) ∧ ∀z (Overtakes(y, z) → SlowVehicle(z))))"
    },
    {
        "NL": "Dogs bark but birds sing.",
        "FOL": "∀x∀y (Dog(x) ∧ Bird(y) → (Barks(x) ∧ Sings(y)))"
    },
    {
        "NL": "For a liquid to be considered a beverage, it must be safe for human consumption and intended for drinking.",
        "FOL": "∀x (Liquid(x) ∧ SafeForHumanConsumption(x) ∧ IntendedForDrinking(x) → Beverage(x))"
    },
    {
        "NL": "A museum with an art collection exhibits paintings, sculptures, or photographs.",
        "FOL": "∀x (Museum(x) ∧ HasArtCollection(x) → ExhibitsPaintings(x) ∨ ExhibitsSculptures(x) ∨ ExhibitsPhotographs(x))"
    },
    {
        "NL": "Some devices are wireless, while others require a cable connection.",
        "FOL": "∃x ∃y (Device(x) ∧ Device(y) ∧ Wireless(x) ∧ ¬Wireless(y))"
    },
    {
        "NL": "An invention is termed a telephone if it uses electric current to transmit voice.",
        "FOL": "∀x (Invention(x) ∧ UsesElectricCurrent(x) ∧ TransmitVoice(x) → Telephone(x))"
    },
    {
        "NL": "An author writes crime novels or fantasy stories.",
        "FOL": "∀x (Author(x) → (WriteCrimeNovels(x) ∨ WriteFantasyStories(x)))"
    },
    {
        "NL": "A city x experiences traffic congestion if it has a high population density and insufficient infrastructure.",
        "FOL": "∀x (City(x) ∧ HighPopulationDensity(x) ∧ InsufficientInfrastructure(x) → TrafficCongestion(x))"
    },
    {
        "NL": "A renewable energy source, such as solar or wind power, is environmentally friendly and does not deplete natural resources.",
        "FOL": "∀x (RenewableEnergySource(x) ∧ (SolarPower(x) ∨ WindPower(x)) → (EnvironmentallyFriendly(x) ∧ DoesNotDepleteNaturalResources(x)))"
    },
    {
        "NL": "A guitar has strings, a fretboard, and produces sound when played.",
        "FOL": "∀x (Guitar(x) → (HasStrings(x) ∧ HasFretboard(x) ∧ ProducesSound(x, played)))"
    },
    {
        "NL": "Each bird can fly, but not all flying things are birds.",
        "FOL": "∀x (Bird(x) → Fly(x)) ∧ ¬∀x (Fly(x) → Bird(x))"
    },
    {
        "NL": "If something is a young cat or an old dog, then it is either friendly or hostile, but not both.",
        "FOL": "∀x ((Young(x) ∧ Cat(x)) ∨ (Old(x) ∧ Dog(x)) → (Friendly(x) ⊕ Hostile(x)))"
    },
    {
        "NL": "A desert ecosystem, characterized by low rainfall and high temperatures, supports a diverse array of adapted plant and animal species that thrive in arid conditions.",
        "FOL": "∀x ∀y (DesertEcosystem(x) ∧ (LowRainfall(x) ∧ HighTemperatures(x)) ∧ (SupportsDiverseArray(x, y) ∧ AdaptedPlantAndAnimalSpecies(y)))"
    },
    {
        "NL": "A diet can be rich in protein and low in carbohydrates, or rich in carbohydrates and low in protein, but not both.",
        "FOL": "∀x (Diet(x) → ((RichInProtein(x) ∧ LowInCarbohydrates(x)) ⊕ (RichInCarbohydrates(x) ∧ LowInProtein(x))))"
    },
    {
        "NL": "When water freezes, it turns into ice and expands in volume.",
        "FOL": "∀x (Water(x) ∧ Freezes(x) → (TurnsIntoIce(x) ∧ ExpandsInVolume(x)))"
    },
    {
        "NL": "A vaccine can ward off a virus by inciting resistance against it.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ Virus(y) → (WardsOff(x, y) → IncitesResistance(x, y)))"
    },
    {
        "NL": "A form of energy that is transferred between objects with different temperatures and can cause a rise or fall in temperature is heat.",
        "FOL": "∀x (EnergyForm(x) ∧ TransferredBetweenObjects(x) ∧ DifferentTemperatures(x) ∧ CausesTemperatureChange(x) → Heat(x))"
    },
    {
        "NL": "A type of garden can be either a flower garden or a vegetable garden.",
        "FOL": "∀x (GardenType(x) → FlowerGarden(x) ⊕ VegetableGarden(x))"
    },
    {
        "NL": "Fruits and vegetables are often rich in vitamins and minerals, which are essential for maintaining good health.",
        "FOL": "∀x ∀y (Fruit(x) ∨ Vegetable(y) → (RichInVitamins(x) ∧ RichInMinerals(x) ∧ EssentialForHealth(x, y)))"
    },
    {
        "NL": "A person can be considered bilingual if they speak two languages fluently.",
        "FOL": "∀x (Person(x) ∧ SpeakTwoLanguagesFluently(x) → Bilingual(x))"
    },
    {
        "NL": "An operating system manages computer hardware resources and provides services to execute software applications.",
        "FOL": "∀x ∀y ∀z (OperatingSystem(x) ∧ ComputerHardware(y) ∧ SoftwareApplication(z) ∧ ManagesResources(x, y) ∧ ProvidesServices(x, z) → Executes(x, z))"
    },
    {
        "NL": "A tree grows taller in nutrient-rich soil, with access to sunlight and adequate water.",
        "FOL": "∀x ∀y (Tree(x) ∧ NutrientRichSoil(y) ∧ AccessToSunlight(x, y) ∧ AdequateWater(x, y) → GrowsTaller(x, y))"
    },
    {
        "NL": "A movie is a blockbuster if it generates large box office revenue or garners critical acclaim and is not an indie film.",
        "FOL": "∀x (Movie(x) ∧ ((LargeBoxOfficeRevenue(x) ∨ CriticalAcclaim(x)) ∧ ¬IndieFilm(x)) → Blockbuster(x))"
    },
    {
        "NL": "A soccer player kicks a ball, and a goalkeeper attempts to catch it.",
        "FOL": "∀x ∀y ∀z (SoccerPlayer(x) ∧ Ball(y) ∧ Goalkeeper(z) → (Kicks(x, y) ∧ AttemptsToCatch(z, y)))"
    },
    {
        "NL": "A ball is either inflated or deflated.",
        "FOL": "∀x (Ball(x) → (Inflated(x) ⊕ Deflated(x)))"
    },
    {
        "NL": "An object is considered a container if it is designed to hold, store, or preserve other objects or substances.",
        "FOL": "∀x (Object(x) ∧ DesignedToHoldOrStoreOrPreserveObjectsOrSubstances(x) → Container(x))"
    },
    {
        "NL": "A garden is beautiful if it has flowers and well-maintained lawns.",
        "FOL": "∀x (Garden(x) ∧ Flowers(x) ∧ WellMaintainedLawns(x) → Beautiful(x))"
    },
    {
        "NL": "Maria is a doctor and Claire is a nurse.",
        "FOL": "Doctor(maria) ∧ Nurse(claire)"
    },
    {
        "NL": "Spiders have eight legs, while insects have six legs.",
        "FOL": "∀x∀y (Spider(x) ∧ Insect(y) → (HasEightLegs(x) ∧ HasSixLegs(y)))"
    },
    {
        "NL": "A biologist studies bacteria, viruses, and fungi, learning about their structure, function, and interaction with other organisms.",
        "FOL": "∀x (Biologist(x) → (∃y ∃z ∃w (Bacteria(y) ∧ Virus(z) ∧ Fungus(w) ∧ Studies(x, y, z, w) ∧ LearnsStructure(x) ∧ LearnsFunction(x) ∧ LearnsInteraction(x))))"
    },
    {
        "NL": "All teachers are patient or some rabbits are cute if and only if there exists a painting which is beautiful unless there are no fairies.",
        "FOL": "(∀x (Teacher(x) → Patient(x)) ∨ ∃y (Rabbit(y) ∧ Cute(y))) ↔ (∃z (Painting(z) ∧ (Beautiful(z) ∨ ∀w (¬Fairy(w)))))"
    },
    {
        "NL": "Trees that are tall often have more branches, while short trees usually have fewer branches.",
        "FOL": "∀x (Tree(x) ∧ Tall(x) → HasMoreBranches(x)) ∧ ∀y (Tree(y) ∧ Short(y) → HasFewerBranches(y))"
    },
    {
        "NL": "A piece of clothing can be fashionable or functional, but not both tight and loose.",
        "FOL": "∀x (Clothing(x) → ((Fashionable(x) ⊕ Functional(x)) ∧ ¬(Tight(x) ∧ Loose(x))))"
    },
    {
        "NL": "If a person is a cashier, they either work in a supermarket or a convenience store.",
        "FOL": "∀x (Person(x) ∧ Cashier(x) → WorkInSupermarket(x) ⊕ WorkInConvenienceStore(x))"
    },
    {
        "NL": "A smartphone takes great photos when it has a high-resolution camera and advanced image processing.",
        "FOL": "∀x∀y∀z (Smartphone(x) ∧ Camera(y) ∧ ImageProcessing(z) ∧ HighResolution(y) ∧ Advanced(z) → TakesGreatPhotos(x))"
    },
    {
        "NL": "A mountain formation process that involves the collision of tectonic plates, the uplift of the Earth's crust, and the creation of mountain ranges is called orogeny.",
        "FOL": "∀x∀y∀z (MountainFormationProcess(x) ∧ InvolvesTectonicPlateCollision(x, y) ∧ UpliftsEarthsCrust(x, z) ∧ CreatesMountainRanges(x) → Orogeny(x))"
    },
    {
        "NL": "A film is a blockbuster if it has a captivating plot or impressive special effects, but not both.",
        "FOL": "∀x (Film(x) → (Blockbuster(x) ↔ (CaptivatingPlot(x) ⊕ ImpressiveSpecialEffects(x))))"
    },
    {
        "NL": "A powerful computer processes large amounts of data, supports advanced applications, and minimizes latency issues.",
        "FOL": "∀x∀y∀z∀w (Computer(x) ∧ Data(y) ∧ AdvancedApplications(z) ∧ LatencyIssues(w) ∧ Processes(x, y) ∧ Supports(x, z) ∧ Minimizes(x, w) → Powerful(x))"
    },
    {
        "NL": "Emily is not a scientist if and only if she is a scientist.",
        "FOL": "¬Scientist(emily) ↔ Scientist(emily)"
    },
    {
        "NL": "A blue circle refers to something.",
        "FOL": "∃x (Blue(x) ∧ Circle(x) → ∃y (Refers(x, y)))"
    },
    {
        "NL": "A scientist conducts experiments and analyzes data, then either publishes a paper or presents findings at a conference.",
        "FOL": "∀x (Scientist(x) → (ConductsExperiments(x) ∧ AnalyzesData(x) ∧ (PublishesPaper(x) ∨ PresentsFindingsAtConference(x))))"
    },
    {
        "NL": "Not all athletes participate in individual sports.",
        "FOL": "¬∀x (Athlete(x) → IndividualSport(x))"
    },
    {
        "NL": "If a restaurant serves vegan food, then it also serves vegetarian food.",
        "FOL": "∀x (Restaurant(x) ∧ ServesVegan(x) → ServesVegetarian(x))"
    },
    {
        "NL": "A laptop runs on battery power when it's not connected to an external power source.",
        "FOL": "∀x (Laptop(x) ∧ ¬ConnectedToExternalPower(x) → RunsOnBatteryPower(x))"
    },
    {
        "NL": "Every nurse is a healthcare worker, but not every healthcare worker is a nurse.",
        "FOL": "∀x (Nurse(x) → HealthcareWorker(x)) ∧ ¬∀x (HealthcareWorker(x) → Nurse(x))"
    },
    {
        "NL": "Cities with efficient public transportation systems have lower air pollution levels.",
        "FOL": "∀x (City(x) ∧ EfficientPublicTransportation(x) → LowerAirPollution(x))"
    },
    {
        "NL": "A lighthouse guides ships at sea, while a traffic light regulates traffic on roads.",
        "FOL": "∀x∀y (Lighthouse(x) ∧ TrafficLight(y) → (GuidesShips(x) ∧ RegulatesTraffic(y)))"
    },
    {
        "NL": "A tsunami is a series of large ocean waves caused by an underwater earthquake, volcanic eruption, or landslide, which can cause widespread destruction when reaching the shore.",
        "FOL": "∀x (Tsunami(x) ↔ (∃y (UnderwaterEarthquake(y) ∨ VolcanicEruption(y) ∨ Landslide(y) ∧ CausesLargeOceanWaves(x, y)) ∧ CausesWidespreadDestructionOnShore(x)))"
    },
    {
        "NL": "An event is a concert if it involves live music performances, has an audience, and features one or more artists.",
        "FOL": "∀x (Event(x) ∧ LiveMusicPerformance(x) ∧ HasAudience(x) ∧ FeaturesOneOrMoreArtists(x) → Concert(x))"
    },
    {
        "NL": "No vehicle is both a bus and a boat.",
        "FOL": "¬∃x (Vehicle(x) ∧ Bus(x) ∧ Boat(x))"
    },
    {
        "NL": "A chemical reaction is exothermic when it releases heat, while it is endothermic if it absorbs heat.",
        "FOL": "∀x (ChemicalReaction(x) ∧ (ReleasesHeat(x) ⊕ AbsorbsHeat(x)))"
    },
    {
        "NL": "An artwork is captivating if it has a visually appealing composition, evokes emotions, and displays technical mastery.",
        "FOL": "∀x (Artwork(x) → (Captivating(x) ↔ (VisuallyAppealingComposition(x) ∧ EvokesEmotions(x) ∧ TechnicalMastery(x))))"
    },
    {
        "NL": "A flower blooms when it receives sunlight and has proper nutrients, but if it's exposed to extreme cold, it withers.",
        "FOL": "∀x (Flower(x) → ((Blooms(x) ↔ (ReceivesSunlight(x) ∧ ProperNutrients(x))) ∧ ¬ExposedToExtremeCold(x)))"
    },
    {
        "NL": "A scientist studies biology or physics, but not both subjects.",
        "FOL": "∀x (Scientist(x) → (StudiesBiology(x) ⊕ StudiesPhysics(x)))"
    },
    {
        "NL": "Frequent handwashing can help prevent the spread of germs and illnesses.",
        "FOL": "∀x (FrequentHandwashing(x) → HelpsPreventSpreadOfGerms(x) ∧ HelpsPreventIllnesses(x))"
    },
    {
        "NL": "A film becomes a box-office hit if it has a compelling storyline, talented actors, and effective marketing.",
        "FOL": "∀x (Film(x) ∧ CompellingStoryline(x) ∧ TalentedActors(x) ∧ EffectiveMarketing(x) → BoxOfficeHit(x))"
    },
    {
        "NL": "A gardener cares for some plants, prunes branches, and inspects health.",
        "FOL": "∀x ∃y (Gardener(x) → Plant(y) ∧ Cares(x, y) ∧ PrunesBranches(x) ∧ InspectsHealth(x, y))"
    },
    {
        "NL": "A triangle has a right angle if one of its angles measures 90 degrees.",
        "FOL": "∀x (Triangle(x) → ∃y (Angle(y, x) ∧ RightAngle(y) ↔ Measures(y, 90)))"
    },
    {
        "NL": "People can be either introverts preferring solitude, or extroverts preferring social gatherings.",
        "FOL": "∀x (Person(x) → (Introvert(x) ∧ PreferSolitude(x)) ⊕ (Extrovert(x) ∧ PreferSocialGathering(x)))"
    },
    {
        "NL": "All yellow objects are sharp only if they are knives.",
        "FOL": "∀x (Yellow(x) → (Sharp(x) → Knife(x)))"
    },
    {
        "NL": "No author who has read every book hasn't written a review of any.",
        "FOL": "¬∃x (Author(x) ∧ ∀y (Book(y) → Read(x, y)) ∧ ¬∃z (Book(z) ∧ WrittenReview(x, z)))"
    },
    {
        "NL": "Not every book is interesting or informative.",
        "FOL": "¬∀x (Book(x) → (Interesting(x) ∨ Informative(x)))"
    },
    {
        "NL": "A place is a tundra if it is a cold, treeless region with low-growing vegetation.",
        "FOL": "∀x (Tundra(x) ↔ (Place(x) ∧ ColdRegion(x) ∧ Treeless(x) ∧ LowGrowingVegetation(x)))"
    },
    {
        "NL": "A device that is used for measuring time, has a numbered face, and uses hour and minute hands is classified as an analog clock.",
        "FOL": "∀x (Device(x) ∧ UsedForMeasuringTime(x) ∧ NumberedFace(x) ∧ HourAndMinuteHands(x) → AnalogClock(x))"
    },
    {
        "NL": "A restaurant receives a high health rating if it maintains cleanliness and stores food at appropriate temperatures.",
        "FOL": "∀x (Restaurant(x) → (HighHealthRating(x) ↔ (MaintainsCleanliness(x) ∧ StoresFoodAtAppropriateTemperatures(x))))"
    },
    {
        "NL": "Each athlete who has competed in more than one Olympics or has a gold medal, but not in both cases, is in a club unless they are a coach, in which case they manage a team.",
        "FOL": "∀x (Athlete(x) ∧ (CompetedInMoreThanOneOlympics(x) ⊕ HasGoldMedal(x)) → (InAClub(x) ∨ (Coach(x) ∧ ManagesTeam(x))))"
    },
    {
        "NL": "A pharmacist dispenses medication prescribed by doctors to patients.",
        "FOL": "∀x ∀y ∀z (Pharmacist(x) ∧ Doctor(y) ∧ Patient(z) ∧ PrescribedMedication(p) → (Prescribes(y, p, z) → Dispenses(x, p, z)))"
    },
    {
        "NL": "A lion is hunting a deer in the forest.",
        "FOL": "∃x ∃y (Lion(x) ∧ Deer(y) ∧ Hunting(x, y) ∧ InTheForest(x))"
    },
    {
        "NL": "A fridge preserves food if it is functioning correctly and is set at the right temperature.",
        "FOL": "∀x ∀y (Fridge(x) ∧ Food(y) → (FunctioningCorrectly(x) ∧ RightTemperature(x) → Preserves(x, y)))"
    },
    {
        "NL": "If a person is a chef, they must plan, prepare, and present food in a professional culinary setting.",
        "FOL": "∀x (Chef(x) → (PlansPreparesAndPresentsFood(x) ∧ InProfessionalCulinarySetting(x)))"
    },
    {
        "NL": "A fruit is inedible if it is toxic or rotten, but not if it is just unripe or has minor blemishes.",
        "FOL": "∀x (Fruit(x) ∧ (Toxic(x) ⊕ Rotten(x)) ∧ ¬Unripe(x) ∧ ¬MinorBlemishes(x) → Inedible(x))"
    },
    {
        "NL": "A doctor prescribes medication if the patient is sick.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) ∧ Sick(y) → PrescribesMedication(x, y))"
    },
    {
        "NL": "Trees produce oxygen and absorb carbon dioxide.",
        "FOL": "∀x (Tree(x) ↔ (ProduceOxygen(x) ∧ AbsorbCarbonDioxide(x)))"
    },
    {
        "NL": "No fruit is a vegetable.",
        "FOL": "¬∃x (Fruit(x) ∧ Vegetable(x))"
    },
    {
        "NL": "Every boy in the school plays soccer or is afraid of heights.",
        "FOL": "∀x (Boy(x) ∧ InTheSchool(x) → (PlaysSoccer(x) ∨ AfraidOfHeights(x)))"
    },
    {
        "NL": "An artwork that is created using digital tools, can be displayed on electronic devices, and is interactive is a digital interactive artwork.",
        "FOL": "∀x (Artwork(x) ∧ CreatedWithDigitalTools(x) ∧ DisplayedOnElectronicDevices(x) ∧ Interactive(x) → DigitalInteractiveArtwork(x))"
    },
    {
        "NL": "All cars need fuel to run.",
        "FOL": "∀x (Car(x) → NeedsFuelToRun(x))"
    },
    {
        "NL": "A phone is a smartphone if it can access the internet, run applications, and has a touchscreen interface.",
        "FOL": "∀x (Phone(x) ∧ Smartphone(x) ↔ (AccessInternet(x) ∧ RunApplications(x) ∧ TouchscreenInterface(x)))"
    },
    {
        "NL": "In a marine ecosystem, algae produce oxygen through photosynthesis, while fish and other marine life depend on this oxygen for survival.",
        "FOL": "∀x∀y (MarineEcosystem(x) ∧ Algae(y) ∧ ProducesOxygenThroughPhotosynthesis(y) → DependsOnOxygenForSurvival(x, y))"
    },
    {
        "NL": "Not every student is either a freshman or a senior.",
        "FOL": "¬∀x (Student(x) → (Freshman(x) ∨ Senior(x)))"
    },
    {
        "NL": "A plant needs water, sunlight, and nutrients to grow.",
        "FOL": "∀x (Plant(x) → (NeedsWater(x) ∧ NeedsSunlight(x) ∧ NeedsNutrients(x)))"
    },
    {
        "NL": "A spider spins a web to catch prey and has eight legs.",
        "FOL": "∀x (Spider(x) → (SpinsWeb(x) ∧ CatchesPrey(x) ∧ HasEightLegs(x)))"
    },
    {
        "NL": "A style of cooking that originates from a specific region, utilizes local ingredients, and reflects cultural traditions is a cuisine.",
        "FOL": "∀x∀y (StyleOfCooking(x) ∧ OriginatesFromRegion(x, y) ∧ UtilizesLocalIngredients(x) ∧ ReflectsCulturalTraditions(x) → Cuisine(x))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the Earth and the sun, while a lunar eclipse occurs when the Earth passes between the moon and the sun.",
        "FOL": "∀x∀y (SolarEclipse(x) ∧ LunarEclipse(y) → (MoonBetweenEarthAndSun(x) ∧ EarthBetweenMoonAndSun(y)))"
    },
    {
        "NL": "A device is a telescope if it collects and focuses light, magnifies distant objects, and is used for observing celestial objects.",
        "FOL": "∀x∀y∀z (Device(x) ∧ CollectsAndFocusesLight(x, y) ∧ MagnifiesDistantObjects(x, z) ∧ UsedForObservingCelestialObjects(x, y, z) → Telescope(x))"
    },
    {
        "NL": "All objects which are either a shiny diamond or a dull cube point to something that is either bright or dark.",
        "FOL": "∀x ((Shiny(x) ∧ Diamond(x)) ∨ (Dull(x) ∧ Cube(x)) → ∃y ((Bright(y) ∨ Dark(y)) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "There is no room that all people are in if and only if there is a room that no person is in.",
        "FOL": "¬∃x (Room(x) ∧ ∀y (Person(y) → In(y, x))) ↔ ∃z (Room(z) ∧ ∀w (Person(w) → ¬In(z, w)))"
    },
    {
        "NL": "Some dogs are either poodles or bulldogs, but not both.",
        "FOL": "∃x (Dog(x) ∧ (Poodle(x) ⊕ Bulldog(x)))"
    },
    {
        "NL": "In a food web, primary producers obtain energy from the sun, primary consumers feed on primary producers, and secondary consumers feed on primary consumers, maintaining the flow of energy through the ecosystem.",
        "FOL": "∀x∀y∀z (Ecosystem(x) ∧ PrimaryProducer(y) ∧ PrimaryConsumer(z) → (ObtainsEnergyFromSun(y) ∧ FeedsOnPrimaryProducer(z, y) ∧ FeedsOnSecondaryConsumer(x, z)))"
    },
    {
        "NL": "A circle has constant curvature, while a polygon has straight edges.",
        "FOL": "∀x ∀y (Circle(x) ∧ Polygon(y) → (ConstantCurvature(x) ∧ StraightEdges(y)))"
    },
    {
        "NL": "No one in the stadium knows Jackson.",
        "FOL": "¬∃x (Person(x) ∧ InStadium(x) ∧ (Know(x, jackson)))"
    },
    {
        "NL": "Every book is either fiction or nonfiction.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "Daniel is a plumber and Rachel is an architect.",
        "FOL": "Plumber(daniel) ∧ Architect(rachel)"
    },
    {
        "NL": "A mammal is considered a marine mammal if it lives primarily in the ocean and is adapted to its environment.",
        "FOL": "∀x (Mammal(x) ∧ MarineMammal(x) ↔ (LivesInOcean(x) ∧ AdaptedToEnvironment(x)))"
    },
    {
        "NL": "Either the door is open, or it is locked, but not both.",
        "FOL": "∃x (Door(x) ∧ ((Open(x) ∨ Locked(x)) ∧ ¬(Open(x) ∧ Locked(x))))"
    },
    {
        "NL": "A skilled painter can create realistic landscapes using different techniques and color palettes.",
        "FOL": "∀a (Painter(a) ∧ Skilled(a) → ∃t ∃c (Technique(t) ∧ ColorPalette(c) ∧ CreatesRealisticLandscapes(a, t, c)))"
    },
    {
        "NL": "Every star is distant and burning and bright.",
        "FOL": "∀x (Star(x) → (Distant(x) ∧ Burning(x) ∧ Bright(x)))"
    },
    {
        "NL": "An exhibition is successful in attracting visitors when it features unique artwork and is well-curated, but its appeal might be limited if the location is difficult to access or the admission fee is too expensive.",
        "FOL": "∀x (Exhibition(x) → (SuccessfulInAttractingVisitors(x) ↔ ((UniqueArtwork(x) ∧ WellCurated(x)) ∧ ¬(DifficultToAccessLocation(x) ∨ ExpensiveAdmissionFee(x)))))"
    },
    {
        "NL": "A plant that loses its leaves during autumn and regrows them in spring is deciduous.",
        "FOL": "∀x (Plant(x) ∧ LosesLeavesInAutumn(x) ∧ RegrowsLeavesInSpring(x) → Deciduous(x))"
    },
    {
        "NL": "A solar panel exposed to sunlight generates electricity by converting the sun's energy into electrical energy.",
        "FOL": "∀x∀y (SolarPanel(x) ∧ ExposedToSunlight(x, y) → GeneratesElectricity(x) ∧ ConvertsEnergy(x, y))"
    },
    {
        "NL": "A television displays images by emitting light through pixels.",
        "FOL": "∀x (Television(x) → (DisplaysImages(x) ∧ EmitsLightThroughPixels(x)))"
    },
    {
        "NL": "A healthy adult requires sleep and physical activity, while excessive consumption of alcohol and tobacco should be avoided.",
        "FOL": "∀x (Adult(x) ∧ Healthy(x) → (RequiresSleep(x) ∧ PhysicalActivity(x) ∧ ¬ExcessiveAlcoholConsumption(x) ∧ ¬ExcessiveTobaccoConsumption(x)))"
    },
    {
        "NL": "A supermarket offers groceries and household items.",
        "FOL": "∀x (Supermarket(x) → (OffersGroceries(x) ∧ OffersHouseholdItems(x)))"
    },
    {
        "NL": "A store provides a discount on products if a customer buys in bulk or has a loyalty card, but not if the product is already on sale.",
        "FOL": "∀x∀y∀z (Store(x) ∧ Customer(y) ∧ Product(z) → (Discount(x, z, y) ↔ ((BuysInBulk(y, z) ∨ HasLoyaltyCard(y)) ∧ ¬OnSale(z))))"
    },
    {
        "NL": "Effective communication is enhanced by active listening, clear expression, and open-mindedness.",
        "FOL": "∀x (Communication(x) → (Effective(x) ↔ (ActiveListening(x) ∧ ClearExpression(x) ∧ OpenMindedness(x))))"
    },
    {
        "NL": "A car is considered a sports car if it has high performance, two doors, and often a sleek design.",
        "FOL": "∀x (Car(x) → HighPerformance(x) ∧ HasTwoDoors(x) ∧ SleekDesign(x) → SportsCar(x))"
    },
    {
        "NL": "It is not correct that a bird is flying if it accompanies a fast bird.",
        "FOL": "¬∀x ∃y (Fast(y) ∧ Accompanies(x, y) → Flying(x))"
    },
    {
        "NL": "No passenger on the ship likes either tea or coffee.",
        "FOL": "∀x (Passenger(x) ∧ OnShip(x) → ¬(Like(x, tea) ∨ Like(x, coffee)))"
    },
    {
        "NL": "A kite is lightweight, while a rock is heavy.",
        "FOL": "∀x ∀y (Kite(x) ∧ Rock(y) → (Lightweight(x) ⊕ Heavy(y)))"
    },
    {
        "NL": "Persistent managers are not lazy.",
        "FOL": "∀x (Manager(x) ∧ Persistent(x) → ¬Lazy(x))"
    },
    {
        "NL": "All squares are blue.",
        "FOL": "∀x (Square(x) → Blue(x))"
    },
    {
        "NL": "A vehicle is considered eco-friendly if it runs on electricity or produces low emissions.",
        "FOL": "∀x (Vehicle(x) ∧ (RunsOnElectricity(x) ∨ LowEmissions(x)) → EcoFriendly(x))"
    },
    {
        "NL": "A laptop, equipped with a battery, can operate without being connected to a power source when the battery is charged.",
        "FOL": "∀x (Laptop(x) ∧ BatteryEquipped(x) ∧ ChargedBattery(x) → CanOperateWithoutPowerSource(x))"
    },
    {
        "NL": "A musical instrument is considered a string instrument if it has strings that are plucked, struck, or bowed to produce sound.",
        "FOL": "∀x∀y (MusicalInstrument(x) ∧ (Plucked(y) ∨ Struck(y) ∨ Bowed(y)) ∧ Strings(x, y) → StringInstrument(x))"
    },
    {
        "NL": "An animal that hunts and feeds on other animals is a predator.",
        "FOL": "∀x∀y (Animal(x) ∧ Animal(y) ∧ Hunts(x, y) ∧ FeedsOn(x, y) → Predator(x))"
    },
    {
        "NL": "If a person is a writer, then they are either successful or unsuccessful, but not both.",
        "FOL": "∀x (Writer(x) → (Successful(x) ⊕ Unsuccessful(x)))"
    },
    {
        "NL": "A computer system that employs a certain processing architecture, runs a specific operating system, and is designed for a particular use case, usually falls into the category of desktop or laptop computers.",
        "FOL": "∀x∀y∀z∀w (ComputerSystem(x) ∧ EmploysArchitecture(x, y) ∧ RunsOperatingSystem(x, z) ∧ DesignedForUseCase(x, w) → (DesktopComputer(x) ∨ LaptopComputer(x)))"
    },
    {
        "NL": "A computer program that learns from data, adapts to new information, and improves its performance over time demonstrates properties of machine learning.",
        "FOL": "∀x∀y∀z (ComputerProgram(x) ∧ LearnsFromData(x, y) ∧ AdaptsToNewInformation(x, z) ∧ ImprovesPerformanceOverTime(x) → MachineLearning(x))"
    },
    {
        "NL": "A museum displays art or historical artifacts and is open to the public, but it is not a shopping mall.",
        "FOL": "∀x (Museum(x) ↔ (Displays(x, art) ∨ Displays(x, historicalArtifacts) ∧ OpenToPublic(x) ∧ ¬ShoppingMall(x)))"
    },
    {
        "NL": "A building can either be a residential building, such as an apartment, or a commercial building, like a shopping mall, but not both at the same time.",
        "FOL": "∀x (Building(x) → (ResidentialBuilding(x) ⊕ CommercialBuilding(x))) ∧ ∀y (Apartment(y) → ResidentialBuilding(y)) ∧ ∀z (ShoppingMall(z) → CommercialBuilding(z))"
    },
    {
        "NL": "A language is considered endangered if its number of speakers is declining and it is not being taught to children.",
        "FOL": "∀x (Language(x) ∧ DecliningSpeakers(x) ∧ ¬TaughtToChildren(x) → Endangered(x))"
    },
    {
        "NL": "An individual is classified as a singer if they can perform songs.",
        "FOL": "∀x (Individual(x) ∧ PerformSongs(x) → Singer(x))"
    },
    {
        "NL": "If a food is a dessert, it is typically sweet and consumed at the end of a meal.",
        "FOL": "∀x (Dessert(x) → (IsSweet(x) ∧ ConsumedAtEndOfMeal(x)))"
    },
    {
        "NL": "A lock can be opened with a key or a combination, but it cannot be opened with a fingerprint or a card.",
        "FOL": "∀x (Lock(x) → ((HasKey(y) ∨ HasCombination(y)) → Opens(x, y))) ∧ ¬((HasFingerprint(y) ∨ HasCard(y)) → Opens(x, y))"
    },
    {
        "NL": "Mushrooms grow in moist environments, while cacti thrive in arid environments, and ferns grow in shaded areas.",
        "FOL": "∀x ∀y ∀z (Mushroom(x) ∧ Cactus(y) ∧ Fern(z) → (GrowsInMoist(x) ∧ ThrivesInArid(y) ∧ GrowsInShaded(z)))"
    },
    {
        "NL": "A scientific theory is plausible if it is consistent with existing data and either has been peer-reviewed or is supported by empirical evidence, but not if it is based on unverifiable assumptions.",
        "FOL": "∀x (ScientificTheory(x) → (Plausible(x) ↔ (ConsistentWithData(x) ∧ ((PeerReviewed(x) ∨ EmpiricalEvidence(x)) ∧ ¬UnverifiableAssumptions(x)))))"
    },
    {
        "NL": "A university course is popular among students if it has an engaging professor and is relevant to their major, but not if it is scheduled at an inconvenient time or has a reputation for being difficult.",
        "FOL": "∀x (Course(x) ∧ PopularAmongStudents(x) ↔ (EngagingProfessor(x) ∧ RelevantToMajor(x) ∧ ¬InconvenientTime(x) ∧ ¬ReputationForDifficulty(x)))"
    },
    {
        "NL": "A wetland is a transitional ecosystem between aquatic and terrestrial habitats, characterized by saturated or inundated soils, distinctive vegetation types, and providing essential ecosystem services such as water purification and flood control.",
        "FOL": "∀x (Wetland(x) → (TransitionalEcosystem(x) ∧ AquaticAndTerrestrialHabitats(x) ∧ SaturatedSoils(x) ∧ InundatedSoils(x) ∧ DistinctiveVegetation(x) ∧ ProvidesWaterPurification(x) ∧ ProvidesFloodControl(x)))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote and express their opinions freely.",
        "FOL": "∀x (Democracy(x) ∧ Citizen(y) → (RightToVote(y) ∧ FreeExpression(y)))"
    },
    {
        "NL": "A type of computer program that replicates itself and spreads from one system to another, causing harm to the host systems, is referred to as a computer virus.",
        "FOL": "∀x (ComputerProgram(x) ∧ ReplicatesItself(x) ∧ SpreadsToSystems(x) ∧ CausesHarm(x) → ComputerVirus(x))"
    },
    {
        "NL": "A job is remote if it doesn't require physical presence and has flexible hours.",
        "FOL": "∀x (Job(x) ∧ ¬PhysicalPresenceRequired(x) ∧ FlexibleHours(x) → Remote(x))"
    },
    {
        "NL": "A person is considered a mediator if they help resolve conflicts and facilitate communication between parties.",
        "FOL": "∀x (HelpsResolveConflictsAndFacilitatesCommunication(x) → Mediator(x))"
    },
    {
        "NL": "There exists a hexagon that binds to all tiny rectangles.",
        "FOL": "∃x (Hexagon(x) ∧ ∀y (Tiny(y) ∧ Rectangle(y) → BindsTo(x, y)))"
    },
    {
        "NL": "A product that is not eco-friendly, has a short lifespan, or is difficult to use is not a preferred purchase for environmentally conscious consumers.",
        "FOL": "∀x (Product(x) ∧ (¬EcoFriendly(x) ∨ ShortLifespan(x) ∨ DifficultToUse(x)) → ¬PreferredPurchase(x))"
    },
    {
        "NL": "Books in foreign languages can be useful for language learners, yet intimidating for beginners.",
        "FOL": "∀x (Book(x) ∧ ForeignLanguage(x) → (UsefulForLanguageLearners(x) ⊕ IntimidatingForBeginners(x)))"
    },
    {
        "NL": "A person is a painter if they are skilled in the application of paints to a surface to create an artistic composition.",
        "FOL": "∀x (Painter(x) ↔ (Person(x) ∧ SkilledInPaintApplication(x) ∧ CreatesArtisticComposition(x)))"
    },
    {
        "NL": "Exercising regularly contributes to a healthy lifestyle.",
        "FOL": "∀x (ExercisesRegularly(x) → ContributesToHealthyLifestyle(x))"
    },
    {
        "NL": "A store may offer discounts to customers who are senior citizens or students, but not to those who are both.",
        "FOL": "∀x ∀y (Store(x) ∧ Customer(y) → (OfferDiscount(x, y) ↔ (SeniorCitizen(y) ⊕ Student(y))))"
    },
    {
        "NL": "A workout is effective for weight loss if it burns many calories or builds muscle, but not if it is too easy.",
        "FOL": "∀x (Workout(x) → ((BurnsManyCalories(x) ∨ BuildsMuscle(x)) ∧ ¬TooEasy(x)) ↔ EffectiveForWeightLoss(x))"
    },
    {
        "NL": "A bird is flying above a tree.",
        "FOL": "∃x ∃y (Bird(x) ∧ Tree(y) ∧ FlyingAbove(x, y))"
    },
    {
        "NL": "An earthquake occurs when energy stored in the Earth's crust is suddenly released, causing the ground to shake.",
        "FOL": "∀x (Earthquake(x) → (EnergyStoredInEarthCrust(x) ∧ SuddenReleaseOfEnergy(x) ∧ CausesGroundToShake(x)))"
    },
    {
        "NL": "If every artist who has a fan base will perform, then a few artists who are not signed will also perform.",
        "FOL": "∀x (Artist(x) ∧ FanBase(x) → Perform(x)) → ∃y (Artist(y) ∧ ¬Signed(y) ∧ Perform(y))"
    },
    {
        "NL": "An artist is painting in a studio.",
        "FOL": "∃x ∃y (Artist(x) ∧ Painting(x) ∧ Studio(y) ∧ In(x, y))"
    },
    {
        "NL": "There exists a fruit that all fruits are compared to, if no animals are domesticated.",
        "FOL": "¬∀x (Animal(x) → Domesticated(x)) → ∃y (Fruit(y) ∧ ∀z (Fruit(z) → ComparedTo(z, y)))"
    },
    {
        "NL": "Only fruits containing seeds are classified as angiosperms.",
        "FOL": "∀x (Fruit(x) ∧ ContainsSeeds(x) → Angiosperm(x))"
    },
    {
        "NL": "All books are either new or old, but not both.",
        "FOL": "∀x (Book(x) → (New(x) ⊕ Old(x)))"
    },
    {
        "NL": "A house is considered eco-friendly when it utilizes solar panels, has efficient insulation, and conserves water.",
        "FOL": "∀x (House(x) → (UtilizesSolarPanels(x) ∧ EfficientInsulation(x) ∧ ConservesWater(x) → EcoFriendly(x)))"
    },
    {
        "NL": "A school teaches mathematics, while another school teaches physics.",
        "FOL": "∃x ∃y (School(x) ∧ Mathematics(y) ∧ Teach(x, y)) ∧ ∃z ∃w (School(z) ∧ Physics(w) ∧ Teach(z, w))"
    },
    {
        "NL": "A man is reading a newspaper at the park, while a woman is cooking a meal at the kitchen.",
        "FOL": "∃x ∃y (Man(x) ∧ Newspaper(y) ∧ Reading(x, y) ∧ AtThePark(x)) ∧ ∃z ∃w (Woman(z) ∧ Meal(w) ∧ Cooking(z, w) ∧ AtTheKitchen(z))"
    },
    {
        "NL": "A restaurant serves either vegetarian or non-vegetarian dishes, but not both.",
        "FOL": "∀x (Restaurant(x) → (VegetarianDishes(x) ⊕ NonVegetarianDishes(x)))"
    },
    {
        "NL": "A machine that can wash clothes is a washing machine, while a machine that can dry clothes is a dryer.",
        "FOL": "∀x (Machine(x) → ((CanWashClothes(x) → WashingMachine(x)) ∧ (CanDryClothes(x) → Dryer(x))))"
    },
    {
        "NL": "Trains must stop at all stations along their route.",
        "FOL": "∀x (Train(x) → StopAtAllStations(x))"
    },
    {
        "NL": "A mail carrier delivers packages to recipients, except on Sundays.",
        "FOL": "∀x ∀y ∀z (MailCarrier(x) ∧ Package(y) ∧ Recipient(z) ∧ ¬Sunday(x) → Delivers(x, y, z))"
    },
    {
        "NL": "A dog can be a bulldog or love chewing bones, but not both.",
        "FOL": "∀x (Bulldog(x) ⊕ LoveChewingBones(x))"
    },
    {
        "NL": "A painting's value increases with its age and the reputation of the artist.",
        "FOL": "∀x ∀y ∀z (Painting(x) → (Age(x, y) ∧ ArtistReputation(x, z) → IncreasedValue(x)))"
    },
    {
        "NL": "A vehicle may be a car or a motorcycle but not both.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Motorcycle(x)))"
    },
    {
        "NL": "Herbivores eat plants for sustenance, while carnivores consume other animals as their primary source of nutrients.",
        "FOL": "∀x∀y (Herbivore(x) ∧ Carnivore(y) → (EatsPlants(x) ∧ ConsumesOtherAnimals(y)))"
    },
    {
        "NL": "An organism is a carnivore if it primarily consumes other animals, has a digestive system adapted to breaking down animal protein, and possesses specialized hunting or trapping mechanisms.",
        "FOL": "∀x∀y∀z (Organism(x) ∧ PrimarilyConsumes(x, y) ∧ Animal(y) ∧ DigestiveSystemAdapted(x, z) ∧ BreakingDownAnimalProtein(z) ∧ (SpecializedHunting(x) ∨ TrappingMechanisms(x)) → Carnivore(x))"
    },
    {
        "NL": "Some meals are either vegetarian or non-vegetarian.",
        "FOL": "∃x (Meal(x) ∧ (Vegetarian(x) ⊕ NonVegetarian(x)))"
    },
    {
        "NL": "A weather event is classified as a hurricane if it has high wind speeds, forms over warm ocean waters, and exhibits a rotating storm system.",
        "FOL": "∀x (WeatherEvent(x) → (HighWindSpeeds(x) ∧ FormsOverWarmOceanWaters(x) ∧ RotatingStormSystem(x) → Hurricane(x)))"
    },
    {
        "NL": "A train leaves from its station of origin and arrives at its destination station without stopping at any station along the way.",
        "FOL": "∃x ∃y ∃z (Train(x) ∧ OriginStation(y) ∧ DestinationStation(z) → LeavesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Station(w) ∧ Between(w, y, z) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A camera captures light through a lens and records the image on a light-sensitive surface, such as film or a digital sensor.",
        "FOL": "∀x∀y∀z (Camera(x) → (CapturesLight(x) ∧ ThroughLens(x, y) ∧ Lens(y) ∧ RecordsImage(x, z) ∧ (LightSensitiveSurface(z) ∧ (Film(z) ∨ DigitalSensor(z)))))"
    },
    {
        "NL": "Every blue sphere is touching some red cubes.",
        "FOL": "∀x ((Sphere(x) ∧ Blue(x)) → ∃y (Red(y) ∧ Cube(y) ∧ Touching(x, y)))"
    },
    {
        "NL": "A book is a bestseller when it sells a large number of copies and receives widespread acclaim.",
        "FOL": "∀x (Book(x) → (Bestseller(x) ↔ (SellsLargeNumberOfCopies(x) ∧ ReceivesWidespreadAcclaim(x))))"
    },
    {
        "NL": "A student fails a course if they do not attend classes or fail the final exam.",
        "FOL": "∀x ∀y (Student(x) ∧ Course(y) ∧ (¬AttendsClasses(x, y) ∨ FailsFinalExam(x, y)) → FailsCourse(x, y))"
    },
    {
        "NL": "A person can be a vegan, or enjoy listening Mozart, but not both",
        "FOL": "∀x (Vegan(x) ⊕ EnjoyListeningMozart(x))"
    },
    {
        "NL": "All number systems are not irrational.",
        "FOL": "∀x (NumberSystem(x) → ¬Irrational(x))"
    },
    {
        "NL": "A person who cooks for a living is a chef.",
        "FOL": "∀x (Person(x) ∧ CooksForALiving(x) → Chef(x))"
    },
    {
        "NL": "A computer can be a laptop, which is portable, or a desktop, which is stationary.",
        "FOL": "∀x (Computer(x) → (Laptop(x) ∧ Portable(x)) ∨ (Desktop(x) ∧ Stationary(x)))"
    },
    {
        "NL": "If all competitors who will be shortlisted are university graduates, then some candidates will not be shortlisted.",
        "FOL": "∀x (Competitor(x) ∧ Shortlisted(x) → UniversityGraduate(x)) → ∃y (Candidate(y) ∧ ¬Shortlisted(y))"
    },
    {
        "NL": "A meal is satisfying if it is flavorful, has a variety of textures, and leaves you feeling full.",
        "FOL": "∀x (Meal(x) ∧ Flavorful(x) ∧ VarietyOfTextures(x) ∧ FeelingFull(x) → Satisfying(x))"
    },
    {
        "NL": "A play that is a tragedy can move spectators.",
        "FOL": "∀x ∀y (Play(x) ∧ Tragedy(x) ∧ Spectator(y) → CanMove(x, y))"
    },
    {
        "NL": "All entities will cease to exist at some point.",
        "FOL": "∀x (Entity(x) → WillCeaseToExistAtSomePoint(x))"
    },
    {
        "NL": "A vehicle offers a smooth ride when its suspension system is well-tuned, the tires are properly inflated, and the road surface is even.",
        "FOL": "∀x∀y∀z∀w (Vehicle(x) ∧ SuspensionSystem(y) ∧ Tires(z) ∧ RoadSurface(w) ∧ WellTuned(y) ∧ ProperlyInflated(z) ∧ Even(w) → SmoothRide(x))"
    },
    {
        "NL": "There is a deep river, and there is a high mountain.",
        "FOL": "∃x (Deep(x) ∧ River(x)) ∧ ∃x (High(x) ∧ Mountain(x))"
    },
    {
        "NL": "A chemical reaction is exothermic if it releases heat to the surroundings, while it is endothermic if it absorbs heat.",
        "FOL": "∀x (ChemicalReaction(x) ∧ (ReleasesHeat(x) → Exothermic(x)) ∧ (AbsorbsHeat(x) → Endothermic(x)))"
    },
    {
        "NL": "All foods are healthy if they are either vegan or gluten-free, and not all of them are affordable.",
        "FOL": "¬∃x (Food(x) ∧ Healthy(x) ∨ (Vegan(x) ∨ GlutenFree(x))) ∧ ¬∀y (Food(y) → Affordable(y))"
    },
    {
        "NL": "A sport can be individual, team-based, or extreme.",
        "FOL": "∀x (Sport(x) → (Individual(x) ∨ TeamBased(x) ∨ Extreme(x)))"
    },
    {
        "NL": "A location with no cellular signal is remote.",
        "FOL": "∀x (Location(x) ∧ ¬CellularSignal(x) → Remote(x))"
    },
    {
        "NL": "Everyone who John admires does not admire him back.",
        "FOL": "∀x (Person(x) ∧ Admire(John,x) → ¬Admire(x, John))"
    },
    {
        "NL": "A poem that is a sonnet can inspire readers.",
        "FOL": "∀x ∀y (Poem(x) ∧ Sonnet(x) ∧ Reader(y) → CanInspire(x, y))"
    },
    {
        "NL": "A chair has legs and a seat, while a table has legs and a flat surface, but a lamp has a base and a light source.",
        "FOL": "∀x (Chair(x) → (HasLegs(x) ∧ HasSeat(x))) ∧ (Table(x) → (HasLegs(x) ∧ HasFlatSurface(x))) ∧ (Lamp(x) → (HasBase(x) ∧ HasLightSource(x)))"
    },
    {
        "NL": "If a computer is a laptop, it has a built-in display, keyboard, and battery.",
        "FOL": "∀x (Computer(x) ∧ Laptop(x) → HasBuiltInDisplay(x) ∧ HasBuiltInKeyboard(x) ∧ HasBuiltInBattery(x))"
    },
    {
        "NL": "A refrigerator preserves perishable items by maintaining a consistently low temperature, slowing down the growth of microorganisms and delaying spoilage.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ PerishableItem(y) → (PreservesItem(x, y) ∧ MaintainsLowTemperature(x) ∧ SlowsDownMicroorganismGrowth(x, y) ∧ DelaysSpoilage(x, y)))"
    },
    {
        "NL": "An object is blue if and only if it points to at least one green object.",
        "FOL": "∀x (Blue(x) ↔ ∃y (Green(y) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "A phone call can be made using a landline or a mobile phone, but not with a television or a radio.",
        "FOL": "∀x ∀y (Landline(x) ∨ MobilePhone(x) → PhoneCall(y, x)) ∧ ¬(Television(x) ∨ Radio(x) → PhoneCall(y, x))"
    },
    {
        "NL": "A refrigerator preserves food by maintaining a cool temperature, using a compressor to circulate refrigerant through a system of coils.",
        "FOL": "∀x∀y∀z (Refrigerator(x) → (PreservesFood(x) ∧ MaintainsCoolTemperature(x) ∧ UsesCompressor(x, y) ∧ CirculatesRefrigerant(x, y, z) ∧ SystemOfCoils(z)))"
    },
    {
        "NL": "A chef can cook a dish if they know the recipe and have the ingredients.",
        "FOL": "∀x∀y (Chef(x) ∧ Dish(y) ∧ KnowsRecipe(x, y) ∧ HasIngredients(x, y) → CanCook(x, y))"
    },
    {
        "NL": "A mechanic is repairing a car in the garage, or an architect is drawing a blueprint in the office.",
        "FOL": "∃x ∃y (Mechanic(x) ∧ Car(y) ∧ Repairing(x, y) ∧ InTheGarage(x)) ∨ ∃z ∃w (Architect(z) ∧ Blueprint(w) ∧ Drawing(z, w) ∧ InTheOffice(z))"
    },
    {
        "NL": "A durable backpack with multiple compartments and comfortable straps is ideal for students or outdoor enthusiasts.",
        "FOL": "∀x (Backpack(x) ∧ Durable(x) ∧ MultipleCompartments(x) ∧ ComfortableStraps(x) → (IdealForStudents(x) ∨ IdealForOutdoorEnthusiasts(x)))"
    },
    {
        "NL": "Fish swim in water using their fins.",
        "FOL": "∀x (Fish(x) → (SwimsInWater(x) ∧ UsesFins(x)))"
    },
    {
        "NL": "A car moves if it has fuel and is in good condition.",
        "FOL": "∀z (Car(z) ∧ (HasFuel(z) ∧ GoodCondition(z)) → Moves(z))"
    },
    {
        "NL": "Every individual either studies mathematics or enjoys painting, but not both.",
        "FOL": "∀x (Mathematics(x) ⊕ EnjoyPainting(x))"
    },
    {
        "NL": "A restaurant serves either vegan or non-vegan dishes, and may offer gluten-free options as well.",
        "FOL": "∀x (Restaurant(x) → ((ServesVegan(x) ⊕ ServesNonVegan(x)) ∧ (OffersGlutenFree(x) ∨ ¬OffersGlutenFree(x))))"
    },
    {
        "NL": "Pandas eat bamboo and sleep a lot.",
        "FOL": "∀x (Panda(x) → (EatBamboo(x) → SleepsAlot(x)))"
    },
    {
        "NL": "Poisonous substances can cause harm or death when ingested.",
        "FOL": "∀x (Poisonous(x) → (CausesHarmWhenIngested(x) ∨ CausesDeathWhenIngested(x)))"
    },
    {
        "NL": "A cellphone has a screen and a battery.",
        "FOL": "∀x (Cellphone(x) → (Screen(x) ∧ Battery(x)))"
    },
    {
        "NL": "An ice cream is dairy-free if it contains no milk products and is made from plant-based ingredients.",
        "FOL": "∀x∀y (IceCream(x) ∧ PlantBasedIngredients(y) → (DairyFree(x) ↔ (¬ContainsMilkProducts(x) ∧ MadeFrom(x, y))))"
    },
    {
        "NL": "Dogs are not reptiles.",
        "FOL": "∀x (Dog(x) → ¬Reptile(x))"
    },
    {
        "NL": "Not every baker is either a confectioner or a pizzaiolo.",
        "FOL": "¬∀x (Baker(x) → (Confectioner(x) ∨ Pizzaiolo(x)))"
    },
    {
        "NL": "Insects with wings can fly, while those without wings cannot.",
        "FOL": "∀x (Insect(x) → (HasWings(x) → CanFly(x)) ∧ (¬HasWings(x) → ¬CanFly(x)))"
    },
    {
        "NL": "An electronic device that uses a touch screen for input and can connect to the internet is a smartphone.",
        "FOL": "∀x (ElectronicDevice(x) ∧ TouchScreenInput(x) ∧ ConnectsToInternet(x) → Smartphone(x))"
    },
    {
        "NL": "Some music is either classical or modern.",
        "FOL": "∃x (Music(x) ∧ (Classical(x) ⊕ Modern(x)))"
    },
    {
        "NL": "A compelling novel weaves an intricate narrative, develops multidimensional characters, and maintains a consistent pacing throughout the story.",
        "FOL": "∀x (Novel(x) ∧ IntricateNarrative(x) ∧ MultidimensionalCharacters(x) ∧ ConsistentPacing(x) → Compelling(x))"
    },
    {
        "NL": "A botanical garden preserves diverse species of flowers and trees while providing opportunities for botanical studies and eco-tourism.",
        "FOL": "∀x ∃y ∃z (BotanicalGarden(x) → (FlowerSpecies(y) ∧ TreeSpecies(z) ∧ Preserves(x, y) ∧ Preserves(x, z) ∧ ProvidesBotanicalStudyOpportunities(x) ∧ ProvidesEcoTourismOpportunities(x)))"
    },
    {
        "NL": "A train station serves multiple routes, including local, regional, and long-distance, and offers amenities like ticket offices, restrooms, and waiting areas.",
        "FOL": "∀x (TrainStation(x) ∧ (LocalRoutes(x) ∨ RegionalRoutes(x) ∨ LongDistanceRoutes(x)) → OffersAmenities(x))"
    },
    {
        "NL": "A computer x can execute a program y if x has a compatible operating system and sufficient hardware resources to run y.",
        "FOL": "∀x ∀y (Computer(x) ∧ Program(y) ∧ CompatibleOperatingSystem(x, y) ∧ SufficientHardwareResources(x, y) → CanExecute(x, y))"
    },
    {
        "NL": "There is a school all students aspire to, given that not all universities are prestigious.",
        "FOL": "¬∀x (University(x) → Prestigious(x)) → ∃y (School(y) ∧ ∀z (Student(z) → AspiresTo(z, y)))"
    },
    {
        "NL": "A dog is in the garden with a red ball.",
        "FOL": "∃x (Dog(x) ∧ IntheGarden(x) ∧ WithRedBall(x))"
    },
    {
        "NL": "In a football match, a team scores a goal when a player kicks the ball into the opponent's net without any rule violations.",
        "FOL": "∀x∀y∀z∀w (FootballMatch(x) ∧ Team(y) ∧ Player(z) ∧ Ball(w) ∧ KicksIntoNet(z, w) ∧ ¬RuleViolations(z) → ScoresGoal(y, x))"
    },
    {
        "NL": "A device is a computer if it can perform complex calculations, store data, and execute instructions.",
        "FOL": "∀x (Device(x) ∧ PerformsComplexCalculations(x) ∧ StoresData(x) ∧ ExecutesInstructions(x) → Computer(x))"
    },
    {
        "NL": "No animals are carnivorous or herbivorous.",
        "FOL": "¬∀x (Animal(x) → (Carnivorous(x) ∨ Herbivorous(x)))"
    },
    {
        "NL": "Triangles, squares, and pentagons are polygons if they have three, four, and five sides, respectively.",
        "FOL": "Sides(Triangle, 3) ∧ Sides(Square, 4) ∧ Sides(Pentagon, 5) → Polygons(Triangle, Square, Pentagon)"
    },
    {
        "NL": "In a library, a collection of printed or digital materials organized by subject or author is called a catalog.",
        "FOL": "∀x (LibraryCollection(x) ∧ OrganizedBySubjectOrAuthor(x) → Catalog(x))"
    },
    {
        "NL": "A park is relaxing if it has green spaces and either a pond or a playground, but not if it's too crowded.",
        "FOL": "∀x (Park(x) ∧ GreenSpaces(x) ∧ (Pond(x) ∨ Playground(x)) ∧ ¬TooCrowded(x) → Relaxing(x))"
    },
    {
        "NL": "There is no mountain and Irene is a climber.",
        "FOL": "¬∃x (Mountain(x)) ∧ Climber(irene)"
    },
    {
        "NL": "A triangle is isosceles if it has at least two equal sides.",
        "FOL": "∀x (Triangle(x) ∧ (∃y ∃z (Side(y) ∧ Side(z) ∧ EqualLength(y, z))) → Isosceles(x))"
    },
    {
        "NL": "A politician is named a leader if they are elected by a city or country.",
        "FOL": "∀x (Politician(x) ∧ (ElectedByCity(x) ∨ ElectedByCountry(x)) → Leader(x))"
    },
    {
        "NL": "No books with hardbacks lack pages.",
        "FOL": "∀x (Book(x) → (HaveHardBack(x) → ¬LackPage(x)))"
    },
    {
        "NL": "Some students are either mathematicians or biologists, but not both.",
        "FOL": "∃x (Student(x) ∧ (Mathematician(x) ⊕ Biologist(x)))"
    },
    {
        "NL": "A painter paints pictures, and a curator exhibits them.",
        "FOL": "∀x ∀y (Painter(x) ∧ Picture(y) → Paint(x, y)) ∧ ∀z ∀w (Curator(z) ∧ Picture(w) → Exhibit(z, w))"
    },
    {
        "NL": "An antidote works against a certain illness by inspiring the protective mechanism to induce a precise effect.",
        "FOL": "∀x ∃y (Antidote(x) ∧ Illness(y) ∧ InspiresProtectiveMechanism(x) ∧ InducesPreciseEffect(x, y) → WorksAgainst(x, y))"
    },
    {
        "NL": "Some creatures are mammals and some creatures are reptiles, but there are no creatures that are both.",
        "FOL": "∃x (Mammal(x)) ∧ ∃x (Reptile(x)) ∧ ¬∃x (Mammal(x) ∧ Reptile(x))"
    },
    {
        "NL": "A subway runs on rails, while a bus drives on city streets.",
        "FOL": "∀x (Subway(x) → RunsOnRails(x)) ∧ ∀y (Bus(y) → DrivesOnStreets(y))"
    },
    {
        "NL": "Scientists discover phenomena, and journalists report them.",
        "FOL": "∀x ∀y (Scientist(x) ∧ Phenomena(y) → Discover(x, y)) ∧ ∀z ∀w (Journalist(z) ∧ Phenomena(w) → Report(z, w))"
    },
    {
        "NL": "A window allows light to enter a room.",
        "FOL": "∀x (Window(x) → AllowsLightToEnter(x))"
    },
    {
        "NL": "A skincare product is beneficial if it has gentle ingredients, provides hydration, and promotes skin health, but not if it causes irritation.",
        "FOL": "∀x (SkincareProduct(x) ∧ ((GentleIngredients(x) ∧ ProvidesHydration(x) ∧ PromotesSkinHealth(x)) ∧ ¬CausesIrritation(x) → Beneficial(x)))"
    },
    {
        "NL": "Countries that have coastlines border at least one ocean or sea.",
        "FOL": "∀x∀y (Country(x) ∧ HasCoastline(x) → (BordersOcean(x, y) ∨ BordersSea(x, y)))"
    },
    {
        "NL": "A recipe is healthy if it includes vegetables, lean proteins, and whole grains.",
        "FOL": "∀x (Recipe(x) ∧ IncludesVegetables(x) ∧ IncludesLeanProteins(x) ∧ IncludesWholeGrains(x) → Healthy(x))"
    },
    {
        "NL": "A sustainable practice like recycling or composting can generate usable materials without harming the environment and it supports reducing waste production.",
        "FOL": "∀x (SustainablePractice(x) ∧ (Recycling(x) ∨ Composting(x)) → (GenerateUsableMaterials(x) ∧ ¬HarmEnvironment(x)) ∧ SupportReduceWasteProduction(x))"
    },
    {
        "NL": "An item is fragile if it can break easily when subjected to physical stress.",
        "FOL": "∀x∀y (Item(x) ∧ PhysicalStress(y) → (CanBreakEasily(x, y) → Fragile(x)))"
    },
    {
        "NL": "A student excels academically when they consistently submit quality assignments and participate in class discussions or exhibit strong problem-solving skills.",
        "FOL": "∀x (Student(x) ∧ ConsistentlySubmitQualityAssignments(x) ∧ (ParticipateInClassDiscussions(x) ∨ StrongProblemSolvingSkills(x)) → ExcelsAcademically(x))"
    },
    {
        "NL": "People who smoke may face lung diseases.",
        "FOL": "∀x (Person(x) ∧ Smokes(x) → MayFaceLungDiseases(x))"
    },
    {
        "NL": "A musical instrument is considered a percussion instrument if it produces sound through striking, shaking, or scraping.",
        "FOL": "∀x (MusicalInstrument(x) → (PercussionInstrument(x) ↔ ProducesSoundThroughStrikingOrShakingOrScraping(x)))"
    },
    {
        "NL": "A type of footwear can be either shoes or sandals.",
        "FOL": "∀x (FootwearType(x) → Shoes(x) ⊕ Sandals(x))"
    },
    {
        "NL": "A forest ecosystem consists of various plant and animal species, which interact and form a complex network of relationships.",
        "FOL": "∀x∀y∀z (ForestEcosystem(x) ∧ PlantSpecies(y) ∧ AnimalSpecies(z) → (ConsistsOf(x, y, z) ∧ InteractAndFormComplexNetwork(x)))"
    },
    {
        "NL": "A bee collects pollen and produces honey.",
        "FOL": "∀x (Bee(x) → (CollectsPollen(x) ∧ ProducesHoney(x)))"
    },
    {
        "NL": "If a person is a plumber, they fix plumbing issues.",
        "FOL": "∀x (Person(x) ∧ Plumber(x) → FixPlumbingIssues(x))"
    },
    {
        "NL": "An area of land is categorized as a desert if it receives less than 250 millimeters of annual precipitation and supports minimal plant life.",
        "FOL": "∀x (Desert(x) ↔ (AreaOfLand(x) ∧ ReceivesLessThan250MillimetersOfAnnualPrecipitation(x) ∧ SupportsMinimalPlantLife(x)))"
    },
    {
        "NL": "There is a game that some players do not play.",
        "FOL": "∃x ∃y (Game(x) ∧ Player(y) ∧ ¬Play(y, x))"
    },
    {
        "NL": "Pencils write, erasers erase, and rulers measure.",
        "FOL": "∀x (Pencil(x) → Write(x)) ∧ ∀y (Eraser(y) → Erase(y)) ∧ ∀z (Ruler(z) → Measure(z))"
    },
    {
        "NL": "Certain movies are rated for mature audiences or include subtitles, but not both.",
        "FOL": "∃x (Movie(x) ∧ Rating(y) ∧ MatureAudience(y) ∧ Subtitles(z) ∧ (RatedFor(x, y) ⊕ Includes(x, z)))"
    },
    {
        "NL": "A type of clothing can be either formal or casual.",
        "FOL": "∀x (ClothingType(x) → Formal(x) ⊕ Casual(x))"
    },
    {
        "NL": "An organization is recognized as a non-profit if it pursues a social or public benefit, does not distribute profits to its members or shareholders, and reinvests any surplus to further its mission.",
        "FOL": "∀x∀y∀z (Organization(x) ∧ PursuesSocialOrPublicBenefit(x, y) ∧ DoesNotDistributeProfits(x, z) ∧ ReinvestsSurplus(x) → NonProfit(x))"
    },
    {
        "NL": "An implement is labeled as intelligent machinery when it can handle software, send out correspondences, access the world wide web, and incorporates a touch panel.",
        "FOL": "∀x ((Implement(x) ∧ HandleSoftware(x) ∧ SendOutCorrespondences(x) ∧ AccessWorldWideWeb(x) ∧ IncorporatesTouchPanel(x)) → IntelligentMachinery(x))"
    },
    {
        "NL": "A company that prioritizes employee satisfaction, offers competitive salaries, and fosters a positive work environment tends to experience lower employee turnover.",
        "FOL": "∀x∀y∀z (Company(x) ∧ PrioritizesEmployeeSatisfaction(x) ∧ OffersCompetitiveSalaries(x, y) ∧ FostersPositiveWorkEnvironment(x, z) → LowerEmployeeTurnover(x))"
    },
    {
        "NL": "A city with a population over 10 million is a metropolis, while a city with a population below 1 million is a small city.",
        "FOL": "∀x∀y∀z (City(x) ∧ Population(x, y) ∧ Population(x, z) ∧ GreaterThan(y, 10000000) → Metropolis(x)) ∧ (City(x) ∧ Population(x, z) ∧ LessThan(z, 1000000) → SmallCity(x))"
    },
    {
        "NL": "A voter can either vote for candidate A or candidate B, but not for both.",
        "FOL": "∀x (Voter(x) ∧ (VotesForCandidateA(x) ⊕ VotesForCandidateB(x)))"
    },
    {
        "NL": "A location with a high concentration of volcanic activity and the presence of geothermal features, such as geysers and hot springs, is a volcanic hotspot.",
        "FOL": "∀x (Location(x) ∧ HighConcentrationOfVolcanicActivity(x) ∧ PresenceOfGeothermalFeatures(x) → VolcanicHotspot(x))"
    },
    {
        "NL": "Every coach who is patient is admired by all athletes.",
        "FOL": "∀x (Coach(x) ∧ Patient(x) → ∀y (Athlete(y) → Admires(y, x)))"
    },
    {
        "NL": "There is a person who appreciates all and only the people who do not appreciate themselves.",
        "FOL": "∃x (Person(x) ∧ ∀y (Person(y) → (Appreciate(x, y) ↔ ¬Appreciate(y, y))))"
    },
    {
        "NL": "All lawyers are professionals.",
        "FOL": "∀x (Lawyer(x) → Professional(x))"
    },
    {
        "NL": "An animal is herbivorous when its diet primarily consists of plants, and it possesses specialized teeth and digestive systems adapted for breaking down cellulose.",
        "FOL": "∀x (Animal(x) ∧ DietPrimarilyPlants(x) ∧ SpecializedTeeth(x) ∧ AdaptedDigestiveSystem(x) → Herbivorous(x))"
    },
    {
        "NL": "A fridge keeps food cold, while an oven heats it up.",
        "FOL": "∀x∀y∀z (Fridge(x) ∧ Oven(y) ∧ Food(z) → (KeepsCold(x, z) ∧ HeatsUp(y, z)))"
    },
    {
        "NL": "Every vehicle is either a car or a truck, but it cannot be both.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "All athletes who have played both football and basketball, unless they belong to a big sports club, have either won a sports medal or have not participated in international games.",
        "FOL": "∀x (Athlete(x) ∧ PlayedFootball(x) ∧ PlayedBasketball(x) ∨ BelongsToBigSportsClub(x) → (WonSportsMedal(x) ∨ ¬ParticipatedInInternationalGames(x)))"
    },
    {
        "NL": "In order for a software application to be user-friendly, it should have an intuitive interface, responsive design, and efficient performance.",
        "FOL": "∀x (SoftwareApplication(x) ∧ IntuitiveInterface(x) ∧ ResponsiveDesign(x) ∧ EfficientPerformance(x) → UserFriendly(x))"
    },
    {
        "NL": "A monkey is swinging on a vine, and a leopard is prowling.",
        "FOL": "∃x ∃y (Monkey(x) ∧ Vine(y) ∧ SwingingOn(x, y)) ∧ ∃z (Leopard(z) ∧ Prowling(z))"
    },
    {
        "NL": "An equilateral triangle has three equal sides and three equal angles.",
        "FOL": "∀x (EquilateralTriangle(x) → HasThreeEqualSides(x) ∧ HasThreeEqualAngles(x))"
    },
    {
        "NL": "No dog that receives adequate training fails, but all that fail lack adequate training.",
        "FOL": "¬∀x (ReceivesTraining(x) → ¬Fails(x)) ∧ ∀y (Fails(y) → ¬ReceivesTraining(y))"
    },
    {
        "NL": "Regular exercise increases strength and boosts energy.",
        "FOL": "∀x (RegularExercise(x) → IncreasesStrength(x) ∧ BoostsEnergy(x))"
    },
    {
        "NL": "Some paintings are abstract, while others are realistic.",
        "FOL": "∃x (Painting(x) ∧ Abstract(x)) ∧ ∃y (Painting(y) ∧ Realistic(y))"
    },
    {
        "NL": "A celestial event that occurs when the moon passes between the Earth and the sun, blocking sunlight, is a solar eclipse.",
        "FOL": "∀x ((CelestialEvent(x) ∧ MoonPassesBetweenEarthAndSun(x) ∧ BlocksSunlight(x)) → SolarEclipse(x))"
    },
    {
        "NL": "An employee gets a promotion if he demonstrates hard work, excellent results, and a positive attitude.",
        "FOL": "∀x (Employee(x) ∧ DemonstratesHardWork(x) ∧ ExcellentResults(x) ∧ PositiveAttitude(x) → GetsPromotion(x))"
    },
    {
        "NL": "Some chefs who specialize in Italian cuisine are also skilled in French cooking.",
        "FOL": "∃x (Chef(x) ∧ SpecializeInItalianCuisine(x) ∧ SkilledInFrenchCooking(x))"
    },
    {
        "NL": "Every being cherishes something they attain and attains something they do not cherish.",
        "FOL": "∀x (Being(x) → (∃y (Cherish(x, y) ∧ Attain(x, y)) ∧ ∃z (Cherish(x, z) ∧ ¬Attain(x, z))))"
    },
    {
        "NL": "Cats, when given access to the outdoors, may hunt for small animals like birds and rodents.",
        "FOL": "∀x (Cat(x) ∧ OutdoorAccess(x) → HuntsSmallAnimals(x))"
    },
    {
        "NL": "An object is defined as a mirror if it has a reflective surface and is used to see oneself.",
        "FOL": "∀x (Object(x) ∧ HasReflectiveSurface(x) ∧ UsedToSeeOneself(x) → Mirror(x))"
    },
    {
        "NL": "A car is not both clean and dirty.",
        "FOL": "∀x (Car(x) → ¬(Clean(x) ∧ Dirty(x)))"
    },
    {
        "NL": "All dancers are agile.",
        "FOL": "∀x (Dancer(x) → Agile(x))"
    },
    {
        "NL": "A bakery offers a variety of pastries with different fillings and toppings.",
        "FOL": "∀x∀y∀z (Bakery(x) ∧ PastryFilling(y) ∧ PastryTopping(z) → OffersWithFillingAndTopping(x, y, z))"
    },
    {
        "NL": "A sustainable city prioritizes public transportation, green spaces, and energy-efficient infrastructure to reduce pollution and improve the quality of life for its residents.",
        "FOL": "∀x (SustainableCity(x) → (PrioritizesPublicTransportation(x) ∧ PrioritizesGreenSpaces(x) ∧ PrioritizesEnergyEfficientInfrastructure(x) ∧ ReducesPollution(x) ∧ ImprovesQualityOfLifeForResidents(x)))"
    },
    {
        "NL": "A type of dessert that is made from a mixture of sugar, eggs, and flour, then baked in an oven until firm, is a cake.",
        "FOL": "∀x (Dessert(x) ∧ MadeFromSugar(x) ∧ MadeFromEggs(x) ∧ MadeFromFlour(x) ∧ BakedInOven(x) ∧ FirmTexture(x) → Cake(x))"
    },
    {
        "NL": "A business is profitable if it generates more revenue than its expenses.",
        "FOL": "∀x (Business(x) ∧ Profitable(x) ↔ GeneratesMoreRevenueThanExpenses(x))"
    },
    {
        "NL": "A musical composition is enthralling when it features captivating melodies, evokes strong emotions, and displays technical mastery.",
        "FOL": "∀x (MusicalComposition(x) ∧ CaptivatingMelodies(x) ∧ EvokesStrongEmotions(x) ∧ DisplaysTechnicalMastery(x) → Enthralling(x))"
    },
    {
        "NL": "A ball is round, can bounce or roll, and is not a cube.",
        "FOL": "∀x (Ball(x) ↔ (Round(x) ∧ (Bounces(x) ∨ Rolls(x)) ∧ ¬Cube(x)))"
    },
    {
        "NL": "A novel is either a mystery or a romance, but not a combination of the two.",
        "FOL": "∀x (Novel(x) → (Mystery(x) ⊕ Romance(x)))"
    },
    {
        "NL": "An organization x can effectively address social issue y if it develops targeted strategies and allocates sufficient resources.",
        "FOL": "∀x ∀y (Organization(x) ∧ SocialIssue(y) ∧ TargetedStrategies(x, y) ∧ AllocatesSufficientResources(x) → EffectivelyAddresses(x, y))"
    },
    {
        "NL": "A car can be either electric or gas powered.",
        "FOL": "∀x (Car(x) → (Electric(x) ⊕ GasPowered(x)))"
    },
    {
        "NL": "A video game can be completed when the player progresses through all levels, solves puzzles, and defeats bosses.",
        "FOL": "∀x (VideoGame(x) ∧ ProgressThroughLevels(x) ∧ SolvePuzzles(x) ∧ DefeatBosses(x) → CanBeCompleted(x))"
    },
    {
        "NL": "An action is considered altruistic if it benefits others and is not motivated by self-interest.",
        "FOL": "∀x (Action(x) ∧ BenefitsOthers(x) ∧ ¬SelfInterestedMotivation(x) → Altruistic(x))"
    },
    {
        "NL": "Each architect who is proficient in residential and commercial design, unless they have designed an iconic building, has either been featured in leading architecture publications or has not taught architecture students.",
        "FOL": "∀x (Architect(x) ∧ ProficientInResidentialDesign(x) ∧ ProficientInCommercialDesign(x) ∨ DesignedIconicBuilding(x) → (FeaturedInLeadingArchitecturePublications(x) ∨ ¬TaughtArchitectureStudents(x)))"
    },
    {
        "NL": "Apples can be red or green, bananas are yellow, and oranges are, well, orange.",
        "FOL": "∀x ∀y ∀z (Apple(x) ∧ Banana(y) ∧ Orange(z) → ((Red(x) ∨ Green(x)) ∧ Yellow(y) ∧ OrangeColor(z)))"
    },
    {
        "NL": "If an object is a hexagon, then it is either tiny or big, but not both.",
        "FOL": "∀x (Hexagon(x) → (Tiny(x) ⊕ Big(x)))"
    },
    {
        "NL": "An instrument is either a string or a brass instrument if it has strings or a mouthpiece.",
        "FOL": "∀x (Instrument(x) ∧ (HasStrings(x) ∨ HasMouthpiece(x)) → (StringInstrument(x) ∨ BrassInstrument(x)))"
    },
    {
        "NL": "A person is considered a pharmacist if they dispense prescription medications and provide information about drug safety and usage.",
        "FOL": "∀x (Person(x) ∧ DispensesPrescriptionMedications(x) ∧ ProvidesDrugSafetyInformation(x) ∧ ProvidesDrugUsageInformation(x) → Pharmacist(x))"
    },
    {
        "NL": "A chef is cooking pasta in the kitchen.",
        "FOL": "∃x ∃y (Chef(x) ∧ Pasta(y) ∧ Cooking(x, y) ∧ InTheKitchen(x))"
    },
    {
        "NL": "Insects are either nocturnal or diurnal, but not both.",
        "FOL": "∀x (Insect(x) → (Nocturnal(x) ⊕ Diurnal(x)))"
    },
    {
        "NL": "Mountains have peaks and valleys, and they are formed by geological processes.",
        "FOL": "∀x (Mountain(x) → (HasPeaks(x) ∧ HasValleys(x) ∧ FormedByGeologicalProcesses(x)))"
    },
    {
        "NL": "A cow can moo and graze, while a lizard cannot moo nor graze.",
        "FOL": "∀x (Cow(x) → CanMoo(x) ∧ CanGraze(x)) ∧ ∀y (Lizard(y) → ¬CanMoo(y) ∧ ¬CanGraze(y))"
    },
    {
        "NL": "If a person is a firefighter, then he/she can help extinguish fires.",
        "FOL": "∀x (Firefighter(x) → HelpExtinguishFire(x))"
    },
    {
        "NL": "An object is a pen or a pencil.",
        "FOL": "∀x (Object(x) → (Pen(x) ∨ Pencil(x)))"
    },
    {
        "NL": "All planets are either gas giants or terrestrial.",
        "FOL": "∀x (Planet(x) → (GasGiant(x) ⊕ Terrestrial(x)))"
    },
    {
        "NL": "A musical instrument that has a keyboard, produces sound through the vibration of strings, and is played by pressing keys is a piano.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasKeyboard(x) ∧ ProducesSoundThroughVibratingStrings(x) ∧ PlayedByPressingKeys(x) → Piano(x))"
    },
    {
        "NL": "A chef is cooking a pasta in the kitchen.",
        "FOL": "∃x ∃y ∃z (Chef(x) ∧ Pasta(y) ∧ Kitchen(z) ∧ CookingIn(x, y, z))"
    },
    {
        "NL": "A form of visual art that involves the creation of images using a camera, light-sensitive material, and chemical processing is photography.",
        "FOL": "∀x (VisualArt(x) ∧ UsesCamera(x) ∧ LightSensitiveMaterial(x) ∧ ChemicalProcessing(x) → Photography(x))"
    },
    {
        "NL": "Some forms of transportation are both eco-friendly and affordable.",
        "FOL": "∃x (Transportation(x) ∧ EcoFriendly(x) ∧ Affordable(x))"
    },
    {
        "NL": "A form is an octagon if it is not elliptical.",
        "FOL": "∀x (¬Elliptical(x) → Octagon(x))"
    },
    {
        "NL": "Every book is enjoyable if and only if it is either a mystery or a romance.",
        "FOL": "∀x (Book(x) → (Enjoyable(x) ↔ (Mystery(x) ∨ Romance(x))))"
    },
    {
        "NL": "An object is a round ball only if it is red.",
        "FOL": "∀x (Round(x) ∧ Ball(x) → Red(x))"
    },
    {
        "NL": "No Madrid resident or Milan inhabitant is appreciated by Lucy.",
        "FOL": "∀x (Person(x) ∧ (From(x, madrid) ∨ From(x, milan)) → ¬Appreciate(lucy, x))"
    },
    {
        "NL": "A book is borrowed from a library by a reader if it's available and the reader has a valid membership.",
        "FOL": "∀x∀y∀z (Book(x) ∧ Library(y) ∧ Reader(z) → (Borrowed(x, y, z) ↔ (Available(x, y) ∧ ValidMembership(z, y))))"
    },
    {
        "NL": "A clock displays time.",
        "FOL": "∀x (Clock(x) → DisplaysTime(x))"
    },
    {
        "NL": "A bird species that migrates long distances often has a streamlined body shape and strong wing muscles to sustain flight.",
        "FOL": "∀x∀y (BirdSpecies(x) ∧ MigratesLongDistances(x) → (StreamlinedBodyShape(y) ∧ StrongWingMuscles(y) ∧ SustainsFlight(x, y)))"
    },
    {
        "NL": "A contraption is thought of as a clever instrument if it can operate software, dispatch communications, surf the internet, and possessed a sensory display.",
        "FOL": "∀v ((Contraption(v) ∧ OperateSoftware(v) ∧ DispatchCommunications(v) ∧ SurfsInternet(v) ∧ PossessesSensoryDisplay(v)) → CleverInstrument(v))"
    },
    {
        "NL": "A clean transportation method such as electric vehicles or bicycles can provide mobility without increasing air pollution, and it contributes to decreasing carbon emissions.",
        "FOL": "∀x (CleanTransportation(x) ∧ (ElectricVehicles(x) ∨ Bicycles(x)) → (ProvideMobility(x) ∧ ¬IncreaseAirPollution(x)) ∧ ContributeDecreaseCarbonEmissions(x))"
    },
    {
        "NL": "Something is a tiny triangle only if it is not green.",
        "FOL": "∀x (Tiny(x) ∧ Triangle(x) → ¬Green(x))"
    },
    {
        "NL": "There isn't a cylinder that encapsulates all green squares.",
        "FOL": "¬∃x (Cylinder(x) ∧ ∀y (Green(y) ∧ Square(y) → Encapsulates(x, y)))"
    },
    {
        "NL": "An item is a collectible if it is rare or made by a renowned artist, but not if it is damaged or mass-produced.",
        "FOL": "∀x (Item(x) ∧ (Rare(x) ⊕ MadeByRenownedArtist(x)) ∧ ¬Damaged(x) ∧ ¬MassProduced(x) → Collectible(x))"
    },
    {
        "NL": "A telescope helps observe celestial objects in the sky.",
        "FOL": "∀x ∀y ∀z (Telescope(x) ∧ CelestialObject(y) ∧ Sky(z) → HelpsObserve(x, y, z))"
    },
    {
        "NL": "A television show can be a drama, a comedy, or a documentary, but not a combination of these genres.",
        "FOL": "∀x (TelevisionShow(x) → ((Drama(x) ⊕ Comedy(x) ⊕ Documentary(x)) ∧ ¬(Drama(x) ∧ Comedy(x)) ∧ ¬(Drama(x) ∧ Documentary(x)) ∧ ¬(Comedy(x) ∧ Documentary(x))))"
    },
    {
        "NL": "In an ecosystem, plants absorb sunlight for photosynthesis, which produces glucose and releases oxygen as a byproduct, benefiting animals.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) ∧ Plant(y) ∧ Animal(z) → (AbsorbsSunlightForPhotosynthesis(y) ∧ ProducesGlucoseAndReleasesOxygen(y) → Benefits(y, z)))"
    },
    {
        "NL": "A person is considered a scientist if they conduct research and experiments in a specific field.",
        "FOL": "∀x ∃y (Person(x) ∧ ConductsResearch(x, y) ∧ ConductsExperiments(x, y) → Scientist(x))"
    },
    {
        "NL": "A bee pollinates a flower when it visits the flower for nectar and transfers pollen from one plant to another.",
        "FOL": "∀x ∀y ∀z (Bee(x) ∧ Flower(y) ∧ Plant(z) ∧ VisitsForNectar(x, y) ∧ TransfersPollen(x, y, z) → Pollinates(x, y))"
    },
    {
        "NL": "A toy is appealing to kids if it's colorful or makes fun sounds.",
        "FOL": "∀x∀y (Toy(x) ∧ Kid(y) ∧ (Colorful(x) ∨ FunSounds(x)) → AppealsTo(x, y))"
    },
    {
        "NL": "A planet can be habitable if it has a stable climate, liquid water, and an oxygen-rich atmosphere.",
        "FOL": "∀x (Planet(x) ∧ StableClimate(x) ∧ LiquidWater(x) ∧ OxygenRichAtmosphere(x) → Habitable(x))"
    },
    {
        "NL": "There is no square that points to all blue triangles.",
        "FOL": "¬∃x (Square(x) → ∀y (Blue(y) ∧ Triangle(y) → PointsTo(x, y)))"
    },
    {
        "NL": "A grocery store offers various food items, such as dairy products like milk or cheese, meat options including chicken or beef, and grains in the form of rice or pasta.",
        "FOL": "∀x ∀y ∀z (GroceryStore(x) ∧ (DairyProduct(x, y) ∧ (Milk(y) ∨ Cheese(y))) ∧ (MeatOption(x, z) ∧ (Chicken(z) ∨ Beef(z))) ∧ (Grain(x) ∧ (Rice(x) ∨ Pasta(x))))"
    },
    {
        "NL": "A king rules a kingdom, a president leads a country, and a CEO manages a company, but all hold leadership positions.",
        "FOL": "∀x∀y∀z (King(x) ∧ Kingdom(y) → Rules(x, y)) ∧ (President(x) ∧ Country(y) → Leads(x, y)) ∧ (CEO(x) ∧ Company(y) → Manages(x, y)) ∧ (LeadershipPosition(x))"
    },
    {
        "NL": "Fruits that are high in vitamins and low in calories are considered nutritious.",
        "FOL": "∀x (Fruit(x) ∧ HighInVitamins(x) ∧ LowInCalories(x) → Nutritious(x))"
    },
    {
        "NL": "Any teacher who has taught more than six subjects and either grades tests or stays after school, but not both, must have either received tenure or be a department chair.",
        "FOL": "∀x (Teacher(x) ∧ TaughtMoreThanSixSubjects(x) ∧ (GradesTests(x) ⊕ StaysAfterSchool(x)) → (ReceivedTenure(x) ∨ DepartmentChair(x)))"
    },
    {
        "NL": "A painting can be acclaimed for best use of color, best composition, or best concept, but not all three at the same time.",
        "FOL": "∀x (Painting(x) ∧ Acclaimed(x) → (BestUseOfColor(x) ⊕ BestComposition(x) ⊕ BestConcept(x)))"
    },
    {
        "NL": "A drink is refreshing if it includes either mint or lemon as an ingredient.",
        "FOL": "∀x (Drink(x) ∧ (IncludeMint(x) ∨ IncludeLemon(x)) → Refreshing(x))"
    },
    {
        "NL": "Students who have studied algebra or geometry but not both generally perform better in math exams than those who have not studied either subject.",
        "FOL": "∀x ∀y (Student(x) ∧ Student(y) ∧ (Algebra(x) ⊕ Geometry(x)) ∧ ¬(Algebra(x) ∧ Geometry(x)) ∧ ¬Algebra(y) ∧ ¬Geometry(y) → BetterMathPerformance(x, y))"
    },
    {
        "NL": "A student graduates if they meet all course requirements.",
        "FOL": "∀x (Student(x) ∧ MetCourseRequirements(x) → Graduates(x))"
    },
    {
        "NL": "A battery stores electrical energy, and a generator converts mechanical energy into electrical energy.",
        "FOL": "∀x (Battery(x) → StoresElectricalEnergy(x)) ∧ ∀y (Generator(y) → ConvertsMechanicalEnergyToElectricalEnergy(y))"
    },
    {
        "NL": "There are movies that are dramatic and emotional, while all others are comedic and light-hearted.",
        "FOL": "∀x (Movie(x) → (Dramatic(x) ∧ Emotional(x)) ⊕ (Comedic(x) ∧ LightHearted(x)))"
    },
    {
        "NL": "There is a book that all authors write about.",
        "FOL": "∃x (Book(x) ∧ ∀y (Author(y) → WriteAbout(y, x)))"
    },
    {
        "NL": "A car that can hold more than 5 passengers and has three or more wheels is considered a family car.",
        "FOL": "∀x (Car(x) ∧ CanHoldMoreThanFivePassengers(x) ∧ (HasThreeWheels(x) ∨ HasMoreThanThreeWheels(x)) → FamilyCar(x))"
    },
    {
        "NL": "A painting is displayed on a wall or on an easel.",
        "FOL": "∀x (Painting(x) → (DisplayedOnWall(x) ∨ DisplayedOnEasel(x)))"
    },
    {
        "NL": "A book is either borrowed or purchased, but not both.",
        "FOL": "∀x (Book(x) → (Borrowed(x) ⊕ Purchased(x)))"
    },
    {
        "NL": "A meal is healthy if it includes fruits or vegetables, but not if it is high in saturated fat.",
        "FOL": "∀x (Meal(x) → (IncludesFruitsOrVegetables(x) ∨ ¬HighInSaturatedFat(x)))"
    },
    {
        "NL": "A vehicle that can carry over 20 people and has eight or more wheels is considered as a bus.",
        "FOL": "∀x (Vehicle(x) ∧ CanCarryOverTwentyPeople(x) ∧ (HasEightWheels(x) ∨ HasMoreThanEightWheels(x)) → Bus(x))"
    },
    {
        "NL": "An electric vehicle reduces its carbon footprint by using renewable energy sources for charging.",
        "FOL": "∀x (ElectricVehicle(x) ∧ UsesRenewableEnergySourcesForCharging(x) → ReducesCarbonFootprint(x))"
    },
    {
        "NL": "A tree is deciduous if it sheds its leaves annually and regrows them during the following growing season.",
        "FOL": "∀x (Deciduous(x) ↔ (Tree(x) ∧ ∀y ∀z (Leaves(y) ∧ GrowingSeason(z) ∧ Has(x, y) → (ShedsAnnually(x, y) ∧ RegrowsDuring(x, y, z)))))"
    },
    {
        "NL": "In a bakery, bread is freshly baked when it comes out of the oven less than 2 hours ago.",
        "FOL": "∀x∀y (Bakery(x) ∧ Bread(y) ∧ BakedInOven(x, y) ∧ LessThan2HoursAgo(y) → FreshlyBaked(x, y))"
    },
    {
        "NL": "If a person is a pilot, they navigate and operate aircraft.",
        "FOL": "∀x (Pilot(x) → (NavigatesAircraft(x) ∧ OperatesAircraft(x)))"
    },
    {
        "NL": "A flower needs water, sunlight, and nutrients to bloom properly.",
        "FOL": "∀x (Flower(x) → (GetsWater(x) ∧ GetsSunlight(x) ∧ HasNutrients(x)) → BloomsProperly(x))"
    },
    {
        "NL": "A shirt is white if and only if it is not dirty and it covers a black or a green object.",
        "FOL": "∀x (Shirt(x) → ((White(x) ↔ ¬Dirty(x)) ∧ ∃y (Covers(x, y) → (Black(y) ∨ Green(y)))))"
    },
    {
        "NL": "A market sells goods.",
        "FOL": "∀x ∃y (Market(x) ∧ Good(y) ∧ Sells(x, y))"
    },
    {
        "NL": "A garden is thriving when it has a diverse range of plants and (receives adequate sunlight or benefits from fertile soil).",
        "FOL": "∀x (Garden(x) ∧ Thriving(x) ↔ (DiverseRangeOfPlants(x) ∧ (AdequateSunlight(x) ∨ FertileSoil(x))))"
    },
    {
        "NL": "A computer is not turned on if it is in sleep mode.",
        "FOL": "∀x (Computer(x) ∧ SleepMode(x) → ¬TurnedOn(x))"
    },
    {
        "NL": "A well-functioning team consists of members with complementary skills who communicate effectively.",
        "FOL": "∀x (Team(x) ∧ ComplementarySkills(x) ∧ EffectiveCommunication(x) → WellFunctioning(x))"
    },
    {
        "NL": "A person is considered a photographer if they take photographs.",
        "FOL": "∀x (Person(x) ∧ TakesPhotographs(x) → Photographer(x))"
    },
    {
        "NL": "All planets in our solar system have moons, except for Mercury and Venus.",
        "FOL": "∀x (PlanetInSolarSystem(x) → ((¬Mercury(x) ∧ ¬Venus(x)) → HasMoon(x)))"
    },
    {
        "NL": "Houses with good plumbing and updated appliances have higher market values.",
        "FOL": "∀x (House(x) ∧ GoodPlumbing(x) ∧ UpdatedAppliances(x) → HigherMarketValue(x))"
    },
    {
        "NL": "Every fruit has vitamins, but no fruit has more vitamins than itself.",
        "FOL": "∀x ∃y (Has(x, y)) ∧ ¬∃z ∃w (Has(z, w) ∧ MoreThan(w, z))"
    },
    {
        "NL": "When a flower is in bloom, emits a pleasant fragrance, and attracts pollinators, it contributes to the reproduction of plants.",
        "FOL": "∀x ∀y ∀z (Flower(x) ∧ InBloom(x) ∧ EmitsPleasantFragrance(x) ∧ AttractsPollinators(x, y) → ContributesToReproductionOfPlants(x, z))"
    },
    {
        "NL": "There isn't a pyramid that is linked to all big rectangles.",
        "FOL": "¬∃x (Pyramid(x) ∧ ∀y (Big(y) ∧ Rectangle(y) → LinkedTo(x, y)))"
    },
    {
        "NL": "Dolphins are aquatic and hunt during the day, while possums are nocturnal and forage at night.",
        "FOL": "∀x (Dolphin(x) → (Aquatic(x) ∧ HuntsDuringDay(x))) ∧ ∀y (Possum(y) → (Nocturnal(y) ∧ ForagesAtNight(y)))"
    },
    {
        "NL": "A magazine is an article if it documents the professional journey of a certain personality, written by a colleague or confidant.",
        "FOL": "∀x ∃y ∃z (Magazine(x) ∧ Personality(y) ∧ (Colleague(z) ∨ Confidant(z)) ∧ DocumentsProfJourney(x, y) ∧ WrittenBy(x, z) → Article(x))"
    },
    {
        "NL": "Carnivorous plants capture and digest insects to obtain nutrients.",
        "FOL": "∀x∀y (CarnivorousPlant(x) ∧ Insect(y) → (Captures(x, y) ∧ Digests(x, y) ∧ ObtainsNutrients(x, y)))"
    },
    {
        "NL": "A coffee machine serves drinks like coffee or tea in return for cash.",
        "FOL": "∀x ∃y ∃z (CoffeeMachine(x) ∧ Drink(y) ∧ (Coffee(y) ∨ Tea(y)) ∧ Payment(z) ∧ Cash(z) ∧ InExchangeFor(x, z) → Serves(x, y))"
    },
    {
        "NL": "A student studies math xor history.",
        "FOL": "∀x (Student(x) → (StudiesMath(x) ⊕ StudiesHistory(x)))"
    },
    {
        "NL": "A fruit is ripe if it is not green and not rotten.",
        "FOL": "∀x (Fruit(x) → (Ripe(x) ↔ (¬Green(x) ∧ ¬Rotten(x))))"
    },
    {
        "NL": "A robust software application that offers reliable performance, strong security features, and an intuitive user interface is likely to gain widespread adoption.",
        "FOL": "∀x∀y∀z (RobustSoftwareApplication(x) ∧ ReliablePerformance(y) ∧ StrongSecurityFeatures(z) ∧ IntuitiveUserInterface(x) ∧ OffersElements(x, y, z) → LikelyWidespreadAdoption(x))"
    },
    {
        "NL": "A student passes an exam if they have studied and the exam is not too difficult.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) ∧ StudiedFor(x, y) ∧ ¬TooDifficult(y) → Passes(x, y))"
    },
    {
        "NL": "A healthy heart pumps blood efficiently, maintains a regular heartbeat, and has strong, elastic blood vessels.",
        "FOL": "∀x (Heart(x) → (PumpsBloodEfficiently(x) ∧ RegularHeartbeat(x) ∧ StrongElasticBloodVessels(x) → Healthy(x)))"
    },
    {
        "NL": "A robot completes a task when it receives the correct instructions, has the necessary tools, and operates within a controlled environment.",
        "FOL": "∀x ∀y ∀z (Robot(x) ∧ Instructions(y) ∧ Tools(z) ∧ ReceivesCorrectInstructions(x, y) ∧ HasNecessaryTools(x, z) ∧ ControlledEnvironment(x) → CompletesTask(x))"
    },
    {
        "NL": "A fruit is ripe if it is soft and sweet or if it changes color and emits a pleasant aroma.",
        "FOL": "∀x (Fruit(x) → Ripe(x) ↔ (Soft(x) ∧ Sweet(x) ∨ (ChangesColor(x) ∧ PleasantAroma(x))))"
    },
    {
        "NL": "Some materials are heat-resistant.",
        "FOL": "∃x (Material(x) ∧ HeatResistant(x))"
    },
    {
        "NL": "A bird that cannot fly is flightless.",
        "FOL": "∀x (Bird(x) ∧ ¬CanFly(x) → Flightless(x))"
    },
    {
        "NL": "If a place is a library, it contains books and other materials for public use.",
        "FOL": "∀x (Place(x) ∧ Library(x) → ContainsBooks(x) ∧ ContainsMaterialsForPublicUse(x))"
    },
    {
        "NL": "If a book is written by Shakespeare and is a drama it is a Hamlet.",
        "FOL": "∀x (Book(x) ∧ WrittenByShakespeare(x) ∧ Drama(x) → Hamlet(x))"
    },
    {
        "NL": "Mars is an attractive destination for space exploration due to its relatively close proximity to Earth, the presence of water ice, and geological features that suggest a history of flowing water.",
        "FOL": "∀x ∀y ∀z (Mars(x) ∧ CloseProximityToEarth(x, y) ∧ WaterIce(x, z) ∧ GeologicalFeatures(x) → AttractiveSpaceExplorationDestination(x))"
    },
    {
        "NL": "A city is clean if it has well-maintained streets and low pollution levels.",
        "FOL": "∀x (City(x) ∧ WellMaintainedStreets(x) ∧ LowPollution(x) → Clean(x))"
    },
    {
        "NL": "No employee at the conference voiced concerns.",
        "FOL": "¬∃x (Employee(x) ∧ AtConference(x) ∧ VoicedConcern(x))"
    },
    {
        "NL": "A healthy lifestyle involves regular exercise, moderated alcohol intake, and good sleep.",
        "FOL": "∀x (Lifestyle(x) ∧ RegularExercise(x) ∧ ModeratedAlcohol(x) ∧ GoodSleep(x) → Healthy(x))"
    },
    {
        "NL": "Fossils are the remains or traces of ancient organisms, preserved in rocks, which provide evidence of past life and help scientists understand the history of life on Earth.",
        "FOL": "∀x (Fossil(x) → (RemainsOrTracesOfAncientOrganisms(x) ∧ PreservedInRocks(x) ∧ ProvidesEvidenceOfPastLife(x) ∧ HelpsScientistsUnderstandHistoryOfLife(x)))"
    },
    {
        "NL": "A room in a house can be a bedroom, a kitchen, or a living room.",
        "FOL": "∀x (RoomInHouse(x) → (Bedroom(x) ⊕ Kitchen(x) ⊕ LivingRoom(x)))"
    },
    {
        "NL": "An art piece that uses visual elements, digital techniques, and interactive components is a multimedia artwork.",
        "FOL": "∀x (ArtPiece(x) ∧ VisualElements(x) ∧ DigitalTechniques(x) ∧ InteractiveComponents(x) → MultimediaArtwork(x))"
    },
    {
        "NL": "Not every bird is a canary.",
        "FOL": "¬∀x (Bird(x) → Canary(x))"
    },
    {
        "NL": "A doctor diagnoses a patient's illness by examining symptoms and conducting tests.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Illness(z) ∧ ExaminesSymptoms(x, y) ∧ ConductsTests(x, y) → Diagnoses(x, y, z))"
    },
    {
        "NL": "A scientist who works in physics and has published papers is a physicist.",
        "FOL": "∀x (Scientist(x) ∧ WorksInPhysics(x) ∧ HasPublishedPapers(x) → Physicist(x))"
    },
    {
        "NL": "A university is prestigious when it maintains high academic standards and attracts renowned professors.",
        "FOL": "∀x ∀y (University(x) ∧ HighAcademicStandards(y) ∧ AttractsRenownedProfessors(x) → Prestigious(x))"
    },
    {
        "NL": "In a solar system, a star's gravitational force keeps orbiting planets in their paths around the star.",
        "FOL": "∀x∀y (SolarSystem(x) ∧ Star(y) ∧ OrbitingPlanets(x, y) → (GravitationalForce(y) → KeepsInPathsAroundStar(x, y)))"
    },
    {
        "NL": "An exam can be passed with a high grade, without perfect attendance.",
        "FOL": "∀x ∀y (Exam(x) ∧ HighGrade(y) ∧ ¬PerfectAttendance(y) → Passes(x, y))"
    },
    {
        "NL": "A scientist researches a specific field, works in a laboratory, and can collaborate with other scientists or work independently.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ ResearchesField(x, y) ∧ WorksInLaboratory(x, z) ∧ (CollaboratesWithOthers(x) ∨ WorksIndependently(x)))"
    },
    {
        "NL": "No employee in the office asked questions.",
        "FOL": "∀x (Employee(x) ∧ InOffice(x) → ¬AskedQuestion(x))"
    },
    {
        "NL": "A farmer harvests crops when they are ripe and ready for collection.",
        "FOL": "∀x∀y (Farmer(x) ∧ Crop(y) → (Harvests(x, y) ↔ RipeAndReady(y)))"
    },
    {
        "NL": "An effective exercise routine improves cardiovascular fitness, strengthens muscles, and enhances flexibility.",
        "FOL": "∀x∀y∀z∀w (ExerciseRoutine(x) ∧ CardiovascularFitness(y) ∧ MuscleStrength(z) ∧ Flexibility(w) ∧ Improves(x, y) ∧ Strengthens(x, z) ∧ Enhances(x, w) → Effective(x))"
    },
    {
        "NL": "A culinary dish can be a dessert, use sweet ingredients, and win baking competitions, or it can be a main course, use savory ingredients, and be a hit at dinner parties.",
        "FOL": "∀x (Dish(x) → ((Dessert(x) ∧ UsesSweetIngredients(x) ∧ WinsBakingCompetitions(x)) ⊕ (MainCourse(x) ∧ UsesSavoryIngredients(x) ∧ HitAtDinnerParties(x))))"
    },
    {
        "NL": "In a hospital, doctors diagnose patients, while nurses assist with administering medication and monitoring their progress.",
        "FOL": "∀x (Hospital(x) → (∃y (Doctor(y) ∧ Diagnoses(y, x)) ∧ ∃z (Nurse(z) ∧ AssistsWithMedication(z, x) ∧ MonitorsProgress(z, x))))"
    },
    {
        "NL": "Books that are deep and intellectual usually demand focused reading.",
        "FOL": "∀x (Book(x) ∧ Deep(x) ∧ Intellectual(x) → DemandFocusedReading(x))"
    },
    {
        "NL": "Whoever views life as a marathon, deserves to triumph.",
        "FOL": "∀x (ViewsLifeAsMarathon(x) → DeservesToTriumph(x))"
    },
    {
        "NL": "A tree is tall if and only if it has deep roots and enough sunlight.",
        "FOL": "∀x (Tree(x) → (Tall(x) ↔ HasDeepRoots(x) ∧ HasEnoughSunlight(x)))"
    },
    {
        "NL": "A festival can feature music, art, or film, and it can be held indoors or outdoors, but it cannot have no theme or be held in no location.",
        "FOL": "∀x (Festival(x) → ((FeaturesMusic(x) ∨ FeaturesArt(x) ∨ FeaturesFilm(x)) ∧ (HeldIndoors(x) ∨ HeldOutdoors(x))))"
    },
    {
        "NL": "A company becomes a market leader in its industry if it has the highest market share, strong brand recognition, and a reputation for innovation and quality.",
        "FOL": "∀x∀y∀z (Company(x) ∧ Industry(y) ∧ HighestMarketShare(x, y) ∧ StrongBrandRecognition(x, z) ∧ ReputationForInnovation(x, z) ∧ ReputationForQuality(x, z) → MarketLeader(x, y))"
    },
    {
        "NL": "A sculpture is appreciated if it demonstrates original design, emotional intensity, and a master sculptor.",
        "FOL": "∀x (Sculpture(x) ∧ DemonstratesOriginalDesign(x) ∧ HasEmotionalIntensity(x) ∧ HasMasterSculptor(x) → Appreciated(x))"
    },
    {
        "NL": "All birds are flying.",
        "FOL": "∀x (Bird(x) → Flying(x))"
    },
    {
        "NL": "A film becomes a box office hit when it features a compelling storyline, a strong cast, and impressive visual effects, but not if it has received overwhelmingly negative reviews.",
        "FOL": "∀x (Film(x) → (BoxOfficeHit(x) ↔ (CompellingStoryline(x) ∧ StrongCast(x) ∧ ImpressiveVisualEffects(x) ∧ ¬OverwhelminglyNegativeReviews(x))))"
    },
    {
        "NL": "There isn't a chef who cooked every meal but didn't taste any dessert.",
        "FOL": "¬∃x (Chef(x) ∧ ∀y (Meal(y) → Cooked(x, y)) ∧ ¬∃z (Dessert(z) ∧ Tasted(x, z)))"
    },
    {
        "NL": "A software application that enables users to create, edit, and format documents containing text and images is classified as a word processor.",
        "FOL": "∀x (SoftwareApplication(x) ∧ EnablesCreation(x) ∧ EnablesEditing(x) ∧ FormatsDocuments(x) ∧ ContainsTextAndImages(x) → WordProcessor(x))"
    },
    {
        "NL": "Trees absorb carbon dioxide from the atmosphere and release oxygen through the process of photosynthesis.",
        "FOL": "∀x (Tree(x) → (AbsorbsCarbonDioxide(x) ∧ ReleasesOxygen(x) ∧ Photosynthesis(x)))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight, has a compact size, and operates on batteries.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ CompactSize(x) ∧ OperatesOnBatteries(x) → Portable(x))"
    },
    {
        "NL": "If a beverage is cold, it is not hot.",
        "FOL": "∀x (Cold(x) → ¬Hot(x))"
    },
    {
        "NL": "If an object is a radio, it receives and emits audio signals.",
        "FOL": "∀x (Radio(x) → ReceivesAndEmitsAudioSignals(x))"
    },
    {
        "NL": "Lighthouses emit light to guide ships, while buoys float on water to mark navigational hazards.",
        "FOL": "∀x ∀y (Lighthouse(x) ∧ Ship(y) → EmitLightToGuide(x, y)) ∧ ∀z ∀w (Buoy(z) ∧ NavigationalHazard(w) → FloatOnWaterToMark(z, w))"
    },
    {
        "NL": "Every cherry blossom is pink, all daffodils are yellow, and every iris is blue.",
        "FOL": "∀x (CherryBlossom(x) → Pink(x)) ∧ ∀y (Daffodil(y) → Yellow(y)) ∧ ∀z (Iris(z) → Blue(z))"
    },
    {
        "NL": "A shape is a triangle if it has three sides.",
        "FOL": "∀x (Triangle(x) ↔ (Shape(x) ∧ ThreeSides(x)))"
    },
    {
        "NL": "Mathematicians solve equations, while physicists solve problems.",
        "FOL": "∀x ∀y (Mathematician(x) ∧ Equation(y) → Solves(x, y)) ∧ ∀z ∀w (Physicist(z) ∧ Problem(w) → Solves(z, w))"
    },
    {
        "NL": "A restaurant that sources local ingredients and prepares meals using eco-friendly practices promotes sustainable dining and supports the local economy.",
        "FOL": "∀x∀y (Restaurant(x) ∧ SourcesLocalIngredients(x) ∧ PreparesMealsUsingEcoFriendlyPractices(x) → (PromotesSustainableDining(y) ∧ SupportsLocalEconomy(y)))"
    },
    {
        "NL": "A celestial object that orbits a star, has a nearly round shape, and has cleared its orbit of other debris is defined as a planet.",
        "FOL": "∀x∀y∀z (CelestialObject(x) ∧ OrbitsStar(x, y) ∧ NearlyRoundShape(x) ∧ ClearedOrbitOfDebris(x, z) → Planet(x))"
    },
    {
        "NL": "A piece of furniture that is made from durable materials, has a visually appealing design, and is comfortable to use often receives positive feedback from customers.",
        "FOL": "∀x (Furniture(x) ∧ MadeFromDurableMaterials(x) ∧ VisuallyAppealingDesign(x) ∧ ComfortableToUse(x) → ReceivesPositiveFeedback(x))"
    },
    {
        "NL": "A musical performance is mesmerizing when it features talented musicians, showcases a variety of instruments, and has excellent acoustics.",
        "FOL": "∀x ∀y ∀z (MusicalPerformance(x) ∧ TalentedMusicians(x, y) ∧ VarietyOfInstruments(x, z) ∧ ExcellentAcoustics(x) → Mesmerizing(x))"
    },
    {
        "NL": "A person who enjoys reading books and writing in their free time is considered a bookworm.",
        "FOL": "∀x (Person(x) ∧ EnjoysReadingBooks(x) ∧ EnjoysWriting(x) → Bookworm(x))"
    },
    {
        "NL": "A restaurant receives a high rating if it has delicious food, excellent service, and a pleasant ambiance.",
        "FOL": "∀x (Restaurant(x) → (HighRating(x) ↔ (DeliciousFood(x) ∧ ExcellentService(x) ∧ PleasantAmbiance(x))))"
    },
    {
        "NL": "A business operates in a building, has employees, and sells products or services.",
        "FOL": "∀x∀y (Business(x) ∧ Building(y) → (OperatesIn(x, y) ∧ HasEmployees(x) ∧ (SellsProducts(x) ∨ SellsServices(x))))"
    },
    {
        "NL": "An email x is marked as spam if it contains suspicious links or keywords.",
        "FOL": "∀x (Email(x) ∧ (ContainsSuspiciousLinks(x) ∨ ContainsSuspiciousKeywords(x)) → MarkedAsSpam(x))"
    },
    {
        "NL": "An object is classified as a musical instrument if it is designed to produce musical sounds and can be played by a musician.",
        "FOL": "∀x (MusicalInstrument(x) ↔ (Object(x) ∧ DesignedToProduceMusicalSounds(x) ∧ CanBePlayedByMusician(x)))"
    },
    {
        "NL": "Not every wolf howls, if there is a moon that all moons mean to it.",
        "FOL": "¬∀x (Moon(x) → MeansTo(x)) → ∃y (Wolf(y) ∧ ∀z (Wolf(z) → Howls(y)))"
    },
    {
        "NL": "A greenhouse gas traps heat in the Earth's atmosphere, contributing to global warming, and common examples include carbon dioxide, methane, and nitrous oxide.",
        "FOL": "∀x (GreenhouseGas(x) ↔ (TrapsHeatInAtmosphere(x) ∧ ∀y (ContributesToGlobalWarming(x, y) ∧ GlobalWarming(y)) ∧ (CarbonDioxide(x) ∨ Methane(x) ∨ NitrousOxide(x))))"
    },
    {
        "NL": "A country is considered a democracy if its government is based on the principle of elected representation.",
        "FOL": "∀x (Country(x) ∧ ElectedRepresentation(x) → Democracy(x))"
    },
    {
        "NL": "An aircraft that can seat more than 100 passengers and has four or more engines is classified as a jumbo jet.",
        "FOL": "∀y (Aircraft(y) ∧ CanSeatMoreThanHundredPassengers(y) ∧ (HasFourEngines(y) ∨ HasMoreThanFourEngines(y)) → JumboJet(y))"
    },
    {
        "NL": "A game is challenging when it requires strategy, has time constraints, or presents complex puzzles, but not all at once.",
        "FOL": "∀x (Game(x) ∧ ((RequiresStrategy(x) ∧ ¬(TimeConstraints(x) ∧ ComplexPuzzles(x))) ∨ (TimeConstraints(x) ∧ ¬(RequiresStrategy(x) ∧ ComplexPuzzles(x))) ∨ (ComplexPuzzles(x) ∧ ¬(RequiresStrategy(x) ∧ TimeConstraints(x)))) → Challenging(x))"
    },
    {
        "NL": "In a well-maintained garden, the presence of diverse plant species and pollinators, such as bees and butterflies, contributes to a healthy ecosystem.",
        "FOL": "∀x∀y (WellMaintainedGarden(x) ∧ DiversePlantSpecies(x) ∧ (Bees(y) ∨ Butterflies(y)) → ContributesToHealthyEcosystem(x))"
    },
    {
        "NL": "A ballet dancer performs classical dance characterized by grace and precision, while a hip-hop dancer performs a street dance style that includes rhythm and body movement.",
        "FOL": "∀x∀y (BalletDancer(x) ∧ HipHopDancer(y) → (PerformsClassicalDance(x) ∧ GraceAndPrecision(x)) ∧ (PerformsStreetDance(y) ∧ RhythmAndBodyMovement(y)))"
    },
    {
        "NL": "All of the teachers who read books are knowledgeable.",
        "FOL": "∀x (Teacher(x) ∧ ReadBooks(x) → Knowledgeable(x))"
    },
    {
        "NL": "There is no person who is a rich doctor and a poor artist.",
        "FOL": "¬∃x ((Person(x) ∧ Rich(x) ∧ Doctor(x)) ∧ (Poor(x) ∧ Artist(x)))"
    },
    {
        "NL": "A museum displays a variety of art styles, such as impressionist paintings with soft brush strokes, cubist artwork featuring geometric shapes, and abstract sculptures with unconventional materials.",
        "FOL": "∀x ∀y (Museum(x) ∧ (ImpressionistPainting(x, y) ∧ SoftBrushStrokes(y)) ∨ (CubistArtwork(x, y) ∧ GeometricShapes(y)) ∨ (AbstractSculpture(x, y) ∧ UnconventionalMaterials(y)))"
    },
    {
        "NL": "Bicycles have two wheels and are powered by the rider's pedaling.",
        "FOL": "∀x (Bicycle(x) → (HasWheels(x, 2) ∧ PoweredByPedaling(x)))"
    },
    {
        "NL": "The kangaroo is marsupial.",
        "FOL": "∀x (Kangaroo(x) → Marsupial(x))"
    },
    {
        "NL": "A circle is black or refers to a white object.",
        "FOL": "∀x (Circle(x) → (Black(x) ∨ ∃y (White(y) ∧ RefersTo(x, y))))"
    },
    {
        "NL": "A flashlight emits light but doesn't record images, while a camera records images but doesn't emit light.",
        "FOL": "∀x∀y (Flashlight(x) ∧ Camera(y) → (EmitsLight(x) ∧ ¬RecordsImages(x) ∧ RecordsImages(y) ∧ ¬EmitsLight(y)))"
    },
    {
        "NL": "A city is considered coastal if it is adjacent to a sea or an ocean.",
        "FOL": "∀x (City(x) ∧ (AdjacentToSea(x) ∨ AdjacentToOcean(x)) → Coastal(x))"
    },
    {
        "NL": "In a solar system, a star emits light and heat, a planet orbits the star and reflects the star's light, and a moon orbits the planet and is illuminated by the reflected light.",
        "FOL": "∀x∀y∀z (SolarSystem(x) ∧ Star(y) ∧ Planet(z) → (EmitsLightAndHeat(y) ∧ OrbitsStar(z, y) ∧ Moon(x) ∧ OrbitsPlanet(x, z) ∧ IlluminatedByReflectedLight(x, y)))"
    },
    {
        "NL": "A pharmaceutical drug is effective in treating a disease if it targets the underlying cause, alleviates symptoms, and has minimal side effects.",
        "FOL": "∀x ∀y ∀z (PharmaceuticalDrug(x) ∧ Disease(y) ∧ (TargetsUnderlyingCause(x, y) ∧ AlleviatesSymptoms(x, y) ∧ MinimalSideEffects(x, z)) → EffectiveInTreating(x, y))"
    },
    {
        "NL": "Each chef who trained in French and Italian cuisine, unless they have opened their restaurant, has either been mentioned in acclaimed food journals or has not tutored culinary students.",
        "FOL": "∀x (Chef(x) ∧ TrainedInFrenchCuisine(x) ∧ TrainedInItalianCuisine(x) ∨ OpenedRestaurant(x) → (MentionedInAcclaimedFoodJournals(x) ∨ ¬TutoredCulinaryStudents(x)))"
    },
    {
        "NL": "A tree produces oxygen and provides shade, but does not produce carbon dioxide.",
        "FOL": "∀x∀y∀z (Tree(x) ∧ Oxygen(y) ∧ Shade(z) ∧ ¬CarbonDioxide(y) → (Produces(x, y) ∧ Provides(x, z)))"
    },
    {
        "NL": "Mammals give birth to live young, except for monotremes which lay eggs.",
        "FOL": "∀x (Mammal(x) → (GivesBirthToLiveYoung(x) ∨ (Monotreme(x) ∧ LaysEggs(x))))"
    },
    {
        "NL": "A garden has flowers, trees, or a combination of both.",
        "FOL": "∀x (Garden(x) → (HasFlowers(x) ∨ HasTrees(x) ∨ (HasFlowers(x) ∧ HasTrees(x))))"
    },
    {
        "NL": "If an object is a camera, it must be a device that captures images, either as photographs or videos, by recording light or other electromagnetic radiation.",
        "FOL": "∀x ((Device(x) ∧ CapturesImages(x) ∧ RecordsLightOrElectromagneticRadiation(x)) → Camera(x))"
    },
    {
        "NL": "Not all cars are fast.",
        "FOL": "∃x (Car(x) ∧ ¬Fast(x))"
    },
    {
        "NL": "A unit is a hexagon if and only if it is matched with at least one purple object.",
        "FOL": "∀x (Hexagon(x) ↔ ∃y (Purple(y) ∧ MatchedWith(x, y)))"
    },
    {
        "NL": "An art gallery exhibits various artworks, and the curator selects and arranges the pieces for display.",
        "FOL": "∀x∀y∀z (ArtGallery(x) ∧ Artwork(y) ∧ Curator(z) ∧ Exhibits(x, y) → (Selects(z, y) ∧ ArrangesForDisplay(z, x)))"
    },
    {
        "NL": "An herbivorous animal exclusively eats plants, while a carnivorous animal primarily consumes other animals.",
        "FOL": "∀x ((Herbivorous(x) → EatsPlants(x)) ∧ (Carnivorous(x) → PrimarilyConsumesAnimals(x)))"
    },
    {
        "NL": "Each white thing encloses at least one object that envelops only black entities.",
        "FOL": "∀x (White(x) → ∃y (Encloses(x, y) ∧ ∀z (Encloses(y, z) → Black(z))))"
    },
    {
        "NL": "A cellphone can make calls, while a calculator performs arithmetic.",
        "FOL": "∀x (Cellphone(x) → MakesCalls(x)) ∧ ∀y (Calculator(y) → PerformsArithmetic(y))"
    },
    {
        "NL": "All plants can absorb sunlight, receive water, and release oxygen.",
        "FOL": "∀x (Plant(x) → AbsorbSunlight(x) ∧ ReceiveWater(x) ∧ ReleaseOxygen(x))"
    },
    {
        "NL": "A book is a bestseller if it has sold millions of copies and has been praised by critics.",
        "FOL": "∀x (Book(x) → (Bestseller(x) ↔ (SoldMillionsOfCopies(x) ∧ PraisedByCritics(x))))"
    },
    {
        "NL": "A material is insulating if it retains heat or blocks cold.",
        "FOL": "∀x (Material(x) ∧ (RetainsHeat(x) ∨ BlocksCold(x)) → Insulating(x))"
    },
    {
        "NL": "A movie is a blockbuster if it has a high budget, an all-star cast, and grosses over 500 million dollars.",
        "FOL": "∀x (Movie(x) ∧ HighBudget(x) ∧ AllStarCast(x) ∧ GrossesOver(x, 500000000) → Blockbuster(x))"
    },
    {
        "NL": "An animal's natural habitat provides resources such as food, water, and shelter for survival.",
        "FOL": "∀x ∀y (Animal(x) ∧ NaturalHabitat(y) → ProvidesResourcesForSurvival(y, x))"
    },
    {
        "NL": "A dog is a terrier or not a terrier.",
        "FOL": "∀x (Dog(x) → (Terrier(x) ⊕ ¬Terrier(x)))"
    },
    {
        "NL": "All students in the auditorium neither heard Beethoven nor Mozart.",
        "FOL": "∀x (Student(x) ∧ InAuditorium(x) → ¬(Hear(x, beethoven) ∨ Hear(x, mozart)))"
    },
    {
        "NL": "If a tool is a hammer, it is not a screwdriver.",
        "FOL": "∀x (Tool(x) ∧ Hammer(x) → ¬Screwdriver(x))"
    },
    {
        "NL": "All engineers who focus on renewable energy and sustainable infrastructure, unless they were granted an award, have either written in reputable engineering journals or have not made appearances at global seminars.",
        "FOL": "∀x (Engineer(x) ∧ FocusOnRenewableEnergy(x) ∧ FocusOnSustainableInfrastructure(x) ∨ GrantedAward(x) → (WrittenInEngineeringJournals(x) ∨ ¬AppearancesAtGlobalSeminars(x)))"
    },
    {
        "NL": "An exercise is beneficial if it involves cardio or weightlifting.",
        "FOL": "∀x (Exercise(x) ∧ (InvolvesCardio(x) ∨ InvolvesWeightlifting(x)) → Beneficial(x))"
    },
    {
        "NL": "An investment is attractive if it has low risk and either high returns or stable returns.",
        "FOL": "∀x (Investment(x) ∧ LowRisk(x) ∧ (HighReturns(x) ∨ StableReturns(x)) → Attractive(x))"
    },
    {
        "NL": "A country with a democratic system has free elections and allows for peaceful transfer of power.",
        "FOL": "∀x (Country(x) ∧ DemocraticSystem(x) → (FreeElections(x) ∧ PeacefulTransferOfPower(x)))"
    },
    {
        "NL": "Solar panels generate electricity by converting sunlight into electrical energy and are commonly installed on rooftops.",
        "FOL": "∀x (SolarPanel(x) → (GeneratesElectricity(x) ∧ ConvertsSunlight(x) ∧ CommonlyInstalledOn(x, rooftops)))"
    },
    {
        "NL": "A triangle can have no equal sides, two equal sides, or all equal sides.",
        "FOL": "∀x (Triangle(x) → (NoEqualSides(x) ⊕ TwoEqualSides(x) ⊕ AllEqualSides(x)))"
    },
    {
        "NL": "Every fish that can jump is not a dolphin.",
        "FOL": "¬∀x (Fish(x) ∧ CanJump(x) → Dolphin(x))"
    },
    {
        "NL": "A university course can be conducted online if the students have access to the internet and the necessary equipment, but not if the course requires physical attendance.",
        "FOL": "∀x (UniversityCourse(x) ∧ ((InternetAccess(x) ∧ NecessaryEquipment(x)) ∧ ¬RequiresPhysicalAttendance(x)) → ConductedOnline(x))"
    },
    {
        "NL": "Books are written by authors, paintings are created by painters, and music is composed by musicians.",
        "FOL": "∀x ∀y (Book(x) → WrittenBy(x, y) ∧ Author(y)) ∧ ∀z ∀w (Painting(z) → CreatedBy(z, w) ∧ Painter(w)) ∧ ∀u ∀v (Music(u) → ComposedBy(u, v) ∧ Musician(v))"
    },
    {
        "NL": "If a car is electric, it is either a sedan or a sports car.",
        "FOL": "∀x (Car(x) ∧ Electric(x) → Sedan(x) ⊕ SportsCar(x))"
    },
    {
        "NL": "Ice cream is a popular dessert during summer, while hot chocolate is favored in winter.",
        "FOL": "∀x ∀y (IceCream(x) ∧ HotChocolate(y) → (PopularInSummer(x) ⊕ FavoredInWinter(y)))"
    },
    {
        "NL": "A movie is directed by a filmmaker with a unique vision.",
        "FOL": "∀x∀y (Movie(x) ∧ Filmmaker(y) ∧ UniqueVision(y) → DirectedBy(x, y))"
    },
    {
        "NL": "A renewable fuel source is naturally replenished, reduces hazard of exhaustion and minimizes ecological impact.",
        "FOL": "∀x (RenewableFuelSource(x) → (NaturallyReplenished(x) ∧ ReducesHazardOfExhaustion(x) ∧ MinimizesEcologicalImpact(x)))"
    },
    {
        "NL": "A smartphone connects to the internet, makes calls, and sends messages.",
        "FOL": "∀x (Smartphone(x) → (ConnectsToInternet(x) ∧ MakesCalls(x) ∧ SendsMessages(x)))"
    },
    {
        "NL": "No sportsman who plays either cricket or football is unfit, and not every one of them is a world champion.",
        "FOL": "¬∃x (Sportsman(x) ∧ (PlaysCricket(x) ∨ PlaysFootball(x)) ∧ Unfit(x)) ∧ ¬∀y (Sportsman(y) → WorldChampion(y))"
    },
    {
        "NL": "A movie becomes popular when it has a captivating storyline, an excellent cast, and effective marketing.",
        "FOL": "∀x ∀y ∀z (Movie(x) ∧ Storyline(y) ∧ Cast(z) → (Popular(x) ↔ (Captivating(y) ∧ Excellent(z) ∧ EffectiveMarketing(x))))"
    },
    {
        "NL": "A university offers a scholarship to a student if they have excellent grades, demonstrate leadership skills, and participate in extracurricular activities.",
        "FOL": "∀x∀y (University(x) ∧ Student(y) ∧ ExcellentGrades(y) ∧ LeadershipSkills(y) ∧ ExtracurricularActivities(y) → OffersScholarship(x, y))"
    },
    {
        "NL": "Cinema is a form of visual storytelling through moving images.",
        "FOL": "∀x (Cinema(x) → (VisualStorytelling(x) ∧ MovingImages(x)))"
    },
    {
        "NL": "A garden flourishes when it receives adequate sunlight, has rich soil, and is well-watered, but not if it's infested with pests.",
        "FOL": "∀x (Garden(x) ∧ ((AdequateSunlight(x) ∧ RichSoil(x) ∧ WellWatered(x)) ∧ ¬PestInfested(x) → Flourishes(x)))"
    },
    {
        "NL": "All triangles are shapes, but not every shape is a triangle.",
        "FOL": "∀x (Triangle(x) → Shape(x)) ∧ ¬∀x (Shape(x) → Triangle(x))"
    },
    {
        "NL": "Theory outlines are not observations.",
        "FOL": "∀x (TheoryOutline(x) → ¬Observation(x))"
    },
    {
        "NL": "Either Alicia is a programmer or Ryan is jealous of Alicia, but not both",
        "FOL": "Programmer(alicia) ⊕ Jealous(ryan, alicia)"
    },
    {
        "NL": "A room is cozy if it has warm lighting, comfortable seating, and soft textures.",
        "FOL": "∀x (Room(x) ∧ WarmLighting(x) ∧ ComfortableSeating(x) ∧ SoftTextures(x) → Cozy(x))"
    },
    {
        "NL": "A living being is a human if it exclusively possesses intellect.",
        "FOL": "∀x (LivingBeing(x) ∧ ExclusivelyPossessesIntellect(x) → Human(x))"
    },
    {
        "NL": "Every odd number is not divisible by 2.",
        "FOL": "∀x (OddNumber(x) → ¬DivisibleByTwo(x))"
    },
    {
        "NL": "A drink is non-alcoholic if it does not contain alcohol.",
        "FOL": "∀x (Drink(x) ∧ ¬ContainAlcohol(x) → NonAlcoholic(x))"
    },
    {
        "NL": "A mountain x is part of a mountain range y if x is physically connected to a series of mountains that make up y.",
        "FOL": "∀x ∀y (Mountain(x) ∧ MountainRange(y) ∧ PhysicallyConnectedToSeries(x, y) → PartOf(x, y))"
    },
    {
        "NL": "A building that houses a collection of books, offers reading spaces, and provides access to digital resources is a library.",
        "FOL": "∀x (Building(x) ∧ HousesBookCollection(x) ∧ OffersReadingSpaces(x) ∧ ProvidesDigitalResources(x) → Library(x))"
    },
    {
        "NL": "If a man is a teacher, then he is either old or young, but not both.",
        "FOL": "∀x (Man(x) ∧ Teacher(x) → (Old(x) ⊕ Young(x)))"
    },
    {
        "NL": "A shoe is white or gray.",
        "FOL": "∀x (Shoe(x) → (White(x) ∨ Gray(x)))"
    },
    {
        "NL": "A therapist who has counselled a patient who hasn't overcome their fear, has either written more than four case studies or attended all therapy seminars.",
        "FOL": "∀x (Therapist(x) ∧ ∃y (Patient(y) ∧ ¬OvercomeFear(y) ∧ Counselled(x, y)) → (WrittenMoreThanFourCaseStudies(x) ∨ ∀z (TherapySeminar(z) → Attended(x, z))))"
    },
    {
        "NL": "An article is an autobiography if it describes the journalist's background.",
        "FOL": "∀x ∃y ∃z (Article(x) ∧ Journalist(y) ∧ JournalistOf(y, x) ∧ DescribesBackground(x, y) → Autobiography(x))"
    },
    {
        "NL": "A solar eclipse or lunar eclipse is visible from locations with clear skies and minimal light pollution.",
        "FOL": "∀x ∀y (Eclipse(x) ∧ (SolarEclipse(x) ∨ LunarEclipse(x)) ∧ Location(y) ∧ ClearSkies(y) ∧ MinimalLightPollution(y) → VisibleFrom(x, y))"
    },
    {
        "NL": "All birds are either carnivorous or herbivorous, but not both.",
        "FOL": "∀x (Bird(x) → (Carnivorous(x) ⊕ Herbivorous(x)))"
    },
    {
        "NL": "A coin can show either heads or tails, but not both at the same time.",
        "FOL": "∀x (Coin(x) → ((Heads(x) ⊕ Tails(x))))"
    },
    {
        "NL": "Not all flowers are fragrant.",
        "FOL": "¬∀x (Flower(x) → Fragrant(x))"
    },
    {
        "NL": "Doctors give medical aid to patients, and healthcare assistants facilitate them.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ HealthcareAssistant(z) → GivesMedicalAid(x, y) ∧ Facilitates(z, y))"
    },
    {
        "NL": "A smartphone can access the internet if it has a Wi-Fi or cellular data connection.",
        "FOL": "∀x (Smartphone(x) ∧ (WiFiConnection(x) ∨ CellularDataConnection(x)) → CanAccessInternet(x))"
    },
    {
        "NL": "Festivals celebrate culture, showcase art, and feature performances.",
        "FOL": "∀x∀y∀z (Festival(x) ∧ (Culture(y) ∨ Art(y) ∨ Performance(y)) → (Celebrates(x, y) ⊕ Showcases(x, y) ⊕ Features(x, y)))"
    },
    {
        "NL": "A device is classified as a timekeeping instrument if it is designed to measure and display the passage of time.",
        "FOL": "∀x (Device(x) ∧ DesignedToMeasureTime(x) ∧ DisplaysPassageOfTime(x) → TimekeepingInstrument(x))"
    },
    {
        "NL": "No company is successful unless they have invested strategically, but not all of the firms are employee-oriented.",
        "FOL": "¬∃x (Company(x) ∧ Successful(x) ∨ InvestedStrategically(x)) ∧ ¬∀y (Company(y) → EmployeeOriented(y))"
    },
    {
        "NL": "A book becomes a bestseller when it features a compelling storyline, relatable characters, and receives positive reviews from critics or readers.",
        "FOL": "∀x∀y∀z (Book(x) ∧ CompellingStoryline(x, y) ∧ RelatableCharacters(x, z) ∧ (PositiveReviewsCritics(x) ∨ PositiveReviewsReaders(x)) → Bestseller(x))"
    },
    {
        "NL": "A car is black or white.",
        "FOL": "∀x (Car(x) → (Black(x) ∨ White(x)))"
    },
    {
        "NL": "A building is earthquake resistant if it has a strong foundation and is constructed with flexible materials.",
        "FOL": "∀x (Building(x) ∧ StrongFoundation(x) ∧ FlexibleMaterials(x) → EarthquakeResistant(x))"
    },
    {
        "NL": "A student who consistently achieves high grades and demonstrates strong work ethic is considered an outstanding student.",
        "FOL": "∀x (Student(x) ∧ HighGrades(x) ∧ StrongWorkEthic(x) → OutstandingStudent(x))"
    },
    {
        "NL": "Every flower needs sunlight, but not everything that needs sunlight is a flower.",
        "FOL": "∀x (Flower(x) → NeedsSunlight(x)) ∧ ¬∀x (NeedsSunlight(x) → Flower(x))"
    },
    {
        "NL": "A nurse administers medication, monitors patients' health, and assists doctors in medical procedures.",
        "FOL": "∀x∀y∀z∀w (Nurse(x) ∧ Medication(y) ∧ Patient(z) ∧ Doctor(w) → (Administers(x, y) ∧ Monitors(x, z) ∧ Assists(x, w)))"
    },
    {
        "NL": "A movie is entertaining or thought-provoking, but not if it's a poorly made film or full of clichés.",
        "FOL": "∀x (Movie(x) ∧ ¬(PoorlyMade(x) ∨ FullOfCliches(x)) → (Entertaining(x) ∨ ThoughtProvoking(x)))"
    },
    {
        "NL": "A drought can cause soil degradation, reduced agricultural productivity, and water scarcity.",
        "FOL": "∀x (Drought(x) → (SoilDegradation(x) ∧ ReducedAgriculturalProductivity(x) ∧ WaterScarcity(x)))"
    },
    {
        "NL": "A flower is characterized as a monocot if it has a single cotyledon, parallel-veined leaves, and flower parts in multiples of three.",
        "FOL": "∀x (Flower(x) ∧ SingleCotyledon(x) ∧ ParallelVeinedLeaves(x) ∧ FlowerPartsInMultiplesOfThree(x) → Monocot(x))"
    },
    {
        "NL": "A carnivorous animal that lives in the Arctic region, has a thick layer of fur, and primarily preys on seals is a polar bear.",
        "FOL": "∀x (Animal(x) ∧ Carnivorous(x) ∧ LivesInArcticRegion(x) ∧ HasThickLayerOfFur(x) ∧ PrimarilyPreysOn(x, seals) → PolarBear(x))"
    },
    {
        "NL": "A journalist writes articles about events using different sources.",
        "FOL": "∀x ∀y ∀z (Journalist(x) ∧ Article(y) ∧ Event(z) → WritesAbout(x, y, z))"
    },
    {
        "NL": "In a race, a runner must complete the course to be eligible for a medal.",
        "FOL": "∀x ∀y (Race(x) ∧ Runner(y) ∧ CompletesCourse(y, x) → EligibleForMedal(y))"
    },
    {
        "NL": "A play that is a comedy can make the audience laugh.",
        "FOL": "∀x ∀y (Play(x) ∧ Comedy(x) ∧ Audience(y) → CanMakeLaugh(x, y))"
    },
    {
        "NL": "A museum displays artifacts, exhibits, and artwork for public viewing.",
        "FOL": "∀x ∀y ∀z (Museum(x) ∧ Artifact(y) ∧ Exhibit(z) ∧ Artwork(w) → DisplaysForPublicViewing(x, y, z, w))"
    },
    {
        "NL": "Reptiles, such as snakes and lizards, lay eggs, while mammals, such as cats and dogs, give birth to live young.",
        "FOL": "∀x ∀y (Reptile(x) ∧ (Snake(x) ∨ Lizard(x)) → LaysEggs(x)) ∧ (Mammal(y) ∧ (Cat(y) ∨ Dog(y)) → GivesBirthToLiveYoung(y))"
    },
    {
        "NL": "A candidate wins the election if they get more votes than the other candidate.",
        "FOL": "∀x ∀y (Candidate(x) ∧ Candidate(y) ∧ MoreVotes(x, y) → WinsElection(x))"
    },
    {
        "NL": "For a city to be considered bike-friendly, it must have dedicated bike lanes and safe infrastructure for cyclists.",
        "FOL": "∀x (City(x) ∧ DedicatedBikeLanes(x) ∧ SafeInfrastructure(x) → BikeFriendly(x))"
    },
    {
        "NL": "No journalist who writes about economy and science, unless they have won an International Press Award, has interviewed more than thirty celebrities or has not hosted a radio show.",
        "FOL": "¬∃x (Journalist(x) ∧ WritesAboutEconomy(x) ∧ WritesAboutScience(x) ∨ WonInternationalPressAward(x) ∧ (InterviewedMoreThanThirtyCelebrities(x) ∨ ¬HostedRadioShow(x)))"
    },
    {
        "NL": "A bicycle has two wheels, a tricycle has three wheels, and a skateboard has four wheels.",
        "FOL": "∀x ∀y ∀z (Bicycle(x) ∧ Tricycle(y) ∧ Skateboard(z) → (Wheels(x, 2) ∧ Wheels(y, 3) ∧ Wheels(z, 4)))"
    },
    {
        "NL": "An athlete is considered professional if and only if they are not amateur or they are an Olympian.",
        "FOL": "∀x (Athlete(x) → (Professional(x) ↔ (¬Amateur(x) ∨ Olympian(x))))"
    },
    {
        "NL": "A location is a desert if it receives low annual precipitation and is characterized by extreme temperature fluctuations.",
        "FOL": "∀x (Location(x) ∧ LowAnnualPrecipitation(x) ∧ ExtremeTemperatureFluctuations(x) → Desert(x))"
    },
    {
        "NL": "An animal is either a cat or a dog if it is not a bird.",
        "FOL": "∀x (Animal(x) ∧ ¬Bird(x) → (Cat(x) ∨ Dog(x)))"
    },
    {
        "NL": "A material is a good insulator if it resists the flow of heat, electricity, or sound between different objects or regions.",
        "FOL": "∀x ∀y ∀z (Material(x) ∧ ResistsFlowOfHeat(x, y, z) ∧ ResistsFlowOfElectricity(x, y, z) ∧ ResistsFlowOfSound(x, y, z) → GoodInsulator(x))"
    },
    {
        "NL": "An object submerged in water is buoyant if it has a lower density than water and a shape that allows it to displace water.",
        "FOL": "∀x (Object(x) ∧ SubmergedInWater(x) ∧ LowerDensityThanWater(x) ∧ ShapeDisplacesWater(x) → Buoyant(x))"
    },
    {
        "NL": "A building is architecturally impressive if it features innovative design, unique aesthetics, and either sustainable materials or energy-efficient systems.",
        "FOL": "∀x (Building(x) ∧ (InnovativeDesign(x) ∧ UniqueAesthetics(x) ∧ (SustainableMaterials(x) ∨ EnergyEfficientSystems(x))) → ArchitecturallyImpressive(x))"
    },
    {
        "NL": "A film is a comedy if it features humor and lighthearted themes.",
        "FOL": "∀x (Film(x) ∧ Humor(x) ∧ LightheartedThemes(x) → Comedy(x))"
    },
    {
        "NL": "A sports event is an outdoor event if it takes place outside, requires a large open space, and is influenced by weather conditions.",
        "FOL": "∀x (SportsEvent(x) ∧ TakesPlaceOutside(x) ∧ RequiresLargeOpenSpace(x) ∧ InfluencedByWeatherConditions(x) → OutdoorEvent(x))"
    },
    {
        "NL": "In a basketball game, a player can pass the ball, shoot it, or dribble it.",
        "FOL": "∀x ∀y (BasketballGame(x) ∧ Player(y) → ∃z (Pass(y, z) ∨ Shoot(y, z) ∨ Dribble(y, z)))"
    },
    {
        "NL": "An athlete either participates in individual or team sports.",
        "FOL": "∀x (Athlete(x) → (IndividualSport(x) ⊕ TeamSport(x)))"
    },
    {
        "NL": "A smartphone is popular if it has a sleek design or a powerful processor, but not both.",
        "FOL": "∀x (Smartphone(x) → (Popular(x) ↔ (SleekDesign(x) ⊕ PowerfulProcessor(x))))"
    },
    {
        "NL": "A celestial body is a star if it generates light and heat through nuclear fusion.",
        "FOL": "∀x (CelestialBody(x) ∧ GeneratesLightThroughNuclearFusion(x) ∧ GeneratesHeatThroughNuclearFusion(x) → Star(x))"
    },
    {
        "NL": "A car is hybrid if it uses both an electric motor and an internal combustion engine.",
        "FOL": "∀x (Car(x) ∧ HasElectricMotor(x) ∧ HasInternalCombustionEngine(x) → Hybrid(x))"
    },
    {
        "NL": "A person is a teacher if they educate students in a school, college, or university setting.",
        "FOL": "∀x (Person(x) ∧ Teacher(x) ↔ EducatesStudents(x) ∧ InSchoolCollegeOrUniversitySetting(x))"
    },
    {
        "NL": "Some flowers cannot bloom, then everything is barren or some plants are dead.",
        "FOL": "∃x (Flower(x) ∧ ¬CanBloom(x)) → ∀y (Barren(y)) ∨ ∃z (Plant(z) ∧ Dead(z))"
    },
    {
        "NL": "Trains transport passengers between stations.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ Passenger(y) ∧ Station(z) → TransportsBetween(x, y, z))"
    },
    {
        "NL": "A novel can be a mystery, contain suspenseful elements, and become a critics' choice, or it can be a fantasy, have imaginative themes, and appeal to the younger crowd.",
        "FOL": "∀x (Novel(x) → ((Mystery(x) ∧ ContainsSuspensefulElements(x) ∧ CriticsChoice(x)) ⊕ (Fantasy(x) ∧ HasImaginativeThemes(x) ∧ AppealsYoungCrowd(x))))"
    },
    {
        "NL": "Plants that produce flowers and have a vascular system for transporting water and nutrients are typically classified as angiosperms.",
        "FOL": "∀x∀y (Plant(x) ∧ ProducesFlowers(x, y) ∧ HasVascularSystem(x) → Angiosperm(x))"
    },
    {
        "NL": "A river can support aquatic life if it has a steady flow, sufficient oxygen levels, and a diverse food supply.",
        "FOL": "∀x (River(x) → (SupportsAquaticLife(x) ↔ (SteadyFlow(x) ∧ SufficientOxygenLevels(x) ∧ DiverseFoodSupply(x))))"
    },
    {
        "NL": "A game is fun if it has challenging levels and interesting characters.",
        "FOL": "∀x (Game(x) ∧ HasChallengingLevels(x) ∧ HasInterestingCharacters(x) → Fun(x))"
    },
    {
        "NL": "There does not exist a chef who cooks both Italian and French cuisines but has never worked in a restaurant.",
        "FOL": "¬∃x (Chef(x) ∧ CooksItalian(x) ∧ CooksFrench(x) ∧ ¬WorkedInRestaurant(x))"
    },
    {
        "NL": "Professional athletes train regularly, and some participate in international competitions.",
        "FOL": "∀x∃y (ProfessionalAthlete(x) ∧ TrainsRegularly(x) ∧ (ParticipatesInInternationalCompetition(y) ∨ ¬ParticipatesInInternationalCompetition(y)))"
    },
    {
        "NL": "Students with consistent study habits and good time management have better academic performance.",
        "FOL": "∀x (Student(x) ∧ ConsistentStudyHabits(x) ∧ GoodTimeManagement(x) → BetterAcademicPerformance(x))"
    },
    {
        "NL": "A sushi restaurant serves Japanese sushi dishes, a pizzeria serves Italian pizza, and a burger joint serves American-style burgers.",
        "FOL": "∀x ∀y ∀z (SushiRestaurant(x) ∧ Pizzeria(y) ∧ BurgerJoint(z) → (ServesJapaneseSushi(x) ∧ ServesItalianPizza(y) ∧ ServesAmericanBurgers(z)))"
    },
    {
        "NL": "An office has employees.",
        "FOL": "∀x ∃y (Office(x) ∧ Employee(y) ∧ WorksAt(y, x))"
    },
    {
        "NL": "A drink can be a juice, a soda, or a water.",
        "FOL": "∀x (Drink(x) → (Juice(x) ∨ Soda(x) ∨ Water(x)))"
    },
    {
        "NL": "A restaurant is successful if it has a loyal customer base and a talented chef.",
        "FOL": "∀x (Restaurant(x) → (Successful(x) ↔ (LoyalCustomerBase(x) ∧ TalentedChef(x))))"
    },
    {
        "NL": "An athlete qualifies for a competition if they meet the minimum age requirement, have a high skill level, and pass a drug test or receive a wildcard entry.",
        "FOL": "∀x∀y (Athlete(x) ∧ Competition(y) ∧ (MeetsMinimumAge(x) ∧ HighSkillLevel(x) ∧ PassDrugTest(x) ∨ WildcardEntry(x, y)) → Qualifies(x, y))"
    },
    {
        "NL": "A chef prepares either vegan or non-vegan meals, but not both.",
        "FOL": "∀x (Chef(x) → (PreparesVeganMeals(x) ⊕ PreparesNonVeganMeals(x)))"
    },
    {
        "NL": "Artists paint pictures, and viewers admire them.",
        "FOL": "∀x ∀y (Artist(x) → PaintPicture(x)) ∧ ∀y ∀z (Viewer(y) ∧ Picture(z) → Admire(y, z))"
    },
    {
        "NL": "A building with a rooftop garden contributes to the reduction of the urban heat island effect.",
        "FOL": "∀x (Building(x) ∧ RooftopGarden(x) → ReducesUrbanHeatIslandEffect(x))"
    },
    {
        "NL": "Some cities are crowded, and some are not.",
        "FOL": "∃x (City(x) ∧ Crowded(x)) ∧ ∃x (City(x) ∧ ¬Crowded(x))"
    },
    {
        "NL": "A soccer ball exists that all balls roll towards, if all pitches are not smooth.",
        "FOL": "¬∀x (Pitch(x) → Smooth(x)) → ∃y (Ball(y) ∧ ∀z (Ball(z) → RollsTowards(z, y)))"
    },
    {
        "NL": "Rooms with natural light and comfortable furniture create a relaxing atmosphere.",
        "FOL": "∀x (Room(x) ∧ NaturalLight(x) ∧ ComfortableFurniture(x) → RelaxingAtmosphere(x))"
    },
    {
        "NL": "All mammals have a backbone.",
        "FOL": "∀x (Mammal(x) → HasBackbone(x))"
    },
    {
        "NL": "A job is considered high-paying if its annual salary exceeds $100,000.",
        "FOL": "∀x (Job(x) → (HighPaying(x) ↔ AnnualSalaryExceeds100k(x)))"
    },
    {
        "NL": "A song is mesmerizing if and only if it has beautiful lyrics, enchanting melody, but doesn't have too many repeating choruses.",
        "FOL": "∀x (Song(x) ∧ Mesmerizing(x) ↔ (HasBeautifulLyrics(x) ∧ HasEnchantingMelody(x) ∧ ¬ManyRepeatingChoruses(x)))"
    },
    {
        "NL": "A river that originates from a glacier and flows through a mountainous region often has a steep gradient and high flow velocity.",
        "FOL": "∀x∀y (River(x) ∧ OriginatesFromGlacier(x) ∧ FlowsThroughMountainousRegion(x, y) → (SteepGradient(x) ∧ HighFlowVelocity(x)))"
    },
    {
        "NL": "An artist creates paintings or sculptures using different materials, techniques, and styles to express their ideas.",
        "FOL": "∀x∀y∀z∀w (Artist(x) ∧ (Painting(y) ∨ Sculpture(y)) ∧ Material(z) ∧ Technique(w) → CreatesWithDifferentStyles(x, y, z, w))"
    },
    {
        "NL": "A teacher teaches students, and an examiner tests them.",
        "FOL": "∀x ∀y (Teacher(x) ∧ Student(y) → Teach(x, y)) ∧ ∀z ∀w (Examiner(z) ∧ Student(w) → Test(z, w))"
    },
    {
        "NL": "No dogs are big.",
        "FOL": "∀x (Dog(x) → ¬Big(x))"
    },
    {
        "NL": "A building is either tall or short, but never both or neither.",
        "FOL": "∀x (Building(x) → (Tall(x) ⊕ Short(x)))"
    },
    {
        "NL": "Analog watches display time with hands, while digital watches use numbers.",
        "FOL": "∀x ∀y (AnalogWatch(x) ∧ DigitalWatch(y) → (DisplaysTimeWithHands(x) ∧ DisplaysTimeWithNumbers(y)))"
    },
    {
        "NL": "Birds can fly, but not all birds are capable of flight.",
        "FOL": "∃x ∀y (Bird(x) ∧ Bird(y) → (CanFly(x) ∧ ¬CanFly(y)))"
    },
    {
        "NL": "A computer program executes instructions by processing data, carrying out calculations, and performing operations on inputs to produce outputs.",
        "FOL": "∀x∀y (ComputerProgram(x) ∧ (Data(y) ∧ Calculations(z) ∧ Inputs(w) ∧ Outputs(u)) → ExecutesInstructionsAndProcesses(x, y, z, w, u))"
    },
    {
        "NL": "Doctors diagnose and treat patients.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) → Diagnoses(x, y) ∧ Treats(x, y))"
    },
    {
        "NL": "A successful crowdfunding campaign reaches its funding goal, has a well-defined project scope, and demonstrates the potential for future growth or impact.",
        "FOL": "∀x ∀y ∀z (CrowdfundingCampaign(x) ∧ FundingGoal(x, y) ∧ WellDefinedProjectScope(x, z) ∧ DemonstratesPotentialForFutureGrowthOrImpact(x) → Successful(x))"
    },
    {
        "NL": "Wearing sunscreen protects the skin from sunburn and reduces the risk of skin cancer.",
        "FOL": "∀x (Sunscreen(x) → (ProtectsSkinFromSunburn(x) ∧ ReducesSkinCancerRisk(x)))"
    },
    {
        "NL": "A machine that processes input data, performs calculations, and generates output based on a set of instructions is a computer.",
        "FOL": "∀x ∀y ∀z (Machine(x) ∧ ProcessesInputData(x, y) ∧ PerformsCalculations(x) ∧ GeneratesOutputBasedOnInstructions(x, z) → Computer(x))"
    },
    {
        "NL": "Some students are either undergraduates or graduates, but not both.",
        "FOL": "∃x (Student(x) ∧ (Undergraduate(x) ⊕ Graduate(x)))"
    },
    {
        "NL": "Several politicians are either democrats or republicans, but not both.",
        "FOL": "∃x (Politician(x) ∧ (Democrat(x) ⊕ Republican(x)))"
    },
    {
        "NL": "A vacation is relaxing if it includes beautiful scenery and enjoyable activities.",
        "FOL": "∀x (Vacation(x) ∧ Relaxing(x) → (BeautifulScenery(x) ∧ EnjoyableActivities(x)))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur, gives birth to live young, and produces milk to feed its offspring.",
        "FOL": "∀x (Mammal(x) ↔ (Animal(x) ∧ HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x)))"
    },
    {
        "NL": "There is no scientist who has conducted every experiment on astrophysics.",
        "FOL": "¬∃x (Scientist(x) ∧ ∀y (Experiment(y) ∧ OnAstrophysics(y) → Conducted(x, y)))"
    },
    {
        "NL": "John reads books, while Mary writes poems.",
        "FOL": "∃x ∃y (Person(x) ∧ Book(y) ∧ Reads(x, y)) ∧ ∃z ∃w (Person(z) ∧ Poem(w) ∧ Writes(z, w))"
    },
    {
        "NL": "An artwork becomes valuable if it gains recognition and is considered rare.",
        "FOL": "∀x (Artwork(x) ∧ GainsRecognition(x) ∧ Rare(x) → Valuable(x))"
    },
    {
        "NL": "A solar panel x generates power at location y if it receives sufficient sunlight and is installed at the correct angle relative to y.",
        "FOL": "∀x ∀y (SolarPanel(x) ∧ Location(y) ∧ ReceivesSufficientSunlight(x, y) ∧ InstalledAtCorrectAngle(x, y) → GeneratesPower(x, y))"
    },
    {
        "NL": "A painting is striking if it has vivid colors and a unique style, but it's not overly simplistic or overly complex.",
        "FOL": "∀x (Painting(x) ∧ Striking(x) ↔ (VividColors(x) ∧ UniqueStyle(x) ∧ ¬OverlySimplistic(x) ∧ ¬OverlyComplex(x)))"
    },
    {
        "NL": "A river flows from a source, such as a spring or glacier, and eventually empties into a body of water like an ocean, sea, or lake.",
        "FOL": "∀x∀y∀z (River(x) → (FlowsFromSource(x, y) ∧ (Spring(y) ∨ Glacier(y)) ∧ EmptiesInto(x, z) ∧ (Ocean(z) ∨ Sea(z) ∨ Lake(z))))"
    },
    {
        "NL": "A bird can fly and build nests, while an insect can crawl and sometimes fly as well.",
        "FOL": "∀x (Bird(x) ∧ (CanFly(x) ∨ BuildsNests(x)) ∧ Insect(x) ∧ (CanCrawl(x) ∨ CanFly(x)))"
    },
    {
        "NL": "A farm grows crops.",
        "FOL": "∀x ∃y (Farm(x) ∧ Crop(y) ∧ GrowsOn(y, x))"
    },
    {
        "NL": "A rainforest ecosystem is characterized by high biodiversity, complex interactions among various species, and an abundance of plant and animal life, playing a critical role in regulating the Earth's climate.",
        "FOL": "∀x ∀y ∀z (RainforestEcosystem(x) ↔ (HighBiodiversity(x) ∧ ComplexInteractionsAmongSpecies(x, y, z) ∧ AbundanceOfPlantAndAnimalLife(x) ∧ RegulatesEarthsClimate(x)))"
    },
    {
        "NL": "Nobody in the team scored a goal.",
        "FOL": "¬∃x (Player(x) ∧ InTeam(x) ∧ ScoredGoal(x))"
    },
    {
        "NL": "A molecule is classified as an enzyme if it is a protein and acts as a catalyst to accelerate chemical reactions.",
        "FOL": "∀x (Molecule(x) ∧ Protein(x) ∧ ActsAsCatalyst(x) ∧ AcceleratesChemicalReactions(x) → Enzyme(x))"
    },
    {
        "NL": "A beverage is cold if it has been refrigerated or contains ice.",
        "FOL": "∀x (Beverage(x) ∧ Cold(x) ↔ (Refrigerated(x) ∨ ContainsIce(x)))"
    },
    {
        "NL": "There is no chef who cooks both Italian and French cuisines but has never worked in a restaurant.",
        "FOL": "¬∃x (Chef(x) ∧ CooksItalian(x) ∧ CooksFrench(x) ∧ ¬WorkedInRestaurant(x))"
    },
    {
        "NL": "Consistent practice leads to mastery.",
        "FOL": "∀x (ConsistentPractice(x) → LeadsToMastery(x))"
    },
    {
        "NL": "A fan circulates air by spinning its blades, while an air conditioner cools air and doesn't have spinning blades.",
        "FOL": "∀x∀y (Fan(x) ∧ AirConditioner(y) → (CirculatesAirWithBlades(x) ∧ CoolsAir(y) ∧ ¬HasSpinningBlades(y)))"
    },
    {
        "NL": "An innovative power source, like hydrogen or nuclear energy, can create electrical power without utilizing charcoal, and it helps in lessening global warming.",
        "FOL": "∀x (InnovativePowerSource(x) ∧ (HydrogenEnergy(x) ∨ NuclearEnergy(x)) → (CreatesElectricalPowerWithoutUtilizingCharcoal(x) ∧ HelpsLessenGlobalWarming(x)))"
    },
    {
        "NL": "Bright doctors don't surf.",
        "FOL": "∀x (Doctor(x) ∧ Bright(x) → ¬Surf(x))"
    },
    {
        "NL": "A river connects two bodies of water if it flows from one to the other, allowing the exchange of water, nutrients, and sediment.",
        "FOL": "∀x ∀y ∀z (River(x) ∧ BodyOfWater(y) ∧ BodyOfWater(z) ∧ FlowsFromOneToTheOther(x, y, z) → ConnectsBodiesOfWater(x))"
    },
    {
        "NL": "A sustainable fisheries management approach involves habitat conservation, catch limits, and monitoring of fishing practices to maintain healthy fish populations and support the marine ecosystem.",
        "FOL": "∀x∀y (SustainableFisheriesManagementApproach(x) ∧ HabitatConservation(x) ∧ CatchLimits(y) ∧ MonitoringFishingPractices(x) → (MaintainsHealthyFishPopulations(x) ∧ SupportsMarineEcosystem(x)))"
    },
    {
        "NL": "Trains travel on tracks, and boats sail on water.",
        "FOL": "∀x ∀y (Train(x) ∧ Boat(y) → (TravelsOnTracks(x) ∧ SailsOnWater(y)))"
    },
    {
        "NL": "A person who studies and researches human history and prehistory is called a historian.",
        "FOL": "∀x (StudiesAndResearchesHumanHistoryAndPrehistory(x) → Historian(x))"
    },
    {
        "NL": "An airplane can either be a commercial airplane or a military airplane, but not both.",
        "FOL": "∀x (Airplane(x) → (CommercialAirplane(x) ⊕ MilitaryAirplane(x)))"
    },
    {
        "NL": "A film is deemed a blockbuster if it is popular and has more than 100 million dollars of earning.",
        "FOL": "∀x (Film(x) ∧ Popular(x) ∧ HasMoreThanHundredMillionDollarsEarnings(x) → Blockbuster(x))"
    },
    {
        "NL": "Dogs are domestic animals and stay at home, whereas wolves are wild animals and live in forests.",
        "FOL": "∀x (Dog(x) → (DomesticAnimal(x) ∧ StaysAtHome(x))) ∧ ∀y (Wolf(y) → (WildAnimal(y) ∧ LivesInForests(y)))"
    },
    {
        "NL": "Some buildings have both residential and commercial purposes.",
        "FOL": "∃x (Building(x) ∧ ResidentialPurpose(x) ∧ CommercialPurpose(x))"
    },
    {
        "NL": "A valid email address contains an \"@\" symbol followed by a domain name and a top-level domain.",
        "FOL": "∀x (ValidEmailAddress(x) ↔ (∃y ∃z (ContainsAtSymbol(x) ∧ DomainName(y) ∧ TopLevelDomain(z) ∧ FollowedBy(x, y, z))))"
    },
    {
        "NL": "An object is radioactive if it emits ionizing radiation and has unstable atomic nuclei.",
        "FOL": "∀x (Object(x) → (Radioactive(x) ↔ (EmitsIonizingRadiation(x) ∧ HasUnstableAtomicNuclei(x))))"
    },
    {
        "NL": "Some shapes are either convex or concave, but not both.",
        "FOL": "∃x (Shape(x) ∧ (Convex(x) ⊕ Concave(x)))"
    },
    {
        "NL": "Something is a giant tree.",
        "FOL": "∃x (Tree(x) ∧ Giant(x))"
    },
    {
        "NL": "No chefs are resourceful unless they are passionate, but all of them hope to serve.",
        "FOL": "∀x (Chef(x) → (¬Resourceful(x) ∨ Passionate(x))) ∧ ∀y (Chef(y) → HopeToServe(y))"
    },
    {
        "NL": "An actor delivers a compelling performance if they convey emotions convincingly, display physicality, and exhibit strong vocal skills, but not if they struggle with memorizing lines.",
        "FOL": "∀x (Actor(x) ∧ ((ConveyEmotions(x) ∧ DisplayPhysicality(x) ∧ StrongVocalSkills(x)) ∧ ¬StruggleMemorizingLines(x) → CompellingPerformance(x)))"
    },
    {
        "NL": "A dessert is either cold or hot, but not both.",
        "FOL": "∃x (Dessert(x) ∧ (Cold(x) ∧ ¬Hot(x) ∨ (¬Cold(x) ∧ Hot(x))))"
    },
    {
        "NL": "A vacation destination is popular if it has beautiful scenery, a variety of attractions, and offers comfortable accommodations.",
        "FOL": "∀x (VacationDestination(x) ∧ Popular(x) ↔ (BeautifulScenery(x) ∧ VarietyOfAttractions(x) ∧ ComfortableAccommodations(x)))"
    },
    {
        "NL": "A school has teachers, students, and a principal.",
        "FOL": "∀x (School(x) → ∃y∃z∃w (Teacher(y) ∧ Student(z) ∧ Principal(w) ∧ BelongsTo(y, x) ∧ BelongsTo(z, x) ∧ BelongsTo(w, x)))"
    },
    {
        "NL": "Herbivores, like deer and rabbits, feed primarily on plant material, while carnivores, such as lions and tigers, consume other animals for sustenance.",
        "FOL": "∀x ∀y ∀z (Herbivore(x) ∧ (Deer(x) ∨ Rabbit(x)) ∧ Plant(y) ∧ Carnivore(z) ∧ (Lion(z) ∨ Tiger(z)) ∧ Animal(a) → (FeedsOn(x, y) ∧ Consumes(z, a)))"
    },
    {
        "NL": "A cherry tree is a type of tree that generates cherries, a date tree is a type of tree with thin long leaves, and an oak tree is a type of tree with sharp leaves and acorns.",
        "FOL": "∀x ∃y (CherryTree(x) → Cherry(y) ∧ Generate(x, y)) ∧ ∀z (DateTree(z) → HasThinLongLeaves(z)) ∧ ∀w (OakTree(w) → HasSharpLeaves(w) ∧ HasAcorn(w))"
    },
    {
        "NL": "Something is a robot if and only if it executes tasks or follows commands.",
        "FOL": "∀x (Robot(x) ↔ (ExecuteTasks(x) ∨ FollowCommands(x)))"
    },
    {
        "NL": "No teacher who idolizes every student is admired by anyone.",
        "FOL": "∀x (Teacher(x) → ∀y ((Student(y) → Idolizes(x, y)) → ¬∃z (Person(z) ∧ Admire(z, x))))"
    },
    {
        "NL": "A catalyst accelerates a chemical reaction by lowering the activation energy needed for the reaction to occur.",
        "FOL": "∀x ∀y (Catalyst(x) ∧ ChemicalReaction(y) ∧ ActivationEnergy(a) → AcceleratesByLoweringEnergy(x, y, a))"
    },
    {
        "NL": "A movie can be either a comedy or a drama, and it can be a box office hit or not, leading to four possible outcomes.",
        "FOL": "∀x (Movie(x) → ((Comedy(x) ∨ Drama(x)) ∧ (BoxOfficeHit(x) ∨ ¬BoxOfficeHit(x))))"
    },
    {
        "NL": "A chef is cooking a meal in the kitchen, or a carpenter is building a table in the workshop.",
        "FOL": "∃x ∃y (Chef(x) ∧ Meal(y) ∧ Cooking(x, y) ∧ InTheKitchen(x)) ∨ ∃z ∃w (Carpenter(z) ∧ Table(w) ∧ Building(z, w) ∧ InTheWorkshop(z))"
    },
    {
        "NL": "A savanna is a tropical grassland ecosystem with scattered trees, distinct wet and dry seasons, and supports a diverse range of wildlife.",
        "FOL": "∀x (Savanna(x) → (TropicalGrasslandEcosystem(x) ∧ ScatteredTrees(x) ∧ DistinctWetAndDrySeasons(x) ∧ SupportsDiverseRangeOfWildlife(x)))"
    },
    {
        "NL": "Every painter who has exhibited with a gallery that is popular, either sells a masterpiece or is appreciated by all admirers.",
        "FOL": "∀x (Painter(x) ∧ ∀y (Gallery(y) ∧ ExhibitedWith(x, y) ∧ Popular(y)) → (SellsMasterpiece(x) ∨ ∀z (Admirer(z) ∧ AppreciatedBy(x, z))))"
    },
    {
        "NL": "A software program is a video game if it provides interactive entertainment through visual, auditory, and input elements.",
        "FOL": "∀x (SoftwareProgram(x) ∧ InteractiveEntertainment(x) ∧ VisualElements(x) ∧ AuditoryElements(x) ∧ InputElements(x) → VideoGame(x))"
    },
    {
        "NL": "A research paper x is accepted for publication in a journal y if it meets the journal's submission guidelines z and passes the peer review process.",
        "FOL": "∀x ∀y ∀z (ResearchPaper(x) ∧ Journal(y) ∧ SubmissionGuidelines(z) ∧ MeetsGuidelines(x, z) ∧ PassesPeerReview(x) → AcceptedForPublication(x, y))"
    },
    {
        "NL": "The elephant is gigantic.",
        "FOL": "∀x (Elephant(x) → Gigantic(x))"
    },
    {
        "NL": "Birds fly in the sky, while fish swim in the water.",
        "FOL": "∀x ∀y (Bird(x) ∧ Sky(y) → FliesIn(x, y)) ∧ ∀z ∀w (Fish(z) ∧ Water(w) → SwimsIn(z, w))"
    },
    {
        "NL": "If a person is tired, then they are likely to fall asleep.",
        "FOL": "∀x (Person(x) ∧ Tired(x) → LikelyToFallAsleep(x))"
    },
    {
        "NL": "Some movies are in color, while others are in black and white, and some are silent.",
        "FOL": "∃x∃y∃z (Movie(x) ∧ Color(x) ∧ Movie(y) ∧ BlackAndWhite(y) ∧ Movie(z) ∧ Silent(z))"
    },
    {
        "NL": "If a vehicle is a car, it is either electric or runs on petrol.",
        "FOL": "∀x (Vehicle(x) ∧ Car(x) → Electric(x) ⊕ RunsOnPetrol(x))"
    },
    {
        "NL": "An employee receives a promotion when their performance is better than other employees and they have completed the required training.",
        "FOL": "∀x∀y∀z (Employee(x) ∧ Employee(y) ∧ Training(z) ∧ BetterPerformance(x, y) ∧ CompletedTraining(x, z) → ReceivesPromotion(x))"
    },
    {
        "NL": "A valid email address must contain a username, an \"@\" symbol, and a domain name with a top-level domain.",
        "FOL": "∀x (EmailAddress(x) → (Valid(x) ↔ (HasUsername(x) ∧ HasAtSymbol(x) ∧ HasDomainNameWithTopLevelDomain(x))))"
    },
    {
        "NL": "Insects with six legs and three body segments are classified as arthropods.",
        "FOL": "∀x (Insect(x) ∧ SixLegs(x) ∧ ThreeBodySegments(x) → Arthropod(x))"
    },
    {
        "NL": "A vehicle is classified as a car if it has four wheels and uses gasoline.",
        "FOL": "∀x (Vehicle(x) ∧ HasFourWheels(x) ∧ UsesGasoline(x) → Car(x))"
    },
    {
        "NL": "A pet owner should provide a balanced diet and regular exercise for their pets to maintain good health.",
        "FOL": "∀x∀y (PetOwner(x) ∧ Pet(y) ∧ Owns(x, y) → (ProvidesBalancedDiet(x, y) ∧ ProvidesRegularExercise(x, y)))"
    },
    {
        "NL": "A company can achieve long-term success by continuously innovating, adapting to market changes, and providing value to its customers.",
        "FOL": "∀x (Company(x) → (LongTermSuccess(x) ↔ (Innovating(x) ∧ AdaptingToMarketChanges(x) ∧ ProvidingValueToCustomers(x))))"
    },
    {
        "NL": "A vacation is relaxing if it involves leisure activities or beautiful natural surroundings.",
        "FOL": "∀x (Vacation(x) ∧ (LeisureActivities(x) ∨ BeautifulNaturalSurroundings(x)) → Relaxing(x))"
    },
    {
        "NL": "There exist waters where some fish do not swim.",
        "FOL": "∃x ∃y (Water(x) ∧ Fish(y) ∧ ¬SwimIn(y, x))"
    },
    {
        "NL": "If a person has a fever, their body temperature is above normal.",
        "FOL": "∀x (Person(x) ∧ HasFever(x) → BodyTemperatureAboveNormal(x))"
    },
    {
        "NL": "A spacecraft can land on a celestial body if it has a solid surface, the gravitational pull is within acceptable limits, and the atmosphere is not hazardous.",
        "FOL": "∀x∀y (Spacecraft(x) ∧ CelestialBody(y) ∧ SolidSurface(y) ∧ AcceptableGravitationalPull(y) ∧ ¬HazardousAtmosphere(y) → CanLand(x, y))"
    },
    {
        "NL": "A meal is considered nutritious if it contains an adequate amount of vitamins, minerals, and proteins.",
        "FOL": "∀x∀y∀z (Meal(x) ∧ AdequateAmountOfVitamins(x, y) ∧ AdequateAmountOfMinerals(x, z) ∧ ContainsProtein(x) → Nutritious(x))"
    },
    {
        "NL": "A bakery produces various baked goods, such as bread, pastries, and cakes.",
        "FOL": "∀x (Bakery(x) → Produce(x, bread) ∨ Produce(x, pastries) ∨ Produce(x, cakes))"
    },
    {
        "NL": "There are jobs that require technical skills, offer flexible hours, and provide health benefits.",
        "FOL": "∃x (Job(x) ∧ RequiresTechnicalSkills(x) ∧ OffersFlexibleHours(x) ∧ ProvidesHealthBenefits(x))"
    },
    {
        "NL": "Trustworthy leaders do not lie.",
        "FOL": "∀x (Leader(x) ∧ Trustworthy(x) → ¬Lie(x))"
    },
    {
        "NL": "A school is regarded as elite if it has a high pass rate and seasoned faculty members.",
        "FOL": "∀x (School(x) ∧ HasHighPassRate(x) ∧ HasSeasonedFaculty(x) → Elite(x))"
    },
    {
        "NL": "A vehicle is fuel-efficient when its engine has low emissions, aerodynamics are optimized, and its tires are properly inflated.",
        "FOL": "∀x (Vehicle(x) → (FuelEfficient(x) ↔ (LowEmissions(x) ∧ OptimizedAerodynamics(x) ∧ ProperlyInflatedTires(x))))"
    },
    {
        "NL": "A triangle has three angles that sum up to 180 degrees.",
        "FOL": "∀x (Triangle(x) → AnglesSumTo180Degrees(x))"
    },
    {
        "NL": "A two-wheeled vehicle powered by an electric motor, operated by a rider, and featuring a rechargeable battery is an electric bicycle.",
        "FOL": "∀x (TwoWheeledVehicle(x) ∧ PoweredByElectricMotor(x) ∧ OperatedByRider(x) ∧ FeaturesRechargeableBattery(x) → ElectricBicycle(x))"
    },
    {
        "NL": "Every policeman enforces the law, but only criminals break the law.",
        "FOL": "∀x (Policeman(x) → EnforcesLaw(x)) ∧ ∀y (Criminal(y) → BreaksLaw(y))"
    },
    {
        "NL": "All cars are expensive or some birds are colorful if and only if there exists a book which is interesting unless there are no witches.",
        "FOL": "(∀x (Car(x) → Expensive(x)) ∨ ∃y (Bird(y) ∧ Colorful(y))) ↔ (∃z (Book(z) ∧ (Interesting(z) ∨ ∀w (¬Witch(w)))))"
    },
    {
        "NL": "An intelligent student learns rapidly.",
        "FOL": "∀x (IntelligentStudent(x) → LearnsRapidly(x))"
    },
    {
        "NL": "If all movies are not entertaining, then there is a song that all songs are based on.",
        "FOL": "¬∀x (Movie(x) → Entertaining(x)) → ∃y (Song(y) ∧ ∀z (Song(z) → BasedOn(z, y)))"
    },
    {
        "NL": "A scientific experiment yields accurate results when it employs a well-designed methodology, uses precise instruments, and follows rigorous controls.",
        "FOL": "∀x (ScientificExperiment(x) ∧ WellDesignedMethodology(x) ∧ PreciseInstruments(x) ∧ RigorousControls(x) → YieldsAccurateResults(x))"
    },
    {
        "NL": "Any workstation that connects to Ethernet also enables processing of multiple operations and access to cyber platforms.",
        "FOL": "∀x (Workstation(x) → (ConnectsToEthernet(x) ∧ EnablesProcessingOfMultiOperations(x) ∧ EnablesAccessToCyberPlatforms(x)))"
    },
    {
        "NL": "All swans are birds, and white swans are found in Europe.",
        "FOL": "∀x (Swan(x) → Bird(x)) ∧ ∀y (WhiteSwan(y) → FoundIn(y, europe))"
    },
    {
        "NL": "A violin is a string instrument, while a trumpet is a brass instrument.",
        "FOL": "∀x∀y (Violin(x) ∧ Trumpet(y) → (StringInstrument(x) ∧ BrassInstrument(y)))"
    },
    {
        "NL": "An astronaut is orbiting around a planet.",
        "FOL": "∃x ∃y (Astronaut(x) ∧ Planet(y) ∧ OrbitingAround(x, y))"
    },
    {
        "NL": "Squares are not guns.",
        "FOL": "¬∃x (Square(x) ∧ Gun(x))"
    },
    {
        "NL": "A system of government in which power is divided between a central authority and constituent political units, such as states or provinces, is federalism.",
        "FOL": "∀x (SystemOfGovernment(x) ∧ PowerDividedBetweenCentralAuthorityAndConstituentUnits(x) → Federalism(x))"
    },
    {
        "NL": "If there are no majestic paintings, then no observer appreciates any sculpture.",
        "FOL": "¬∃x (MajesticPainting(x)) → ¬∃y (Observer(y) ∧ ∃z (Sculpture(z) ∧ Appreciate(y, z)))"
    },
    {
        "NL": "A train arrives at a station only if it follows a railway track that connects to the station.",
        "FOL": "∀x∀y∀z (Train(x) ∧ Station(y) ∧ RailwayTrack(z) ∧ ConnectsTo(z, y) ∧ Follows(x, z) → ArrivesAt(x, y))"
    },
    {
        "NL": "Trees with leaves and deep roots grow well.",
        "FOL": "∀x (Tree(x) ∧ Leaves(x) ∧ DeepRoots(x) → GrowsWell(x))"
    },
    {
        "NL": "A fruit is ripe when its color changes to the appropriate hue, it becomes softer, and it emits a sweet aroma.",
        "FOL": "∀x (Fruit(x) ∧ ColorChange(x) ∧ Soft(x) ∧ SweetAroma(x) → Ripe(x))"
    },
    {
        "NL": "A laptop is portable if it has a lightweight design and long battery life, but not if it's too large.",
        "FOL": "∀x (Laptop(x) ∧ ((LightweightDesign(x) ∧ LongBatteryLife(x)) ∧ ¬TooLarge(x) → Portable(x)))"
    },
    {
        "NL": "A construction material is suitable for indoor or outdoor use, but not if it's sensitive to temperature fluctuations or if it's prone to water damage.",
        "FOL": "∀x (ConstructionMaterial(x) ∧ ¬(SensitiveToTemperatureFluctuations(x) ∨ ProneToWaterDamage(x)) → (SuitableForIndoorUse(x) ∨ SuitableForOutdoorUse(x)))"
    },
    {
        "NL": "A computer program that assists users in performing tasks, has a graphical user interface, and can run on various operating systems is an application software.",
        "FOL": "∀x∀y (ComputerProgram(x) ∧ AssistsUsersInPerformingTasks(x) ∧ GraphicalUserInterface(x) ∧ VariousOperatingSystems(y) ∧ CanRunOn(x, y) → ApplicationSoftware(x))"
    },
    {
        "NL": "A person who develops and implements marketing strategies for businesses is called a marketing manager.",
        "FOL": "∀x (DevelopsAndImplementsMarketingStrategies(x) → MarketingManager(x))"
    },
    {
        "NL": "A book is either fiction or non-fiction.",
        "FOL": "∀x (Fiction(x) ⊕ NonFiction(x))"
    },
    {
        "NL": "A room is illuminated when a lamp is turned on and not obstructed, or when sunlight enters through a window.",
        "FOL": "∀x∀y∀z (Room(x) ∧ Lamp(y) ∧ TurnedOn(y) ∧ ¬Obstructed(y) ∨ (Sunlight(z) ∧ EntersThroughWindow(x, z)) → Illuminated(x))"
    },
    {
        "NL": "A plant x needs sunlight if x is a sunflower.",
        "FOL": "∀x (Plant(x) ∧ Sunflower(x) → NeedsSunlight(x))"
    },
    {
        "NL": "Peter appreciates a Scorsese film if and only if it was debuted in 1970.",
        "FOL": "∀x (Film(x) ∧ DirectedBy(x, scorsese) → (DebutedInNineteenSeventy(x) ↔ Appreciates(peter, x)))"
    },
    {
        "NL": "Every computer is not a PC or a laptop.",
        "FOL": "¬∀x (Computer(x) → (PC(x) ∨ Laptop(x)))"
    },
    {
        "NL": "A bakery sells pastries and bread, but not vegetables or meat.",
        "FOL": "∀x ∀y (Bakery(x) → (Sells(x, y) → (Pastry(y) ∨ Bread(y)) ∧ ¬(Vegetable(y) ∨ Meat(y))))"
    },
    {
        "NL": "It is not true that an object is flat if it is connected to a large object.",
        "FOL": "¬∀x ∃y (Large(y) ∧ ConnectedTo(x, y) → Flat(x))"
    },
    {
        "NL": "A person who is trained and certified to provide emergency medical care and transport injured or sick people to a medical facility is a paramedic.",
        "FOL": "∀x (Person(x) ∧ TrainedInEmergencyMedicalCare(x) ∧ Certified(x) ∧ ProvidesEmergencyMedicalCare(x) ∧ TransportsInjuredOrSick(x) → Paramedic(x))"
    },
    {
        "NL": "A coral reef, built by the calcium carbonate skeletons of coral polyps, supports a high diversity of marine life, provides protection from storms and erosion, and attracts tourists for recreational activities such as snorkeling and scuba diving.",
        "FOL": "∀x ∀y ∀z (CoralReef(x) ∧ BuiltByCoralPolyps(x, y) ∧ SupportsHighDiversityOfMarineLife(x, z) ∧ ProvidesProtection(x) ∧ AttractsTourists(x, z))"
    },
    {
        "NL": "Bats are nocturnal and feed at night, while butterflies are diurnal and feed during the day.",
        "FOL": "∀x (Bat(x) → (Nocturnal(x) ∧ FeedsAtNight(x))) ∧ ∀y (Butterfly(y) → (Diurnal(y) ∧ FeedsDuringDay(y)))"
    },
    {
        "NL": "If a person is a salesperson, they either sell products or services.",
        "FOL": "∀x (Person(x) ∧ Salesperson(x) → SellProducts(x) ⊕ SellServices(x))"
    },
    {
        "NL": "An element that is not a metal can be a nonmetal or a metalloid.",
        "FOL": "∀x (Element(x) ∧ ¬Metal(x) → Nonmetal(x) ⊕ Metalloid(x))"
    },
    {
        "NL": "No deepest ocean exists, and no shallowest ocean exists.",
        "FOL": "∀x (Ocean(x) → (∃y (Ocean(y) ∧ Deeper(y, x)) ∧ ∃z (Ocean(z) ∧ MoreShallow(z, x))))"
    },
    {
        "NL": "A celestial event is a solar eclipse if it occurs when the Moon passes between the Sun and Earth, casting a shadow on Earth.",
        "FOL": "∀x (CelestialEvent(x) ∧ MoonPassesBetweenSunAndEarth(x) ∧ CastsShadowOnEarth(x) → SolarEclipse(x))"
    },
    {
        "NL": "A microwave oven heats food by producing electromagnetic waves.",
        "FOL": "∀x∀y (MicrowaveOven(x) ∧ Food(y) → HeatsByElectromagneticWaves(x, y))"
    },
    {
        "NL": "A city with a university attracts students and researchers.",
        "FOL": "∀x (City(x) ∧ HasUniversity(x) → AttractsStudents(x) ∧ AttractsResearchers(x))"
    },
    {
        "NL": "A fan cools a room when turned on and has no effect when turned off.",
        "FOL": "∀x ∀y (Fan(x) ∧ Room(y) → ((TurnedOn(x) → Cools(x, y)) ∧ (TurnedOff(x) → ¬Affects(x, y))))"
    },
    {
        "NL": "A planet is habitable for life if it has a stable orbit around a star, possesses liquid water, and maintains a suitable temperature range.",
        "FOL": "∀x (Planet(x) ∧ StableOrbitAroundStar(x) ∧ PossessesLiquidWater(x) ∧ SuitableTemperatureRange(x) → HabitableForLife(x))"
    },
    {
        "NL": "A tool used for cutting and has a sharp edge is a blade.",
        "FOL": "∀x (Tool(x) ∧ UsedForCutting(x) ∧ SharpEdge(x) → Blade(x))"
    },
    {
        "NL": "A cup of coffee contains caffeine.",
        "FOL": "∀x (CupOfCoffee(x) → ContainsCaffeine(x))"
    },
    {
        "NL": "A shape is either 2D or 3D, but not both.",
        "FOL": "∀x (Shape(x) → (TwoDimensional(x) ⊕ ThreeDimensional(x)))"
    },
    {
        "NL": "A lamp is turned on if it is connected to a power source and the switch is on.",
        "FOL": "∀x (Lamp(x) ∧ TurnedOn(x) ↔ (∃y (PowerSource(y) ∧ Connected(x, y)) ∧ SwitchOn(x)))"
    },
    {
        "NL": "All beverages are either hot or cold, but not both.",
        "FOL": "∀x (Beverage(x) → (Hot(x) ⊕ Cold(x)))"
    },
    {
        "NL": "A successful startup must have a visionary leader, a dedicated team, and a scalable business model.",
        "FOL": "∀x (Startup(x) → (Successful(x) ↔ (VisionaryLeader(x) ∧ DedicatedTeam(x) ∧ ScalableBusinessModel(x))))"
    },
    {
        "NL": "A phone makes calls, sends texts, and takes photos.",
        "FOL": "∀x (Phone(x) → (MakesCalls(x) ∧ SendsTexts(x) ∧ TakesPhotos(x)))"
    },
    {
        "NL": "Not every musician who plays guitar or piano has recorded an album or performed live.",
        "FOL": "¬∀x (Musician(x) ∧ (PlaysGuitar(x) ∨ PlaysPiano(x)) → (RecordedAlbum(x) ∨ PerformedLive(x)))"
    },
    {
        "NL": "Musicians play musical instruments.",
        "FOL": "∀x∀y (Musician(x) ∧ MusicalInstrument(y) → Plays(x, y))"
    },
    {
        "NL": "An engine that generates power by converting heat into mechanical work, has a heat source, and a cooling system is a heat engine.",
        "FOL": "∀x∀y (Engine(x) ∧ GeneratesPowerByConvertingHeatIntoMechanicalWork(x) ∧ HasHeatSource(x, y) ∧ HasCoolingSystem(x) → HeatEngine(x))"
    },
    {
        "NL": "A switch is on or off, never both.",
        "FOL": "∀x (Switch(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A habitat that provides food, water, and shelter for a diverse range of species is a rich ecosystem.",
        "FOL": "∀x ((Habitat(x) ∧ ProvidesFood(x) ∧ ProvidesWater(x) ∧ ProvidesShelter(x)) → RichEcosystem(x))"
    },
    {
        "NL": "A meal is nutritious when it contains a balance of proteins, carbohydrates, and fats.",
        "FOL": "∀x (Meal(x) ∧ BalancedProteins(x) ∧ BalancedCarbohydrates(x) ∧ BalancedFats(x) → Nutritious(x))"
    },
    {
        "NL": "A self-driving car navigates and operates without human input, utilizing a combination of sensors, cameras, and artificial intelligence to perceive its environment and make driving decisions.",
        "FOL": "∀x ∀y ∀z (SelfDrivingCar(x) ↔ (NavigatesWithoutHumanInput(x) ∧ OperatesWithoutHumanInput(x) ∧ UtilizesSensors(x, y) ∧ UtilizesCameras(x, z) ∧ UtilizesArtificialIntelligence(x)))"
    },
    {
        "NL": "A chef cooks Italian or Chinese cuisines.",
        "FOL": "∀x (Chef(x) → (CooksItalian(x) ∨ CooksChinese(x)))"
    },
    {
        "NL": "An employee is considered as loyal if they have not changed companies for 5 years.",
        "FOL": "∀z (Employee(z) ∧ ¬ChangedCompaniesForFiveYears(z) → Loyal(z))"
    },
    {
        "NL": "If a fruit is ripe, it is either yellow or red.",
        "FOL": "∀x (Fruit(x) ∧ Ripe(x) → (Yellow(x) ⊕ Red(x)))"
    },
    {
        "NL": "A payment method is a credit card if it allows users to borrow money from a financial institution and requires repayment with interest.",
        "FOL": "∀x (PaymentMethod(x) ∧ BorrowMoney(x) ∧ RepaymentWithInterest(x) → CreditCard(x))"
    },
    {
        "NL": "A vehicle is fuel-efficient if it consumes less fuel than average vehicles for the same distance.",
        "FOL": "∀x (Vehicle(x) ∧ ConsumesLessFuel(x, AverageVehicles) → FuelEfficient(x))"
    },
    {
        "NL": "A person is considered elderly if they are over the age of 65.",
        "FOL": "∀x (Person(x) → (Elderly(x) ↔ OverAge65(x)))"
    },
    {
        "NL": "A type of software that provides a platform for managing and organizing data, allows for data manipulation and retrieval, and is designed for multiple users is classified as a database management system.",
        "FOL": "∀x (SoftwareType(x) ∧ ProvidesPlatformForDataManagement(x) ∧ AllowsDataManipulationAndRetrieval(x) ∧ DesignedForMultipleUsers(x) → DatabaseManagementSystem(x))"
    },
    {
        "NL": "Mammals give birth to live young, provide nourishment through milk, and typically have fur or hair covering their bodies.",
        "FOL": "∀x ∀y ∀z (Mammal(x) → (GivesBirthToLiveYoung(x, y) ∧ ProvidesNourishmentThroughMilk(x, y) ∧ HasFurOrHair(x, z)))"
    },
    {
        "NL": "A volcano can be active, dormant, or extinct, and is formed by the movement of tectonic plates.",
        "FOL": "∀x (Volcano(x) → ((Active(x) ∨ Dormant(x) ∨ Extinct(x)) ∧ FormedByTectonicPlates(x)))"
    },
    {
        "NL": "A plant can be classified as an indoor plant if it thrives in low light conditions, requires minimal maintenance, and adapts well to a controlled environment.",
        "FOL": "∀x (Plant(x) ∧ ThrivesInLowLightConditions(x) ∧ RequiresMinimalMaintenance(x) ∧ AdaptsWellToControlledEnvironment(x) → IndoorPlant(x))"
    },
    {
        "NL": "Plants release oxygen through photosynthesis and absorb carbon monoxide.",
        "FOL": "∀x (Plant(x) → (ReleasesOxygen(x) → Photosynthesis(x)) ∧ AbsorbsCarbonMonoxide(x))"
    },
    {
        "NL": "All humans praise Lucy",
        "FOL": "∀x (Human(x) → Praise(x, lucy))"
    },
    {
        "NL": "There is no teacher that teaches every calculus topic.",
        "FOL": "¬∃x (Teacher(x) ∧ ∀y (CalculusTopic(y) → Teaches(x, y)))"
    },
    {
        "NL": "A publication is deemed an autobiography if it portrays the life story of a certain being, penned by the being itself.",
        "FOL": "∀x ∃y (Publication(x) ∧ Being(y) ∧ PortraysLifeStory(x, y) ∧ PennedBy(x, y) → Autobiography(x))"
    },
    {
        "NL": "It is false that there's a library that has all old books.",
        "FOL": "¬∃x (Library(x) ∧ ∀y (Old(y) ∧ Book(y) → Has(x, y)))"
    },
    {
        "NL": "There are houses that are both big and small.",
        "FOL": "∃x (House(x) ∧ (Big(x) ∧ Small(x)))"
    },
    {
        "NL": "A room is considered a bedroom if it is used primarily for sleeping.",
        "FOL": "∀x (Room(x) ∧ UsedPrimarilyForSleeping(x) → Bedroom(x))"
    },
    {
        "NL": "A vacation destination is appealing if it offers beautiful scenery and a variety of activities.",
        "FOL": "∀x (VacationDestination(x) ∧ BeautifulScenery(x) ∧ VarietyOfActivities(x) → Appealing(x))"
    },
    {
        "NL": "Not every language is written or spoken.",
        "FOL": "¬(∀x (Language(x) → (Written(x) ∨ Spoken(x))))"
    },
    {
        "NL": "If a shape is a rectangle, it has four right angles but not four equal sides.",
        "FOL": "∀x (Shape(x) ∧ Rectangle(x) → (FourRightAngles(x) ∧ ¬FourEqualSides(x)))"
    },
    {
        "NL": "An athlete competes in running, swimming, or both in a triathlon.",
        "FOL": "∀x∀y (Athlete(x) ∧ Triathlon(y) → (CompetesIn(x, Running, y) ∨ CompetesIn(x, Swimming, y) ∨ (CompetesIn(x, Running, y) ∧ CompetesIn(x, Swimming, y))))"
    },
    {
        "NL": "Each artist is a creator, but not every creator is an artist.",
        "FOL": "∀x (Artist(x) → Creator(x)) ∧ ¬∀x (Creator(x) → Artist(x))"
    },
    {
        "NL": "Bicycles with lights increase visibility at night.",
        "FOL": "∀x (Bicycle(x) ∧ HasLights(x) → IncreasesVisibilityAtNight(x))"
    },
    {
        "NL": "An object is considered transparent if it allows light to pass through and forms clear images.",
        "FOL": "∀x (Object(x) ∧ AllowsLight(x) ∧ FormsClearImages(x) → Transparent(x))"
    },
    {
        "NL": "It's not the case that every laptop is portable.",
        "FOL": "¬∀x (Laptop(x) → Portable(x))"
    },
    {
        "NL": "A person can speak fluently in a language if they can understand, read, write, and speak it with ease.",
        "FOL": "∀x∀y (Person(x) ∧ Language(y) ∧ Understands(x, y) ∧ Reads(x, y) ∧ Writes(x, y) ∧ SpeaksWithEase(x, y) → Fluent(x, y))"
    },
    {
        "NL": "A country hosts the Olympic Games if it wins the bid and has the necessary infrastructure and facilities.",
        "FOL": "∀x (Country(x) ∧ WinsOlympicBid(x) ∧ HasNecessaryInfrastructure(x) ∧ HasNecessaryFacilities(x) → HostsOlympicGames(x))"
    },
    {
        "NL": "An electronic device functions properly if it has a stable power supply and no hardware or software issues.",
        "FOL": "∀x (ElectronicDevice(x) ∧ StablePowerSupply(x) ∧ ¬HardwareIssues(x) ∧ ¬SoftwareIssues(x) → FunctionsProperly(x))"
    },
    {
        "NL": "If a company is profitable, it has a positive net income.",
        "FOL": "∀x (Company(x) ∧ Profitable(x) → PositiveNetIncome(x))"
    },
    {
        "NL": "A battery is rechargeable if it can store energy multiple times after being depleted.",
        "FOL": "∀x (Battery(x) → (StoresEnergyMultipleTimes(x) → Rechargeable(x)))"
    },
    {
        "NL": "A building with a large number of floors and intended for residential use is an apartment building.",
        "FOL": "∀x (Building(x) ∧ LargeNumberOfFloors(x) ∧ IntendedForResidentialUse(x) → ApartmentBuilding(x))"
    },
    {
        "NL": "Lucas is not a musician and Ava is a musician.",
        "FOL": "¬Musician(lucas) ∧ Musician(ava)"
    },
    {
        "NL": "A factory manufactures products using raw materials and machinery, following a specific production process.",
        "FOL": "∀x ∀y ∀z (Factory(x) ∧ Product(y) ∧ RawMaterial(z) ∧ Machinery(m) ∧ ProductionProcess(p) → ManufacturesUsingFollowing(x, y, z, m, p))"
    },
    {
        "NL": "An animal is a cat or not a cat.",
        "FOL": "∀x (Animal(x) → (Cat(x) ⊕ ¬Cat(x)))"
    },
    {
        "NL": "If a plant receives sunlight and water, it grows.",
        "FOL": "∀x (Plant(x) ∧ ReceivesSunlight(x) ∧ ReceivesWater(x) → Grows(x))"
    },
    {
        "NL": "A plant requires sunlight and water to perform photosynthesis and produce energy.",
        "FOL": "∀x ∀y (Plant(x) ∧ Sunlight(y) ∧ Water(y) → PhotosynthesisAndEnergyProduction(x, y))"
    },
    {
        "NL": "In a solar eclipse, the Moon passes between the Earth and the Sun, casting a shadow on the Earth's surface.",
        "FOL": "∀x ∀y ∀z (SolarEclipse(x) ∧ Moon(y) ∧ Earth(z) ∧ PassesBetween(y, z, x) → CastsShadow(y, z))"
    },
    {
        "NL": "A restaurant is romantic if it has candlelight and quiet music.",
        "FOL": "∀x (Restaurant(x) ∧ Candlelight(x) ∧ QuietMusic(x) → Romantic(x))"
    },
    {
        "NL": "Every politician who has debated with at least one politician, who in turn has not won a state election, has either written more than two bills or attended all national meetings.",
        "FOL": "∀x (Politician(x) ∧ ∃y (Politician(y) ∧ ¬WonStateElection(y) ∧ DebatedWith(x, y)) → (WrittenMoreThanTwoBills(x) ∨ ∀z (NationalMeeting(z) → Attended(x, z))))"
    },
    {
        "NL": "A food storage container can be made from glass, plastic, or metal.",
        "FOL": "∀x (FoodStorageContainer(x) → MadeOfGlass(x) ∨ MadeOfPlastic(x) ∨ MadeOfMetal(x))"
    },
    {
        "NL": "A television show is a sitcom if it features a group of characters sharing a common environment, has humorous dialogue, and is episodic in nature.",
        "FOL": "∀x (TelevisionShow(x) → ((FeaturesGroupOfCharacters(x) ∧ HumorousDialogue(x) ∧ Episodic(x)) ↔ Sitcom(x)))"
    },
    {
        "NL": "A person who practices law and represents clients in court is a lawyer.",
        "FOL": "∀x (Person(x) ∧ PracticesLaw(x) ∧ RepresentsClientsInCourt(x) → Lawyer(x))"
    },
    {
        "NL": "A library stores and lends books, provides reading spaces, and offers research assistance.",
        "FOL": "∀x (Library(x) → (StoresBooks(x) ∧ LendsBooks(x) ∧ ProvidesReadingSpaces(x) ∧ OffersResearchAssistance(x)))"
    },
    {
        "NL": "A restaurant serves a variety of cuisines, such as Italian, Mexican, and Indian, and caters to dietary restrictions like vegan, gluten-free, and nut-free options.",
        "FOL": "∀x (Restaurant(x) ∧ (ItalianCuisine(x) ∨ MexicanCuisine(x) ∨ IndianCuisine(x)) → CatersToDietaryRestrictions(x))"
    },
    {
        "NL": "If a movie is a comedy, it is not a drama.",
        "FOL": "∀x (Movie(x) ∧ Comedy(x) → ¬Drama(x))"
    },
    {
        "NL": "A student studies for an exam or plays video games.",
        "FOL": "∀x (Student(x) → (StudiesForExam(x) ∨ PlaysVideoGames(x)))"
    },
    {
        "NL": "A planet orbits a star if it is affected by the star's gravitational force.",
        "FOL": "∀x∀y (Planet(x) ∧ Star(y) → (Orbits(x, y) ↔ AffectedByGravity(x, y)))"
    },
    {
        "NL": "A person is vegetarian if they do not consume any meat.",
        "FOL": "∀x (Person(x) ∧ ¬ConsumeMeat(x) → Vegetarian(x))"
    },
    {
        "NL": "A trip is memorable if and only if the destination is exotic and the experiences are unique, but it doesn't involve exorbitant expenses.",
        "FOL": "∀x (Trip(x) ∧ Memorable(x) ↔ (ExoticDestination(x) ∧ UniqueExperiences(x) ∧ ¬ExorbitantExpenses(x)))"
    },
    {
        "NL": "A garden thrives if it receives adequate sunlight, has nutrient-rich soil, and benefits from regular watering.",
        "FOL": "∀x (Garden(x) → (Thrives(x) ↔ (AdequateSunlight(x) ∧ NutrientRichSoil(x) ∧ RegularWatering(x))))"
    },
    {
        "NL": "A well-maintained bicycle with properly inflated tires and a lubricated chain provides a smoother and more efficient ride.",
        "FOL": "∀x (Bicycle(x) ∧ WellMaintainedWithProperlyInflatedTiresAndLubricatedChain(x) → SmootherAndMoreEfficientRide(x))"
    },
    {
        "NL": "If a musical instrument is a string instrument and played with a bow, it's not a percussion instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ StringInstrument(x) ∧ PlayedWithBow(x) → ¬PercussionInstrument(x))"
    },
    {
        "NL": "Fossil fuels contribute to climate change by emitting greenhouse gases, causing air pollution, and depleting non-renewable resources.",
        "FOL": "∀x (FossilFuel(x) → (ContributesToClimateChange(x) ∧ EmitsGreenhouseGases(x) ∧ CausesAirPollution(x) ∧ DepletesNonRenewableResources(x)))"
    },
    {
        "NL": "A bicycle requires pedaling, a motorcycle needs fuel, and an electric scooter depends on batteries.",
        "FOL": "∀x∀y∀z (Bicycle(x) ∧ Motorcycle(y) ∧ ElectricScooter(z) → (RequiresPedaling(x) ⊕ (NeedsFuel(y) ∨ DependsOnBatteries(z))))"
    },
    {
        "NL": "When a computer is connected to a network, it can access shared resources and communicate with other devices.",
        "FOL": "∀x (Computer(x) ∧ ConnectedToNetwork(x) → CanAccessSharedResources(x) ∧ CommunicatesWithOtherDevices(x))"
    },
    {
        "NL": "A living being is a grass if and only if it proliferates seeds or feeds on soil nutrients, but not saltwater.",
        "FOL": "∀x (LivingBeing(x) → (Grass(x) ↔ (ProliferatesSeeds(x) ∨ FeedsOnSoilNutrients(x)) ∧ ¬FeedsOnSaltwater(x)))"
    },
    {
        "NL": "A conference is productive when it fosters meaningful discussions and results in actionable insights.",
        "FOL": "∀x ∀y (Conference(x) ∧ FostersMeaningfulDiscussions(y) ∧ ResultsInActionableInsights(x) → Productive(x))"
    },
    {
        "NL": "A type of fuel that is derived from organic matter, stored in geological formations, and is commonly used to generate electricity is called a fossil fuel.",
        "FOL": "∀x (FuelType(x) ∧ DerivedFromOrganicMatter(x) ∧ StoredInGeologicalFormations(x) ∧ CommonlyUsedToGenerateElectricity(x) → FossilFuel(x))"
    },
    {
        "NL": "An astronomical object that has a strong gravitational pull, accumulates matter from its surroundings, and emits intense radiation is a type of celestial body known as an active galactic nucleus.",
        "FOL": "∀x ∀y ∀z (AstronomicalObject(x) ∧ GravitationalPull(y) ∧ AccumulatesMatter(z) ∧ StrongPull(x, y) ∧ FromSurroundings(x, z) ∧ EmitsIntenseRadiation(x) → ActiveGalacticNucleus(x))"
    },
    {
        "NL": "There is not an author who writes both fiction and non-fiction but has not signed a publishing deal.",
        "FOL": "¬∃x (Author(x) ∧ WritesFiction(x) ∧ WritesNonfiction(x) ∧ ¬SignedPublishingDeal(x))"
    },
    {
        "NL": "All athletes who are disciplined and have strength are victorious.",
        "FOL": "∀x (Athlete(x) ∧ Disciplined(x) ∧ HasStrength(x) → Victorious(x))"
    },
    {
        "NL": "Birds can fly, while fish can swim, and horses can run.",
        "FOL": "∀x∀y∀z (Bird(x) → CanFly(x)) ∧ (Fish(y) → CanSwim(y)) ∧ (Horse(z) → CanRun(z))"
    },
    {
        "NL": "Mathematicians solve equations, while physicists solve problems based on physical properties.",
        "FOL": "∀x ∀y (Mathematician(x) ∧ Equation(y) → Solves(x, y)) ∧ ∀z ∀w (Physicist(z) ∧ Problem(w) ∧ PhysicalProperty(w) → Solves(z, w))"
    },
    {
        "NL": "An organization has employees, operates in a specific industry, and may have a website, but not all organizations have websites.",
        "FOL": "∀x∀y (Organization(x) ∧ HasEmployees(x) ∧ OperatesInIndustry(x, y) ∧ (HasWebsite(x) ∨ ¬HasWebsite(x)))"
    },
    {
        "NL": "A toy is both educational and entertaining if it promotes learning, encourages creativity, and holds a child's attention, but it is not exclusively targeted at a specific age group.",
        "FOL": "∀x (Toy(x) → ((EducationalAndEntertaining(x) ↔ (PromotesLearning(x) ∧ EncouragesCreativity(x) ∧ HoldsAttention(x))) ∧ ¬TargetedAtSpecificAgeGroup(x)))"
    },
    {
        "NL": "A substance is a liquid if it flows and takes the shape of its container.",
        "FOL": "∀x (Substance(x) → (Liquid(x) ↔ (Flows(x) ∧ TakesShapeOfContainer(x))))"
    },
    {
        "NL": "If a thing is a book, then all entities are near a minute detail.",
        "FOL": "∃x (Book(x)) → ∀y ∃z (Minute(z) ∧ Near(y, z))"
    },
    {
        "NL": "A builder will construct the house only if he lays the foundation.",
        "FOL": "∀x (Builder(x) ∧ ConstructHouse(x) → LayFoundation(x))"
    },
    {
        "NL": "A musical composition x is a symphony if it is written for a full orchestra and typically consists of multiple movements.",
        "FOL": "∀x (MusicalComposition(x) ∧ WrittenForFullOrchestra(x) ∧ ConsistsOfMultipleMovements(x) → Symphony(x))"
    },
    {
        "NL": "There is no restaurant that all chefs work in if and only if there exists a restaurant where no chef works.",
        "FOL": "¬∃x (Restaurant(x) ∧ ∀y (Chef(y) → WorkIn(y, x))) ↔ ∃z (Restaurant(z) ∧ ∀w (Chef(w) → ¬WorkIn(z, w)))"
    },
    {
        "NL": "An athlete participates in either a team sport or an individual sport, but not in both types of sports.",
        "FOL": "∀x (Athlete(x) → (ParticipatesInTeamSport(x) ⊕ ParticipatesInIndividualSport(x)))"
    },
    {
        "NL": "A musician composes a piece of music by arranging notes, rhythms, and harmonies into a structured format.",
        "FOL": "∀x∀y (Musician(x) ∧ PieceOfMusic(y) → (Composes(x, y) ↔ (ArrangesNotes(x, y) ∧ ArrangesRhythms(x, y) ∧ ArrangesHarmonies(x, y))))"
    },
    {
        "NL": "A company is a startup or a multinational.",
        "FOL": "∀x (Company(x) → (Startup(x) ∨ Multinational(x)))"
    },
    {
        "NL": "A smartphone's battery drains faster when the screen brightness is high or multiple applications are running simultaneously.",
        "FOL": "∀x (Smartphone(x) → (BatteryDrainsFaster(x) ↔ (HighScreenBrightness(x) ∨ MultipleApplicationsRunning(x))))"
    },
    {
        "NL": "A fridge keeps food cold and may have a freezer compartment.",
        "FOL": "∀x (Fridge(x) → (KeepsFoodCold(x) ∧ (HasFreezerCompartment(x) ∨ ¬HasFreezerCompartment(x))))"
    },
    {
        "NL": "It's not the case that every car is small.",
        "FOL": "¬∀x (Car(x) → Small(x))"
    },
    {
        "NL": "A lighthouse, located near a coastline, emits a powerful beam of light to guide ships at sea and warn them of potential hazards.",
        "FOL": "∀x (Lighthouse(x) → (LocatedNearCoastline(x) ∧ EmitsPowerfulBeamOfLight(x) ∧ GuidesShips(x) ∧ WarnsOfPotentialHazards(x)))"
    },
    {
        "NL": "Roses are red, daisies are blue, and orchids are purple.",
        "FOL": "∀x (Rose(x) → Red(x)) ∧ ∀y (Daisy(y) → Blue(y)) ∧ ∀z (Orchid(z) → Purple(z))"
    },
    {
        "NL": "Kevin runs marathons or Kevin is a chef.",
        "FOL": "RunMarathons(kevin) ∨ Chef(kevin)"
    },
    {
        "NL": "An electronic device requires a power source to function.",
        "FOL": "∀x (ElectronicDevice(x) → RequiresPowerSource(x))"
    },
    {
        "NL": "Photographers capture images using cameras and various techniques like composition, lighting, and focus.",
        "FOL": "∀x (Photographer(x) ∧ CapturesImages(x) ∧ UsesCamera(x) ∧ CompositionTechnique(x) ∧ LightingTechnique(x) ∧ FocusTechnique(x))"
    },
    {
        "NL": "A company that implements environmentally friendly practices is more likely to reduce its environmental impact and attract eco-conscious consumers.",
        "FOL": "∀x (ImplementsEnvironmentallyFriendlyPractices(x) → (ReduceEnvironmentalImpact(x) ∧ AttractEcoConsciousConsumers(x)))"
    },
    {
        "NL": "A planet is habitable if it has suitable conditions for life.",
        "FOL": "∀x (Planet(x) ∧ SuitableConditionsForLife(x) → Habitable(x))"
    },
    {
        "NL": "A building that is primarily used for education, has multiple classrooms, and is managed by an educational institution is typically a school.",
        "FOL": "∀x∀y∀z (Building(x) ∧ UsedForEducation(x) ∧ MultipleClassrooms(y) ∧ Has(x, y) ∧ EducationalInstitution(z) ∧ ManagedBy(x, z) → School(x))"
    },
    {
        "NL": "Writers create stories with engaging characters and plot twists to captivate their readers.",
        "FOL": "∀x ∀y (Writer(x) ∧ Reader(y) → (CreatesStoriesWithEngagingCharacters(x) ∧ CreatesPlotTwists(x) ∧ Captivates(x, y)))"
    },
    {
        "NL": "A student who gets high grades in math, science, and literature is an excellent student.",
        "FOL": "∀x∀y∀z (Student(x) ∧ HighGradeInMath(x, y) ∧ HighGradeInScience(x, z) ∧ HighGradeInLiterature(x, z) → ExcellentStudent(x))"
    },
    {
        "NL": "A piece of software can be a mobile application, a web application, or a desktop application.",
        "FOL": "∀x (Software(x) → (MobileApplication(x) ∨ WebApplication(x) ∨ DesktopApplication(x)))"
    },
    {
        "NL": "A food item is a dessert if it is sweet, typically consumed after a main course, and contains ingredients such as sugar, fruit, or dairy products.",
        "FOL": "∀x∀y∀z (FoodItem(x) ∧ Sweet(x) ∧ TypicallyConsumedAfterMainCourse(x) ∧ ContainsIngredients(x, y, z) ∧ (Sugar(y) ∨ Fruit(y) ∨ DairyProducts(y)) → Dessert(x))"
    },
    {
        "NL": "A museum displays exhibits of art, history, or science, while an art gallery specifically exhibits art.",
        "FOL": "∀x ∀y (Museum(x) ∧ ArtGallery(y) → (DisplaysExhibits(x) ∧ (ArtExhibit(x) ∨ HistoryExhibit(x) ∨ ScienceExhibit(x)) ∧ ExhibitsArt(y)))"
    },
    {
        "NL": "All human beings get what they worked for and worked for what they don't get.",
        "FOL": "∀x (HumanBeing(x) → (∃y (WorkFor(x, y) ∧ Get(x, y)) ∧ ∃z (WorkFor(x, z) ∧ ¬Get(x, z))))"
    },
    {
        "NL": "Filmmakers direct movies, write screenplays, and may also act in their own films.",
        "FOL": "∀x∀y (Filmmaker(x) ∧ Movie(y) → (Directs(x, y) ∧ WritesScreenplay(x, y) ∧ (ActsIn(x, y) ∨ ¬ActsIn(x, y))))"
    },
    {
        "NL": "Every gardener plants trees, but not every tree planter is a gardener.",
        "FOL": "∀x (Gardener(x) → TreePlanter(x)) ∧ ¬∀x (TreePlanter(x) → Gardener(x))"
    },
    {
        "NL": "A dog barks when it senses danger.",
        "FOL": "∀x (Dog(x) ∧ SensesDanger(x) → Barks(x))"
    },
    {
        "NL": "Ripe fruits are sweeter than unripe ones.",
        "FOL": "∀x ∀y (Fruit(x) ∧ Ripe(x) ∧ Fruit(y) ∧ Unripe(y) → Sweeter(x, y))"
    },
    {
        "NL": "A computer can input data, process data, or output data.",
        "FOL": "∀x (Computer(x) → InputData(x) ∨ ProcessData(x) ∨ OutputData(x))"
    },
    {
        "NL": "A predator stalks and captures prey for nourishment, while a decomposer breaks down the remains of dead organisms.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) → StalksForNourishment(x, y) ∧ CapturesForNourishment(x, y)) ∧ ∀z ∀w (Decomposer(z) ∧ DeadOrganism(w) → BreaksDownRemainsOf(z, w))"
    },
    {
        "NL": "An athlete is successful if they are skilled and either disciplined or lucky.",
        "FOL": "∀x (Athlete(x) → (Successful(x) ↔ (Skilled(x) ∧ (Disciplined(x) ∨ Lucky(x)))))"
    },
    {
        "NL": "A parent can have multiple children, and a child can have multiple siblings.",
        "FOL": "∀x∀y (Parent(x) ∧ Child(y) → (CanHaveMultipleChildren(x) ∧ CanHaveMultipleSiblings(y)))"
    },
    {
        "NL": "A tidal energy generator is sustained by natural tidal movements, diminishing the threat of usage end and lessening negative impacts on habitats.",
        "FOL": "∀x (TidalEnergyGenerator(x) → (SustainedByNaturalTidalMovements(x) ∧ DiminishedThreatOfEndUsage(x) ∧ LessenedNegativeImpactsOnHabitats(x)))"
    },
    {
        "NL": "An instrument produces a melody if played with a bow or plucked.",
        "FOL": "∀x (Instrument(x) ∧ (PlayedWithBow(x) ∨ Plucked(x)) → Melody(x))"
    },
    {
        "NL": "A bee collects pollen from flowers or nectar from plants.",
        "FOL": "∀x∀y∀z (Bee(x) ∧ (Flower(y) ∨ Plant(z)) → CollectsPollen(x, y) ∨ CollectsNectar(x, z))"
    },
    {
        "NL": "Intelligent teachers never yell.",
        "FOL": "∀x (Teacher(x) ∧ Intelligent(x) → ¬Yell(x))"
    },
    {
        "NL": "A computer is portable if it has a battery and a screen smaller than 17 inches, but not if it weighs more than 6 pounds.",
        "FOL": "∀x (Portable(x) ↔ (Computer(x) ∧ HasBattery(x) ∧ ScreenSmallerThan17Inches(x) ∧ ¬WeighsMoreThan6Pounds(x)))"
    },
    {
        "NL": "A pizza is vegetarian if it does not contain meat or fish, but may include cheese and vegetables.",
        "FOL": "∀x (Pizza(x) → (¬Meat(x) ∧ ¬Fish(x) ∧ (Cheese(x) ∨ Vegetables(x)) → Vegetarian(x)))"
    },
    {
        "NL": "A scientist studies living organisms if they are a biologist.",
        "FOL": "∀x (Scientist(x) ∧ Biologist(x) → StudiesLivingOrganisms(x))"
    },
    {
        "NL": "If a person is a psychologist, they study human behavior and mental processes.",
        "FOL": "∀x (Psychologist(x) → (StudiesHumanBehavior(x) ∧ StudiesMentalProcesses(x)))"
    },
    {
        "NL": "A gaming console is seen as superior if it incorporates a fast microprocessor and an abundant data store.",
        "FOL": "∀x (GamingConsole(x) ∧ HasFastMicroprocessor(x) ∧ HasAbundantDataStore(x) → Superior(x))"
    },
    {
        "NL": "If a vehicle is a bicycle, it has two wheels and is powered by pedaling.",
        "FOL": "∀x (Vehicle(x) ∧ Bicycle(x) → (HasTwoWheels(x) ∧ PoweredByPedaling(x)))"
    },
    {
        "NL": "A machine that processes raw materials, transforms them into finished goods, and is used in a manufacturing plant is a production machine.",
        "FOL": "∀x∀y∀z (Machine(x) ∧ RawMaterials(y) ∧ FinishedGoods(z) ∧ ProcessesAndTransforms(x, y, z) ∧ UsedInManufacturingPlant(x) → ProductionMachine(x))"
    },
    {
        "NL": "Swimming is an activity that can be done in a pool, a lake, or the ocean.",
        "FOL": "∀x ∀y (Swimming(x) ∧ (Pool(y) ∨ Lake(y) ∨ Ocean(y)) → CanBeDoneIn(x, y))"
    },
    {
        "NL": "A fabric is comfortable if it is not rough and made of cotton or silk materials.",
        "FOL": "∀x (Fabric(x) ∧ ¬Rough(x) ∧ (MadeOfCotton(x) ∨ MadeOfSilk(x)) → Comfortable(x))"
    },
    {
        "NL": "A room can be locked if it has a door with a functioning lock.",
        "FOL": "∀x ∀y (Room(x) ∧ Door(y) ∧ FunctioningLock(y) ∧ HasDoor(x, y) → CanBeLocked(x))"
    },
    {
        "NL": "No managers are appreciated unless they're competent, but all seek to manage.",
        "FOL": "∀x (Manager(x) → (¬Appreciated(x) ∨ Competent(x))) ∧ ∀y (Manager(y) → SeekToManage(y))"
    },
    {
        "NL": "All apples are delicious if and only if they are either green or red.",
        "FOL": "∀x (Apple(x) → (Delicious(x) ↔ (Green(x) ∨ Red(x))))"
    },
    {
        "NL": "A vessel is a submarine if it is designed to operate underwater, is capable of independent operation, and has a propulsion system for underwater navigation.",
        "FOL": "∀x (Vessel(x) ∧ DesignedForUnderwaterOperation(x) ∧ CapableOfIndependentOperation(x) ∧ HasPropulsionSystemForUnderwaterNavigation(x) → Submarine(x))"
    },
    {
        "NL": "A musical instrument is part of the string family if it uses vibrating strings to produce sound.",
        "FOL": "∀x (MusicalInstrument(x) ∧ UsesVibratingStrings(x) → StringFamily(x))"
    },
    {
        "NL": "A city that has a high crime rate and low employment opportunities is considered unsafe.",
        "FOL": "∀x (City(x) ∧ HighCrimeRate(x) ∧ LowEmploymentOpportunities(x) → Unsafe(x))"
    },
    {
        "NL": "Lions hunt for food, while zebras graze on grass, but both live in the savannah.",
        "FOL": "∀x ((Lion(x) → (HuntsForFood(x) ∧ LivesInSavannah(x))) ∧ (Zebra(x) → (GrazesOnGrass(x) ∧ LivesInSavannah(x))))"
    },
    {
        "NL": "A movie can be classified as a comedy if it contains humor and has a happy ending.",
        "FOL": "∀x (Movie(x) ∧ ContainsHumor(x) ∧ HappyEnding(x) → Comedy(x))"
    },
    {
        "NL": "A product's price may increase or decrease over time due to market fluctuations.",
        "FOL": "∀x ∀y (Product(x) ∧ Time(y) → (PriceIncrease(x, y) ∨ PriceDecrease(x, y)))"
    },
    {
        "NL": "Flowers produce nectar to attract pollinators like bees and butterflies.",
        "FOL": "∀x ∀y (Flower(x) ∧ (Bee(y) ∨ Butterfly(y)) → (ProducesNectar(x) ∧ AttractsPollinators(x, y)))"
    },
    {
        "NL": "An animal is a mammal if it has fur or hair, gives birth to live young, and produces milk to feed its offspring.",
        "FOL": "∀x (Animal(x) ∧ (HasFur(x) ∨ HasHair(x)) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x) → Mammal(x))"
    },
    {
        "NL": "Not all vegetables are tasty.",
        "FOL": "¬∀x (Vegetable(x) → Tasty(x))"
    },
    {
        "NL": "A valid passport is required for international travel, except for citizens traveling between countries within a visa-free zone.",
        "FOL": "∀x∀y (InternationalTravel(x, y) → ((ValidPassportRequired(x) ∧ ¬VisaFreeZone(x, y)) ∨ (¬ValidPassportRequired(x) ∧ VisaFreeZone(x, y))))"
    },
    {
        "NL": "There is no delicious pizza and a disgusting burger.",
        "FOL": "¬∃x ((Delicious(x) ∧ Pizza(x)) ∧ (Disgusting(x) ∧ Burger(x)))"
    },
    {
        "NL": "A green car is always fast.",
        "FOL": "∀x (Green(x) → Fast(x))"
    },
    {
        "NL": "If a person is a pharmacist, they dispense medications and counsel patients.",
        "FOL": "∀x (Person(x) ∧ Pharmacist(x) → (DispenseMedications(x) ∧ CounselPatients(x)))"
    },
    {
        "NL": "An art piece is valuable if it's rare, created by a famous artist, or both, but not if it's damaged.",
        "FOL": "∀x (ArtPiece(x) ∧ (Rare(x) ∨ FamousArtist(x)) ∧ ¬Damaged(x) → Valuable(x))"
    },
    {
        "NL": "An animal is considered a mammal if it has fur or hair and gives birth to live young.",
        "FOL": "∀x (Mammal(x) ↔ (Animal(x) ∧ HasFurOrHair(x) ∧ GivesBirthToLiveYoung(x)))"
    },
    {
        "NL": "A bookstore is either franchised or independent, but not both.",
        "FOL": "∀y (Bookstore(y) → (Franchised(y) ⊕ Independent(y)))"
    },
    {
        "NL": "A place is considered a stadium if it is designed for outdoor sports, concerts, or other events and has seating for spectators.",
        "FOL": "∀x (Place(x) ∧ DesignedForOutdoorSportsOrEvents(x) ∧ HasSeatingForSpectators(x) → Stadium(x))"
    },
    {
        "NL": "A plant requires sunlight, water, and nutrients to grow properly.",
        "FOL": "∀x (Plant(x) → (RequiresSunlight(x) ∧ RequiresWater(x) ∧ RequiresNutrients(x)))"
    },
    {
        "NL": "An athlete must participate in at least one sport.",
        "FOL": "∀x (Athlete(x) → ∃y (Sport(y) ∧ ParticipatesIn(x, y)))"
    },
    {
        "NL": "A laptop has a built-in keyboard and a display screen.",
        "FOL": "∀x (Laptop(x) → (BuiltInKeyboard(x) ∧ DisplayScreen(x)))"
    },
    {
        "NL": "If an item of clothing is a winter coat, it provides insulation, protection from wind, and is water-resistant.",
        "FOL": "∀x (ClothingItem(x) ∧ WinterCoat(x) → ProvidesInsulation(x) ∧ ProtectsFromWind(x) ∧ WaterResistant(x))"
    },
    {
        "NL": "A celestial event occurs when two astronomical objects appear close together in the sky.",
        "FOL": "∀x ∀y ∀z (CelestialEvent(z) ∧ AstronomicalObject(x) ∧ AstronomicalObject(y) ∧ AppearCloseTogetherInSky(x, y) → Occurs(z, x, y))"
    },
    {
        "NL": "A movie is suitable for children if it does not have violent scenes and does not contain explicit language.",
        "FOL": "∀x (Movie(x) ∧ SuitableForChildren(x) ↔ (¬ViolentScenes(x) ∧ ¬ExplicitLanguage(x)))"
    },
    {
        "NL": "A sculptor creates sculptures using materials such as stone, wood, or clay, while a painter creates paintings on canvas.",
        "FOL": "∀x∀y∀z (Sculptor(x) ∧ Sculpture(y) ∧ (Stone(z) ∨ Wood(z) ∨ Clay(z)) → Creates(x, y, z)) ∧ (Painter(x) ∧ Painting(y) ∧ Canvas(z) → CreatesOn(x, y, z))"
    },
    {
        "NL": "In a solar system, planets can orbit a star or a group of stars.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ Star(y) ∧ StarGroup(z) → (Orbits(x, y) ⊕ Orbits(x, z)))"
    },
    {
        "NL": "An animal is considered a mammal if it has fur, gives birth to live young, and feeds them with milk.",
        "FOL": "∀x (Animal(x) ∧ HasFur(x) ∧ GivesBirthToLiveYoung(x) ∧ FeedsWithMilk(x) → Mammal(x))"
    },
    {
        "NL": "An element reacts with oxygen and forms a compound if it is a metal, while nonmetals do not react with oxygen.",
        "FOL": "∀x∀y (Element(x) ∧ Oxygen(y) ∧ (Metal(x) → ReactsWith(x, y) ∧ FormsCompound(x, y)) ∧ (¬Metal(x) → ¬ReactsWith(x, y)))"
    },
    {
        "NL": "A celestial object that orbits a planet and is smaller than a planet is a moon.",
        "FOL": "∀x (CelestialObject(x) ∧ OrbitsPlanet(x) ∧ SmallerThanPlanet(x) → Moon(x))"
    },
    {
        "NL": "A car is considered a hybrid if it uses both gasoline and electric power.",
        "FOL": "∀x (HybridCar(x) ↔ (Car(x) ∧ UsesGasoline(x) ∧ UsesElectricPower(x)))"
    },
    {
        "NL": "Some creatures are either mammals or amphibians.",
        "FOL": "∃x (Creature(x) ∧ (Mammal(x) ⊕ Amphibian(x)))"
    },
    {
        "NL": "Each brown dog is big only if it is a mastiff.",
        "FOL": "∀x (Brown(x) ∧ Dog(x) → (Big(x) → Mastiff(x)))"
    },
    {
        "NL": "A dessert made from layers of sponge cake, fruit, and cream is a trifle.",
        "FOL": "∀x (Dessert(x) ∧ MadeFromSpongeCakeLayers(x) ∧ MadeFromFruit(x) ∧ MadeFromCream(x) → Trifle(x))"
    },
    {
        "NL": "Pencils are used for writing and drawing.",
        "FOL": "∀x (Pencil(x) → (UsedForWriting(x) ∧ UsedForDrawing(x)))"
    },
    {
        "NL": "A musical instrument produces sound through strings, air, or percussion, can be played solo or in an ensemble, and is often used for entertainment, self-expression, or cultural activities.",
        "FOL": "∀x (MusicalInstrument(x) → (ProducesSound(x) ∧ (Strings(x) ∨ Air(x) ∨ Percussion(x)) ∧ (PlayedSolo(x) ∨ PlayedInEnsemble(x)) ∧ (EntertainmentUse(x) ∨ SelfExpressionUse(x) ∨ CulturalActivityUse(x))))"
    },
    {
        "NL": "A meal may be breakfast, lunch, or dinner.",
        "FOL": "∀x (Meal(x) → (Breakfast(x) ∨ Lunch(x) ∨ Dinner(x)))"
    },
    {
        "NL": "A person is considered a chef if they create, plan, and cook meals using a variety of ingredients, techniques, and equipment in a professional kitchen.",
        "FOL": "∀x (Chef(x) ↔ (CreatesPlansAndCooksMeals(x) ∧ UsingVarietyOfIngredientsTechniquesAndEquipment(x) ∧ InProfessionalKitchen(x)))"
    },
    {
        "NL": "A tree with flowers is a flowering tree.",
        "FOL": "∀x (Tree(x) ∧ HasFlowers(x) → FloweringTree(x))"
    },
    {
        "NL": "There is no largest rational number, and no smallest rational number.",
        "FOL": "∀x (RationalNumber(x) → (∃y (RationalNumber(y) ∧ Larger(y, x)) ∧ ∃z (RationalNumber(z) ∧ Smaller(z, x))))"
    },
    {
        "NL": "A being is classified as a gardener if they cultivate plants.",
        "FOL": "∀x (Individual(x) ∧ CultivatesPlants(x) → Gardener(x))"
    },
    {
        "NL": "An event is considered a festival if it includes celebrations, performances, and various attractions.",
        "FOL": "∀x (Event(x) ∧ IncludesCelebrations(x) ∧ IncludesPerformances(x) ∧ IncludesVariousAttractions(x) → Festival(x))"
    },
    {
        "NL": "A city has buildings, a park has trees, and a beach has sand.",
        "FOL": "∀x∀y∀z (City(x) ∧ Park(y) ∧ Beach(z) → (HasBuildings(x) ∧ HasTrees(y) ∧ HasSand(z)))"
    },
    {
        "NL": "A house is furnished if it has tables and chairs.",
        "FOL": "∀x (House(x) ∧ HasTables(x) ∧ HasChairs(x) → IsFurnished(x))"
    },
    {
        "NL": "A computer program that allows users to create, edit, and format text documents, is widely used in offices, and supports various file formats is considered a word processor.",
        "FOL": "∀x (ComputerProgram(x) ∧ AllowsCreateEditTextDocuments(x) ∧ WidelyUsedInOffices(x) ∧ SupportsVariousFileFormats(x) → WordProcessor(x))"
    },
    {
        "NL": "Volcanoes erupt, releasing lava and ash, which can affect the surrounding environment.",
        "FOL": "∀x∀y∀z (Volcano(x) ∧ Lava(y) ∧ Ash(z) ∧ Erupts(x) → (Releases(x, y) ∧ Releases(x, z) ∧ AffectsEnvironment(x)))"
    },
    {
        "NL": "A plant species that is drought-tolerant, resistant to pests, and produces a high yield can be beneficial for sustainable agriculture practices in arid regions.",
        "FOL": "∀x (PlantSpecies(x) ∧ DroughtTolerant(x) ∧ ResistantToPests(x) ∧ HighYield(x) → BeneficialForSustainableAgricultureInAridRegions(x))"
    },
    {
        "NL": "A book becomes a bestseller if it sells a high number of copies and receives positive reviews from critics.",
        "FOL": "∀x (Book(x) ∧ HighNumberOfCopiesSold(x) ∧ PositiveReviewsFromCritics(x) → Bestseller(x))"
    },
    {
        "NL": "A store attracts customers if it sells desired products, maintains a clean environment, and offers reasonable prices, but not if the location is inconvenient or the staff is unfriendly.",
        "FOL": "∀x∀y (Store(x) ∧ Customers(y) → (AttractsCustomers(x, y) ↔ ((SellsDesiredProducts(x, y) ∧ CleanEnvironment(x) ∧ ReasonablePrices(x)) ∧ ¬(InconvenientLocation(x) ∨ UnfriendlyStaff(x)))))"
    },
    {
        "NL": "If all musicians who have released an album will be signed, then some musicians who have not won a Grammy will also be signed.",
        "FOL": "∀x (Musician(x) ∧ AlbumReleased(x) → Signed(x)) → ∃y (Musician(y) ∧ ¬GrammyWinner(y) ∧ Signed(y))"
    },
    {
        "NL": "A scientific theory is widely accepted if it has been extensively tested, provides accurate predictions, and is supported by a large body of evidence.",
        "FOL": "∀x (ScientificTheory(x) ∧ ExtensivelyTested(x) ∧ ProvidesAccuratePredictions(x) ∧ SupportedByLargeBodyOfEvidence(x) → WidelyAccepted(x))"
    },
    {
        "NL": "All fish that live in freshwater and have a bony skeleton are classified as bony fish.",
        "FOL": "∀x (Fish(x) ∧ LivesInFreshwater(x) ∧ BonySkeleton(x) → BonyFish(x))"
    },
    {
        "NL": "A river flows into a lake, sea, or ocean.",
        "FOL": "∀x∃y (River(x) → (FlowsIntoLake(x, y) ∨ FlowsIntoSea(x, y) ∨ FlowsIntoOcean(x, y)))"
    },
    {
        "NL": "An herbivore only eats plants.",
        "FOL": "∀x (Herbivore(x) → ∀y (Eats(x, y) → Plant(y)))"
    },
    {
        "NL": "A video game can be single-player or multiplayer, but it cannot be exclusively both at the same time.",
        "FOL": "∀x∀y∀z (VideoGame(x) ∧ SinglePlayer(y) ∧ Multiplayer(z) → (IsMode(x, y) ⊕ IsMode(x, z)))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the Earth and the sun, casting a shadow on the Earth and temporarily blocking the sun's light from reaching specific areas.",
        "FOL": "∀x (SolarEclipse(x) → (MoonPassesBetweenEarthAndSun(x) ∧ CastsShadowOnEarth(x) ∧ TemporarilyBlocksSunlight(x) ∧ AffectsSpecificAreas(x)))"
    },
    {
        "NL": "A room appears brighter with white walls and adequate lighting.",
        "FOL": "∀x (Room(x) ∧ WhiteWalls(x) ∧ AdequateLighting(x) → AppearsBrighter(x))"
    },
    {
        "NL": "In a democracy, citizens have the right to vote, while in a dictatorship, the ruler has absolute power.",
        "FOL": "∀x ∀y (Democracy(x) ∧ Dictatorship(y) → (RightToVote(x) ∧ ¬AbsolutePower(x) ⊕ ¬RightToVote(y) ∧ AbsolutePower(y)))"
    },
    {
        "NL": "Each language has unique words.",
        "FOL": "∀x (Language(x) → ∃y (Word(y) ∧ HasUniqueWords(x, y)))"
    },
    {
        "NL": "A vaccine is effective in preventing a disease if it induces a strong immune response, has a long-lasting effect, and minimal side effects, but it shouldn't cause severe allergic reactions.",
        "FOL": "∀x (Vaccine(x) ∧ Effective(x) → ((InducesStrongImmuneResponse(x) ∧ LongLastingEffect(x) ∧ MinimalSideEffects(x)) ∧ ¬SevereAllergicReactions(x)))"
    },
    {
        "NL": "A person who studies the behavior, physiology, classification, and distribution of animals is called a zoologist.",
        "FOL": "∀x (StudiesBehaviorPhysiologyClassificationAndDistributionOfAnimals(x) → Zoologist(x))"
    },
    {
        "NL": "A film becomes a box office hit if it has an engaging plot, talented actors, and high production values, without suffering from poor marketing or negative reviews.",
        "FOL": "∀x (Film(x) ∧ BoxOfficeHit(x) → ((EngagingPlot(x) ∧ TalentedActors(x) ∧ HighProductionValues(x)) ∧ ¬(PoorMarketing(x) ∨ NegativeReviews(x))))"
    },
    {
        "NL": "A student is an honor student if they excel in academics or extracurricular activities and do not have disciplinary issues.",
        "FOL": "∀x (Student(x) ∧ ((ExcelAcademics(x) ∨ ExcelExtracurricular(x)) ∧ ¬DisciplinaryIssues(x)) → HonorStudent(x))"
    },
    {
        "NL": "A doctor treats patients with medication or therapy.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ (Medication(z) ∨ Therapy(z)) → Treat(x, y, z))"
    },
    {
        "NL": "A restaurant can win awards for best service, best food, or best decor, but not all three simultaneously.",
        "FOL": "∀x (Restaurant(x) ∧ Awarded(x) → (BestServiceAward(x) ⊕ BestFoodAward(x) ⊕ BestDecorAward(x)))"
    },
    {
        "NL": "Some vehicles are either cars or trucks.",
        "FOL": "∃x (Vehicle(x) ∧ (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "An artwork is considered valuable if it was created by a renowned artist, is in good condition, and has historical or cultural significance.",
        "FOL": "∀x (Artwork(x) ∧ RenownedArtist(y) ∧ CreatedBy(x, y) ∧ GoodCondition(x) ∧ (HistoricalSignificance(x) ∨ CulturalSignificance(x)) → Valuable(x))"
    },
    {
        "NL": "A vehicle that can travel on water and also on land can be an amphibious car or a hovercraft.",
        "FOL": "∀x (Vehicle(x) ∧ TravelOnWater(x) ∧ TravelOnLand(x) → (AmphibiousCar(x) ∨ Hovercraft(x)))"
    },
    {
        "NL": "All birds fly, but not everybody who flies is a bird.",
        "FOL": "∀x (Bird(x) → Fly(x)) ∧ ¬∀x (Fly(x) → Bird(x))"
    },
    {
        "NL": "Somebody is identified as a doctor if they are certified by a hospital or a medical college.",
        "FOL": "∀x (Somebody(x) ∧ (CertifiedByHospital(x) ∨ CertifiedByMedicalCollege(x)) → Doctor(x))"
    },
    {
        "NL": "A tree produces fruit if it is a fruit-bearing species and it has reached maturity.",
        "FOL": "∀x (Tree(x) ∧ FruitBearingSpecies(x) ∧ ReachedMaturity(x) → ProducesFruit(x))"
    },
    {
        "NL": "A company that offers excellent customer service is more likely to retain customers and receive positive feedback.",
        "FOL": "∀x (ExcellentCustomerService(x) → (RetainCustomers(x) ∧ ReceivePositiveFeedback(x)))"
    },
    {
        "NL": "A meal consists of a main dish, and optionally, a side dish or a dessert.",
        "FOL": "∀x ∀y ∀z (Meal(x) ∧ MainDish(y) ∧ (SideDish(z) ∨ Dessert(z)) → ConsistsOf(x, y, z))"
    },
    {
        "NL": "No vehicles with an engine are wheelless.",
        "FOL": "∀x (Vehicle(x) → (HaveEngine(x) → ¬LackWheel(x)))"
    },
    {
        "NL": "A solar power system is efficient if it has high-quality solar panels, an optimal installation angle, and an effective energy storage system.",
        "FOL": "∀x (SolarPowerSystem(x) ∧ Efficient(x) ↔ (HighQualitySolarPanels(x) ∧ OptimalInstallationAngle(x) ∧ EffectiveEnergyStorageSystem(x)))"
    },
    {
        "NL": "A celestial event that occurs when a celestial body passes directly between another celestial body and the observer, causes the light from the more distant body to be temporarily obscured, and is predictable in timing is a transit.",
        "FOL": "∀x ∀y ∀z (CelestialEvent(x) ∧ CelestialBody(y) ∧ Observer(z) ∧ PassesBetween(x, y, z) ∧ TemporarilyObscuresLight(x) ∧ PredictableTiming(x) → Transit(x))"
    },
    {
        "NL": "A professional athlete competes in sports events such as marathons or triathlons.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Professional(x) ∧ SportsEvent(y) → (Marathon(y) ∨ Triathlon(y) → CompetesIn(x, y)))"
    },
    {
        "NL": "A seed germinates and grows into a plant when it is exposed to the right combination of temperature, moisture, and light.",
        "FOL": "∀x ∀y (Seed(x) ∧ Plant(y) ∧ Germinates(x) ∧ RightTemperature(x) ∧ Moisture(x) ∧ Light(x) → GrowsInto(x, y))"
    },
    {
        "NL": "An item can be fragile or durable, but not both.",
        "FOL": "∀x (Item(x) → (Fragile(x) ⊕ Durable(x)))"
    },
    {
        "NL": "No actors are unemployed, and all of them are talented.",
        "FOL": "¬∀x (Actor(x) → Unemployed(x)) ∧ ∀y (Actor(y) → ¬Untalented(y))"
    },
    {
        "NL": "A podcast is enjoyable for listeners if it features knowledgeable hosts, thought-provoking topics, and engaging conversations, but it does not resonate with those who prefer visual content.",
        "FOL": "∀x (Podcast(x) ∧ EnjoyableForListeners(x) ↔ (KnowledgeableHosts(x) ∧ ThoughtProvokingTopics(x) ∧ EngagingConversations(x) ∧ ¬PrefersVisualContent(x)))"
    },
    {
        "NL": "No gardener cultivates every plant without watering any flower.",
        "FOL": "¬∃x (Gardener(x) ∧ ∀y (Plant(y) → Cultivates(x, y)) ∧ ¬∃z (Flower(z) ∧ Watered(x, z)))"
    },
    {
        "NL": "A bakery produces bread, pastries, and other baked goods for sale.",
        "FOL": "∀x (Bakery(x) → (Produces(x, bread) ∧ Produces(x, pastries) ∧ Produces(x, bakedGoods) ∧ ForSale(x)))"
    },
    {
        "NL": "If a person is a geologist, they study the Earth's composition, structure, and history.",
        "FOL": "∀x (Geologist(x) → (StudiesEarthComposition(x) ∧ StudiesEarthStructure(x) ∧ StudiesEarthHistory(x)))"
    },
    {
        "NL": "An investment is wise if it has a high return on investment, low risk, and either a short-term gain or long-term stability.",
        "FOL": "∀x (Investment(x) ∧ HighROI(x) ∧ LowRisk(x) ∧ (ShortTermGain(x) ∨ LongTermStability(x)) → Wise(x))"
    },
    {
        "NL": "All flowers are either roses or tulips.",
        "FOL": "∀x (Flower(x) → (Rose(x) ⊕ Tulip(x)))"
    },
    {
        "NL": "A substance that reduces friction between surfaces in contact is a lubricant.",
        "FOL": "∀x (Substance(x) ∧ ReducesFrictionBetweenSurfaces(x) → Lubricant(x))"
    },
    {
        "NL": "A lime tree is a type of tree that produces limes, a sakura tree is a type of tree with blossoms, and a cedar tree is a type of tree with needles and cones.",
        "FOL": "∀x ∃y (LimeTree(x) → Lime(y) ∧ Produce(x,y)) ∧ ∀z (SakuraTree(z) → HasBlossoms(z)) ∧ ∀w (CedarTree(w) → HasNeedle(w) ∧ HasCone(w))"
    },
    {
        "NL": "An herbivore eats only plants, while a carnivore eats only meat.",
        "FOL": "∀x ∀y (Herbivore(x) ∧ Carnivore(y) → (EatsOnlyPlants(x) ∧ EatsOnlyMeat(y)))"
    },
    {
        "NL": "A person is a sibling if they have the same parents.",
        "FOL": "∀x ∀y (Sibling(x, y) ↔ (Person(x) ∧ Person(y) ∧ SameParents(x, y)))"
    },
    {
        "NL": "An employee who consistently meets deadlines and collaborates well with colleagues is likely to receive a positive performance evaluation.",
        "FOL": "∀x (Employee(x) ∧ ConsistentlyMeetsDeadlines(x) ∧ CollaboratesWellWithColleagues(x) → PositivePerformanceEvaluation(x))"
    },
    {
        "NL": "A musical instrument produces sound either by vibrating strings or by resonating air.",
        "FOL": "∀x (MusicalInstrument(x) → (VibratesStrings(x) ⊕ ResonatesAir(x)))"
    },
    {
        "NL": "A particle that has a negative charge and orbits the nucleus is an electron",
        "FOL": "∀x (Particle(x) ∧ HasNegativeCharge(x) ∧ OrbitsNucleus(x) → Electron(x))"
    },
    {
        "NL": "Volcanoes erupt and release lava, while glaciers are large masses of ice that slowly move.",
        "FOL": "∀x ∀y (Volcano(x) → (Erupt(x) ∧ ReleaseLava(x, y))) ∧ ∀z (Glacier(z) → (LargeMassOfIce(z) ∧ SlowlyMove(z)))"
    },
    {
        "NL": "A beverage is considered a soft drink if it is non-alcoholic, sweetened, and usually carbonated.",
        "FOL": "∀x (Beverage(x) ∧ NonAlcoholic(x) ∧ Sweetened(x) ∧ UsuallyCarbonated(x) → SoftDrink(x))"
    },
    {
        "NL": "A person is a pilot if they are trained and licensed to fly aircraft.",
        "FOL": "∀x (Pilot(x) ↔ (Person(x) ∧ Trained(x) ∧ Licensed(x) ∧ FliesAircraft(x)))"
    },
    {
        "NL": "All architects who have designed houses or offices, but not both, are employed by a global architecture firm unless they are independent, in which case they have their own studio.",
        "FOL": "∀x (Architect(x) ∧ (DesignedHouses(x) ⊕ DesignedOffices(x)) → (EmployedByGlobalFirm(x) ∨ (Independent(x) ∧ HaveOwnStudio(x))))"
    },
    {
        "NL": "A star collapses in on itself and turns incredibly dense due to the strong pull of gravity resulting in a neutron star.",
        "FOL": "∀x (Star(x) ∧ CollapsesDueToGravity(x) ∧ BecomesIncrediblyDense(x) → NeutronStar(x))"
    },
    {
        "NL": "Every food that is either salad or soup nourishes a being that is either a baby or adult.",
        "FOL": "∀x ((Salad(x) ∧ Food(x)) ∨ (Soup(x) ∧ Food(x)) → ∃y ((Baby(y) ∨ Adult(y)) ∧ Nourishes(x, y)))"
    },
    {
        "NL": "Either a person is a musician or they appreciate art, they can't be both.",
        "FOL": "∀x (Musician(x) ⊕ AppreciateArt(x))"
    },
    {
        "NL": "Every book that is engaging and well-written becomes a bestseller.",
        "FOL": "∀x (Book(x) ∧ Engaging(x) ∧ WellWritten(x) → Bestseller(x))"
    },
    {
        "NL": "A vehicle is a car or a bike.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Bike(x)))"
    },
    {
        "NL": "A resilient ecosystem maintains biodiversity, supports nutrient cycling, and adapts to change.",
        "FOL": "∀x (Ecosystem(x) → (Resilient(x) ↔ (MaintainsBiodiversity(x) ∧ SupportsNutrientCycling(x) ∧ AdaptsToChange(x))))"
    },
    {
        "NL": "A scientist is observing a specimen near a microscope.",
        "FOL": "∃x ∃y ∃z (Scientist(x) ∧ Specimen(y) ∧ Microscope(z) ∧ Observing(x, y) ∧ Near(x, z))"
    },
    {
        "NL": "Dogs can bark, meow, or chirp.",
        "FOL": "∀x (Dog(x) → Bark(x) ∨ Meow(x) ∨ Chirp(x))"
    },
    {
        "NL": "A laptop is portable when it has a lightweight design and long battery life.",
        "FOL": "∀x (Laptop(x) ∧ LightweightDesign(x) ∧ LongBatteryLife(x) → Portable(x))"
    },
    {
        "NL": "Cats that meow loudly can be hungry or seeking attention.",
        "FOL": "∀x (Cat(x) ∧ MeowsLoudly(x) → (Hungry(x) ∨ SeekingAttention(x)))"
    },
    {
        "NL": "A building can be residential or commercial, but not both.",
        "FOL": "∀x (Building(x) → (Residential(x) ⊕ Commercial(x)))"
    },
    {
        "NL": "In a zoo, a carnivorous animal that is kept in an enclosure and fed meat is provided with an appropriate diet.",
        "FOL": "∀x∀y (Animal(x) ∧ Carnivorous(x) ∧ Enclosure(y) ∧ KeptIn(x, y) ∧ Zoo(y) ∧ FedMeat(x) → AppropriateDiet(x))"
    },
    {
        "NL": "A clean room is free of dust, organized, and smells fresh.",
        "FOL": "∀x (Room(x) → (FreeOfDust(x) ∧ Organized(x) ∧ SmellsFresh(x) → Clean(x)))"
    },
    {
        "NL": "A social worker will help a child only if he does not write reports.",
        "FOL": "∀x (SocialWorker(x) ∧ HelpChild(x) → ¬WriteReports(x))"
    },
    {
        "NL": "A vehicle that is designed for use on rough terrain and has a suspension system for absorbing shocks is classified as an off-road vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForRoughTerrain(x) ∧ SuspensionSystem(x) ∧ AbsorbsShocks(x) → OffRoadVehicle(x))"
    },
    {
        "NL": "A movie can have elements of horror, romance, or science fiction, but not all movies belong to only one genre.",
        "FOL": "∀x (Movie(x) → (Horror(x) ∨ Romance(x) ∨ SciFi(x))) ∧ ∃x (Movie(x) ∧ ((Horror(x) ∧ Romance(x)) ∨ (Horror(x) ∧ SciFi(x)) ∨ (Romance(x) ∧ SciFi(x))))"
    },
    {
        "NL": "No software are bug-free unless they have been tested rigorously, but not all of them are user-appreciated.",
        "FOL": "¬∃x (Software(x) ∧ BugFree(x) ∨ TestedRigorously(x)) ∧ ¬∀y (Software(y) → UserAppreciated(y))"
    },
    {
        "NL": "A train arrives at a station when it reaches its scheduled time.",
        "FOL": "∀x∀y (Train(x) ∧ Station(y) → (Arrives(x, y) ↔ ScheduledTime(x, y)))"
    },
    {
        "NL": "A vehicle that is propelled by the force of the wind pushing against sails is a sailboat.",
        "FOL": "∀x∀y (Vehicle(x) ∧ PropelledByForceOfWind(x) ∧ WindPushesAgainstSails(x, y) → Sailboat(x))"
    },
    {
        "NL": "The cat is mammalian.",
        "FOL": "∀x (Cat(x) → Mammalian(x))"
    },
    {
        "NL": "A movie is considered a blockbuster when it has high box office revenue and receives positive reviews.",
        "FOL": "∀x (Movie(x) ∧ HighBoxOfficeRevenue(x) ∧ PositiveReviews(x) → Blockbuster(x))"
    },
    {
        "NL": "A type of weather characterized by the presence of ice crystals in the air, creating a white, powdery substance on the ground, is snow.",
        "FOL": "∀x (WeatherType(x) ∧ PresenceOfIceCrystals(x) ∧ WhitePowderySubstanceOnGround(x) → Snow(x))"
    },
    {
        "NL": "Only the hardworking shall achieve greatness.",
        "FOL": "∀x (¬Hardworking(x) → ¬AchieveGreatness(x))"
    },
    {
        "NL": "A book is considered a bestseller if it has high sales, positive reviews, and widespread popularity.",
        "FOL": "∀x (Book(x) → (Bestseller(x) ↔ (HighSales(x) ∧ PositiveReviews(x) ∧ WidespreadPopularity(x))))"
    },
    {
        "NL": "A movie is considered a box office success if it generates significant revenue in relation to its production budget.",
        "FOL": "∀x (Movie(x) ∧ SignificantRevenue(x) ∧ ProductionBudget(x) → BoxOfficeSuccess(x))"
    },
    {
        "NL": "A printing press reproduces text and images by transferring ink from a plate onto paper or other materials.",
        "FOL": "∀x (PrintingPress(x) → (ReproducesTextAndImages(x) ∧ TransfersInk(x) ∧ FromPlate(x) ∧ OntoPaperOrOtherMaterials(x)))"
    },
    {
        "NL": "Cats are mammals with retractable claws, dogs are mammals with a keen sense of smell, and snakes are reptiles without retractable claws or a keen sense of smell.",
        "FOL": "∃x (Cat(x) ∧ Mammal(x) ∧ HasRetractableClaws(x)) ∧ ∃y (Dog(y) ∧ Mammal(y) ∧ HasKeenSenseOfSmell(y)) ∧ ∃z (Snake(z) ∧ Reptile(z) ∧ ¬HasRetractableClaws(z) ∧ ¬HasKeenSenseOfSmell(z))"
    },
    {
        "NL": "A programmer writes code for a software application by following the specifications and considering the target platform.",
        "FOL": "∀x∀y∀z (Programmer(x) ∧ SoftwareApplication(y) ∧ Code(z) ∧ Specifications(y) ∧ TargetPlatform(y) → WriteCode(x, y, z))"
    },
    {
        "NL": "A weather event characterized by heavy rainfall, strong winds, and the formation of a rotating column of air extending from a cloud to the ground is classified as a tornado.",
        "FOL": "∀x (WeatherEvent(x) ∧ HeavyRainfall(x) ∧ StrongWinds(x) ∧ RotatingColumnOfAir(x) ∧ ExtendsFromCloudToGround(x) → Tornado(x))"
    },
    {
        "NL": "Cats chase mice and birds.",
        "FOL": "∀x∀y∀z (Cat(x) ∧ (Mouse(y) ∨ Bird(z)) → Chases(x, y) ∧ Chases(x, z))"
    },
    {
        "NL": "An element is a metal if it conducts electricity, has a shiny appearance, and is ductile and malleable.",
        "FOL": "∀x (Element(x) ∧ ConductsElectricity(x) ∧ ShinyAppearance(x) ∧ Ductile(x) ∧ Malleable(x) → Metal(x))"
    },
    {
        "NL": "There exists a planet that every planet orbits around, if all stars are not luminous.",
        "FOL": "¬∀x (Star(x) → Luminous(x)) → ∃y (Planet(y) ∧ ∀z (Planet(z) → Orbits(z, y)))"
    },
    {
        "NL": "A person who is a citizen of a country and is of legal age can vote.",
        "FOL": "∀x ∀y (Person(x) ∧ CitizenOf(x, y) ∧ LegalAge(x) → CanVote(x, y))"
    },
    {
        "NL": "A lever amplifies force by transferring force applied at one point to another point through a fulcrum.",
        "FOL": "∀x ∀y ∀z (Lever(x) ∧ Force(y) ∧ Fulcrum(z) → (AmplifiesForce(x, y) ↔ TransfersForceThroughFulcrum(x, y, z)))"
    },
    {
        "NL": "Not all dogs are friendly.",
        "FOL": "¬∀x (Dog(x) → Friendly(x))"
    },
    {
        "NL": "A wolf chases deer for consumption, while a crow scavenges on the corpses of expired animals.",
        "FOL": "∀x ∀y (Wolf(x) ∧ Deer(y) → ChasesForConsumption(x, y)) ∧ ∀z ∀w (Crow(z) ∧ ExpiredAnimal(w) → ScavengesOnCorpsesOf(z, w))"
    },
    {
        "NL": "A dessert is classified as frozen if it is served cold and contains ice or ice cream.",
        "FOL": "∀x (Dessert(x) ∧ Frozen(x) ↔ (ServedCold(x) ∧ (ContainsIce(x) ∨ ContainsIceCream(x))))"
    },
    {
        "NL": "A smell is pleasant or not pleasant.",
        "FOL": "∀x (Smell(x) → (Pleasant(x) ⊕ ¬Pleasant(x)))"
    },
    {
        "NL": "There is a desert where some camels walk.",
        "FOL": "∃x ∃y (Desert(x) ∧ Camel(y) ∧ WalkIn(y, x))"
    },
    {
        "NL": "A patient recovers from an illness if they receive appropriate treatment and their immune system is strong.",
        "FOL": "∀x∀y (Patient(x) ∧ Illness(y) ∧ AppropriateTreatment(x, y) ∧ StrongImmuneSystem(x) → RecoversFromIllness(x, y))"
    },
    {
        "NL": "A person who designs, builds, and maintains structures such as buildings, bridges, and roads is an engineer.",
        "FOL": "∀x (Person(x) ∧ DesignsStructures(x) ∧ BuildsStructures(x) ∧ MaintainsStructures(x) → Engineer(x))"
    },
    {
        "NL": "A company manufactures cars, while another company manufactures bikes.",
        "FOL": "∃x ∃y (Company(x) ∧ Car(y) ∧ Manufacture(x, y)) ∧ ∃z ∃w (Company(z) ∧ Bike(w) ∧ Manufacture(z, w))"
    },
    {
        "NL": "Only the brave deserve honor.",
        "FOL": "∀x (¬Brave(x) → ¬DeserveHonor(x))"
    },
    {
        "NL": "There isn't a chef who cooks both French and Italian food but has never worked in a kitchen.",
        "FOL": "¬∃x (Chef(x) ∧ CooksFrench(x) ∧ CooksItalian(x) ∧ ¬WorkedInKitchen(x))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity and requires sunlight to function.",
        "FOL": "∀x∀y∀z (SolarPanel(x) ∧ Sunlight(y) ∧ Electricity(z) → (Converts(x, y, z) ∧ Requires(x, y)))"
    },
    {
        "NL": "Some trees are deciduous, others are coniferous, and a few are evergreen.",
        "FOL": "∃x∃y∃z (Tree(x) ∧ Deciduous(x) ∧ Tree(y) ∧ Coniferous(y) ∧ Tree(z) ∧ Evergreen(z))"
    },
    {
        "NL": "A building can be used for academic purposes, but not for both commercial and residential purposes at the same time.",
        "FOL": "∀x (Building(x) → (UsedForAcademic(x) ∧ ¬(UsedForCommercial(x) ∧ UsedForResidential(x))))"
    },
    {
        "NL": "Every human needs water to survive.",
        "FOL": "∀x (Human(x) → Needs(x, water))"
    },
    {
        "NL": "It is not the case that all apples are red if and only if they are sweet.",
        "FOL": "¬∀x (Apple(x) ∧ Red(x) ↔ Sweet(x))"
    },
    {
        "NL": "A chemical reaction is classified as an oxidation process if it involves the loss of electrons or an increase in oxidation state.",
        "FOL": "∀x (ChemicalReaction(x) ∧ (LossOfElectrons(x) ∨ IncreaseInOxidationState(x)) → OxidationProcess(x))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur and gives birth to live young.",
        "FOL": "∀x (Animal(x) ∧ (HasHair(x) ∨ HasFur(x)) ∧ GivesBirthToLiveYoung(x) → Mammal(x))"
    },
    {
        "NL": "A person is defined as a chef if he can cook and works in a restaurant.",
        "FOL": "∀x (Person(x) ∧ CanCook(x) ∧ WorksInRestaurant(x) → Chef(x))"
    },
    {
        "NL": "A substance is an acid if it donates protons in a chemical reaction.",
        "FOL": "∀x (Substance(x) ∧ DonatesProtons(x) → Acid(x))"
    },
    {
        "NL": "During photosynthesis, plants absorb sunlight and carbon dioxide, transforming them into glucose and oxygen, which are essential for the plant's growth and survival, while also providing oxygen for other organisms to breathe.",
        "FOL": "∀x∀y (Photosynthesis(x) ∧ Plants(y) → (AbsorbsSunlightAndCarbonDioxide(y, x) ∧ TransformsIntoGlucoseAndOxygen(x) ∧ EssentialForGrowthAndSurvival(y) ∧ ProvidesOxygenForOtherOrganisms(x)))"
    },
    {
        "NL": "A party is fun if it has engaging games or lively music.",
        "FOL": "∀x (Party(x) ∧ (EngagingGames(x) ∨ LivelyMusic(x)) → Fun(x))"
    },
    {
        "NL": "Penguins are birds that have feathers.",
        "FOL": "∀x (Penguin(x) → Bird(x) ∧ HasFeathers(x))"
    },
    {
        "NL": "A computer is powerful if it has a fast processor, plenty of RAM, and either a large storage capacity or a high-performance graphics card.",
        "FOL": "∀x (Computer(x) → (Powerful(x) ↔ (FastProcessor(x) ∧ PlentyOfRAM(x) ∧ (LargeStorageCapacity(x) ∨ HighPerformanceGraphics(x)))))"
    },
    {
        "NL": "A library is a place where books, magazines, and other materials are available for borrowing or reading.",
        "FOL": "∀x ∃y ∃z ∃w (Library(x) → (Books(y) ∧ Magazines(z) ∧ OtherMaterials(w) ∧ AvailableForBorrowingOrReading(x, y, z, w)))"
    },
    {
        "NL": "A coral reef is a diverse marine ecosystem formed by the accumulation of calcium carbonate structures secreted by corals, providing habitat for numerous marine species.",
        "FOL": "∀x (CoralReef(x) → (DiverseMarineEcosystem(x) ∧ FormedByAccumulation(x, CalciumCarbonateStructures, Corals) ∧ ProvidesHabitat(x, MarineSpecies)))"
    },
    {
        "NL": "Not all animals are wild, and none of them are extinct.",
        "FOL": "¬∀x (Animal(x) → Wild(x)) ∧ ∀y (Animal(y) → ¬Extinct(y))"
    },
    {
        "NL": "A weather event involving heavy precipitation, lightning, and thunder is a thunderstorm.",
        "FOL": "∀x (WeatherEvent(x) ∧ HeavyPrecipitation(x) ∧ Lightning(x) ∧ Thunder(x) → Thunderstorm(x))"
    },
    {
        "NL": "A person is considered an illustrator if they create visual images for various media, such as books, magazines, or advertisements.",
        "FOL": "∀x (Illustrator(x) ↔ CreatesVisualImages(x))"
    },
    {
        "NL": "A fan circulates air, while an air conditioner cools air but doesn't primarily circulate it.",
        "FOL": "∀x∀y (Fan(x) ∧ AirConditioner(y) → (CirculatesAir(x) ∧ CoolsAir(y) ∧ ¬CirculatesAir(y)))"
    },
    {
        "NL": "An artist can be known for painting or sculpting, but not both.",
        "FOL": "∀x (Artist(x) → (KnownForPainting(x) ⊕ KnownForSculpting(x)))"
    },
    {
        "NL": "A marsh, a type of wetland, is characterized by the presence of shallow water, waterlogged soils, and diverse plant species, providing habitat for many aquatic and terrestrial organisms.",
        "FOL": "∀x (Marsh(x) → (Wetland(x) ∧ ShallowWater(x) ∧ WaterloggedSoils(x) ∧ DiversePlantSpecies(x) ∧ ProvidesHabitatForOrganisms(x)))"
    },
    {
        "NL": "In a solar eclipse, the moon blocks the sun's light from reaching Earth.",
        "FOL": "∀x∀y∀z (SolarEclipse(x) ∧ Moon(y) ∧ Sun(z) → BlocksLight(y, z, Earth))"
    },
    {
        "NL": "A mountain range consists of a series of adjacent peaks and valleys, formed by geological processes such as tectonic plate movements and volcanic activity.",
        "FOL": "∀x (MountainRange(x) → (∃y∃z (Peak(y) ∧ Valley(z) ∧ (TectonicPlateMovement(w) ∨ VolcanicActivity(w)) ∧ FormedByGeologicalProcesses(x, y, z, w))))"
    },
    {
        "NL": "The Doppler effect is the change in frequency or wavelength of a wave in relation to an observer who is moving relative to the wave source.",
        "FOL": "∀x ∀y (DopplerEffect(x) ∧ WaveSource(y) → (ChangeInFrequencyOrWavelength(x) ∧ ObserverMovingRelativeToSource(x, y)))"
    },
    {
        "NL": "A person is a dentist if they are a healthcare professional specializing in the diagnosis, prevention, and treatment of oral health issues.",
        "FOL": "∀x (Dentist(x) ↔ (Person(x) ∧ HealthcareProfessional(x) ∧ SpecializesInOralHealth(x) ∧ Diagnoses(x) ∧ Prevents(x) ∧ Treats(x)))"
    },
    {
        "NL": "Bicycles, tricycles, and unicycles have different numbers of wheels.",
        "FOL": "∀x∀y∀z ((Bicycle(x) → HasWheels(x, 2)) ∧ (Tricycle(y) → HasWheels(y, 3)) ∧ (Unicycle(z) → HasWheels(z, 1)))"
    },
    {
        "NL": "A door is unlocked if the key is inserted and turned, or a digital code is entered correctly.",
        "FOL": "∀x (Door(x) ∧ (KeyInserted(x) ∧ Turned(x) ∨ CorrectCodeEntered(x)) → Unlocked(x))"
    },
    {
        "NL": "Some fruits are both sweet and juicy.",
        "FOL": "∃x (Fruit(x) ∧ Sweet(x) ∧ Juicy(x))"
    },
    {
        "NL": "A person is considered a writer if they create written works.",
        "FOL": "∀x (Writer(x) ↔ CreatesWrittenWorks(x))"
    },
    {
        "NL": "An engine is an internal combustion engine if it generates mechanical power by burning fuel in a combustion chamber.",
        "FOL": "∀x (Engine(x) ∧ BurnsFuelInCombustionChamber(x) ∧ GeneratesMechanicalPower(x) → InternalCombustionEngine(x))"
    },
    {
        "NL": "Unless an entity is neither white nor black, it is a cylinder.",
        "FOL": "∀x ((White(x) ∨ Black(x)) → Cylinder(x))"
    },
    {
        "NL": "A teacher educates students, assigns homework, and evaluates their performance.",
        "FOL": "∀x ∃y (Teacher(x) → Student(y) ∧ Educates(x, y) ∧ AssignsHomework(x) ∧ EvaluatesPerformance(x, y))"
    },
    {
        "NL": "Some students have read every book by an author.",
        "FOL": "∃x (Student(x) ∧ ∃y (Author(y) ∧ ∀z (Book(z) ∧ WrittenBy(z, y) → Read(x, z))))"
    },
    {
        "NL": "All engineers who have coordinated with at least one engineer, who in turn has not received a patent, have either designed more than two projects or attended all industry exhibitions.",
        "FOL": "∀x (Engineer(x) ∧ ∃y (Engineer(y) ∧ ¬ReceivedPatent(y) ∧ CoordinatedWith(x, y)) → (DesignedMoreThanTwoProjects(x) ∨ ∀z (IndustryExhibition(z) → Attended(x, z))))"
    },
    {
        "NL": "A place is considered a university if it is an institution of higher learning that offers undergraduate, graduate, and postgraduate programs in various fields of study.",
        "FOL": "∀x (University(x) ↔ (InstitutionOfHigherLearning(x) ∧ OffersUndergraduateGraduateAndPostgraduatePrograms(x) ∧ InVariousFieldsOfStudy(x)))"
    },
    {
        "NL": "An item is expensive if and only if it is not common.",
        "FOL": "∀x (Expensive(x) ∧ Item(x) ↔ ¬Common(x))"
    },
    {
        "NL": "If an object is a phone, it must be used for communication by transmitting voice and data.",
        "FOL": "∀x ((TransmitsVoice(x) ∧ TransmitsData(x)) → Phone(x))"
    },
    {
        "NL": "A company earns profit if they sell more product than their competitor.",
        "FOL": "∀x ∀y (Company(x) ∧ Company(y) ∧ MoreSales(x, y) → EarnsProfit(x))"
    },
    {
        "NL": "A singer can be a pop artist, write catchy tunes, and have numerous hit singles, or they can be a classical performer, create profound compositions, and receive prestigious awards.",
        "FOL": "∀x (Singer(x) → ((PopArtist(x) ∧ WritesCatchyTunes(x) ∧ HasNumerousHitSingles(x)) ⊕ (ClassicalPerformer(x) ∧ CreatesProfoundCompositions(x) ∧ ReceivesPrestigiousAwards(x))))"
    },
    {
        "NL": "Workers who overexert themselves frequently experience fatigue.",
        "FOL": "∀x (Worker(x) ∧ OverexertThemselves(x) → ExperienceFatigue(x))"
    },
    {
        "NL": "If a food item is part of a buffet, it's a salad, meat, or dessert.",
        "FOL": "∀x (FoodItem(x) ∧ PartOfBuffet(x) → Salad(x) ∨ Meat(x) ∨ Desert(x))"
    },
    {
        "NL": "A tree produces fruit if it is mature and healthy.",
        "FOL": "∀x (Tree(x) ∧ Mature(x) ∧ Healthy(x) → ProducesFruit(x))"
    },
    {
        "NL": "A car is considered a hybrid if it uses both gasoline and electricity as sources of power.",
        "FOL": "∀x (Car(x) ∧ UsesGasoline(x) ∧ UsesElectricity(x) → Hybrid(x))"
    },
    {
        "NL": "Every engineer who is diligent is respected by all clients.",
        "FOL": "∀x (Engineer(x) ∧ Diligent(x) → ∀y (Client(y) → Respects(y, x)))"
    },
    {
        "NL": "A square has equal sides and right angles, while a rectangle has equal opposite sides and right angles.",
        "FOL": "∀x (Square(x) → (EqualSides(x) ∧ RightAngles(x))) ∨ (Rectangle(x) → (EqualOppositeSides(x) ∧ RightAngles(x)))"
    },
    {
        "NL": "A train pulls out from its home depot and reaches its final stop, halting at several stations on the journey.",
        "FOL": "∃x ∃y ∃z (Train(x) ∧ Depot(y) ∧ FinalStop(z) → PullsOutFrom(x, y) ∧ Reaches(x, z) ∧ ∃w (Station(w) ∧ HaltsAt(x, w)))"
    },
    {
        "NL": "Green spaces in urban environments, such as parks or gardens, offer residents opportunities for relaxation and exercise.",
        "FOL": "∀x ∀y ∀z (GreenSpace(x) ∧ UrbanEnvironment(y) ∧ (Park(x) ∨ Garden(x)) ∧ Resident(z, y) → (OffersRelaxation(x, z) ∧ OffersExercise(x, z)))"
    },
    {
        "NL": "A child needs love, guidance, and education to develop completely.",
        "FOL": "∀y (Child(y) → (GetsLove(y) ∧ GetsGuidance(y) ∧ HasEducation(y)) → DevelopsCompletely(y))"
    },
    {
        "NL": "In a forest ecosystem, trees that provide a large canopy and have deep root systems help retain soil and promote biodiversity.",
        "FOL": "∀x∀y (ForestEcosystem(x) ∧ Tree(y) ∧ LargeCanopy(y) ∧ DeepRootSystem(y) → HelpsRetainSoilAndPromoteBiodiversity(x, y))"
    },
    {
        "NL": "An email is marked as spam if it contains suspicious links or has an unknown sender.",
        "FOL": "∀x (Email(x) ∧ (SuspiciousLinks(x) ∨ UnknownSender(x)) → MarkedAsSpam(x))"
    },
    {
        "NL": "Umbrellas protect against rain and sunlight.",
        "FOL": "∀x (Umbrella(x) → (ProtectsAgainstRain(x) ∧ ProtectsAgainstSunlight(x)))"
    },
    {
        "NL": "Every shelf holds books, but not every book holder is a shelf.",
        "FOL": "∀x (Shelf(x) → HoldsBooks(x)) ∧ ∃y (HoldsBooks(y) ∧ ¬Shelf(y))"
    },
    {
        "NL": "A food item is a dessert if it is sweet, typically consumed after a meal, and provides a sense of indulgence.",
        "FOL": "∀x (FoodItem(x) ∧ Sweet(x) ∧ ConsumedAfterMeal(x) ∧ ProvidesIndulgence(x) → Dessert(x))"
    },
    {
        "NL": "An artist creates an artwork in a specific style if the artist is trained in that style and the artwork's elements reflect the style's characteristics.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ Artwork(y) ∧ Style(z) ∧ TrainedIn(x, z) ∧ ElementsReflectStyle(y, z) → CreatesInStyle(x, y, z))"
    },
    {
        "NL": "A detective solves crimes by gathering evidence and analyzing clues.",
        "FOL": "∀x (Detective(x) → (∃y (Crime(y) ∧ Solves(x, y) ∧ GathersEvidence(x) ∧ AnalyzesClues(x))))"
    },
    {
        "NL": "A party is fun if there is good music, tasty snacks, and engaging activities.",
        "FOL": "∀x (Party(x) ∧ GoodMusic(x) ∧ TastySnacks(x) ∧ EngagingActivities(x) → Fun(x))"
    },
    {
        "NL": "A fruit is a berry if it has a fleshy texture and contains seeds, but not if it only has a single seed.",
        "FOL": "∀x (Fruit(x) ∧ ((FleshyTexture(x) ∧ ContainsSeeds(x)) ∧ ¬(HasSingleSeed(x) ∧ ¬(FleshyTexture(x) ∧ ContainsSeeds(x)))) → Berry(x))"
    },
    {
        "NL": "A painting attracts viewers if it has striking colors, a powerful theme, and a mysterious subject.",
        "FOL": "∀x (Painting(x) ∧ HasStrikingColors(x) ∧ HasPowerfulTheme(x) ∧ HasMysteriousSubject(x) → AttractsViewers(x))"
    },
    {
        "NL": "A celestial body that implodes due to its own gravity and turns into an extremely compact mass is a black hole.",
        "FOL": "∀x (CelestialBody(x) ∧ ImplodesDueToItsOwnGravity(x) ∧ BecomesExtremelyCompact(x) → BlackHole(x))"
    },
    {
        "NL": "Efficient programmers do not make mistakes.",
        "FOL": "∀x (Programmer(x) ∧ Efficient(x) → ¬MakeMistakes(x))"
    },
    {
        "NL": "If some books are unread, then everything is illuminating or some stories are boring.",
        "FOL": "∃x (Book(x) ∧ ¬Read(x)) → ∀y (Illuminating(y)) ∨ ∃z (Story(z) ∧ Boring(z))"
    },
    {
        "NL": "Artists use different mediums, such as oil paints, acrylics, or watercolors, to create their artwork.",
        "FOL": "∀x ∀y ∀z (Artist(x) ∧ Artwork(y) ∧ (Medium(oilPaints) ∨ Medium(acrylics) ∨ Medium(watercolors)) → UsesMedium(x, y, z))"
    },
    {
        "NL": "A student passes an exam if they answer enough questions correctly and do not cheat.",
        "FOL": "∀x (Student(x) → ((AnswersCorrectly(x) ∧ ¬Cheats(x)) → PassesExam(x)))"
    },
    {
        "NL": "Fruits, such as apples or oranges, are seed-bearing structures that develop from the ovary of a flowering plant, while vegetables, like carrots or spinach, are other parts of the plant, such as roots, stems, or leaves.",
        "FOL": "∀x ∀y ∀z ((Fruit(x) ∧ (Apple(x) ∨ Orange(x))) ∧ (DevelopsFromOvary(x, y) ∧ FloweringPlant(y)) ∧ (Vegetable(z) ∧ (Carrot(z) ∨ Spinach(z)) ∧ (Roots(z) ∨ Stems(z) ∨ Leaves(z))))"
    },
    {
        "NL": "CEOs are not always stern.",
        "FOL": "∃x (CEO(x) ∧ ¬Stern(x))"
    },
    {
        "NL": "Migratory birds fly long distances to find warmer climates and abundant food sources, while non-migratory birds remain in the same region year-round.",
        "FOL": "∀x (Bird(x) → (Migratory(x) ∧ FindsWarmerClimates(x) ∧ AbundantFoodSources(x) ∨ (¬Migratory(x) ∧ RemainsInSameRegion(x))))"
    },
    {
        "NL": "Exercising regularly and maintaining a balanced diet contribute to a lower risk of developing chronic diseases.",
        "FOL": "∀x (ExercisesRegularly(x) ∧ BalancedDiet(x) → LowerRiskOfChronicDiseases(x))"
    },
    {
        "NL": "A company becomes a market leader when it holds the largest market share and demonstrates consistent growth in its industry.",
        "FOL": "∀x ∀y (Company(x) ∧ Industry(y) ∧ LargestMarketShare(x, y) ∧ ConsistentGrowth(x, y) → MarketLeader(x))"
    },
    {
        "NL": "A student passes an exam if the student's score is equal to or greater than the passing score.",
        "FOL": "∀x∀y (Student(x) ∧ Exam(y) ∧ ScoreIsGreaterThanOrEqualToPassingScore(x, y) → PassesExam(x, y))"
    },
    {
        "NL": "There is a park that is large but not busy, or it's busy but not large.",
        "FOL": "∃x (Park(x) → ((Large(x) ∧ ¬Busy(x)) ⊕ (Busy(x) ∧ ¬Large(x))))"
    },
    {
        "NL": "A cake is delicious when it is moist and has the right amount of sweetness.",
        "FOL": "∀x (Cake(x) ∧ Moist(x) ∧ RightAmountOfSweetness(x) → Delicious(x))"
    },
    {
        "NL": "Certain dance performances incorporate traditional styles, involve live music, and are choreographed by famous artists.",
        "FOL": "∃x ∃y (DancePerformance(x) ∧ TraditionalStyle(y) ∧ Incorporates(x, y) ∧ LiveMusic(z) ∧ Involves(x, z) ∧ FamousArtist(w) ∧ ChoreographedBy(x, w))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains ethanol.",
        "FOL": "∀x (Beverage(x) ∧ ContainsEthanol(x) → Alcoholic(x))"
    },
    {
        "NL": "A person is considered an athlete if they participate in sports or physical activities.",
        "FOL": "∀x (Person(x) ∧ (ParticipatesInSports(x) ∨ ParticipatesInPhysicalActivities(x)) → Athlete(x))"
    },
    {
        "NL": "A thriving ecosystem has a high biodiversity, stable population dynamics, and resilience to environmental disturbances.",
        "FOL": "∀x (ThrivingEcosystem(x) ↔ (HighBiodiversity(x) ∧ StablePopulationDynamics(x) ∧ ResilientToDisturbances(x)))"
    },
    {
        "NL": "An animal is considered domesticated if it can live and reproduce under human care.",
        "FOL": "∀x (Animal(x) → (Domesticated(x) ↔ (LiveUnderHumanCare(x) ∧ ReproduceUnderHumanCare(x))))"
    },
    {
        "NL": "A screwdriver turns screws.",
        "FOL": "∀x (Screwdriver(x) → TurnsScrews(x))"
    },
    {
        "NL": "There are green apples.",
        "FOL": "∃x (Apple(x) ∧ Green(x))"
    },
    {
        "NL": "A person is considered a baker if they prepare and bake various types of bread, pastries, and other baked goods.",
        "FOL": "∀x (Baker(x) ↔ (PreparesAndBakesVariousBakedGoods(x) ∧ IncludingBreadAndPastries(x)))"
    },
    {
        "NL": "A place is considered a restaurant if it prepares and serves food and drinks to customers.",
        "FOL": "∀x (Restaurant(x) ↔ (PreparesAndServesFood(x) ∧ ServesDrinks(x)))"
    },
    {
        "NL": "A restaurant can be Japanese, serving sushi and ramen, or it can be Italian, offering pizzas and pastas, and always crowded.",
        "FOL": "∀x (Restaurant(x) → ((Japanese(x) ∧ ServeSushi(x) ∧ ServeRamen(x)) ⊕ (Italian(x) ∧ ServePizza(x) ∧ ServePasta(x) ∧ AlwaysCrowded(x))))"
    },
    {
        "NL": "A movie is interesting if it has a thrilling plot and versatile actors.",
        "FOL": "∀x (Movie(x) ∧ HasThrillingPlot(x) ∧ HasVersatileActors(x) → Interesting(x))"
    },
    {
        "NL": "An athlete is talented if they excel in their sport and are either highly disciplined or naturally gifted.",
        "FOL": "∀x (Athlete(x) ∧ ExcelInSport(x) ∧ (HighlyDisciplined(x) ∨ NaturallyGifted(x)) → Talented(x))"
    },
    {
        "NL": "No bird sings all melodious songs.",
        "FOL": "¬∃x (Bird(x) ∧ ∀y (Melodious(y) ∧ Song(y) → Sings(x, y)))"
    },
    {
        "NL": "A person is considered a police officer if they enforce laws, maintain public order, and protect citizens and property, often working for a local, state, or federal law enforcement agency.",
        "FOL": "∀x (PoliceOfficer(x) ↔ (EnforcesLawsMaintainsPublicOrderAndProtectsCitizensAndProperty(x) ∧ WorksForLocalStateOrFederalLawEnforcementAgency(x)))"
    },
    {
        "NL": "Someone is either a doctor or likes playing football, but can't be both.",
        "FOL": "∀x (Doctor(x) ⊕ EnjoyFootball(x))"
    },
    {
        "NL": "In a movie theater, people sit in seats, and the seats are organized in rows.",
        "FOL": "∀x ∀y ∀z (MovieTheater(x) ∧ (Person(y) ∧ SitsInSeat(y, z)) ∧ (Seat(z) ∧ OrganizedInRows(x, z)))"
    },
    {
        "NL": "A smartphone can be considered innovative if it incorporates cutting-edge technology, has unique features, and offers a seamless user experience.",
        "FOL": "∀x (Smartphone(x) ∧ Innovative(x) ↔ (∃y∃z (IncorporatesCuttingEdgeTechnology(x, y) ∧ UniqueFeatures(x, z) ∧ SeamlessUserExperience(x))))"
    },
    {
        "NL": "A triangle with all sides of equal length is equilateral, while a triangle with no equal sides is scalene.",
        "FOL": "∀x (Triangle(x) ∧ AllSidesEqual(x) → Equilateral(x)) ∧ (Triangle(x) ∧ NoEqualSides(x) → Scalene(x))"
    },
    {
        "NL": "A shape is either a round circle or a square square, but not both.",
        "FOL": "∀x ((Round(x) ∧ Circle(x)) ⊕ (Square(x) ∧ Square(x)))"
    },
    {
        "NL": "A celestial event characterized by the alignment of three celestial bodies, such as the sun, the earth, and the moon, causes a solar or a lunar eclipse.",
        "FOL": "∀x (CelestialEvent(x) ∧ AlignmentOfThreeCelestialBodies(x) ∧ InvolvesSunEarthMoon(x) → (SolarEclipse(x) ∨ LunarEclipse(x)))"
    },
    {
        "NL": "A candle emits light when lit.",
        "FOL": "∀x (Candle(x) → (Lit(x) → EmitsLight(x)))"
    },
    {
        "NL": "A zoo houses and cares for various species of animals, often for the purposes of conservation, research, or public education and entertainment.",
        "FOL": "∀x (Zoo(x) → HousesAndCaresForAnimals(x) ∧ (ConservationPurpose(x) ∨ ResearchPurpose(x) ∨ PublicEducationAndEntertainment(x)))"
    },
    {
        "NL": "A vacation destination is alluring when it boasts beautiful scenery, provides diverse activities, and offers unique cultural experiences.",
        "FOL": "∀x (VacationDestination(x) ∧ BeautifulScenery(x) ∧ DiverseActivities(x) ∧ UniqueCulturalExperiences(x) → Alluring(x))"
    },
    {
        "NL": "There aren't any birds that can neither fly nor sing.",
        "FOL": "¬∃x (Bird(x) ∧ ¬CanFly(x) ∧ ¬CanSing(x))"
    },
    {
        "NL": "A red traffic light signals stop, a green traffic light signals go, and a yellow traffic light signals caution.",
        "FOL": "∀x ∀y ∀z (RedLight(x) ∧ GreenLight(y) ∧ YellowLight(z) → (SignalsStop(x) ∧ SignalsGo(y) ∧ SignalsCaution(z)))"
    },
    {
        "NL": "A movie is popular if it attracts a large audience and receives positive feedback.",
        "FOL": "∀x (Movie(x) → (Popular(x) ↔ (LargeAudience(x) ∧ PositiveFeedback(x))))"
    },
    {
        "NL": "Any chef who has earned a Michelin star and either operates a restaurant or has been awarded as chef of the year, but not both, must either be employed in an upscale restaurant or be a celebrated gourmet chef.",
        "FOL": "∀x (Chef(x) ∧ EarnedMichelinStar(x) ∧ (OperatesRestaurant(x) ⊕ AwardedChefOfYear(x)) → (EmployedUpscaleRestaurant(x) ∨ CelebratedGourmetChef(x)))"
    },
    {
        "NL": "A space probe exploring a distant planet can transmit data and images back to Earth for scientific analysis.",
        "FOL": "∀x∀y∀z (SpaceProbe(x) ∧ DistantPlanet(y) ∧ Earth(z) ∧ Explores(x, y) → (TransmitsDataAndImages(x, z) ∧ UsedForScientificAnalysis(x, z)))"
    },
    {
        "NL": "A good teacher engages students with interactive lessons and provides constructive feedback.",
        "FOL": "∀x (Teacher(x) ∧ EngagesStudents(x) ∧ ProvidesConstructiveFeedback(x) → Good(x))"
    },
    {
        "NL": "Alice trusts Bob if and only if Bob trusts Alice.",
        "FOL": "Trust(alice, bob) ↔ Trust(bob, alice)"
    },
    {
        "NL": "Students may be in the same class, but they have their individual ambitions.",
        "FOL": "∀x ∃y (Student(x) ∧ Student(y) ∧ SameClass(x, y) → HaveIndividualAmbitions(x) ∧ HaveIndividualAmbitions(y))"
    },
    {
        "NL": "In a computer system, a component that stores data temporarily for quick access by the processor is referred to as cache memory.",
        "FOL": "∀x∀y (ComputerSystem(x) ∧ Component(y) ∧ StoresDataTemporarily(y) ∧ QuickAccessForProcessor(y) → CacheMemory(y))"
    },
    {
        "NL": "In a healthy ecosystem, there exists a balance between predators and prey.",
        "FOL": "∀x (HealthyEcosystem(x) → ∃y ∃z (Predator(y) ∧ Prey(z) ∧ BalancedRelationship(x, y, z)))"
    },
    {
        "NL": "A person who practices yoga frequently might pursue a vegetarian diet or engage in meditation.",
        "FOL": "∀x (PracticesYoga(x) → (PursuesVegetarianDiet(x) ∨ EngagesInMeditation(x)))"
    },
    {
        "NL": "A balanced ecosystem consists of predators, prey, and decomposers that maintain a stable population and nutrient cycling.",
        "FOL": "∀x∀y∀z (Ecosystem(x) ∧ Balanced(x) → (Predators(x, y) ∧ Prey(x, y) ∧ Decomposers(x, z) ∧ MaintainsStablePopulation(x) ∧ NutrientCycling(x)))"
    },
    {
        "NL": "A room is well-lit if it has sufficient natural or artificial light sources.",
        "FOL": "∀x (Room(x) ∧ (SufficientNaturalLight(x) ∨ SufficientArtificialLight(x)) → WellLit(x))"
    },
    {
        "NL": "A horse is galloping in a field, and a cow is grazing in a meadow.",
        "FOL": "∃x ∃y (Horse(x) ∧ Field(y) ∧ GallopingIn(x, y)) ∧ ∃z ∃w (Cow(z) ∧ Meadow(w) ∧ GrazingIn(z, w))"
    },
    {
        "NL": "A sailboat is a vessel propelled by wind using sails, a motorboat is a vessel propelled by an engine, and a rowboat is a vessel propelled by human power using oars.",
        "FOL": "∀x ∀y ∀z (Sailboat(x) → (Vessel(x) ∧ PropelledByWind(x) ∧ UsesSails(x))) ∧ (Motorboat(y) → (Vessel(y) ∧ PropelledByEngine(y))) ∧ (Rowboat(z) → (Vessel(z) ∧ PropelledByHumanPower(z) ∧ UsesOars(z)))"
    },
    {
        "NL": "An artist can be either a painter or a sculptor.",
        "FOL": "∀x (Artist(x) → Painter(x) ⊕ Sculptor(x))"
    },
    {
        "NL": "A planet with a moon orbits a star, and the moon orbits the planet.",
        "FOL": "∀x ∀y ∀z (Planet(x) ∧ Moon(y) ∧ HasMoon(x, y) ∧ Star(z) → (Orbits(x, z) ∧ Orbits(y, x)))"
    },
    {
        "NL": "A comfortable office environment includes ergonomic furniture, good lighting, and effective temperature control.",
        "FOL": "∀x (OfficeEnvironment(x) → (Comfortable(x) ↔ (ErgonomicFurniture(x) ∧ GoodLighting(x) ∧ EffectiveTemperatureControl(x))))"
    },
    {
        "NL": "A liquid is either a solid or a gas when it is not at room temperature.",
        "FOL": "∀x (Liquid(x) ∧ ¬AtRoomTemperature(x) → (Solid(x) ⊕ Gas(x)))"
    },
    {
        "NL": "Not all metals are magnetic; some are non-magnetic and others are paramagnetic.",
        "FOL": "¬(∀x (Metal(x) → Magnetic(x))) ∧ ∃y∃z (Metal(y) ∧ NonMagnetic(y) ∧ Metal(z) ∧ Paramagnetic(z))"
    },
    {
        "NL": "A chef cooks a meal using fresh ingredients and a recipe.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Meal(y) ∧ FreshIngredients(z) ∧ Recipe(y, z) → Cooks(x, y, z))"
    },
    {
        "NL": "An airplane flies safely when it has undergone proper maintenance, is piloted by a trained professional, and follows aviation regulations.",
        "FOL": "∀x (Airplane(x) ∧ ProperMaintenance(x) ∧ PilotedByTrainedProfessional(x) ∧ FollowsAviationRegulations(x) → FliesSafely(x))"
    },
    {
        "NL": "A tourist attraction is popular if it has many visitors and receives positive reviews.",
        "FOL": "∀x (TouristAttraction(x) ∧ Popular(x) ↔ ManyVisitors(x) ∧ PositiveReviews(x))"
    },
    {
        "NL": "Unless a car is both expensive and luxurious, it is not desirable.",
        "FOL": "∀x (¬(Expensive(x) ∧ Luxurious(x)) → ¬Desirable(x))"
    },
    {
        "NL": "A movie is a blockbuster if it has a large budget, high box office revenue, and positive reviews.",
        "FOL": "∀x (Movie(x) ∧ LargeBudget(x) ∧ HighBoxOffice(x) ∧ PositiveReviews(x) → Blockbuster(x))"
    },
    {
        "NL": "Birds fly in the sky, whereas fish swim in water.",
        "FOL": "∀x (Bird(x) → FliesinSky(x)) ∧ ∀y (Fish(y) → SwimsInWater(y))"
    },
    {
        "NL": "Humans are not cats.",
        "FOL": "∀x (Human(x) → ¬Cat(x))"
    },
    {
        "NL": "A pet is a dog or a cat.",
        "FOL": "∀x (Pet(x) → (Dog(x) ∨ Cat(x)))"
    },
    {
        "NL": "An online platform that connects farmers directly to consumers promotes fresher produce and supports local agriculture.",
        "FOL": "∀x (OnlinePlatform(x) ∧ ConnectsFarmersToConsumers(x) → (PromotesFresherProduce(x) ∧ SupportsLocalAgriculture(x)))"
    },
    {
        "NL": "An animal is an amphibian if it can live both on land and in water, and typically undergoes metamorphosis.",
        "FOL": "∀x (Amphibian(x) ↔ (Animal(x) ∧ LivesOnLand(x) ∧ LivesInWater(x) ∧ TypicallyUndergoesMetamorphosis(x)))"
    },
    {
        "NL": "A vaccine is effective against a virus if it stimulates the immune system to produce antibodies that neutralize the virus.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ Virus(y) ∧ StimulatesImmuneSystem(x, y) ∧ ProducesAntibodies(x, y) → EffectiveAgainst(x, y))"
    },
    {
        "NL": "A comet has a nucleus, a coma, and a tail.",
        "FOL": "∀x∀y∀z∀w (Comet(x) ∧ Nucleus(y) ∧ Coma(z) ∧ Tail(w) → HasParts(x, y, z, w))"
    },
    {
        "NL": "A successful research project often requires a well-defined research question, a rigorous methodology, and a comprehensive analysis of collected data.",
        "FOL": "∀x∀y∀z (SuccessfulResearchProject(x) ∧ WellDefinedResearchQuestion(y) ∧ RigorousMethodology(z) ∧ ComprehensiveAnalysisOfData(x) ∧ RequiresElements(x, y, z) → Successful(x))"
    },
    {
        "NL": "Cats have whiskers and retractable claws.",
        "FOL": "∀x (Cat(x) ↔ (HasWhiskers(x) ∧ HasRetractableClaws(x)))"
    },
    {
        "NL": "A car is equipped with safety features like airbags, anti-lock braking systems, and electronic stability control, which help prevent accidents and protect passengers.",
        "FOL": "∀x (Car(x) ∧ (Airbags(x) ∧ AntiLockBrakingSystems(x) ∧ ElectronicStabilityControl(x)) → HelpsPreventAccidentsAndProtectPassengers(x))"
    },
    {
        "NL": "A novel is interesting if it does not have an ordinary storyline and has relatable characters",
        "FOL": "∀x (Novel(x) ∧ ¬HasOrdinaryStoryline(x) ∧ HasRelatableCharacters(x) → Interesting(x))"
    },
    {
        "NL": "Farmers cultivate crops by planting seeds, watering, and providing nutrients.",
        "FOL": "∀x∀y∀z∀w (Farmer(x) ∧ Crop(y) ∧ Seed(z) ∧ (Water(w) ∧ Nutrients(w)) → CultivatesByPlantingWateringAndProviding(x, y, z, w))"
    },
    {
        "NL": "A system of government in which power is distributed among multiple branches, including a legislative, executive, and judicial branch, is classified as a democratic government.",
        "FOL": "∀x (GovernmentSystem(x) ∧ DistributedPower(x) ∧ LegislativeBranch(x) ∧ ExecutiveBranch(x) ∧ JudicialBranch(x) → DemocraticGovernment(x))"
    },
    {
        "NL": "There is no horse that jumps over all tall fences.",
        "FOL": "¬∃x (Horse(x) ∧ ∀y (Tall(y) ∧ Fence(y) → JumpsOver(x, y)))"
    },
    {
        "NL": "A gardener plants trees, maintains gardens, and takes care of the plants.",
        "FOL": "∀x ∃y (Gardener(x) → Plant(y) ∧ PlantsTrees(x, y) ∧ MaintainsGardens(x) ∧ TakesCare(x, y))"
    },
    {
        "NL": "Countries with a high gross domestic product (GDP) typically invest more in education, healthcare, and infrastructure compared to countries with lower GDP.",
        "FOL": "∀x∀y (Country(x) ∧ HighGDP(x) ∧ (Education(y) ∨ Healthcare(y) ∨ Infrastructure(y)) → InvestsMoreComparedToLowerGDP(x, y))"
    },
    {
        "NL": "Not all green circles are big.",
        "FOL": "¬∀x (Green(x) ∧ Circle(x) → Big(x))"
    },
    {
        "NL": "A person is considered bilingual if they can speak and understand two languages fluently.",
        "FOL": "∀x (Person(x) ∧ SpeaksAndUnderstandsTwoLanguagesFluently(x) → Bilingual(x))"
    },
    {
        "NL": "A website generates traffic when it has useful content, is easy to navigate, and loads quickly.",
        "FOL": "∀x (Website(x) → (UsefulContent(x) ∧ EasyToNavigate(x) ∧ QuickLoading(x) → GeneratesTraffic(x)))"
    },
    {
        "NL": "Every cat that follows a dog is also followed by that dog.",
        "FOL": "∀x ∀y (Cat(x) ∧ Dog(y) ∧ Follow(x, y) → Follow(y, x))"
    },
    {
        "NL": "A well-designed website is user-friendly, visually appealing, and has a clear navigation structure.",
        "FOL": "∀x (Website(x) → (UserFriendly(x) ∧ VisuallyAppealing(x) ∧ ClearNavigationStructure(x) → WellDesigned(x)))"
    },
    {
        "NL": "If there are no fresh fruits, then no chef uses any ingredient.",
        "FOL": "¬∃x (FreshFruit(x)) → ¬∃y (Chef(y) ∧ ∃z (Ingredient(z) ∧ Use(y, z)))"
    },
    {
        "NL": "A novel becomes a bestseller if it receives good reviews, has an engaging story, and is well-written.",
        "FOL": "∀x (Novel(x) → (Bestseller(x) ↔ (GoodReviews(x) ∧ EngagingStory(x) ∧ WellWritten(x))))"
    },
    {
        "NL": "A refrigerator keeps food cold, while an oven heats food and does not keep it cold.",
        "FOL": "∃x (Refrigerator(x) ∧ KeepsFoodCold(x)) ∨ ∃y (Oven(y) ∧ HeatsFood(y) ∧ ¬KeepsFoodCold(y))"
    },
    {
        "NL": "If a person is a psychologist, they study and analyze human behavior and mental processes.",
        "FOL": "∀x (Psychologist(x) → (StudiesHumanBehavior(x) ∧ AnalyzesMentalProcesses(x)))"
    },
    {
        "NL": "A film is a blockbuster if it has a large budget, a star-studded cast, and high box office revenue.",
        "FOL": "∀x ∀y ∀z (Film(x) ∧ LargeBudget(x) ∧ StarStuddedCast(y) ∧ HighBoxOfficeRevenue(z) → Blockbuster(x))"
    },
    {
        "NL": "A safe city maintains low crime rates, invests in community programs, and provides accessible emergency services.",
        "FOL": "∀x (City(x) ∧ LowCrimeRates(x) ∧ InvestsInCommunityPrograms(x) ∧ AccessibleEmergencyServices(x) → Safe(x))"
    },
    {
        "NL": "A glacier is a large mass of ice that forms on land and moves slowly under the force of gravity.",
        "FOL": "∀x∀y∀z (Glacier(x) ∧ Ice(y) ∧ Land(z) → (LargeMassOfIce(x, y) ∧ FormsOnLand(x, z) ∧ MovesSlowlyUnderGravity(x)))"
    },
    {
        "NL": "An educational program that focuses on hands-on learning, interdisciplinary approaches, and real-world problem-solving can prepare students for future career success and personal growth.",
        "FOL": "∀x (EducationalProgram(x) ∧ HandsOnLearning(x) ∧ InterdisciplinaryApproaches(x) ∧ RealWorldProblemSolving(x) → (PreparesForCareerSuccess(x) ∧ FostersPersonalGrowth(x)))"
    },
    {
        "NL": "A living organism that produces its own food through photosynthesis, possesses cell walls, and is multicellular is a plant.",
        "FOL": "∀x (LivingOrganism(x) ∧ ProducesOwnFoodThroughPhotosynthesis(x) ∧ PossessesCellWalls(x) ∧ Multicellular(x) → Plant(x))"
    },
    {
        "NL": "A computer software that is compatible with multiple operating systems and hardware configurations allows for increased interoperability and flexibility across various platforms.",
        "FOL": "∀x∀y∀z (ComputerSoftware(x) ∧ OperatingSystem(y) ∧ HardwareConfiguration(z) ∧ CompatibleWith(x, y, z) → (IncreasedInteroperability(x) ∧ FlexibilityAcrossPlatforms(x)))"
    },
    {
        "NL": "A scientific experiment is successful when the hypothesis is tested accurately, the results are reproducible, and the conclusions are valid.",
        "FOL": "∀x ∀y ∀z (ScientificExperiment(x) ∧ AccurateHypothesisTest(y) ∧ ReproducibleResults(z) ∧ ValidConclusions(x) → Successful(x))"
    },
    {
        "NL": "There is an artist who admires all and only the artists who do not admire themselves.",
        "FOL": "∃x (Artist(x) ∧ ∀y (Artist(y) → (Admire(x, y) ↔ ¬Admire(y, y))))"
    },
    {
        "NL": "A person who operates and maintains ships is called a marine engineer.",
        "FOL": "∀x (OperatesAndMaintainsShips(x) → MarineEngineer(x))"
    },
    {
        "NL": "A job can be full-time or part-time, require manual labor or intellectual work, and offer a salary, hourly wage, or commission.",
        "FOL": "∀x (Job(x) → ((FullTime(x) ⊕ PartTime(x)) ∧ (ManualLabor(x) ⊕ IntellectualWork(x)) ∧ (Salary(x) ∨ HourlyWage(x) ∨ Commission(x))))"
    },
    {
        "NL": "Either Ben is not a lawyer or Sarah is a musician, but not both.",
        "FOL": "¬Lawyer(ben) ⊕ Musician(sarah)"
    },
    {
        "NL": "An ice cream melts faster in hot weather than in cold weather.",
        "FOL": "∀x ∀y ∀z (IceCream(x) ∧ HotWeather(y) ∧ ColdWeather(z) → MeltsFaster(x, y, z))"
    },
    {
        "NL": "Carnivorous plants obtain nutrients from insects they capture or digest.",
        "FOL": "∀x (CarnivorousPlant(x) → ∀y (Insect(y) ∧ (Captures(x, y) ∨ Digests(x, y)) → ObtainsNutrientsFrom(x, y)))"
    },
    {
        "NL": "Every cat is a pet.",
        "FOL": "∀x (Cat(x) → Pet(x))"
    },
    {
        "NL": "When a substance is dissolved in a solvent, the resulting solution has a higher boiling point and a lower freezing point than the pure solvent.",
        "FOL": "∀x∀y∀z (Substance(x) ∧ Solvent(y) ∧ Solution(z, x, y) → (HigherBoilingPoint(z, y) ∧ LowerFreezingPoint(z, y)))"
    },
    {
        "NL": "A film is captivating if it features an engaging plot and compelling characters or if it has stunning visual effects.",
        "FOL": "∀x (Film(x) ∧ ((EngagingPlot(x) ∧ CompellingCharacters(x)) ∨ StunningVisualEffects(x)) → Captivating(x))"
    },
    {
        "NL": "A building that serves as a residence, provides temporary lodging, and typically offers additional amenities like meals and housekeeping is a hotel.",
        "FOL": "∀x (Building(x) ∧ ServesAsResidence(x) ∧ ProvidesTemporaryLodging(x) ∧ OffersAdditionalAmenities(x) → Hotel(x))"
    },
    {
        "NL": "There is a worker in the factory with a difficult task.",
        "FOL": "∃x (Worker(x) ∧ InTheFactory(x) ∧ WithDifficultTask(x))"
    },
    {
        "NL": "All dogs bark noisily.",
        "FOL": "∀x (Dog(x) → BarkNoisily(x))"
    },
    {
        "NL": "A park is suitable for picnics if it has tables, green spaces, and is clean.",
        "FOL": "∀x (Park(x) ∧ Tables(x) ∧ GreenSpaces(x) ∧ Clean(x) → SuitableForPicnics(x))"
    },
    {
        "NL": "A computer is connected to the internet if it uses Wi-Fi, ethernet, or mobile data.",
        "FOL": "∀x (Computer(x) ∧ ConnectedToInternet(x) ↔ (UsesWiFi(x) ∨ UsesEthernet(x) ∨ UsesMobileData(x)))"
    },
    {
        "NL": "A drink is a soda, a juice, or a smoothie.",
        "FOL": "∀x (Drink(x) → (Soda(x) ∨ Juice(x) ∨ Smoothie(x)))"
    },
    {
        "NL": "An airplane has wings and is powered by engines, allowing it to fly and transport passengers or cargo over long distances.",
        "FOL": "∀x (Airplane(x) → (HasWings(x) ∧ PoweredByEngines(x) ∧ Flies(x) ∧ TransportsPassengersOrCargo(x)))"
    },
    {
        "NL": "An animal is an herbivore if it primarily consumes plants.",
        "FOL": "∀x (Animal(x) → (Herbivore(x) ↔ ConsumesPlants(x)))"
    },
    {
        "NL": "A hotel has rooms.",
        "FOL": "∀x (Hotel(x) → HasRooms(x))"
    },
    {
        "NL": "A vehicle is a car if and only if it is comfortable and not considered expensive.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ↔ (Comfortable(x) ∧ ¬ConsideredExpensive(x))))"
    },
    {
        "NL": "A gadget is deemed a smartphone if it can make calls, access the internet, has touch screen, and is portable.",
        "FOL": "∀x ((Gadget(x) ∧ MakeCalls(x) ∧ AccessInternet(x) ∧ HasTouchScreen(x) ∧ Portable(x)) → Smartphone(x))"
    },
    {
        "NL": "An electronic device requires a power source, such as a battery or an electrical outlet, to function properly.",
        "FOL": "∀x (ElectronicDevice(x) ∧ (BatteryPower(x) ∨ ElectricalOutlet(x)) → FunctionsProperly(x))"
    },
    {
        "NL": "An insect that has six legs, can fly, and lives in a colony is a type of social insect.",
        "FOL": "∀x (Insect(x) ∧ HasSixLegs(x) ∧ CanFly(x) ∧ LivesInColony(x) → SocialInsect(x))"
    },
    {
        "NL": "A cat is sleeping on a mat in the house.",
        "FOL": "∃x ∃y (Cat(x) ∧ Mat(y) ∧ SleepingOn(x, y) ∧ InTheHouse(x))"
    },
    {
        "NL": "An organization x sponsors an event y if x provides financial support and resources for the organization and promotion of y.",
        "FOL": "∀x ∀y (Organization(x) ∧ Event(y) ∧ ProvidesFinancialSupport(x, y) ∧ ProvidesResourcesForOrganizationAndPromotion(x, y) → Sponsors(x, y))"
    },
    {
        "NL": "A user has administrator rights only if they do not have guest rights and have passed a security check.",
        "FOL": "∀x (User(x) → (AdministratorRights(x) ↔ (¬GuestRights(x) ∧ PassedSecurityCheck(x))))"
    },
    {
        "NL": "An animal is an herbivore if it primarily consumes plants and does not eat other animals.",
        "FOL": "∀x ∀y ∀z (Animal(x) ∧ Plant(y) ∧ Animal(z) ∧ Consumes(x, y) ∧ ¬Eats(x, z) → Herbivore(x))"
    },
    {
        "NL": "If a person is a dentist, they either treat adults or children.",
        "FOL": "∀x (Person(x) ∧ Dentist(x) → TreatAdults(x) ⊕ TreatChildren(x))"
    },
    {
        "NL": "Not all movies that are horror, and none of them are unproduced.",
        "FOL": "¬∀x (Movie(x) → Horror(x)) ∧ ∀y (Movie(y) → ¬Unproduced(y))"
    },
    {
        "NL": "A room illuminated by sunlight is bright.",
        "FOL": "∀x∀y (Room(x) ∧ Sunlight(y) ∧ IlluminatedBy(x, y) → Bright(x))"
    },
    {
        "NL": "A novel that explores the psychological and moral growth of the protagonist from youth to adulthood and has a focus on character development and introspection is a bildungsroman.",
        "FOL": "∀x∀y∀z (Novel(x) ∧ ExploresPsychologicalGrowth(x, y) ∧ ExploresMoralGrowth(x, y) ∧ FocusOnCharacterDevelopment(x, z) ∧ FocusOnIntrospection(x, z) → Bildungsroman(x))"
    },
    {
        "NL": "A student is an undergraduate if they haven't yet received a bachelor's degree.",
        "FOL": "∀x (Undergraduate(x) → (Student(x) ∧ ¬ReceivedDegree(x, BachelorDegree)))"
    },
    {
        "NL": "Mountains are formed by geological processes, such as tectonic plate movement and volcanic activity.",
        "FOL": "∀x∀y∀z (Mountain(x) → (FormedByGeologicalProcess(x, y) ∧ (TectonicPlateMovement(y) ∨ VolcanicActivity(z))))"
    },
    {
        "NL": "A rectangle has two pairs of equal sides.",
        "FOL": "∀x (Rectangle(x) → (∃y ∃z (Side(x, y) ∧ Side(x, z) ∧ EqualSides(x, y, z))))"
    },
    {
        "NL": "A bicycle enables human-powered transportation by converting the rider's pedal strokes into forward motion.",
        "FOL": "∀x (Bicycle(x) → (EnablesHumanPoweredTransportation(x) ∧ ConvertsPedalStrokesIntoForwardMotion(x)))"
    },
    {
        "NL": "If a material is magnetic, it attracts or repels other magnetic materials.",
        "FOL": "∀x (Material(x) ∧ Magnetic(x) → (AttractsMagneticMaterials(x) ∨ RepelsMagneticMaterials(x)))"
    },
    {
        "NL": "A professor is multilingual if and only if they speak Greek or Latin, but not both.",
        "FOL": "∀x (Professor(x) → (Multilingual(x) ↔ (SpeakGreek(x) ⊕ SpeakLatin(x))))"
    },
    {
        "NL": "No dog is a herbivore.",
        "FOL": "¬∃x (Dog(x) ∧ Herbivore(x))"
    },
    {
        "NL": "An electronic device is energy-efficient if it consumes minimal power during use and has a low standby power consumption.",
        "FOL": "∀x (EnergyEfficient(x) ↔ (ElectronicDevice(x) ∧ ∀y ∀z (Power(y) ∧ StandbyPower(z) → (MinimalConsumptionDuringUse(x, y) ∧ LowStandbyPowerConsumption(x, z)))))"
    },
    {
        "NL": "Games that are exciting and fun usually attract more players.",
        "FOL": "∀x (Game(x) ∧ Exciting(x) ∧ Fun(x) → AttractMorePlayers(x))"
    },
    {
        "NL": "Emma is a lawyer and a painter.",
        "FOL": "Lawyer(emma) ∧ Painter(emma)"
    },
    {
        "NL": "An athlete participates in running or swimming, but not in both sports.",
        "FOL": "∀x (Athlete(x) → (ParticipatesInRunning(x) ⊕ ParticipatesInSwimming(x)))"
    },
    {
        "NL": "A fire is extinguished when it no longer has flames and the temperature has dropped.",
        "FOL": "∀x (Fire(x) → (NoFlames(x) ∧ TemperatureDropped(x) → Extinguished(x)))"
    },
    {
        "NL": "A bird flies in the sky, whereas a fish swims in water.",
        "FOL": "∀x (Bird(x) → FliesInSky(x)) ∧ ∀y (Fish(y) → SwimsInWater(y))"
    },
    {
        "NL": "If a person is a pilot, they operate aircraft.",
        "FOL": "∀x (Pilot(x) → OperatesAircraft(x))"
    },
    {
        "NL": "A planet is habitable if it supports liquid water and has an atmosphere suitable for life.",
        "FOL": "∀x (Planet(x) ∧ SupportsLiquidWater(x) ∧ SuitableAtmosphereForLife(x) → Habitable(x))"
    },
    {
        "NL": "A game is entertaining if it's not repetitive and offers strategy or puzzle elements.",
        "FOL": "∀x (Game(x) ∧ ¬Repetitive(x) ∧ (StrategyElements(x) ∨ PuzzleElements(x)) → Entertaining(x))"
    },
    {
        "NL": "When a person has a high fever and a cough, they might be suffering from the flu.",
        "FOL": "∀x ((HighFever(x) ∧ Cough(x)) → PossiblyFlu(x))"
    },
    {
        "NL": "Robins are birds that have red breasts and feed on worms.",
        "FOL": "∀x (Robin(x) → Bird(x) ∧ HaveRedBreast(x) ∧ FeedOnWorms(x))"
    },
    {
        "NL": "A phone rings if the battery is not dead and there is an incoming call.",
        "FOL": "∀x (Phone(x) → (Rings(x) ↔ (¬DeadBattery(x) ∧ IncomingCall(x))))"
    },
    {
        "NL": "A musical instrument produces sound if it has a vibrating component and the sound waves reach a listener's ears.",
        "FOL": "∀x ∀y ∀z (MusicalInstrument(x) ∧ VibratingComponent(y) ∧ SoundWaves(z) ∧ Has(x, y) ∧ ReachListenerEars(z) → ProducesSound(x))"
    },
    {
        "NL": "There are poets who esteem only those novelists who are more innovative than they.",
        "FOL": "∃x ∀y (Poet(x) ∧ Novelist(y) ∧ MoreInnovativeThan(y, x) → Esteem(x, y))"
    },
    {
        "NL": "Every trainer who has guided trainees, all of whom have gained their skills and respected the trainer, either has gotten a training supreme medal or has been endorsed by all their fellows.",
        "FOL": "∀x (Trainer(x) ∧ ∀y (Trainee(y) ∧ Guided(x, y) ∧ GainedSkill(y) ∧ Respected(y, x)) → (GottenTrainingSupremeMedal(x) ∨ ∀z (Fellow(z, x) → Endorsed(z, x))))"
    },
    {
        "NL": "Cats chase mice.",
        "FOL": "∀x ∀y (Cat(x) ∧ Mouse(y) → Chase(x, y))"
    },
    {
        "NL": "A city is considered a capital if it serves as the governmental center of a country or a state.",
        "FOL": "∀x ∀y (City(x) ∧ GovernmentalCenter(x, y) → Capital(x))"
    },
    {
        "NL": "An animal that consumes a diet primarily consisting of plants, has specialized teeth for grinding, and a long digestive tract is classified as an herbivore.",
        "FOL": "∀x∀y∀z (Animal(x) ∧ PrimarilyConsumesPlants(x, y) ∧ SpecializedTeethForGrinding(x) ∧ LongDigestiveTract(x, z) → Herbivore(x))"
    },
    {
        "NL": "A person who is a doctor has a medical degree and provides healthcare services.",
        "FOL": "∀x (Doctor(x) → (HasMedicalDegree(x) ∧ ProvidesHealthcareServices(x)))"
    },
    {
        "NL": "Coral reefs provide habitats for marine life and protect coastlines from erosion.",
        "FOL": "∀x∀y∀z (CoralReef(x) ∧ MarineLife(y) ∧ Coastline(z) → (ProvidesHabitat(x, y) ∧ ProtectsFromErosion(x, z)))"
    },
    {
        "NL": "An art exhibit features paintings, sculptures, and photographs, but it does not focus solely on a single artist or time period.",
        "FOL": "∀x (ArtExhibit(x) → ((FeaturesPaintings(x) ∧ FeaturesSculptures(x) ∧ FeaturesPhotographs(x)) ∧ ¬SolelyFocusedOnSingleArtistOrTimePeriod(x)))"
    },
    {
        "NL": "An item is a coin if it is made of metal, has a circular shape, and is used as a medium of exchange in transactions.",
        "FOL": "∀x (Item(x) ∧ MadeOfMetal(x) ∧ CircularShape(x) ∧ UsedAsMediumOfExchange(x) → Coin(x))"
    },
    {
        "NL": "Some paintings that are abstract don't use color, and all of them are on canvas.",
        "FOL": "¬∀x (Painting(x) → Abstract(x)) ∧ ∀y (Painting(y) → Canvas(y))"
    },
    {
        "NL": "A material that is strong, durable, and resistant to heat is a suitable material for construction.",
        "FOL": "∀x (Material(x) ∧ Strong(x) ∧ Durable(x) ∧ HeatResistant(x) → SuitableForConstruction(x))"
    },
    {
        "NL": "All planets are spherical unless they are located in another galaxy.",
        "FOL": "∀x (Planet(x) ↔ ¬∃y (AnotherGalaxy(y) ∧ LocatedIn(x, y)))"
    },
    {
        "NL": "No cats are lazy.",
        "FOL": "∀x (Cat(x) → ¬Lazy(x))"
    },
    {
        "NL": "Every programmer who knows Python also knows at least one other programming language.",
        "FOL": "∀x (Programmer(x) ∧ KnowsPython(x) → ∃y (ProgrammingLanguage(y) ∧ Knows(x, y) ∧ ¬Python(y)))"
    },
    {
        "NL": "Sunglasses protect eyes from sunlight by filtering UV rays.",
        "FOL": "∀x ∀y ∀z (Sunglasses(x) ∧ Eyes(y) ∧ Sunlight(z) → ProtectsFrom(x, y, z))"
    },
    {
        "NL": "A person is considered a vegetarian if they don't consume meat, poultry, or fish, but they do consume plant-based foods.",
        "FOL": "∀x (Person(x) ∧ ¬ConsumesMeat(x) ∧ ¬ConsumesPoultry(x) ∧ ¬ConsumesFish(x) ∧ ConsumesPlantBasedFoods(x) → Vegetarian(x))"
    },
    {
        "NL": "A phone is in silent mode if it does not ring, vibrate, or produce notification sounds.",
        "FOL": "∀x (Phone(x) ∧ SilentMode(x) ↔ (¬Rings(x) ∧ ¬Vibrates(x) ∧ ¬NotificationSounds(x)))"
    },
    {
        "NL": "Only the intelligent pass the test.",
        "FOL": "∀x (¬Intelligent(x) → ¬PassTest(x))"
    },
    {
        "NL": "A machine that converts electrical energy into mechanical energy, operates through the interaction of magnetic fields, and requires a power source is an electric motor.",
        "FOL": "∀x (Machine(x) ∧ ConvertsElectricalEnergyToMechanicalEnergy(x) ∧ OperatesThroughMagneticFieldInteraction(x) ∧ RequiresPowerSource(x) → ElectricMotor(x))"
    },
    {
        "NL": "All doctors who have practiced for over two decades and either write medical journals or conduct health awareness camps, but not both, must have either achieved a medical service award or be a chief medical officer.",
        "FOL": "∀x (Doctor(x) ∧ PracticedForOverTwoDecades(x) ∧ (WritesMedicalJournals(x) ⊕ ConductsHealthCamps(x)) → (AchievedMedicalServiceAward(x) ∨ ChiefMedicalOfficer(x)))"
    },
    {
        "NL": "A university attracts students if it has a strong reputation, a wide range of courses, and experienced faculty, but not if it has outdated facilities.",
        "FOL": "∀x (University(x) ∧ AttractsStudents(x) ↔ (StrongReputation(x) ∧ WideRangeOfCourses(x) ∧ ExperiencedFaculty(x) ∧ ¬OutdatedFacilities(x)))"
    },
    {
        "NL": "A plant that loses its leaves seasonally, undergoes a period of dormancy, and has a woody stem is a deciduous tree.",
        "FOL": "∀x (Plant(x) ∧ LosesLeavesSeasonally(x) ∧ UndergoesDormancy(x) ∧ WoodyStem(x) → DeciduousTree(x))"
    },
    {
        "NL": "Nothing can be both sweet and salty.",
        "FOL": "¬∃x (Thing(x) ∧ Sweet(x) ∧ Salty(x))"
    },
    {
        "NL": "An orchestra consists of musicians playing various instruments, such as strings, brass, and percussion, to create harmonious music.",
        "FOL": "∀x∀y∀z (Orchestra(x) → (ConsistsOfMusiciansPlayingInstruments(x, y) ∧ IncludesStrings(y) ∧ IncludesBrass(y) ∧ IncludesPercussion(z) ∧ CreatesHarmoniousMusic(x)))"
    },
    {
        "NL": "A car is fast, and a bicycle is slow.",
        "FOL": "∃x (Fast(x) ∧ Car(x)) ∧ ∃x (Slow(x) ∧ Bicycle(x))"
    },
    {
        "NL": "A healthy diet includes a balance of fruits, vegetables, proteins, and grains, but does not consist solely of processed foods.",
        "FOL": "∀x (HealthyDiet(x) ↔ (BalanceOfFruits(x) ∧ BalanceOfVegetables(x) ∧ BalanceOfProteins(x) ∧ BalanceOfGrains(x) ∧ ¬ProcessedFoodsOnly(x)))"
    },
    {
        "NL": "A government is democratic if it allows citizens to vote in free and fair elections.",
        "FOL": "∀x (Government(x) ∧ AllowsCitizensToVote(x) ∧ FreeAndFairElections(x) → Democratic(x))"
    },
    {
        "NL": "All students in a class must complete homework or attend lectures to pass the course.",
        "FOL": "∀x∀y∀z (Student(x) ∧ Class(y) ∧ Course(z) ∧ In(x, y) ∧ For(z, y) → (CompletesHomework(x, z) ∨ AttendsLectures(x, z)) → PassesCourse(x, z))"
    },
    {
        "NL": "A dog is suitable for elderly if and only if it is not loud and destructive.",
        "FOL": "∀x (Dog(x) → (SuitableForElderly(x) ↔ ¬Loud(x) ∧ ¬Destructive(x)))"
    },
    {
        "NL": "A museum exhibits art if it houses paintings, sculptures, or other art forms.",
        "FOL": "∀x (Museum(x) ∧ (HousesPaintings(x) ∨ HousesSculptures(x) ∨ HousesOtherArtForms(x)) → ExhibitsArt(x))"
    },
    {
        "NL": "A place is considered a gym if it is a facility for physical exercise and training.",
        "FOL": "∀x (Gym(x) ↔ FacilityForPhysicalExerciseAndTraining(x))"
    },
    {
        "NL": "A tree that grows in an area with fertile soil, adequate sunlight, and sufficient rainfall will likely thrive.",
        "FOL": "∀x∀y∀z (Tree(x) ∧ FertileSoil(y) ∧ AdequateSunlight(y) ∧ SufficientRainfall(z) ∧ GrowsInArea(x, y, z) → LikelyThrives(x))"
    },
    {
        "NL": "Nothing is a large square or a small circle.",
        "FOL": "¬∃x ((Large(x) ∧ Square(x)) ∨ (Small(x) ∧ Circle(x)))"
    },
    {
        "NL": "A hospital treats patients.",
        "FOL": "∀x ∃y (Hospital(x) → Treats(x, y))"
    },
    {
        "NL": "No tree having branches lacks leaves.",
        "FOL": "∀x (Tree(x) → (HaveBranches(x) → ¬LackLeaves(x)))"
    },
    {
        "NL": "A scientist discovers a new planet if they observe it through a telescope and confirm its existence.",
        "FOL": "∀x ∀y ∀z (Scientist(x) ∧ Planet(y) ∧ Telescope(z) ∧ Observes(x, y, z) → Discovers(x, y) ∧ ConfirmsExistence(y))"
    },
    {
        "NL": "Trees absorb carbon dioxide from the atmosphere and store it as biomass, helping to combat climate change.",
        "FOL": "∀x ∀y (Tree(x) ∧ CarbonDioxide(c) ∧ Atmosphere(a) ∧ Biomass(b) ∧ ClimateChange(y) → AbsorbsAndStores(x, c, a, b, y))"
    },
    {
        "NL": "A book is informative if it contains accurate information.",
        "FOL": "∀x (Book(x) ∧ ContainsAccurateInformation(x) → Informative(x))"
    },
    {
        "NL": "A type of fish can be either freshwater or saltwater.",
        "FOL": "∀x (Fish(x) → (Freshwater(x) ⊕ Saltwater(x)))"
    },
    {
        "NL": "Educational institutions offer courses in subjects such as mathematics, science, and history.",
        "FOL": "∀x (EducationalInstitution(x) ∧ Subject(y) ∧ (Mathematics(y) ∨ Science(y) ∨ History(y)) → OffersCourses(x, y))"
    },
    {
        "NL": "Many desserts are sweet, often containing sugar, honey, or other sweeteners, and are served at the end of a meal.",
        "FOL": "∀x ∀y (Dessert(x) ∧ Sweetener(y) → (Sweet(x) ∧ Contains(x, y) ∧ ServedAtEndOfMeal(x)))"
    },
    {
        "NL": "There are animals on the planet that are not yet classified.",
        "FOL": "∃x (Animal(x) ∧ OnPlanet(x) ∧ ¬Classified(x))"
    },
    {
        "NL": "A flower attracts pollinators through its colorful petals and enticing fragrance, facilitating the transfer of pollen and promoting reproduction.",
        "FOL": "∀x (Flower(x) → (AttractsPollinators(x) ∧ ColorfulPetals(x) ∧ EnticingFragrance(x) ∧ FacilitatesPollenTransfer(x) ∧ PromotesReproduction(x)))"
    },
    {
        "NL": "A catalyst is a substance that increases the rate of a chemical reaction without being consumed or permanently altered, allowing the reaction to occur more efficiently.",
        "FOL": "∀x ∀y (Catalyst(x) ∧ ChemicalReaction(y) → (IncreasesReactionRate(x, y) ∧ NotConsumed(x) ∧ NotPermanentlyAltered(x) ∧ MoreEfficientReaction(y)))"
    },
    {
        "NL": "There exists a child who adores all and only those animals that do not adore themselves.",
        "FOL": "∃x (Child(x) ∧ ∀y (Animal(y) → (Adore(x, y) ↔ ¬Adore(y, y))))"
    },
    {
        "NL": "An eco-friendly product minimizes environmental impact, utilizes sustainable materials, and encourages recycling.",
        "FOL": "∀x (Product(x) → (EcoFriendly(x) ↔ (MinimizesEnvironmentalImpact(x) ∧ UtilizesSustainableMaterials(x) ∧ EncouragesRecycling(x))))"
    },
    {
        "NL": "A programmer codes for their clients, debugs software, and enhances system performance.",
        "FOL": "∀x ∃y (Programmer(x) → Client(y) ∧ Codes(x, y) ∧ DebugsSoftware(x) ∧ EnhancesPerformance(x))"
    },
    {
        "NL": "Plant-eating mammals eat grass, whereas meat-eating mammals eat smaller animals.",
        "FOL": "∀x ∀y (Herbivore(x) ∧ Mammal(x) ∧ Grass(y) → Eats(x, y)) ∧ ∀z ∀w (Carnivorous(z) ∧ Mammal(z) ∧ Animal(w) ∧ Smaller(w, z) → Eats(z, w))"
    },
    {
        "NL": "If all teachers who will retire are tenured, then some new hires will not retire.",
        "FOL": "∀x (Teacher(x) ∧ Retire(x) → Tenured(x)) → ∃y (NewHire(y) ∧ ¬Retire(y))"
    },
    {
        "NL": "A person is considered a journalist if they research, write, edit, and present news stories and articles for various media outlets.",
        "FOL": "∀x (Journalist(x) ↔ (ResearchesWritesEditsAndPresentsNewsStoriesAndArticles(x) ∧ ForVariousMediaOutlets(x)))"
    },
    {
        "NL": "A type of vehicle that is designed for air travel, has wings, and is powered by engines is an aircraft if it can take off and land on a runway.",
        "FOL": "∀x (VehicleType(x) ∧ DesignedForAirTravel(x) ∧ HasWings(x) ∧ PoweredByEngines(x) ∧ CanTakeOffAndLandOnRunway(x) → Aircraft(x))"
    },
    {
        "NL": "A beverage can be hot or cold, but not both, and can be alcoholic or non-alcoholic.",
        "FOL": "∃x (Beverage(x) ∧ ((Hot(x) ∧ ¬Cold(x) ∧ Alcoholic(x)) ∨ (Hot(x) ∧ ¬Cold(x) ∧ ¬Alcoholic(x)) ∨ (¬Hot(x) ∧ Cold(x) ∧ Alcoholic(x)) ∨ (¬Hot(x) ∧ Cold(x) ∧ ¬Alcoholic(x))))"
    },
    {
        "NL": "An appliance is a washing machine if it is designed for cleaning clothes, uses water, and has a spinning mechanism.",
        "FOL": "∀x (Appliance(x) ∧ DesignedForCleaningClothes(x) ∧ UsesWater(x) ∧ SpinningMechanism(x) → WashingMachine(x))"
    },
    {
        "NL": "A book that is a fictional narrative, has well-developed characters, and contains a plot is typically a novel.",
        "FOL": "∀x (Book(x) ∧ FictionalNarrative(x) ∧ WellDevelopedCharacters(x) ∧ ContainsPlot(x) → Novel(x))"
    },
    {
        "NL": "A cake is baked if the oven is preheated and ingredients are mixed properly.",
        "FOL": "∀x (Cake(x) ∧ OvenPreheated(x) ∧ IngredientsMixed(x) → Baked(x))"
    },
    {
        "NL": "An author writes a novel and a publisher publishes it.",
        "FOL": "∀x∀y∀z (Author(x) ∧ Novel(y) ∧ Publisher(z) → (Writes(x, y) ∧ Publishes(z, y)))"
    },
    {
        "NL": "A mountain is tall if its elevation is high.",
        "FOL": "∀x (Mountain(x) ∧ HighElevation(x) → Tall(x))"
    },
    {
        "NL": "Clocks measure time and display the current hour and minute.",
        "FOL": "∀x (Clock(x) → (Measure(y) ∧ Time(y) ∧ Display(z) ∧ CurrentHourMinute(z) ∧ With(x, y, z)))"
    },
    {
        "NL": "A student is intelligent if he's grade A or his IQ is over 130.",
        "FOL": "∀x (Student(x) ∧ (GradeA(x) ∨ IQOverOneThirty(x)) → Intelligent(x))"
    },
    {
        "NL": "A film director collaborates with a writer and a producer to make a movie.",
        "FOL": "∀x ∀y ∀z (FilmDirector(x) ∧ Writer(y) ∧ Producer(z) → Collaborate(x, y, z, Movie))"
    },
    {
        "NL": "A chef needs to know about various ingredients, cooking techniques, and kitchen equipment to prepare meals.",
        "FOL": "∀x (Chef(x) → (KnowsIngredients(x) ∧ KnowsCookingTechniques(x) ∧ KnowsKitchenEquipment(x) ∧ PreparesMeals(x)))"
    },
    {
        "NL": "Journalists report news stories, conducting interviews and gathering information from various sources.",
        "FOL": "∀x∀y (Journalist(x) ∧ NewsStory(y) → (Reports(x, y) ∧ ConductsInterviews(x) ∧ GathersInformation(x, y)))"
    },
    {
        "NL": "A healthy habit includes regular exercise and a balanced diet.",
        "FOL": "∀x (HealthyHabit(x) → (RegularExercise(x) ∧ BalancedDiet(x)))"
    },
    {
        "NL": "When a volcano erupts, it emits lava, ash, and gases.",
        "FOL": "∀x∀y∀z (Volcano(x) ∧ Erupts(x) → (EmitsLava(x, y) ∧ EmitsAsh(x, y) ∧ EmitsGases(x, z)))"
    },
    {
        "NL": "A pilot flies airplanes by operating controls and navigating routes.",
        "FOL": "∀x∀y (Pilot(x) ∧ Airplane(y) → Flies(x, y))"
    },
    {
        "NL": "A galaxy is formed when a gravitational collapse of a large gas dust and stars occur and creates a rotating disk.",
        "FOL": "∀x (LargeGasDustStars(x) ∧ GravitationalCollapse(x) ∧ CreatesRotatingDisk(x) → Galaxy(x))"
    },
    {
        "NL": "An operating system is user-friendly if it offers an intuitive interface, delivers reliable performance, and provides robust security features.",
        "FOL": "∀x (OperatingSystem(x) ∧ IntuitiveInterface(x) ∧ ReliablePerformance(x) ∧ RobustSecurityFeatures(x) → UserFriendly(x))"
    },
    {
        "NL": "Every city is developed if it is populated.",
        "FOL": "∀x (City(x) ∧ Developed(x) → Populated(x))"
    },
    {
        "NL": "A river flows from its source, passing through various landscapes and ecosystems, and ultimately discharges into a body of water such as an ocean, sea, or lake.",
        "FOL": "∀x∀y∀z (River(x) ∧ Source(y) ∧ BodyOfWater(z) → (FlowsFrom(x, y) ∧ PassesThroughVariousLandscapes(x) ∧ PassesThroughEcosystems(x) ∧ DischargesInto(x, z)))"
    },
    {
        "NL": "A sound is loud if it's not quiet and not moderate.",
        "FOL": "∀x (Sound(x) → (Loud(x) ↔ (¬Quiet(x) ∧ ¬Moderate(x))))"
    },
    {
        "NL": "An organism that thrives in extreme environmental conditions, such as high pressure or extreme temperatures, is an extremophile.",
        "FOL": "∀x∀y∀z (Organism(x) ∧ ThrivesInExtremeConditions(x, y) ∧ HighPressure(y) ∨ ExtremeTemperatures(z) → Extremophile(x))"
    },
    {
        "NL": "It is not an absolute condition that something is a fast car if and only if it is expensive.",
        "FOL": "¬∀x (Fast(x) ∧ Car(x) ↔ Expensive(x))"
    },
    {
        "NL": "A writer can be successful if they have published books and have a large readership.",
        "FOL": "∀x (Writer(x) → (Successful(x) ↔ (PublishedBooks(x) ∧ LargeReadership(x))))"
    },
    {
        "NL": "If a shape is a cube, it has six faces and all faces are square.",
        "FOL": "∀x (Shape(x) ∧ Cube(x) ↔ (HasSixFaces(x) ∧ AllFacesAreSquare(x)))"
    },
    {
        "NL": "A doctor treats patients who are sick or injured but not both.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → (Treats(x, y) ↔ (Sick(y) ⊕ Injured(y))))"
    },
    {
        "NL": "The Eiffel Tower is a famous landmark in Paris, France.",
        "FOL": "FamousLandmark(eiffelTower) ∧ In(eiffelTower, paris) ∧ In(eiffelTower, france)"
    },
    {
        "NL": "A business can be a partnership, a proprietorship, or a corporation.",
        "FOL": "∀x (Business(x) → (Partnership(x) ∨ Proprietorship(x) ∨ Corporation(x)))"
    },
    {
        "NL": "Some architects either design buildings or infrastructure, but do not work on both.",
        "FOL": "∃x (Architect(x) ∧ (DesignBuildings(x) ⊕ DesignInfrastructure(x)))"
    },
    {
        "NL": "Some objects are round and some objects are triangular, but there are no round triangles.",
        "FOL": "∃x (Round(x)) ∧ ∃x (Triangle(x)) ∧ ¬∃x (Round(x) ∧ Triangle(x))"
    },
    {
        "NL": "A song earns listener's love if it has a catchy tune, soulful lyrics, and an unexpected harmony.",
        "FOL": "∀x (Song(x) ∧ HasCatchyTune(x) ∧ HasSoulfulLyrics(x) ∧ HasUnexpectedHarmony(x) → EarnsListenersLove(x))"
    },
    {
        "NL": "It is not true that all dogs are friendly.",
        "FOL": "¬∀x (Dog(x) → Friendly(x))"
    },
    {
        "NL": "A rock is considered igneous if it forms from the solidification of molten materials and has a crystalline texture.",
        "FOL": "∀x (Rock(x) ∧ FormsFromSolidificationOfMoltenMaterials(x) ∧ CrystallineTexture(x) → Igneous(x))"
    },
    {
        "NL": "Only the wise can comprehend philosophy.",
        "FOL": "∀x (¬Wise(x) → ¬ComprehendPhilosophy(x))"
    },
    {
        "NL": "A shape can be triangular, square, or circular, but not a combination of these.",
        "FOL": "∀x (Shape(x) → (Triangular(x) ⊕ Square(x) ⊕ Circular(x)))"
    },
    {
        "NL": "A smartphone has a touchscreen and can run applications for communication, entertainment, and productivity.",
        "FOL": "∀x (Smartphone(x) → (HasTouchscreen(x) ∧ RunsApplications(x, Communication) ∧ RunsApplications(x, Entertainment) ∧ RunsApplications(x, Productivity)))"
    },
    {
        "NL": "If a company has a high employee turnover rate, it indicates that employees are not satisfied with their jobs.",
        "FOL": "∀x (HighEmployeeTurnoverRate(x) → ¬SatisfiedEmployees(x))"
    },
    {
        "NL": "Every game is either single-player or multi-player, but not both.",
        "FOL": "∀x (Game(x) → (SinglePlayer(x) ⊕ MultiPlayer(x)))"
    },
    {
        "NL": "A mammal is considered endangered if its population is low and declining.",
        "FOL": "∀x (Mammal(x) ∧ LowPopulation(x) ∧ DecliningPopulation(x) → Endangered(x))"
    },
    {
        "NL": "A vehicle is reliable if it requires minimal maintenance.",
        "FOL": "∀x (Vehicle(x) ∧ MinimalMaintenance(x) → Reliable(x))"
    },
    {
        "NL": "A chef cooks food in a kitchen, whereas a server takes orders and serves food in a dining area.",
        "FOL": "∀x ∀y (Chef(x) ∧ Server(y) → (CooksFoodInKitchen(x) ∧ TakesOrdersAndServesFood(y)))"
    },
    {
        "NL": "A device is considered wireless if it does not require a physical connection to function.",
        "FOL": "∀x (Device(x) ∧ ¬RequiresPhysicalConnection(x) → Wireless(x))"
    },
    {
        "NL": "A mountain range is a series of connected mountains with peaks and valleys.",
        "FOL": "∀x (MountainRange(x) → (SeriesOfConnectedMountains(x) ∧ HasPeaks(x) ∧ HasValleys(x)))"
    },
    {
        "NL": "A dog can bark, while a cat cannot.",
        "FOL": "∀x ∀y (Dog(x) ∧ Cat(y) → (CanBark(x) ⊕ ¬CanBark(y)))"
    },
    {
        "NL": "An electronic device that captures and records visual images is a camera.",
        "FOL": "∀x ∀y (ElectronicDevice(x) ∧ VisualImage(y) ∧ CapturesAndRecords(x, y) → Camera(x))"
    },
    {
        "NL": "Satellites orbit the Earth to gather information and facilitate communication, while rockets are used to launch payloads and astronauts into space.",
        "FOL": "∀x∀y (Satellite(x) ∧ Rocket(y) → (OrbitsEarth(x) ∧ GathersInformation(x) ∧ FacilitatesCommunication(x)) ∧ (LaunchesPayloadsAndAstronauts(y)))"
    },
    {
        "NL": "A vehicle is considered fuel-efficient if it consumes less fuel per mile and emits fewer pollutants.",
        "FOL": "∀x (Vehicle(x) ∧ FuelEfficient(x) ↔ (ConsumesLessFuelPerMile(x) ∧ EmitsFewerPollutants(x)))"
    },
    {
        "NL": "Some songs are performed solo, while others are performed in a band.",
        "FOL": "∀x (Song(x) → PerformedSolo(x) ⊕ PerformedInBand(x))"
    },
    {
        "NL": "A room is dark when it has no windows or the lights are off.",
        "FOL": "∀x (Dark(x) ↔ (Room(x) ∧ (NoWindows(x) ∨ LightsOff(x))))"
    },
    {
        "NL": "A meal is healthy if and only if it has vegetables and whole grains.",
        "FOL": "∀x (Meal(x) → (Healthy(x) ↔ HasVegetables(x) ∧ HasWholeGrains(x)))"
    },
    {
        "NL": "A key unlocks a door, while a password grants access to an account.",
        "FOL": "∀x ∀y (Key(x) ∧ Door(y) → Unlocks(x, y)) ∧ ∀z ∀w (Password(z) ∧ Account(w) → GrantsAccess(z, w))"
    },
    {
        "NL": "A city is considered bike-friendly when it offers safe cycling infrastructure, comprehensive bike routes, and accessible bike-sharing programs.",
        "FOL": "∀x (City(x) ∧ SafeCyclingInfrastructure(x) ∧ ComprehensiveBikeRoutes(x) ∧ AccessibleBikeSharingPrograms(x) → BikeFriendly(x))"
    },
    {
        "NL": "If a living being is a plant, it can perform photosynthesis and grow towards light.",
        "FOL": "∀x (LivingBeing(x) ∧ Plant(x) → (PerformPhotosynthesis(x) ∧ GrowTowardsLight(x)))"
    },
    {
        "NL": "A structure that serves as a dwelling for humans, offers protection from the elements, and includes facilities for living and working is a building.",
        "FOL": "∀x∀y∀z (Structure(x) ∧ DwellingForHumans(x) ∧ OffersProtection(x, y) ∧ IncludesFacilities(x, z) → Building(x))"
    },
    {
        "NL": "A living organism can reproduce if it has functional reproductive organs and is capable of producing offspring.",
        "FOL": "∀x (LivingOrganism(x) ∧ FunctionalReproductiveOrgans(x) ∧ CapableOfProducingOffspring(x) → CanReproduce(x))"
    },
    {
        "NL": "Trees grow taller in sunlight and absorb carbon dioxide.",
        "FOL": "∀x (Tree(x) → (GrowsInSunlight(x) ∧ Absorbs(x, carbonDioxide)))"
    },
    {
        "NL": "Every bicycle has a wheel.",
        "FOL": "∀x ∃y (Bicycle(x) → Wheel(y) ∧ Has(x, y))"
    },
    {
        "NL": "A box is red or green, but not both.",
        "FOL": "∀x (Box(x) → (Red(x) ⊕ Green(x)))"
    },
    {
        "NL": "A computer is in sleep mode when it consumes minimal power, suspends active processes, and can quickly resume full functionality.",
        "FOL": "∀x (Computer(x) ∧ ConsumesMinimalPower(x) ∧ SuspendsActiveProcesses(x) → SleepMode(x))"
    },
    {
        "NL": "A computer can process data only if it has power and is not in sleep mode.",
        "FOL": "∀x (Computer(x) ∧ ProcessData(x) → (HasPower(x) ∧ ¬InSleepMode(x)))"
    },
    {
        "NL": "Every teacher teaches a subject they study and studies a subject they do not teach.",
        "FOL": "∀x (Teacher(x) → (∃y (Teaches(x, y) ∧ Studies(x, y)) ∧ ∃z (Studies(x, z) ∧ ¬Teaches(x, z))))"
    },
    {
        "NL": "A material is durable when it can withstand physical stress, resists wear and tear, and maintains its structural integrity over time.",
        "FOL": "∀x ∀y (Material(x) ∧ WithstandsPhysicalStress(x, y) ∧ ResistsWearAndTear(y) ∧ MaintainsStructuralIntegrityOverTime(x) → Durable(x))"
    },
    {
        "NL": "A figure is hexagonal only when it leads to a wee bit.",
        "FOL": "∀x (Hexagonal(x) ↔ ∃y (Wee(y) ∧ PointsTo(x, y)))"
    },
    {
        "NL": "Forests are composed of trees and provide habitat for wildlife.",
        "FOL": "∀x (Forest(x) → (∃y (Tree(y) ∧ ComposedOf(x, y)) ∧ ∃z (Wildlife(z) ∧ ProvidesHabitat(x, z))))"
    },
    {
        "NL": "A sandwich is good when it has ham or chicken.",
        "FOL": "∀x (Sandwich(x) ∧ (HasHam(x) ∨ HasChicken(x)) → Good(x))"
    },
    {
        "NL": "An e-book reader enables users to read digital books and adjust font size.",
        "FOL": "∀x (EbookReader(x) → (EnablesDigitalReading(x) ∧ EnablesFontSizeAdjustment(x)))"
    },
    {
        "NL": "A prism separates white light into a spectrum of colors by refracting light at different angles.",
        "FOL": "∀x ∀y ∀z (Prism(x) ∧ WhiteLight(y) ∧ SpectrumOfColors(z) → (Separates(x, y, z) ↔ RefractsLightAtDifferentAngles(x, y)))"
    },
    {
        "NL": "A musician plays an instrument during a concert.",
        "FOL": "∀x ∀y ∀z (Musician(x) ∧ Instrument(y) ∧ Concert(z) → PlaysDuring(x, y, z))"
    },
    {
        "NL": "A university offers undergraduate and graduate programs, providing education and conducting research.",
        "FOL": "∀x (University(x) → (OffersUndergraduatePrograms(x) ∧ OffersGraduatePrograms(x) ∧ ProvidesEducation(x) ∧ ConductsResearch(x)))"
    },
    {
        "NL": "A public park provides recreational space for outdoor activities, exercise, and relaxation.",
        "FOL": "∀x (PublicPark(x) → (ProvidesRecreationalSpace(x) ∧ ProvidesExerciseSpace(x) ∧ ProvidesRelaxationSpace(x)))"
    },
    {
        "NL": "If a person maintains strong social connections, they are more likely to have a higher quality of life and experience greater well-being.",
        "FOL": "∀x (MaintainsStrongSocialConnections(x) → (HigherQualityOfLife(x) ∧ GreaterWellBeing(x)))"
    },
    {
        "NL": "A professor will approve the assignment only if he checks the sources.",
        "FOL": "∀x (Professor(x) ∧ ApproveAssignment(x) → CheckSources(x))"
    },
    {
        "NL": "Every driver who is careful is respected by all passengers.",
        "FOL": "∀x (Driver(x) ∧ Careful(x) → ∀y (Passenger(y) → Respects(y, x)))"
    },
    {
        "NL": "Every mountain is high and beautiful.",
        "FOL": "∀x (Mountain(x) → (High(x) ∧ Beautiful(x)))"
    },
    {
        "NL": "Every blue item connects to at least one item that connects to only yellow things.",
        "FOL": "∀x (Blue(x) → ∃y (LinksTo(x, y) ∧ ∀z (LinksTo(y, z) → Yellow(z))))"
    },
    {
        "NL": "No machine is error-free unless it has been tested rigorously, but not all of them are user-friendly.",
        "FOL": "¬∃x (Machine(x) ∧ ErrorFree(x) ∨ TestedRigorously(x)) ∧ ¬∀y (Machine(y) → UserFriendly(y))"
    },
    {
        "NL": "A cloud is dark if and only if it is not high, and it moves over a red or orange field.",
        "FOL": "∀x (Cloud(x) → ((Dark(x) ↔ ¬High(x)) ∧ ∃y (MovesOver(x, y) → (Red(y) ∨ Orange(y)))))"
    },
    {
        "NL": "A valid passport is required for international travel, except for citizens traveling within their own country.",
        "FOL": "∀x∀y (Person(x) ∧ InternationalTravel(y) ∧ ¬CitizenTravelWithinCountry(x, y) → RequiresValidPassport(x, y))"
    },
    {
        "NL": "Books with vibrant illustrations and engaging stories capture the attention of both children and adults.",
        "FOL": "∀x∀y∀z ((Book(x) ∧ VibrantIllustrations(x) ∧ EngagingStory(x)) → (CapturesAttention(x, y) ∧ CapturesAttention(x, z) ∧ Child(y) ∧ Adult(z)))"
    },
    {
        "NL": "An animal is a reptile if it has scaly skin and lays eggs on land.",
        "FOL": "∀x (Animal(x) ∧ ScalySkin(x) ∧ LaysEggsOnLand(x) → Reptile(x))"
    },
    {
        "NL": "A door allows entry, while a window allows light.",
        "FOL": "∀x ∀y (Door(x) ∧ Window(y) → (AllowsEntry(x) ∧ AllowsLight(y)))"
    },
    {
        "NL": "Astronauts wear spacesuits to protect themselves from the extreme conditions of outer space.",
        "FOL": "∀x (Astronaut(x) → WearsSpacesuitForProtection(x, OuterSpace))"
    },
    {
        "NL": "A fruit is ripe when it is mature and ready for consumption.",
        "FOL": "∀x (Fruit(x) → (Mature(x) ∧ ReadyForConsumption(x) → Ripe(x)))"
    },
    {
        "NL": "A weather condition is intense if it involves torrential rain, gale force winds, and the likelihood of tsunami or other havoc.",
        "FOL": "∀x (WeatherCondition(x) ∧ InvolvesTorrentialRain(x) ∧ InvolvesGaleForceWinds(x) ∧ (LikelihoodOfTsunami(x) ∨ LikelihoodOfHavoc(x)) → Intense(x))"
    },
    {
        "NL": "A place is considered a zoo if it is a facility that houses and displays various animals for public viewing, education, and conservation purposes.",
        "FOL": "∀x (Zoo(x) ↔ (HousesAndDisplaysVariousAnimals(x) ∧ ForPublicViewingEducationAndConservation(x)))"
    },
    {
        "NL": "All mammals that are hungry and young need their mothers.",
        "FOL": "∀x (Mammal(x) ∧ Hungry(x) ∧ Young(x) → NeedMother(x))"
    },
    {
        "NL": "Each chef has cooked a dish for some restaurant.",
        "FOL": "∀x (Chef(x) ∧ ∃y (Dish(y) ∧ ∃z (Restaurant(z) ∧ CookedFor(x, y, z))))"
    },
    {
        "NL": "A beverage that contains caffeine, is made from steeping leaves, and originates from China is tea.",
        "FOL": "∀x (Beverage(x) ∧ ContainsCaffeine(x) ∧ MadeFromSteepingLeaves(x) ∧ OriginatesFromChina(x) → Tea(x))"
    },
    {
        "NL": "A chef will prepare the meal only if he isn't tired.",
        "FOL": "∀x (Chef(x) ∧ PrepareMeal(x) → ¬IsTired(x))"
    },
    {
        "NL": "An effective marketing campaign that utilizes social media platforms and targets a specific audience increases brand awareness and drives sales.",
        "FOL": "∀x∀y (EffectiveMarketingCampaign(x) ∧ UtilizesSocialMediaPlatforms(x) ∧ TargetsSpecificAudience(x) → (IncreasesBrandAwareness(y) ∧ DrivesSales(y)))"
    },
    {
        "NL": "Frogs catch insects with their sticky tongues and swallow them whole.",
        "FOL": "∀x ∀y (Frog(x) ∧ Insect(y) ∧ CatchesWithTongue(x, y) ∧ StickyTongue(x) → SwallowsWhole(x, y))"
    },
    {
        "NL": "A photographer captures images with a camera by focusing light onto a sensor.",
        "FOL": "∀x∀y∀z (Photographer(x) ∧ Image(y) ∧ Camera(z) → Captures(x, y, z))"
    },
    {
        "NL": "A bus leaves from its origin station and arrives at its destination station, stopping at multiple stops in between.",
        "FOL": "∃x ∃y ∃z (Bus(x) ∧ OriginStation(y) ∧ DestinationStation(z) → LeavesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ∃w (Stop(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A book is considered a bestseller if it has high sales or receives critical acclaim.",
        "FOL": "∀x (Book(x) ∧ (HighSales(x) ∨ CriticalAcclaim(x)) → Bestseller(x))"
    },
    {
        "NL": "A film receives a positive review if it has an engaging plot, good acting, and high production values, but not if any of these elements are lacking.",
        "FOL": "∀x (Film(x) ∧ (EngagingPlot(x) ∧ GoodActing(x) ∧ HighProductionValues(x) → PositiveReview(x)) ∧ ¬(¬EngagingPlot(x) ∨ ¬GoodActing(x) ∨ ¬HighProductionValues(x) → PositiveReview(x)))"
    },
    {
        "NL": "Every meal that is either Italian or Mexican leads to a dessert that is either sweet or savory.",
        "FOL": "∀x ((Meal(x) ∧ Italian(x)) ∨ (Meal(x) ∧ Mexican(x)) → ∃y ((Sweet(y) ∨ Savory(y)) ∧ LeadsTo(x, y)))"
    },
    {
        "NL": "A university is ranked prestigious if it has high research output and either a noteworthy faculty or a diverse student body.",
        "FOL": "∀x (University(x) ∧ HasHighResearchOutput(x) ∧ (HasNoteworthyFaculty(x) ∨ HasDiverseStudentBody(x)) → Prestigious(x))"
    },
    {
        "NL": "A mountain is snow-covered if the temperature is below freezing.",
        "FOL": "∀x (Mountain(x) → (BelowFreezingTemperature(x) → SnowCovered(x)))"
    },
    {
        "NL": "If any object is green, then all items connect to a cube.",
        "FOL": "∃x (Green(x) → ∀y ∃z (Cube(z) ∧ ConnectsTo(y, z)))"
    },
    {
        "NL": "A large body of salt water surrounded by land on three sides is a gulf.",
        "FOL": "∀x (LargeBodyOfWater(x) ∧ SaltWater(x) ∧ SurroundedByLand(x, 3) → Gulf(x))"
    },
    {
        "NL": "A city is regarded as environmentally friendly when it promotes public transportation, encourages green spaces, and implements recycling programs.",
        "FOL": "∀x∀y∀z∀w (City(x) ∧ PublicTransportation(y) ∧ GreenSpaces(z) ∧ RecyclingPrograms(w) ∧ Promotes(x, y) ∧ Encourages(x, z) ∧ Implements(x, w) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "A shape is symmetrical if it can be divided into equal halves by a line of symmetry.",
        "FOL": "∀x∀y (Shape(x) ∧ LineOfSymmetry(y) ∧ DividesIntoEqualHalves(x, y) → Symmetrical(x))"
    },
    {
        "NL": "Roses, tulips, and daffodils are popular types of flowers for gardens.",
        "FOL": "∀x (Rose(x) ∨ Tulip(x) ∨ Daffodil(x) → PopularGardenFlower(x))"
    },
    {
        "NL": "A device can be identified as a mobile, laptop, or tablet, but not all three at the same time.",
        "FOL": "∀x (Device(x) ∧ Identified(x) → (Mobile(x) ⊕ Laptop(x) ⊕ Tablet(x)))"
    },
    {
        "NL": "A ship sails from port A and docks at port B without anchoring at any berth in between.",
        "FOL": "∃x ∃y ∃z (Ship(x) ∧ PortA(y) ∧ PortB(z) → SailsFrom(x, y) ∧ DocksAt(x, z) ∧ ¬∃w (Berth(w) ∧ AnchorsAt(x, w)))"
    },
    {
        "NL": "A hotel is high-rated if it has excellent service and clean rooms.",
        "FOL": "∀x (Hotel(x) ∧ HasExcellentService(x) ∧ HasCleanRooms(x) → HighRated(x))"
    },
    {
        "NL": "Some cars are expensive, and some are not.",
        "FOL": "∃x (Car(x) ∧ Expensive(x)) ∧ ∃x (Car(x) ∧ ¬Expensive(x))"
    },
    {
        "NL": "A meal can consist of a main course and dessert, or just a main course, but never only a dessert.",
        "FOL": "∀x (Meal(x) → ((MainCourse(x) ∧ Dessert(x)) ∨ (MainCourse(x) ∧ ¬Dessert(x))))"
    },
    {
        "NL": "A type of power tool that is used for drilling holes in various materials, such as wood, metal, and plastic, is a drill.",
        "FOL": "∀x (PowerTool(x) ∧ UsedForDrillingHoles(x) ∧ DrillsInWood(x) ∨ DrillsInMetal(x) ∨ DrillsInPlastic(x) → Drill(x))"
    },
    {
        "NL": "A region with distinct climatic conditions, characterized by specific vegetation and wildlife, is a biome.",
        "FOL": "∀x (Region(x) ∧ DistinctClimaticConditions(x) ∧ CharacterizedBySpecificVegetation(x) ∧ CharacterizedBySpecificWildlife(x) → Biome(x))"
    },
    {
        "NL": "A destination with a beach or mountains can be ideal for relaxation or adventure.",
        "FOL": "∀x (Destination(x) ∧ (HasBeach(x) ∨ HasMountains(x)) → (IdealForRelaxation(x) ∨ IdealForAdventure(x)))"
    },
    {
        "NL": "Each chef who cooks both Italian and French, unless they are a gourmet, has either achieved a culinary accolade or has not shown up in citywide competitions.",
        "FOL": "∀x (Chef(x) ∧ CooksItalian(x) ∧ CooksFrench(x) ∨ Gourmet(x) → (AchievedCulinaryAccolade(x) ∨ ¬ ShowedUpInCityCompetitions(x)))"
    },
    {
        "NL": "If a dog is black and old, then it barks at at least one cat, unless it is a bulldog.",
        "FOL": "∀x ((Dog(x) ∧ Black(x) ∧ Old(x)) → ∃y (Cat(y) ∧ BarksAt(x, y) ∨ Bulldog(x)))"
    },
    {
        "NL": "A train stops at a station if the station is on its route.",
        "FOL": "∀x∀y (Train(x) ∧ Station(y) ∧ OnRoute(y, x) → StopsAt(x, y))"
    },
    {
        "NL": "An author writes a novel that belongs to a particular genre.",
        "FOL": "∀x∀y∀z (Author(x) ∧ Novel(y) ∧ Genre(z) ∧ Writes(x, y) ∧ BelongsTo(y, z) → AuthorNovelGenre(x, y, z))"
    },
    {
        "NL": "A medical procedure is considered invasive if it requires an incision or insertion of instruments into the body.",
        "FOL": "∀x (MedicalProcedure(x) ∧ Invasive(x) ↔ (RequiresIncision(x) ∨ InsertionOfInstrumentsIntoBody(x)))"
    },
    {
        "NL": "A dessert that contains chocolate and has a rich, creamy texture is classified as a chocolate-based dessert.",
        "FOL": "∀x (Dessert(x) ∧ ContainsChocolate(x) ∧ RichCreamyTexture(x) → ChocolateBasedDessert(x))"
    },
    {
        "NL": "None of the trees are blossoming.",
        "FOL": "¬∃x (Tree(x) ∧ Blossoming(x))"
    },
    {
        "NL": "A scientist observes phenomena, conducts experiments, and analyzes data to draw conclusions.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Phenomenon(y) ∧ Experiment(z) → ObservesConductsAnalyzesToDrawConclusions(x, y, z))"
    },
    {
        "NL": "A chef cooks meals in a kitchen using various ingredients and tools.",
        "FOL": "∀x ∀y (Chef(x) ∧ Meal(y) ∧ Kitchen(y) ∧ UsesIngredients(x) ∧ UsesTools(x) → Cooks(x, y))"
    },
    {
        "NL": "An animal is considered a bird if it has feathers, a beak, and lays hard-shelled eggs.",
        "FOL": "∀x (Animal(x) ∧ HasFeathers(x) ∧ HasBeak(x) ∧ LaysHardShelledEggs(x) → Bird(x))"
    },
    {
        "NL": "A person may be a doctor or a teacher but not both.",
        "FOL": "∀x (Person(x) → (Doctor(x) ⊕ Teacher(x)))"
    },
    {
        "NL": "A green trapezoid points to something.",
        "FOL": "∃x (Green(x) ∧ Trapezoid(x) → ∃y (PointsTo(x, y)))"
    },
    {
        "NL": "A computer runs efficiently when it has a fast processor and ample memory.",
        "FOL": "∀x∀y∀z (Computer(x) ∧ Processor(y) ∧ Memory(z) ∧ Fast(y) ∧ Ample(z) → RunsEfficiently(x))"
    },
    {
        "NL": "An athlete can be considered successful if they've won a championship or consistently performed at a high level without winning any titles.",
        "FOL": "∀x (Athlete(x) ∧ (WonChampionship(x) ∨ (ConsistentPerformance(x) ∧ ¬WonAnyTitle(x))) → Successful(x))"
    },
    {
        "NL": "A pen can be refillable and have a retractable tip.",
        "FOL": "∀x (Pen(x) → (Refillable(x) ∧ RetractableTip(x)))"
    },
    {
        "NL": "A country is powerful or weak.",
        "FOL": "∀x (Country(x) → (Powerful(x) ∨ Weak(x)))"
    },
    {
        "NL": "A computer game can be played in single-player mode or multiplayer mode, but not in both modes simultaneously.",
        "FOL": "∀x (ComputerGame(x) → ((SinglePlayerMode(x) ∨ MultiplayerMode(x)) ⊕ (SinglePlayerMode(x) ∧ MultiplayerMode(x))))"
    },
    {
        "NL": "Football is played outdoors on a grass field, while basketball is played indoors on a hardwood court.",
        "FOL": "∀x ∀y (Football(x) ∧ Basketball(y) → (PlayedOutdoorsOnGrass(x) ∧ PlayedIndoorsOnHardwood(y)))"
    },
    {
        "NL": "A building is a library if it houses a collection of books and other informational materials and is accessible to the public.",
        "FOL": "∀x (Library(x) → (Building(x) ∧ ∃y (CollectionOfBooks(y) ∧ Houses(x, y)) ∧ ∃z (InformationalMaterial(z) ∧ Houses(x, z)) ∧ AccessibleToPublic(x)))"
    },
    {
        "NL": "Glasses help improve vision.",
        "FOL": "∀x (Glasses(x) → ImproveVision(x))"
    },
    {
        "NL": "A construction worker assembles a structure using materials and following a specific design.",
        "FOL": "∀x∀y∀z (ConstructionWorker(x) ∧ Structure(y) ∧ Design(z) → (Assembles(x, y) ↔ (UsesMaterials(x, y) ∧ FollowsDesign(x, z))))"
    },
    {
        "NL": "Insects have three pairs of legs and a body divided into three parts.",
        "FOL": "∀x (Insect(x) → (ThreePairsOfLegs(x) ∧ BodyDividedIntoThreeParts(x)))"
    },
    {
        "NL": "An airplane can either be a commercial airliner or a military aircraft.",
        "FOL": "∀x (Airplane(x) → (CommercialAirliner(x) ⊕ MilitaryAircraft(x)))"
    },
    {
        "NL": "A comet has a nucleus composed of ice and dust, develops a tail when it approaches the Sun, and orbits the Sun in an elliptical path.",
        "FOL": "∀x∀y∀z (Comet(x) ↔ (HasNucleus(x, y) ∧ ComposedOfIceAndDust(y) ∧ DevelopsTailWhenApproachesSun(x, z) ∧ Sun(z) ∧ OrbitsInEllipticalPath(x, z)))"
    },
    {
        "NL": "There exists a star that all stars shine towards it, if all galaxies aren't large.",
        "FOL": "¬∀x (Galaxy(x) → Large(x)) → ∃y (Star(y) ∧ ∀z (Star(z) → ShinesToward(z, y)))"
    },
    {
        "NL": "A building with residential and commercial purposes is a mixed-use building.",
        "FOL": "∀x (Building(x) ∧ ResidentialPurpose(x) ∧ CommercialPurpose(x) → MixedUseBuilding(x))"
    },
    {
        "NL": "A tree has either leaves or needles, but not both types of foliage.",
        "FOL": "∀x (Tree(x) → (Leaves(x) ⊕ Needles(x)))"
    },
    {
        "NL": "A round, green fruit with a hard shell is a watermelon.",
        "FOL": "∀x (Fruit(x) ∧ Round(x) ∧ Green(x) ∧ HardShell(x) → Watermelon(x))"
    },
    {
        "NL": "A catalyst increases the rate of a chemical reaction by lowering the activation energy required for the reaction to occur.",
        "FOL": "∀x (Catalyst(x) → (IncreasesRateOfChemicalReaction(x) ∧ LowersActivationEnergyRequired(x)))"
    },
    {
        "NL": "Rain nourishes plants and replenishes the soil.",
        "FOL": "∀x ∀y (Rain(x) ∧ Plant(y) → Nourishes(x, y) ∧ ReplenishesSoil(x, y))"
    },
    {
        "NL": "All dogs that bark loudly are aggressive.",
        "FOL": "∀x (Dog(x) ∧ BarkLoudly(x) → Aggressive(x))"
    },
    {
        "NL": "A person who writes, directs, produces, and sometimes acts in theatrical performances, such as plays and musicals, is a playwright.",
        "FOL": "∀x (Person(x) ∧ WritesTheatricalPerformances(x) ∧ DirectsTheatricalPerformances(x) ∧ ProducesTheatricalPerformances(x) ∧ SometimesActsInPerformances(x) → Playwright(x))"
    },
    {
        "NL": "A conference features keynote speakers, panel discussions, and workshops, and attendees can participate in at least one of these events.",
        "FOL": "∀x∀y (Conference(x) ∧ Attendee(y, x) → (∃z (KeynoteSpeaker(z, x) ∨ PanelDiscussion(z, x) ∨ Workshop(z, x)) ∧ Participate(y, z)))"
    },
    {
        "NL": "A podcast gains popularity if it discusses interesting topics, has charismatic hosts, and either features engaging interviews or provides actionable advice.",
        "FOL": "∀x (Podcast(x) ∧ InterestingTopics(x) ∧ CharismaticHosts(x) → (EngagingInterviews(x) ∨ ActionableAdvice(x)) ∧ GainsPopularity(x))"
    },
    {
        "NL": "A polygon is concave if at least one of its interior angles is greater than 180 degrees.",
        "FOL": "∀x (Polygon(x) ∧ Concave(x) → ∃y (InteriorAngle(x, y) ∧ GreaterThan(y, 180)))"
    },
    {
        "NL": "Volcanoes can be dormant, active, or extinct, depending on their current state of eruption activity.",
        "FOL": "∀x (Volcano(x) → (Dormant(x) ⊕ Active(x) ⊕ Extinct(x)))"
    },
    {
        "NL": "Some plants are both drought-tolerant and produce edible fruits.",
        "FOL": "∃x (Plant(x) ∧ DroughtTolerant(x) ∧ ProducesEdibleFruits(x))"
    },
    {
        "NL": "A pharmaceutical drug is effective against a specific illness if it reduces symptoms and does not cause severe side effects.",
        "FOL": "∀x∀y (Drug(x) ∧ Illness(y) ∧ ReducesSymptoms(x, y) ∧ ¬SevereSideEffects(x) → EffectiveAgainst(x, y))"
    },
    {
        "NL": "An exercise routine is effective if it helps to build strength, improve flexibility, and increase endurance.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ (BuildsStrength(x) ∧ ImprovesFlexibility(x) ∧ IncreasesEndurance(x)) → Effective(x))"
    },
    {
        "NL": "A vehicle is fast or slow.",
        "FOL": "∀x (Vehicle(x) → (Fast(x) ∨ Slow(x)))"
    },
    {
        "NL": "Wine is made from fermented grapes, while beer is made from fermented grains and hops.",
        "FOL": "∀x∀y (AlcoholicBeverage(x) ∧ AlcoholicBeverage(y) → ((Wine(x) → (FermentedGrapes(x))) ∧ (Beer(y) → (FermentedGrains(y) ∧ Hops(y)))))"
    },
    {
        "NL": "A galaxy has a multitude of cosmological bodies if it includes stars, black holes, and nebulae with individual features.",
        "FOL": "∀x (Galaxy(x) ∧ ∃y ∃z ∃w (Star(y) ∧ BlackHole(z) ∧ Nebula(w) ∧ IndividualFeatures(y, z, w) ∧ Includes(x, y, z, w)) → HasMultitudeOfCosmologicalBodies(x))"
    },
    {
        "NL": "A novel is riveting if and only if it has engaging characters, suspenseful plot, but doesn't have countless complex sub-plots.",
        "FOL": "∀x (Novel(x) ∧ Riveting(x) ↔ (HasEngagingCharacters(x) ∧ HasSuspensefulPlot(x) ∧ ¬CountlessComplexSubPlots(x)))"
    },
    {
        "NL": "Rivers and lakes are bodies of fresh water, with rivers flowing in one direction and lakes being still water.",
        "FOL": "∀x ∀y (River(x) ∧ Lake(y) → (FreshWater(x) ∧ FreshWater(y) ∧ FlowsInOneDirection(x) ∧ StillWater(y)))"
    },
    {
        "NL": "A sculpture is made of metal if it is not made of wood, clay, or stone.",
        "FOL": "∀x (Sculpture(x) ∧ ¬(MadeOfWood(x) ∨ MadeOfClay(x) ∨ MadeOfStone(x)) → MadeOfMetal(x))"
    },
    {
        "NL": "A software is efficient if it has user-friendly interfaces and fast processing.",
        "FOL": "∀x (Software(x) ∧ UserFriendlyInterface(x) ∧ FastProcessing(x) → Efficient(x))"
    },
    {
        "NL": "Every large triangle is red.",
        "FOL": "∀x (Large(x) ∧ Triangle(x) → Red(x))"
    },
    {
        "NL": "A building can be used for residential purposes, commercial activities, or as a school.",
        "FOL": "∀x (Building(x) → (Residential(x) ∨ Commercial(x) ∨ School(x)))"
    },
    {
        "NL": "For a valid argument, if the premises are true, then the conclusion must also be true.",
        "FOL": "∀x (Argument(x) → (Valid(x) → (TruePremises(x) → TrueConclusion(x))))"
    },
    {
        "NL": "A spacecraft can dock with a space station if it approaches the docking port at the correct angle and speed.",
        "FOL": "∀x∀y∀z (Spacecraft(x) ∧ SpaceStation(y) ∧ DockingPort(z) ∧ Approaches(x, z) ∧ CorrectAngleAndSpeed(x) → CanDock(x, y))"
    },
    {
        "NL": "A person is considered a linguist if they speak multiple languages.",
        "FOL": "∀x (Person(x) ∧ SpeakMultipleLanguages(x) → Linguist(x))"
    },
    {
        "NL": "A teacher instructs students in a subject if the teacher is knowledgeable about that subject and can effectively communicate the material.",
        "FOL": "∀x ∀y ∀z (Teacher(x) ∧ Students(y) ∧ Subject(z) ∧ Knowledgeable(x, z) ∧ EffectiveCommunication(x, y, z) → Instructs(x, y, z))"
    },
    {
        "NL": "An appliance is durable if it withstands wear and tear.",
        "FOL": "∀x (Appliance(x) ∧ WithstandsWearAndTear(x) → Durable(x))"
    },
    {
        "NL": "A sport that is played on a rectangular field, involves two teams competing against each other, and has an objective of scoring goals is soccer or rugby.",
        "FOL": "∀x (Sport(x) ∧ PlayedOnRectangularField(x) ∧ InvolvesTwoTeams(x) ∧ ObjectiveOfScoringGoals(x) → (Soccer(x) ∨ Rugby(x)))"
    },
    {
        "NL": "All accountants who have either more than seven years of employment history or a master's degree in finance, but not both, work in two different companies unless they are a CFO, in that scenario, they manage a finance department.",
        "FOL": "∀x (Accountant(x) ∧ (MoreThanSevenYearsEmploymentHistory(x) ⊕ HasMastersInFinance(x)) → (WorksInTwoDifferentCompanies(x) ∨ (CFO(x) ∧ ManagesFinanceDepartment(x))))"
    },
    {
        "NL": "A camera captures images, while a microphone records sound.",
        "FOL": "∀x ∀y (Camera(x) ∧ Microphone(y) → (CapturesImages(x) ∧ RecordsSound(y)))"
    },
    {
        "NL": "Paul watches a movie if it was produced in the 20th century.",
        "FOL": "∀x (Movie(x) → (ProducedInTwentiethCentury(x) ↔ Watches(paul, x)))"
    },
    {
        "NL": "A taxi drives on roads, whereas a boat sails on water.",
        "FOL": "∀x (Taxi(x) → DrivesOnRoads(x)) ∧ ∀y (Boat(y) → SailsOnWater(y))"
    },
    {
        "NL": "A musical performance involving singing and dancing is either an opera or a musical theater production.",
        "FOL": "∀x (MusicalPerformance(x) ∧ InvolvesSinging(x) ∧ InvolvesDancing(x) → (Opera(x) ∨ MusicalTheater(x)))"
    },
    {
        "NL": "A product sells well if it has a unique function, a reasonable price, and an attractive packaging.",
        "FOL": "∀x (Product(x) ∧ HasUniqueFunction(x) ∧ HasReasonablePrice(x) ∧ HasAttractivePackaging(x) → SellsWell(x))"
    },
    {
        "NL": "A restaurant can be either dine-in or take-out only.",
        "FOL": "∀x (Restaurant(x) → (DineIn(x) ⊕ TakeOutOnly(x)))"
    },
    {
        "NL": "An architect designs environmentally friendly buildings if they incorporate sustainable materials, energy-efficient systems, and minimize waste.",
        "FOL": "∀x (Architect(x) ∧ DesignsBuildings(x) ∧ SustainableMaterials(x) ∧ EnergyEfficientSystems(x) ∧ MinimizesWaste(x) → EnvironmentallyFriendlyDesigns(x))"
    },
    {
        "NL": "A tool that can cut through materials, has a handle, and a sharp-edged blade is a knife if it is designed for handheld use.",
        "FOL": "∀x (Tool(x) ∧ CanCutMaterials(x) ∧ HasHandle(x) ∧ SharpEdgedBlade(x) ∧ DesignedForHandheldUse(x) → Knife(x))"
    },
    {
        "NL": "A person is considered a fitness enthusiast if they regularly exercise and maintain a healthy lifestyle.",
        "FOL": "∀x (RegularlyExercises(x) ∧ MaintainsHealthyLifestyle(x) → FitnessEnthusiast(x))"
    },
    {
        "NL": "Some businesses are either profitable or non-profitable, but not both.",
        "FOL": "∃x (Business(x) ∧ (Profitable(x) ⊕ NonProfitable(x)))"
    },
    {
        "NL": "All humans breathe air and can't breathe underwater.",
        "FOL": "∀x (Human(x) → (BreathesAir(x) ∧ ¬BreathesUnderWater(x)))"
    },
    {
        "NL": "Not all animals are pets.",
        "FOL": "¬∀x (Animal(x) → Pet(x))"
    },
    {
        "NL": "An athlete who competes in a sport that involves running, jumping, or throwing is called a track and field athlete.",
        "FOL": "∀x (Athlete(x) ∧ (CompetesInRunning(x) ∨ CompetesInJumping(x) ∨ CompetesInThrowing(x)) → TrackAndFieldAthlete(x))"
    },
    {
        "NL": "A car transports people and uses fuel.",
        "FOL": "∀x (Car(x) → (TransportsPeople(x) ∧ UsesFuel(x)))"
    },
    {
        "NL": "A beverage can be refreshing if it is served cold, contains hydrating ingredients, and has a pleasant taste.",
        "FOL": "∀x (Beverage(x) ∧ Refreshing(x) ↔ (∃y∃z (ServedCold(x, y) ∧ ContainsHydratingIngredients(x) ∧ HasPleasantTaste(x, z))))"
    },
    {
        "NL": "A skateboard is suitable for pavement but not for sand.",
        "FOL": "∀x ∀y (Skateboard(x) ∧ Pavement(y) → SuitableFor(x, y)) ∧ ¬(Skateboard(x) ∧ Sand(y) → SuitableFor(x, y))"
    },
    {
        "NL": "A child is sitting on the bench, and a pigeon is flying in the park.",
        "FOL": "∃x ∃y (Child(x) ∧ Bench(y) ∧ SittingOn(x, y)) ∧ ∃z (Pigeon(z) ∧ Flying(z) ∧ InPark(z))"
    },
    {
        "NL": "An athlete who participates in triathlons must be skilled in swimming, cycling, and running.",
        "FOL": "∀x (Triathlete(x) → (SkilledSwimmer(x) ∧ SkilledCyclist(x) ∧ SkilledRunner(x)))"
    },
    {
        "NL": "In a relay race, multiple athletes from each team run sequentially, with each athlete passing a baton to the next until the final athlete crosses the finish line.",
        "FOL": "∀x ∀y ∀z (RelayRace(x) ∧ Athlete(y) ∧ Athlete(z) ∧ FromSameTeam(y, z) → (RunSequentially(y, z) ∧ PassBaton(y, z) ∧ FinalAthleteCrossesFinishLine(x)))"
    },
    {
        "NL": "Houses are for living, schools for learning, and hospitals for healing.",
        "FOL": "∀x∀y∀z (House(x) → ForLiving(x)) ∧ (School(y) → ForLearning(y)) ∧ (Hospital(z) → ForHealing(z))"
    },
    {
        "NL": "A telephone enables voice communication.",
        "FOL": "∀x (Telephone(x) → EnablesVoiceCommunication(x))"
    },
    {
        "NL": "Certain athletes either run or swim, but do not participate in both.",
        "FOL": "∃x (Athlete(x) ∧ (Run(x) ⊕ Swim(x)))"
    },
    {
        "NL": "A city is considered a capital if it is the political center of a country.",
        "FOL": "∀x∀y (City(x) ∧ Country(y) ∧ PoliticalCenter(x, y) → Capital(x))"
    },
    {
        "NL": "A smartphone stores digital data and releases it when needed for usage.",
        "FOL": "∀x (Smartphone(x) → (StoresDigitalData(x) ∧ (IsNeededForUsage(x) → ReleasesData(x))))"
    },
    {
        "NL": "A musical instrument x produces sound when played by vibrating, striking, or otherwise manipulating it.",
        "FOL": "∀x (MusicalInstrument(x) → (Vibrating(x) ∨ Striking(x) ∨ Manipulating(x)))"
    },
    {
        "NL": "An electronic device that captures and stores images, uses an image sensor, and can process and transmit the images is a digital camera.",
        "FOL": "∀x∀y∀z (ElectronicDevice(x) ∧ CapturesAndStoresImages(x) ∧ ImageSensor(y) ∧ Uses(x, y) ∧ ProcessesAndTransmitsImages(z) ∧ Performs(x, z) → DigitalCamera(x))"
    },
    {
        "NL": "Every gas is soluble in some solvent.",
        "FOL": "∀x (Gas(x) → ∃y (Solvent(y) ∧ SolubleIn(x, y)))"
    },
    {
        "NL": "Cacti thrive in deserts, while ferns flourish in rainforests.",
        "FOL": "∀x (Cactus(x) → ThrivesInDeserts(x)) ∧ ∀y (Fern(y) → FlourishesInRainforests(y))"
    },
    {
        "NL": "A violin is played with a bow, while a piano is played with keys, and a guitar is played by strumming or plucking strings.",
        "FOL": "∀x ∀y ∀z (Violin(x) ∧ Piano(y) ∧ Guitar(z) → (PlayedWithBow(x) ∧ PlayedWithKeys(y) ∧ (Strumming(z) ∨ Plucking(z))))"
    },
    {
        "NL": "A person is considered a librarian if they manage, organize, and maintain collections of books and other materials in a library.",
        "FOL": "∀x ∃y (Person(x) ∧ ManagesLibraryCollections(x, y) ∧ OrganizesLibraryCollections(x, y) ∧ MaintainsLibraryCollections(x, y) ∧ Library(y) → Librarian(x))"
    },
    {
        "NL": "A tree provides shade if it has a large canopy, is tall, and has abundant leaves.",
        "FOL": "∀x (ProvidesShade(x) ↔ (Tree(x) ∧ ∃y (LargeCanopy(y) ∧ Has(x, y)) ∧ ∃z (Tall(z) ∧ Is(x, z)) ∧ ∃w (AbundantLeaves(w) ∧ Has(x, w))))"
    },
    {
        "NL": "An artwork that evokes emotion, conveys a message, and displays technical skill is considered valuable.",
        "FOL": "∀x (Artwork(x) ∧ EvokesEmotion(x) ∧ ConveysMessage(x) ∧ DisplaysTechnicalSkill(x) → Valuable(x))"
    },
    {
        "NL": "Tom is a student and he is studying either chemistry or biology.",
        "FOL": "Student(tom) ∧ (Studying(tom, chemistry) ⊕ Studying(tom, biology))"
    },
    {
        "NL": "A person can vote in an election if they are a citizen, at least 18 years old, and registered to vote.",
        "FOL": "∀x∀y (Person(x) ∧ Election(y) ∧ Citizen(x) ∧ AtLeast18YearsOld(x) ∧ RegisteredToVote(x) → CanVote(x, y))"
    },
    {
        "NL": "All squares are either large or small.",
        "FOL": "∀x (Square(x) → (Large(x) ∨ Small(x)))"
    },
    {
        "NL": "A person has a nationality.",
        "FOL": "∀x (Person(x) → HasNationality(x))"
    },
    {
        "NL": "An electron orbits around the nucleus of an atom.",
        "FOL": "∀x∀y (Electron(x) ∧ Nucleus(y) ∧ PartOfAtom(y) → OrbitsAround(x, y))"
    },
    {
        "NL": "In a basketball game, a player can score points by making free throws, two-point field goals, or three-point field goals.",
        "FOL": "∀x (BasketballGame(x) ∧ Player(y) → (ScoresFreeThrow(y, x) ∨ ScoresTwoPointFieldGoal(y, x) ∨ ScoresThreePointFieldGoal(y, x)))"
    },
    {
        "NL": "Vegetarians consume plant-based foods, while non-vegetarians consume animal-based foods.",
        "FOL": "∀x ∀y (Vegetarian(x) ∧ PlantBasedFood(y) → Consumes(x, y)) ∧ ∀z ∀w (NonVegetarian(z) ∧ AnimalBasedFood(w) → Consumes(z, w))"
    },
    {
        "NL": "A dog has four legs, while a parrot has two legs, but a snake has no legs.",
        "FOL": "∀x (Dog(x) → HasFourLegs(x)) ∧ ∀y (Parrot(y) → HasTwoLegs(y)) ∧ ∀z (Snake(z) → ¬HasLegs(z))"
    },
    {
        "NL": "Dolphins communicate using echolocation, while parrots mimic sounds.",
        "FOL": "∀x ∀y (Dolphin(x) ∧ Parrot(y) → (Communicate(x, Echolocation) ∧ MimicSounds(y)))"
    },
    {
        "NL": "A person is considered a painter if they create visual art using paint on various surfaces, such as canvas or walls.",
        "FOL": "∀x (Person(x) ∧ CreatesVisualArt(x) ∧ UsesPaint(x) ∧ (OnCanvas(x) ∨ OnWalls(x)) → Painter(x))"
    },
    {
        "NL": "A scientist who primarily studies the behavior and social interactions of animals is considered an ethologist.",
        "FOL": "∀x (Scientist(x) ∧ PrimarilyStudiesAnimalBehaviorAndSocialInteractions(x) → Ethologist(x))"
    },
    {
        "NL": "A valid passport is required for international travel, with some exceptions for specific countries or regions.",
        "FOL": "∀x (InternationalTravel(x) → (RequiresValidPassport(x) ∨ CountrySpecificException(x)))"
    },
    {
        "NL": "A vibrant community organizes engaging events, promotes inclusivity, and fosters a sense of belonging among its members.",
        "FOL": "∀x (Community(x) ∧ OrganizesEngagingEvents(x) ∧ PromotesInclusivity(x) ∧ FostersSenseOfBelonging(x) → Vibrant(x))"
    },
    {
        "NL": "Tea and coffee are popular beverages that contain caffeine, but tea typically has less caffeine than coffee.",
        "FOL": "∀x ∀y (Tea(x) ∧ Coffee(y) → (PopularBeverage(x) ∧ PopularBeverage(y) ∧ ContainsCaffeine(x) ∧ ContainsCaffeine(y) ∧ LessCaffeine(x, y)))"
    },
    {
        "NL": "Every butterfly in North America isn't more colorful than all butterflies in South America.",
        "FOL": "¬∀x ∀y (Butterfly(x) ∧ In(x, northAmerica) ∧ Butterfly(y) ∧ In(y, southAmerica) → MoreColorful(x, y))"
    },
    {
        "NL": "An airline operates flights to domestic and international destinations, providing various types of seating options, like economy, business, or first-class.",
        "FOL": "∀x∀y (Airline(x) ∧ (Domestic(y) ∨ International(y)) → OperatesFlightsAndProvidesSeatingOptions(x, y))"
    },
    {
        "NL": "An airport offers transportation services through multiple airlines, such as domestic, international, and low-cost carriers, and provides amenities like shopping, dining, and lounges.",
        "FOL": "∀x (Airport(x) ∧ (DomesticAirlines(x) ∨ InternationalAirlines(x) ∨ LowCostCarriers(x)) → ProvidesAmenities(x))"
    },
    {
        "NL": "A research laboratory conducts experiments and investigations in various fields of study, such as biology, chemistry, and physics, to advance scientific knowledge.",
        "FOL": "∀x∀y∀z (ResearchLaboratory(x) ∧ (Biology(y) ∨ Chemistry(y) ∨ Physics(y)) → (ConductsExperimentsAndInvestigations(x, y) ∧ AdvancesScientificKnowledge(x, z)))"
    },
    {
        "NL": "An island is volcanic if it was formed by volcanic activity, has a volcanic cone, and shows signs of geothermal activity.",
        "FOL": "∀x (Island(x) ∧ FormedByVolcanicActivity(x) ∧ HasVolcanicCone(x) ∧ GeothermalActivity(x) → Volcanic(x))"
    },
    {
        "NL": "In a symbiotic relationship, when one organism benefits and the other is not harmed, it is called commensalism.",
        "FOL": "∀x∀y (SymbioticRelationship(x, y) ∧ Benefits(x) ∧ ¬Harmed(y) → Commensalism(x, y))"
    },
    {
        "NL": "A person is a student if they are enrolled in an educational institution and attend classes to learn.",
        "FOL": "∀x (Student(x) ↔ (Person(x) ∧ ∃y (EducationalInstitution(y) ∧ EnrolledIn(x, y) ∧ AttendsClasses(x) ∧ Learns(x))))"
    },
    {
        "NL": "A museum attracts visitors when it displays unique exhibits and hosts engaging events.",
        "FOL": "∀x (Museum(x) ∧ AttractsVisitors(x) ↔ (DisplaysUniqueExhibits(x) ∧ HostsEngagingEvents(x)))"
    },
    {
        "NL": "An electronic device that is portable, has a touchscreen interface, and is used primarily for internet browsing, communication, or media consumption is a smartphone or a tablet.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Portable(x) ∧ TouchscreenInterface(x) ∧ (UsedForInternetBrowsing(x) ∨ UsedForCommunication(x) ∨ UsedForMediaConsumption(x)) → (Smartphone(x) ∨ Tablet(x)))"
    },
    {
        "NL": "A device can be a tablet or a phone.",
        "FOL": "∀x (Device(x) → (Tablet(x) ⊕ Phone(x)))"
    },
    {
        "NL": "If a person is a chef, they must create and prepare recipes, cook dishes, and oversee kitchen operations in restaurants, hotels, or other dining establishments.",
        "FOL": "∀x (Chef(x) → (CreatesAndPreparesRecipes(x) ∧ CooksDishes(x) ∧ OverseesKitchenOperations(x) ∧ InRestaurantsHotelsOrOtherDiningEstablishments(x)))"
    },
    {
        "NL": "A material that insulates heat and resists water is suitable for outdoor clothing.",
        "FOL": "∀x (Material(x) ∧ InsulatesHeat(x) ∧ ResistsWater(x) → SuitableForOutdoorClothing(x))"
    },
    {
        "NL": "A celestial body that revolves around a planet and is smaller than a planet is a moon.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ Planet(y) ∧ RevolvesAround(x, y) ∧ SmallerThan(x, y) → Moon(x))"
    },
    {
        "NL": "Computers process data using a combination of hardware and software to perform tasks and solve problems.",
        "FOL": "∀x ∀y ∀z (Computer(x) ∧ Data(d) ∧ Hardware(h) ∧ Software(s) ∧ Task(y) ∧ Problem(z) → ProcessesAndSolves(x, d, h, s, y, z))"
    },
    {
        "NL": "Every tree is green and tall and leafy.",
        "FOL": "∀x (Tree(x) → (Green(x) ∧ Tall(x) ∧ Leafy(x)))"
    },
    {
        "NL": "A drink is either coffee or tea.",
        "FOL": "∀x (Drink(x) → (Coffee(x) ⊕ Tea(x)))"
    },
    {
        "NL": "There is a sea in which many sharks live.",
        "FOL": "∃x ∃y (Sea(x) ∧ Shark(y) ∧ LiveIn(y, x))"
    },
    {
        "NL": "An item is a round circle only if it is red.",
        "FOL": "∀x (Round(x) ∧ Circle(x) → Red(x))"
    },
    {
        "NL": "A book becomes a bestseller if it receives favorable reviews and sells a significant number of copies within a short period.",
        "FOL": "∀x (Book(x) ∧ FavorableReviews(x) ∧ SellsSignificantNumberOfCopies(x) ∧ ShortPeriod(x) → Bestseller(x))"
    },
    {
        "NL": "No engineer who designs both bridges and skyscrapers, unless they have received a prestigious engineering award, has worked on more than twenty projects or has not been employed by a construction company.",
        "FOL": "¬∃x (Engineer(x) ∧ DesignsBridges(x) ∧ DesignsSkyscrapers(x) ∨ ReceivedPrestigiousEngineeringAward(x) ∧ (WorkedOnMoreThanTwentyProjects(x) ∨ ¬EmployedByConstructionCompany(x)))"
    },
    {
        "NL": "A river that flows into a larger body of water, such as a lake or an ocean, forms a delta where it meets the larger water body.",
        "FOL": "∀x ∀y ∀z (River(x) ∧ FlowsIntoLargerWaterBody(x, y) ∧ (Lake(y) ∨ Ocean(y)) ∧ FormsDelta(x, z) → Delta(z))"
    },
    {
        "NL": "A person who designs, constructs, and tests aircraft is called an aerospace engineer.",
        "FOL": "∀x (DesignsConstructsAndTestsAircraft(x) → AerospaceEngineer(x))"
    },
    {
        "NL": "A company is profitable if it has low costs and high revenue, or if it has a strong brand and many loyal customers.",
        "FOL": "∀x (Company(x) → (Profitable(x) ↔ ((LowCosts(x) ∧ HighRevenue(x)) ∨ (StrongBrand(x) ∧ ManyLoyalCustomers(x)))))"
    },
    {
        "NL": "A dog barks on land, while a whale sings underwater.",
        "FOL": "∀x (Dog(x) → BarksOnLand(x)) ∧ ∀y (Whale(y) → singsUnderwater(y))"
    },
    {
        "NL": "A smartphone uses Windows or Ubuntu.",
        "FOL": "∀x (Smartphone(x) → (Windows(x) ∨ Ubuntu(x)))"
    },
    {
        "NL": "A painting can be either abstract or representational.",
        "FOL": "∀x (Painting(x) → Abstract(x) ⊕ Representational(x))"
    },
    {
        "NL": "No car with a motor lacks wheels.",
        "FOL": "∀y (Car(y) → (HasMotor(y) → ¬LackWheels(y)))"
    },
    {
        "NL": "A building is deemed energy-efficient if it uses insulation to reduce heat loss, employs passive solar design, and utilizes energy-saving technologies.",
        "FOL": "∀x (Building(x) ∧ UsesInsulationToReduceHeatLoss(x) ∧ EmploysPassiveSolarDesign(x) ∧ UtilizesEnergySavingTechnologies(x) → EnergyEfficient(x))"
    },
    {
        "NL": "A camera can capture an image if it has a working lens, the sensor is functioning, and it has enough power.",
        "FOL": "∀x (Camera(x) ∧ WorkingLens(x) ∧ FunctioningSensor(x) ∧ EnoughPower(x) → CanCaptureImage(x))"
    },
    {
        "NL": "Restaurants serve food and may offer alcoholic beverages.",
        "FOL": "∀x (Restaurant(x) → (ServesFood(x) ∧ (OffersAlcoholicBeverages(x) ∨ ¬OffersAlcoholicBeverages(x))))"
    },
    {
        "NL": "Some planets in the solar system have moons, while others do not.",
        "FOL": "∀x (Planet(x) ∧ (HasMoons(x) ⊕ ¬HasMoons(x)) → SolarSystem(x))"
    },
    {
        "NL": "An electronic device operates on battery power if it is not connected to a power outlet.",
        "FOL": "∀x (ElectronicDevice(x) → (OperatesOnBatteryPower(x) ↔ ¬ConnectedToPowerOutlet(x)))"
    },
    {
        "NL": "A carnivorous plant captures and consumes insects, has specialized structures to trap prey, and typically obtains nutrients from its victims.",
        "FOL": "∀x (Plant(x) ∧ Carnivorous(x) → CapturesAndConsumesInsects(x) ∧ HasSpecializedStructuresToTrapPrey(x) ∧ TypicallyObtainsNutrientsFromVictims(x))"
    },
    {
        "NL": "For a celestial body to be called a planet, it must orbit a star and be massive enough to have cleared its orbit of other debris.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsStar(x) ∧ MassiveEnoughToClearOrbit(x) → Planet(x))"
    },
    {
        "NL": "If every farmer who grows organic food attracts customers, then some farmers who do not grow organic food will also attract customers.",
        "FOL": "∀x (Farmer(x) ∧ GrowOrganicFood(x) → AttractCustomers(x)) → ∃y (Farmer(y) ∧ ¬GrowOrganicFood(y) ∧ AttractCustomers(y))"
    },
    {
        "NL": "A solar power system converts sunlight into electricity, stores the electricity in a battery, and utilizes an inverter to provide usable power for appliances.",
        "FOL": "∀x∀y∀z (SolarPowerSystem(x) ∧ Sunlight(y) ∧ Battery(z) → (ConvertsSunlightToElectricity(x, y) ∧ StoresElectricityInBattery(x, z) ∧ ProvidesUsablePowerForAppliances(x)))"
    },
    {
        "NL": "A paintbrush applies paint and can be a flat brush, a round brush, or an angled brush.",
        "FOL": "∀x (Paintbrush(x) → (AppliesPaint(x) ∧ (((FlatBrush(x) ∧ ¬RoundBrush(x)) ∨ (¬FlatBrush(x) ∧ RoundBrush(x))) ∨ ((¬FlatBrush(x) ∧ ¬RoundBrush(x)) ∧ AngledBrush(x)))))"
    },
    {
        "NL": "A hunter targets and traps animals for survival, while a recycler processes the waste of expired species.",
        "FOL": "∀x ∀y (Hunter(x) ∧ Animal(y) → TargetsForSurvival(x, y) ∧ TrapsForSurvival(x, y)) ∧ ∀z ∀w (Recycler(z) ∧ ExpiredSpecies(w) → ProcessesWasteOf(z, w))"
    },
    {
        "NL": "Birds are pets that have feathers and tweet.",
        "FOL": "∀x (Bird(x) → Pet(x) ∧ HasFeathers(x) ∧ Tweets(x))"
    },
    {
        "NL": "No film includes all famous actors.",
        "FOL": "¬∃x (Film(x) ∧ ∀y (Famous(y) ∧ Actor(y) → Includes(x,y)))"
    },
    {
        "NL": "A museum is captivating if it displays unique artifacts and offers interactive exhibits.",
        "FOL": "∀x (Museum(x) ∧ DisplaysUniqueArtifacts(x) ∧ OffersInteractiveExhibits(x) → Captivating(x))"
    },
    {
        "NL": "An element that is a gas, chemically unreactive, and has a full outer electron shell is a noble gas.",
        "FOL": "∀x (Element(x) ∧ Gas(x) ∧ ChemicallyUnreactive(x) ∧ FullOuterElectronShell(x) → NobleGas(x))"
    },
    {
        "NL": "A pencil is used for writing or drawing, while an eraser removes pencil marks.",
        "FOL": "∀x∀y (Pencil(x) → (UsedForWriting(x, y) ∨ UsedForDrawing(x, y))) ∧ ∀z∀w (Eraser(z) ∧ PencilMark(w) → Removes(z, w))"
    },
    {
        "NL": "A fruit that has a tough outer rind and a juicy, sweet interior is a member of the citrus family.",
        "FOL": "∀x (Fruit(x) ∧ HasToughOuterRind(x) ∧ HasJuicyInterior(x) ∧ HasSweetInterior(x) → CitrusFamily(x))"
    },
    {
        "NL": "A company is showcasing a dance at a gala.",
        "FOL": "∃x ∃y ∃z (Company(x) ∧ Dance(y) ∧ Gala(z) ∧ ShowcasingAt(x, y, z))"
    },
    {
        "NL": "A type of furniture with a flat surface, legs, and designed for eating meals, writing, or working is a table.",
        "FOL": "∀x∀y∀z (Furniture(x) ∧ FlatSurface(x, y) ∧ Legs(x, z) ∧ DesignedForEatingWritingOrWorking(x, y, z) → Table(x))"
    },
    {
        "NL": "A library provides access to books, digital resources, and community programs for learning and personal development.",
        "FOL": "∀x∀y∀z (Library(x) → (ProvidesAccessToBooks(x, y) ∧ ProvidesAccessToDigitalResources(x, y) ∧ ProvidesAccessToCommunityPrograms(x, z) ∧ SupportsLearningAndPersonalDevelopment(x)))"
    },
    {
        "NL": "A startup succeeds if it addresses a market need, has a dedicated team, and either secures significant funding or gains early traction with customers.",
        "FOL": "∀x (Startup(x) ∧ AddressesMarketNeed(x) ∧ DedicatedTeam(x) → (SecuresSignificantFunding(x) ∨ GainsEarlyTraction(x)) ∧ Succeeds(x))"
    },
    {
        "NL": "A student is a scholar if they have outstanding academic achievement and received a scholarship.",
        "FOL": "∀x (Student(x) ∧ HasOutstandingAcademicAchievement(x) ∧ ReceivedScholarship(x) → Scholar(x))"
    },
    {
        "NL": "An author writes fiction or non-fiction books.",
        "FOL": "∀x (Author(x) → (WritesFiction(x) ∨ WritesNonFiction(x)))"
    },
    {
        "NL": "A person can be honored for outstanding teaching, master research, or exceptional service, but not all three simultaneously.",
        "FOL": "∀y (Person(y) ∧ Honored(y) → (OutstandingTeaching(y) ⊕ MasterResearch(y) ⊕ ExceptionalService(y)))"
    },
    {
        "NL": "A planet has a certain distance from its star, a specific gravitational force, and either has life or not.",
        "FOL": "∀x (Planet(x) → (∃y DistanceFromStar(y) ∧ HasDistance(x, y) ∧ (∃z GravitationalForce(z) ∧ HasGravity(x, z)) ∧ (LifeExists(x) ∨ ¬LifeExists(x))))"
    },
    {
        "NL": "Insects have six legs, a body divided into three parts, and typically two pairs of wings.",
        "FOL": "∀x (Insect(x) → (HasLegs(x, 6) ∧ BodyDividedIntoThreeParts(x) ∧ TypicallyHasTwoPairsOfWings(x)))"
    },
    {
        "NL": "Lightning occurs when there is a discharge of electricity between the atmosphere and the ground.",
        "FOL": "∀x∀y∀z (Lightning(x) ∧ Atmosphere(y) ∧ Ground(z) → ElectricalDischarge(x, y, z))"
    },
    {
        "NL": "A beehive houses bees.",
        "FOL": "∀x ∃y (Beehive(x) ∧ Bee(y) ∧ Houses(x, y))"
    },
    {
        "NL": "A plane takes off from its base airport and lands at its target airport, making several stopovers during the flight.",
        "FOL": "∃x ∃y ∃z (Plane(x) ∧ BaseAirport(y) ∧ TargetAirport(z) → TakesOffFrom(x, y) ∧ LandsAt(x, z) ∧ ∃w (Stopover(w) ∧ MakesAt(x, w)))"
    },
    {
        "NL": "A prairie is a large, open area of grassland with few trees, often found in North America, and supports a variety of plants and animals.",
        "FOL": "∀x (Prairie(x) → (LargeOpenAreaOfGrassland(x) ∧ FewTrees(x) ∧ OftenFoundInNorthAmerica(x) ∧ SupportsVarietyOfPlantsAndAnimals(x)))"
    },
    {
        "NL": "A person who teaches students is a teacher.",
        "FOL": "∀x∀y (Person(x) ∧ Student(y) ∧ Teaches(x, y) → Teacher(x))"
    },
    {
        "NL": "A resilient energy grid that integrates renewable energy sources, advanced energy storage solutions, and smart grid technologies can ensure reliable electricity supply and reduce greenhouse gas emissions.",
        "FOL": "∀x∀y∀z (ResilientEnergyGrid(x) ∧ RenewableEnergySources(y) ∧ AdvancedEnergyStorageSolutions(z) ∧ SmartGridTechnologies(x) ∧ IntegratesElements(x, y, z) → EnsuresReliableElectricitySupply(x) ∧ ReducesGreenhouseGasEmissions(x))"
    },
    {
        "NL": "A smartphone can make calls or send messages if it has a signal, but it cannot do either if it has no signal or is in airplane mode.",
        "FOL": "∀x (Smartphone(x) → (((HasSignal(x) ∧ ¬AirplaneMode(x)) → (CanMakeCalls(x) ∨ CanSendMessages(x))) ∧ ((¬HasSignal(x) ∨ AirplaneMode(x)) → (¬CanMakeCalls(x) ∧ ¬CanSendMessages(x)))))"
    },
    {
        "NL": "A plant that grows in deserts and has thick leaves for storing water is categorized as a succulent.",
        "FOL": "∀x (Plant(x) ∧ GrowsInDeserts(x) ∧ ThickLeaves(x) ∧ StoresWater(x) → Succulent(x))"
    },
    {
        "NL": "A hospital treats patients and employs medical staff.",
        "FOL": "∀x∀y∀z (Hospital(x) → (TreatsPatients(x, y) ∧ EmploysMedicalStaff(x, z)))"
    },
    {
        "NL": "A garden has flowers, and if there are no trees, there must be bushes.",
        "FOL": "∀x (Garden(x) → (HasFlowers(x) ∧ (¬HasTrees(x) → HasBushes(x))))"
    },
    {
        "NL": "A camera captures high-quality images when it has a large sensor, a fast lens, and advanced image stabilization, but it does not impress those who seek compact designs.",
        "FOL": "∀x (Camera(x) ∧ HighQualityImages(x) ↔ (LargeSensor(x) ∧ FastLens(x) ∧ AdvancedImageStabilization(x) ∧ ¬SeeksCompactDesign(x)))"
    },
    {
        "NL": "A square has equal sides and right angles at its corners.",
        "FOL": "∀x (Square(x) → (EqualSides(x) ∧ RightAngles(x)))"
    },
    {
        "NL": "A shoe is either for running or walking, but not both, and can be made of leather or synthetic material.",
        "FOL": "∀x (Shoe(x) → (((RunningShoe(x) ∧ ¬WalkingShoe(x)) ∨ (¬RunningShoe(x) ∧ WalkingShoe(x))) ∧ (MadeOfLeather(x) ∨ MadeOfSyntheticMaterial(x))))"
    },
    {
        "NL": "A room is considered well-lit if it has both natural and artificial sources of light.",
        "FOL": "∀x (Room(x) ∧ NaturalLight(x) ∧ ArtificialLight(x) → WellLit(x))"
    },
    {
        "NL": "Every story contains romance and adventure, otherwise it is dramatic and filled with mystery.",
        "FOL": "∀x (Story(x) → (Romance(x) ∧ Adventure(x)) ⊕ (Dramatic(x) ∧ FilledWithMystery(x)))"
    },
    {
        "NL": "A novel gains critical acclaim if it features a compelling plot, well-developed characters, and thought-provoking themes.",
        "FOL": "∀x (Novel(x) ∧ CompellingPlot(x) ∧ WellDevelopedCharacters(x) ∧ ThoughtProvokingThemes(x) → CriticalAcclaim(x))"
    },
    {
        "NL": "Scientific research, when conducted ethically, supported by sufficient funding, and shared openly, can lead to advancements in knowledge and improvements in technology.",
        "FOL": "∀x ∀y ∀z (ScientificResearch(x) ∧ ConductedEthically(x) ∧ SufficientFunding(x) ∧ OpenSharing(x) → AdvancementsInKnowledgeAndImprovementsInTechnology(x, y, z))"
    },
    {
        "NL": "A film is successful if it has a high box office revenue and receives positive reviews.",
        "FOL": "∀x (Film(x) ∧ HighBoxOfficeRevenue(x) ∧ PositiveReviews(x) → Successful(x))"
    },
    {
        "NL": "People who overwork experience sleep disturbances.",
        "FOL": "∀x (Person(x) ∧ Overworks(x) → ExperienceSleepDisturbances(x))"
    },
    {
        "NL": "Some athletes excel in multiple sports.",
        "FOL": "∃x (Athlete(x) ∧ ExcelInMultipleSports(x))"
    },
    {
        "NL": "Mountain climbers use ropes and harnesses for safety while ascending peaks.",
        "FOL": "∀x∀y∀z (MountainClimber(x) ∧ Rope(y) ∧ Harness(z) → UsesForSafetyWhileAscendingPeaks(x, y, z))"
    },
    {
        "NL": "A tree absorbs carbon dioxide and releases oxygen, while a car emits carbon dioxide and consumes fuel.",
        "FOL": "∀x (Tree(x) ∧ (AbsorbsCarbonDioxide(x) ∧ ReleasesOxygen(x)) ∧ Car(x) ∧ (EmitsCarbonDioxide(x) ∧ ConsumesFuel(x)))"
    },
    {
        "NL": "A snack made from cornmeal, extruded through a machine, and then deep-fried in oil is a corn chip.",
        "FOL": "∀x (Snack(x) ∧ MadeFromCornmeal(x) ∧ ExtrudedThroughMachine(x) ∧ DeepFriedInOil(x) → CornChip(x))"
    },
    {
        "NL": "A flower is suitable for a garden if it is easy to grow and has an appealing appearance.",
        "FOL": "∀x ∀y (Flower(x) ∧ Garden(y) ∧ EasyToGrow(x) ∧ AppealingAppearance(x) → SuitableForGarden(x, y))"
    },
    {
        "NL": "Every cat is either a pet or a stray.",
        "FOL": "∀x (Cat(x) → (Pet(x) ⊕ Stray(x)))"
    },
    {
        "NL": "A kite has two pairs of adjacent sides equal in length.",
        "FOL": "∀x (Kite(x) → TwoPairsAdjacentSidesEqual(x))"
    },
    {
        "NL": "If a garden has both flowers and vegetables, it is not a monoculture.",
        "FOL": "∀x (Garden(x) ∧ HasFlowers(x) ∧ HasVegetables(x) → ¬Monoculture(x))"
    },
    {
        "NL": "A building with a green roof reduces energy consumption.",
        "FOL": "∀x (Building(x) ∧ GreenRoof(x) → ReducesEnergyConsumption(x))"
    },
    {
        "NL": "An umbrella offers protection from rain, while sunscreen offers protection from sun.",
        "FOL": "∀x ∀y (Umbrella(x) ∧ Sunscreen(y) → (ProtectionFromRain(x) ∧ ProtectionFromSun(y)))"
    },
    {
        "NL": "James drives a car if and only if it was manufactured by BMW.",
        "FOL": "∀w (Car(w) ∧ ManufacturedBy(w, bmw) → (IsLuxuryCar(w) ↔ Drives(james, w)))"
    },
    {
        "NL": "A place is considered a university if it is an institution of higher learning that offers undergraduate and postgraduate education, as well as conducts research.",
        "FOL": "∀x (University(x) ↔ (InstitutionOfHigherLearning(x) ∧ OffersUndergraduateAndPostgraduateEducation(x) ∧ ConductsResearch(x)))"
    },
    {
        "NL": "A computer is on or off, never both.",
        "FOL": "∀x (Computer(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "A device that requires an internet connection to function is not an offline device.",
        "FOL": "∀x (Device(x) ∧ RequiresInternetConnection(x) → ¬OfflineDevice(x))"
    },
    {
        "NL": "An instrument can produce sound through strings, wind, or percussion, but not a combination of these methods.",
        "FOL": "∀x (Instrument(x) → ((Strings(x) ∨ Wind(x) ∨ Percussion(x)) ∧ ¬(Strings(x) ∧ Wind(x)) ∧ ¬(Strings(x) ∧ Percussion(x)) ∧ ¬(Wind(x) ∧ Percussion(x))))"
    },
    {
        "NL": "There are chefs who like only those ingredients that are fresher than the ones they usually use.",
        "FOL": "∃x ∀y (Chef(x) ∧ Ingredient(y) ∧ FresherThan(y, x) → Like(x, y))"
    },
    {
        "NL": "Stars shine at night, whereas the sun shines during the day.",
        "FOL": "∀x (Star(x) → ShinesAtNight(x)) ∧ ∀y (Sun(y) → ShinesDuringDay(y))"
    },
    {
        "NL": "A doctor prescribes medication to a patient for treating their illness.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Medication(z) ∧ Illness(y) → PrescribesForTreatment(x, y, z))"
    },
    {
        "NL": "A game can be either single-player or multiplayer, but not both.",
        "FOL": "∀x (Game(x) → (SinglePlayer(x) ⊕ MultiPlayer(x)))"
    },
    {
        "NL": "A product is considered luxury if it is expensive and either exclusive or made from high-quality materials.",
        "FOL": "∀x (Product(x) ∧ Expensive(x) ∧ (Exclusive(x) ∨ HighQualityMaterials(x)) → Luxury(x))"
    },
    {
        "NL": "Lakes, rivers, and groundwater sources supply fresh water, which undergoes treatment to remove contaminants and impurities, ensuring safe and clean water for drinking and other uses.",
        "FOL": "∀x ∀y (FreshWaterSource(x) ∧ (Lake(y) ∨ River(y) ∨ Groundwater(y)) → (SuppliesFreshWater(x, y) ∧ UndergoesTreatmentToRemoveContaminantsAndImpurities(x) ∧ EnsuresSafeAndCleanWaterForDrinkingAndOtherUses(x)))"
    },
    {
        "NL": "An animal that consumes plants, has a long digestive tract, and possesses flat teeth is classified as a herbivore.",
        "FOL": "∀x (Animal(x) ∧ ConsumesPlants(x) ∧ HasLongDigestiveTract(x) ∧ PossessesFlatTeeth(x) → Herbivore(x))"
    },
    {
        "NL": "A planet with liquid water and a stable atmosphere has the potential to support life.",
        "FOL": "∀x (Planet(x) ∧ LiquidWater(x) ∧ StableAtmosphere(x) → PotentialToSupportLife(x))"
    },
    {
        "NL": "Not all cats are eating.",
        "FOL": "¬∀x (Cat(x) → Eating(x))"
    },
    {
        "NL": "A scientific study that follows strict protocols, produces reproducible results, and contributes to the existing body of knowledge is considered a rigorous study.",
        "FOL": "∀x (ScientificStudy(x) ∧ FollowsStrictProtocols(x) ∧ ProducesReproducibleResults(x) ∧ ContributesToExistingKnowledge(x) → RigorousStudy(x))"
    },
    {
        "NL": "A photographer captures images with a digital or film camera, and stores them on a memory card or negatives.",
        "FOL": "∀x ∀y (Photographer(x) ∧ Images(y) → (CapturesWith(x, y) ∧ (With(x, DigitalCamera) ∨ With(x, FilmCamera)) ∧ StoresOn(x) ∧ (On(x, MemoryCard) ∨ On(x, Negatives))))"
    },
    {
        "NL": "Every architect who has designed buildings with rare materials, all of which resulted in stunning aesthetics and are praised by the architect, has either received a design accolade or has been mentioned by all architecture reviewers.",
        "FOL": "∀x (Architect(x) ∧ ∃y (Material(y) ∧ DesignedBuilding(x, y) ∧ ResultedStunningAesthetics(y) ∧ PraisedBy(y, x)) → (ReceivedDesignAccolade(x) ∨ ∀z (ArchitectureReviewer(z) → Mention(z, x))))"
    },
    {
        "NL": "A bird perches on a branch.",
        "FOL": "∃x ∃y (Bird(x) ∧ Branch(y) ∧ PerchesOn(x, y))"
    },
    {
        "NL": "A structure with walls, a roof, and multiple rooms, which is primarily intended for human habitation, is a house or an apartment.",
        "FOL": "∀x (Structure(x) ∧ HasWalls(x) ∧ HasRoof(x) ∧ HasMultipleRooms(x) ∧ IntendedForHumanHabitation(x) → (House(x) ∨ Apartment(x)))"
    },
    {
        "NL": "A river flows, but a lake is still.",
        "FOL": "∀x ∀y (River(x) ∧ Lake(y) → (Flows(x) ∧ IsStill(y)))"
    },
    {
        "NL": "A computer x is connected to a network y via a router z if x sends and receives data through z, y manages communication between devices, and z belongs to y.",
        "FOL": "∀x ∀y ∀z (Computer(x) ∧ Network(y) ∧ Router(z) ∧ SendsAndReceivesData(x, z) ∧ ManagesCommunication(y) ∧ BelongsToNetwork(z, y) → ConnectedVia(x, y, z))"
    },
    {
        "NL": "A book becomes more valuable when it's a rare edition, signed by the author, and in excellent condition.",
        "FOL": "∀x (Book(x) ∧ RareEdition(x) ∧ SignedByAuthor(x) ∧ ExcellentCondition(x) → MoreValuable(x))"
    },
    {
        "NL": "A person who operates a business and manages its operations is called an entrepreneur.",
        "FOL": "∀x (OperatesBusinessAndManagesOperations(x) → Entrepreneur(x))"
    },
    {
        "NL": "It isn't the case that all horses that can gallop are tame, and none of these horses can jump.",
        "FOL": "¬∀x (Horse(x) ∧ CanGallop(x) → Tame(x)) ∧ ¬∃y (Horse(y) ∧ CanGallop(y) ∧ CanJump(y))"
    },
    {
        "NL": "Animals possessing exceptional agility often excel in hunting their prey.",
        "FOL": "∀x (Animal(x) ∧ ExceptionalAgility(x) → ExcelsInHunting(x))"
    },
    {
        "NL": "A conference can host workshops or panel discussions, but not if the event is focused on networking or if the venue has limited space.",
        "FOL": "∀x (Conference(x) ∧ ¬(FocusedOnNetworking(x) ∨ LimitedSpace(x)) → (HostsWorkshops(x) ∨ HostsPanelDiscussions(x)))"
    },
    {
        "NL": "Deserts are characterized by low precipitation and support specific types of vegetation adapted to arid conditions.",
        "FOL": "∀x (Desert(x) → (CharacterizedByLowPrecipitation(x) ∧ SupportsSpecificVegetation(x)))"
    },
    {
        "NL": "A skilled chef cooks delicious meals, presents dishes beautifully, and manages the kitchen efficiently.",
        "FOL": "∀x (Chef(x) ∧ Skilled(x) → (CooksDeliciousMeals(x) ∧ PresentsDishesBeautifully(x) ∧ ManagesKitchenEfficiently(x)))"
    },
    {
        "NL": "A celestial event involving the alignment of three celestial bodies, causing a gravitational pull, and resulting in an observable phenomenon is called a syzygy.",
        "FOL": "∀x (CelestialEvent(x) ∧ InvolvesAlignmentOfThreeCelestialBodies(x) ∧ CausesGravitationalPull(x) ∧ ResultsInObservablePhenomenon(x) → Syzygy(x))"
    },
    {
        "NL": "It's not the case that all cats that can meow are tamed, or any such cat can cook.",
        "FOL": "¬∀x (Cat(x) ∧ CanMeow(x) → Tamed(x)) ∧ ¬∃y (Cat(y) ∧ CanMeow(y) ∧ CanCook(y))"
    },
    {
        "NL": "An ecosystem thrives when it maintains biodiversity and has minimal human intervention.",
        "FOL": "∀x (Ecosystem(x) ∧ MaintainsBiodiversity(x) ∧ MinimalHumanIntervention(x) → Thrives(x))"
    },
    {
        "NL": "Some shapes are either square or circle.",
        "FOL": "∃x (Shape(x) ∧ (Square(x) ⊕ Circle(x)))"
    },
    {
        "NL": "Cats chase mice and dogs bark at cats.",
        "FOL": "∀x ∀y ∀z (Cat(x) ∧ Mouse(y) ∧ Dog(z) → (Chases(x, y) ∧ BarksAt(z, x)))"
    },
    {
        "NL": "Some shapes are not polygons, circles, or a combination of both.",
        "FOL": "∃x (Shape(x) ∧ ¬(Polygon(x) ∨ Circle(x) ∨ (Polygon(x) ∧ Circle(x))))"
    },
    {
        "NL": "Lions hunt for food, zebras graze on grass, and eagles soar in the sky.",
        "FOL": "∀x∀y∀z (Lion(x) ∧ Zebra(y) ∧ Eagle(z) → (HuntsForFood(x) ∧ GrazesOnGrass(y) ∧ SoarsInSky(z)))"
    },
    {
        "NL": "A piece of furniture that isn't for sitting may be for storage or decoration.",
        "FOL": "∀x (Furniture(x) ∧ ¬ForSitting(x) → (ForStorage(x) ∨ ForDecoration(x)))"
    },
    {
        "NL": "A beverage quenches thirst when it's cold, and it's either a soft drink or contains electrolytes.",
        "FOL": "∀x∀y∀z (Beverage(x) ∧ Cold(x, y) ∧ (SoftDrink(x) ∨ ContainsElectrolytes(x, z)) → QuenchesThirst(x))"
    },
    {
        "NL": "Photosynthesis in plants involves the absorption of sunlight by chlorophyll, the conversion of carbon dioxide and water into glucose and oxygen, and the release of oxygen into the atmosphere.",
        "FOL": "∀x∀y∀z (Plant(x) ∧ Photosynthesis(y) ∧ Chlorophyll(z) → (AbsorbsSunlight(z) ∧ ConvertsCO2AndWater(x, y) ∧ ProducesGlucoseAndOxygen(x, y) ∧ ReleasesOxygen(x, atmosphere)))"
    },
    {
        "NL": "There are caves where some bats do not roost.",
        "FOL": "∃x ∃y (Cave(x) ∧ Bat(y) ∧ ¬RoostIn(y, x))"
    },
    {
        "NL": "If a shape is a triangle, then it has three sides and three angles.",
        "FOL": "∀x (Shape(x) ∧ Triangle(x) → HasThreeSides(x) ∧ HasThreeAngles(x))"
    },
    {
        "NL": "A hammer is used for driving nails, a screwdriver is for turning screws, and a wrench tightens or loosens bolts.",
        "FOL": "∀x ∀y ∀z (Hammer(x) ∧ Screwdriver(y) ∧ Wrench(z) → (DrivesNails(x) ∧ TurnsScrews(y) ∧ (TightensBolts(z) ∨ LoosensBolts(z))))"
    },
    {
        "NL": "A medical procedure that involves the removal of tissue from a living body for examination is a biopsy.",
        "FOL": "∀x (MedicalProcedure(x) ∧ InvolvesRemovalOfTissue(x) ∧ FromLivingBody(x) ∧ ForExamination(x) → Biopsy(x))"
    },
    {
        "NL": "A universe is teeming with celestial bodies if it encompasses neutron stars, gas planets, and galaxies with special characteristics.",
        "FOL": "∀x (Universe(x) ∧ ∃y ∃z ∃w (NeutronStar(y) ∧ GasPlanet(z) ∧ Galaxy(w) ∧ SpecialCharacteristics(y, z, w) ∧ Encompasses(x, y, z, w)) → IsTeemingWithCelestialBodies(x))"
    },
    {
        "NL": "A book that combines compelling storytelling, well-developed characters, and an engaging writing style can become a bestseller.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ CompellingStorytelling(x) ∧ WellDevelopedCharacters(x) ∧ EngagingWritingStyle(x) → CanBecomeBestseller(y, z))"
    },
    {
        "NL": "Some vegetables are green, while others are not.",
        "FOL": "∀x (Vegetable(x) → (Green(x) ∨ ¬Green(x)))"
    },
    {
        "NL": "A person who works on a farm and cultivates crops is called a farmer.",
        "FOL": "∀x (WorksOnFarmAndCultivatesCrops(x) → Farmer(x))"
    },
    {
        "NL": "A university is prestigious if it has a high graduation rate and is known for its research output.",
        "FOL": "∀x (University(x) ∧ Prestigious(x) ↔ (HighGraduationRate(x) ∧ KnownForResearchOutput(x)))"
    },
    {
        "NL": "Anything orange is round unless it is small.",
        "FOL": "∀x (Orange(x) → (¬Small(x) → Round(x)))"
    },
    {
        "NL": "A balanced diet promotes better health, reducing the risk of disease and increasing productivity.",
        "FOL": "∀x (BalancedDiet(x) → (PromotesBetterHealth(x) ∧ ReducesRiskOfDisease(x) ∧ IncreasesProductivity(x)))"
    },
    {
        "NL": "A train operates on tracks, while a bus operates on roads.",
        "FOL": "∀x∀y (Train(x) ∧ Tracks(y) → OperatesOn(x, y)) ⊕ ∀z∀w (Bus(z) ∧ Roads(w) → OperatesOn(z, w))"
    },
    {
        "NL": "A place where athletes compete in various sporting events is a sports arena.",
        "FOL": "∀x (Place(x) ∧ HostsAthleticCompetition(x) ∧ InvolvesSportEvents(x) → SportsArena(x))"
    },
    {
        "NL": "A car that uses radar and cameras to sense its surroundings and make driving decisions is equipped with an advanced driver assistance system, which can help improve road safety.",
        "FOL": "∀x (Car(x) ∧ UsesRadar(x) ∧ UsesCameras(x) → (AdvancedDriverAssistanceSystem(x) ∧ ImprovesRoadSafety(x)))"
    },
    {
        "NL": "All birds do not fly only if they are penguins.",
        "FOL": "¬∀x (Bird(x) ∧ Fly(x) ↔ Penguin(x))"
    },
    {
        "NL": "A cake is sweet and is made from flour.",
        "FOL": "∀x (Cake(x) → (IsSweet(x) ∧ MadeFromFlour(x)))"
    },
    {
        "NL": "A student who excels in math and science may pursue a career in engineering.",
        "FOL": "∀x (Student(x) ∧ ExcelsInMath(x) ∧ ExcelsInScience(x) → MayPursueCareerInEngineering(x))"
    },
    {
        "NL": "Mechanics fix cars, and electricians assist them.",
        "FOL": "∀x ∀y ∀z (Mechanic(x) ∧ Car(y) ∧ Electrician(z) → Fixes(x, y) ∧ Assists(z, x))"
    },
    {
        "NL": "A store can sell clothing or electronics, and it can operate online or have a physical location, leading to different business models.",
        "FOL": "∀x (Store(x) → ((Clothing(x) ∨ Electronics(x)) ∧ (Online(x) ∨ PhysicalLocation(x))))"
    },
    {
        "NL": "An entity is diamond-shaped only if it is handled by a trained person.",
        "FOL": "∀x (Diamond(x) ↔ ∃y (Trained(y) ∧ HandledBy(x, y)))"
    },
    {
        "NL": "An electronic device can be charged wirelessly if it is compatible with a wireless charging standard and has a built-in receiver.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CompatibleWithWirelessChargingStandard(x) ∧ HasBuiltInReceiver(x) → CanBeChargedWirelessly(x))"
    },
    {
        "NL": "A person who studies the earth's surface, its composition, structure, and the processes that shape it is a geologist.",
        "FOL": "∀x (Person(x) ∧ StudiesEarthsSurface(x) ∧ StudiesComposition(x) ∧ StudiesStructure(x) ∧ StudiesShapingProcesses(x) → Geologist(x))"
    },
    {
        "NL": "If one integer is smaller than another, then there is an integer between them.",
        "FOL": "∀x ∀y ∃z (Integer(x) ∧ Integer(y) ∧ Integer(z) ∧ SmallerThan(x, y) → Between(z, x, y))"
    },
    {
        "NL": "A refrigerator preserves food by maintaining a low temperature, slowing down bacterial growth and delaying spoilage.",
        "FOL": "∀x (Refrigerator(x) → (PreservesFood(x) ∧ MaintainsLowTemperature(x) ∧ SlowsBacterialGrowth(x) ∧ DelaysSpoilage(x)))"
    },
    {
        "NL": "A reliable public transportation system offers punctual service, has clean and well-maintained vehicles, and covers a comprehensive network of routes.",
        "FOL": "∀x (PublicTransportationSystem(x) ∧ PunctualService(x) ∧ CleanAndWellMaintainedVehicles(x) ∧ ComprehensiveNetworkOfRoutes(x) → Reliable(x))"
    },
    {
        "NL": "All cats purr, if there exists a rabbit that every dog chases.",
        "FOL": "¬∃x (Rabbit(x) ∧ ∀y (Dog(y) → Chases(y, x))) → ∀z (Cat(z) → Purr(z))"
    },
    {
        "NL": "Each gaming console connects to the server and supports online gaming and live streaming.",
        "FOL": "∀x (GamingConsole(x) → (ConnectsToServer(x) ∧ SupportsOnlineGaming(x) ∧ SupportsLiveStreaming(x)))"
    },
    {
        "NL": "A country with a high literacy rate tends to have a more educated population.",
        "FOL": "∀x (HighLiteracyRate(x) → MoreEducatedPopulation(x))"
    },
    {
        "NL": "A food item that is a fruit and not sweet can be a tomato or an avocado.",
        "FOL": "∀x (FoodItem(x) ∧ Fruit(x) ∧ ¬Sweet(x) → Tomato(x) ∨ Avocado(x))"
    },
    {
        "NL": "A door can be unlocked with a key if the key matches the lock's pattern and is turned correctly.",
        "FOL": "∀x∀y (Door(x) ∧ Key(y) → (Unlocks(y, x) ↔ (MatchesPattern(y, x) ∧ TurnedCorrectly(y))))"
    },
    {
        "NL": "Alligators and crocodiles are reptiles that live in freshwater habitats.",
        "FOL": "∀x (Reptile(x) ∧ (Alligator(x) ∨ Crocodile(x)) → LivesInFreshwaterHabitat(x))"
    },
    {
        "NL": "It isn't possible for any circle to touch all big triangles.",
        "FOL": "¬∃x (Circle(x) ∧ ∀y (Big(y) ∧ Triangle(y) → Touches(x, y)))"
    },
    {
        "NL": "An animal is considered a mammal if it has hair or fur and gives birth to live young.",
        "FOL": "∀x (Animal(x) ∧ HasHairOrFur(x) ∧ GivesBirthToLiveYoung(x) → Mammal(x))"
    },
    {
        "NL": "Some animals are domestic, while others are wild.",
        "FOL": "∀x (Animal(x) → Domestic(x) ⊕ Wild(x))"
    },
    {
        "NL": "A star with a mass greater than 1.4 times the mass of the Sun will eventually become a black hole or a neutron star.",
        "FOL": "∀x (Star(x) ∧ MassGreaterThanSun(x, 1.4) → (BecomesBlackHole(x) ∨ BecomesNeutronStar(x)))"
    },
    {
        "NL": "It is not the case that there exists a cube that encapsulates all red rectangles.",
        "FOL": "¬∃x (Cube(x) ∧ ∀y (Red(y) ∧ Rectangle(y) → Encapsulates(x, y)))"
    },
    {
        "NL": "Professors teach students, and teaching assistants support them.",
        "FOL": "∀x ∀y ∀z (Professor(x) ∧ Student(y) ∧ TeachingAssistant(z) → Teaches(x, y) ∧ Supports(z, y))"
    },
    {
        "NL": "No painting is a modern art or an old sculpture.",
        "FOL": "¬∃x ((Modern(x) ∧ Art(x)) ∨ (Old(x) ∧ Sculpture(x)))"
    },
    {
        "NL": "A museum displays art or historical artifacts, while a library stores books and other materials.",
        "FOL": "∀x∀y (Museum(x) ∧ Library(y) → ((DisplaysArt(x) ∨ DisplaysHistoricalArtifacts(x)) ∧ (StoresBooks(y) ∧ StoresOtherMaterials(y))))"
    },
    {
        "NL": "An athlete wins a race by reaching the finish line before all other competitors.",
        "FOL": "∀x∀y∀z (Athlete(x) ∧ Race(y) ∧ Competitor(z) → (Wins(x, y) ↔ (ReachesFinishLine(x) ∧ ¬ReachesFinishLineBefore(z, x))))"
    },
    {
        "NL": "Musicians find success by composing original songs, connecting with fans, and performing live shows.",
        "FOL": "∀x (Musician(x) ∧ ComposeOriginalSongs(x) ∧ ConnectWithFans(x) ∧ PerformLiveShows(x) → Successful(x))"
    },
    {
        "NL": "A cyclist starts at the beginning of a trail and arrives at the end, taking breaks at various spots along the way.",
        "FOL": "∃x ∃y ∃z (Cyclist(x) ∧ BeginningOfTrail(y) ∧ EndOfTrail(z) → StartsAt(x, y) ∧ ArrivesAt(x, z) ∧ ∃w (Spot(w) ∧ TakesBreakAt(x, w)))"
    },
    {
        "NL": "A bakery sells fresh bread if it bakes daily and uses quality ingredients.",
        "FOL": "∀x (Bakery(x) → (SellsFreshBread(x) ↔ (BakesDaily(x) ∧ QualityIngredients(x))))"
    },
    {
        "NL": "If an object is a laptop, it must be a portable personal computer with a clamshell form factor, combining a display and a keyboard.",
        "FOL": "∀x ((PortablePersonalComputer(x) ∧ ClamshellFormFactor(x) ∧ CombinesDisplayAndKeyboard(x)) → Laptop(x))"
    },
    {
        "NL": "Only the faithful can enter the kingdom.",
        "FOL": "∀x (¬Faithful(x) → ¬EnterKingdom(x))"
    },
    {
        "NL": "Married couples share the same last name or live together.",
        "FOL": "∀x ∀y (MarriedCouple(x, y) → (SharesLastName(x, y) ∨ LivesTogether(x, y)))"
    },
    {
        "NL": "There are authors who are neither biased nor unskilled.",
        "FOL": "∃x (Author(x) ∧ ¬(Biased(x) ∨ Unskilled(x)))"
    },
    {
        "NL": "A person becomes dehydrated if they don't consume enough water and lose more fluids than they take in.",
        "FOL": "∀x (Person(x) ∧ NotConsumingEnoughWater(x) ∧ LosesMoreFluidsThanIntake(x) → Dehydrated(x))"
    },
    {
        "NL": "Teachers educate students.",
        "FOL": "∀x∀y (Teacher(x) ∧ Student(y) → Educates(x, y))"
    },
    {
        "NL": "A seed germinates and develops into a plant when provided with the necessary warmth, moisture, and nutrients.",
        "FOL": "∀x ∀y ∀z (Seed(x) ∧ Plant(y) ∧ (Warmth(z) ∧ Moisture(z) ∧ Nutrients(z)) ∧ ProvidedWith(x, z) → GerminatesAndDevelopsInto(x, y))"
    },
    {
        "NL": "Athletes compete in individual or team sports, but not both.",
        "FOL": "∀x∀y∀z (Athlete(x) ∧ IndividualSport(y) ∧ TeamSport(z) → (CompetesIn(x, y) ⊕ CompetesIn(x, z)))"
    },
    {
        "NL": "A student can solve a math problem if they have a good understanding of the concepts and a calculator, but if the problem is too complex, they might struggle.",
        "FOL": "∀x∀y (Student(x) ∧ MathProblem(y) → (Solve(x, y) ↔ (GoodUnderstanding(x) ∧ HasCalculator(x) ∧ ¬TooComplex(y))))"
    },
    {
        "NL": "Reading can be done with a book or an e-reader, but not both simultaneously.",
        "FOL": "∀x (Reading(x) → (UsesBook(x) ⊕ UsesEReader(x)))"
    },
    {
        "NL": "A musical instrument produces sound and can be played by striking, plucking, or blowing.",
        "FOL": "∀x (MusicalInstrument(x) → (ProducesSound(x) ∧ (PlayedByStriking(x) ∨ PlayedByPlucking(x) ∨ PlayedByBlowing(x))))"
    },
    {
        "NL": "A film can win the Best Picture award only if it is nominated.",
        "FOL": "∀x (Film(x) ∧ WinsBestPicture(x) → Nominated(x))"
    },
    {
        "NL": "If a person is a dentist, they must diagnose, treat, and prevent oral health issues, often working in a dental clinic or private practice and providing services such as cleanings, fillings, and extractions.",
        "FOL": "∀x (Dentist(x) → (DiagnosesTreatsAndPreventsOralHealthIssues(x) ∧ WorksInDentalClinicOrPrivatePractice(x) ∧ ProvidesServicesLikeCleaningsFillingsAndExtractions(x)))"
    },
    {
        "NL": "A teacher educates multiple students, assigns them homework, and evaluates their performance.",
        "FOL": "∀x ∃y (Teacher(x) → Student(y) ∧ Educates(x, y) ∧ AssignsHomework(x, y) ∧ EvaluatesPerformance(x, y))"
    },
    {
        "NL": "A musical instrument that produces sound through vibrating strings and is played by plucking or bowing is classified as a string instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundThroughVibratingStrings(x) ∧ PlayedByPluckingOrBowing(x) → StringInstrument(x))"
    },
    {
        "NL": "A car powered by electricity is an electric car.",
        "FOL": "∀x (Car(x) ∧ PoweredByElectricity(x) → ElectricCar(x))"
    },
    {
        "NL": "A fruit is ripe when it has a sweet taste and is not green in color.",
        "FOL": "∀x (Fruit(x) ∧ SweetTaste(x) ∧ ¬GreenColor(x) → Ripe(x))"
    },
    {
        "NL": "Maria is a doctor or a nurse.",
        "FOL": "Doctor(maria) ∨ Nurse(maria)"
    },
    {
        "NL": "A mode of transportation that is a bicycle is powered by human effort, has two wheels, and can be used on roads or bike paths.",
        "FOL": "∀x (ModeOfTransportation(x) ∧ Bicycle(x) → PoweredByHumanEffort(x) ∧ HasTwoWheels(x) ∧ CanBeUsedOnRoadsOrBikePaths(x))"
    },
    {
        "NL": "Nobody at the beach can hear either birds or waves.",
        "FOL": "∀x (Person(x) ∧ AtBeach(x) → ¬(Hear(x, birds) ∨ Hear(x, waves)))"
    },
    {
        "NL": "During daytime, the park is open, while at night, it is closed.",
        "FOL": "∀x (Daytime(x) → ParkIsOpen(x)) ∧ ∀y (Night(y) → ParkIsClosed(y))"
    },
    {
        "NL": "If a person is a dentist, they must diagnose and treat oral health issues, as well as perform preventative dental care.",
        "FOL": "∀x (Dentist(x) → (DiagnosesAndTreatsOralHealthIssues(x) ∧ PerformsPreventativeDentalCare(x)))"
    },
    {
        "NL": "In a healthy ecosystem, predator and prey populations remain balanced.",
        "FOL": "∀x∀y∀z (HealthyEcosystem(x) ∧ Predator(y) ∧ Prey(z) → BalancedPopulation(y, z, x))"
    },
    {
        "NL": "An umbrella protects from rain, and sunglasses protect from sunlight.",
        "FOL": "∀x∀y (Umbrella(x) ∧ Sunglasses(y) → (ProtectsFromRain(x) ∧ ProtectsFromSunlight(y)))"
    },
    {
        "NL": "A vacuum cleaner removes dirt and dust from floors and carpets.",
        "FOL": "∀x (VacuumCleaner(x) → (RemovesDirt(x) ∧ RemovesDust(x)))"
    },
    {
        "NL": "A building can be residential, commercial, or industrial, but not more than one category.",
        "FOL": "∀x (Building(x) → ((Residential(x) ∧ ¬(Commercial(x) ∨ Industrial(x))) ∨ (Commercial(x) ∧ ¬(Residential(x) ∨ Industrial(x))) ∨ (Industrial(x) ∧ ¬(Residential(x) ∨ Commercial(x)))))"
    },
    {
        "NL": "A bakery produces bread, pastries, and cakes using ingredients like flour, sugar, and butter.",
        "FOL": "∀x∀y (Bakery(x) ∧ (Bread(y) ∨ Pastry(y) ∨ Cake(y)) → (Produces(x, y) ∧ UsesIngredients(x, flour, sugar, butter)))"
    },
    {
        "NL": "A volcano becomes active when magma rises to the surface, causing eruptions or other volcanic activity.",
        "FOL": "∀x (Volcano(x) ∧ MagmaRisesToSurface(x) ∧ (CausesEruptions(x) ∨ OtherVolcanicActivity(x)) → Active(x))"
    },
    {
        "NL": "A contagious disease can spread from one individual to another through direct contact, respiratory droplets, or contaminated surfaces.",
        "FOL": "∀x (ContagiousDisease(x) → Spreads(x, DirectContact) ∨ Spreads(x, RespiratoryDroplets) ∨ Spreads(x, ContaminatedSurfaces))"
    },
    {
        "NL": "A reliable car provides efficient fuel consumption, requires minimal maintenance, and offers a comfortable ride to its passengers.",
        "FOL": "∀x∀y (Car(x) ∧ Passenger(y, x) ∧ EfficientFuelConsumption(x) ∧ MinimalMaintenance(x) ∧ ComfortableRide(x, y) → Reliable(x))"
    },
    {
        "NL": "Entity will be signified as a programmer if it can write codes.",
        "FOL": "∀v (Entity(v) ∧ WriteCodes(v) → Programmer(v))"
    },
    {
        "NL": "A house is composed of rooms, such as bedrooms, bathrooms, and a kitchen.",
        "FOL": "∀x (House(x) → (HasBedrooms(x) ∧ HasBathrooms(x) ∧ HasKitchen(x)))"
    },
    {
        "NL": "All dogs are pets.",
        "FOL": "∀x (Dog(x) → Pet(x))"
    },
    {
        "NL": "Parents must attend a meeting if their child is struggling academically or has behavioral issues.",
        "FOL": "∀x∀y (Parent(x) ∧ Child(y) ∧ (StrugglingAcademically(y) ∨ BehavioralIssues(y)) → MustAttendMeeting(x))"
    },
    {
        "NL": "If a person is a musician, they either play an instrument or sing.",
        "FOL": "∀x (Person(x) ∧ Musician(x) → PlaysInstrument(x) ⊕ Sings(x))"
    },
    {
        "NL": "A student can either focus on science or arts, but not on both fields.",
        "FOL": "∀x (Student(x) → (FocusOnScience(x) ⊕ FocusOnArts(x)))"
    },
    {
        "NL": "Ahmet is a human.",
        "FOL": "Human(ahmet)"
    },
    {
        "NL": "A policy x benefits sector y if x is implemented and has a positive impact on the growth and development of y.",
        "FOL": "∀x ∀y (Policy(x) ∧ Sector(y) ∧ Implemented(x) ∧ PositiveImpact(x, y) → Benefits(x, y))"
    },
    {
        "NL": "Mammals give birth to live young, while oviparous animals lay eggs.",
        "FOL": "∀x ((Mammal(x) → LiveBirth(x)) ∧ (Oviparous(x) → LaysEggs(x)))"
    },
    {
        "NL": "A communication technology that uses radio waves allows wireless data transfer, supports various devices, and has a specific range.",
        "FOL": "∀x (CommunicationTechnology(x) ∧ UsesRadioWaves(x) → AllowsWirelessDataTransfer(x) ∧ SupportsVariousDevices(x) ∧ HasSpecificRange(x))"
    },
    {
        "NL": "An art exhibition showcases diverse artwork if it features paintings, sculptures, and photography from various artists and time periods.",
        "FOL": "∀x ∀y ∀z (ArtExhibition(x) ∧ Painting(y) ∧ Sculpture(z) ∧ Features(x, y) ∧ Features(x, z) ∧ VariousArtistsAndTimePeriods(x) → ShowcasesDiverseArtwork(x, y, z))"
    },
    {
        "NL": "A student excels academically if they maintain good grades and participate in relevant research projects.",
        "FOL": "∀x (Student(x) ∧ GoodGrades(x) ∧ ResearchProjects(x) → AcademicExcellence(x))"
    },
    {
        "NL": "If a movie is a comedy, then it has humorous content and is intended to make the audience laugh.",
        "FOL": "∀x (Movie(x) ∧ Comedy(x) → (HumorousContent(x) ∧ IntendedToMakeAudienceLaugh(x)))"
    },
    {
        "NL": "A park is a favorite spot for picnics if it has clean facilities, ample shade, and picturesque views.",
        "FOL": "∀x (Park(x) → (FavoritePicnicSpot(x) ↔ (CleanFacilities(x) ∧ AmpleShade(x) ∧ PicturesqueViews(x))))"
    },
    {
        "NL": "Musicians who play wind instruments need strong lungs, while those who play string instruments require dexterity in their fingers.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ (WindInstrument(y) ∧ Plays(x, y) → StrongLungs(x)) ∧ (StringInstrument(z) ∧ Plays(x, z) → FingerDexterity(x)))"
    },
    {
        "NL": "Every person is mortal.",
        "FOL": "∀x (Person(x) → Mortal(x))"
    },
    {
        "NL": "Hikers hike in mountains, while swimmers swim in pools or seas.",
        "FOL": "∀x ∀y ∀z (Hiker(x) ∧ Mountain(y) → HikesIn(x, y)) ∧ (Swimmer(x) ∧ (Pool(z) ∨ Sea(z)) → SwimsIn(x, z))"
    },
    {
        "NL": "A fruit is either sweet or sour.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ∨ Sour(x)))"
    },
    {
        "NL": "A car requires maintenance when it has worn-out tires, an expired oil change, or a malfunctioning engine.",
        "FOL": "∀x (Car(x) ∧ (WornOutTires(x) ∨ ExpiredOilChange(x) ∨ MalfunctioningEngine(x)) → RequiresMaintenance(x))"
    },
    {
        "NL": "A prism can separate white light into a spectrum of colors by bending the light at different angles.",
        "FOL": "∀x (Prism(x) → SeparatesWhiteLightIntoSpectrum(x, DifferentAngles))"
    },
    {
        "NL": "If every engineer who will receive a bonus is a senior engineer, then some technicians will not receive a bonus.",
        "FOL": "∀x (Engineer(x) ∧ Bonus(x) → SeniorEngineer(x)) → ∃y (Technician(y) ∧ ¬Bonus(y))"
    },
    {
        "NL": "A job is fulfilling if it's not repetitive, provides growth opportunities, and either pays well or allows for work-life balance.",
        "FOL": "∀x (Job(x) → (Fulfilling(x) ↔ (¬Repetitive(x) ∧ GrowthOpportunities(x) ∧ (PaysWell(x) ∨ WorkLifeBalance(x)))))"
    },
    {
        "NL": "A tree absorbs carbon dioxide and water through its leaves, using sunlight to produce glucose and oxygen via photosynthesis.",
        "FOL": "∀x ∀y (Tree(x) ∧ Sunlight(y) → AbsorbsCO2AndWater(x) ∧ ProducesGlucoseAndOxygen(x, y))"
    },
    {
        "NL": "No learner who respects every teacher is esteemed by anyone.",
        "FOL": "∀x (Learner(x) → ∀y ((Teacher(y) → Respect(x, y)) → ¬∃z (Person(z) ∧ Esteem(z, x))))"
    },
    {
        "NL": "An electronic device that captures and records visual images in the form of photographs is a digital camera.",
        "FOL": "∀x (ElectronicDevice(x) ∧ CapturesVisualImages(x) ∧ RecordsPhotographs(x) → DigitalCamera(x))"
    },
    {
        "NL": "In a leap year, the month of February has 29 days, otherwise, it has 28 days.",
        "FOL": "∀x ∀y (Year(x) ∧ Month(y) → (LeapYear(x) ∧ February(y) → DaysInMonth(y, 29)) ∧ (¬LeapYear(x) ∧ February(y) → DaysInMonth(y, 28)))"
    },
    {
        "NL": "A company is successful if it generates profit, has a positive reputation, and maintains employee satisfaction.",
        "FOL": "∀x (Company(x) → (Successful(x) ↔ (GeneratesProfit(x) ∧ PositiveReputation(x) ∧ EmployeeSatisfaction(x))))"
    },
    {
        "NL": "There are unknown species in the Amazon rainforest.",
        "FOL": "∃y (Species(y) ∧ InAmazonRainforest(y) ∧ ¬Known(y))"
    },
    {
        "NL": "All media players attach to the internet and allow streaming and downloading content.",
        "FOL": "∀x (MediaPlayer(x) → (AttachesToInternet(x) ∧ AllowsStreaming(x) ∧ AllowsDownloading(x)))"
    },
    {
        "NL": "A hurricane forms over warm ocean waters and gains strength, causing damage to coastal areas and potentially disrupting transportation systems.",
        "FOL": "∀x∀y∀z (Hurricane(x) ∧ FormsOverWarmOceanWaters(x) ∧ GainsStrength(x) → (CausesDamageToCoastalAreas(x, y) ∧ PotentiallyDisruptsTransportationSystems(x, z)))"
    },
    {
        "NL": "A resilient ecosystem can recover from disturbances, supports a diverse range of species, and maintains a balance between producers and consumers.",
        "FOL": "∀x (Ecosystem(x) ∧ RecoversFromDisturbances(x) ∧ SupportsDiverseRangeOfSpecies(x) ∧ MaintainsBalanceBetweenProducersAndConsumers(x) → Resilient(x))"
    },
    {
        "NL": "A building that primarily serves as a place for worship and spiritual gatherings is a religious building.",
        "FOL": "∀x (Building(x) ∧ ServesAsPlaceForWorship(x) ∧ ServesForSpiritualGatherings(x) → ReligiousBuilding(x))"
    },
    {
        "NL": "A well-functioning public transportation system reduces traffic congestion, lowers greenhouse gas emissions, and supports economic growth by providing affordable mobility options.",
        "FOL": "∀x∀y (PublicTransportationSystem(x) ∧ WellFunctioning(x) ∧ ReducesTrafficCongestion(x, y) ∧ LowersGreenhouseGasEmissions(x, y) → SupportsEconomicGrowth(x))"
    },
    {
        "NL": "Fossils form when plants or animals are buried under layers of sediment.",
        "FOL": "∀x ∀y (Fossil(x) ∧ (Plant(y) ∨ Animal(y)) → BuriedUnderSediment(x, y))"
    },
    {
        "NL": "A vaccine provides immunity when it elicits a strong immune response, has a safe formulation, and is administered correctly.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ ElicitsStrongImmuneResponse(x, y) ∧ SafeFormulation(x) ∧ AdministeredCorrectly(x) → ProvidesImmunity(x))"
    },
    {
        "NL": "A river flows from its source, has tributaries, and eventually empties into a larger body of water like a lake, sea, or ocean, providing resources like water, food, and transportation.",
        "FOL": "∀x (River(x) → (FlowsFromSource(x) ∧ HasTributaries(x) ∧ EmptiesIntoLargerBodyOfWater(x) ∧ (ProvidesWaterResource(x) ∨ ProvidesFoodResource(x) ∨ ProvidesTransportationResource(x))))"
    },
    {
        "NL": "A refrigerator keeps food cold, and an oven heats food.",
        "FOL": "∀x∀y (Refrigerator(x) ∧ Oven(y) → (KeepsFoodCold(x) ∧ HeatsFood(y)))"
    },
    {
        "NL": "A bicycle remains stationary unless someone is pedaling or it is on a slope.",
        "FOL": "∀x (Bicycle(x) ∧ ¬(SomeonePedaling(x) ∨ OnSlope(x)) → Stationary(x))"
    },
    {
        "NL": "Mountains often have snow at their peaks, while valleys have rivers running through them.",
        "FOL": "∀x∀y (Mountain(x) ∧ Valley(y) → (SnowAtPeak(x) ∧ RiverRunsThrough(y)))"
    },
    {
        "NL": "A ship sails from its initial port and docks at the final port, avoiding all layover ports.",
        "FOL": "∃x ∃y ∃z (Ship(x) ∧ InitialPort(y) ∧ FinalPort(z) → SailsFrom(x, y) ∧ DocksAt(x, z) ∧ ¬∃w (Port(w) ∧ LayoversAt(x, w)))"
    },
    {
        "NL": "Eating too much sugar can lead to obesity or diabetes, but not always both.",
        "FOL": "∀x ∀y ∀z (EatsTooMuchSugar(x) ∧ Obesity(y) ∧ Diabetes(z) → (LeadsTo(x, y) ∨ LeadsTo(x, z)) ∧ ¬(LeadsTo(x, y) ∧ LeadsTo(x, z)))"
    },
    {
        "NL": "No book is orange.",
        "FOL": "¬∃x (Book(x) ∧ Orange(x))"
    },
    {
        "NL": "A body of water that is large, surrounded by land, and contains fresh water is either a lake or a reservoir.",
        "FOL": "∀x (BodyOfWater(x) ∧ Large(x) ∧ SurroundedByLand(x) ∧ ContainsFreshWater(x) → (Lake(x) ∨ Reservoir(x)))"
    },
    {
        "NL": "A person who exercises regularly and maintains a healthy diet is more likely to have a lower risk of chronic diseases.",
        "FOL": "∀x (Person(x) ∧ ExercisesRegularly(x) ∧ MaintainsHealthyDiet(x) → LowerRiskOfChronicDiseases(x))"
    },
    {
        "NL": "Students studying physics need to understand the laws of motion.",
        "FOL": "∀x (Student(x) ∧ Studies(x, Physics) → UnderstandsLawsOfMotion(x))"
    },
    {
        "NL": "All dogs have fur and four legs.",
        "FOL": "∀x (Dog(x) → (HasFur(x) ∧ HasFourLegs(x)))"
    },
    {
        "NL": "An animal is considered a bird if it is a warm-blooded vertebrate with feathers, a beak, and usually capable of flight.",
        "FOL": "∀x (Animal(x) ∧ WarmBloodedVertebrate(x) ∧ HasFeathers(x) ∧ HasBeak(x) ∧ UsuallyCapableOfFlight(x) → Bird(x))"
    },
    {
        "NL": "A movie is a comedy if it contains humorous elements and is intended to make the audience laugh, or it is a parody of another genre.",
        "FOL": "∀x (Comedy(x) ↔ (Movie(x) ∧ (ContainsHumor(x) ∧ IntendedToMakeAudienceLaugh(x) ∨ ParodyOfAnotherGenre(x))))"
    },
    {
        "NL": "A rocket achieves orbit when it has sufficient thrust and an optimal trajectory.",
        "FOL": "∀x∀y∀z (Rocket(x) ∧ Thrust(y) ∧ Trajectory(z) ∧ Sufficient(y) ∧ Optimal(z) → AchievesOrbit(x))"
    },
    {
        "NL": "Every book is interesting if it is insightful.",
        "FOL": "∀x (InterestingBook(x) ↔ Insightful(x))"
    },
    {
        "NL": "Ethan, Daniel, and Carlos are chefs.",
        "FOL": "Chef(ethan) ∧ Chef(daniel) ∧ Chef(carlos)"
    },
    {
        "NL": "A student is diligent if he attend classes regularly, takes notes, and submits assignments on time.",
        "FOL": "∀x (Student(x) ∧ AttendsClassesRegularly(x) ∧ TakesNotes(x) ∧ SubmitsAssignmentsOnTime(x) → Diligent(x))"
    },
    {
        "NL": "Document guidelines are not procedures.",
        "FOL": "∀x (DocumentGuideline(x) → ¬Procedure(x))"
    },
    {
        "NL": "Countries with a strong economy and low income inequality tend to have higher levels of overall happiness and social well-being.",
        "FOL": "∀x (Country(x) ∧ StrongEconomy(x) ∧ LowIncomeInequality(x) → HigherOverallHappiness(x) ∧ HigherSocialWellBeing(x))"
    },
    {
        "NL": "A software is user-friendly if it provides an intuitive interface and helpful tutorials.",
        "FOL": "∀x (Software(x) ∧ ProvidesIntuitiveInterface(x) ∧ HelpfulTutorials(x) → UserFriendly(x))"
    },
    {
        "NL": "A chef is talented if they invent more recipes than another chef.",
        "FOL": "∀x ∀y (Chef(x) ∧ Chef(y) ∧ InventsMoreRecipes(x, y) → Talented(x))"
    },
    {
        "NL": "A novel is an biography if it narrates the life events of a particular person, penned down by an author",
        "FOL": "∀x ∃y ∃z (Novel(x) ∧ Person(y) ∧ Author(z) ∧ NarratesLifeEvents(x, y) ∧ PennedBy(x, z) → Biography(x))"
    },
    {
        "NL": "A movie is considered a classic if it has a timeless appeal, a memorable storyline, and influential themes.",
        "FOL": "∀x (Movie(x) → ((TimelessAppeal(x) ∧ MemorableStoryline(x) ∧ InfluentialThemes(x)) → Classic(x)))"
    },
    {
        "NL": "Heavy rainfall could induce flooding, landslides, or soil erosion.",
        "FOL": "∀x (Rainfall(x) ∧ Heavy(x) → (InducesFlooding(x) ∨ InducesLandslides(x) ∨ InducesSoilErosion(x)))"
    },
    {
        "NL": "A musical instrument that is regularly tuned and cleaned produces better sound quality and has a longer lifespan.",
        "FOL": "∀x (MusicalInstrument(x) ∧ RegularlyTunedAndCleaned(x) → BetterSoundQualityAndLongerLifespan(x))"
    },
    {
        "NL": "Roses have thorns, daisies have petals, and sunflowers have seeds.",
        "FOL": "∀x (Rose(x) → HasThorns(x)) ∧ (Daisy(x) → HasPetals(x)) ∧ (Sunflower(x) → HasSeeds(x))"
    },
    {
        "NL": "A business is profitable if its revenue exceeds its expenses.",
        "FOL": "∀x (Business(x) ∧ RevenueExceedsExpenses(x) → Profitable(x))"
    },
    {
        "NL": "Bacteria reproduce by splitting into two cells, a process known as binary fission.",
        "FOL": "∀x ∀y (Bacteria(x) → (Reproduces(x, y) ∧ BinaryFission(y)))"
    },
    {
        "NL": "Everything is blue only if it is a large circle.",
        "FOL": "∀x (Blue(x) ∧ Circle(x) → Large(x))"
    },
    {
        "NL": "A plant that produces flowers, typically with vibrant colors and sweet fragrance, attracting pollinators, is a flowering plant.",
        "FOL": "∀x (Plant(x) ∧ ProducesFlowers(x) ∧ VibrantColors(x) ∧ SweetFragrance(x) ∧ AttractsPollinators(x) → FloweringPlant(x))"
    },
    {
        "NL": "An online course is effective if it has knowledgeable instructors, engaging content, and timely feedback, but not if it has technical issues.",
        "FOL": "∀x (OnlineCourse(x) ∧ ((KnowledgeableInstructors(x) ∧ EngagingContent(x) ∧ TimelyFeedback(x)) ∧ ¬TechnicalIssues(x) → Effective(x)))"
    },
    {
        "NL": "Every mathematician is analytical, but not all analytical people are mathematicians.",
        "FOL": "∀x (Mathematician(x) → Analytical(x)) ∧ ¬∀x (Analytical(x) → Mathematician(x))"
    },
    {
        "NL": "Not all humans appreciate Lucy.",
        "FOL": "¬∀x (Human(x) → Appreciate(x, lucy))"
    },
    {
        "NL": "A fruit can be sweet, sour, or both, but never neither.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ⊕ Sour(x) ∨ (Sweet(x) ∧ Sour(x))))"
    },
    {
        "NL": "An athlete needs discipline and perseverance to succeed.",
        "FOL": "∀x (Athlete(x) → (NeedsDiscipline(x) ∧ NeedsPerseverance(x)))"
    },
    {
        "NL": "A creature is a moss just in case it spreads spores or absorbs humidity, but not bleach.",
        "FOL": "∀x (Creature(x) → (Moss(x) ↔ (SpreadsSpores(x) ∨ AbsorbsHumidity(x)) ∧ ¬AbsorbsBleach(x)))"
    },
    {
        "NL": "A musical instrument that belongs to the string family produces sound through the vibration of strings and often has a wooden body.",
        "FOL": "∀x (MusicalInstrument(x) ∧ StringFamily(x) → ProducesSoundThroughVibrationOfStrings(x) ∧ OftenHasWoodenBody(x))"
    },
    {
        "NL": "A prosperous city fosters economic growth, ensures public safety, and provides access to quality education.",
        "FOL": "∀x (City(x) ∧ EconomicGrowth(x) ∧ PublicSafety(x) ∧ QualityEducationAccess(x) → Prosperous(x))"
    },
    {
        "NL": "Doctors diagnose patients with medical conditions.",
        "FOL": "∀x∀y (Doctor(x) ∧ Patient(y) → Diagnoses(x, y, z) ∧ MedicalCondition(z))"
    },
    {
        "NL": "Parents take care of their children, and children learn from their parents.",
        "FOL": "∀x ∀y (Parent(x) ∧ Child(y) → (TakesCareOf(x, y) ∧ LearnsFrom(y, x)))"
    },
    {
        "NL": "A song that is emotional can make people cry.",
        "FOL": "∀x ∀y (Song(x) ∧ Emotional(x) ∧ Person(y) → CanMakeCry(x, y))"
    },
    {
        "NL": "A battery stores electrical energy, which can be used to power electronic devices.",
        "FOL": "∀x (Battery(x) → (StoresElectricalEnergy(x) ∧ PowersElectronicDevices(x)))"
    },
    {
        "NL": "A computer is a supercomputer if it has high processing capabilities and is used for complex scientific calculations.",
        "FOL": "∀x (Supercomputer(x) → (Computer(x) ∧ HighProcessingCapabilities(x) ∧ ∃y (ComplexScientificCalculations(y) ∧ UsedFor(x, y))))"
    },
    {
        "NL": "A person who is a doctor and has a specialization in pediatrics is a pediatrician.",
        "FOL": "∀x (Doctor(x) ∧ SpecializationInPediatrics(x) → Pediatrician(x))"
    },
    {
        "NL": "A smartphone enables users to surf the internet and use applications.",
        "FOL": "∀x (Smartphone(x) → (EnablesInternetSurfing(x) ∧ EnablesUseOfApplications(x)))"
    },
    {
        "NL": "A lake is a body of water surrounded by land, created through natural processes like glacial activity, tectonic movements, or river erosion, and provides a habitat for various aquatic species.",
        "FOL": "∀x (Lake(x) → (BodyOfWater(x) ∧ SurroundedByLand(x) ∧ CreatedByNaturalProcesses(x) ∧ (GlacialActivity(x) ∨ TectonicMovements(x) ∨ RiverErosion(x)) ∧ ProvidesHabitatForAquaticSpecies(x)))"
    },
    {
        "NL": "A tree is green or brown.",
        "FOL": "∀x (Tree(x) → (Green(x) ∨ Brown(x)))"
    },
    {
        "NL": "A material x is used in the construction of a building y if x has properties that fulfill the structural, functional, and aesthetic requirements of y.",
        "FOL": "∀x ∀y (Material(x) ∧ Building(y) ∧ FulfillStructuralRequirements(x, y) ∧ FulfillFunctionalRequirements(x, y) ∧ FulfillAestheticRequirements(x, y) → UsedInConstructionOf(x, y))"
    },
    {
        "NL": "Some companies with a small number of employees have a high revenue.",
        "FOL": "∃x (Company(x) ∧ SmallNumberOfEmployees(x) ∧ HighRevenue(x))"
    },
    {
        "NL": "An arachnid that has eight legs, displaces web, and injects poison into its prey is a spider.",
        "FOL": "∀x (Arachnid(x) ∧ HasEightLegs(x) ∧ DisplacesWeb(x) ∧ InjectsPoisonIntoPrey(x) → Spider(x))"
    },
    {
        "NL": "A device is named as a heater if it raises temperature quickly.",
        "FOL": "∀x (Device(x) ∧ RaisesTemperature(x) ∧ Quickly(x) → Heater(x))"
    },
    {
        "NL": "A plant needs sunlight and water to grow.",
        "FOL": "∀x (Plant(x) → (NeedsSunlight(x) ∧ NeedsWater(x)))"
    },
    {
        "NL": "A mountain can be formed through volcanic activity, tectonic plate movements, or erosion.",
        "FOL": "∀x (Mountain(x) → (FormedByVolcanicActivity(x) ⊕ FormedByTectonicPlateMovements(x) ⊕ FormedByErosion(x)))"
    },
    {
        "NL": "Not all movies are watched but all of them are not amusing.",
        "FOL": "¬∀x (Movie(x) → Watched(x)) ∧ ∀y (Movie(y) → ¬Amusing(y))"
    },
    {
        "NL": "Some languages are both ancient and written.",
        "FOL": "∃x (Language(x) ∧ Ancient(x) ∧ Written(x))"
    },
    {
        "NL": "Every chef cooks, but not everyone who cooks is a chef.",
        "FOL": "∀x (Chef(x) → Cook(x)) ∧ ¬∀x (Cook(x) → Chef(x))"
    },
    {
        "NL": "During a storm, trees may lose branches, roofs can be damaged, and power outages can occur.",
        "FOL": "∀x∀y∀z (Storm(x) ∧ Tree(y) ∧ Roof(z) → (LosesBranches(y) ∨ DamagesRoof(z) ∨ CausesPowerOutage(x)))"
    },
    {
        "NL": "A man is reading on a bench, and a bird is flying in the sky.",
        "FOL": "∃x ∃y (Man(x) ∧ Bench(y) ∧ ReadingOn(x, y)) ∧ ∃z (Bird(z) ∧ Flying(z) ∧ InTheSky(z))"
    },
    {
        "NL": "A square has four equal sides and four right angles, while a rectangle has four right angles but not four equal sides.",
        "FOL": "∀x∀y (Shape(x) ∧ Shape(y) → ((Square(x) → (FourEqualSides(x) ∧ FourRightAngles(x))) ∧ (Rectangle(y) → (FourRightAngles(y) ∧ ¬FourEqualSides(y)))))"
    },
    {
        "NL": "In a democratic election, the candidate with the most votes wins, unless there is a tie or a legal dispute.",
        "FOL": "∀x∀y (DemocraticElection(x) ∧ Candidate(y) ∧ ¬Tie(x) ∧ ¬LegalDispute(x) ∧ MostVotes(y, x) → Wins(y, x))"
    },
    {
        "NL": "A scientist studies physics or chemistry.",
        "FOL": "∀x (Scientist(x) → StudiesPhysics(x) ∨ StudiesChemistry(x))"
    },
    {
        "NL": "Cats have retractable claws and use them for climbing, hunting, and self-defense.",
        "FOL": "∀x∀y∀z∀w (Cat(x) ∧ RetractableClaws(y) ∧ Has(x, y) → (UsesForClimbing(x, z) ∧ UsesForHunting(x, w) ∧ UsesForSelfDefense(x)))"
    },
    {
        "NL": "Each country has a flag.",
        "FOL": "∀x (Country(x) → HasFlag(x))"
    },
    {
        "NL": "A chef prepares a dish using various ingredients, following a specific recipe, and employing different cooking techniques to create a flavorful meal.",
        "FOL": "∀x∀y∀z∀w (Chef(x) ∧ Dish(y) ∧ Recipe(z) ∧ CookingTechnique(w) → (PreparesUsingIngredients(x, y) ∧ FollowsRecipe(x, z) ∧ EmploysCookingTechnique(x, w) ∧ CreatesFlavorfulMeal(x, y)))"
    },
    {
        "NL": "If an animal is an amphibian, it can live both on land and in water.",
        "FOL": "∀x (Animal(x) ∧ Amphibian(x) → (LivesOnLand(x) ∧ LivesInWater(x)))"
    },
    {
        "NL": "A computer game is multiplayer if it allows multiple players to participate and interact with each other simultaneously.",
        "FOL": "∀x (ComputerGame(x) ∧ Multiplayer(x) → (AllowsMultiplePlayers(x) ∧ SimultaneousInteraction(x)))"
    },
    {
        "NL": "A programming language can be object-oriented, functional, or procedural.",
        "FOL": "∀x (ProgrammingLanguage(x) → (ObjectOriented(x) ∨ Functional(x) ∨ Procedural(x)))"
    },
    {
        "NL": "No pet is healthy unless it has been fed properly, but not all of them are easy to train.",
        "FOL": "¬∃x (Pet(x) ∧ (Healthy(x) ∨ FedProperly(x))) ∧ ¬∀y (Pet(y) → EasyToTrain(y))"
    },
    {
        "NL": "A plant grows if it receives sunlight and has access to nutrients.",
        "FOL": "∀x (Plant(x) ∧ ReceivesSunlight(x) ∧ HasNutrients(x) → Grows(x))"
    },
    {
        "NL": "A tree bears fruit only when it is mature and the environmental conditions are suitable.",
        "FOL": "∀x (Tree(x) ∧ BearsFruit(x) → (Mature(x) ∧ SuitableEnvironment(x)))"
    },
    {
        "NL": "A building is energy-efficient if it uses solar panels, has proper insulation, and employs energy-saving appliances.",
        "FOL": "∀x (EnergyEfficient(x) ↔ (Building(x) ∧ ∃y (SolarPanels(y) ∧ Uses(x, y)) ∧ ∃z (ProperInsulation(z) ∧ Has(x, z)) ∧ ∃w (EnergySavingAppliances(w) ∧ Employs(x, w))))"
    },
    {
        "NL": "An architect designs buildings that are either residential or commercial, but not both, and occasionally creates public spaces.",
        "FOL": "∀x∀y∀z (Architect(x) ∧ Building(y) ∧ (Residential(y) ⊕ Commercial(y)) ∧ (PublicSpace(z) ∨ ¬PublicSpace(z)) → Designs(x, y, z))"
    },
    {
        "NL": "A type of bacteria can survive in specific temperature ranges and has a certain resistance to antibiotics.",
        "FOL": "∀x (Bacteria(x) → (∃y TemperatureRange(y) ∧ SurvivesIn(x, y) ∧ (∃z AntibioticResistance(z) ∧ HasResistance(x, z))))"
    },
    {
        "NL": "A system can receive input, process input, or provide output.",
        "FOL": "∀x (System(x) → ReceiveInput(x) ∨ ProcessInput(x) ∨ ProvideOutput(x))"
    },
    {
        "NL": "An animal that has scales covering its body, is cold-blooded, and reproduces by laying eggs is a reptile.",
        "FOL": "∀x ∀y ∀z (Animal(x) ∧ Scales(y) ∧ ColdBlooded(z) ∧ Has(x, y) ∧ Is(x, z) ∧ ReproducesByLayingEggs(x) → Reptile(x))"
    },
    {
        "NL": "An animal is considered endangered if its population is at risk of extinction.",
        "FOL": "∀x (Animal(x) ∧ PopulationAtRiskOfExtinction(x) → Endangered(x))"
    },
    {
        "NL": "Some books are bestsellers, but not all books are in the mystery genre or have been adapted into movies and received positive reviews.",
        "FOL": "∃x (Book(x) ∧ Bestseller(x)) ∧ ¬∀y (Book(y) → (MysteryGenre(y) ∨ (AdaptedIntoMovie(y) ∧ PositiveReviews(y))))"
    },
    {
        "NL": "A submarine can navigate underwater by adjusting its buoyancy using ballast tanks.",
        "FOL": "∀x (Submarine(x) ∧ Buoyancy(b) ∧ BallastTanks(t) → CanNavigateUnderwater(x, b, t))"
    },
    {
        "NL": "A novel becomes popular when it receives positive reviews and gains a large readership.",
        "FOL": "∀x∀y∀z (Novel(x) ∧ PositiveReviews(y) ∧ LargeReadership(z) ∧ Receives(x, y) → Popular(x))"
    },
    {
        "NL": "A place is considered a museum if it is an institution that preserves, collects, exhibits, and interprets objects of historical, cultural, or scientific importance.",
        "FOL": "∀x (Place(x) ∧ Institution(x) ∧ PreservesObjects(x) ∧ CollectsObjects(x) ∧ ExhibitsObjects(x) ∧ InterpretsObjects(x) ∧ OfHistoricalOrCulturalOrScientificImportance(x) → Museum(x))"
    },
    {
        "NL": "Something is a stripey circle, and something is a solid rectangle.",
        "FOL": "∃x (Stripey(x) ∧ Circle(x)) ∧ ∃x (Solid(x) ∧ Rectangle(x))"
    },
    {
        "NL": "A plant grows in the presence of sunlight, water, and soil.",
        "FOL": "∀x (Plant(x) ∧ Sunlight(y) ∧ Water(z) ∧ Soil(w) → GrowsInPresenceOf(x, y, z, w))"
    },
    {
        "NL": "A lake has fish.",
        "FOL": "∀x ∃y (Lake(x) ∧ Fish(y) ∧ LivesIn(y, x))"
    },
    {
        "NL": "A car is fast if and only if it overtakes at least one bike.",
        "FOL": "∀x (Fast(x) ↔ ∃y (Bike(y) ∧ Overtakes(x, y)))"
    },
    {
        "NL": "A politician is speaking at a crowded rally.",
        "FOL": "∃x ∃y (Politician(x) ∧ Speaking(x) ∧ CrowdedRally(y) ∧ At(x, y))"
    },
    {
        "NL": "An amphibian can live both in water and on land, while a marine creature lives exclusively in water, and a terrestrial creature lives exclusively on land.",
        "FOL": "∀x∀y∀z (Amphibian(x) ∧ MarineCreature(y) ∧ TerrestrialCreature(z) → (LivesInWaterAndLand(x) ⊕ (LivesExclusivelyInWater(y) ⊕ LivesExclusivelyOnLand(z))))"
    },
    {
        "NL": "A vehicle is considered eco-friendly if it uses renewable energy sources and produces low emissions.",
        "FOL": "∀x (Vehicle(x) → (EcoFriendly(x) ↔ (UsesRenewableEnergySources(x) ∧ ProducesLowEmissions(x))))"
    },
    {
        "NL": "A place is considered a museum if it is an institution that collects, preserves, studies, and exhibits objects of historical, cultural, artistic, or scientific interest.",
        "FOL": "∀x (Museum(x) ↔ (CollectsPreservesStudiesAndExhibitsObjects(x) ∧ OfHistoricalCulturalArtisticOrScientificInterest(x)))"
    },
    {
        "NL": "An ice cream shop sells cones, sundaes, and milkshakes.",
        "FOL": "∀x (IceCreamShop(x) → (SellsCones(x) ∧ SellsSundaes(x) ∧ SellsMilkshakes(x)))"
    },
    {
        "NL": "A living organism is a plant if it can produce its own food through photosynthesis.",
        "FOL": "∀x (Plant(x) ↔ (LivingOrganism(x) ∧ ProducesFoodThroughPhotosynthesis(x)))"
    },
    {
        "NL": "A cat with short hair and blue eyes is a siamese.",
        "FOL": "∀x (Cat(x) ∧ HasShortHair(x) ∧ HasBlueEyes(x) → Siamese(x))"
    },
    {
        "NL": "A renewable energy source, such as solar or wind power, can produce electricity without depleting natural resources, and it helps reduce greenhouse gas emissions.",
        "FOL": "∀x ∀y ∀z (RenewableEnergySource(x) ∧ (SolarPower(y) ∨ WindPower(y)) → (ProducesElectricityWithoutDepletingResources(x) ∧ ReducesGreenhouseGasEmissions(z)))"
    },
    {
        "NL": "Not all humans know Sarah.",
        "FOL": "¬∀x (Human(x) → Know(x, sarah))"
    },
    {
        "NL": "A comfortable living space is maintained by proper lighting, clean surroundings, and functional furniture.",
        "FOL": "∀x (LivingSpace(x) → (Comfortable(x) ↔ (ProperLighting(x) ∧ CleanSurroundings(x) ∧ FunctionalFurniture(x))))"
    },
    {
        "NL": "A software program can be regarded as efficient when it runs smoothly, consumes minimal system resources, and performs tasks quickly.",
        "FOL": "∀x (SoftwareProgram(x) ∧ RunsSmoothly(x) ∧ MinimalSystemResources(x) ∧ PerformsTasksQuickly(x) → Efficient(x))"
    },
    {
        "NL": "A sculptor creates a sculpture from materials such as stone, wood, or metal, but not from glass or plastic.",
        "FOL": "∀x ∀y (Sculptor(x) ∧ Creates(x, y) ∧ Sculpture(y) → ((MadeFrom(y, Stone) ∨ MadeFrom(y, Wood) ∨ MadeFrom(y, Metal)) ∧ ¬MadeFrom(y, Glass) ∧ ¬MadeFrom(y, Plastic)))"
    },
    {
        "NL": "A vehicle with four wheels driven by combustion of fuel is a car.",
        "FOL": "∀x (Vehicle(x) ∧ HasFourWheels(x) ∧ DrivenByCombustionOfFuel(x) → Car(x))"
    },
    {
        "NL": "An employee is a manager if they are responsible for supervising a team.",
        "FOL": "∀x (Manager(x) → (Employee(x) ∧ SupervisesTeam(x)))"
    },
    {
        "NL": "An employee is promoted if they have outstanding performance and are not on probation.",
        "FOL": "∀x (Employee(x) → (Promoted(x) ↔ (OutstandingPerformance(x) ∧ ¬OnProbation(x))))"
    },
    {
        "NL": "An object is magnetic if it can attract or repel other magnetic objects, generates a magnetic field, and aligns with Earth's magnetic field.",
        "FOL": "∀x (Object(x) ∧ AttractsOrRepelsMagneticObjects(x) ∧ GeneratesMagneticField(x) ∧ AlignsWithEarthsMagneticField(x) → Magnetic(x))"
    },
    {
        "NL": "Cats chase mice for fun, and dogs eat bones for nutrition.",
        "FOL": "∀x ∀y (Cat(x) ∧ Mouse(y) → ChasesForFun(x, y)) ∧ ∀z ∀w (Dog(z) ∧ Bone(w) → EatsForNutrition(z, w))"
    },
    {
        "NL": "A vehicle is either a car, a bicycle, or a truck.",
        "FOL": "∀x (Vehicle(x) ↔ (Car(x) ⊕ Bicycle(x) ⊕ Truck(x)))"
    },
    {
        "NL": "Students attend courses taught by professors.",
        "FOL": "∀x∀y (Student(x) ∧ Professor(y) ∧ TeachesCourse(y) → Attends(x, y))"
    },
    {
        "NL": "A car is considered fuel-efficient if it has low fuel consumption and low carbon emissions.",
        "FOL": "∀x (Car(x) ∧ LowFuelConsumption(x) ∧ LowCarbonEmissions(x) → FuelEfficient(x))"
    },
    {
        "NL": "All games that are exciting, challenging, and well-developed achieve success.",
        "FOL": "∀x (Game(x) ∧ Exciting(x) ∧ Challenging(x) ∧ WellDeveloped(x) → AchievesSuccess(x))"
    },
    {
        "NL": "Astronauts explore outer space by traveling in spacecraft.",
        "FOL": "∀x (Astronaut(x) → (∃y (OuterSpace(y) ∧ Explores(x, y) ∧ ∃z (Spacecraft(z) ∧ TravelsIn(x, z)))))"
    },
    {
        "NL": "Musical instruments are either string, wind, or percussion, and they produce sounds.",
        "FOL": "∀x (MusicalInstrument(x) → ((String(x) ⊕ Wind(x) ⊕ Percussion(x)) ∧ ProducesSound(x)))"
    },
    {
        "NL": "An object is either a tall tree or a short bush, and in either case, it is green.",
        "FOL": "∃x (((Tall(x) ∧ Tree(x)) ∨ (Short(x) ∧ Bush(x))) ∧ Green(x))"
    },
    {
        "NL": "Birds can fly and have feathers.",
        "FOL": "∀x (Bird(x) → (CanFly(x) ∧ HasFeathers(x)))"
    },
    {
        "NL": "An electronic device is portable if it is lightweight and has a compact design.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ CompactDesign(x) → Portable(x))"
    },
    {
        "NL": "An object is considered a fossil if it is the remains or impression of a prehistoric organism preserved in rock.",
        "FOL": "∀x (RemainsOrImpressionOfPrehistoricOrganismPreservedInRock(x) → Fossil(x))"
    },
    {
        "NL": "An animal is adapted to a specific environment if it has physical traits that suit the environment, can find food and shelter in that environment, and is able to reproduce successfully.",
        "FOL": "∀x ∀y ∀z (Animal(x) ∧ Environment(y) ∧ PhysicalTraits(x, z) ∧ SuitedForEnvironment(z, y) ∧ FindsFoodAndShelter(x, y) ∧ ReproducesSuccessfully(x, y) → AdaptedTo(x, y, z))"
    },
    {
        "NL": "Ferries transport passengers across water, while taxis transport passengers on land.",
        "FOL": "∀x∀y (Ferry(x) → TransportsPassengersAcrossWater(x)) ∧ (Taxi(y) → TransportsPassengersOnLand(y))"
    },
    {
        "NL": "A vehicle could be a car or a truck but not both.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Truck(x)))"
    },
    {
        "NL": "A hotel room may be cleaned or left uncleaned daily, depending on the guest's preference and the hotel policy.",
        "FOL": "∀x ∀y ∀z (HotelRoom(x) ∧ Guest(y) ∧ HotelPolicy(z) → (CleanedDaily(x) ⊕ ¬CleanedDaily(x)) ∧ (PrefersCleaned(y) ∨ PrefersUncleaned(y)) ∧ AdheresToPolicy(x, z))"
    },
    {
        "NL": "A job applicant is considered qualified if they meet the required education and experience criteria.",
        "FOL": "∀x (JobApplicant(x) → (Qualified(x) ↔ (MeetsEducationCriteria(x) ∧ MeetsExperienceCriteria(x))))"
    },
    {
        "NL": "If a student is studious and punctual, then they impress at least one strict professor, unless they are dishonest.",
        "FOL": "∀x ((Studious(x) ∧ Punctual(x)) → ∃y (Strict(y) ∧ Impresses(x, y) ∨ Dishonest(x)))"
    },
    {
        "NL": "A plant is a flower or a tree.",
        "FOL": "∀x (Plant(x) → (Flower(x) ∨ Tree(x)))"
    },
    {
        "NL": "A room has walls.",
        "FOL": "∀x (Room(x) → HasWalls(x))"
    },
    {
        "NL": "Birds can fly if they have functional wings and are not flightless.",
        "FOL": "∀x (Bird(x) ∧ FunctionalWings(x) ∧ ¬Flightless(x) → CanFly(x))"
    },
    {
        "NL": "There are athletes who respect only those opponents who are stronger than them.",
        "FOL": "∃x ∀y (Athlete(x) ∧ Opponent(y) ∧ StrongerThan(y, x) → Respect(x, y))"
    },
    {
        "NL": "Regular exercise promotes a healthy lifestyle.",
        "FOL": "∀x (RegularExercise(x) → PromotesHealthyLifestyle(x))"
    },
    {
        "NL": "If a person is a psychologist, they must study and assess human behavior and mental processes, often providing therapy and counseling services.",
        "FOL": "∀x (Psychologist(x) → (StudiesAndAssessesHumanBehaviorAndMentalProcesses(x) ∧ ProvidesTherapyAndCounseling(x)))"
    },
    {
        "NL": "An antivirus software detects a computer virus if it scans the computer's files and matches the virus signature in its database.",
        "FOL": "∀x ∀y ∀z (AntivirusSoftware(x) ∧ Computer(y) ∧ Virus(z) ∧ ScansFiles(x, y) ∧ MatchesSignature(x, z) → Detects(x, z))"
    },
    {
        "NL": "A person is musical if they can play guitar or piano, but not both.",
        "FOL": "∀x (Person(x) → (Musical(x) → (PlayGuitar(x) ⊕ PlayPiano(x))))"
    },
    {
        "NL": "An animal is a reptile if it has dry, scaly skin, and lays eggs on land.",
        "FOL": "∀x (Reptile(x) ↔ (Animal(x) ∧ DryScalySkin(x) ∧ LaysEggsOnLand(x)))"
    },
    {
        "NL": "There isn't a scientist who has studied all types of bacteria under the microscope.",
        "FOL": "¬∃x (Scientist(x) ∧ ∀y (Bacteria(y) ∧ UnderMicroscope(y) → Studied(x, y)))"
    },
    {
        "NL": "A frog is jumping on a lily pad in the pond.",
        "FOL": "∃x ∃y (Frog(x) ∧ LilyPad(y) ∧ JumpingOn(x, y) ∧ InThePond(x))"
    },
    {
        "NL": "A fire needs oxygen to burn and produces heat and light as byproducts.",
        "FOL": "∀x (Fire(x) → (NeedsOxygen(x) ∧ ProducesHeat(x) ∧ ProducesLight(x)))"
    },
    {
        "NL": "In the ocean, the depth increases as you move away from the shore, and the temperature generally decreases as you descend.",
        "FOL": "∀x ∀y ∀z (Ocean(x) ∧ Shore(y) ∧ AwayFromShore(z, y) → (IncreasedDepth(z, x) ∧ DecreasedTemperature(z, x)))"
    },
    {
        "NL": "A vehicle can be driven when it has a functional engine, sufficient fuel, and a driver with a valid license.",
        "FOL": "∀x∀y (Vehicle(x) ∧ FunctionalEngine(x) ∧ SufficientFuel(x) ∧ Driver(y) ∧ ValidLicense(y) → CanBeDriven(x, y))"
    },
    {
        "NL": "A poet writes poems that express emotions or ideas through the use of language.",
        "FOL": "∀x∀y (Poet(x) ∧ Poem(y) → WritesExpressingEmotionsOrIdeas(x, y))"
    },
    {
        "NL": "A dish is delicious if it was cooked perfectly and garnished aesthetically.",
        "FOL": "∀x (Dish(x) ∧ CookedPerfectly(x) ∧ GarnishedAesthetically(x) → Delicious(x))"
    },
    {
        "NL": "A student passes if they score more than the passing grade.",
        "FOL": "∀x ∀y (Student(x) ∧ Grade(y) ∧ ScoreMore(x, y) → Passes(x))"
    },
    {
        "NL": "An event is enjoyable if it has live music or entertaining performances, but not if it's too noisy.",
        "FOL": "∀x (Event(x) ∧ (LiveMusic(x) ∨ EntertainingPerformances(x)) ∧ ¬TooNoisy(x) → Enjoyable(x))"
    },
    {
        "NL": "A conservation area maintains species variation, protecting vulnerable creatures and their habitats, while providing chances for biology studies and learning about the environment.",
        "FOL": "∀x ∃y ∃z (ConservationArea(x) → (VulnerableCreatures(y) ∧ Habitats(z) ∧ Belongs(y, z) ∧ (MaintainsSpeciesVariation(x) ∧ Protects(x, y) ∧ Protects(x, z) ∧ ProvidesBiologyStudiesChances(x) ∧ ProvidesEnvironmentLearning(x))))"
    },
    {
        "NL": "All bakers are methodical or certain gems are precious if and only if there exists a recipe that is essential unless there are no ingredients.",
        "FOL": "(∀x (Baker(x) → Methodical(x)) ∨ ∃y (Gem(y) ∧ Precious(y))) ↔ (∃z (Recipe(z) ∧ (Essential(z) ∨ ∀w (¬Ingredient(w)))))"
    },
    {
        "NL": "A destination is attractive to tourists if it has beautiful scenery and a rich cultural heritage.",
        "FOL": "∀x (Destination(x) → (AttractiveToTourists(x) ↔ (BeautifulScenery(x) ∧ RichCulturalHeritage(x))))"
    },
    {
        "NL": "A plant grows if it receives sufficient sunlight, water, and nutrients.",
        "FOL": "∀x (Plant(x) ∧ SufficientSunlight(x) ∧ SufficientWater(x) ∧ SufficientNutrients(x) → Grows(x))"
    },
    {
        "NL": "A teacher instructs students in a subject and assigns them homework and tests.",
        "FOL": "∀x∀y∀z (Teacher(x) ∧ Student(y) ∧ Subject(z) → (InstructsInSubject(x, y, z) ∧ AssignsHomework(x, y) ∧ AssignsTests(x, y)))"
    },
    {
        "NL": "If a food is spicy, it contains hot ingredients.",
        "FOL": "∀x (Food(x) ∧ Spicy(x) ↔ ContainsHotIngredients(x))"
    },
    {
        "NL": "A carnivorous plant obtains nutrients by consuming insects or small animals.",
        "FOL": "∀x (CarnivorousPlant(x) → ConsumesInsectsOrSmallAnimals(x))"
    },
    {
        "NL": "Something can be considered as a weapon if it is dangerous.",
        "FOL": "∀x (Weapon(x) → Dangerous(x))"
    },
    {
        "NL": "A person is considered a senior citizen if they are over the age of 65 and retired from their profession.",
        "FOL": "∀x (Person(x) ∧ AgeOver65(x) ∧ RetiredFromProfession(x) → SeniorCitizen(x))"
    },
    {
        "NL": "A meal is vegetarian if it excludes meat and fish.",
        "FOL": "∀x (Meal(x) ∧ ¬MeatInMeal(x) ∧ ¬FishInMeal(x) → Vegetarian(x))"
    },
    {
        "NL": "Vaccination protects against a specific disease if it contains weakened or inactive forms of the pathogen.",
        "FOL": "∀x ∀y (Vaccination(x) ∧ ContainsWeakenedOrInactivePathogen(x, y) → ProtectsAgainstDisease(x, y))"
    },
    {
        "NL": "A store may accept payment in the form of cash, credit card, or a mobile payment app.",
        "FOL": "∀x (Store(x) → (AcceptsPayment(x, Cash) ∨ AcceptsPayment(x, CreditCard) ∨ AcceptsPayment(x, MobilePaymentApp)))"
    },
    {
        "NL": "If a person manages and oversees the day-to-day operations of a hotel, they are considered a hotel manager.",
        "FOL": "∀x (ManagesAndOverseesDayToDayOperationsOfHotel(x) → HotelManager(x))"
    },
    {
        "NL": "Shoes are worn on feet.",
        "FOL": "∀x∀y (Shoe(x) ∧ Foot(y) → WornOn(x, y))"
    },
    {
        "NL": "A city is a great destination for a family vacation if it has safe neighborhoods and either fun attractions or beautiful parks.",
        "FOL": "∀x (City(x) ∧ SafeNeighborhoods(x) ∧ (FunAttractions(x) ∨ BeautifulParks(x)) → GreatFamilyVacationDestination(x))"
    },
    {
        "NL": "A language is easy to learn if it has simple grammar, a small vocabulary, and is similar to the learner's native language.",
        "FOL": "∀x ∀y (Language(x) ∧ Learner(y) ∧ SimpleGrammar(x) ∧ SmallVocabulary(x) ∧ SimilarToNativeLanguage(x, y) → EasyToLearn(x, y))"
    },
    {
        "NL": "An animal can be a mammal, a reptile, or a bird.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ∨ Reptile(x) ∨ Bird(x)))"
    },
    {
        "NL": "A type of tree can be either deciduous or evergreen.",
        "FOL": "∀x (TreeType(x) → Deciduous(x) ⊕ Evergreen(x))"
    },
    {
        "NL": "A test result can be either positive or negative, but not both, and either confirmed or unconfirmed, but not both.",
        "FOL": "∀x (TestResult(x) → ((Positive(x) ⊕ Negative(x)) ∧ (Confirmed(x) ⊕ Unconfirmed(x))))"
    },
    {
        "NL": "A county lord will endorse the bill only if he does not pay his taxes.",
        "FOL": "∀x (CountyLord(x) ∧ EndorseBill(x) → ¬PayTaxes(x))"
    },
    {
        "NL": "No mammal having fur lacks tails.",
        "FOL": "∀x (Mammal(x) → (HaveFur(x) → ¬LackTail(x)))"
    },
    {
        "NL": "Two celestial bodies exert gravitational forces on each other that depend on their masses and the distance between them.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ CelestialBody(y) ∧ Mass(x) ∧ Mass(y) ∧ Distance(x, y) → GravitationalForces(x, y))"
    },
    {
        "NL": "A storm is considered severe if it causes significant damage and has intense wind speeds.",
        "FOL": "∀x (Storm(x) ∧ Severe(x) ↔ (CausesSignificantDamage(x) ∧ IntenseWindSpeeds(x)))"
    },
    {
        "NL": "A vehicle is an autonomous vehicle if it can operate without human input and navigate through its environment.",
        "FOL": "∀x (Vehicle(x) ∧ NoHumanInput(x) ∧ NavigatesEnvironment(x) → AutonomousVehicle(x))"
    },
    {
        "NL": "Cats are black, dogs are brown, and birds are blue.",
        "FOL": "∀w (Cat(w) → Black(w)) ∧ ∀x (Dog(x) → Brown(x)) ∧ ∀y (Bird(y) → Blue(y))"
    },
    {
        "NL": "A pollinator transfers pollen from one flower to another if it visits multiple flowers and carries pollen from the male reproductive organ to the female reproductive organ.",
        "FOL": "∀x∀y∀z (TransfersPollen(x, y, z) ↔ (Pollinator(x) ∧ Flower(y) ∧ Flower(z) ∧ VisitsMultipleFlowers(x) ∧ CarriesPollen(x, y, z)))"
    },
    {
        "NL": "A well-maintained public transportation system with accessible routes and affordable fares encourages people to use it for commuting, reducing traffic congestion and air pollution.",
        "FOL": "∀x∀y∀z (PublicTransportationSystem(x) ∧ WellMaintained(x) ∧ AccessibleRoutes(x, y) ∧ AffordableFares(x, z) → EncouragesCommutingAndReducesTrafficCongestionAndAirPollution(x))"
    },
    {
        "NL": "Medicines must be approved by a regulatory agency before they are available for public use.",
        "FOL": "∀x (Medicine(x) → (ApprovedByRegulatoryAgency(x) → AvailableForPublicUse(x)))"
    },
    {
        "NL": "A chef is cooking in the kitchen.",
        "FOL": "∃x ∃y (Chef(x) ∧ Kitchen(y) ∧ CookingIn(x, y))"
    },
    {
        "NL": "A fire generates heat and smoke, which can be hazardous to nearby living beings.",
        "FOL": "∀x (Fire(x) → (GeneratesHeat(x) ∧ GeneratesSmoke(x) ∧ (∃y (LivingBeing(y) ∧ Nearby(x, y)) → Hazardous(x, y))))"
    },
    {
        "NL": "Art galleries, theaters, and concert halls promote creativity, cultural appreciation, and community engagement.",
        "FOL": "Promote(ArtGalleries, Creativity) ∧ Promote(Theaters, CulturalAppreciation) ∧ Promote(ConcertHalls, CommunityEngagement)"
    },
    {
        "NL": "A windmill converts wind energy to mechanical power, has rotating blades, and is not a wind turbine that generates electricity.",
        "FOL": "∀x (Windmill(x) ↔ (ConvertsWindEnergy(x, MechanicalPower) ∧ HasRotatingBlades(x) ∧ ¬(WindTurbine(x) ∧ GeneratesElectricity(x))))"
    },
    {
        "NL": "Mail carriers deliver letters and packages to recipients.",
        "FOL": "∀x ∀y (MailCarrier(x) ∧ (Letter(y) ∨ Package(y)) → ∃z (Recipient(z) ∧ Delivers(x, y, z)))"
    },
    {
        "NL": "A cat is sleeping under the table in the kitchen.",
        "FOL": "∃x ∃y (Cat(x) ∧ Table(y) ∧ SleepingUnder(x, y) ∧ InTheKitchen(x))"
    },
    {
        "NL": "Heat and humidity irritate Sue.",
        "FOL": "∀x ((Heat(x) ∨ Humidity(x)) → Irritate(x, sue))"
    },
    {
        "NL": "A movie is captivating if and only if its plot is intriguing and the cinematography is excellent, but it doesn't involve too much violence",
        "FOL": "∀x (Movie(x) ∧ Captivating(x) ↔ (IntriguingPlot(x) ∧ ExcellentCinematography(x) ∧ ¬InvolveTooMuchViolence(x)))"
    },
    {
        "NL": "Most fruits have seeds, but seedless varieties also exist.",
        "FOL": "∀x (Fruit(x) → (HasSeeds(x) ∨ ¬HasSeeds(x)))"
    },
    {
        "NL": "A portal allows entry when it is manifest or active.",
        "FOL": "∀x (Portal(x) ∧ (Manifest(x) ∨ Active(x)) → AllowsEntry(x))"
    },
    {
        "NL": "If Ethan is not a lawyer then Olivia is a pilot.",
        "FOL": "¬Lawyer(ethan) → Pilot(olivia)"
    },
    {
        "NL": "A bakery produces bread, pastries, and cakes, offering a selection of freshly baked goods to customers.",
        "FOL": "∀x∀y∀z (Bakery(x) ∧ Bread(y) ∧ Pastry(z) → Produces(x, y) ∧ Produces(x, z))"
    },
    {
        "NL": "No chef who cooks both Italian and French cuisine, unless they have won a Michelin star, has opened more than ten restaurants or has not appeared on a cooking show.",
        "FOL": "¬∃x (Chef(x) ∧ CooksItalian(x) ∧ CooksFrench(x) ∨ WonMichelinStar(x) ∧ (OpenedMoreThanTenRestaurants(x) ∨ ¬AppearedOnCookingShow(x)))"
    },
    {
        "NL": "A city is considered a metropolis if it has a large population and is a significant economic, political, and cultural center.",
        "FOL": "∀x (City(x) ∧ LargePopulation(x) ∧ SignificantEconomicCenter(x) ∧ SignificantPoliticalCenter(x) ∧ SignificantCulturalCenter(x) → Metropolis(x))"
    },
    {
        "NL": "A seed germinates when it has favorable conditions, adequate moisture, and enough warmth.",
        "FOL": "∀x ∀y (Seed(x) ∧ FavorableConditions(x) ∧ AdequateMoisture(x, y) ∧ EnoughWarmth(x) → Germinates(x))"
    },
    {
        "NL": "A celestial body can be classified as a planet, dwarf planet, or moon, but not as multiple types at once.",
        "FOL": "∀x (CelestialBody(x) → ((Planet(x) ∨ DwarfPlanet(x) ∨ Moon(x)) ∧ ¬(Planet(x) ∧ DwarfPlanet(x)) ∧ ¬(Planet(x) ∧ Moon(x)) ∧ ¬(DwarfPlanet(x) ∧ Moon(x))))"
    },
    {
        "NL": "All public transportation options have schedules and ticket prices.",
        "FOL": "∀x (PublicTransportation(x) → (HasSchedule(x) ∧ HasTicketPrice(x)))"
    },
    {
        "NL": "A smartphone delivers a superior user experience when it features a high-resolution display, long battery life, and a powerful processor.",
        "FOL": "∀x (Smartphone(x) ∧ HighResolutionDisplay(x) ∧ LongBatteryLife(x) ∧ PowerfulProcessor(x) → SuperiorUserExperience(x))"
    },
    {
        "NL": "When a restaurant offers a variety of dishes, friendly service, and a pleasant atmosphere, it attracts customers.",
        "FOL": "∀x (Restaurant(x) ∧ VarietyOfDishes(x) ∧ FriendlyService(x) ∧ PleasantAtmosphere(x) → AttractsCustomers(x))"
    },
    {
        "NL": "A structure that is primarily used for walking or cycling, spans a physical gap, and is supported by abutments is classified as a footbridge.",
        "FOL": "∀x (Structure(x) ∧ PrimarilyUsedForWalkingOrCycling(x) ∧ SpansPhysicalGap(x) ∧ SupportedByAbutments(x) → Footbridge(x))"
    },
    {
        "NL": "A musical composition with multiple sections, each featuring distinct tempos, themes, and melodies, is a symphony.",
        "FOL": "∀x∀y∀z∀a (MusicalComposition(x) ∧ MultipleSections(x, y) ∧ DistinctTempos(x, z) ∧ ThemesAndMelodies(x, a) → Symphony(x))"
    },
    {
        "NL": "A smartphone requires a compatible charger, a power source, and a functioning battery to recharge successfully.",
        "FOL": "∀x ∀y ∀z (Smartphone(x) ∧ CompatibleCharger(y) ∧ PowerSource(z) ∧ FunctioningBattery(x) → RechargesSuccessfully(x, y, z))"
    },
    {
        "NL": "Any author who has written books, all of which were bestsellers and were acclaimed, either got a literary prize or was promoted by each critic.",
        "FOL": "∀x (Author(x) ∧ ∀y (Book(y) ∧ WrittenBy(x, y) ∧ BestSeller(y) ∧ Acclaimed(y)) → (ReceivedLiteraryPrize(x) ∨ ∀z (Critic(z, x) → Promoted(z, x))))"
    },
    {
        "NL": "Emma watches a show if and only if it is produced by Netflix.",
        "FOL": "∀v (Show(v) ∧ ProducedBy(v, netflix) → (IsPopularShow(v) ↔ Watches(emma, v)))"
    },
    {
        "NL": "A vehicle that is primarily powered by an electric motor and has a rechargeable battery system is considered an electric vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ PrimarilyPoweredByElectricMotor(x) ∧ HasRechargeableBattery(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A bird that's flightless and has flipper-like wings is a penguin.",
        "FOL": "∀x (Bird(x) ∧ Flightless(x) ∧ HasFlipperLikeWings(x) → Penguin(x))"
    },
    {
        "NL": "If all bakers who have an oven will bake, then some bakers who do not have a pastry school diploma will also bake.",
        "FOL": "∀x (Baker(x) ∧ HasOven(x) → Bake(x)) → ∃y (Baker(y) ∧ ¬HasPastrySchoolDiploma(y) ∧ Bake(y))"
    },
    {
        "NL": "All runners can finish in some type of race.",
        "FOL": "∀x (Runner(x) → ∃y (Race(y) ∧ FinishIn(x, y)))"
    },
    {
        "NL": "Sarah eats a vegan meal if and only if it was cooked by Chef John.",
        "FOL": "∀x (Meal(x) ∧ CookedBy(x, john) → (CookedWithVeganIngredients(x) ↔ Eats(sarah, x)))"
    },
    {
        "NL": "A person is considered a translator if they convert written or spoken text from one language to another.",
        "FOL": "∀x (Person(x) ∧ ConvertsWrittenText(x) ∧ ConvertsSpokenText(x) ∧ TranslatesBetweenLanguages(x) → Translator(x))"
    },
    {
        "NL": "A cactus is a type of plant that is adapted to grow in arid environments and stores water in its fleshy stems, while a fern is a non-flowering plant that grows in damp, shady locations.",
        "FOL": "∀x∀y (Cactus(x) ∧ Fern(y) → (AdaptedToAridEnvironment(x) ∧ StoresWaterInFleshyStems(x)) ∧ (NonFloweringPlant(y) ∧ GrowsInDampShadyLocations(y)))"
    },
    {
        "NL": "Novels tell stories, have characters, and can be written in first or third person.",
        "FOL": "∀x∀y∀z (Novel(x) ∧ (Stories(y) ∨ Characters(y) ∨ FirstPerson(z) ∨ ThirdPerson(z)) → (Tells(x, y) ∧ Has(x, y) ∧ (WrittenIn(x, z) ⊕ WrittenIn(x, z))))"
    },
    {
        "NL": "An object's mass affects the strength of its gravitational pull.",
        "FOL": "∀x (Object(x) ∧ HasMass(x) → AffectsGravitationalPull(x))"
    },
    {
        "NL": "A writer is composing a poem beside a typewriter.",
        "FOL": "∃x ∃y ∃z (Writer(x) ∧ Poem(y) ∧ Typewriter(z) ∧ Composing(x, y) ∧ Beside(x, z))"
    },
    {
        "NL": "Bob is a chef or a painter.",
        "FOL": "Chef(bob) ∨ Painter(bob)"
    },
    {
        "NL": "Sarah does not admire any New Yorker or Californian.",
        "FOL": "∀x (Person(x) ∧ (From(x, newYork) ∨ From(x, california)) → ¬Admire(sarah, x))"
    },
    {
        "NL": "Some cities have a warm climate, tall skyscrapers, and are located by the sea.",
        "FOL": "∃x (City(x) ∧ WarmClimate(x) ∧ (∃y (Skyscraper(y) ∧ Tall(y) ∧ LocatedIn(y, x))) ∧ LocatedBySea(x))"
    },
    {
        "NL": "A smartphone is either an Android or an iOS device.",
        "FOL": "∀x (Smartphone(x) → (Android(x) ⊕ iOS(x)))"
    },
    {
        "NL": "A quadrilateral has exactly four sides.",
        "FOL": "∀x (Quadrilateral(x) → NumberOfSides(x, 4))"
    },
    {
        "NL": "An island is considered uninhabited if it has no permanent human residents.",
        "FOL": "∀x (Island(x) ∧ ¬PermanentHumanResidents(x) → Uninhabited(x))"
    },
    {
        "NL": "A person who works as a physician and has a specialization in surgery is a surgeon.",
        "FOL": "∀x (Person(x) ∧ Physician(x) ∧ Specialization(x, surgery) → Surgeon(x))"
    },
    {
        "NL": "A smartphone is used for communication, accessing the internet, and entertainment.",
        "FOL": "∀x (Smartphone(x) → (UsedForCommunication(x) ∧ UsedForAccessingInternet(x) ∧ UsedForEntertainment(x)))"
    },
    {
        "NL": "Heavy vehicles consume more fuel, while lightweight vehicles consume less.",
        "FOL": "∀x (Vehicle(x) ∧ Heavy(x) → ConsumesMoreFuel(x)) ∧ ∀y (Vehicle(y) ∧ Lightweight(y) → ConsumesLessFuel(y))"
    },
    {
        "NL": "A river is navigable if it has a sufficient water depth, a wide enough channel, and minimal obstacles to impede travel.",
        "FOL": "∀x (River(x) ∧ SufficientWaterDepth(x) ∧ WideChannel(x) ∧ MinimalObstacles(x) → Navigable(x))"
    },
    {
        "NL": "Solar panels are most effective on sunny days and at optimal angles.",
        "FOL": "∀x (SolarPanel(x) → (Effective(x) ↔ (SunnyDay(x) ∧ OptimalAngle(x))))"
    },
    {
        "NL": "A recipe is easy to follow if it has a short preparation time, few ingredients, and simple cooking techniques.",
        "FOL": "∀x (Recipe(x) → EasyToFollow(x) ↔ (ShortPreparationTime(x) ∧ FewIngredients(x) ∧ SimpleCookingTechniques(x)))"
    },
    {
        "NL": "A programming language x is used to develop an application y if x has features and libraries suitable for creating and maintaining y.",
        "FOL": "∀x ∀y (ProgrammingLanguage(x) ∧ Application(y) ∧ HasFeaturesAndLibraries(x, y) → UsedToDevelop(x, y))"
    },
    {
        "NL": "A celestial body is classified as a moon if it orbits a planet and is not a part of the planet's atmosphere or surface.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ Planet(y) ∧ OrbitsPlanet(x, y) ∧ ¬PartOfAtmosphereOrSurface(x, y) → Moon(x))"
    },
    {
        "NL": "A substance is magnetic if it can attract or repel other magnetic materials and generate a magnetic field.",
        "FOL": "∀x (Substance(x) ∧ AttractMagneticMaterials(x) ∧ RepelMagneticMaterials(x) ∧ GenerateMagneticField(x) → Magnetic(x))"
    },
    {
        "NL": "A plant is a tree if it has a woody trunk and grows to a considerable height.",
        "FOL": "∀x (Tree(x) ↔ (Plant(x) ∧ WoodyTrunk(x) ∧ ConsiderableHeight(x)))"
    },
    {
        "NL": "A museum exhibits historical artifacts, but it does not exhibit modern art.",
        "FOL": "∀x∀y (Museum(x) ∧ (HistoricalArtifact(y) ∨ ModernArt(y)) → (Exhibits(x, y) ↔ ¬ModernArt(y)))"
    },
    {
        "NL": "A forest is home to diverse wildlife when it has various types of vegetation, clean water sources, and a balanced ecosystem.",
        "FOL": "∀x ∀y ∀z (Forest(x) ∧ VariousTypesOfVegetation(x, y) ∧ CleanWaterSources(x, z) ∧ BalancedEcosystem(x) → HomeToDiverseWildlife(x))"
    },
    {
        "NL": "A drink can be hot or cold, but not both at the same time.",
        "FOL": "∀x (Drink(x) → ((Hot(x) ⊕ Cold(x))))"
    },
    {
        "NL": "A device that stores and retrieves data and can be connected to a computer is a storage device.",
        "FOL": "∀x (Device(x) ∧ StoresData(x) ∧ RetrievesData(x) ∧ ConnectableToComputer(x) → StorageDevice(x))"
    },
    {
        "NL": "If a person is a banker, they handle financial transactions.",
        "FOL": "∀x (Banker(x) → HandlesFinancialTransactions(x))"
    },
    {
        "NL": "A substance that can conduct electricity, has a shiny appearance, and is malleable is classified as a metal.",
        "FOL": "∀x (Substance(x) ∧ ConductsElectricity(x) ∧ ShinyAppearance(x) ∧ Malleable(x) → Metal(x))"
    },
    {
        "NL": "A train travels on tracks and transports passengers or cargo between stations.",
        "FOL": "∀x (Train(x) → (TravelsOnTracks(x) ∧ (∃y (Passenger(y) ∨ Cargo(y)) ∧ TransportsBetweenStations(x, y))))"
    },
    {
        "NL": "Herbivorous animals feed on plant material, including leaves, fruits, and seeds, and have specialized digestive systems to process the fibrous content.",
        "FOL": "∀x ∀y ∀z (HerbivorousAnimal(x) → (FeedOnPlantMaterial(x, y) ∧ (Leaves(y) ∨ Fruits(y) ∨ Seeds(y)) ∧ SpecializedDigestiveSystem(x, z) ∧ ProcessFibrousContent(z)))"
    },
    {
        "NL": "All cats are cuddly companions, but not all cuddly companions are cats.",
        "FOL": "∀x (Cat(x) → CuddlyCompanion(x)) ∧ ∃y (CuddlyCompanion(y) ∧ ¬Cat(y))"
    },
    {
        "NL": "A person is either a teacher or a student, but not both.",
        "FOL": "∀z (Person(z) → (Teacher(z) ⊕ Student(z)))"
    },
    {
        "NL": "Dogs that are vaccinated are healthy and active.",
        "FOL": "∀x (Dog(x) ∧ Vaccinated(x) → Healthy(x) ∧ Active(x))"
    },
    {
        "NL": "A smart television can stream movies, control volume or schedule recordings.",
        "FOL": "∀x (SmartTelevision(x) → StreamMovies(x) ∧ ControlVolume(x) ∧ ScheduleRecordings(x))"
    },
    {
        "NL": "People who save may become wealthy.",
        "FOL": "∀x (Person(x) ∧ Saves(x) → MayBecomeWealthy(x))"
    },
    {
        "NL": "A basketball team has five players on the court, each with a specific position: point guard, shooting guard, small forward, power forward, or center.",
        "FOL": "∀x ∀y (BasketballTeam(x) ∧ Player(y, x) ∧ OnCourt(y) → (PointGuard(y) ⊕ ShootingGuard(y) ⊕ SmallForward(y) ⊕ PowerForward(y) ⊕ Center(y)))"
    },
    {
        "NL": "Some actors are singers.",
        "FOL": "∃x (Actor(x) ∧ Singer(x))"
    },
    {
        "NL": "Every cat is cuddly, but not every cuddly thing is a cat.",
        "FOL": "∀x (Cat(x) → Cuddly(x)) ∧ ¬∀x (Cuddly(x) → Cat(x))"
    },
    {
        "NL": "A healthy coral reef supports a diverse array of marine life, including fish, crustaceans, and other invertebrates.",
        "FOL": "∀x (HealthyCoralReef(x) → SupportsDiverseArrayOfMarineLife(x))"
    },
    {
        "NL": "Airplanes fly at high altitudes and travel long distances.",
        "FOL": "∀x (Airplane(x) → (FliesAtHighAltitude(x) ∧ TravelsLongDistances(x)))"
    },
    {
        "NL": "A rainbow is visible when the sunlight refracts, reflects and disperses in raindrops.",
        "FOL": "∀x (Sunlight(x) ∧ RefractsInRaindrops(x) ∧ ReflectsAndDisperses(x) → VisibleRainbow(x))"
    },
    {
        "NL": "A carnivore feeds on other animals.",
        "FOL": "∀x (Carnivore(x) → FeedsOnAnimals(x))"
    },
    {
        "NL": "A person is considered a learner if they are registered in a class or online course",
        "FOL": "∀x (Person(x) ∧ (RegisteredInClass(x) ∨ RegisteredInOnlineCourse(x)) → Learner(x))"
    },
    {
        "NL": "A musical instrument that uses vibrating strings to produce sound, can be played with a bow or by plucking, and is used in various musical genres is a stringed instrument.",
        "FOL": "∀x∀y∀z (MusicalInstrument(x) ∧ VibratingStrings(y) ∧ ProducesSoundWith(x, y) ∧ (PlayedWithBow(x) ∨ Plucked(x)) ∧ VariousMusicalGenres(z) ∧ UsedIn(x, z) → StringedInstrument(x))"
    },
    {
        "NL": "An object is a key if it is a small, metal device used to operate a lock, has a unique shape, and can open or close a specific lock.",
        "FOL": "∀x (Object(x) ∧ SmallMetalDevice(x) ∧ OperatesLock(x) ∧ UniqueShape(x) ∧ (OpensLock(x) ∨ ClosesLock(x)) → Key(x))"
    },
    {
        "NL": "A product with a reasonable price and a high rating is preferred by customers.",
        "FOL": "∀x (Product(x) ∧ ReasonablePrice(x) ∧ HighRating(x) → PreferredByCustomers(x))"
    },
    {
        "NL": "A laptop is portable and has a built-in keyboard, while a desktop computer requires a separate keyboard and is not portable.",
        "FOL": "∀x∀y (Laptop(x) ∧ BuiltInKeyboard(x, y) → (Portable(x) ∧ Has(x, y))) ∧ ∀z∀w (DesktopComputer(z) ∧ SeparateKeyboard(z, w) → (¬Portable(z) ∧ Has(z, w)))"
    },
    {
        "NL": "A relationship is healthy if it is built on trust, has open communication, and nurtures personal growth.",
        "FOL": "∀x (Relationship(x) ∧ BuiltOnTrust(x) ∧ OpenCommunication(x) ∧ NurturesPersonalGrowth(x) → Healthy(x))"
    },
    {
        "NL": "No fish with scales is finless.",
        "FOL": "∀x (Fish(x) → (HaveScale(x) → ¬LackFin(x)))"
    },
    {
        "NL": "All parallelograms have opposite sides parallel.",
        "FOL": "∀x (Parallelogram(x) → OppositeSidesParallel(x))"
    },
    {
        "NL": "No one at the party tastes either pizza or salad.",
        "FOL": "∀x (Guest(x) ∧ AtParty(x) → ¬(Taste(x, pizza) ∨ Taste(x, salad)))"
    },
    {
        "NL": "A room is dark if there is no natural light and no artificial light.",
        "FOL": "∀x (Room(x) → (Dark(x) ↔ (¬NaturalLight(x) ∧ ¬ArtificialLight(x))))"
    },
    {
        "NL": "A house with four bedrooms and a kitchen is a mansion.",
        "FOL": "∀x (House(x) ∧ HasFourBedrooms(x) ∧ HasKitchen(x) → Mansion(x))"
    },
    {
        "NL": "A tool is for cutting when it has a sharp edge, and for hammering when it has a flat surface.",
        "FOL": "∀x (Tool(x) → ((SharpEdge(x) → Cutting(x)) ∧ (FlatSurface(x) → Hammering(x))))"
    },
    {
        "NL": "A light bulb emits light when it is turned on and is not burnt out.",
        "FOL": "∀x (LightBulb(x) ∧ TurnedOn(x) ∧ ¬BurntOut(x) → EmitsLight(x))"
    },
    {
        "NL": "A triangle has three sides, while a square has four sides, and a circle has no straight sides.",
        "FOL": "∀x ∀y ∀z (Triangle(x) → HasSides(x, 3)) ∧ (Square(y) → HasSides(y, 4)) ∧ (Circle(z) → ¬HasStraightSides(z))"
    },
    {
        "NL": "An object that floats on water and can carry passengers is a boat.",
        "FOL": "∀x (Object(x) ∧ FloatsOnWater(x) ∧ CanCarryPassengers(x) → Boat(x))"
    },
    {
        "NL": "Some buildings have both residential and commercial spaces.",
        "FOL": "∃x (Building(x) ∧ (ResidentialSpace(x) ∧ CommercialSpace(x)))"
    },
    {
        "NL": "Brian calls Nancy.",
        "FOL": "Call(brian, nancy)"
    },
    {
        "NL": "An electronic device can be charged with a USB cable or a power adapter, but not both simultaneously.",
        "FOL": "∀x ∀y ∀z (ElectronicDevice(x) ∧ USBCable(y) ∧ PowerAdapter(z) → (ChargesWith(x, y) ⊕ ChargesWith(x, z)))"
    },
    {
        "NL": "A public park provides green spaces for leisure activities, enhancing the quality of life for residents and promoting physical and mental health.",
        "FOL": "∀x (PublicPark(x) → (ProvidesGreenSpaces(x) ∧ SupportsLeisureActivities(x) ∧ EnhancesQualityOfLife(x) ∧ PromotesPhysicalHealth(x) ∧ PromotesMentalHealth(x)))"
    },
    {
        "NL": "A book is new if it has never been read and has no visible signs of wear.",
        "FOL": "∀x (Book(x) → (NeverBeenRead(x) ∧ NoVisibleWear(x) → New(x)))"
    },
    {
        "NL": "An animal is either a mammal or a bird.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ∨ Bird(x)))"
    },
    {
        "NL": "A spider is weaving on a web, and a bat is flying at dusk.",
        "FOL": "∃x ∃y (Spider(x) ∧ Web(y) ∧ WeavingOn(x, y)) ∧ ∃z (Bat(z) ∧ Flying(z) ∧ AtDusk(z))"
    },
    {
        "NL": "Bacteria reproduce by dividing into two cells.",
        "FOL": "∀x (Bacteria(x) → ReproducesByDividingIntoTwoCells(x))"
    },
    {
        "NL": "A car is fuel-efficient if it consumes less gasoline and emits fewer pollutants.",
        "FOL": "∀x (Car(x) ∧ ConsumesLessGasoline(x) ∧ EmitsFewerPollutants(x) → FuelEfficient(x))"
    },
    {
        "NL": "A train travels between stations along a railway network, stopping at designated stations to pick up and drop off passengers.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ RailwayNetwork(y) ∧ TravelsBetweenStations(x, y) ∧ (DesignatedStations(z) ∧ (PickUpPassengers(x, z) ∧ DropOffPassengers(x, z))))"
    },
    {
        "NL": "A bridge spans a body of water.",
        "FOL": "∀x ∃y (Bridge(x) ∧ BodyOfWater(y) ∧ Spans(x, y))"
    },
    {
        "NL": "A city with a large population usually has a well-developed public transportation system.",
        "FOL": "∀x (City(x) ∧ LargePopulation(x) → WellDevelopedPublicTransportation(x))"
    },
    {
        "NL": "An artist creates a painting on a canvas with paint and brushes.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ Painting(y) ∧ Canvas(z) ∧ UsesPaint(x) ∧ UsesBrushes(x) → Creates(x, y, z))"
    },
    {
        "NL": "A fan circulates air to create a breeze, while an air conditioner cools the air.",
        "FOL": "∀x∀y (Fan(x) ∧ AirConditioner(y) → (CirculatesAir(x) ∧ CoolsAir(y)))"
    },
    {
        "NL": "All dogs are either hungry or tired.",
        "FOL": "∀x (Dog(x) → (Hungry(x) ∨ Tired(x)))"
    },
    {
        "NL": "A beverage is refreshing when it's cold, not overly sweet, and quenches thirst.",
        "FOL": "∀x (Beverage(x) ∧ Cold(x) ∧ ¬OverlySweet(x) ∧ QuenchesThirst(x) → Refreshing(x))"
    },
    {
        "NL": "A musical instrument, like a piano or violin, can produce melodious music without needing electricity.",
        "FOL": "∀x (MusicalInstrument(x) ∧ (Piano(x) ∨ Violin(x)) → (ProduceMelodiousMusic(x) ∧ ¬NeedsElectricity(x)))"
    },
    {
        "NL": "A woman is a teacher when she possesses a teaching degree, helps students learn, and works in a school.",
        "FOL": "∀x (Woman(x) ∧ PossessesTeachingDegree(x) ∧ HelpsStudentsLearn(x) ∧ WorksInSchool(x) → Teacher(x))"
    },
    {
        "NL": "A vehicle can either be a car with comfortable seats and advanced features, or a bike with light frame and high speed.",
        "FOL": "∀x (Vehicle(x) → ((Car(x) ∧ ComfortableSeats(x) ∧ AdvancedFeatures(x)) ⊕ (Bike(x) ∧ LightFrame(x) ∧ HighSpeed(x))))"
    },
    {
        "NL": "In order for a play to be successful, it should have engaging characters, an intriguing plot, and a talented cast, but it shouldn't be excessively lengthy.",
        "FOL": "∀x (Play(x) → (SuccessfulPlay(x) ↔ (EngagingCharacters(x) ∧ IntriguingPlot(x) ∧ TalentedCast(x) ∧ ¬ExcessivelyLengthy(x))))"
    },
    {
        "NL": "A shipping company delivers a package from one location to another if the package is picked up, transported, and dropped off at the destination.",
        "FOL": "∀x ∀y ∀z (ShippingCompany(x) ∧ Package(y) ∧ Location(z) ∧ PickedUp(y, z) ∧ Transported(y) ∧ DroppedOff(y, z) → Delivers(x, y, z))"
    },
    {
        "NL": "In a football match, a team wins, loses, or draws.",
        "FOL": "∀x∀y (FootballMatch(x) ∧ Team(y) → (Wins(y, x) ∨ Loses(y, x) ∨ Draws(y, x)))"
    },
    {
        "NL": "A sandwich contains bread, filling, and at least one type of spread.",
        "FOL": "∀x (Sandwich(x) ↔ (ContainsBread(x) ∧ ContainsFilling(x) ∧ ∃y (Spread(y) ∧ Contains(x, y))))"
    },
    {
        "NL": "A laptop is efficient if it has high memory and a fast processor.",
        "FOL": "∀x (Laptop(x) ∧ HasHighMemory(x) ∧ HasFastProcessor(x) → Efficient(x))"
    },
    {
        "NL": "There isn't a teacher who has read all books but hasn't ever taught a novel.",
        "FOL": "¬∃x (Teacher(x) ∧ ∀y (Book(y) → Read(x, y)) ∧ ¬∃z (Novel(z) ∧ HasTaught(x, z)))"
    },
    {
        "NL": "A novel is a type of book that contains a fictional story.",
        "FOL": "∀x (Novel(x) → (TypeOfBook(x) ∧ ContainsFictionalStory(x)))"
    },
    {
        "NL": "Birds fly, fish swim, and lions run, but snails do not move quickly.",
        "FOL": "∀x (Bird(x) → Fly(x)) ∧ ∀y (Fish(y) → Swim(y)) ∧ ∀z (Lion(z) → Run(z)) ∧ ∀w (Snail(w) → ¬MoveQuickly(w))"
    },
    {
        "NL": "A rainforest ecosystem is characterized by high levels of rainfall, diverse plant species, and numerous animal species, which contribute to a rich biodiversity.",
        "FOL": "∀x ∀y ∀z (RainforestEcosystem(x) → (HighLevelsOfRainfall(x) ∧ DiversePlantSpecies(x, y) ∧ NumerousAnimalSpecies(x, z) ∧ RichBiodiversity(x)))"
    },
    {
        "NL": "A medicine is effective against a disease if it reduces symptoms and shortens the duration of the illness.",
        "FOL": "∀x ∀y (Medicine(x) ∧ Disease(y) → (EffectiveAgainst(x, y) ↔ (ReducesSymptoms(x, y) ∧ ShortensDuration(x, y))))"
    },
    {
        "NL": "A person is considered an artist if they create visual, auditory, or performance works.",
        "FOL": "∀x (Person(x) ∧ (CreatesVisualWorks(x) ∨ CreatesAuditoryWorks(x) ∨ CreatesPerformanceWorks(x)) → Artist(x))"
    },
    {
        "NL": "A computer program is open-source if its source code is available to the public for use, modification, and distribution.",
        "FOL": "∀x (ComputerProgram(x) ∧ SourceCodeAvailable(x) ∧ PublicUseModificationDistribution(x) → OpenSource(x))"
    },
    {
        "NL": "Not all writers are either novelists or poets, and none of them dislike reading.",
        "FOL": "¬∀x (Writer(x) → (Novelist(x) ∨ Poet(x))) ∧ ∀y (Writer(y) → ¬DislikeReading(y))"
    },
    {
        "NL": "A scientist is performing experiments in a crowded lab.",
        "FOL": "∃x ∃y (Scientist(x) ∧ PerformingExperiments(x) ∧ CrowdedLab(y) ∧ In(x, y))"
    },
    {
        "NL": "In a healthy ecosystem, predators control the population of herbivores, maintaining balance.",
        "FOL": "∀x∀y∀z (HealthyEcosystem(x) ∧ Predator(y) ∧ Herbivore(z) → (ControlsPopulation(y, z) ∧ MaintainsBalance(x)))"
    },
    {
        "NL": "Mountains are formed by geological processes, including tectonic forces and volcanic activity.",
        "FOL": "∀x (Mountain(x) → (FormedByGeologicalProcesses(x) ∧ (TectonicForces(x) ∨ VolcanicActivity(x))))"
    },
    {
        "NL": "A person who can fluently speak, read, and write in two languages is considered bilingual.",
        "FOL": "∀x (Person(x) ∧ FluentInTwoLanguages(x, speak, read, write) → Bilingual(x))"
    },
    {
        "NL": "A rose has thorns, while a daisy does not; a cactus thrives in arid environments, but a fern does not.",
        "FOL": "∀x ∀y ∀z ∀w (Rose(x) ∧ Daisy(y) ∧ Cactus(z) ∧ Fern(w) → (HasThorns(x) ∧ ¬HasThorns(y) ∧ AridEnvironmentThriving(z) ∧ ¬AridEnvironmentThriving(w)))"
    },
    {
        "NL": "An ice cream shop sells either ice cream or frozen yogurt, but not both, and it also offers a selection of toppings.",
        "FOL": "∀x (IceCreamShop(x) → ((SellsIceCream(x) ⊕ SellsFrozenYogurt(x)) ∧ OffersToppings(x)))"
    },
    {
        "NL": "A scientist conducts experiments, analyzes data, and collaborates with other researchers to advance knowledge in their field.",
        "FOL": "∀x∀y (Scientist(x) ∧ Field(y) → (ConductsExperiments(x, y) ∧ AnalyzesData(x, y) ∧ CollaboratesWithResearchers(x, y)))"
    },
    {
        "NL": "A volcano erupts when molten rock, ash, and gas are expelled from its vent.",
        "FOL": "∀x (Volcano(x) → (MoltenRock(x) ∧ Ash(x) ∧ Gas(x) → Erupts(x)))"
    },
    {
        "NL": "A celestial body is a comet if it is composed of ice, dust, and rock and follows an elliptical orbit around a star.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ ComposedOfIceDustRock(x) ∧ FollowsEllipticalOrbit(x, y) ∧ Star(y) → Comet(x))"
    },
    {
        "NL": "Astronomy studies celestial objects, while geology examines Earth's structure.",
        "FOL": "∀x ∀y ∀z (Astronomy(x) ∧ CelestialObjects(y) ∧ (Geology(z) ∨ EarthsStructure(z)) → (Studies(x, y) ∧ Examines(z)))"
    },
    {
        "NL": "A car is considered an electric vehicle if it is powered solely by an electric motor and requires charging from an external source.",
        "FOL": "∀x (Car(x) ∧ PoweredByElectricMotor(x) ∧ RequiresExternalCharging(x) → ElectricVehicle(x))"
    },
    {
        "NL": "A fish that swims fast, has a long body, and delights anglers is a marlin.",
        "FOL": "∀x (Fish(x) ∧ SwimsFast(x) ∧ LongBody(x) ∧ DelightsAnglers(x) → Marlin(x))"
    },
    {
        "NL": "The process of natural selection drives the evolution of species, as individuals with traits that confer a survival advantage are more likely to reproduce and pass on their genes to the next generation.",
        "FOL": "∀x∀y∀z (Process(x) ∧ Species(y) ∧ Traits(z) → (NaturalSelection(x) ∧ DrivesEvolutionOf(x, y) ∧ (SurvivalAdvantage(z) → MoreLikelyToReproduceAndPassOnGenes(z))))"
    },
    {
        "NL": "Flowers bloom when the temperature is warm and there is sufficient sunlight.",
        "FOL": "∀x∀y∀z (Flower(x) ∧ Temperature(y) ∧ Sunlight(z) → (Blooms(x) ↔ (Warm(y) ∧ Sufficient(z))))"
    },
    {
        "NL": "A factory is eco-friendly if it minimizes waste and uses renewable energy sources.",
        "FOL": "∀x (Factory(x) → (EcoFriendly(x) ↔ (MinimizesWaste(x) ∧ UsesRenewableEnergySources(x))))"
    },
    {
        "NL": "Birds can fly and have feathers.",
        "FOL": "∀x (Bird(x) → (CanFly(x) → HasFeathers(x)))"
    },
    {
        "NL": "Something is either a burning star or a cool planet, but not both.",
        "FOL": "∀x ((Burning(x) ∧ Star(x)) ⊕ (Cool(x) ∧ Planet(x)))"
    },
    {
        "NL": "All dogs are not aggressive.",
        "FOL": "¬∀x (Dog(x) → Aggressive(x))"
    },
    {
        "NL": "A soda machine dispenses some beverages such as soda or juice in exchange for payment, in the form of coins.",
        "FOL": "∀x ∃y ∃z (SodaMachine(x) ∧ Beverage(y) ∧ (Soda(y) ∨ Juice(y)) ∧ Payment(z) ∧ Coin(z) ∧ InExchangeFor(x, z) → Dispenses(x, y))"
    },
    {
        "NL": "Something is a large rectangle if and only if it is not green.",
        "FOL": "∀x (Large(x) ∧ Rectangle(x) ↔ ¬Green(x))"
    },
    {
        "NL": "A satellite orbiting a planet with an atmosphere can use instruments to measure temperature, pressure, and humidity.",
        "FOL": "∀x∀y∀z (Satellite(x) ∧ Planet(y) ∧ Atmosphere(z, y) ∧ Orbits(x, y) → (MeasuresTemperature(x, z) ∧ MeasuresPressure(x, z) ∧ MeasuresHumidity(x, z)))"
    },
    {
        "NL": "Fossil fuels, including coal, oil, and natural gas, are formed from the remains of ancient plants and animals and are used as an energy source for industrial and domestic purposes.",
        "FOL": "∀x∀y∀z (FossilFuel(x) ∧ (Coal(y) ∨ Oil(y) ∨ NaturalGas(y)) ∧ AncientPlantOrAnimalRemains(z) → UsedAsEnergySourceForPurposes(x, y, z))"
    },
    {
        "NL": "A person is a diligent worker only if he is punctual.",
        "FOL": "∀x (Person(x) ∧ DiligentWorker(x) → Punctual(x))"
    },
    {
        "NL": "A museum exhibits artifacts, artworks, and historical documents that educate visitors about the past and present cultures.",
        "FOL": "∀x (Museum(x) → (ExhibitsArtifacts(x) ∧ ExhibitsArtworks(x) ∧ ExhibitsHistoricalDocuments(x) ∧ EducatesVisitorsAboutPastAndPresentCultures(x)))"
    },
    {
        "NL": "If some birds cannot chirp, then all cages are dirty or some plants are too dry.",
        "FOL": "∃x (Bird(x) ∧ ¬CanChirp(x)) → ∀y (Cage(y) ∨ Dirty(y)) ∨ ∃z (Plant(z) ∧ Dry(z))"
    },
    {
        "NL": "A dog retrieves items, uses its sense of smell to track scents, and provides companionship to humans.",
        "FOL": "∀x (Dog(x) → (∃y (Item(y) ∧ Retrieves(x, y)) ∧ TracksScents(x) ∧ ProvidesCompanionship(x)))"
    },
    {
        "NL": "If all humans are animals then there are some humans who love Maria.",
        "FOL": "∀x (Human(x) → Animal(x)) → ∃x (Human(x) ∧ Love(x, maria))"
    },
    {
        "NL": "A movie can be either subtitled or dubbed.",
        "FOL": "∀x (Movie(x) → (Subtitled(x) ⊕ Dubbed(x)))"
    },
    {
        "NL": "An object is a computer if it is an electronic device that processes data, performs calculations, and manages information.",
        "FOL": "∀x ((ElectronicDevice(x) ∧ ProcessesData(x) ∧ PerformsCalculations(x) ∧ ManagesInformation(x)) → Computer(x))"
    },
    {
        "NL": "No flowers are carnivorous.",
        "FOL": "¬∃x (Flower(x) ∧ Carnivore(x))"
    },
    {
        "NL": "Wearing sunscreen protects the skin from harmful ultraviolet rays.",
        "FOL": "∀x∀y (WearingSunscreen(x) ∧ Skin(y) ∧ UltravioletRays(y) → Protects(x, y))"
    },
    {
        "NL": "A person is considered an architect if they design and plan buildings, often creating detailed drawings and models, and considering factors such as aesthetics, functionality, and safety.",
        "FOL": "∀x (Person(x) ∧ DesignsAndPlansBuildings(x) ∧ OftenCreatesDetailedDrawingsAndModels(x) ∧ ConsidersAestheticsFunctionalityAndSafety(x) → Architect(x))"
    },
    {
        "NL": "Some chefs either cook pasta or pizza, but do not make both.",
        "FOL": "∃x (Chef(x) ∧ (CookPasta(x) ⊕ CookPizza(x)))"
    },
    {
        "NL": "All fungi decompose organic matter.",
        "FOL": "∀x (Fungus(x) → DecomposesOrganicMatter(x))"
    },
    {
        "NL": "If an object is a square, all its sides are equal in length and its angles are all right angles.",
        "FOL": "∀x (Square(x) → (EqualSideLengths(x) ∧ AllRightAngles(x)))"
    },
    {
        "NL": "A bicycle has brakes if it can slow down and has a braking mechanism.",
        "FOL": "∀x (Bicycle(x) ∧ CanSlowDown(x) ∧ HasBrakingMechanism(x) → HasBrakes(x))"
    },
    {
        "NL": "An animal is a mammal if it has hair or gives birth to live young.",
        "FOL": "∀x ∀y (Animal(x) ∧ (HasHair(x) ∨ GivesBirthToLiveYoung(x, y)) → Mammal(x))"
    },
    {
        "NL": "A country is landlocked if none of its borders touch the ocean or sea.",
        "FOL": "∀x (Country(x) → (Landlocked(x) ↔ ∀y (Border(x, y) → ¬TouchesOceanOrSea(y))))"
    },
    {
        "NL": "Lakes can be freshwater or saltwater, but not both.",
        "FOL": "∀x (Lake(x) → (Freshwater(x) ⊕ Saltwater(x)))"
    },
    {
        "NL": "Each shape is either a large triangle or a tiny rectangle, but not both.",
        "FOL": "∀x ((Large(x) ∧ Triangle(x)) ⊕ (Tiny(x) ∧ Rectangle(x)))"
    },
    {
        "NL": "Companies with a good working environment, fair payment system, and effective management have higher employee satisfaction.",
        "FOL": "∀x (Company(x) ∧ GoodWorkingEnvironment(x) ∧ FairPayment(x) ∧ EffectiveManagement(x) → HighEmployeeSatisfaction(x))"
    },
    {
        "NL": "A park provides green space and recreational activities, while a shopping mall offers retail stores and services.",
        "FOL": "∀x ∀y (Park(x) ∧ ShoppingMall(y) → (ProvidesGreenSpace(x) ∧ RecreationalActivities(x) ∧ OffersRetailStores(y) ∧ Services(y)))"
    },
    {
        "NL": "An athlete is talented if they excel in their sport and demonstrate exceptional skills.",
        "FOL": "∀x ∀y (Athlete(x) ∧ ExcelsInSport(x, y) ∧ DemonstratesExceptionalSkills(x) → Talented(x))"
    },
    {
        "NL": "A living organism either reproduces sexually or asexually.",
        "FOL": "∀x (LivingOrganism(x) → (SexualReproduction(x) ⊕ AsexualReproduction(x)))"
    },
    {
        "NL": "Crops that are grown using sustainable farming practices, such as crop rotation and organic pest control, contribute to healthier soil and reduced environmental impact.",
        "FOL": "∀x∀y (Crop(x) ∧ GrownUsingSustainableFarmingPractices(x, y) → ContributesToHealthierSoilAndReducedEnvironmentalImpact(y))"
    },
    {
        "NL": "A film is a documentary when it features real-life events and has no scripted scenes.",
        "FOL": "∀x (Film(x) ∧ FeaturesRealLifeEvents(x) ∧ ¬HasScriptedScenes(x) → Documentary(x))"
    },
    {
        "NL": "Mice eat cheese, while cats chase mice.",
        "FOL": "∀x ∀y (Mouse(x) ∧ Cheese(y) → Eats(x, y)) ∧ ∀z ∀w (Cat(z) ∧ Mouse(w) → Chases(z, w))"
    },
    {
        "NL": "An umbrella protects from rain when it is open and waterproof.",
        "FOL": "∀x (Umbrella(x) ∧ Open(x) ∧ Waterproof(x) → ProtectsFromRain(x))"
    },
    {
        "NL": "A bicycle functions efficiently when its tires are inflated, the chain is lubricated, and the brakes are properly adjusted.",
        "FOL": "∀x (Bicycle(x) ∧ InflatedTires(x) ∧ LubricatedChain(x) ∧ ProperlyAdjustedBrakes(x) → FunctionsEfficiently(x))"
    },
    {
        "NL": "An engine x operates efficiently in temperature range y if the engine's performance remains optimal within that temperature range.",
        "FOL": "∀x ∀y (Engine(x) ∧ TemperatureRange(y) ∧ OptimalPerformance(x, y) → OperatesEfficiently(x, y))"
    },
    {
        "NL": "If an organism is a fish, it swims and breathes underwater, but it cannot fly.",
        "FOL": "∀x (Fish(x) → (Swims(x) ∧ BreathesUnderwater(x) ∧ ¬Flies(x)))"
    },
    {
        "NL": "An animal is considered a mammal if it has hair and gives birth to live young.",
        "FOL": "∀x (Animal(x) ∧ HasHair(x) ∧ GivesBirthToLiveYoung(x) → Mammal(x))"
    },
    {
        "NL": "A squirrel is not hiding in the hole.",
        "FOL": "∃x (Squirrel(x) ∧ ¬∃y (Hole(y) ∧ HidingIn(x, y)))"
    },
    {
        "NL": "A skyscraper is taller than a hill and is not situated in a valley.",
        "FOL": "∀x (Skyscraper(x) → (TallerThanHill(x) ∧ ¬SituatedInValley(x)))"
    },
    {
        "NL": "It is false that a prism touches all miniature triangles.",
        "FOL": "¬∃x (Prism(x) ∧ ∀y (Miniature(y) ∧ Triangle(y) → Touches(x, y)))"
    },
    {
        "NL": "In a solar system, planets orbit a central star.",
        "FOL": "∀x∀y∀z (SolarSystem(x) ∧ Planet(y) ∧ CentralStar(z) → Orbit(y, z, x))"
    },
    {
        "NL": "A type of medical imaging technique that uses high-frequency sound waves to produce images of internal body structures, is non-invasive, and is commonly used to monitor pregnancies is an ultrasound.",
        "FOL": "∀x (MedicalImagingTechnique(x) ∧ UsesHighFrequencySoundWaves(x) ∧ ProducesImagesOfInternalBodyStructures(x) ∧ NonInvasive(x) ∧ CommonlyUsedForMonitoringPregnancies(x) → Ultrasound(x))"
    },
    {
        "NL": "Not all dogs are friendly or loyal.",
        "FOL": "¬∀x (Dog(x) → (Friendly(x) ∨ Loyal(x)))"
    },
    {
        "NL": "Some athletes excel in individual sports, while others thrive in team sports.",
        "FOL": "∃x (Athlete(x) ∧ (ExcelsInIndividualSports(x) ⊕ ExcelsInTeamSports(x)))"
    },
    {
        "NL": "A planet is habitable if it has liquid water, an atmosphere, and resides within its star's habitable zone.",
        "FOL": "∀x (Habitable(x) ↔ (Planet(x) ∧ ∃y (LiquidWater(y) ∧ Has(x, y)) ∧ ∃z (Atmosphere(z) ∧ Has(x, z)) ∧ ∃w (Star(w) ∧ ResidesInHabitableZone(x, w))))"
    },
    {
        "NL": "A visual representation of data in the form of bars or lines, where the lengths or heights correspond to quantities, is known as a chart.",
        "FOL": "∀x (VisualRepresentation(x) ∧ Data(x) ∧ UsesBarsOrLines(x) ∧ CorrespondsToQuantities(x) → Chart(x))"
    },
    {
        "NL": "A shape is either square or rectangle, but not both.",
        "FOL": "∀y (Shape(y) → (Square(y) ⊕ Rectangle(y)))"
    },
    {
        "NL": "Solar eclipses occur when the moon passes between the earth and the sun, while lunar eclipses occur when the earth passes between the moon and the sun.",
        "FOL": "∀x (SolarEclipse(x) → (MoonPassesBetweenEarthAndSun(x))) ∧ ∀y (LunarEclipse(y) → (EarthPassesBetweenMoonAndSun(y)))"
    },
    {
        "NL": "There are no students who cannot either study or research.",
        "FOL": "¬∃x (Student(x) ∧ ¬CanStudy(x) ∧ ¬CanResearch(x))"
    },
    {
        "NL": "A jab protects from a distinct malady by triggering the body's defenses to produce a certain reaction.",
        "FOL": "∀x ∃y (Jab(x) ∧ Malady(y) ∧ TriggersBodysDefenses(x) ∧ ProducesCertainReaction(x, y) → ProtectsFrom(x, y))"
    },
    {
        "NL": "A fruit with a hard outer shell and a soft interior is a drupe.",
        "FOL": "∀x (Fruit(x) ∧ HardOuterShell(x) ∧ SoftInterior(x) → Drupe(x))"
    },
    {
        "NL": "A substance is either solid or liquid, but not both.",
        "FOL": "∀x (Substance(x) → (Solid(x) ⊕ Liquid(x)))"
    },
    {
        "NL": "A dance is appreciated if it has graceful movements, passionate performers, and a well-choreographed sequence.",
        "FOL": "∀x (Dance(x) ∧ HasGracefulMovements(x) ∧ HasPassionatePerformers(x) ∧ HasWellChoreographedSequence(x) → Appreciated(x))"
    },
    {
        "NL": "A smartphone with a high-resolution camera, fast processor, and ample storage space can satisfy various user requirements.",
        "FOL": "∀x (Smartphone(x) ∧ HighResolutionCamera(x) ∧ FastProcessor(x) ∧ AmpleStorageSpace(x) → SatisfiesVariousUserRequirements(x))"
    },
    {
        "NL": "All cars are gas-powered.",
        "FOL": "∀x (Car(x) → GasPowered(x))"
    },
    {
        "NL": "Some candies are either sweet or sour, but not both.",
        "FOL": "∃x (Candy(x) ∧ (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "A sculpture is made by shaping materials such as stone, metal, or clay.",
        "FOL": "∀x (Sculpture(x) ↔ (ShapedFromStone(x) ∨ ShapedFromMetal(x) ∨ ShapedFromClay(x)))"
    },
    {
        "NL": "An email is sent from a sender to a recipient.",
        "FOL": "∀x∀y (Email(x) ∧ Sender(y) → SentTo(x, y))"
    },
    {
        "NL": "An element that belongs to Group 1 of the periodic table, has one valence electron, and readily reacts with nonmetals is a member of the alkali metals.",
        "FOL": "∀x∀y∀z (Element(x) ∧ BelongsToGroup1(x, y) ∧ HasOneValenceElectron(x) ∧ ReadilyReactsWithNonmetals(x, z) → AlkaliMetal(x))"
    },
    {
        "NL": "It is not true that all birds can fly.",
        "FOL": "¬∀x (Bird(x) → Fly(x))"
    },
    {
        "NL": "Rainy weather increases the likelihood of using an umbrella.",
        "FOL": "∀x ∀y (Weather(x) ∧ Rainy(x) ∧ Umbrella(y) → MoreLikelyToUse(y, x))"
    },
    {
        "NL": "There is no square that indicates all green pentagons.",
        "FOL": "¬∃x (Square(x) → ∀y (Green(y) ∧ Pentagon(y) → Indicates(x, y)))"
    },
    {
        "NL": "A library provides access to a variety of resources, including books, digital media, and research materials for patrons to use and learn from.",
        "FOL": "∀x∀y∀z∀w (Library(x) ∧ (Book(y) ∨ DigitalMedia(y) ∨ ResearchMaterial(y)) ∧ Patron(z) → ProvidesAccessTo(x, y, z, w))"
    },
    {
        "NL": "Some flowers bloom at night and close during the day.",
        "FOL": "∃x (Flower(x) ∧ BloomsAtNight(x) ∧ ClosesDuringDay(x))"
    },
    {
        "NL": "An organization is classified as a non-profit if it does not distribute profits to its owners.",
        "FOL": "∀x (Organization(x) ∧ ¬DistributesProfitsToOwners(x) → NonProfit(x))"
    },
    {
        "NL": "An environment is a desert when it is characterized by arid conditions, receives minimal annual precipitation, and supports unique plant and animal adaptations for surviving in extreme heat and water scarcity.",
        "FOL": "∀x (Environment(x) ∧ CharacterizedByAridConditions(x) ∧ ReceivesMinimalAnnualPrecipitation(x) ∧ SupportsUniquePlantAndAnimalAdaptations(x, extremeHeat, waterScarcity) → Desert(x))"
    },
    {
        "NL": "There is a dog that some birds are scared of.",
        "FOL": "∃x ∃y (Dog(x) ∧ Bird(y) ∧ ScaredOf(y, x))"
    },
    {
        "NL": "Mathematics, physics, and chemistry are subjects in the sciences.",
        "FOL": "ScienceSubject(mathematics) ∧ ScienceSubject(physics) ∧ ScienceSubject(chemistry)"
    },
    {
        "NL": "A cat meows, a dog barks, and a bird chirps.",
        "FOL": "∀x∀y∀z (Cat(x) → Meows(x)) ∧ (Dog(y) → Barks(y)) ∧ (Bird(z) → Chirps(z))"
    },
    {
        "NL": "An employee gets a promotion if they demonstrate exceptional performance, leadership, and contribute to the company's growth.",
        "FOL": "∀x (Employee(x) ∧ ExceptionalPerformance(x) ∧ DemonstratesLeadership(x) ∧ ContributesToGrowth(x) → GetsPromotion(x))"
    },
    {
        "NL": "Some desserts are made with chocolate, have fruit toppings, and are served cold.",
        "FOL": "∃x ∃y ∃z (Dessert(x) ∧ MadeWith(x, Chocolate) ∧ Fruit(y) ∧ Topping(z, y) ∧ ServedWith(x, z) ∧ Cold(x))"
    },
    {
        "NL": "A movie is successful if and only if it is engaging and has famous actors.",
        "FOL": "∀x (Movie(x) → (Successful(x) ↔ (Engaging(x) ∧ HasFamousActors(x))))"
    },
    {
        "NL": "A pentagon is grey or shows a silver object.",
        "FOL": "∀x (Pentagon(x) → (Grey(x) ∨ ∃y (Silver(y) ∧ Shows(x, y))))"
    },
    {
        "NL": "A wind turbine generates power when it converts wind energy into electricity.",
        "FOL": "∀x ∀y (WindTurbine(x) ∧ WindEnergy(y) ∧ Converts(x, y, Electricity) → GeneratesPower(x))"
    },
    {
        "NL": "A film can be a comedy, a drama, or a combination of both, but not neither.",
        "FOL": "∀x (Film(x) → (Comedy(x) ∨ Drama(x) ∧ ¬(¬Comedy(x) ∧ ¬Drama(x))))"
    },
    {
        "NL": "A wind turbine generates electricity if it is exposed to adequate wind speeds, has efficient blades, and is connected to a power grid.",
        "FOL": "∀x ∀y ∀z (WindTurbine(x) ∧ AdequateWindSpeeds(y) ∧ EfficientBlades(x) ∧ PowerGrid(z) ∧ ExposedTo(x, y) ∧ ConnectedTo(x, z) → GeneratesElectricity(x, y, z))"
    },
    {
        "NL": "An item is fragile if it's made of glass or ceramic, but not if it's made of metal or plastic.",
        "FOL": "∀x (Item(x) → (((MadeOfGlass(x) ∨ MadeOfCeramic(x)) ∧ ¬(MadeOfMetal(x) ∨ MadeOfPlastic(x))) → Fragile(x)))"
    },
    {
        "NL": "Each planet has a moon.",
        "FOL": "∀x (Planet(x) → ∃y (Moon(y) ∧ HasMoon(x, y)))"
    },
    {
        "NL": "A dish is healthy if it does not have any added sugar.",
        "FOL": "∀x (Dish(x) ∧ ¬ContainAddedSugar(x) → Healthy(x))"
    },
    {
        "NL": "A novel is a lengthy work of fiction with a complex plot and well-developed characters.",
        "FOL": "∀x (Novel(x) → (LengthyWorkOfFiction(x) ∧ ComplexPlot(x) ∧ WellDevelopedCharacters(x)))"
    },
    {
        "NL": "A political party is either conservative or liberal, but not both.",
        "FOL": "∀x (PoliticalParty(x) → (Conservative(x) ⊕ Liberal(x)))"
    },
    {
        "NL": "A room can be illuminated by natural light or artificial light, but not simultaneously.",
        "FOL": "∀x (Room(x) → (IlluminatedByNaturalLight(x) ⊕ IlluminatedByArtificialLight(x)))"
    },
    {
        "NL": "Mountains have peaks and valleys are formed between them.",
        "FOL": "∀x ∀y (Mountain(x) ∧ Peak(x) → ∃y (Valley(y) ∧ FormedBetween(y, x)))"
    },
    {
        "NL": "A bicycle needs air in its tires to be functional.",
        "FOL": "∀x (Bicycle(x) → (AirInTires(x) → Functional(x)))"
    },
    {
        "NL": "A molecule consists of atoms bonded together.",
        "FOL": "∀x∀y (Molecule(x) → (Atoms(y) ∧ BondedTogether(x, y)))"
    },
    {
        "NL": "A type of fabric that is made from a natural fiber, has a smooth texture, and is used in clothing and home furnishings is a cotton fabric.",
        "FOL": "∀x∀y∀z (Fabric(x) ∧ NaturalFiber(y) ∧ MadeFrom(x, y) ∧ SmoothTexture(x) ∧ (UsedInClothing(x) ∧ UsedInHomeFurnishings(z)) → CottonFabric(x))"
    },
    {
        "NL": "A person who is a professional athlete must practice and compete in a sport.",
        "FOL": "∀x (ProfessionalAthlete(x) → (PracticesSport(x) ∧ CompetesInSport(x)))"
    },
    {
        "NL": "Some cars are electric and some cars are gas-powered, but there are no gas-powered electric cars.",
        "FOL": "∃x (Electric(x)) ∧ ∃x (GasPowered(x)) ∧ ¬∃x (Electric(x) ∧ GasPowered(x))"
    },
    {
        "NL": "A lecturer is preparing lectures in a bustling office.",
        "FOL": "∃x ∃y (Lecturer(x) ∧ PreparingLectures(x) ∧ BustlingOffice(y) ∧ In(x, y))"
    },
    {
        "NL": "Keith, a musician, plays the guitar, piano, and drums.",
        "FOL": "Musician(Keith) ∧ Plays(Keith, Guitar) ∧ Plays(Keith, Piano) ∧ Plays(Keith, Drums)"
    },
    {
        "NL": "A vaccine provides immunity against a specific disease by stimulating the production of antibodies or by inducing cellular immunity.",
        "FOL": "∀x ∀y (Vaccine(x) ∧ Disease(y) ∧ (StimulatesAntibodyProduction(x, y) ∨ InducesCellularImmunity(x, y)) → ProvidesImmunity(x, y))"
    },
    {
        "NL": "A body of water is a lake if it is surrounded by land and is not connected to the ocean.",
        "FOL": "∀x (BodyOfWater(x) ∧ Lake(x) ↔ (SurroundedByLand(x) ∧ ¬ConnectedToOcean(x)))"
    },
    {
        "NL": "A workout routine is effective for weight loss when it combines cardio exercises, strength training, and flexibility workouts, without causing physical injuries.",
        "FOL": "∀x (WorkoutRoutine(x) ∧ CombinesCardio(x) ∧ StrengthTraining(x) ∧ FlexibilityWorkouts(x) ∧ ¬CausesInjuries(x) → EffectiveForWeightLoss(x))"
    },
    {
        "NL": "An electronic gadget that can make phone calls and is not a smartphone is either a feature phone or a satellite phone.",
        "FOL": "∀x (ElectronicGadget(x) ∧ CanMakePhoneCalls(x) ∧ ¬Smartphone(x) → FeaturePhone(x) ⊕ SatellitePhone(x))"
    },
    {
        "NL": "Any student who respects a teacher is also respected by that teacher.",
        "FOL": "∀x ∀y (Student(x) ∧ Teacher(y) ∧ Respect(x, y) → Respect(y, x))"
    },
    {
        "NL": "A student is studying in the classroom, while a teacher is lecturing in the auditorium.",
        "FOL": "∃x ∃y (Student(x) ∧ Classroom(y) ∧ StudyingIn(x, y)) ∧ ∃z (Teacher(z) ∧ Lecturing(z) ∧ InTheAuditorium(z))"
    },
    {
        "NL": "A car is deemed eco-friendly when it emits low levels of pollutants and has a high fuel efficiency.",
        "FOL": "∀x (Car(x) ∧ LowEmissions(x) ∧ HighFuelEfficiency(x) → EcoFriendly(x))"
    },
    {
        "NL": "An object is a trapezoid if it has four sides and at least one pair of parallel sides.",
        "FOL": "∀x (Trapezoid(x) ↔ (Object(x) ∧ FourSides(x) ∧ ∃y ∃z (Side(y) ∧ Side(z) ∧ Parallel(y, z))))"
    },
    {
        "NL": "If a country is in the European Union, it uses the Euro as its official currency.",
        "FOL": "∀x (Country(x) ∧ EuropeanUnion(x) → OfficialCurrency(x, euro))"
    },
    {
        "NL": "A smartphone has multiple functions, including making calls, browsing the internet, and taking photos.",
        "FOL": "∀x (Smartphone(x) → (MakesCalls(x) ∧ BrowsesInternet(x) ∧ TakesPhotos(x)))"
    },
    {
        "NL": "A cellphone can make calls.",
        "FOL": "∀x (Cellphone(x) → CanMakeCalls(x))"
    },
    {
        "NL": "If a person is a translator, they either work in a publishing company or a language institute.",
        "FOL": "∀x (Person(x) ∧ Translator(x) → WorkInPublishingCompany(x) ⊕ WorkInLanguageInstitute(x))"
    },
    {
        "NL": "Sam is a writer or Olivia is a pharmacist or Ethan is a firefighter.",
        "FOL": "Writer(sam) ∨ Pharmacist(olivia) ∨ Firefighter(ethan)"
    },
    {
        "NL": "Skates glide on ice, bicycles roll on tires, and boats float on water.",
        "FOL": "∀x (Skate(x) → GlidesOnIce(x)) ∧ ∀y (Bicycle(y) → RollsOnTires(y)) ∧ ∀z (Boat(z) → FloatsOnWater(z))"
    },
    {
        "NL": "A student succeeds when they study diligently, attend classes regularly, or complete assignments on time, but not when they cheat.",
        "FOL": "∀x (Student(x) ∧ Success(x) ↔ (DiligentStudy(x) ∧ RegularAttendance(x) ∧ (CompleteAssignmentsOnTime(x) ∨ ¬Cheat(x))))"
    },
    {
        "NL": "Regular exercise can reduce the risk of heart diseases by enhancing overall fitness.",
        "FOL": "∀x ∀y (Exercise(x) ∧ HeartDisease(y) → (ReducesRisk(x, y) → EnhancesFitness(x, y)))"
    },
    {
        "NL": "A medication that effectively treats symptoms, has minimal side effects, and can be administered easily is often preferred by healthcare professionals.",
        "FOL": "∀x (Medication(x) ∧ EffectivelyTreatsSymptoms(x) ∧ MinimalSideEffects(x) ∧ EasilyAdministered(x) → PreferredByHealthcareProfessionals(x))"
    },
    {
        "NL": "A robot has smart control if it can change position quickly and has a control panel.",
        "FOL": "∀x (Robot(x) ∧ ChangePositionQuickly(x) ∧ HasControlPanel(x) → HasSmartControl(x))"
    },
    {
        "NL": "An amphibian can live both on land and in water and undergoes metamorphosis during its life cycle.",
        "FOL": "∀x (Amphibian(x) ↔ (CanLiveOnLand(x) ∧ CanLiveInWater(x) ∧ UndergoesMetamorphosis(x)))"
    },
    {
        "NL": "A movie is enjoyable when it has a good plot or interesting characters, and it is not too long.",
        "FOL": "∀x (Movie(x) ∧ ((GoodPlot(x) ∨ InterestingCharacters(x)) ∧ ¬TooLong(x)) → Enjoyable(x))"
    },
    {
        "NL": "A hot beverage is not cold.",
        "FOL": "∀x (Beverage(x) ∧ Hot(x) → ¬Cold(x))"
    },
    {
        "NL": "A park is open for visitors during daylight hours and when there is no ongoing maintenance.",
        "FOL": "∀x ∀t (Park(x) ∧ DaylightHours(t) ∧ ¬Maintenance(x) → OpenForVisitors(x, t))"
    },
    {
        "NL": "A student excels academically when they have good study habits, a supportive environment, or access to helpful resources.",
        "FOL": "∀x (Student(x) ∧ (GoodStudyHabits(x) ∨ SupportiveEnvironment(x) ∨ AccessToHelpfulResources(x)) → ExcelsAcademically(x))"
    },
    {
        "NL": "A credit card allows users to make purchases on credit, which they must later repay, often with interest.",
        "FOL": "∀x (CreditCard(x) → (AllowsPurchasesOnCredit(x) ∧ RequiresRepayment(x) ∧ ChargesInterest(x)))"
    },
    {
        "NL": "A location is safe for swimming if there are no sharks and no dangerous currents.",
        "FOL": "∀x (Location(x) → (SafeForSwimming(x) ↔ (¬Sharks(x) ∧ ¬DangerousCurrents(x))))"
    },
    {
        "NL": "A bakery sells a dessert that is popular among customers if it contains sweet ingredients, has an appealing presentation, and receives positive feedback.",
        "FOL": "∀x ∀y ∀z (Bakery(x) ∧ Dessert(y) ∧ SweetIngredients(y) ∧ AppealingPresentation(y) ∧ ReceivesPositiveFeedback(z, y) → PopularAmongCustomers(x, y, z))"
    },
    {
        "NL": "A company is profitable if its annual revenue exceeds its annual expenses.",
        "FOL": "∀x (Company(x) → (Profitable(x) ↔ (AnnualRevenueExceeds(x, annualExpenses))))"
    },
    {
        "NL": "Not all plants are green.",
        "FOL": "¬∀x (Plant(x) → Green(x))"
    },
    {
        "NL": "A location is a habitat for an animal species if it provides suitable living conditions, food sources, and shelter for the species.",
        "FOL": "∀x∀y∀z (Location(x) ∧ AnimalSpecies(y) ∧ SuitableLivingConditions(x, y) ∧ FoodSources(x, y, z) ∧ Shelter(x, y) → Habitat(x, y))"
    },
    {
        "NL": "If an animal is a mammal, it breastfeeds its offspring and has fur.",
        "FOL": "∀x (Animal(x) ∧ Mammal(x) → (BreastfeedOffspring(x) ∧ HasFur(x)))"
    },
    {
        "NL": "A bee pollinates a flower in a garden.",
        "FOL": "∀x∀y∀z (Bee(x) ∧ Flower(y) ∧ Garden(z) → Pollinates(x, y, z))"
    },
    {
        "NL": "There is an athlete who scores against all and only those teams that do not score against themselves.",
        "FOL": "∃x (Athlete(x) ∧ ∀y (Team(y) → (Score(x, y) ↔ ¬Score(y, y))))"
    },
    {
        "NL": "Oranges are typically eaten, while lemons are typically juiced.",
        "FOL": "∀x ∀y ((Orange(x) → Eaten(x)) ∧ ¬(Lemon(y) → Eaten(y))) ∨ (Lemon(y) → Juiced(y))"
    },
    {
        "NL": "A bird that is migratory travels long distances between breeding and non-breeding seasons and usually returns to the same breeding grounds each year.",
        "FOL": "∀x (Bird(x) ∧ Migratory(x) → TravelsLongDistancesBetweenSeasons(x) ∧ ReturnsToSameBreedingGrounds(x))"
    },
    {
        "NL": "A person is considered a philanthropist if they actively donate money or resources to charitable causes.",
        "FOL": "∀x (Person(x) ∧ ActivelyDonates(x) ∧ SupportsCharitableCauses(x) → Philanthropist(x))"
    },
    {
        "NL": "A tiger is stalking a zebra in the jungle.",
        "FOL": "∃x ∃y (Tiger(x) ∧ Zebra(y) ∧ Stalking(x, y) ∧ InTheJungle(x))"
    },
    {
        "NL": "An avalanche occurs when a mass of snow, ice, and debris slides rapidly down a mountainside.",
        "FOL": "∀x (Avalanche(x) → (MassOfSnowIceDebris(x) ∧ SlidesRapidlyDownMountainside(x)))"
    },
    {
        "NL": "No kid who venerates each instructor is looked up to by someone.",
        "FOL": "∀x (Kid(x) → ∀y ((Instructor(y) → Venerate(x, y)) → ¬∃z (Individual(z) ∧ LookUpTo(z, x))))"
    },
    {
        "NL": "A planet has an atmosphere if it has sufficient gravity to retain gases.",
        "FOL": "∀x (Planet(x) ∧ SufficientGravity(x) → HasAtmosphere(x))"
    },
    {
        "NL": "A stadium is considered iconic when it has a unique architectural design and historical significance.",
        "FOL": "∀x (Stadium(x) ∧ UniqueArchitecturalDesign(x) ∧ HistoricalSignificance(x) → Iconic(x))"
    },
    {
        "NL": "A script is an autobiography if it discloses the personal experiences of a specific individual, written by that individual themselves.",
        "FOL": "∀x ∃y (Script(x) ∧ Individual(y) ∧ DisclosesExperiences(x, y) ∧ WrittenBy(x, y) → Autobiography(x))"
    },
    {
        "NL": "A bakery that sells vegan products offers items without dairy or eggs.",
        "FOL": "∀x (Bakery(x) ∧ SellsVeganProducts(x) → (OffersItemsWithoutDairy(x) ∧ OffersItemsWithoutEggs(x)))"
    },
    {
        "NL": "A disease is contagious if it can spread from one individual to another.",
        "FOL": "∀x (Disease(x) ∧ CanSpreadFromIndividualToIndividual(x) → Contagious(x))"
    },
    {
        "NL": "John teaches math to Sarah.",
        "FOL": "Teaches(John, Math, Sarah)"
    },
    {
        "NL": "It's not true that every dog that can bark is a guard dog, and no such dog is a puppy.",
        "FOL": "¬∀x (Dog(x) ∧ CanBark(x) → GuardDog(x)) ∧ ¬∃y (Dog(y) ∧ CanBark(y) ∧ Puppy(y))"
    },
    {
        "NL": "A player is recognized as professional if he maintains discipline and possesses exceptional skills.",
        "FOL": "∀x (Player(x) ∧ MaintainsDiscipline(x) ∧ PossessesExceptionalSkills(x) → Professional(x))"
    },
    {
        "NL": "Snow is cold, fire is hot, and ice is slippery.",
        "FOL": "∀x ∀y ∀z (Snow(x) ∧ Fire(y) ∧ Ice(z) → (Cold(x) ∧ Hot(y) ∧ Slippery(z)))"
    },
    {
        "NL": "A refrigerator, plugged into a power source, maintains a low temperature inside to preserve food and prevent spoilage.",
        "FOL": "∀x (Refrigerator(x) ∧ PluggedIn(x) → MaintainsLowTemperature(x))"
    },
    {
        "NL": "Pollinators, such as bees and butterflies, transfer pollen between flowers, resulting in plant fertilization and seed production.",
        "FOL": "∀x∀y∀z∀w (Pollinator(x) ∧ (Bee(y) ∨ Butterfly(y)) ∧ Flower(z) ∧ Pollen(w) → (TransfersPollen(x, y, z, w) ∧ FertilizesPlant(z) ∧ ProducesSeeds(z)))"
    },
    {
        "NL": "A tree can be deciduous, evergreen, or semi-evergreen.",
        "FOL": "∀x (Tree(x) → (Deciduous(x) ∨ Evergreen(x) ∨ SemiEvergreen(x)))"
    },
    {
        "NL": "An institution that collects, preserves, and displays items of historical, cultural, or scientific significance is a museum.",
        "FOL": "∀x (Institution(x) ∧ CollectsItems(x) ∧ PreservesItems(x) ∧ DisplaysItems(x) ∧ ItemsOfSignificance(x) → Museum(x))"
    },
    {
        "NL": "A talented artist creates visually engaging pieces, expresses unique ideas, and evokes emotional responses from viewers.",
        "FOL": "∀x (Artist(x) ∧ CreatesVisuallyEngagingPieces(x) ∧ ExpressesUniqueIdeas(x) ∧ EvokesEmotionalResponses(x) → Talented(x))"
    },
    {
        "NL": "A squirrel is playing in the garden.",
        "FOL": "∃x ∃y (Squirrel(x) ∧ Garden(y) ∧ PlayingIn(x, y))"
    },
    {
        "NL": "Hummingbirds sip nectar from flowers.",
        "FOL": "∀x ∀y (Hummingbird(x) ∧ Flower(y) → SipNectarFrom(x, y))"
    },
    {
        "NL": "A flower is blue or white.",
        "FOL": "∀x (Flower(x) → (Blue(x) ∨ White(x)))"
    },
    {
        "NL": "A machine is considered powerful if it has a rapid processor and an ample storage capacity.",
        "FOL": "∀x (Machine(x) ∧ HasRapidProcessor(x) ∧ HasAmpleStorageCapacity(x) → Powerful(x))"
    },
    {
        "NL": "A painting is valuable if it is rare, created by a famous artist, or has a unique style.",
        "FOL": "∀x (Painting(x) → (Rare(x) ∨ CreatedByFamousArtist(x) ∨ UniqueStyle(x)) → Valuable(x))"
    },
    {
        "NL": "A farm produces food, fiber, or other agricultural products through the cultivation of plants or the raising of livestock.",
        "FOL": "∀x (Farm(x) → (ProducesFoodFiberOrAgriculturalProducts(x) ∧ (CultivatesPlants(x) ∨ RaisesLivestock(x))))"
    },
    {
        "NL": "Only electronic devices that are portable and have a rechargeable battery can be charged using a USB cable.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Portable(x) ∧ RechargeableBattery(x) → CanBeChargedWithUSBCable(x))"
    },
    {
        "NL": "A fruit is either a tropical fruit or a temperate fruit, but not both.",
        "FOL": "∀x (Fruit(x) → (TropicalFruit(x) ⊕ TemperateFruit(x)))"
    },
    {
        "NL": "A place is considered a school if it is an institution for the education and instruction of students, offering a curriculum of various subjects.",
        "FOL": "∀x (Place(x) ∧ InstitutionForEducation(x) ∧ InstitutionForInstruction(x) ∧ OffersCurriculum(x) ∧ OfVariousSubjects(x) → School(x))"
    },
    {
        "NL": "There exists a teacher who praises all and only the students who do not praise themselves.",
        "FOL": "∃x (Teacher(x) ∧ ∀y (Student(y) → (Praise(x, y) ↔ ¬Praise(y, y))))"
    },
    {
        "NL": "A species is considered endangered if its population is declining rapidly and its habitat is threatened.",
        "FOL": "∀x (Species(x) ∧ Endangered(x) ↔ (PopulationDecliningRapidly(x) ∧ HabitatThreatened(x)))"
    },
    {
        "NL": "An athlete competes in sports events.",
        "FOL": "∀x∀y (Athlete(x) ∧ SportsEvent(y) → CompetesIn(x, y))"
    },
    {
        "NL": "There isn't an artist who has painted all landscapes but hasn't published any of her works.",
        "FOL": "¬∃x (Artist(x) ∧ ∀y (Landscape(y) → Painted(x, y)) ∧ ¬∃z (Work(z) ∧ Published(x, z)))"
    },
    {
        "NL": "A bicycle can only be parked in a bike rack if the rack is not full, and it is not locked to another bike or a street sign.",
        "FOL": "∀x ∀y (Bicycle(x) ∧ BikeRack(y) → (CanBeParked(x, y) ↔ (¬Full(y) ∧ ¬LockedToAnotherBike(x) ∧ ¬LockedToStreetSign(x))))"
    },
    {
        "NL": "A bridge connects two cities and allows vehicles to cross a river.",
        "FOL": "∀x∀y∀z (Bridge(x) ∧ Connects(x, y, z) ∧ River(y, z) → AllowsVehiclesToCross(x))"
    },
    {
        "NL": "Birds can fly unless they are flightless, while fish swim and cannot fly.",
        "FOL": "∀x∀y (Bird(x) ∧ ¬Flightless(x) → CanFly(x)) ∧ (Fish(y) → (CanSwim(y) ∧ ¬CanFly(y)))"
    },
    {
        "NL": "Not everyone who tries succeeds, but only those who try succeed.",
        "FOL": "¬∀x (Tries(x) → Succeeds(x)) ∧ ∀y (Succeeds(y) → Tries(y))"
    },
    {
        "NL": "A scientist studies a phenomenon to understand its underlying principles.",
        "FOL": "∀x∀y∀z (Scientist(x) ∧ Phenomenon(y) ∧ Principle(z) → StudiesToUnderstand(x, y, z))"
    },
    {
        "NL": "An individual who is fluent in multiple languages is more likely to communicate effectively with diverse populations.",
        "FOL": "∀x (FluentInMultipleLanguages(x) → CommunicateEffectivelyWithDiversePopulations(x))"
    },
    {
        "NL": "Vaccination protects against infectious diseases.",
        "FOL": "∀x (Vaccination(x) → ProtectsAgainstInfectiousDiseases(x))"
    },
    {
        "NL": "A carnivorous animal eats only meat, while an herbivorous animal consumes only plant-based foods.",
        "FOL": "∀x (Carnivorous(x) ↔ EatsOnlyMeat(x)) ∧ ∀y (Herbivorous(y) ↔ ConsumesOnlyPlants(y))"
    },
    {
        "NL": "Some birds can fly, while others cannot.",
        "FOL": "∃x ∃y (Bird(x) ∧ Bird(y) ∧ CanFly(x) ∧ ¬CanFly(y))"
    },
    {
        "NL": "Some movies are neither funny nor sad.",
        "FOL": "∃x (Movie(x) ∧ ¬Funny(x) ∧ ¬Sad(x))"
    },
    {
        "NL": "A movie is engaging if it has a gripping story or compelling characters, and it is not boring.",
        "FOL": "∀x (Movie(x) → ((GrippingStory(x) ∨ CompellingCharacters(x)) ∧ ¬Boring(x)) ↔ Engaging(x))"
    },
    {
        "NL": "A successful farmer plants crops, takes care of the soil, and controls pests and diseases.",
        "FOL": "∀x (Farmer(x) → (PlantsCrops(x) ∧ TakesCareOfSoil(x) ∧ ControlsPestsAndDiseases(x) → Successful(x)))"
    },
    {
        "NL": "A bee collects nectar from flowers and turns it into honey, which is then stored in the hive.",
        "FOL": "∀x (Bee(x) → (∃y (Flower(y) ∧ CollectsNectarAndMakesHoney(x, y))))"
    },
    {
        "NL": "A person is a volunteer if they offer their time and skills for a cause without expecting compensation.",
        "FOL": "∀x (Volunteer(x) ↔ (Person(x) ∧ OffersTimeAndSkills(x) ∧ ForCause(x) ∧ ¬ExpectsCompensation(x)))"
    },
    {
        "NL": "A song is catchy if it has a rhythmic beat and meaningful lyrics.",
        "FOL": "∀x (Song(x) ∧ HasRhythmicBeat(x) ∧ HasMeaningfulLyrics(x) → Catchy(x))"
    },
    {
        "NL": "It isn't so that an object is a fast car if and only if it is red.",
        "FOL": "¬∀x (Fast(x) ∧ Car(x) ↔ Red(x))"
    },
    {
        "NL": "There is a concert that every band performs at if some hexagons do not consist of nine angles.",
        "FOL": "¬∀x (Hexagon(x) → NineAngles(x)) → ∃y (Concert(y) ∧ ∀z (Band(z) → PerformsAt(z, y)))"
    },
    {
        "NL": "Recycling practices are naturally restorative, lower odds of resource scarcity and decrease ecological damage.",
        "FOL": "∀x (RecyclingPractice(x) → (NaturallyRestorative(x) ∧ LowerOddsOfScarcity(x) ∧ DecreaseEcologicalDamage(x)))"
    },
    {
        "NL": "A teacher is teaching a course at the university.",
        "FOL": "∃x ∃y (Teacher(x) ∧ Course(y) ∧ Teaching(x, y) ∧ AtTheUniversity(x))"
    },
    {
        "NL": "A beach is suitable for swimming if the water is clean and there are no dangerous currents or marine life, but not if it is a protected area.",
        "FOL": "∀x (Beach(x) → (SuitableForSwimming(x) ↔ (CleanWater(x) ∧ ¬DangerousCurrents(x) ∧ ¬DangerousMarineLife(x) ∧ ¬ProtectedArea(x))))"
    },
    {
        "NL": "A device functions as a smartphone if it can make calls and connect to the internet.",
        "FOL": "∀x (Device(x) ∧ MakesCalls(x) ∧ ConnectsToInternet(x) → Smartphone(x))"
    },
    {
        "NL": "Some musicians are composers.",
        "FOL": "∃x (Musician(x) ∧ Composer(x))"
    },
    {
        "NL": "A person is considered a chef if they prepare and cook food, often in a professional kitchen setting.",
        "FOL": "∀x (Person(x) ∧ PreparesAndCooksFood(x) ∧ OftenInProfessionalKitchenSetting(x) → Chef(x))"
    },
    {
        "NL": "A city is sustainable if it uses renewable energy instead of fossil fuels.",
        "FOL": "∀x (City(x) ∧ UsesRenewableEnergy(x) ∧ ¬UsesFossilFuels(x) → Sustainable(x))"
    },
    {
        "NL": "Singers are not always rich.",
        "FOL": "∃x (Singer(x) ∧ ¬Rich(x))"
    },
    {
        "NL": "An electronic device is portable if it is designed to be easily carried and used by an individual.",
        "FOL": "∀x (ElectronicDevice(x) ∧ DesignedForEasyCarryingAndUse(x) → Portable(x))"
    },
    {
        "NL": "A solar eclipse occurs when the moon passes between the sun and the Earth, blocking the sun's light.",
        "FOL": "∀x (SolarEclipse(x) ↔ (MoonPassesBetween(x, y, z) ∧ Sun(y) ∧ Earth(z) ∧ BlocksLight(y)))"
    },
    {
        "NL": "Some cities are both coastal and major tourist destinations.",
        "FOL": "∃x (City(x) ∧ Coastal(x) ∧ MajorTouristDestination(x))"
    },
    {
        "NL": "A wildlife sanctuary preserves biodiversity, protecting endangered species and their habitats, while providing facilities for ecological research and environmental learning.",
        "FOL": "∀x ∃y ∃z (WildlifeSanctuary(x) → (EndangeredSpecies(y) ∧ Habitat(z) ∧ Belongs(y, z) ∧ (PreservesBiodiversity(x) ∧ Protects(x, y) ∧ Protects(x, z) ∧ ProvidesEcologicalResearchFacilities(x) ∧ ProvidesEnvironmentalLearningOpportunities(x))))"
    },
    {
        "NL": "If a person is a financial advisor, they either manage investments or offer tax planning services.",
        "FOL": "∀x (Person(x) ∧ FinancialAdvisor(x) → ManageInvestments(x) ⊕ OfferTaxPlanningServices(x))"
    },
    {
        "NL": "A language is international if it is spoken in many countries.",
        "FOL": "∀x (Language(x) ∧ SpokenInManyCountries(x) → International(x))"
    },
    {
        "NL": "A structure is a school or a hospital.",
        "FOL": "∀x (Structure(x) → (School(x) ∨ Hospital(x)))"
    },
    {
        "NL": "A laptop is a portable computer that has a battery for power and a display screen.",
        "FOL": "∀x (Laptop(x) → (PortableComputer(x) ∧ HasBattery(x) ∧ HasDisplayScreen(x)))"
    },
    {
        "NL": "Refrigerators keep food cold.",
        "FOL": "∀x (Refrigerator(x) → KeepsFoodCold(x))"
    },
    {
        "NL": "A substance is acidic if its pH value is less than 7.",
        "FOL": "∀x (Substance(x) ∧ PHValueLessThan7(x) → Acidic(x))"
    },
    {
        "NL": "No transport is both a boat and a plane.",
        "FOL": "¬∃x (Transport(x) ∧ Boat(x) ∧ Plane(x))"
    },
    {
        "NL": "A device is termed portable if it is lightweight, compact and operates without an external power source.",
        "FOL": "∀x (Device(x) ∧ IsLightweight(x) ∧ IsCompact(x) ∧ OperatesWithoutExternalPowerSource(x) → PortableDevice(x))"
    },
    {
        "NL": "A celestial object is a moon if it orbits a planet and is not a part of a planet's ring system.",
        "FOL": "∀x ∀y (CelestialObject(x) ∧ Planet(y) ∧ OrbitsPlanet(x, y) ∧ ¬PartOfRingSystem(x, y) → Moon(x))"
    },
    {
        "NL": "A star is a supernova if it undergoes a massive explosion that results in the release of an enormous amount of energy and the formation of a neutron star or black hole.",
        "FOL": "∀x (Star(x) ∧ UndergoesMassiveExplosion(x) ∧ ReleasesEnormousEnergy(x) ∧ (FormsNeutronStar(x) ∨ FormsBlackHole(x)) → Supernova(x))"
    },
    {
        "NL": "A plant is considered a fern if it is a non-flowering, vascular plant with fronds and reproduces by spores.",
        "FOL": "∀x (Plant(x) ∧ NonFloweringPlant(x) ∧ VascularPlant(x) ∧ HasFronds(x) ∧ ReproducesBySpores(x) → Fern(x))"
    },
    {
        "NL": "A planet can be a terrestrial planet, have a rocky surface, and cradle life, or it can be a gas giant, have swirling gas clouds, and be a fascination among astronomers.",
        "FOL": "∀x (Planet(x) → ((TerrestrialPlanet(x) ∧ HasRockySurface(x) ∧ CradleLife(x)) ⊕ (GasGiant(x) ∧ HasGasClouds(x) ∧ AstronomerFascination(x))))"
    },
    {
        "NL": "A film can win an award when it has a captivating story, outstanding performances, and is recognized by a reputable award-giving body.",
        "FOL": "∀x∀y (Film(x) ∧ CaptivatingStory(x) ∧ OutstandingPerformances(x) ∧ AwardGivingBody(y) ∧ Recognized(y, x) → CanWinAward(x))"
    },
    {
        "NL": "An athlete can participate in running events, swimming events, or both.",
        "FOL": "∀x (Athlete(x) → ∃y∃z (RunningEvent(y) ∧ Participates(x, y) ∨ (SwimmingEvent(z) ∧ Participates(x, z))))"
    },
    {
        "NL": "A garment that is worn on the upper body, has sleeves, and is typically made of fabric is called a shirt.",
        "FOL": "∀x (Garment(x) ∧ WornOnUpperBody(x) ∧ HasSleeves(x) ∧ TypicallyMadeOfFabric(x) → Shirt(x))"
    },
    {
        "NL": "A movie is a comedy and is rated PG.",
        "FOL": "∀x (Movie(x) → (IsComedy(x) ∧ IsRatedPG(x)))"
    },
    {
        "NL": "A person is an architect if they are trained and licensed to plan, design, and oversee the construction of buildings.",
        "FOL": "∀x (Architect(x) ↔ (Person(x) ∧ Trained(x) ∧ Licensed(x) ∧ PlansBuildings(x) ∧ DesignsBuildings(x) ∧ OverseesConstruction(x)))"
    },
    {
        "NL": "A laptop requires a power source, such as a battery or an AC adapter, to operate.",
        "FOL": "∀x (Laptop(x) ∧ (Battery(y) ∨ ACAdapter(y)) ∧ PowerSource(x, y) → Operates(x))"
    },
    {
        "NL": "Every book is interesting if and only if it is either a mystery or a science fiction.",
        "FOL": "∀x (Book(x) → (Interesting(x) ↔ (Mystery(x) ∨ ScienceFiction(x))))"
    },
    {
        "NL": "Musicians create music by playing instruments or singing.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ (Instrument(y) ∨ Singing(z)) → CreatesMusic(x, y, z))"
    },
    {
        "NL": "A weather phenomenon is a tornado if it involves a rapidly rotating column of air, connects the ground with a cumulonimbus cloud, and causes destruction on the ground.",
        "FOL": "∀x (WeatherPhenomenon(x) ∧ RapidlyRotatingColumnOfAir(x) ∧ ConnectsGroundAndCumulonimbusCloud(x) ∧ CausesDestructionOnGround(x) → Tornado(x))"
    },
    {
        "NL": "A butterfly flies and pollinates flowers.",
        "FOL": "∀x (Butterfly(x) → (Flies(x) ∧ PollinatesFlowers(x)))"
    },
    {
        "NL": "A calculator performs arithmetic, a compass shows direction, and a stopwatch measures elapsed time.",
        "FOL": "∀x ∀y ∀z (Calculator(x) ∧ Compass(y) ∧ Stopwatch(z) → (PerformsArithmetic(x) ∧ ShowsDirection(y) ∧ MeasuresElapsed(z)))"
    },
    {
        "NL": "A pair of shoes is appropriate for running if they provide proper support, have good traction, and are lightweight.",
        "FOL": "∀x (Shoes(x) ∧ ProperSupport(x) ∧ GoodTraction(x) ∧ Lightweight(x) → AppropriateForRunning(x))"
    },
    {
        "NL": "A garden flourishes with a variety of flowers, fertile soil, and regular maintenance.",
        "FOL": "∀x (Garden(x) ∧ Flourishes(x) ↔ (VarietyOfFlowers(x) ∧ FertileSoil(x) ∧ RegularMaintenance(x)))"
    },
    {
        "NL": "A jacket is suitable for cold weather if it has insulation, is windproof, and is water-resistant.",
        "FOL": "∀x (Jacket(x) → (Insulation(x) ∧ Windproof(x) ∧ WaterResistant(x) ↔ SuitableForColdWeather(x)))"
    },
    {
        "NL": "A bird is either nocturnal or diurnal, but not both.",
        "FOL": "∀x (Bird(x) → (Nocturnal(x) ⊕ Diurnal(x)))"
    },
    {
        "NL": "All cats are loyal companions, but not all loyal companions are cats.",
        "FOL": "∀x (Cat(x) → LoyalCompanion(x)) ∧ ∃y (LoyalCompanion(y) ∧ ¬Cat(y))"
    },
    {
        "NL": "A location is classified as a park if it contains greenery, is open to the public, and encourages outdoor activities.",
        "FOL": "∀x (Location(x) ∧ ContainsGreenery(x) ∧ OpenToPublic(x) ∧ EncouragesOutdoorActivities(x) → Park(x))"
    },
    {
        "NL": "An all-terrain vehicle can travel on rough surfaces, like sand or mud, and is popular among off-road enthusiasts.",
        "FOL": "∀x ∀y (AllTerrainVehicle(x) ∧ RoughSurface(y) ∧ (Sand(y) ∨ Mud(y)) ∧ OffRoadEnthusiast(z) → PopularAmong(x, y, z))"
    },
    {
        "NL": "In a park, children play on swings, while dogs play fetch with their owners.",
        "FOL": "∀x ∀y ∀z ∀w (Park(x) ∧ Child(y) ∧ Swing(z) ∧ Dog(w) → (PlaysOn(y, z) ∧ PlaysFetch(w, x)))"
    },
    {
        "NL": "An apartment is a good investment if it is located in a desirable neighborhood and has potential for rent growth or price appreciation.",
        "FOL": "∀x (Apartment(x) → GoodInvestment(x) ↔ (DesirableNeighborhood(x) ∧ (RentGrowthPotential(x) ∨ PriceAppreciationPotential(x))))"
    },
    {
        "NL": "A university degree enhances career prospects by providing students with knowledge, skills, and networking opportunities in their chosen field.",
        "FOL": "∀x (UniversityDegree(x) ∧ ProvidesKnowledge(x) ∧ ProvidesSkills(x) ∧ ProvidesNetworkingOpportunities(x) → EnhancesCareerProspects(x))"
    },
    {
        "NL": "In a restaurant, chefs prepare meals while waitstaff serve food and beverages to customers.",
        "FOL": "∀x ∀y ∀z (Restaurant(x) ∧ Chef(y) ∧ Waitstaff(z) → (PreparesMeals(y, x) ∧ ServesFoodAndBeverages(z, x)))"
    },
    {
        "NL": "A carnivorous animal eats either meat or other animals.",
        "FOL": "∀x (Carnivorous(x) → (EatsMeat(x) ∨ EatsAnimals(x)))"
    },
    {
        "NL": "Not everyone stays young, however, talking with people is interesting.",
        "FOL": "¬∀x (Person(x) → StaysYoung(x)) ∧ ∀y (Person(y) → InterestingToTalk(y))"
    },
    {
        "NL": "Lucy respects folks from Tokyo and Beijing.",
        "FOL": "∀x (Person(x) ∧ (From(x, tokyo) ∨ From(x, beijing)) → Respect(lucy, x))"
    },
    {
        "NL": "A movie can be watched in a cinema by a viewer if the movie is playing at the cinema, the viewer has a ticket for the movie, and there are available seats in the screening room.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ Cinema(y) ∧ Viewer(z) ∧ PlayingAtCinema(x, y) ∧ HasTicket(z, x, y) ∧ AvailableSeats(y) → CanWatch(x, y, z))"
    },
    {
        "NL": "A beverage can be hot or cold, alcoholic or non-alcoholic, but it cannot be both hot and cold or both alcoholic and non-alcoholic at the same time.",
        "FOL": "∀x (Beverage(x) → ((Hot(x) ⊕ Cold(x)) ∧ (Alcoholic(x) ⊕ NonAlcoholic(x))))"
    },
    {
        "NL": "A device that can capture images, has interchangeable lenses, and is designed for professional use is typically a DSLR or mirrorless camera.",
        "FOL": "∀x∀y∀z (Device(x) ∧ CapturesImages(x) ∧ InterchangeableLenses(y) ∧ Has(x, y) ∧ DesignedForProfessionalUse(z) ∧ IntendedFor(x, z) → (DSLR(x) ∨ MirrorlessCamera(x)))"
    },
    {
        "NL": "A musical instrument that has strings and is played with a bow or plucked is classified as a string instrument.",
        "FOL": "∀x (MusicalInstrument(x) ∧ HasStrings(x) ∧ (PlayedWithBow(x) ∨ Plucked(x)) → StringInstrument(x))"
    },
    {
        "NL": "An umbrella protects from rain.",
        "FOL": "∀x (Umbrella(x) → ProtectsFromRain(x))"
    },
    {
        "NL": "A circle has a constant radius, while a square has a constant side length.",
        "FOL": "∀x∀y (Circle(x) ∧ Square(y) → (ConstantRadius(x) ∧ ConstantSideLength(y)))"
    },
    {
        "NL": "Fish swim in water and have gills.",
        "FOL": "∀x (Fish(x) → (SwimsInWater(x) ∧ HasGills(x)))"
    },
    {
        "NL": "A film is categorized as a thriller if it maintains suspense, features a complex plot, and evokes feelings of excitement or anxiety.",
        "FOL": "∀x (Film(x) ∧ MaintainsSuspense(x) ∧ ComplexPlot(x) ∧ EvokesExcitementOrAnxiety(x) → Thriller(x))"
    },
    {
        "NL": "When it's snowing, schools are closed and buses do not operate.",
        "FOL": "∀x (Snowing(x) → (SchoolClosed(x) ∧ BusesNotOperating(x)))"
    },
    {
        "NL": "No student is a teacher.",
        "FOL": "¬∃x (Student(x) ∧ Teacher(x))"
    },
    {
        "NL": "A dog has paws and can bark, while a fish lacks paws and cannot bark.",
        "FOL": "∀x (Dog(x) → HasPaws(x) ∧ CanBark(x)) ∧ ∀y (Fish(y) → ¬HasPaws(y) ∧ ¬CanBark(y))"
    },
    {
        "NL": "Some artists either paint or sculpt, but do not do both.",
        "FOL": "∃x (Artist(x) ∧ (Paint(x) ⊕ Sculpt(x)))"
    },
    {
        "NL": "Every horse is not competitive or unhealthy.",
        "FOL": "∃x (Horse(x) ∧ (¬Competitive(x) ∨ ¬Unhealthy(x)))"
    },
    {
        "NL": "Every device is either a mobile or a tablet, but it cannot be both.",
        "FOL": "∀x (Device(x) → (Mobile(x) ⊕ Tablet(x)))"
    },
    {
        "NL": "A company thrives in a competitive market by offering high-quality products, delivering excellent customer service, and constantly innovating.",
        "FOL": "∀x (Company(x) ∧ HighQualityProducts(x) ∧ ExcellentCustomerService(x) ∧ ConstantInnovation(x) → ThrivesInCompetitiveMarket(x))"
    },
    {
        "NL": "Climbing equipment, such as ropes and harnesses, enhances safety and facilitates ascent.",
        "FOL": "∀x ∀y (ClimbingEquipment(x) ∧ (Rope(x) ∨ Harness(x)) → (EnhanceSafety(y) ∧ FacilitateAscent(y)))"
    },
    {
        "NL": "All scientists who have researched with one scientist at least, who has not won a notable prize, have either published over three research papers or given lectures at every science symposium.",
        "FOL": "∀x (Scientist(x) ∧ ∃y (Scientist(y) ∧ ¬WonNotablePrize(y) ∧ ResearchedWith(x, y)) → (PublishedOverThreeResearchPapers(x) ∨ ∀z (ScienceSymposium(z) → GivenLecture(x, z))))"
    },
    {
        "NL": "A material that is strong, lightweight, and resistant to corrosion is a suitable choice for aircraft construction.",
        "FOL": "∀x (Material(x) ∧ Strong(x) ∧ Lightweight(x) ∧ ResistantToCorrosion(x) → SuitableForAircraftConstruction(x))"
    },
    {
        "NL": "A vehicle can run on gasoline, diesel, or electricity.",
        "FOL": "∀x (Vehicle(x) → (RunsOnGasoline(x) ∨ RunsOnDiesel(x) ∨ RunsOnElectricity(x)))"
    },
    {
        "NL": "A fruit is sweet or sour but not both.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "A vehicle that uses tracks instead of wheels and is designed for use in snowy terrain is classified as a snowmobile.",
        "FOL": "∀x (Vehicle(x) ∧ UsesTracks(x) ∧ DesignedForSnowyTerrain(x) → Snowmobile(x))"
    },
    {
        "NL": "An organization is international if it operates in more than one country, but not if it only operates within one country.",
        "FOL": "∀x (Organization(x) → (OperatesInMoreThanOneCountry(x) ∧ ¬OperatesInOneCountryOnly(x) → International(x)))"
    },
    {
        "NL": "A film is a romantic comedy if it features a love story, has humorous scenes, and has a happy ending.",
        "FOL": "∀x (Film(x) ∧ FeaturesLoveStory(x) ∧ HumorousScenes(x) ∧ HappyEnding(x) → RomanticComedy(x))"
    },
    {
        "NL": "In a race, a runner can finish first, second, or third.",
        "FOL": "∀x (Runner(x) → (FinishesFirst(x) ∨ FinishesSecond(x) ∨ FinishesThird(x)))"
    },
    {
        "NL": "A person who is an architect designs and plans buildings.",
        "FOL": "∀x (Architect(x) → DesignsAndPlansBuildings(x))"
    },
    {
        "NL": "For an individual to maintain a healthy weight, it is necessary to exercise regularly, consume a balanced diet, and manage stress.",
        "FOL": "∀x (Individual(x) ∧ RegularExercise(x) ∧ BalancedDiet(x) ∧ ManageStress(x) → HealthyWeight(x))"
    },
    {
        "NL": "A student passes if they score higher than their classmates.",
        "FOL": "∀x ∀y (Student(x) ∧ Student(y) ∧ ScoreHigher(x, y) → Passes(x))"
    },
    {
        "NL": "Musical instruments produce sound to create music.",
        "FOL": "∀x∀y (MusicalInstrument(x) ∧ Sound(y) → ProducesToCreateMusic(x, y))"
    },
    {
        "NL": "A poem can be written in various forms, such as sonnets, haikus, or limericks.",
        "FOL": "∀x (Poem(x) → (WrittenInForm(x, Sonnet) ∨ WrittenInForm(x, Haiku) ∨ WrittenInForm(x, Limerick)))"
    },
    {
        "NL": "No cats are nocturnal.",
        "FOL": "¬∃x (Cat(x) ∧ Nocturnal(x))"
    },
    {
        "NL": "Eating a balanced diet and getting regular exercise contribute to a healthy lifestyle.",
        "FOL": "∀x (BalancedDiet(x) ∧ RegularExercise(x) → ContributesToHealthyLifestyle(x))"
    },
    {
        "NL": "When ice melts, it transforms from a solid state to a liquid state.",
        "FOL": "∀x ∀y (Ice(x) ∧ SolidState(x) ∧ Melts(x) ∧ LiquidState(y) → Transforms(x, y))"
    },
    {
        "NL": "A room has walls, a floor, and a ceiling.",
        "FOL": "∀x (Room(x) → (HasWalls(x) ∧ HasFloor(x) ∧ HasCeiling(x)))"
    },
    {
        "NL": "Birds are equipped with wings and they can fly, while snakes lack wings and cannot fly.",
        "FOL": "∀x (Bird(x) → HasWings(x) ∧ CanFly(x)) ∧ ∀y (Snake(y) → ¬HasWings(y) ∧ ¬CanFly(y))"
    },
    {
        "NL": "Not all paintings are modern, and none of them are destroyed.",
        "FOL": "¬∀x (Painting(x) → Modern(x)) ∧ ∀y (Painting(y) → ¬Destroyed(y))"
    },
    {
        "NL": "All of the party guests who drink alcohol are over 21 years old.",
        "FOL": "∀x (PartyGuest(x) ∧ DrinkAlcohol(x) → OverTwentyOneYearsOld(x))"
    },
    {
        "NL": "An eclipse can be either solar or lunar.",
        "FOL": "Eclipse(solar) ⊕ Eclipse(lunar)"
    },
    {
        "NL": "A publishing company writes, edits, and publishes books, covering a range of literary genres and market interests.",
        "FOL": "∀x ∃y ∃z ∃w (PublishingCompany(x) → Book(y) ∧ LiteraryGenre(z) ∧ MarketInterest(w) ∧ Writes(x, y) ∧ Edits(x, y) ∧ Publishes(x, y) ∧ Covers(x, z) ∧ Covers(x, w))"
    },
    {
        "NL": "A movie theater screens films for audiences and offers a range of snacks and beverages for consumption during the show.",
        "FOL": "∀x∀y∀z∀w (MovieTheater(x) ∧ Film(y) ∧ Audience(z) ∧ (Snack(w) ∨ Beverage(w)) → (ScreensFor(x, y, z) ∧ OffersForConsumption(x, w)))"
    },
    {
        "NL": "Reading books does not improve intellectual capacity.",
        "FOL": "∀x (ReadBook(x) → ¬ImproveIntellectualCapacity(x))"
    },
    {
        "NL": "A squirrel is scampering in the park during the day.",
        "FOL": "∃x ∃y ∃z (Squirrel(x) ∧ Park(y) ∧ ScamperingIn(x, y) ∧ Day(z))"
    },
    {
        "NL": "A leap year occurs every 4 years, except for years divisible by 100 but not by 400.",
        "FOL": "∀x (Year(x) → (LeapYear(x) ↔ ((DivisibleBy(x, 4) ∧ ¬DivisibleBy(x, 100)) ∨ DivisibleBy(x, 400))))"
    },
    {
        "NL": "A planet has either a solid surface or is a gas giant.",
        "FOL": "∀x (Planet(x) → (SolidSurface(x) ⊕ GasGiant(x)))"
    },
    {
        "NL": "A telephone connects to a network, receives signals, and transmits voices.",
        "FOL": "∀x∀y∀z∀w (Telephone(x) → (ConnectsToNetwork(x, y) ∧ ReceivesSignals(x, z) ∧ TransmitsVoices(x, w)))"
    },
    {
        "NL": "Herbivores eat plants, while carnivores eat other animals.",
        "FOL": "∀x∀y∀z (Herbivore(x) ∧ Plant(y) → Eats(x, y)) ∧ (Carnivore(x) ∧ Animal(z) → Eats(x, z))"
    },
    {
        "NL": "There is a world where no birds fly.",
        "FOL": "∃x ¬∃y (World(x) ∧ Bird(y) ∧ FlyIn(y, x))"
    },
    {
        "NL": "A person is rich or poor.",
        "FOL": "∀x (Person(x) → (Rich(x) ∨ Poor(x)))"
    },
    {
        "NL": "A musical instrument can be either acoustic or electric.",
        "FOL": "∀x (MusicalInstrument(x) → (Acoustic(x) ⊕ Electric(x)))"
    },
    {
        "NL": "A national park attracts tourists if it features picturesque landscapes, diverse flora and fauna, and recreational facilities.",
        "FOL": "∀x (AttractsTourists(x) ↔ (NationalPark(x) ∧ FeaturesPicturesqueLandscapes(x) ∧ DiverseFloraAndFauna(x) ∧ RecreationalFacilities(x)))"
    },
    {
        "NL": "A refrigerator preserves food by maintaining a cool temperature, typically between 35 and 40 degrees Fahrenheit.",
        "FOL": "∀x (Refrigerator(x) → (PreservesFood(x) ∧ MaintainsCoolTemperature(x) ∧ Between35And40DegreesFahrenheit(x)))"
    },
    {
        "NL": "A doctor treats patients, a teacher educates students, and a chef cooks food.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Teacher(y) ∧ Chef(z) → (TreatsPatients(x) ∧ EducatesStudents(y) ∧ CooksFood(z)))"
    },
    {
        "NL": "One can either be a parent or a child in a family, but not both.",
        "FOL": "∀x (Family(x) → (Parent(x) ⊕ Child(x)))"
    },
    {
        "NL": "A device that utilizes a specific technology and caters to a particular market segment is typically a smartphone or a tablet.",
        "FOL": "∀x∀y∀z (Device(x) ∧ UtilizesTechnology(x, y) ∧ CatersToMarketSegment(x, z) → (Smartphone(x) ∨ Tablet(x)))"
    },
    {
        "NL": "A smartphone enables communication through calls, text messages, and internet-based services.",
        "FOL": "∀x (Smartphone(x) → (EnablesCommunication(x, Calls) ∧ EnablesCommunication(x, TextMessages) ∧ EnablesCommunication(x, InternetServices)))"
    },
    {
        "NL": "In a solar system, planets revolve around a central star, and the star provides light and warmth to the planets.",
        "FOL": "∀x ∀y (SolarSystem(x) ∧ Star(y) ∧ CentralStarOf(x, y) → (∀z (Planet(z) ∧ PartOf(z, x) → (RevolvesAround(z, y) ∧ ReceivesLightAndWarmthFrom(z, y)))))"
    },
    {
        "NL": "A person is a doctor if they have a medical degree and they are licensed to practice medicine.",
        "FOL": "∀x (Person(x) ∧ MedicalDegree(x) ∧ LicensedToPracticeMedicine(x) → Doctor(x))"
    },
    {
        "NL": "A movie captivates its audience when it has an engaging storyline and exceptional acting.",
        "FOL": "∀x (Movie(x) ∧ EngagingStoryline(x) ∧ ExceptionalActing(x) → Captivating(x))"
    },
    {
        "NL": "A fish that possesses a streamlined body, has a strong muscular tail, and can swim at high speeds is an agile swimmer.",
        "FOL": "∀x∀y∀z (Fish(x) ∧ PossessesStreamlinedBody(x, y) ∧ StrongMuscularTail(x) ∧ CanSwimAtHighSpeeds(x, z) → AgileSwimmer(x))"
    },
    {
        "NL": "No book that is informative lacks content.",
        "FOL": "∀v (Book(v) → (Informative(v) → ¬LackContent(v)))"
    },
    {
        "NL": "Listening to music can help people relax.",
        "FOL": "∀x (ListeningToMusic(x) → HelpsPeopleRelax(x))"
    },
    {
        "NL": "A location is ideal for stargazing if it has low light pollution and either clear skies or an observatory.",
        "FOL": "∀x (Location(x) ∧ IdealForStargazing(x) ↔ (LowLightPollution(x) ∧ (ClearSkies(x) ∨ Observatory(x))))"
    },
    {
        "NL": "Birds migrate to warmer climates during winter to avoid harsh weather conditions and find food resources.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ WarmerClimate(y) ∧ Winter(w) ∧ HarshWeatherConditions(z) → MigratesToAvoidAndFindResources(x, y, w, z))"
    },
    {
        "NL": "A toy is engaging when it stimulates creativity, encourages learning, and keeps children entertained for extended periods.",
        "FOL": "∀x (Toy(x) ∧ StimulatesCreativity(x) ∧ EncouragesLearning(x) ∧ KeepsChildrenEntertained(x) → Engaging(x))"
    },
    {
        "NL": "A volcano forms when molten rock, ash, and gases escape from a vent in the Earth's crust, often resulting in explosive eruptions or the gradual build-up of solidified lava.",
        "FOL": "∀x∀y (Volcano(x) ∧ (MoltenRock(y) ∨ Ash(y) ∨ Gases(y)) → FormsByEscapeFromVentAndEruptionsOrBuildUp(x, y))"
    },
    {
        "NL": "Lions roar, dogs bark, and birds sing, but all make sounds.",
        "FOL": "∀x∀y∀z (Lion(x) → Roars(x)) ∧ (Dog(y) → Barks(y)) ∧ (Bird(z) → Sings(z)) ∧ (MakesSound(x) ∧ MakesSound(y) ∧ MakesSound(z))"
    },
    {
        "NL": "Hotels provide accommodations for guests, such as rooms or suites.",
        "FOL": "∀x∀y (Hotel(x) ∧ (Room(y) ∨ Suite(y)) → ProvidesAccommodation(x, y))"
    },
    {
        "NL": "Some flowers are fragrant, while others are not.",
        "FOL": "∃x (Flower(x) ∧ Fragrant(x)) ∧ ∃y (Flower(y) ∧ ¬Fragrant(y))"
    },
    {
        "NL": "Henry is a farmer or Laura is not a doctor.",
        "FOL": "Farmer(henry) ∨ ¬Doctor(laura)"
    },
    {
        "NL": "Solar panels generate electricity during daylight, but not during the night.",
        "FOL": "∀x (SolarPanel(x) → (Daylight(x) → GeneratesElectricity(x)) ∧ (Night(x) → ¬GeneratesElectricity(x)))"
    },
    {
        "NL": "A successful company must have good leadership, innovative products, and a loyal customer base.",
        "FOL": "∀x (Company(x) → (Successful(x) ↔ (GoodLeadership(x) ∧ InnovativeProducts(x) ∧ LoyalCustomerBase(x))))"
    },
    {
        "NL": "Not all flowers bloom in spring.",
        "FOL": "¬∀x (Flower(x) → BloomsInSpring(x))"
    },
    {
        "NL": "A tool designed for cutting materials, such as wood or metal, by manually moving the blade back and forth is classified as a saw.",
        "FOL": "∀x (Tool(x) ∧ DesignedForCutting(x) ∧ ManualBladeMovement(x) → Saw(x))"
    },
    {
        "NL": "A vehicle is fuel-efficient if it has low fuel consumption and can travel long distances on a single tank of fuel.",
        "FOL": "∀x (Vehicle(x) ∧ LowFuelConsumption(x) ∧ LongDistanceOnSingleTank(x) → FuelEfficient(x))"
    },
    {
        "NL": "A window lets light in when it is open or transparent.",
        "FOL": "∀x (Window(x) ∧ (Open(x) ∨ Transparent(x)) → LetsLightIn(x))"
    },
    {
        "NL": "A celestial body that orbits a planet, is not self-luminous, and is smaller than the planet it orbits is a moon.",
        "FOL": "∀x ((CelestialBody(x) ∧ OrbitsPlanet(x) ∧ ¬SelfLuminous(x) ∧ SmallerThanPlanet(x)) → Moon(x))"
    },
    {
        "NL": "An object is a plate if it is flat and used for serving food.",
        "FOL": "∀x ((Flat(x) ∧ UsedForServingFood(x)) → Plate(x))"
    },
    {
        "NL": "An herb is a plant that is used for flavoring, fragrance, or medicinal purposes.",
        "FOL": "∀x (Herb(x) → (Plant(x) ∧ (UsedForFlavoring(x) ∨ UsedForFragrance(x) ∨ UsedForMedicinalPurposes(x))))"
    },
    {
        "NL": "A dog is playful or aggressive.",
        "FOL": "∀x (Dog(x) → (Playful(x) ∨ Aggressive(x)))"
    },
    {
        "NL": "A spider is spinning a web, and a fly is buzzing around a lamp.",
        "FOL": "∃x ∃y (Spider(x) ∧ Web(y) ∧ Spinning(x, y)) ∧ ∃z ∃w (Fly(z) ∧ Lamp(w) ∧ BuzzingAround(z, w))"
    },
    {
        "NL": "A place is recognized as a hospital if it has medical equipment, is open to patients, and promotes health.",
        "FOL": "∀x (Place(x) ∧ HasMedicalEquipment(x) ∧ OpenToPatients(x) ∧ PromotesHealth(x) → Hospital(x))"
    },
    {
        "NL": "A smartphone typically includes a camera, a touchscreen, and internet access.",
        "FOL": "∀x (Smartphone(x) → (HasCamera(x) ∧ HasTouchscreen(x) ∧ HasInternetAccess(x)))"
    },
    {
        "NL": "A vehicle can be either a car or a bike, but not both.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ⊕ Bike(x)))"
    },
    {
        "NL": "Not every artist who paints abstract or realism has held an exhibition or sold a piece.",
        "FOL": "¬∀x (Artist(x) ∧ (PaintsAbstract(x) ∨ PaintsRealism(x)) → (HeldExhibition(x) ∨ SoldPiece(x)))"
    },
    {
        "NL": "Dogs can be trained by trainers to perform tasks such as guiding visually impaired people or detecting substances.",
        "FOL": "∀x∀y∀z (Dog(x) ∧ Trainer(y) ∧ Task(z) ∧ (GuideVisuallyImpaired(z) ∨ DetectSubstances(z)) → Trains(y, x, z))"
    },
    {
        "NL": "Dogs bark when they sense danger or are excited.",
        "FOL": "∀x (Dog(x) → (SensesDanger(x) ∨ Excited(x) → Barks(x)))"
    },
    {
        "NL": "Some cars are fast.",
        "FOL": "∃x (Car(x) ∧ Fast(x))"
    },
    {
        "NL": "Fossil fuels, such as coal, oil, and natural gas, are formed from the remains of ancient plants and animals and are used as energy sources.",
        "FOL": "∀x ∀y ∀z (FossilFuel(x) ∧ (Coal(y) ∨ Oil(y) ∨ NaturalGas(y)) → (FormedFromAncientPlantsAndAnimals(x) ∧ UsedAsEnergySource(x)))"
    },
    {
        "NL": "A car needs fuel, maintenance, and a good driver to run efficiently.",
        "FOL": "∀z (Car(z) → (HasFuel(z) ∧ GetsMaintenance(z) ∧ HasGoodDriver(z)) → RunsEfficiently(z))"
    },
    {
        "NL": "A bike rides from a park and arrives at a house without crossing any bridges.",
        "FOL": "∃x ∃y ∃z (Bike(x) ∧ Park(y) ∧ House(z) → RidesFrom(x, y) ∧ ArrivesAt(x, z) ∧ ¬∃w (Bridge(w) ∧ Crosses(x, w)))"
    },
    {
        "NL": "A battery can store and provide electricity.",
        "FOL": "∀x (Battery(x) → (CanStoreElectricity(x) ∧ CanProvideElectricity(x)))"
    },
    {
        "NL": "A computer is a desktop or a laptop.",
        "FOL": "∀x (Computer(x) → (Desktop(x) ∨ Laptop(x)))"
    },
    {
        "NL": "In a laboratory, scientists conduct experiments and test hypotheses using specialized equipment and techniques.",
        "FOL": "∀x∀y (Laboratory(x) ∧ Scientist(y) ∧ ConductsExperiments(y, x) ∧ TestsHypotheses(y) ∧ UsesSpecializedEquipmentAndTechniques(y) → PerformsResearch(y, x))"
    },
    {
        "NL": "In a triangle, if two angles have equal measures, the sides opposite to them are also equal.",
        "FOL": "∀x ∀y ∀z (Triangle(x) ∧ EqualAngles(x, y, z) → EqualOppositeSides(x, y, z))"
    },
    {
        "NL": "When a wind turbine is exposed to sufficient wind speed, it converts wind energy into electrical energy that can be used to power homes or businesses.",
        "FOL": "∀x ∀y (WindTurbine(x) ∧ SufficientWindSpeed(x, y) → ConvertsWindToElectricalEnergy(x, y))"
    },
    {
        "NL": "A teacher is correcting papers in the school, or a mechanic is repairing a car in the garage.",
        "FOL": "∃x ∃y (Teacher(x) ∧ Papers(y) ∧ Correcting(x, y) ∧ InTheSchool(x)) ∨ ∃z ∃w (Mechanic(z) ∧ Car(w) ∧ Repairing(z, w) ∧ InTheGarage(z))"
    },
    {
        "NL": "A light is either on or off, not both.",
        "FOL": "∀x (Light(x) → (On(x) ⊕ Off(x)))"
    },
    {
        "NL": "If a tree sheds its leaves in autumn, it is deciduous.",
        "FOL": "∀x (Tree(x) ∧ ShedsLeavesInAutumn(x) → Deciduous(x))"
    },
    {
        "NL": "Laptops with long-lasting batteries allow users to work or study for extended periods without needing to recharge.",
        "FOL": "∀x (Laptop(x) ∧ LongLastingBattery(x) → AllowsExtendedUseWithoutRecharging(x))"
    },
    {
        "NL": "There is no orange square that is big.",
        "FOL": "¬∃x (Orange(x) ∧ Square(x) ∧ ¬Big(x))"
    },
    {
        "NL": "A guitar produces sound, can be acoustic or electric, and might have nylon or steel strings.",
        "FOL": "∀x (Guitar(x) → (ProducesSound(x) ∧ ((Acoustic(x) ∧ ¬Electric(x)) ∨ (¬Acoustic(x) ∧ Electric(x))) ∧ (NylonStrings(x) ∨ SteelStrings(x))))"
    },
    {
        "NL": "An item is a book if it contains written or printed text, is bound with a cover, and has multiple pages.",
        "FOL": "∀x (Item(x) ∧ ContainsWrittenOrPrintedText(x) ∧ BoundWithCover(x) ∧ HasMultiplePages(x) → Book(x))"
    },
    {
        "NL": "Every being who backs another will receive backing from someone.",
        "FOL": "∀x ∃y (Being(x) ∧ Being(y) ∧ Back(x, y) → ∃z (Being(z) ∧ WillBack(z, x)))"
    },
    {
        "NL": "A successful business maintains customer satisfaction, generates profit, and innovates to stay competitive.",
        "FOL": "∀x (Business(x) ∧ CustomerSatisfaction(x) ∧ GeneratesProfit(x) ∧ Innovates(x) → Successful(x))"
    },
    {
        "NL": "A candidate is elected if they receive more votes than their opponent.",
        "FOL": "∀x ∀y (Candidate(x) ∧ Candidate(y) ∧ MoreVotes(x, y) → Elected(x))"
    },
    {
        "NL": "A person who has comprehensive and authoritative knowledge is an expert.",
        "FOL": "∀x (Person(x) ∧ HasComprehensiveKnowledge(x) ∧ HasAuthoritativeKnowledge(x) → Expert(x))"
    },
    {
        "NL": "A student either passes or fails an exam.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) → (Pass(x, y) ⊕ Fail(x, y)))"
    },
    {
        "NL": "Rapid urbanization leads to the loss of green spaces, which in turn contributes to increased air pollution and decreased biodiversity.",
        "FOL": "∀x∀y (RapidUrbanization(x) ∧ GreenSpaces(y) → (LeadsToLossOf(x, y) ∧ ContributesToIncreasedAirPollution(x) ∧ DecreasesBiodiversity(y)))"
    },
    {
        "NL": "During photosynthesis, plants convert sunlight, carbon dioxide, and water into glucose and oxygen, which they use for growth and respiration.",
        "FOL": "∀x∀y∀z (Plant(x) ∧ Sunlight(y) ∧ CarbonDioxide(z) → (Photosynthesis(x, y, z) → (ConvertsIntoGlucose(x) ∧ ConvertsIntoOxygen(x) ∧ UsesForGrowthAndRespiration(x))))"
    },
    {
        "NL": "An element is radioactive when it undergoes spontaneous decay, emitting radiation in the process.",
        "FOL": "∀x (Element(x) ∧ UndergoesSpontaneousDecay(x) ∧ EmitsRadiation(x) → Radioactive(x))"
    },
    {
        "NL": "A person is a player if they practice regularly and participate in games",
        "FOL": "∀x (Person(x) ∧ PracticeRegularly(x) ∧ ParticipatesInGames(x) → Player(x))"
    },
    {
        "NL": "Sculptors create sculptures using materials like stone, wood, or metal.",
        "FOL": "∀x ∀y ∀z (Sculptor(x) ∧ Sculpture(y) ∧ (Stone(z) ∨ Wood(z) ∨ Metal(z)) → CreatesUsingMaterial(x, y, z))"
    },
    {
        "NL": "If a person creates visual art using a digital medium, they are considered a digital artist.",
        "FOL": "∀x (CreatesVisualArtUsingDigitalMedium(x) → DigitalArtist(x))"
    },
    {
        "NL": "Every object is either a rectangle or a circle, but it cannot be both.",
        "FOL": "∀x (Object(x) → (Rectangle(x) ⊕ Circle(x)))"
    },
    {
        "NL": "A hawk is chasing a mouse.",
        "FOL": "∃x ∃y (Hawk(x) ∧ Mouse(y) ∧ Chasing(x, y))"
    },
    {
        "NL": "A hexagon can be regular or irregular, but not both.",
        "FOL": "∀x (Hexagon(x) → (Regular(x) ⊕ Irregular(x)))"
    },
    {
        "NL": "Mirrors reflect images, magnets attract metals, and batteries store electrical energy.",
        "FOL": "∀x (Mirror(x) → ReflectsImages(x)) ∧ ∀y (Magnet(y) → AttractsMetals(y)) ∧ ∀z (Battery(z) → StoresElectricalEnergy(z))"
    },
    {
        "NL": "A film script is a screenplay if it spells out the adventure of a special individual, penned by a team-mate or a trustworthy friend.",
        "FOL": "∀x ∃y ∃z (FilmScript(x) ∧ Individual(y) ∧ (Teammate(z) ∨ TrustworthyFriend(z)) ∧ SpellsAdventure(x, y) ∧ WrittenBy(x, z) → Screenplay(x))"
    },
    {
        "NL": "A place is a savanna if it is a grassy plain with few trees, typically found in tropical and subtropical regions.",
        "FOL": "∀x (Savanna(x) ↔ (Place(x) ∧ GrassyPlain(x) ∧ FewTrees(x) ∧ TropicalOrSubtropicalRegion(x)))"
    },
    {
        "NL": "An electronic device that receives signals can be a television, a radio, or a smartphone.",
        "FOL": "∀x (ElectronicDevice(x) ∧ ReceivesSignals(x) → Television(x) ∨ Radio(x) ∨ Smartphone(x))"
    },
    {
        "NL": "A person is considered a translator if they convert written or spoken language from one language to another, ensuring the meaning and context are accurately conveyed.",
        "FOL": "∀x (Person(x) ∧ ConvertsLanguage(x) ∧ FromOneLanguageToAnother(x) ∧ EnsuresMeaningAndContextAccuracy(x) → Translator(x))"
    },
    {
        "NL": "All students do not like math.",
        "FOL": "¬∀x (Student(x) → LikeMath(x))"
    },
    {
        "NL": "Lemons are sour, apples are sweet, and oranges are tangy.",
        "FOL": "∀x (Lemon(x) → Sour(x)) ∧ ∀y (Apple(y) → Sweet(y)) ∧ ∀z (Orange(z) → Tangy(z))"
    },
    {
        "NL": "A painting is abstract if it does not represent reality or has no recognizable subjects.",
        "FOL": "∀x (Painting(x) ∧ (¬RepresentsReality(x) ∨ NoRecognizableSubjects(x)) → Abstract(x))"
    },
    {
        "NL": "Photosynthesis is the process by which green plants convert sunlight into chemical energy stored in glucose.",
        "FOL": "∀x ∀y ∀z (GreenPlant(x) ∧ Sunlight(y) ∧ ChemicalEnergy(z) ∧ Photosynthesis(x) ∧ Converts(x, y, z) → StoredInGlucose(z))"
    },
    {
        "NL": "A book becomes a bestseller if it sells many copies and receives positive reviews.",
        "FOL": "∀x (Book(x) ∧ SellsManyCopies(x) ∧ ReceivesPositiveReviews(x) → Bestseller(x))"
    },
    {
        "NL": "Some engineers are pilots.",
        "FOL": "∃x (Engineer(x) ∧ Pilot(x))"
    },
    {
        "NL": "Maria is not a doctor and Claire is a doctor.",
        "FOL": "¬Doctor(maria) ∧ Doctor(claire)"
    },
    {
        "NL": "Stars emit light due to nuclear reactions, while planets reflect light from nearby stars.",
        "FOL": "∀x (Star(x) → EmitLightDueToNuclearReactions(x)) ∧ ∀y (Planet(y) → ReflectLightFromNearbyStars(y))"
    },
    {
        "NL": "A green energy solution, like tidal or biomass energy, can supply power without relying on natural gas, and it contributes to decreasing greenhouse gases.",
        "FOL": "∀x (GreenEnergySolution(x) ∧ (TidalEnergy(x) ∨ BiomassEnergy(x)) → (SuppliesPowerWithoutRelyingOnNaturalGas(x) ∧ ContributesDecreaseGreenhouseGases(x)))"
    },
    {
        "NL": "A river flows through a landscape, carrying water and sediment from its source to its mouth, where it meets a larger body of water.",
        "FOL": "∀x (River(x) → (FlowsThroughLandscape(x) ∧ CarriesWaterAndSediment(x) ∧ MeetsLargerBodyOfWater(x)))"
    },
    {
        "NL": "Organisms that can produce their own food through photosynthesis are classified as autotrophs.",
        "FOL": "∀x ((Organism(x) ∧ CanProduceOwnFoodThroughPhotosynthesis(x)) → Autotroph(x))"
    },
    {
        "NL": "An electronic component that stores energy in an electric field, has two conductive plates separated by an insulator, and can block direct current while allowing alternating current to pass is a capacitor.",
        "FOL": "∀x (ElectronicComponent(x) ∧ StoresEnergyInElectricField(x) ∧ HasTwoConductivePlates(x) ∧ SeparatedByInsulator(x) ∧ (BlocksDirectCurrent(x) ∧ AllowsAlternatingCurrentToPass(x)) → Capacitor(x))"
    },
    {
        "NL": "An amphibian, such as a frog or a salamander, is a cold-blooded vertebrate that typically lives in water during its larval stage and on land as an adult, breathing air and having moist skin.",
        "FOL": "∀x ∀y ∀z (Amphibian(x) ∧ (Frog(y) ∨ Salamander(y)) → (ColdBlooded(x) ∧ Vertebrate(x) ∧ LivesInWaterDuringLarvalStage(x, z) ∧ LivesOnLandAsAdult(x) ∧ BreathesAir(x) ∧ HasMoistSkin(x)))"
    },
    {
        "NL": "A chef cooks, garnishes, and serves dishes to please patrons.",
        "FOL": "∀x (Chef(x) → ∀y (Dishes(y) → (CooksToPlease(x, y) ∧ GarnishesToPlease(x, y) ∧ ServesToPlease(x, y))))"
    },
    {
        "NL": "A celestial object that orbits a star, has a nearly round shape, and has cleared its orbit of other debris is a planet.",
        "FOL": "∀x (CelestialObject(x) ∧ OrbitsStar(x) ∧ NearlyRoundShape(x) ∧ ClearedOrbitOfDebris(x) → Planet(x))"
    },
    {
        "NL": "A transportation system that operates underground is characterized by tunnels, stations, and tracks.",
        "FOL": "∀x (TransportationSystem(x) ∧ OperatesUnderground(x) → HasTunnels(x) ∧ HasStations(x) ∧ HasTracks(x))"
    },
    {
        "NL": "A film can be either horror or comedy, but not both.",
        "FOL": "∀x (Film(x) → (Horror(x) ⊕ Comedy(x)))"
    },
    {
        "NL": "All stars are hot.",
        "FOL": "∀x (Star(x) → Hot(x))"
    },
    {
        "NL": "A traveler visits a country if they obtain a valid visa and travel to the country's territory.",
        "FOL": "∀x ∀y ∀z (Traveler(x) ∧ Country(y) ∧ Visa(z) ∧ ValidVisa(x, z, y) ∧ TravelsTo(x, y) → Visits(x, y, z))"
    },
    {
        "NL": "A job candidate is eligible for an interview if they meet the required qualifications, possess relevant experience, and are available for the scheduled interview time.",
        "FOL": "∀x∀y (Candidate(x) ∧ Job(y) → (EligibleForInterview(x, y) ↔ (MeetsQualifications(x, y) ∧ HasRelevantExperience(x, y) ∧ AvailableForInterview(x))))"
    },
    {
        "NL": "A fjord is a long, narrow inlet with steep sides or cliffs, created by glacial erosion or the submergence of a glaciated valley.",
        "FOL": "∀x (Fjord(x) → (LongNarrowInlet(x) ∧ SteepSidesOrCliffs(x) ∧ CreatedByGlacialErosionOrSubmergence(x)))"
    },
    {
        "NL": "A computer mouse is used for navigation and clicking, while a keyboard is used for typing.",
        "FOL": "∀x ∀y (ComputerMouse(x) ∧ Keyboard(y) → (UsedForNavigation(x) ∧ UsedForClicking(x) ∧ UsedForTyping(y)))"
    },
    {
        "NL": "A cat is resting on the sofa.",
        "FOL": "∃x ∃y (Cat(x) ∧ Sofa(y) ∧ RestingOn(x, y))"
    },
    {
        "NL": "No smallest integer exists, and there is no largest integer either.",
        "FOL": "∀x (Integer(x) → (∃y (Integer(y) ∧ Larger(y, x)) ∧ ∃z (Integer(z) ∧ Smaller(z, x))))"
    },
    {
        "NL": "Some boats are steam powered.",
        "FOL": "∃x (Boat(x) ∧ SteamPowered(x))"
    },
    {
        "NL": "An individual who is an effective listener is more likely to understand and empathize with others.",
        "FOL": "∀x (EffectiveListener(x) → (UnderstandOthers(x) ∧ EmpathizeWithOthers(x)))"
    },
    {
        "NL": "No boat is seaworthy unless it has been inspected thoroughly, but not all of them are comfortable to ride.",
        "FOL": "¬∃x (Boat(x) ∧ (Seaworthy(x) ∨ InspectedThoroughly(x))) ∧ ¬∀y (Boat(y) → ComfortableToRide(y))"
    },
    {
        "NL": "All authors who carry creativity and language skills are recognized.",
        "FOL": "∀z (Author(z) ∧ HasCreativity(z) ∧ HasLanguageSkills(z) → Recognized(z))"
    },
    {
        "NL": "A violin is a stringed instrument played with a bow.",
        "FOL": "∀x (Violin(x) → (StringedInstrument(x) ∧ PlayedWithBow(x)))"
    },
    {
        "NL": "A machine operates efficiently if it is well-maintained and regularly serviced.",
        "FOL": "∀x (Machine(x) ∧ WellMaintained(x) ∧ RegularlyServiced(x) → OperatesEfficiently(x))"
    },
    {
        "NL": "In an art gallery, paintings are displayed, visitors admire the artwork, and curators organize exhibitions.",
        "FOL": "∀x∀y∀z (ArtGallery(x) ∧ Painting(y) ∧ Curator(z) → (DisplaysPaintings(x, y) ∧ AdmiresArtwork(y) ∧ OrganizesExhibitions(z, x)))"
    },
    {
        "NL": "In a group of dogs, some are small and friendly, while others are large and protective.",
        "FOL": "∃x ∃y (Dog(x) ∧ Dog(y) ∧ Small(x) ∧ Friendly(x) ∧ Large(y) ∧ Protective(y))"
    },
    {
        "NL": "Planets orbit around stars, influenced by their gravitational pull, while moons orbit around planets, also affected by gravitational forces.",
        "FOL": "∀x∀y∀z (Planet(x) ∧ Star(y) ∧ Moon(z) → (OrbitsAround(x, y) ∧ InfluencedByGravitationalPull(x, y) ∧ OrbitsAround(z, x) ∧ AffectedByGravitationalForces(z, x)))"
    },
    {
        "NL": "A laptop has a specific screen size, a certain amount of memory, and a keyboard.",
        "FOL": "∀x (Laptop(x) → (∃y ScreenSize(y) ∧ HasScreenSize(x, y)) ∧ (∃z Memory(z) ∧ HasMemory(x, z)) ∧ HasKeyboard(x))"
    },
    {
        "NL": "An airplane flies by generating lift using its wings.",
        "FOL": "∀x∀y (Airplane(x) ∧ Wing(y) → GeneratesLift(x, y))"
    },
    {
        "NL": "A sports event could be played indoors or outdoors, not both.",
        "FOL": "∀x (SportsEvent(x) → (IndoorEvent(x) ⊕ OutdoorEvent(x)))"
    },
    {
        "NL": "A building is architecturally interesting if it doesn't have a common design and includes characteristics of modern or historical styles.",
        "FOL": "∀x (Building(x) ∧ ¬CommonDesign(x) ∧ (ModernStyle(x) ∨ HistoricalStyle(x)) → ArchitecturallyInteresting(x))"
    },
    {
        "NL": "Rainforests host a diverse range of plant and insect species due to their high levels of rainfall and humidity.",
        "FOL": "∀x∀y∀z (Rainforest(x) ∧ PlantSpecies(y) ∧ InsectSpecies(z) → (HostsDiverseRange(x) ↔ (HighRainfall(x) ∧ HighHumidity(x))))"
    },
    {
        "NL": "A plant that grows in full sunlight, requires little water, and is resistant to pests can thrive in arid conditions.",
        "FOL": "∀x (Plant(x) ∧ GrowsInFullSunlight(x) ∧ RequiresLittleWater(x) ∧ ResistantToPests(x) → ThrivesInAridConditions(x))"
    },
    {
        "NL": "To be a suitable habitat for a particular species, an environment must meet its temperature, food, and shelter requirements.",
        "FOL": "∀x ∀y (Environment(x) ∧ Species(y) ∧ MeetsTemperatureRequirements(x, y) ∧ MeetsFoodRequirements(x, y) ∧ MeetsShelterRequirements(x, y) → SuitableHabitat(x, y))"
    },
    {
        "NL": "An effective marketing campaign that utilizes multiple channels, targets the right audience, and has a clear message can increase brand awareness.",
        "FOL": "∀x (MarketingCampaign(x) ∧ UtilizesMultipleChannels(x) ∧ TargetsRightAudience(x) ∧ ClearMessage(x) → IncreasesBrandAwareness(x))"
    },
    {
        "NL": "A smartphone can access the internet only if it has a Wi-Fi connection or mobile data enabled.",
        "FOL": "∀x (Smartphone(x) ∧ AccessInternet(x) → (HasWiFi(x) ∨ MobileDataEnabled(x)))"
    },
    {
        "NL": "Some birds don't fly.",
        "FOL": "∃x (Bird(x) ∧ ¬Fly(x))"
    },
    {
        "NL": "Every student studies something they like and likes something they do not study.",
        "FOL": "∀x (Student(x) → (∃y (Like(x, y) ∧ Study(x, y)) ∧ ∃z (Like(x, z) ∧ ¬Study(x, z))))"
    },
    {
        "NL": "A rectangle has parallel sides, whereas a circle does not have any sides.",
        "FOL": "∀x∀y (Rectangle(x) → HasParallelSides(x)) ∧ (Circle(y) → ¬HasSides(y))"
    },
    {
        "NL": "A bank offers loans or credit cards.",
        "FOL": "∀x (Bank(x) → (OffersLoans(x) ∨ OffersCreditCards(x)))"
    },
    {
        "NL": "A flower attracts bees with its color and scent.",
        "FOL": "∀x∀y (Flower(x) ∧ Bee(y) ∧ Color(x) ∧ Scent(x) → Attracts(x, y))"
    },
    {
        "NL": "A park is crowded if it has many visitors or hosts events, but not if it has limited space.",
        "FOL": "∀x (Park(x) → (Crowded(x) ↔ ((ManyVisitors(x) ∨ HostsEvents(x)) ∧ ¬LimitedSpace(x))))"
    },
    {
        "NL": "A metal is either magnetic or non-magnetic.",
        "FOL": "∀x (Metal(x) → (Magnetic(x) ∨ NonMagnetic(x)))"
    },
    {
        "NL": "A person is considered an astronomer if they study celestial objects, their movements, and their physical and chemical properties.",
        "FOL": "∀x (Person(x) ∧ StudiesCelestialObjects(x) ∧ StudiesObjectMovementsAndProperties(x) → Astronomer(x))"
    },
    {
        "NL": "Musicians compose music, perform on instruments, and record their creations.",
        "FOL": "∀x∀y∀z (Musician(x) ∧ Music(y) ∧ Instrument(z) → (Composes(x, y) ∧ PerformsOn(x, z) ∧ Records(x, y)))"
    },
    {
        "NL": "A password is secure if it contains both uppercase and lowercase letters, but not if it's too short.",
        "FOL": "∀x (Password(x) ∧ UppercaseLetters(x) ∧ LowercaseLetters(x) ∧ ¬TooShort(x) → Secure(x))"
    },
    {
        "NL": "Every gardener has planted all seeds from a supplier.",
        "FOL": "∃x (Gardener(x) ∧ ∃y (Supplier(y) ∧ ∀z (Seed(z) ∧ SuppliedBy(z, y) → Planted(x, z))))"
    },
    {
        "NL": "Doctors treat patients, and nurses assist them.",
        "FOL": "∀x∀y ((Doctor(x) ∧ Patient(y) → Treats(x, y)) ∧ (Nurse(x) ∧ Patient(y) → Assists(x, y)))"
    },
    {
        "NL": "A paper is an obituary if it narrates the life story of a specific individual, written by a family member or close friend",
        "FOL": "∀x ∃y ∃z (Paper(x) ∧ Individual(y) ∧ (FamilyMember(z) ∨ CloseFriend(z)) ∧ NarratesLifeStory(x, y) ∧ WrittenBy(x, z) → Obituary(x))"
    },
    {
        "NL": "A vehicle is considered environmentally friendly if it uses clean energy and produces low emissions.",
        "FOL": "∀x (Vehicle(x) → (EnvironmentallyFriendly(x) ↔ (UsesCleanEnergy(x) ∧ ProducesLowEmissions(x))))"
    },
    {
        "NL": "A computer program that can learn from data, is designed to solve complex problems, and operates within a specific domain is typically an artificial intelligence application.",
        "FOL": "∀x∀y∀z (ComputerProgram(x) ∧ LearnsFromData(x) ∧ SolvesComplexProblems(x) ∧ SpecificDomain(y) ∧ OperatesIn(x, y) ∧ Application(z) → AIApplication(x))"
    },
    {
        "NL": "A hospital has doctors and nurses on staff, and it provides care for patients with different medical conditions.",
        "FOL": "∀x∀y (Hospital(x) ∧ MedicalCondition(y) → (HasDoctors(x) ∧ HasNurses(x) ∧ ProvidesCare(x, y)))"
    },
    {
        "NL": "Snakes are reptiles that have scales and lay eggs.",
        "FOL": "∀x (Snake(x) → Reptile(x) ∧ HasScales(x) ∧ LaysEggs(x))"
    },
    {
        "NL": "A bank provides loans to customers with good credit scores and stable incomes, but not to customers with bad credit scores.",
        "FOL": "∀x∀y (Bank(x) ∧ Customer(y) → (ProvidesLoans(x, y) ↔ (GoodCreditScore(y) ∧ StableIncome(y)) ∧ ¬BadCreditScore(y)))"
    },
    {
        "NL": "A predator hunts its prey if the prey is within its habitat and the predator is hungry.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) ∧ WithinHabitat(y, x) ∧ Hungry(x) → Hunts(x, y))"
    },
    {
        "NL": "Not all cats catch mice.",
        "FOL": "∃x (Cat(x) ∧ ¬CatchMice(x))"
    },
    {
        "NL": "A musical performance captivates the audience with skilled musicians and a diverse repertoire.",
        "FOL": "∀x (MusicalPerformance(x) ∧ SkilledMusicians(x) ∧ DiverseRepertoire(x) → CaptivatesAudience(x))"
    },
    {
        "NL": "An object is a cone if it has a circular base connected to a single point by straight lines.",
        "FOL": "∀x (Cone(x) ↔ (Object(x) ∧ CircularBase(x) ∧ ∃y (SinglePoint(y) ∧ ConnectedByStraightLines(x, y))))"
    },
    {
        "NL": "A substance is flammable if it ignites easily or has a low flash point.",
        "FOL": "∀x (Substance(x) ∧ (IgnitesEasily(x) ∨ LowFlashPoint(x)) → Flammable(x))"
    },
    {
        "NL": "Hiking is an outdoor activity, swimming is a water-based activity, and yoga promotes flexibility and relaxation.",
        "FOL": "∀x ∀y ∀z (Hiking(x) ∧ Swimming(y) ∧ Yoga(z) → (OutdoorActivity(x) ∧ WaterBasedActivity(y) ∧ (PromotesFlexibility(z) ∧ PromotesRelaxation(z))))"
    },
    {
        "NL": "A type of footwear that covers the entire foot, has a thick sole, and is designed for outdoor activities is classified as a boot.",
        "FOL": "∀x (Footwear(x) ∧ CoversEntireFoot(x) ∧ ThickSole(x) ∧ DesignedForOutdoorActivities(x) → Boot(x))"
    },
    {
        "NL": "An underwater ecosystem that consists of coral structures, a variety of marine species, and clear water is classified as a coral reef.",
        "FOL": "∀x (UnderwaterEcosystem(x) ∧ CoralStructures(x) ∧ VarietyOfMarineSpecies(x) ∧ ClearWater(x) → CoralReef(x))"
    },
    {
        "NL": "A sustainable urban development plan prioritizes green spaces, supports public transportation infrastructure, and encourages energy-efficient building designs.",
        "FOL": "∀x (UrbanDevelopmentPlan(x) ∧ PrioritizesGreenSpaces(x) ∧ SupportsPublicTransportationInfrastructure(x) ∧ EncouragesEnergyEfficientBuildingDesigns(x) → Sustainable(x))"
    },
    {
        "NL": "In a basketball game, a player can either pass the ball, shoot, or dribble.",
        "FOL": "∀x (BasketballPlayer(x) → (Pass(x) ⊕ Shoot(x) ⊕ Dribble(x)))"
    },
    {
        "NL": "A circle connects to a square only if that square connects back to it.",
        "FOL": "∀x (Circle(x) → ∀y (Square(y) ∧ ConnectsTo(x, y) → ConnectsTo(y, x)))"
    },
    {
        "NL": "A building is an architectural landmark if it possesses unique design features and historical or cultural significance.",
        "FOL": "∀x (Building(x) ∧ UniqueDesignFeatures(x) ∧ (HistoricalSignificance(x) ∨ CulturalSignificance(x)) → ArchitecturalLandmark(x))"
    },
    {
        "NL": "Some students either read books or watch movies, but do not do both.",
        "FOL": "∃x (Student(x) ∧ (ReadBook(x) ⊕ WatchMovie(x)))"
    },
    {
        "NL": "Some mammals lay eggs, while others give live birth.",
        "FOL": "∃x∃y (Mammal(x) ∧ Mammal(y) ∧ (LaysEggs(x) ∨ GivesLiveBirth(y)))"
    },
    {
        "NL": "An object could be a square, a circle, or a triangle.",
        "FOL": "∀x (Object(x) → (Square(x) ∨ Circle(x) ∨ Triangle(x)))"
    },
    {
        "NL": "All buildings are large unless they are cabins.",
        "FOL": "∀x (Building(x) → (¬Cabin(x) → Large(x)))"
    },
    {
        "NL": "Some insects can fly, while others cannot.",
        "FOL": "∃x (Insect(x) ∧ CanFly(x)) ∧ ∃y (Insect(y) ∧ ¬CanFly(y))"
    },
    {
        "NL": "Babies cry when they are hungry.",
        "FOL": "∀x∀y (Baby(x) ∧ Hungry(y) → CriesWhen(x, y))"
    },
    {
        "NL": "If a tree bears fruit, then it requires sunlight and water.",
        "FOL": "∀x (Tree(x) ∧ BearsFruit(x) → (RequiresSunlight(x) ∧ RequiresWater(x)))"
    },
    {
        "NL": "Bees are insects that collect nectar from flowers and produce honey, while ants are social insects that build colonies and gather food for their community.",
        "FOL": "∀x∀y (Bee(x) ∧ Ant(y) → (CollectsNectar(x) ∧ ProducesHoney(x)) ∧ (SocialInsect(y) ∧ BuildsColonies(y) ∧ GathersFoodForCommunity(y)))"
    },
    {
        "NL": "A cell can be plant, animal, or fungi.",
        "FOL": "∀x (Cell(x) → (Plant(x) ∨ Animal(x) ∨ Fungi(x)))"
    },
    {
        "NL": "A machine is classified as a robot if it is capable of performing tasks autonomously and can be programmed to execute a series of actions.",
        "FOL": "∀x (Robot(x) ↔ (Machine(x) ∧ PerformsTasksAutonomously(x) ∧ CanBeProgrammedToExecuteSeriesOfActions(x)))"
    },
    {
        "NL": "A person can be a grandparent if they have a child who has a child.",
        "FOL": "∀x (Person(x) ∧ ∃y ∃z (Child(y, x) ∧ Child(z, y)) → Grandparent(x))"
    },
    {
        "NL": "A refrigerator preserves food by maintaining low temperatures and has shelves, but it is not a freezer.",
        "FOL": "∀x (Refrigerator(x) ↔ (PreservesFood(x) ∧ MaintainsLowTemperature(x) ∧ HasShelves(x) ∧ ¬Freezer(x)))"
    },
    {
        "NL": "Each psychologist who is expert in child and adolescent psychology, unless they attained a significant honor, has either written in acclaimed psychology publications or has not imparted lectures at institutions.",
        "FOL": "∀x (Psychologist(x) ∧ ExpertInChildrenPsychology(x) ∧ ExpertInAdolescentPsychology(x) ∨ AttainedSignificantHonor(x) → (WrittenInAcclaimedPsychologyPublications(x) ∨ ¬ImpartedLecturesAtInstitutions(x)))"
    },
    {
        "NL": "Not all songs that are hits, and none of them are unpublished.",
        "FOL": "¬∀x (Song(x) → Hit(x)) ∧ ∀y (Song(y) → ¬Unpublished(y))"
    },
    {
        "NL": "A movie can be a drama, requiring deep character studies, and receive critical acclaim, or it can be a comedy, with light-hearted moments, and be watched frequently.",
        "FOL": "∀x (Movie(x) → ((Drama(x) ∧ RequiresCharacterStudy(x) ∧ CriticalAcclaim(x)) ⊕ (Comedy(x) ∧ LightHeartedMoments(x) ∧ WatchedFrequently(x))))"
    },
    {
        "NL": "An animal is a mammal if it has hair or fur, and gives birth to live young.",
        "FOL": "∀x (Animal(x) ∧ (HasHair(x) ∨ HasFur(x)) ∧ GivesBirthToLiveYoung(x) → Mammal(x))"
    },
    {
        "NL": "Some dogs are good at guarding property because they are large and have a strong sense of territory.",
        "FOL": "∃x∀y (Dog(x) ∧ Property(y) ∧ Large(x) ∧ StrongSenseOfTerritory(x) → GoodAtGuarding(x, y))"
    },
    {
        "NL": "A writer composes text using language to communicate ideas or tell stories.",
        "FOL": "∀x (Writer(x) → ComposesText(x))"
    },
    {
        "NL": "A restaurant can earn a Michelin star if it serves delicious food, has an elegant ambiance, and employs an experienced chef, but not if it has poor service.",
        "FOL": "∀x (Restaurant(x) ∧ EarnMichelinStar(x) ↔ (DeliciousFood(x) ∧ ElegantAmbiance(x) ∧ ExperiencedChef(x) ∧ ¬PoorService(x)))"
    },
    {
        "NL": "An owl is nocturnal and hunts, but it does not sing.",
        "FOL": "∃x (Owl(x) ∧ Nocturnal(x) ∧ Hunts(x) ∧ ¬Sings(x))"
    },
    {
        "NL": "An animal is considered domesticated if it is kept as a pet or used for work by humans.",
        "FOL": "∀x (Animal(x) ∧ (KeptAsPet(x) ∨ UsedForWorkByHumans(x)) → Domesticated(x))"
    },
    {
        "NL": "A robot can pick up an object if its battery is charged, and it fails to do so if the battery is not charged or the object is too heavy.",
        "FOL": "∀x ∀y (Robot(x) ∧ Object(y) → ((ChargedBattery(x) ∧ ¬TooHeavy(y)) → PicksUp(x, y)) ∧ ((¬ChargedBattery(x) ∨ TooHeavy(y)) → ¬PicksUp(x, y)))"
    },
    {
        "NL": "Fruit is either sweet or sour.",
        "FOL": "∀x (Fruit(x) → Sweet(x) ⊕ Sour(x))"
    },
    {
        "NL": "A computer requires an operating system, software applications, and hardware components such as a processor, memory, and storage devices.",
        "FOL": "∀x (Computer(x) → (RequiresOperatingSystem(x) ∧ RequiresSoftwareApplications(x) ∧ RequiresHardwareComponents(x, Processor) ∧ RequiresHardwareComponents(x, Memory) ∧ RequiresHardwareComponents(x, StorageDevices)))"
    },
    {
        "NL": "A building that has multiple floors, an elevator system, and serves as a residence for multiple families is an apartment building.",
        "FOL": "∀x (Building(x) ∧ HasMultipleFloors(x) ∧ HasElevatorSystem(x) ∧ ServesAsResidenceForMultipleFamilies(x) → ApartmentBuilding(x))"
    },
    {
        "NL": "A book x is published by publisher y in language z if the author has completed the manuscript, and there is a demand for the content in the target language.",
        "FOL": "∀x ∀y ∀z (Book(x) ∧ Publisher(y) ∧ Language(z) ∧ ManuscriptCompleted(x) ∧ DemandInTargetLanguage(x, z) → PublishedByInLanguage(x, y, z))"
    },
    {
        "NL": "In a sports tournament, a team advances to the next round if they win the match or if they have a higher overall score than their opponent.",
        "FOL": "∀x∀y∀z (SportsTournament(x) ∧ Team(y) ∧ Match(z) → (AdvancesToNextRound(y, x) ↔ (WinsMatch(y, z) ∨ HigherOverallScore(y, z))))"
    },
    {
        "NL": "An outfit is fashionable if it follows current trends and has matching accessories.",
        "FOL": "∀x (Outfit(x) ∧ CurrentTrends(x) ∧ MatchingAccessories(x) → Fashionable(x))"
    },
    {
        "NL": "An artwork is captivating if it displays a unique style, evokes strong emotions, or has an interesting backstory.",
        "FOL": "∀x (Artwork(x) ∧ (UniqueStyle(x) ∨ StrongEmotions(x) ∨ InterestingBackstory(x)) → Captivating(x))"
    },
    {
        "NL": "No horses are galloping.",
        "FOL": "¬∃x (Horse(x) ∧ Galloping(x))"
    },
    {
        "NL": "A person who is skilled in the sport of boxing and engages in the activity professionally is a professional boxer.",
        "FOL": "∀x (Person(x) ∧ SkilledInBoxing(x) ∧ EngagesProfessionally(x) → ProfessionalBoxer(x))"
    },
    {
        "NL": "An event is memorable if it is a cultural festival or a sports competition, while it has either a large audience or a famous guest appearance, but not both.",
        "FOL": "∀x (Event(x) ∧ (CulturalFestival(x) ∨ SportsCompetition(x)) ∧ ((LargeAudience(x) ∧ ¬FamousGuestAppearance(x)) ∨ (¬LargeAudience(x) ∧ FamousGuestAppearance(x))) → Memorable(x))"
    },
    {
        "NL": "There are cameras that are compact and lightweight, or they have advanced features but are heavier.",
        "FOL": "∃x (Camera(x) ∧ ((Compact(x) ∧ Lightweight(x)) ∨ (AdvancedFeatures(x) ∧ Heavy(x))))"
    },
    {
        "NL": "A movie can be nominated for best drama, best musical or best animated film, but not all three at once.",
        "FOL": "∀x (Movie(x) ∧ Nominated(x) → (BestDramaNomination(x) ⊕ BestMusicalNomination(x) ⊕ BestAnimatedFilmNomination(x)))"
    },
    {
        "NL": "A chef cooks meals in a kitchen, using various ingredients and kitchen tools.",
        "FOL": "∀x ∀y ∀z ∀w (Chef(x) ∧ Meal(y) ∧ Kitchen(z) ∧ (Ingredient(w) ∨ KitchenTool(w)) → CooksWith(x, y, z, w))"
    },
    {
        "NL": "An electronic device is classified as a smart device if it has internet connectivity, can perform tasks autonomously, and supports user interaction.",
        "FOL": "∀x (ElectronicDevice(x) ∧ InternetConnectivity(x) ∧ PerformsTasksAutonomously(x) ∧ SupportsUserInteraction(x) → SmartDevice(x))"
    },
    {
        "NL": "Public transportation, such as buses and trains, helps reduce traffic congestion and pollution.",
        "FOL": "∀x ∀y (PublicTransportation(x) ∧ (Bus(x) ∨ Train(x)) → (ReducesTrafficCongestion(y) ∧ ReducesPollution(y)))"
    },
    {
        "NL": "A celestial object that orbits a star and is not a satellite is a planet.",
        "FOL": "∀x ((CelestialObject(x) ∧ OrbitsStar(x) ∧ ¬Satellite(x)) → Planet(x))"
    },
    {
        "NL": "A greenhouse gas, like carbon dioxide or methane, traps heat in the Earth's atmosphere, contributing to the greenhouse effect and global warming.",
        "FOL": "∀x (GreenhouseGas(x) → (TrapsHeatInAtmosphere(x) ∧ ContributesToGreenhouseEffect(x) ∧ ContributesToGlobalWarming(x) ∧ (CarbonDioxide(x) ∨ Methane(x))))"
    },
    {
        "NL": "A meal is nutritious when it contains a balanced mix of carbohydrates, proteins, and healthy fats.",
        "FOL": "∀x ∀y (Meal(x) ∧ BalancedMixOfCarbohydrates(x, y) ∧ Proteins(y) ∧ HealthyFats(x) → Nutritious(x))"
    },
    {
        "NL": "A person is a doctor if they diagnose and treat illnesses.",
        "FOL": "∀x (Person(x) ∧ Doctor(x) ↔ DiagnosesAndTreatsIllnesses(x))"
    },
    {
        "NL": "A food is a fruit if it is derived from the ovary of a flowering plant, contains seeds, and is typically sweet.",
        "FOL": "∀x (Food(x) ∧ DerivedFromOvaryOfFloweringPlant(x) ∧ ContainsSeeds(x) ∧ TypicallySweet(x) → Fruit(x))"
    },
    {
        "NL": "A lighthouse is a tower near the shore, equipped with a bright light to guide ships at night.",
        "FOL": "∀x (Lighthouse(x) ↔ (Tower(x) ∧ NearShore(x) ∧ EquippedWithBrightLight(x) ∧ GuidesShips(x)))"
    },
    {
        "NL": "A movie can be a comedy, a drama, or a thriller, but it cannot belong to all genres.",
        "FOL": "∀x (Movie(x) → ((Comedy(x) ∧ ¬Drama(x) ∧ ¬Thriller(x)) ∨ (¬Comedy(x) ∧ Drama(x) ∧ ¬Thriller(x)) ∨ (¬Comedy(x) ∧ ¬Drama(x) ∧ Thriller(x))))"
    },
    {
        "NL": "A volcano forms at tectonic plate boundaries or hotspots, erupts molten rock and ash, and contributes to the formation of new landmasses over time.",
        "FOL": "∀x (Volcano(x) → (FormsAtTectonicBoundariesOrHotspots(x) ∧ EruptsMoltenRockAndAsh(x) ∧ ContributesToLandmassFormation(x)))"
    },
    {
        "NL": "A game is single-player if it doesn't allow multiplayer mode or online connectivity.",
        "FOL": "∀x (Game(x) ∧ ¬MultiplayerMode(x) ∧ ¬OnlineConnectivity(x) → SinglePlayer(x))"
    },
    {
        "NL": "A desert is characterized by low precipitation, extreme temperatures, and sparse vegetation.",
        "FOL": "∀x (Desert(x) → (LowPrecipitation(x) ∧ ExtremeTemperatures(x) ∧ SparseVegetation(x)))"
    },
    {
        "NL": "A tree can produce fruit if it receives enough sunlight, its roots have access to nutrients, and it is properly pollinated.",
        "FOL": "∀x (Tree(x) ∧ EnoughSunlight(x) ∧ AccessToNutrients(x) ∧ ProperlyPollinated(x) → CanProduceFruit(x))"
    },
    {
        "NL": "A marathon is a long-distance running event, while a sprint is a short-distance running event.",
        "FOL": "∀x∀y (Marathon(x) ∧ Sprint(y) → (LongDistanceRunning(x) ∧ ShortDistanceRunning(y)))"
    },
    {
        "NL": "Telescopes allow observing distant celestial objects and studying the universe.",
        "FOL": "∀x (Telescope(x) → (AllowsObservingDistantObjects(x) ∧ StudiesUniverse(x)))"
    },
    {
        "NL": "A software can be desktop or mobile, but not both at the same time, and it cannot read minds.",
        "FOL": "∀x (Software(x) → (Desktop(x) ⊕ Mobile(x)) ∧ ¬ReadsMinds(x))"
    },
    {
        "NL": "A dish is vegan if it does not include any animal products.",
        "FOL": "∀x (Dish(x) ∧ ¬IncludeAnimalProducts(x) → Vegan(x))"
    },
    {
        "NL": "A triangle is a right triangle if it has one angle measuring 90 degrees.",
        "FOL": "∀x (RightTriangle(x) → (Triangle(x) ∧ ∃y (Angle(y) ∧ Measures(x, y, 90))))"
    },
    {
        "NL": "An eco-friendly product is made from sustainable materials and has minimal impact on the environment during production.",
        "FOL": "∀x (Product(x) → (SustainableMaterials(x) ∧ MinimalEnvironmentalImpact(x) → EcoFriendly(x)))"
    },
    {
        "NL": "A film is a romantic comedy if it contains humor and romance, but not if it is a drama or a tragedy.",
        "FOL": "∀x (Film(x) → (RomanticComedy(x) ↔ (ContainsHumor(x) ∧ ContainsRomance(x) ∧ ¬Drama(x) ∧ ¬Tragedy(x))))"
    },
    {
        "NL": "A word is a palindrome if it reads the same forward and backward.",
        "FOL": "∀x (Word(x) → (ReadsSameForward(x) ∧ ReadsSameBackward(x) → Palindrome(x)))"
    },
    {
        "NL": "A renewable energy source, such as solar, wind, or hydroelectric power, generates electricity without depleting natural resources and with minimal impact on the environment.",
        "FOL": "∀x ∀y ∀z (RenewableEnergySource(x) → (GeneratesElectricity(x) ∧ (Solar(y) ∨ Wind(y) ∨ Hydroelectric(y)) ∧ WithoutDepleting(x, z) ∧ (NaturalResources(z)) ∧ MinimalImpactOnEnvironment(x)))"
    },
    {
        "NL": "An island x is inhabited if there is a population of living organisms, such as plants, animals, or humans, residing on x.",
        "FOL": "∀x (Island(x) ∧ PopulationOfLivingOrganisms(x) → Inhabited(x))"
    },
    {
        "NL": "A celestial body x is a planet if it orbits a star and has cleared its orbit of other debris.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsStar(x) ∧ ClearedOrbit(x) → Planet(x))"
    },
    {
        "NL": "A well-maintained garden attracts a variety of birds and insects, contributing to biodiversity.",
        "FOL": "∀x (Garden(x) ∧ WellMaintained(x) → (AttractsVarietyOfBirds(x) ∧ AttractsVarietyOfInsects(x) ∧ ContributesToBiodiversity(x)))"
    },
    {
        "NL": "A refrigerator preserves food and operates on electricity.",
        "FOL": "∀x (Refrigerator(x) → (PreservesFood(x) ∧ OperatesOnElectricity(x)))"
    },
    {
        "NL": "A cactus and a palm tree can both grow in arid environments, but they have different adaptations for water storage and conservation.",
        "FOL": "∀x∀y (Cactus(x) ∧ PalmTree(y) → (GrowsInAridEnvironments(x) ∧ GrowsInAridEnvironments(y) ∧ DifferentAdaptationsForWaterStorageAndConservation(x, y)))"
    },
    {
        "NL": "A building that is well-insulated can maintain comfortable temperatures and reduce energy consumption.",
        "FOL": "∀x (Building(x) ∧ WellInsulated(x) → (MaintainsComfortableTemperatures(x) ∧ ReducesEnergyConsumption(x)))"
    },
    {
        "NL": "A hospital provides medical care and treatment for patients.",
        "FOL": "∀x∀y (Hospital(x) ∧ Patient(y) → ProvidesMedicalCareAndTreatment(x, y))"
    },
    {
        "NL": "A molecule is polar when there is a significant difference in electronegativity between its bonded atoms.",
        "FOL": "∀x ∀y ∀z (Molecule(x) ∧ BondedAtoms(x, y, z) ∧ SignificantElectronegativityDifference(y, z) → Polar(x))"
    },
    {
        "NL": "An island is a landmass surrounded by water and smaller than a continent.",
        "FOL": "∀x (Island(x) → (Landmass(x) ∧ SurroundedByWater(x) ∧ SmallerThanContinent(x)))"
    },
    {
        "NL": "A window can be open or closed, while a door can be locked or unlocked.",
        "FOL": "∀x∀y (Window(x) ∧ Door(y) → ((Open(x) ∨ Closed(x)) ∧ (Locked(y) ∨ Unlocked(y))))"
    },
    {
        "NL": "Every musician who is passionate and dedicated is recognized.",
        "FOL": "∀x (Musician(x) ∧ IsPassionate(x) ∧ IsDedicated(x) → IsRecognized(x))"
    },
    {
        "NL": "A room can be designed in a minimalist, industrial, or bohemian style, but not all rooms combine these styles.",
        "FOL": "∀x∀y∀z∀w (Room(x) ∧ (Minimalist(y) ∨ Industrial(z) ∨ Bohemian(w)) → ¬(DesignedInStyle(x, y) ∧ DesignedInStyle(x, z) ∧ DesignedInStyle(x, w)))"
    },
    {
        "NL": "Every mathematician who specializes in geometry and trigonometry, unless they have solved a Fields Medal problem, has either published in prime math journals or has not supervised Masters students.",
        "FOL": "∀x (Mathematician(x) ∧ SpecializesInGeometry(x) ∧ SpecializesInTrigonometry(x) ∨ SolvedFieldsMedalProblem(x) → (PublishedInPrimeMathJournals(x) ∨ ¬SupervisedMastersStudents(x)))"
    },
    {
        "NL": "A bicycle has gears if it can adjust speed and has a chain.",
        "FOL": "∀x (Bicycle(x) ∧ AdjustSpeed(x) ∧ Chain(x) → HasGears(x))"
    },
    {
        "NL": "A dress is considered a gown if it is elegant, long, and worn on formal occasions.",
        "FOL": "∀x (Dress(x) → Elegant(x) ∧ Long(x) ∧ WornOnFormalOccasions(x) → Gown(x))"
    },
    {
        "NL": "If a material is lightweight and durable, it's not fragile.",
        "FOL": "∀x (Material(x) ∧ Lightweight(x) ∧ Durable(x) → ¬Fragile(x))"
    },
    {
        "NL": "A film garners awards when it showcases exceptional acting, boasts a creative screenplay, or receives praise for its direction.",
        "FOL": "∀x (Film(x) ∧ (ExceptionalActing(x) ∨ CreativeScreenplay(x) ∨ PraiseForDirection(x)) → GarnersAwards(x))"
    },
    {
        "NL": "A shot safeguards against a definite infection by inciting the body's defenses to elicit a specific response.",
        "FOL": "∀x ∃y (Shot(x) ∧ Infection(y) ∧ IncitesBodysDefenses(x) ∧ ElicitsSpecificResponse(x, y) → SafeguardsAgainst(x, y))"
    },
    {
        "NL": "A company that supports employee training and development and offers flexible work arrangements experiences increased productivity and job satisfaction among its workforce.",
        "FOL": "∀x∀y (Company(x) ∧ SupportsEmployeeTrainingAndDevelopment(x) ∧ OffersFlexibleWorkArrangements(x) → (IncreasedProductivity(y) ∧ JobSatisfaction(y)))"
    },
    {
        "NL": "A wind turbine generates electricity by harnessing the power of wind, and can be installed in various environments such as on land or offshore.",
        "FOL": "∀x (WindTurbine(x) → GeneratesElectricityByWindPower(x) ∧ (InstalledOnLand(x) ∨ InstalledOffshore(x)))"
    },
    {
        "NL": "Not all paintings are aesthetic.",
        "FOL": "¬∀x (Painting(x) → Aesthetic(x))"
    },
    {
        "NL": "A student studies math, speaks English, and plays soccer, or the student studies history, speaks French, and plays tennis.",
        "FOL": "∀x (Student(x) → ((StudiesMath(x) ∧ SpeaksEnglish(x) ∧ PlaysSoccer(x)) ∨ (StudiesHistory(x) ∧ SpeaksFrench(x) ∧ PlaysTennis(x))))"
    },
    {
        "NL": "A hospital treats patients, employs medical professionals, and provides healthcare services.",
        "FOL": "∀x (Hospital(x) → (TreatsPatients(x) ∧ EmploysMedicalProfessionals(x) ∧ ProvidesHealthcareServices(x)))"
    },
    {
        "NL": "A cup is a big object only if it is blue.",
        "FOL": "∀x (Big(x) ∧ Cup(x) → Blue(x))"
    },
    {
        "NL": "No rooms are dirty.",
        "FOL": "∀x (Room(x) → ¬Dirty(x))"
    },
    {
        "NL": "A rectangle has four right angles, and opposite sides are equal in length.",
        "FOL": "∀x∀a∀b (Rectangle(x) ∧ HasRightAngle(x, a) ∧ HasRightAngle(x, b) ∧ OppositeSides(x, a, b) → EqualLength(a, b))"
    },
    {
        "NL": "A room is cozy if it has a comfortable temperature and soft lighting.",
        "FOL": "∀x (Room(x) ∧ Cozy(x) → (ComfortableTemperature(x) ∧ SoftLighting(x)))"
    },
    {
        "NL": "Cacti store water in their stems and survive in arid environments, while ferns require moist conditions to grow.",
        "FOL": "∀x (Cactus(x) → (StoreWaterInStem(x) ∧ SurviveInAridEnvironment(x))) ∧ ∀y (Fern(y) → RequireMoistConditions(y))"
    },
    {
        "NL": "A landscape with mountains, forests, and rivers is a mountainous region or a national park.",
        "FOL": "∀x (Landscape(x) ∧ HasMountains(x) ∧ HasForests(x) ∧ HasRivers(x) → (MountainousRegion(x) ∨ NationalPark(x)))"
    },
    {
        "NL": "A machine is outdated if it is not digital and operates using gears.",
        "FOL": "∀x (Machine(x) ∧ ¬Digital(x) ∧ OperatesUsingGears(x) → Outdated(x))"
    },
    {
        "NL": "All apples are red and sweet.",
        "FOL": "∀x (Apple(x) → (Red(x) ∧ Sweet(x)))"
    },
    {
        "NL": "A plant is considered a flower if it has reproductive structures that are typically surrounded by brightly colored petals.",
        "FOL": "∀x (Plant(x) ∧ ReproductiveStructures(x) ∧ BrightlyColoredPetals(x) → Flower(x))"
    },
    {
        "NL": "A creature that can fly, has feathers, and a sharp beak is typically a bird.",
        "FOL": "∀x (Creatures(x) ∧ CanFly(x) ∧ HasFeathers(x) ∧ HasSharpBeak(x) → Bird(x))"
    },
    {
        "NL": "If a computer program is efficient, then it uses less memory and runs faster.",
        "FOL": "∀x (ComputerProgram(x) ∧ Efficient(x) → UsesLessMemory(x) ∧ RunsFaster(x))"
    },
    {
        "NL": "Not every university in England is older than every university in Germany.",
        "FOL": "¬∀x ∀y (University(x) ∧ In(x, England) ∧ University(y) ∧ In(y, Germany) → Older(x, y))"
    },
    {
        "NL": "Emily respects Paul and David.",
        "FOL": "Respect(emily, paul) ∧ Respect(emily, david)"
    },
    {
        "NL": "A publication is a bestseller if it is interesting and has sold more than a million copies.",
        "FOL": "∀x (Publication(x) ∧ Interesting(x) ∧ HasSoldMoreThanAMillionCopies(x) → BestSeller(x))"
    },
    {
        "NL": "An exercise routine is effective when it targets different muscle groups and is performed regularly.",
        "FOL": "∀x (ExerciseRoutine(x) ∧ TargetsDifferentMuscleGroups(x) ∧ PerformedRegularly(x) → Effective(x))"
    },
    {
        "NL": "It is untrue that all books are interesting only if they are best sellers.",
        "FOL": "¬∀x (Book(x) → (Interesting(x) ↔ BestSeller(x)))"
    },
    {
        "NL": "A cat hunts prey and grooms itself, whereas a dog guards property and plays with humans.",
        "FOL": "∀x (Cat(x) ∧ (HuntsPrey(x) ∧ GroomsItself(x)) ∧ Dog(x) ∧ (GuardsProperty(x) ∧ PlaysWithHumans(x)))"
    },
    {
        "NL": "An animal exhibits nocturnal behavior if it is primarily active during the night and rests during the day.",
        "FOL": "∀x (Animal(x) ∧ ActiveAtNight(x) ∧ RestsDuringDay(x) → Nocturnal(x))"
    },
    {
        "NL": "All stars are bright and hot and distant.",
        "FOL": "∀x (Star(x) → (Bright(x) ∧ Hot(x) ∧ Distant(x)))"
    },
    {
        "NL": "If an object is round and large, then it points to at least one green object, unless it is a rectangle.",
        "FOL": "∀x ((Round(x) ∧ Large(x)) → ∃y (Green(y) ∧ PointsTo(x, y) ∨ Rectangle(x)))"
    },
    {
        "NL": "A dog can be hungry.",
        "FOL": "∃x (Dog(x) ∧ Hungry(x))"
    },
    {
        "NL": "If any country is larger than another, there is a country between them.",
        "FOL": "∀x ∀y ∃z (Country(x) ∧ Country(y) ∧ Country(z) ∧ LargerThan(x, y) → Between(z, x, y))"
    },
    {
        "NL": "Erosion is the process by which natural forces, such as wind or water, wear away and transport soil, rock, or other materials from one location to another.",
        "FOL": "∀x ∀y (Erosion(x) ∧ NaturalForces(y) → (WearAwayAndTransport(x, y) ∧ Soil(x) ∧ Rock(x) ∧ OtherMaterials(x) ∧ FromOneLocationToAnother(x)))"
    },
    {
        "NL": "A cell can be alive or dead, and it changes its state based on the number of neighboring living cells.",
        "FOL": "∀x (Cell(x) → ((Alive(x) ⊕ Dead(x)) ∧ ∃y (Neighbors(x, y) ∧ LivingCells(y) → ChangesState(x))))"
    },
    {
        "NL": "A job is fulfilling if it offers a good work-life balance and doesn't require excessive overtime.",
        "FOL": "∀x (Job(x) ∧ GoodWorkLifeBalance(x) ∧ ¬ExcessiveOvertime(x) → Fulfilling(x))"
    },
    {
        "NL": "It's incorrect that all athletes who can run are sprinters, and none of them can juggle.",
        "FOL": "¬∀x (Athlete(x) ∧ CanRun(x) → Sprinter(x)) ∧ ¬∃y (Athlete(y) ∧ CanRun(y) ∧ CanJuggle(y))"
    },
    {
        "NL": "It is not the case that there exists a cube that is connected to all small spheres.",
        "FOL": "¬∃x (Cube(x) ∧ ∀y (Small(y) ∧ Sphere(y) → ConnectedTo(x, y)))"
    },
    {
        "NL": "A camera captures high-quality images if it has a good sensor and sufficient lighting.",
        "FOL": "∀x (Camera(x) ∧ GoodSensor(x) ∧ SufficientLighting(x) → CapturesHighQualityImages(x))"
    },
    {
        "NL": "A substance can dissolve in a solvent if the substance and the solvent share similar chemical properties and the temperature is adequate.",
        "FOL": "∀x ∀y (Substance(x) ∧ Solvent(y) ∧ SimilarChemicalProperties(x, y) ∧ AdequateTemperature(y) → CanDissolve(x, y))"
    },
    {
        "NL": "A book is considered a bestseller if it has sold over one million copies or has been on a bestseller list for more than six months.",
        "FOL": "∀x (Book(x) ∧ (SoldOverOneMillionCopies(x) ⊕ OnBestsellerListForSixMonths(x)) → Bestseller(x))"
    },
    {
        "NL": "Dolphins use echolocation to navigate and find food, while sharks rely on their sense of smell.",
        "FOL": "∀x∀y (Dolphin(x) ∧ Shark(y) → (UsesEcholocation(x) ∧ ¬UsesEcholocation(y) ∧ ReliesOnSmell(y) ∧ ¬ReliesOnSmell(x)))"
    },
    {
        "NL": "A student is successful if and only if they take Math or Bio, but not both.",
        "FOL": "∀x (Student(x) → (Successful(x) ↔ (TakeMath(x) ⊕ TakeBio(x))))"
    },
    {
        "NL": "A chef cooks food, a waiter serves food, and a customer consumes food.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Waiter(y) ∧ Customer(z) → (CooksFood(x) ∧ ServesFood(y) ∧ ConsumesFood(z)))"
    },
    {
        "NL": "A food item that is made from ground cereal grains, contains water, is leavened with yeast, and is baked in an oven is bread.",
        "FOL": "∀x (FoodItem(x) ∧ MadeFromGroundCerealGrains(x) ∧ ContainsWater(x) ∧ LeavenedWithYeast(x) ∧ BakedInOven(x) → Bread(x))"
    },
    {
        "NL": "Different seasons, such as spring, summer, autumn, and winter, are characterized by varying weather conditions and temperatures.",
        "FOL": "∀x ∀y (Season(x) ∧ (Spring(y) ∨ Summer(y) ∨ Autumn(y) ∨ Winter(y)) → (CharacterizedByVaryingWeather(x) ∧ CharacterizedByVaryingTemperatures(x)))"
    },
    {
        "NL": "A bridge connects two landmasses and allows passage over a body of water or a road.",
        "FOL": "∀x (Bridge(x) → (ConnectsLandmasses(x) ∧ AllowsPassage(x)))"
    },
    {
        "NL": "Fast cars are dangerous, whereas slow bikes are safe.",
        "FOL": "∀x (Car(x) ∧ Fast(x) → IsDangerous(x)) ∧ ∀y (Bike(y) ∧ Slow(y) → IsSafe(y))"
    },
    {
        "NL": "A mountain is higher than a hill, a hill is higher than a valley, and a valley is not higher than a mountain.",
        "FOL": "∀x ∀y ∀z ((Mountain(x) ∧ Hill(y) ∧ IsHigher(x, y)) ∧ (Hill(y) ∧ Valley(z) ∧ IsHigher(y, z)) ∧ (Valley(z) ∧ Mountain(x) ∧ ¬IsHigher(z, x)))"
    },
    {
        "NL": "A microwave oven heats food by exposing it to electromagnetic radiation in the microwave frequency range.",
        "FOL": "∀x (MicrowaveOven(x) → (HeatsFood(x) ∧ ExposesToElectromagneticRadiation(x) ∧ MicrowaveFrequencyRange(x)))"
    },
    {
        "NL": "A writing implement that uses a specific type of ink, is designed for a particular writing style, and is often utilized for a certain purpose is typically a fountain pen or a calligraphy pen.",
        "FOL": "∀x∀y∀z (WritingImplement(x) ∧ UsesSpecificInk(x, y) ∧ DesignedForWritingStyle(x, z) ∧ OftenUtilizedForPurpose(x) → (FountainPen(x) ∨ CalligraphyPen(x)))"
    },
    {
        "NL": "A celestial event in which the moon passes through the Earth's shadow is a lunar eclipse.",
        "FOL": "∀x ∀y (CelestialEvent(x) ∧ Moon(y) ∧ PassesThroughEarthsShadow(y, x) → LunarEclipse(x))"
    },
    {
        "NL": "Jellyfish sting, and cacti have spines.",
        "FOL": "∀x (Jellyfish(x) → Sting(x)) ∧ ∀y (Cactus(y) → HasSpines(y))"
    },
    {
        "NL": "A tree possesses roots, a trunk, and branches, and may bear fruit, flowers, or seeds, while providing shade, oxygen, or habitats for different species.",
        "FOL": "∀x (Tree(x) → (Roots(x) ∧ Trunk(x) ∧ Branches(x) ∧ (BearsFruit(x) ∨ BearsFlowers(x) ∨ BearsSeeds(x)) ∧ (ProvidesShade(x) ∨ ProvidesOxygen(x) ∨ ProvidesHabitats(x))))"
    },
    {
        "NL": "A room is either bright due to sunlight or artificial lighting, but not both.",
        "FOL": "∀x (Room(x) ∧ Bright(x) ↔ (Sunlight(x) ⊕ ArtificialLighting(x)))"
    },
    {
        "NL": "Every living organism is either a plant or an animal.",
        "FOL": "∀x (LivingOrganism(x) → (Plant(x) ⊕ Animal(x)))"
    },
    {
        "NL": "A painting that is an abstract can stimulate observers' imagination.",
        "FOL": "∀x ∀y (Painting(x) ∧ Abstract(x) ∧ Observer(y) → CanStimulateImagination(x, y))"
    },
    {
        "NL": "If a person is a nurse, they must provide care and support to patients under the supervision of a medical professional.",
        "FOL": "∀x (Nurse(x) → (ProvidesCareAndSupport(x) ∧ UnderSupervisionOfMedicalProfessional(x)))"
    },
    {
        "NL": "There are fast cars.",
        "FOL": "∃x (Car(x) ∧ Fast(x))"
    },
    {
        "NL": "A museum is educational if it displays informative exhibits and offers guided tours.",
        "FOL": "∀x ∀y (Museum(x) ∧ DisplaysInformativeExhibits(x, y) ∧ OffersGuidedTours(x) → Educational(x))"
    },
    {
        "NL": "A disease is contagious if it can be transmitted through direct contact, airborne transmission, or contaminated surfaces.",
        "FOL": "∀x (Disease(x) ∧ (DirectContactTransmission(x) ⊕ AirborneTransmission(x) ⊕ ContaminatedSurfaceTransmission(x)) → Contagious(x))"
    },
    {
        "NL": "Large earthquakes can lead to tsunamis.",
        "FOL": "∀x∀y (LargeEarthquake(x) → CanLeadToTsunami(x, y))"
    },
    {
        "NL": "Not all magazines are sold out but all of them are not exciting.",
        "FOL": "¬∀x (Magazine(x) → SoldOut(x)) ∧ ∀y (Magazine(y) → ¬Exciting(y))"
    },
    {
        "NL": "A musical instrument produces sound through vibration.",
        "FOL": "∀x (MusicalInstrument(x) → ProducesSoundThroughVibration(x))"
    },
    {
        "NL": "An organism is classified as a predator if it hunts and consumes other organisms for survival.",
        "FOL": "∀x ∀y (Organism(x) ∧ Hunts(x, y) ∧ Consumes(x, y) ∧ Organism(y) → Predator(x))"
    },
    {
        "NL": "A popcorn machine gives out popcorn for insertion of notes.",
        "FOL": "∀x ∃y ∃z (PopcornMachine(x) ∧ Snack(y) ∧ Popcorn(y) ∧ Payment(z) ∧ Note(z) ∧ InExchangeFor(x, z) → GivesOut(x, y))"
    },
    {
        "NL": "Mathematics involves the study of numbers, shapes, and patterns to solve problems.",
        "FOL": "∀x (Mathematics(x) → (StudiesNumbers(x) ∧ StudiesShapes(x) ∧ StudiesPatterns(x) ∧ SolvesProblems(x)))"
    },
    {
        "NL": "A plant can grow in a garden if the garden has suitable soil and the climate is appropriate for the plant species.",
        "FOL": "∀x∀y (Plant(x) ∧ Garden(y) ∧ SuitableSoil(y, x) ∧ AppropriateClimate(y, x) → CanGrow(x, y))"
    },
    {
        "NL": "Emily prefers a Hemingway novel if and only if it was published after 1925.",
        "FOL": "∀x (Novel(x) ∧ AuthoredBy(x, hemingway) → (PublishedAfternineteentwentyfive(x) ↔ Prefers(emily, x)))"
    },
    {
        "NL": "A museum attracts visitors with fascinating exhibits, interactive displays, and guided tours.",
        "FOL": "∀x (Museum(x) → (AttractsVisitors(x) ↔ (FascinatingExhibits(x) ∧ InteractiveDisplays(x) ∧ GuidedTours(x))))"
    },
    {
        "NL": "Doctors diagnose patients and prescribe treatments.",
        "FOL": "∀x ∀y ∀z (Doctor(x) ∧ Patient(y) ∧ Treatment(z) → Diagnoses(x, y) ∧ Prescribes(x, z))"
    },
    {
        "NL": "A plant absorbs nutrients and water through its roots from the soil.",
        "FOL": "∀x ∀y (Plant(x) ∧ Soil(y) ∧ AbsorbsNutrientsAndWater(x, y) → FromRoots(x))"
    },
    {
        "NL": "A movie can be nominated for best director, best actor, or best screenplay, but not all three at once.",
        "FOL": "∀x (Movie(x) ∧ Nominated(x) → (BestDirectorNomination(x) ⊕ BestActorNomination(x) ⊕ BestScreenplayNomination(x)))"
    },
    {
        "NL": "Rain is wet, and fire is hot but not wet.",
        "FOL": "∀x (Rain(x) → Wet(x)) ∧ ∀y (Fire(y) → (Hot(y) ∧ ¬Wet(y)))"
    },
    {
        "NL": "If a person is a journalist, they gather, write, and report news stories.",
        "FOL": "∀x (Journalist(x) → (GathersNewsStories(x) ∧ WritesNewsStories(x) ∧ ReportsNewsStories(x)))"
    },
    {
        "NL": "A university accepts applicants with outstanding academic achievements or notable extracurricular activities, but not those who have a history of disciplinary issues.",
        "FOL": "∀x ∀y (University(x) ∧ Applicant(y) ∧ (OutstandingAcademics(y) ∨ NotableExtracurriculars(y)) ∧ ¬HasDisciplinaryIssues(y) → Accepts(x, y))"
    },
    {
        "NL": "If a person is a pilot, they fly and navigate aircraft.",
        "FOL": "∀x (Pilot(x) → FliesAndNavigatesAircraft(x))"
    },
    {
        "NL": "An animal is nocturnal if it is active during the night.",
        "FOL": "∀x (Animal(x) ∧ ActiveAtNight(x) → Nocturnal(x))"
    },
    {
        "NL": "There is no architect who designs both residential and commercial buildings but has never won a design competition.",
        "FOL": "¬∃x (Architect(x) ∧ DesignsResidential(x) ∧ DesignsCommercial(x) ∧ ¬WonDesignCompetition(x))"
    },
    {
        "NL": "A plant is a carnivorous plant if it derives some or all of its nutrients by capturing and consuming insects or other small animals.",
        "FOL": "∀x (Plant(x) ∧ (DerivesNutrientsFromInsects(x) ∨ DerivesNutrientsFromSmallAnimals(x)) → CarnivorousPlant(x))"
    },
    {
        "NL": "An engine that converts heat into mechanical energy, operates on a closed-loop cycle, and is used in power generation is a heat engine.",
        "FOL": "∀x∀y (Engine(x) ∧ ConvertsHeatToMechanicalEnergy(x) ∧ ClosedLoopCycle(y) ∧ OperatesOn(x, y) ∧ UsedInPowerGeneration(x) → HeatEngine(x))"
    },
    {
        "NL": "A vacation is relaxing if it includes leisure activities or sightseeing, but not work-related tasks.",
        "FOL": "∀x (Vacation(x) → ((LeisureActivities(x) ∨ Sightseeing(x)) ∧ ¬WorkRelatedTasks(x) ↔ Relaxing(x)))"
    },
    {
        "NL": "In a trial, the judge oversees the proceedings, while the jury deliberates and reaches a verdict.",
        "FOL": "∀x∀y∀z (Trial(x) ∧ Judge(y) ∧ Jury(z) ∧ Oversees(y, x) → (Deliberates(z) ∧ ReachesVerdict(z)))"
    },
    {
        "NL": "A restaurant can be a gourmet, offer elaborate menus, and be awarded Michelin stars, or it can be a cafeteria, provide basic fare, and attract daily customers.",
        "FOL": "∀x (Restaurant(x) → ((Gourmet(x) ∧ OffersElaborateMenu(x) ∧ AwardedMichelinStars(x)) ⊕ (Cafeteria(x) ∧ ProvidesBasicFare(x) ∧ AttractsDailyCustomers(x))))"
    },
    {
        "NL": "A person who is highly adaptable is more likely to thrive in changing circumstances.",
        "FOL": "∀x (HighlyAdaptable(x) → ThriveInChangingCircumstances(x))"
    },
    {
        "NL": "A predator hunts its prey, and the prey tries to escape.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) → (Hunts(x, y) ∧ TriesToEscape(y, x)))"
    },
    {
        "NL": "A dancer performs a choreography by executing a series of movements and steps.",
        "FOL": "∀x∀y (Dancer(x) ∧ Choreography(y) → Performs(x, y))"
    },
    {
        "NL": "To qualify for a university scholarship, students must have good academic performance and demonstrate financial need.",
        "FOL": "∀x (Student(x) → (QualifiesForScholarship(x) ↔ (GoodAcademicPerformance(x) ∧ DemonstratesFinancialNeed(x))))"
    },
    {
        "NL": "Every engineer who majors in electrical and mechanical, unless they were awarded a prestigious award, has either written articles in top engineering magazines or has not lectured at college.",
        "FOL": "∀x (Engineer(x) ∧ MajorsInElectrical(x) ∧ MajorsInMechanical(x) ∨ AwardedPrestigiousAward(x) → (WrittenArticlesInTopEngineeringMagazines(x) ∨ ¬LecturedAtCollege(x)))"
    },
    {
        "NL": "Some sculptures are made of marble, while others are made of bronze.",
        "FOL": "∀x (Sculpture(x) → MadeOfMarble(x) ⊕ MadeOfBronze(x))"
    },
    {
        "NL": "A star shines that all stars rotate around, if all galaxies are not bright.",
        "FOL": "¬∀x (Galaxy(x) → Bright(x)) → ∃y (Star(y) ∧ ∀z (Star(z) → RotatesAround(z, y)))"
    },
    {
        "NL": "An artwork is either a painting or a sculpture, but not both.",
        "FOL": "∀x (Artwork(x) → (Painting(x) ⊕ Sculpture(x)))"
    },
    {
        "NL": "Algae can produce oxygen through photosynthesis and can be found in both freshwater and marine environments.",
        "FOL": "∀x (Algae(x) → (ProducesOxygen(x) ∧ Photosynthesis(x) ∧ (FoundInFreshwater(x) ∨ FoundInMarineEnvironment(x))))"
    },
    {
        "NL": "A symbiotic relationship between two species can be mutualistic, where both species benefit, or parasitic, where one species benefits and the other is harmed.",
        "FOL": "∀x∀y∀z (SymbioticRelationship(x, y) → ((Mutualistic(x, y) ∧ Benefits(z, x) ∧ Benefits(z, y)) ∨ (Parasitic(x, y) ∧ Benefits(z, x) ∧ Harmed(z, y))))"
    },
    {
        "NL": "A healthy diet includes a variety of fruits, vegetables, and whole grains while limiting processed foods and added sugars.",
        "FOL": "∀x (Diet(x) ∧ VarietyOfFruits(x) ∧ VarietyOfVegetables(x) ∧ WholeGrains(x) ∧ LimitsProcessedFoods(x) ∧ LimitsAddedSugars(x) → Healthy(x))"
    },
    {
        "NL": "An animal x is a good candidate for domestication if it has traits such as adaptability and a manageable temperament, which are desirable for humans y.",
        "FOL": "∀x ∀y (Animal(x) ∧ Human(y) ∧ Adaptability(x) ∧ ManageableTemperament(x) → GoodCandidateForDomestication(x, y))"
    },
    {
        "NL": "A restaurant serves food, has tables, and employs staff.",
        "FOL": "∀x (Restaurant(x) → (ServesFood(x) ∧ HasTables(x) ∧ EmploysStaff(x)))"
    },
    {
        "NL": "A university offers undergraduate and graduate degree programs in various fields of study.",
        "FOL": "∀x ∀y (University(x) → (OffersDegreePrograms(x, y) ∧ (Undergraduate(y) ∨ Graduate(y)) ∧ VariousFieldsOfStudy(y)))"
    },
    {
        "NL": "A bicycle has two wheels, a frame, a seat, handlebars, and pedals for propulsion.",
        "FOL": "∀x (Bicycle(x) ↔ (HasTwoWheels(x) ∧ HasFrame(x) ∧ HasSeat(x) ∧ HasHandlebars(x) ∧ ∀y (HasPedals(x, y) ∧ Propulsion(y))))"
    },
    {
        "NL": "A triangle has three angles.",
        "FOL": "∀x (Triangle(x) → HasThreeAngles(x))"
    },
    {
        "NL": "A novel that is a thriller can incite excitement in readers",
        "FOL": "∀x ∀y (Novel(x) ∧ Thriller(x) ∧ Reader(y) → CanInciteExcitement(x, y))"
    },
    {
        "NL": "A technology is considered autonomous only if it operates or guides.",
        "FOL": "∀x (Autonomous(x) ↔ (Operates(x) ∨ Guides(x)))"
    },
    {
        "NL": "Fish swim in water.",
        "FOL": "∀x ∀y (Fish(x) ∧ Water(y) → Swim(x, y))"
    },
    {
        "NL": "A car rental company rents a vehicle when it is available, properly maintained, and the renter meets eligibility requirements.",
        "FOL": "∀x ∀y ∀z (CarRentalCompany(x) ∧ Vehicle(y) ∧ Available(y) ∧ ProperlyMaintained(y) ∧ Renter(z) ∧ EligibilityRequirements(z) → Rents(x, y, z))"
    },
    {
        "NL": "Some fruits have seeds inside, others don't.",
        "FOL": "∃x ∃y (Fruit(x) ∧ Fruit(y) ∧ HasSeedsInside(x) ∧ ¬HasSeedsInside(y))"
    },
    {
        "NL": "Any motor is functional with some battery.",
        "FOL": "∀x (Motor(x) → ∃y (Battery(y) ∧ FunctionalWith(x, y)))"
    },
    {
        "NL": "Writers are not always disciplined.",
        "FOL": "∃x (Writer(x) ∧ ¬Disciplined(x))"
    },
    {
        "NL": "If a person is skilled in playing a sport and earns a living from it, they are considered a professional athlete.",
        "FOL": "∀x (SkilledInSportAndEarnsLivingFromIt(x) → ProfessionalAthlete(x))"
    },
    {
        "NL": "A payment is secure if it uses encryption or requires authentication.",
        "FOL": "∀x (Payment(x) ∧ (UsesEncryption(x) ∨ RequiresAuthentication(x)) → Secure(x))"
    },
    {
        "NL": "Birds can fly, while fish can swim, and elephants can neither fly nor swim.",
        "FOL": "∃x (Bird(x) ∧ CanFly(x)) ∧ ∃y (Fish(y) ∧ CanSwim(y)) ∧ ∃z (Elephant(z) ∧ ¬CanFly(z) ∧ ¬CanSwim(z))"
    },
    {
        "NL": "A movie is captivating if it features romance or action.",
        "FOL": "∀x (Movie(x) ∧ (HasRomance(x) ∨ HasAction(x)) → Captivating(x))"
    },
    {
        "NL": "A bee collects pollen from flowers, returning to the hive, where honey is produced.",
        "FOL": "∀x∀y∀z∀a (Bee(x) ∧ Pollen(y) ∧ Flower(z) ∧ Hive(a) → (Collects(x, y, z) ∧ ReturnsTo(x, a) ∧ ProducesHoney(a)))"
    },
    {
        "NL": "An architect designs buildings and structures.",
        "FOL": "∀x∀y (Architect(x) → (DesignsBuildings(x, y) ∧ DesignsStructures(x, y)))"
    },
    {
        "NL": "A city is vibrant if it has a thriving arts scene and diverse cultural attractions.",
        "FOL": "∀x (City(x) ∧ ThrivingArtsScene(x) ∧ DiverseCulturalAttractions(x) → Vibrant(x))"
    },
    {
        "NL": "Rainy weather causes people to carry umbrellas or wear raincoats.",
        "FOL": "∀x∀y (RainyWeather(x) ∧ Person(y) → CarriesUmbrella(y, x) ∨ WearsRaincoat(y, x))"
    },
    {
        "NL": "A researcher discovers a new species, classifies it, and publishes the findings in a scientific journal.",
        "FOL": "∀x∀y∀z (Researcher(x) ∧ NewSpecies(y) ∧ ScientificJournal(z) ∧ Discovers(x, y) ∧ Classifies(x, y) → PublishesIn(x, z))"
    },
    {
        "NL": "A vehicle is electric if it is powered exclusively by electricity.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricity(x) → Electric(x))"
    },
    {
        "NL": "An employee is a manager if they are responsible for a team of other employees.",
        "FOL": "∀x (Manager(x) ↔ (Employee(x) ∧ ∃y (Team(y) ∧ ResponsibleFor(x, y))))"
    },
    {
        "NL": "All shapes are either round or square, but they cannot be both.",
        "FOL": "∀x (Shape(x) → (Round(x) ⊕ Square(x)))"
    },
    {
        "NL": "A dog barks if it is hungry or senses danger.",
        "FOL": "∀x (Dog(x) → (Barks(x) ↔ (Hungry(x) ∨ SensesDanger(x))))"
    },
    {
        "NL": "In a triangle, the sum of the three angles is always 180 degrees, while in a square, each angle is 90 degrees.",
        "FOL": "∀x ∀y (Triangle(x) → SumOfAngles(x, 180)) ∧ (Square(y) → EachAngle(y, 90))"
    },
    {
        "NL": "Only the brave conquer the night.",
        "FOL": "∀x (¬Brave(x) → ¬ConquerNight(x))"
    },
    {
        "NL": "A student succeeds if and only if they study hard and complete assignments.",
        "FOL": "∀x (Student(x) → (Succeeds(x) ↔ (StudyHard(x) ∧ CompleteAssignments(x))))"
    },
    {
        "NL": "An object is a bicycle if it is a human-powered vehicle with two wheels, a frame, and pedals, often used for transportation, recreation, or exercise.",
        "FOL": "∀x ((HumanPoweredVehicle(x) ∧ WithTwoWheelsFrameAndPedals(x) ∧ UsedForTransportationRecreationOrExercise(x)) → Bicycle(x))"
    },
    {
        "NL": "No system is called optimal unless it is either algorithm-driven or uses solar power, and not every one of them is integrated.",
        "FOL": "¬∃w (System(w) ∧ Optimal(w) ∨ (AlgorithmDriven(w) ∨ UsesSolarPower(w))) ∧ ¬∀v (System(v) → Integrated(v))"
    },
    {
        "NL": "A person is either generous or selfish.",
        "FOL": "∀v (Person(v) → (Generous(v) ⊕ Selfish(v)))"
    },
    {
        "NL": "A river's flow is affected by factors such as precipitation, terrain, and the presence of other bodies of water.",
        "FOL": "∀x∀y∀z (River(x) ∧ Precipitation(y) ∧ Terrain(z) → FlowAffectedByAndPresenceOfOtherBodiesOfWater(x, y, z))"
    },
    {
        "NL": "A vehicle is deemed environmentally friendly if it is powered by renewable resources, generates low emissions, and contributes to reducing air pollution.",
        "FOL": "∀x∀y∀z (Vehicle(x) ∧ PoweredByRenewableResources(x, y) ∧ GeneratesLowEmissions(x, z) ∧ ContributesToReducingAirPollution(x) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "Giraffes have long necks, which help them reach leaves on tall trees, while elephants have long trunks, which they use for feeding, drinking, and bathing.",
        "FOL": "∀x ∀y (Giraffe(x) ∧ LongNeck(x) ∧ TallTree(t) → CanReachLeaves(x, t)) ∧ (Elephant(y) ∧ LongTrunk(y) → (FeedsWithTrunk(y) ∧ DrinksWithTrunk(y) ∧ BathesWithTrunk(y)))"
    },
    {
        "NL": "Not every smartphone has a large screen, and some smartphones support fast charging or have a long battery life.",
        "FOL": "¬∀x (Smartphone(x) → LargeScreen(x)) ∧ ∃y (Smartphone(y) ∧ (FastCharging(y) ∨ LongBatteryLife(y)))"
    },
    {
        "NL": "A chemical reaction occurs when two or more reactants combine to form one or more products.",
        "FOL": "∀x∀y∀z (ChemicalReaction(x) → (∃u∃v (Reactant(u) ∧ Reactant(v) ∧ Combine(u, v, x)) ∧ ∃w (Product(w) ∧ FormedByReaction(w, x))))"
    },
    {
        "NL": "An email is marked as spam if it contains suspicious links or originates from an unknown sender.",
        "FOL": "∀x (Email(x) ∧ (SuspiciousLinks(x) ∨ UnknownSender(x)) → MarkedAsSpam(x))"
    },
    {
        "NL": "A subscription service charges a monthly fee if the user's billing cycle has ended and their account is active.",
        "FOL": "∀x (SubscriptionService(x) ∧ BillingCycleEnded(x) ∧ AccountActive(x) → ChargesMonthlyFee(x))"
    },
    {
        "NL": "A fruit is ripe when its color changes.",
        "FOL": "∀x (Fruit(x) → (ColorChanges(x) → Ripe(x)))"
    },
    {
        "NL": "An object is an oval if it has an elongated, round shape resembling an egg.",
        "FOL": "∀x (Oval(x) ↔ (Object(x) ∧ ElongatedRoundShape(x) ∧ ResemblesEgg(x)))"
    },
    {
        "NL": "A park is tranquil if it has beautiful scenery and no noise.",
        "FOL": "∀x (Park(x) ∧ HasBeautifulScenery(x) ∧ ¬HasNoise(x) → Tranquil(x))"
    },
    {
        "NL": "A solar panel captures sunlight, converting it into electricity and promoting clean energy alternatives to reduce carbon emissions.",
        "FOL": "∀x (SolarPanel(x) → (CapturesSunlight(x) ∧ ConvertsToElectricity(x) ∧ PromotesCleanEnergyAlternatives(x) ∧ ReducesCarbonEmissions(x)))"
    },
    {
        "NL": "A train operates on tracks, carries passengers, and transports cargo.",
        "FOL": "∀x (Train(x) → (OperatesOnTracks(x) ∧ CarriesPassengers(x) ∧ TransportsCargo(x)))"
    },
    {
        "NL": "A bird flies in the sky, whereas a fish swims in the water.",
        "FOL": "∀x (Bird(x) → FliesInSky(x)) ∧ ∀y (Fish(y) → SwimsInWater(y))"
    },
    {
        "NL": "A musical composition can be in either major or minor key.",
        "FOL": "∀x (MusicalComposition(x) → (MajorKey(x) ⊕ MinorKey(x)))"
    },
    {
        "NL": "A robot can navigate through a maze if it has an accurate map, sensors to detect obstacles, and an efficient pathfinding algorithm.",
        "FOL": "∀x∀y (Robot(x) ∧ Maze(y) → (Navigates(x, y) ↔ (AccurateMap(x, y) ∧ SensorsToDetectObstacles(x) ∧ EfficientPathfindingAlgorithm(x))))"
    },
    {
        "NL": "A vehicle x can travel on terrain y if its design and capabilities allow for maneuverability and stability on that specific terrain.",
        "FOL": "∀x ∀y (Vehicle(x) ∧ Terrain(y) ∧ DesignAllowsManeuverability(x, y) ∧ CapabilitiesAllowStability(x, y) → CanTravel(x, y))"
    },
    {
        "NL": "A library has books, magazines, and a quiet area for reading.",
        "FOL": "∀x (Library(x) → (Books(x) ∧ Magazines(x) ∧ QuietReadingArea(x)))"
    },
    {
        "NL": "Banks offer loans to customers for buying houses or starting businesses.",
        "FOL": "∀x∀y∀z (Bank(x) ∧ Customer(y) ∧ (House(z) ∨ Business(z)) → OffersLoan(x, y, z))"
    },
    {
        "NL": "A film is exciting if and only if it has stunning visuals, compelling storyline, but doesn't have too many confusing terminologies.",
        "FOL": "∀x (Film(x) ∧ Exciting(x) ↔ (HasStunningVisuals(x) ∧ HasCompellingStoryline(x) ∧ ¬ManyConfusingTerminologies(x)))"
    },
    {
        "NL": "An animal that has a long neck, four legs, and a pattern of spots on its body is a giraffe.",
        "FOL": "∀x (Animal(x) ∧ LongNeck(x) ∧ FourLegs(x) ∧ PatternOfSpots(x) → Giraffe(x))"
    },
    {
        "NL": "A bridge is safe for pedestrians if it has a separate walkway, railings, and is well-lit at night.",
        "FOL": "∀x (Bridge(x) ∧ SeparateWalkway(x) ∧ Railings(x) ∧ WellLitAtNight(x) → SafeForPedestrians(x))"
    },
    {
        "NL": "A river flows from a higher elevation to a lower elevation.",
        "FOL": "∀x (River(x) → FlowsFromHigherToLowerElevation(x))"
    },
    {
        "NL": "A building is earthquake-resistant if it has a strong foundation and flexible structure.",
        "FOL": "∀x (Building(x) ∧ StrongFoundation(x) ∧ FlexibleStructure(x) → EarthquakeResistant(x))"
    },
    {
        "NL": "Some beverages are alcoholic, while others are non-alcoholic.",
        "FOL": "∀x (Beverage(x) → Alcoholic(x) ⊕ NonAlcoholic(x))"
    },
    {
        "NL": "A passenger boards a vehicle if the vehicle has available seating capacity and the passenger has a valid ticket or pass.",
        "FOL": "∀x∀y (Boards(x, y) ↔ (Passenger(x) ∧ Vehicle(y) ∧ AvailableSeatingCapacity(y) ∧ (ValidTicket(x) ∨ ValidPass(x))))"
    },
    {
        "NL": "Not all movies are boring or exciting.",
        "FOL": "¬∀x (Movie(x) → (Boring(x) ∨ Exciting(x)))"
    },
    {
        "NL": "Plants that receive sunlight grow well.",
        "FOL": "∀x (Plant(x) ∧ ReceiveSunlight(x) → GrowWell(x))"
    },
    {
        "NL": "An object is considered a tool if it is designed to carry out a specific function, usually to make a task easier or more efficient.",
        "FOL": "∀x (Object(x) ∧ DesignedToCarryOutSpecificFunction(x) ∧ MakesTasksEasierOrMoreEfficient(x) → Tool(x))"
    },
    {
        "NL": "A mountain range affects the climate of the surrounding area by creating a barrier to weather systems, resulting in different weather patterns on each side.",
        "FOL": "∀x (MountainRange(x) ∧ AffectsClimate(x) → CreatesBarrierToWeatherSystems(x))"
    },
    {
        "NL": "If an animal is a mammal and it lives in water, it must be a dolphin, a whale, or a manatee.",
        "FOL": "∀x ((Mammal(x) ∧ LivesInWater(x)) → (Dolphin(x) ∨ Whale(x) ∨ Manatee(x)))"
    },
    {
        "NL": "A book can be awarded for brilliant writing, compelling narrative, or exceptional cover design, but not all three together.",
        "FOL": "∀z (Book(z) ∧ Awarded(z) → (BrilliantWriting(z) ⊕ CompellingNarrative(z) ⊕ ExceptionalCoverDesign(z)))"
    },
    {
        "NL": "Some humans admire Peter.",
        "FOL": "∃x (Human(x) ∧ Admire(x, peter))"
    },
    {
        "NL": "A magnifying glass enlarges the appearance of an object by bending light through its curved lens.",
        "FOL": "∀x ∀y (MagnifyingGlass(x) ∧ Object(y) → (CurvedLens(x) ∧ BendsLight(x) → EnlargesAppearance(x, y)))"
    },
    {
        "NL": "An object is magnetic if it attracts ferromagnetic materials and has a magnetic field.",
        "FOL": "∀x (Object(x) ∧ AttractsFerromagneticMaterials(x) ∧ MagneticField(x) → Magnetic(x))"
    },
    {
        "NL": "A musical composition typically consisting of multiple movements and played by an orchestra is a symphony.",
        "FOL": "∀x (MusicalComposition(x) ∧ ConsistsOfMultipleMovements(x) ∧ PlayedByOrchestra(x) → Symphony(x))"
    },
    {
        "NL": "If a man is a chef, he either works in a restaurant or a hotel.",
        "FOL": "∀x (Man(x) ∧ Chef(x) → WorkInRestaurant(x) ⊕ WorkInHotel(x))"
    },
    {
        "NL": "A vehicle is classified as a commercial vehicle if it's designed for or used in business.",
        "FOL": "∀x (Vehicle(x) ∧ (DesignedForBusiness(x) ∨ UsedInBusiness(x)) → CommercialVehicle(x))"
    },
    {
        "NL": "A well-maintained garden attracts various species of birds, insects, and small mammals.",
        "FOL": "∀x∀y∀z (Garden(x) ∧ WellMaintained(x) → (AttractsSpecies(x, y, Bird) ∧ AttractsSpecies(x, y, Insect) ∧ AttractsSpecies(x, y, SmallMammal)))"
    },
    {
        "NL": "Jupiter is a gas giant, and it has more moons than Earth.",
        "FOL": "GasGiant(Jupiter) ∧ MoreMoons(Jupiter, Earth)"
    },
    {
        "NL": "A yellow pentagon indicates to something.",
        "FOL": "∃x (Yellow(x) ∧ Pentagon(x) → ∃y (Indicates(x, y)))"
    },
    {
        "NL": "A building is safe if it meets fire regulations, has adequate emergency exits, and is structurally sound.",
        "FOL": "∀x (Building(x) → (MeetFireRegulations(x) ∧ AdequateEmergencyExits(x) ∧ StructurallySound(x) → Safe(x)))"
    },
    {
        "NL": "An athlete excels in a sport when they consistently win competitions and break records.",
        "FOL": "∀x∀y (Athlete(x) ∧ Sport(y) ∧ ExcelsIn(x, y) ↔ (ConsistentlyWins(x, y) ∧ BreaksRecords(x, y)))"
    },
    {
        "NL": "Not every dog that barks is aggressive, but all aggressive dogs bark.",
        "FOL": "¬∀x (Barks(x) → IsAggressive(x)) ∧ ∀y (IsAggressive(y) → Barks(y))"
    },
    {
        "NL": "Pine trees are evergreen, they have needles and produce cones.",
        "FOL": "∀x (PineTree(x) → (Evergreen(x) ∧ HasNeedles(x) ∧ ProducesCones(x)))"
    },
    {
        "NL": "An animal needs food, water, and a safe habitat to thrive.",
        "FOL": "∀v (Animal(v) → (GetsFood(v) ∧ GetsWater(v) ∧ HasSafeHabitat(v)) → Thrives(v))"
    },
    {
        "NL": "Every teacher that has taught all lessons hasn't graded any assignment.",
        "FOL": "¬∃x (Teacher(x) ∧ ∀y (Lesson(y) → Taught(x, y)) ∧ ¬∃z (Assignment(z) ∧ Graded(x, z)))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains ethanol as a result of fermentation or distillation processes.",
        "FOL": "∀x (Beverage(x) ∧ Alcoholic(x) ↔ ContainsEthanol(x) ∧ ResultOfFermentationOrDistillation(x))"
    },
    {
        "NL": "A person is deemed an artist if they paint in a studio or a gallery.",
        "FOL": "∀x (Person(x) ∧ (PaintsInStudio(x) ∨ PaintsInGallery(x)) → Artist(x))"
    },
    {
        "NL": "A chef prepares meals, and a waiter serves them.",
        "FOL": "∀x∀y (Chef(x) ∧ Waiter(y) → (Prepares(x, Meals) ∧ Serves(y, Meals)))"
    },
    {
        "NL": "A creature is either a cat or a dog.",
        "FOL": "∀x (Creature(x) → (Cat(x) ∨ Dog(x)))"
    },
    {
        "NL": "No insects are birds.",
        "FOL": "¬∃x (Insect(x) ∧ Bird(x))"
    },
    {
        "NL": "Each city is either large or small.",
        "FOL": "∀x (City(x) → (Large(x) ⊕ Small(x)))"
    },
    {
        "NL": "A city exists that no other cities have a road to if and only if there is no city that all cities have a road to.",
        "FOL": "¬∃x (City(x) ∧ ∀y (City(y) → RoadTo(y, x))) ↔ ∃z (City(z) ∧ ∀w (City(w) → ¬RoadTo(z, w)))"
    },
    {
        "NL": "If a musical instrument is a string instrument, it produces sound by vibrating strings and usually has a resonating body.",
        "FOL": "∀x (MusicalInstrument(x) ∧ StringInstrument(x) → ProducesSoundByVibratingStrings(x) ∧ UsuallyHasResonatingBody(x))"
    },
    {
        "NL": "An email is marked as read or unread, but not both.",
        "FOL": "∀x (Email(x) → (Read(x) ⊕ Unread(x)))"
    },
    {
        "NL": "Cats are afraid of water, while dogs can swim, but both animals have fur.",
        "FOL": "∀x ((Cat(x) → (AfraidOfWater(x) ∧ HasFur(x))) ∧ (Dog(x) → (CanSwim(x) ∧ HasFur(x))))"
    },
    {
        "NL": "When a cake is baked at the right temperature and for the correct duration, it becomes soft and fluffy.",
        "FOL": "∀x ∀y ∀z (Cake(x) ∧ RightTemperature(y) ∧ CorrectDuration(z) ∧ BakedAt(x, y, z) → SoftAndFluffy(x))"
    },
    {
        "NL": "A food x is an ingredient in dish y if x is included in the recipe of y and contributes to the flavor or texture of y.",
        "FOL": "∀x ∀y (Food(x) ∧ Dish(y) ∧ InRecipe(x, y) ∧ ContributesToFlavorOrTexture(x, y) → IngredientIn(x, y))"
    },
    {
        "NL": "A cheetah chases gazelles for feeding, while an owl feeds on the remains of dead rodents.",
        "FOL": "∀x ∀y (Cheetah(x) ∧ Gazelle(y) → ChasesForFeeding(x, y)) ∧ ∀z ∀w (Owl(z) ∧ DeadRodent(w) → FeedsOnRemainsOf(z, w))"
    },
    {
        "NL": "All doctors use a stethoscope, while all chefs use a knife.",
        "FOL": "∀x (Person(x) ∧ Doctor(x) → UsesStethoscope(x)) ∧ ∀y (Person(y) ∧ Chef(y) → UsesKnife(y))"
    },
    {
        "NL": "An apartment is a studio or a one-bedroom.",
        "FOL": "∀x (Apartment(x) → (Studio(x) ∨ OneBedroom(x)))"
    },
    {
        "NL": "A plant is considered a tree if it has a woody stem and grows to a considerable height.",
        "FOL": "∀x (Plant(x) ∧ WoodyStem(x) ∧ GrowsToConsiderableHeight(x) → Tree(x))"
    },
    {
        "NL": "A movie is captivating if it has an unexpected twist.",
        "FOL": "∀x (Movie(x) ∧ UnexpectedTwist(x) → Captivating(x))"
    },
    {
        "NL": "A student excels academically if they are consistently attentive in class, submit assignments on time, or score high on tests.",
        "FOL": "∀x (Student(x) → (ExcelsAcademically(x) ↔ (AttentiveInClass(x) ∨ SubmitsAssignmentsOnTime(x) ∨ ScoresHighOnTests(x))))"
    },
    {
        "NL": "Every musician who has performed with a band that is famous, either releases a hit record or is cherished by all fans.",
        "FOL": "∀x (Musician(x) ∧ ∀y (Band(y) ∧ PerformedWith(x, y) ∧ Famous(y)) → (ReleasesHit(x) ∨ ∀z (Fan(z) → CherishedBy(x, z))))"
    },
    {
        "NL": "A dessert can be hot, cold, or frozen, but not more than one temperature category.",
        "FOL": "∀x (Dessert(x) → ((Hot(x) ∧ ¬(Cold(x) ∨ Frozen(x))) ∨ (Cold(x) ∧ ¬(Hot(x) ∨ Frozen(x))) ∨ (Frozen(x) ∧ ¬(Hot(x) ∨ Cold(x)))))"
    },
    {
        "NL": "Every dog owner has a pet, but not every pet owner has a dog.",
        "FOL": "∀x (DogOwner(x) → PetOwner(x)) ∧ ¬∀x (PetOwner(x) → DogOwner(x))"
    },
    {
        "NL": "In a basketball game, players score points by shooting the ball through the hoop, and the team with the most points wins.",
        "FOL": "∀x ∀y ∀z ∀w (BasketballGame(x) ∧ Player(y) ∧ Team(z) ∧ Ball(w) → (ScoresPoints(y, x, w) ∧ ShootsThroughHoop(y, w) ∧ MostPointsWins(z, x)))"
    },
    {
        "NL": "A movie is boring or exciting.",
        "FOL": "∀x (Movie(x) → (Boring(x) ∨ Exciting(x)))"
    },
    {
        "NL": "Not every reader understands, but only those who read understand.",
        "FOL": "¬∀x (Reader(x) → Understands(x)) ∧ ∀y (Understands(y) → Reader(y))"
    },
    {
        "NL": "A dog is child-friendly if and only if it is not hostile and hyper.",
        "FOL": "∀x (Dog(x) → (ChildFriendly(x) ↔ ¬Hostile(x) ∧ ¬Hyper(x)))"
    },
    {
        "NL": "If an object is a laptop, it must be a portable personal computer with a clamshell design, typically featuring a keyboard and display screen.",
        "FOL": "∀x ((PortablePersonalComputer(x) ∧ ClamshellDesign(x) ∧ FeaturingKeyboardAndDisplayScreen(x)) → Laptop(x))"
    },
    {
        "NL": "A solar panel converts sunlight into electricity by absorbing photons, which generates a flow of electrons, creating a current that can be used to power homes and businesses.",
        "FOL": "∀x ∀y (SolarPanel(x) ∧ Sunlight(y) → (ConvertsSunlightToElectricity(x, y) ∧ AbsorbsPhotons(x) ∧ GeneratesFlowOfElectrons(x) ∧ CreatesCurrentToPowerHomesAndBusinesses(x)))"
    },
    {
        "NL": "A mountain is difficult to climb if it has steep slopes, unpredictable weather, or requires technical skills to ascend.",
        "FOL": "∀x (DifficultToClimb(x) ↔ (Mountain(x) ∧ (SteepSlopes(x) ∨ UnpredictableWeather(x) ∨ TechnicalSkillsRequired(x))))"
    },
    {
        "NL": "A chef can prepare meals in a restaurant, while a baker typically works in a bakery.",
        "FOL": "∀x∀y∀z (Chef(x) ∧ Restaurant(y) → PreparesMeals(x, y)) ∧ (Baker(x) ∧ Bakery(z) → WorksIn(x, z))"
    },
    {
        "NL": "A dog bites a cat only if that cat scratches back to it.",
        "FOL": "∀x ∀y (Dog(x) ∧ Cat(y) ∧ (Bites(x, y) → Scratches(y, x)))"
    },
    {
        "NL": "A sculpture is formed by carving or molding materials such as wood, stone, or metal.",
        "FOL": "∀x ∀y (Sculpture(x) ∧ (Carving(x, y) ∨ Molding(x, y)) ∧ (Wood(y) ∨ Stone(y) ∨ Metal(y)) → Formed(x))"
    },
    {
        "NL": "A restaurant attracts customers when it offers delicious food, has a welcoming atmosphere, and provides excellent service.",
        "FOL": "∀x (Restaurant(x) ∧ DeliciousFood(x) ∧ WelcomingAtmosphere(x) ∧ ExcellentService(x) → AttractsCustomers(x))"
    },
    {
        "NL": "Someone can be a software developer if they have programming skills and problem-solving skills.",
        "FOL": "∀x (ProgrammingSkills(x) ∧ ProblemSolvingSkills(x) → SoftwareDeveloper(x))"
    },
    {
        "NL": "A university teaches a range of subjects, and students can enroll in undergraduate or graduate programs.",
        "FOL": "∀x (University(x) → (∃y (Subject(y) ∧ Teaches(x, y)) ∧ (∃z (UndergraduateProgram(z) ∨ GraduateProgram(z)) ∧ Enrolls(x, z))))"
    },
    {
        "NL": "Either a beverage is hot or cold, but not both.",
        "FOL": "∀x (Beverage(x) → (Hot(x) ⊕ Cold(x)))"
    },
    {
        "NL": "A vehicle is antique if it was crafted before 1980.",
        "FOL": "∀x (Vehicle(x) ∧ CraftedBeforeNineteenEighty(x) → Antique(x))"
    },
    {
        "NL": "An individual is a chef if they cook in restaurants.",
        "FOL": "∀x (Individual(x) ∧ CookInRestaurants(x) → Chef(x))"
    },
    {
        "NL": "A celestial body orbiting a star, massive enough to be shaped by its own gravity into a spherical shape, and has cleared its orbit of other debris is a planet.",
        "FOL": "∀x ∀y (CelestialBody(x) ∧ Star(y) ∧ Orbits(x, y) ∧ MassiveEnoughForSphericalShape(x) ∧ ClearedOrbitOfDebris(x) → Planet(x))"
    },
    {
        "NL": "An electronic device can be powered by a battery, a power adapter, or a solar panel, but not more than one power source at the same time.",
        "FOL": "∀x (ElectronicDevice(x) → ((PoweredByBattery(x) ⊕ PoweredByAdapter(x) ⊕ PoweredBySolarPanel(x)) ∧ ¬(PoweredByBattery(x) ∧ PoweredByAdapter(x)) ∧ ¬(PoweredByBattery(x) ∧ PoweredBySolarPanel(x)) ∧ ¬(PoweredByAdapter(x) ∧ PoweredBySolarPanel(x))))"
    },
    {
        "NL": "A bird successfully migrates to its breeding grounds if it has accurate navigation skills, can find sufficient food sources along the route, and avoids predators during the journey.",
        "FOL": "∀x∀y∀z (Bird(x) ∧ BreedingGrounds(y) ∧ AccurateNavigationSkills(x) ∧ SufficientFoodSources(x, z) ∧ AvoidsPredators(x, z) → SuccessfulMigration(x, y))"
    },
    {
        "NL": "A vehicle is an airplane if it has wings and can fly.",
        "FOL": "∀x (Vehicle(x) ∧ HasWings(x) ∧ CanFly(x) → Airplane(x))"
    },
    {
        "NL": "A ship sails from a port and docks at another port without stopping at any islands.",
        "FOL": "∃x ∃y ∃z (Ship(x) ∧ Port(y) ∧ Port(z) → SailsFrom(x, y) ∧ DocksAt(x, z) ∧ ¬∃w (Island(w) ∧ StopsAt(x, w)))"
    },
    {
        "NL": "A smartphone allows for communication and supports various applications.",
        "FOL": "∀x (Smartphone(x) → (AllowsCommunication(x) ∧ SupportsVariousApplications(x)))"
    },
    {
        "NL": "A mathematical operation combining two numbers to obtain their sum is addition.",
        "FOL": "∀x ∀y ∀z (MathematicalOperation(x) ∧ Combines(y, z) ∧ ObtainsSum(x, y, z) → Addition(x))"
    },
    {
        "NL": "A flowering plant that produces seeds enclosed within a protective structure called a fruit is an angiosperm.",
        "FOL": "∀x∀y (FloweringPlant(x) ∧ ProducesSeeds(x) ∧ EnclosedInProtectiveStructure(x, y) ∧ Fruit(y) → Angiosperm(x))"
    },
    {
        "NL": "A cake can be chocolate or vanilla but not both.",
        "FOL": "∀x (Cake(x) → (Chocolate(x) ⊕ Vanilla(x)))"
    },
    {
        "NL": "A violin produces music, a drum creates rhythm, and a trumpet makes melodies, but all are musical instruments.",
        "FOL": "∀x∀y∀z (Violin(x) → ProducesMusic(x)) ∧ (Drum(y) → CreatesRhythm(y)) ∧ (Trumpet(z) → MakesMelodies(z)) ∧ (MusicalInstrument(x) ∧ MusicalInstrument(y) ∧ MusicalInstrument(z))"
    },
    {
        "NL": "A sculpture is deemed vintage if it is aged and made from components like marble, bronze, or porcelain.",
        "FOL": "∀x (Sculpture(x) ∧ Aged(x) ∧ (MadeFromMarble(x) ∨ MadeFromBronze(x) ∨ MadeFromPorcelain(x)) → Vintage(x))"
    },
    {
        "NL": "An animal is classified as a predator if it hunts and consumes other animals as its primary food source.",
        "FOL": "∀x ∀y (Animal(x) ∧ Hunts(x, y) ∧ ConsumesAsPrimaryFoodSource(x, y) ∧ Animal(y) → Predator(x))"
    },
    {
        "NL": "A planet with a stable climate, fertile soil, and abundant water resources is more likely to support complex ecosystems.",
        "FOL": "∀x (Planet(x) → (StableClimate(x) ∧ FertileSoil(x) ∧ AbundantWaterResources(x) → MoreLikelyToSupportComplexEcosystems(x)))"
    },
    {
        "NL": "There isn't a painter who has painted every landscape but hasn't ever painted a still life.",
        "FOL": "¬∃x (Painter(x) ∧ ∀y (Landscape(y) → HasPainted(x, y)) ∧ ¬∃z (StillLife(z) ∧ HasPainted(x, z)))"
    },
    {
        "NL": "Dogs are creatures that bark and wag their tails when excited.",
        "FOL": "∀x (Dog(x) → Creature(x) ∧ Bark(x) ∧ WagTailWhenExcited(x))"
    },
    {
        "NL": "A school that prioritizes students' mental health and fosters a supportive learning environment helps students achieve academic success and personal growth.",
        "FOL": "∀x∀y∀z (School(x) ∧ PrioritizesStudentsMentalHealth(x) ∧ FostersSupportiveLearningEnvironment(x) ∧ Student(y) ∧ Attends(y, x) → (AchievesAcademicSuccess(y) ∧ ExperiencesPersonalGrowth(z, y)))"
    },
    {
        "NL": "There is no author who writes both fiction and non-fiction books but has never been published.",
        "FOL": "¬∃x (Author(x) ∧ WritesFiction(x) ∧ WritesNonFiction(x) ∧ ¬BeenPublished(x))"
    },
    {
        "NL": "Unicorns do not exist.",
        "FOL": "¬∃x (Unicorn(x))"
    },
    {
        "NL": "Some flowers bloom in the spring, while others bloom in the summer or fall.",
        "FOL": "∃x (Flower(x) ∧ BloomsInSpring(x)) ∧ ∃y (Flower(y) ∧ (BloomsInSummer(y) ∨ BloomsInFall(y)))"
    },
    {
        "NL": "A train can carry passengers or cargo but cannot fly.",
        "FOL": "∀x (Train(x) → ((Carries(x, passengers) ∨ Carries(x, cargo)) ∧ ¬CanFly(x)))"
    },
    {
        "NL": "In a democracy, citizens elect representatives to make decisions and create laws on their behalf.",
        "FOL": "∀x∀y∀z (Democracy(x) ∧ Citizen(y) ∧ Representative(z) → Elects(y, z) ∧ MakesDecisions(z, x) ∧ CreatesLaws(z, x))"
    },
    {
        "NL": "An area that has clean air, access to green spaces, and low noise pollution can improve residents' well-being.",
        "FOL": "∀x (Area(x) ∧ CleanAir(x) ∧ AccessToGreenSpaces(x) ∧ LowNoisePollution(x) → ImprovesResidentsWellBeing(x))"
    },
    {
        "NL": "In a chess game, a player moves a piece according to the rules, aiming to checkmate the opponent's king.",
        "FOL": "∀x ∀y ∀z (ChessGame(x) ∧ Player(y) ∧ Piece(z) ∧ Rules(x) ∧ OpponentKing(y, w) → (MovesAccordingToRules(y, z, x) ∧ AimsToCheckmate(y, w)))"
    },
    {
        "NL": "An airplane takes off from an airport, flies through the air, and lands at a destination airport.",
        "FOL": "∀x ∀y ∀z (Airplane(x) ∧ Airport(y) ∧ Airport(z) → (TakesOffFrom(x, y) ∧ FliesThroughAir(x) ∧ LandsAt(x, z)))"
    },
    {
        "NL": "A smartphone may have a touch screen or a physical keyboard for input.",
        "FOL": "∀x (Smartphone(x) → (TouchScreen(x) ∨ PhysicalKeyboard(x)))"
    },
    {
        "NL": "A machine works properly if and only if it is well maintained or the parts are in good condition.",
        "FOL": "∀x (Machine(x) → (WorksProperly(x) ↔ (WellMaintained(x) ∨ PartsInGoodCondition(x))))"
    },
    {
        "NL": "A chessboard is a square board divided into 64 smaller squares, arranged in an 8x8 grid, used for playing chess.",
        "FOL": "∀x (Chessboard(x) → (SquareBoard(x) ∧ DividedIntoSmallerSquares(x) ∧ ArrangedIn8x8Grid(x) ∧ UsedForPlayingChess(x)))"
    },
    {
        "NL": "Alex is a writer or Samantha is not a photographer.",
        "FOL": "Writer(alex) ∨ ¬Photographer(samantha)"
    },
    {
        "NL": "A fruit is ripe if it is sweet and has a vibrant color.",
        "FOL": "∀x (Fruit(x) ∧ Sweet(x) ∧ VibrantColor(x) → Ripe(x))"
    },
    {
        "NL": "An ecosystem is stable if it contains a variety of plant and animal species that coexist and maintain a balanced food chain.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) ∧ PlantSpecies(y) ∧ AnimalSpecies(z) ∧ CoexistInEcosystem(x, y, z) ∧ MaintainBalancedFoodChain(x, y, z) → StableEcosystem(x))"
    },
    {
        "NL": "An object is a tool if it is used by humans to perform a specific task and provides mechanical advantage.",
        "FOL": "∀x (Object(x) ∧ UsedByHumans(x) ∧ PerformsSpecificTask(x) ∧ ProvidesMechanicalAdvantage(x) → Tool(x))"
    },
    {
        "NL": "A song is loud or quiet.",
        "FOL": "∀x (Song(x) → (Loud(x) ∨ Quiet(x)))"
    },
    {
        "NL": "A celestial body that emits light and is the central body of a solar system is a star.",
        "FOL": "∀x (CelestialBody(x) ∧ EmitsLight(x) ∧ CentralBodyOfSolarSystem(x) → Star(x))"
    },
    {
        "NL": "Maria is not a doctor and Claire is not a nurse.",
        "FOL": "¬Doctor(maria) ∧ ¬Nurse(claire)"
    },
    {
        "NL": "A laptop is portable if it is light-weight and battery-powered.",
        "FOL": "∀x (Laptop(x) ∧ Lightweight(x) ∧ BatteryPowered(x) → Portable(x))"
    },
    {
        "NL": "Fish have gills, but not all animals with gills are fish.",
        "FOL": "∀x (Fish(x) → (HasGills(x) ∧ ¬∀y (HasGills(y) → Fish(y))))"
    },
    {
        "NL": "An aircraft designed for long-range flights typically has a higher fuel capacity and more efficient engines than a short-range aircraft.",
        "FOL": "∀x∀y (Aircraft(x) ∧ DesignedForLongRangeFlights(x) ∧ Aircraft(y) ∧ DesignedForShortRangeFlights(y) → (HigherFuelCapacity(x, y) ∧ MoreEfficientEngines(x, y)))"
    },
    {
        "NL": "A molecule is stable when the electrons in its outer shell are fully occupied, and unstable when they are not.",
        "FOL": "∀x (Molecule(x) ∧ Stable(x) ↔ FullyOccupiedOuterShell(x)) ∧ ∀y (Molecule(y) ∧ Unstable(y) ↔ ¬FullyOccupiedOuterShell(y))"
    },
    {
        "NL": "Each white horse leads to at least one path that leads only to fertile fields.",
        "FOL": "∀x (White(x) ∧ Horse(x) → ∃y (LeadsTo(x, y) ∧ ∀z (LeadsTo(y, z) → Fertile(z) ∧ Field(z))))"
    },
    {
        "NL": "Certain computers are either desktops or laptops, but not both.",
        "FOL": "∃x (Computer(x) ∧ (Desktop(x) ⊕ Laptop(x)))"
    },
    {
        "NL": "A television show becomes popular if it attracts a large audience, receives positive reviews, or wins awards.",
        "FOL": "∀x (TelevisionShow(x) ∧ BecomesPopular(x) ↔ (AttractsLargeAudience(x) ∨ ReceivesPositiveReviews(x) ∨ WinsAwards(x)))"
    },
    {
        "NL": "Fungi decompose organic matter, breaking it down into simpler compounds that can be absorbed by plants.",
        "FOL": "∀x ∀y (Fungus(x) ∧ OrganicMatter(m) ∧ SimplerCompound(c) ∧ Plant(y) → DecomposesAndBreaksDown(x, m, c, y))"
    },
    {
        "NL": "A dish made with bread, vegetables, and a protein source such as meat or beans is a sandwich.",
        "FOL": "∀x (Dish(x) ∧ ContainsBread(x) ∧ ContainsVegetables(x) ∧ (ContainsMeat(x) ∨ ContainsBeans(x)) → Sandwich(x))"
    },
    {
        "NL": "There are universities that offer engineering programs, have a large campus, and provide scholarships.",
        "FOL": "∃x (University(x) ∧ (∃y (Program(y) ∧ Engineering(y) ∧ Offers(x, y))) ∧ LargeCampus(x) ∧ ProvidesScholarships(x))"
    },
    {
        "NL": "A dog is well-trained if it obeys commands, is socialized, and displays good manners.",
        "FOL": "∀x (Dog(x) ∧ ObeysCommands(x) ∧ Socialized(x) ∧ DisplaysGoodManners(x) → WellTrained(x))"
    },
    {
        "NL": "A bird builds a nest in a tree to lay eggs.",
        "FOL": "∀x ∀y (Bird(x) ∧ Tree(y) → ∃z (Nest(z) ∧ BuildsIn(x, z, y) ∧ LaysEggs(x, z)))"
    },
    {
        "NL": "A musical performance is captivating when the musicians are talented, the audio quality is excellent, and the stage presence is engaging.",
        "FOL": "∀x ∀y ∀z (MusicalPerformance(x) ∧ TalentedMusicians(y) ∧ ExcellentAudioQuality(z) ∧ EngagingStagePresence(x) → Captivating(x))"
    },
    {
        "NL": "A person can be a materialist, or enjoy listening to Mozart, but not both",
        "FOL": "∀x (Materialist(x) ⊕ EnjoyListeningMozart(x))"
    },
    {
        "NL": "A country is tagged as strong if it has a large military force and a stable economy.",
        "FOL": "∀x (Country(x) ∧ HasLargeMilitaryForce(x) ∧ HasStableEconomy(x) → Strong(x))"
    },
    {
        "NL": "A day is perfect if it is sunny and warm.",
        "FOL": "∀x (Day(x) ∧ Sunny(x) ∧ Warm(x) → Perfect(x))"
    },
    {
        "NL": "A room is spacious if it's not cramped and not average-sized.",
        "FOL": "∀x (Room(x) → (Spacious(x) ↔ (¬Cramped(x) ∧ ¬AverageSized(x))))"
    },
    {
        "NL": "When two celestial bodies exert a gravitational force on each other, they are said to be in orbit.",
        "FOL": "∀x∀y (CelestialBody(x) ∧ CelestialBody(y) ∧ ExertGravitationalForceOnEachOther(x, y) → InOrbit(x, y))"
    },
    {
        "NL": "A person is a smart student only if he is diligent.",
        "FOL": "∀x (Smart(x) ∧ Student(x) → Diligent(x))"
    },
    {
        "NL": "An artwork is either a painting and on canvas, or a sculpture and three-dimensional, but not both.",
        "FOL": "∀x ((Artwork(x) ∧ Painting(x) ∧ OnCanvas(x)) ⊕ (Artwork(x) ∧ Sculpture(x) ∧ ThreeDimensional(x)))"
    },
    {
        "NL": "Some books are bestsellers.",
        "FOL": "∃x (Book(x) ∧ Bestseller(x))"
    },
    {
        "NL": "An animal is a mammal if it has fur or hair, gives birth to live young, and produces milk to nourish its offspring.",
        "FOL": "∀x (Animal(x) ∧ (HasFur(x) ∨ HasHair(x)) ∧ GivesBirthToLiveYoung(x) ∧ ProducesMilk(x) → Mammal(x))"
    },
    {
        "NL": "A medicine is effective if it reduces symptoms.",
        "FOL": "∀x (Medicine(x) ∧ ReducesSymptoms(x) → Effective(x))"
    },
    {
        "NL": "A student can be either passing or failing but not both.",
        "FOL": "∀x (Student(x) → (Passing(x) ⊕ Failing(x)))"
    },
    {
        "NL": "All teachers who are understanding are cherished by each student.",
        "FOL": "∀x (Teacher(x) ∧ Understanding(x) → ∀y (Student(y) → Cherishes(y, x)))"
    },
    {
        "NL": "Painters use brushes and canvas, while sculptors work with chisels and stone.",
        "FOL": "∀x ∀y (Painter(x) ∧ Sculptor(y) → (UsesBrushes(x) ∧ UsesCanvas(x) ∧ WorksWithChisels(y) ∧ WorksWithStone(y)))"
    },
    {
        "NL": "A dessert can be baked or frozen, sweet or savory, and served with whipped cream, fruit, or chocolate sauce.",
        "FOL": "∀x (Dessert(x) → ((Baked(x) ⊕ Frozen(x)) ∧ (Sweet(x) ⊕ Savory(x)) ∧ (ServedWithWhippedCream(x) ∨ ServedWithFruit(x) ∨ ServedWithChocolateSauce(x))))"
    },
    {
        "NL": "All creatures will pass away someday.",
        "FOL": "∀x (Creature(x) → WillPassAwaySomeday(x))"
    },
    {
        "NL": "A farm produces food and other agricultural products, including crops, livestock, and dairy, to sustain and nourish the population.",
        "FOL": "∀x (Farm(x) → (ProducesFood(x) ∧ ProducesAgriculturalProducts(x) ∧ IncludesCropsLivestockDairy(x) ∧ SustainsAndNourishesPopulation(x)))"
    },
    {
        "NL": "A fish is office-friendly if and only if it is not high-maintenance and smelly.",
        "FOL": "∀x (Fish(x) → (OfficeFriendly(x) ↔ ¬HighMaintenance(x) ∧ ¬Smelly(x)))"
    },
    {
        "NL": "A software developer codes programs, and a tester checks them.",
        "FOL": "∀x ∀y (SoftwareDeveloper(x) ∧ Program(y) → Codes(x, y)) ∧ ∀z ∀w (Tester(z) ∧ Program(w) → Checks(z, w))"
    },
    {
        "NL": "A social media campaign is engaging when it captures the target audience's attention, sparks meaningful interactions, and generates positive word-of-mouth.",
        "FOL": "∀x (SocialMediaCampaign(x) ∧ CapturesTargetAudienceAttention(x) ∧ SparksMeaningfulInteractions(x) ∧ GeneratesPositiveWordOfMouth(x) → Engaging(x))"
    },
    {
        "NL": "Mars is a planet in our solar system.",
        "FOL": "PlanetInSolarSystem(mars)"
    },
    {
        "NL": "A musician is playing a song in the concert hall.",
        "FOL": "∃x ∃y (Musician(x) ∧ Song(y) ∧ Playing(x, y) ∧ InTheConcertHall(x))"
    },
    {
        "NL": "A celestial object that emits radio waves and has a rapidly rotating magnetic field is a pulsar.",
        "FOL": "∀x (CelestialObject(x) ∧ EmitsRadioWaves(x) ∧ RapidlyRotatingMagneticField(x) → Pulsar(x))"
    },
    {
        "NL": "No athlete participates in both soccer and basketball but has never played in a stadium.",
        "FOL": "¬∃x (Athlete(x) ∧ PlaysSoccer(x) ∧ PlaysBasketball(x) ∧ ¬PlayedInStadium(x))"
    },
    {
        "NL": "A museum exhibits artifacts and artwork from various time periods and cultures, and provides guided tours and educational programs for visitors.",
        "FOL": "∀x∀y (Museum(x) ∧ ArtifactOrArtwork(y) → (Exhibits(x, y) ∧ ProvidesGuidedToursAndEducationalPrograms(x)))"
    },
    {
        "NL": "A computer program is intelligent if it can learn from its own errors.",
        "FOL": "∀x (Program(x) ∧ LearnFromErrors(x) → Intelligent(x))"
    },
    {
        "NL": "A movie that receives positive reviews from critics and has a talented cast tends to attract a larger audience and generate higher box office revenue.",
        "FOL": "∀x∀y (Movie(x) ∧ PositiveReviewsFromCritics(x) ∧ TalentedCast(x, y) → (AttractsLargerAudience(x) ∧ GeneratesHigherBoxOfficeRevenue(x)))"
    },
    {
        "NL": "A television shows content when it is switched on or has a good signal.",
        "FOL": "∀x (Television(x) ∧ (SwitchedOn(x) ∨ HasGoodSignal(x)) → ShowsContent(x))"
    },
    {
        "NL": "Some fashion shows feature emerging designers, showcase sustainable materials, and are held in iconic venues.",
        "FOL": "∃x ∃y ∃z (FashionShow(x) ∧ EmergingDesigner(y) ∧ Features(x, y) ∧ SustainableMaterial(z) ∧ Showcases(x, z) ∧ IconicVenue(w) ∧ HeldIn(x, w))"
    },
    {
        "NL": "A bank offers loans if customers meet the eligibility criteria and can provide collateral.",
        "FOL": "∀x∀y (Bank(x) ∧ Customer(y) ∧ MeetsEligibilityCriteria(y) ∧ ProvidesCollateral(y) → OffersLoans(x, y))"
    },
    {
        "NL": "A flashlight with charged batteries emits light, while one with dead batteries does not emit light.",
        "FOL": "∀x (Flashlight(x) ∧ ChargedBatteries(x) → EmitsLight(x)) ∧ ∀y (Flashlight(y) ∧ DeadBatteries(y) → ¬EmitsLight(y))"
    },
    {
        "NL": "A violin uses a bow, while a guitar is played with fingers or a pick.",
        "FOL": "∀x ∀y (Violin(x) ∧ Guitar(y) → (UsesBow(x) ∧ (PlayedWithFingers(y) ∨ PlayedWithPick(y))))"
    },
    {
        "NL": "A beverage is considered alcoholic if it contains ethanol as a result of the fermentation of sugars.",
        "FOL": "∀x (Beverage(x) ∧ Alcoholic(x) ↔ (ContainsEthanol(x) ∧ FermentationOfSugars(x)))"
    },
    {
        "NL": "A restaurant is attractive if and only if it has quality food, a cozy atmosphere, but doesn't have a too noisy environment.",
        "FOL": "∀x (Restaurant(x) ∧ Attractive(x) ↔ (HasQualityFood(x) ∧ HasCozyAtmosphere(x) ∧ ¬TooNoisyEnvironment(x)))"
    },
    {
        "NL": "A lamp emits light, while a fan circulates air.",
        "FOL": "∀x (Lamp(x) → EmitsLight(x)) ∧ ∀y (Fan(y) → CirculatesAir(y))"
    },
    {
        "NL": "Every dessert is not unhealthy or fattening.",
        "FOL": "∀x (Dessert(x) ∧ (¬Unhealthy(x) ∨ ¬Fattening(x)))"
    },
    {
        "NL": "A dog is barking in the garden.",
        "FOL": "∃x ∃y (Dog(x) ∧ Garden(y) ∧ BarkingIn(x, y))"
    },
    {
        "NL": "A community center lends certain materials, has recreational areas, and organizes several events guided by some professionals.",
        "FOL": "∀x ∃y ∃z ∃w (CommunityCenter(x) → (Material(y) ∧ Event(z) ∧ Professional(w) ∧ Lends(x, y) ∧ HasRecreationalAreas(x) ∧ Organizes(x, z) ∧ GuidedBy(z, w)))"
    },
    {
        "NL": "It is not true that an object is square if it points to a small object.",
        "FOL": "¬∀x ∃y (Small(y) ∧ PointsTo(x, y) → Square(x))"
    },
    {
        "NL": "A woman is a reader if and only if she reads novels or poetry, but not watches TV.",
        "FOL": "∀x (Woman(x) → (Reader(x) ↔ ((ReadsNovels(x) ∨ ReadsPoetry(x)) ∧ ¬WatchesTV(x))))"
    },
    {
        "NL": "A flourishing garden receives adequate sunlight, contains nutrient-rich soil, and is regularly watered and tended to by a gardener.",
        "FOL": "∀x∀y (Garden(x) ∧ Gardener(y) ∧ ReceivesAdequateSunlight(x) ∧ ContainsNutrientRichSoil(x) ∧ TendsToGarden(y, x) ∧ RegularlyWaters(y, x) → Flourishing(x))"
    },
    {
        "NL": "Bella admires Van Gogh's painting only if it was painted before 1890.",
        "FOL": "∀x (Painting(x) ∧ PaintedBy(x, vangogh) → (PaintedBeforeeighteenninety(x) ↔ Admires(bella, x)))"
    },
    {
        "NL": "All humans appreciate Sophia",
        "FOL": "∀x (Human(x) → Appreciate(x, sophia))"
    },
    {
        "NL": "A museum attracts visitors if it features unique exhibits, hosts engaging events, and offers convenient hours, but not if it's in a remote location.",
        "FOL": "∀x (Museum(x) ∧ ((UniqueExhibits(x) ∧ EngagingEvents(x) ∧ ConvenientHours(x)) ∧ ¬RemoteLocation(x) → AttractsVisitors(x)))"
    },
    {
        "NL": "Every flower is fragrant in some environment.",
        "FOL": "∀x (Flower(x) → ∃y (Environment(y) ∧ FragrantIn(x, y)))"
    },
    {
        "NL": "Cities have a population.",
        "FOL": "∀x∀y (City(x) → HasPopulation(x, y))"
    },
    {
        "NL": "An appealing advertisement combines a strong call to action, a memorable visual, and concise messaging.",
        "FOL": "∀x (Advertisement(x) ∧ StrongCallToAction(x) ∧ MemorableVisual(x) ∧ ConciseMessaging(x) → Appealing(x))"
    },
    {
        "NL": "A fruit is ripe if it is soft and sweet.",
        "FOL": "∀x (Fruit(x) ∧ Soft(x) ∧ Sweet(x) → Ripe(x))"
    },
    {
        "NL": "A gadget can be portable and wireless.",
        "FOL": "∃x (Gadget(x) ∧ Portable(x) ∧ Wireless(x))"
    },
    {
        "NL": "A country has a high GDP if it has a strong economy, a low unemployment rate, and a high average income.",
        "FOL": "∀x (Country(x) → (HighGDP(x) ↔ (StrongEconomy(x) ∧ LowUnemploymentRate(x) ∧ HighAverageIncome(x))))"
    },
    {
        "NL": "A thunderstorm produces rain and lightning, while a snowstorm generates snow, but neither causes a drought.",
        "FOL": "∀x∀y (Thunderstorm(x) → (ProducesRain(x) ∧ ProducesLightning(x))) ∧ (Snowstorm(y) → GeneratesSnow(y)) ∧ ¬(CausesDrought(x) ∨ CausesDrought(y))"
    },
    {
        "NL": "A professional who diagnoses illnesses and prescribes medication is a doctor.",
        "FOL": "∀x (Professional(x) ∧ DiagnosesIllnesses(x) ∧ PrescribesMedication(x) → Doctor(x))"
    },
    {
        "NL": "An ecosystem consists of biotic factors like plants, animals, and microorganisms, and abiotic factors such as water, soil, and sunlight, interacting with each other.",
        "FOL": "∀x ∀y ∀z (Ecosystem(x) → (ConsistsOf(x, y) ∧ (Plants(y) ∨ Animals(y) ∨ Microorganisms(y)) ∧ AbioticFactors(x, z) ∧ (Water(z) ∨ Soil(z) ∨ Sunlight(z)) ∧ Interacting(x)))"
    },
    {
        "NL": "A planet that revolves around the sun, has a magnetic field, and sustains liquid water is habitable.",
        "FOL": "∀x (Planet(x) ∧ RevolvesAroundSun(x) ∧ HasMagneticField(x) ∧ SustainsLiquidWater(x) → Habitable(x))"
    },
    {
        "NL": "A machine is classified as a blender if it uses power to mix and blend food.",
        "FOL": "∀x (Machine(x) ∧ UsesPower(x) ∧ MixFood(x) ∧ BlendFood(x) → Blender(x))"
    },
    {
        "NL": "A man can be a doctor, a teacher, or a musician.",
        "FOL": "∀x (Man(x) → (Doctor(x) ∨ Teacher(x) ∨ Musician(x)))"
    },
    {
        "NL": "Students attend classes, complete assignments, and participate in exams to earn credits and eventually graduate.",
        "FOL": "∀x (Student(x) → (∃y (Class(y) ∧ Attends(x, y)) ∧ ∃z (Assignment(z) ∧ Completes(x, z)) ∧ ∃w (Exam(w) ∧ Participates(x, w) ∧ EarnsCredits(x) ∧ Graduates(x))))"
    },
    {
        "NL": "A taxi transports passengers for a fee, a delivery truck transports goods for businesses, and a school bus transports students to and from school.",
        "FOL": "∀x ∀y ∀z (Taxi(x) ∧ DeliveryTruck(y) ∧ SchoolBus(z) → (TransportsPassengers(x) ∧ ForFee(x) ∧ TransportsGoods(y) ∧ ForBusinesses(y) ∧ TransportsStudents(z) ∧ ToAndFromSchool(z)))"
    },
    {
        "NL": "Trees provide shade and absorb carbon dioxide, while factories emit carbon dioxide.",
        "FOL": "∀x (Tree(x) → (ProvidesShade(x) ∧ AbsorbsCO2(x))) ∧ ∀y (Factory(y) → EmitsCO2(y))"
    },
    {
        "NL": "Any device that can hold over 6GB of data and has three ports or more is recognized as a hard drive.",
        "FOL": "∀x (Device(x) ∧ CanHoldOverSixGBOfData(x) ∧ (HasThreePorts(x) ∨ HasMoreThanThreePorts(x)) → HardDrive(x))"
    },
    {
        "NL": "Some restaurants are both vegan and offer outdoor seating.",
        "FOL": "∃x (Restaurant(x) ∧ Vegan(x) ∧ OffersOutdoorSeating(x))"
    },
    {
        "NL": "An establishment where customers pay to access the internet using computers and other digital devices is an internet cafe.",
        "FOL": "∀x (Establishment(x) ∧ CustomerPayment(x) ∧ AccessInternet(x) ∧ DigitalDevices(x) → InternetCafe(x))"
    },
    {
        "NL": "A car requires fuel to move if it has an internal combustion engine.",
        "FOL": "∀x (Car(x) ∧ HasInternalCombustionEngine(x) → RequiresFuelToMove(x))"
    },
    {
        "NL": "There are buildings.",
        "FOL": "∃x (Building(x))"
    },
    {
        "NL": "A bird flies in the sky, whereas a fish swims in the sea.",
        "FOL": "∀x (Bird(x) → FliesInSky(x)) ∧ ∀y (Fish(y) → SwimsInSea(y))"
    },
    {
        "NL": "A company that fosters innovation, invests in employee development, and maintains a strong corporate culture can attract and retain top talent.",
        "FOL": "∀x (Company(x) ∧ FostersInnovation(x) ∧ InvestsInEmployeeDevelopment(x) ∧ StrongCorporateCulture(x) → AttractsAndRetainsTopTalent(x))"
    },
    {
        "NL": "A person is considered a senior citizen if they are aged 65 or older.",
        "FOL": "∀x (Person(x) ∧ Aged65OrOlder(x) → SeniorCitizen(x))"
    },
    {
        "NL": "A large natural or artificial lake used as a source of water supply is a reservoir.",
        "FOL": "∀x (LargeLake(x) ∧ (Natural(x) ∨ Artificial(x)) ∧ WaterSupplySource(x) → Reservoir(x))"
    },
    {
        "NL": "A person is a veteran if they have served in the military.",
        "FOL": "∀x (Veteran(x) ↔ (Person(x) ∧ ServedInMilitary(x)))"
    },
    {
        "NL": "There is a soil that all plants grow in.",
        "FOL": "∃x (Soil(x) ∧ ∀y (Plant(y) → GrowIn(y, x)))"
    },
    {
        "NL": "A vehicle with three wheels powered by an electric motor is a tricycle.",
        "FOL": "∀x (Vehicle(x) ∧ HasThreeWheels(x) ∧ PoweredByElectricMotor(x) → Tricycle(x))"
    },
    {
        "NL": "All artists who have held successful exhibitions and either work in painting or sculpture, but not both, have either been featured in a major art publication or have not taught art classes.",
        "FOL": "∀x (Artist(x) ∧ HeldSuccessfulExhibition(x) ∧ (WorksInPainting(x) ⊕ WorksInSculpture(x)) → (FeaturedInArtPublication(x) ∨ ¬TaughtArtClass(x)))"
    },
    {
        "NL": "A player becomes captain if they gain more respect than their teammates.",
        "FOL": "∀x ∀y (Player(x) ∧ Player(y) ∧ GainMoreRespect(x, y) → BecomesCaptain(x))"
    },
    {
        "NL": "A bird that can fly and is native to Australia is a parrot.",
        "FOL": "∀x (Bird(x) ∧ CanFly(x) ∧ NativeToAustralia(x) → Parrot(x))"
    },
    {
        "NL": "A novel can be a mystery, a romance, or a science fiction story.",
        "FOL": "∀x (Novel(x) → (Mystery(x) ⊕ Romance(x) ⊕ ScienceFiction(x)))"
    },
    {
        "NL": "An actor is popular if they're admired for their acting skills or their charisma.",
        "FOL": "∀x (Actor(x) ∧ (AdmiredForActingSkills(x) ∨ AdmiredForCharisma(x)) → Popular(x))"
    },
    {
        "NL": "A tree will lose its leaves in the fall if it's deciduous.",
        "FOL": "∀x (Tree(x) ∧ Deciduous(x) → LoseLeaves(x, Fall))"
    },
    {
        "NL": "A car is powered by an engine, has features such as a transmission, wheels, and brakes, and can be used for transportation, commercial purposes, or recreational activities.",
        "FOL": "∀x (Car(x) → (PoweredByEngine(x) ∧ (Transmission(x) ∧ Wheels(x) ∧ Brakes(x)) ∧ (TransportationUsage(x) ∨ CommercialUsage(x) ∨ RecreationalActivitiesUsage(x))))"
    },
    {
        "NL": "No player who plays either chess or cards is unskilled, and not every one of them is a professional.",
        "FOL": "¬∃x (Player(x) ∧ (PlaysChess(x) ∨ PlaysCards(x)) ∧ Unskilled(x)) ∧ ¬∀y (Player(y) → Professional(y))"
    },
    {
        "NL": "Athletes compete in individual or team sports.",
        "FOL": "∀x∀y (Athlete(x) ∧ (IndividualSport(y) ∨ TeamSport(y)) → CompetesIn(x, y))"
    },
    {
        "NL": "A bat is a mammal and can fly, while an ostrich is a bird and cannot fly.",
        "FOL": "∀x∀y (Bat(x) → (Mammal(x) ∧ CanFly(x))) ∧ (Ostrich(y) → (Bird(y) ∧ ¬CanFly(y)))"
    },
    {
        "NL": "A password is secure if it contains at least one uppercase letter, one lowercase letter, and one number, and is not a common word.",
        "FOL": "∀x (Password(x) ∧ Secure(x) ↔ (Uppercase(x) ∧ Lowercase(x) ∧ Number(x) ∧ ¬CommonWord(x)))"
    },
    {
        "NL": "A person is a student if they are enrolled in an educational institution.",
        "FOL": "∀x (Person(x) ∧ ∃y (EducationalInstitution(y) ∧ EnrolledIn(x, y)) → Student(x))"
    },
    {
        "NL": "A person can be either a student, an employee, or retired, but not more than one of these categories.",
        "FOL": "∀x (Person(x) → (Student(x) ⊕ Employee(x) ⊕ Retired(x)))"
    },
    {
        "NL": "A building is environmentally sustainable if it utilizes renewable resources, has a low carbon footprint, and incorporates green design principles.",
        "FOL": "∀x (Building(x) ∧ UtilizesRenewableResources(x) ∧ LowCarbonFootprint(x) ∧ IncorporatesGreenDesignPrinciples(x) → EnvironmentallySustainable(x))"
    },
    {
        "NL": "It's false that all birds that can sing are songbirds, and no such bird can dance.",
        "FOL": "¬∀x (Bird(x) ∧ CanSing(x) → Songbird(x)) ∧ ¬∃y (Bird(y) ∧ CanSing(y) ∧ CanDance(y))"
    },
    {
        "NL": "There are cameras that are handy and high-quality but not pricey, or they are pricey but not handy and high-quality.",
        "FOL": "∀x (Camera(x) → ((Handy(x) ∧ HighQuality(x) ∧ ¬Pricey(x)) ⊕ (Pricey(x) ∧ ¬(Handy(x) ∧ HighQuality(x)))))"
    },
    {
        "NL": "None of the employees in the workshop remembers either Sydney or Melbourne.",
        "FOL": "∀x (Employee(x) ∧ InWorkshop(x) → ¬(Remember(x, sydney) ∨ Remember(x, melbourne)))"
    },
    {
        "NL": "Only carnivorous animals eat other animals.",
        "FOL": "∀x ∀y (Animal(x) ∧ Animal(y) ∧ Eats(x, y) → Carnivorous(x))"
    },
    {
        "NL": "A mother is always a parent to her child.",
        "FOL": "∀x∀y (Mother(x, y) → Parent(x, y))"
    },
    {
        "NL": "A plant with needle-like leaves, a woody stem, and typically produces cones is a conifer.",
        "FOL": "∀x (Plant(x) ∧ NeedleLikeLeaves(x) ∧ WoodyStem(x) ∧ TypicallyProducesCones(x) → Conifer(x))"
    },
    {
        "NL": "Some dogs are big and playful.",
        "FOL": "∃x (Dog(x) ∧ Big(x) ∧ Playful(x))"
    },
    {
        "NL": "Maria is a teacher.",
        "FOL": "Teacher(maria)"
    },
    {
        "NL": "Photographers capture images with a camera.",
        "FOL": "∀p (Photographer(p) → CapturesImages(p))"
    },
    {
        "NL": "Trees have roots, trunks, and branches.",
        "FOL": "∀x (Tree(x) → (HasRoots(x) ∧ HasTrunk(x) ∧ HasBranches(x)))"
    },
    {
        "NL": "A person is considered an author if they write books.",
        "FOL": "∀x (Person(x) ∧ WritesBooks(x) → Author(x))"
    },
    {
        "NL": "All trains are large and noisy.",
        "FOL": "∀x (Train(x) → (Large(x) ∧ Noisy(x)))"
    },
    {
        "NL": "A grocery store sells fresh fruits or vegetables, but not if it's a specialty shop focusing on canned goods or if it only sells non-perishable items.",
        "FOL": "∀x (GroceryStore(x) ∧ ¬(CannedGoodsSpecialty(x) ∨ NonPerishableItemsOnly(x)) → (SellsFreshFruits(x) ∨ SellsFreshVegetables(x)))"
    },
    {
        "NL": "George knows Helen if and only if Helen knows George.",
        "FOL": "Know(george, helen) ↔ Know(helen, george)"
    },
    {
        "NL": "A vehicle can move on land, in the air, or on water, but it cannot move in all three domains simultaneously.",
        "FOL": "∀x (Vehicle(x) → (((MovesOnLand(x) ∨ MovesInAir(x)) ∨ MovesOnWater(x)) ∧ ¬(MovesOnLand(x) ∧ MovesInAir(x) ∧ MovesOnWater(x))))"
    },
    {
        "NL": "A rainbow occurs when sunlight is refracted through raindrops in the atmosphere.",
        "FOL": "∀x (Rainbow(x) ↔ (SunlightRefracted(x) ∧ ThroughRaindrops(x) ∧ InAtmosphere(x)))"
    },
    {
        "NL": "A building is not both old and new.",
        "FOL": "∀x (Building(x) → ¬(Old(x) ∧ New(x)))"
    },
    {
        "NL": "A museum is open to the public when it displays at least one art piece and is not undergoing maintenance.",
        "FOL": "∀x (Museum(x) → (OpenToPublic(x) ↔ (∃y (ArtPiece(y) ∧ Displays(x, y)) ∧ ¬UndergoingMaintenance(x))))"
    },
    {
        "NL": "A song is a confession if it conveys the personal feelings of a certain musician, composed by the musician themselves.",
        "FOL": "∀x ∃y (Song(x) ∧ Musician(y) ∧ ConveysFeelings(x, y) ∧ ComposedBy(x, y) → Confession(x))"
    },
    {
        "NL": "An engine that runs on diesel fuel requires a compression ignition system and usually generates more torque than a gasoline engine.",
        "FOL": "∀x (Engine(x) ∧ RunsOnDiesel(x) → RequiresCompressionIgnitionSystem(x) ∧ GeneratesMoreTorqueThanGasolineEngine(x))"
    },
    {
        "NL": "A meal can be a gourmet dish, requiring delicate ingredients, and receive high reviews, or it can be a fast food, with simple components, and be consumed often.",
        "FOL": "∀x (Meal(x) → ((GourmetDish(x) ∧ RequiresDelicateIngredients(x) ∧ HighReviews(x)) ⊕ (FastFood(x) ∧ SimpleComponents(x) ∧ ConsumedOften(x))))"
    },
    {
        "NL": "An object is a cube if it has six equal square faces.",
        "FOL": "∀x ((SixSquareFaces(x) ∧ EqualFaces(x)) → Cube(x))"
    },
    {
        "NL": "A person is considered a financial advisor if they provide advice on financial planning, investments, and managing money.",
        "FOL": "∀x (Person(x) ∧ ProvidesFinancialPlanningAdvice(x) ∧ AdvisesOnInvestmentsAndMoneyManagement(x) → FinancialAdvisor(x))"
    },
    {
        "NL": "A metal that is resistant to corrosion is called stainless steel.",
        "FOL": "∀x (Metal(x) ∧ ResistantToCorrosion(x) → StainlessSteel(x))"
    },
    {
        "NL": "A pencil can have an eraser on one end or not.",
        "FOL": "∀x (Pencil(x) → (HasEraser(x) ⊕ ¬HasEraser(x)))"
    },
    {
        "NL": "All triangles have three sides.",
        "FOL": "∀x (Triangle(x) → HaveSides(x, three))"
    },
    {
        "NL": "A garment that covers the upper body, has long sleeves, and buttons down the front is a shirt if it has a collar and cuffs.",
        "FOL": "∀x (Garment(x) ∧ CoversUpperBody(x) ∧ HasLongSleeves(x) ∧ ButtonsDownFront(x) ∧ HasCollar(x) ∧ HasCuffs(x) → Shirt(x))"
    },
    {
        "NL": "A tree is deciduous if it loses its leaves in the autumn and regrows them in the spring.",
        "FOL": "∀x (Tree(x) ∧ LosesLeavesInAutumn(x) ∧ RegrowsLeavesInSpring(x) → Deciduous(x))"
    },
    {
        "NL": "A student excels in school if they are motivated, attend classes regularly, and have good study habits.",
        "FOL": "∀x (Student(x) → (ExcelsInSchool(x) ↔ (Motivated(x) ∧ RegularAttendance(x) ∧ GoodStudyHabits(x))))"
    },
    {
        "NL": "A bird that cannot fly, has a unique beak adapted for cracking nuts, and is native to the Galapagos Islands is a flightless cormorant.",
        "FOL": "∀x (Bird(x) ∧ CannotFly(x) ∧ UniqueBeakForCrackingNuts(x) ∧ NativeToGalapagosIslands(x) → FlightlessCormorant(x))"
    },
    {
        "NL": "Every bicycle has two wheels and a frame.",
        "FOL": "∀x (Bicycle(x) → (HasTwoWheels(x) ∧ HasFrame(x)))"
    },
    {
        "NL": "A violin is played with a bow, while a guitar is played by plucking or strumming strings, and a piano is played by striking keys.",
        "FOL": "∀x∀y∀z (Violin(x) ∧ Guitar(y) ∧ Piano(z) → (PlayedWithBow(x) ⊕ (PlayedByPluckingOrStrumming(y) ⊕ PlayedByStrikingKeys(z))))"
    },
    {
        "NL": "It is possible to see a full moon or a new moon, but not both at the same time.",
        "FOL": "∃x (FullMoon(x) ⊕ NewMoon(x))"
    },
    {
        "NL": "A phone call is either incoming or outgoing, and can be either answered or missed.",
        "FOL": "∀x (PhoneCall(x) → (Incoming(x) ⊕ Outgoing(x)) ∧ (Answered(x) ⊕ Missed(x)))"
    },
    {
        "NL": "A person who lives in a city or the countryside must either work or be retired.",
        "FOL": "∀x (Person(x) ∧ (City(x) ∨ Countryside(x)) → (Work(x) ⊕ Retired(x)))"
    },
    {
        "NL": "A chef can prepare a meal that is either vegetarian or non-vegetarian, but not a combination of both.",
        "FOL": "∀x∀y (Chef(x) ∧ Meal(y) ∧ Prepares(x, y) → (Vegetarian(y) ⊕ NonVegetarian(y)))"
    },
    {
        "NL": "A speaker captures the audience's attention with an engaging story and clear visuals or by using humor.",
        "FOL": "∀x (Speaker(x) → (EngagingStory(x) ∧ ClearVisuals(x) ∨ UsesHumor(x)) → CapturesAttention(x))"
    },
    {
        "NL": "A gemstone can be precious or semi-precious.",
        "FOL": "∀x (Gemstone(x) → (Precious(x) ∨ SemiPrecious(x)))"
    },
    {
        "NL": "A person is considered an electrician if they install, maintain, and repair electrical systems, equipment, and components in residential, commercial, and industrial settings.",
        "FOL": "∀x (Electrician(x) ↔ (InstallsMaintainsAndRepairsElectricalSystemsEquipmentAndComponents(x) ∧ InResidentialCommercialAndIndustrialSettings(x)))"
    },
    {
        "NL": "A person is considered a dentist if they diagnose, treat, and prevent oral health issues in patients.",
        "FOL": "∀x (Person(x) ∧ DiagnoseTreatAndPreventOralHealthIssues(x) ∧ InPatients(x) → Dentist(x))"
    },
    {
        "NL": "A movie can either be a thriller with a suspenseful storyline and strong cast, or a comedy with hilarious dialogues and relatable characters.",
        "FOL": "∀x (Movie(x) → ((Thriller(x) ∧ SuspensefulStoryline(x) ∧ StrongCast(x)) ⊕ (Comedy(x) ∧ HilariousDialogues(x) ∧ RelatableCharacters(x))))"
    },
    {
        "NL": "Each member of the book club reads fiction or enjoys coffee.",
        "FOL": "∀x (BookClubMember(x) → (ReadsFiction(x) ∨ EnjoysCoffee(x)))"
    },
    {
        "NL": "A clock displays the time, while a calendar shows the date and a thermometer measures temperature.",
        "FOL": "∀x ∀y ∀z (Clock(x) ∧ Calendar(y) ∧ Thermometer(z) → (DisplaysTime(x) ∧ ShowsDate(y) ∧ MeasuresTemperature(z)))"
    },
    {
        "NL": "A person can be a vegetarian or a vegan, but not both.",
        "FOL": "∀x (Person(x) → (Vegetarian(x) ⊕ Vegan(x)))"
    },
    {
        "NL": "In a democratic government, leaders are elected by citizens, power is separated among branches, and individual rights are protected by the constitution.",
        "FOL": "∀x∀y∀z (DemocraticGovernment(x) ∧ LeadersElectedByCitizens(x, y) ∧ PowerSeparatedAmongBranches(x, z) → IndividualRightsProtectedByConstitution(x))"
    },
    {
        "NL": "A man is deemed a frequent traveler if he changes his city weekly.",
        "FOL": "∀x (Man(x) ∧ ChangesCityWeekly(x) → FrequentTraveler(x))"
    },
    {
        "NL": "A sink provides a place to wash things.",
        "FOL": "∀x (Sink(x) → ProvidesWashingPlace(x))"
    },
    {
        "NL": "A computer program is a compiler if it translates high-level code into machine code, optimizes code, and generates an executable file.",
        "FOL": "∀x (ComputerProgram(x) ∧ TranslatesHighLevelCode(x) ∧ OptimizesCode(x) ∧ GeneratesExecutable(x) → Compiler(x))"
    },
    {
        "NL": "A biome is a desert if it receives very little precipitation and supports sparse vegetation.",
        "FOL": "∀x∀y (Biome(x) ∧ VeryLittlePrecipitation(x, y) ∧ SparseVegetation(x, y) → Desert(x))"
    },
    {
        "NL": "If a creature is on a rock, then some shapes are either circular or square.",
        "FOL": "∃x ∃y (Creature(x) ∧ Rock(y) ∧ On(x, y) → ∃z (Shape(z) ∧ (Circular(z) ⊕ Square(z))))"
    },
    {
        "NL": "Every bird in the sky can fly.",
        "FOL": "∀x (InSky(x) ∧ Bird(x) → CanFly(x))"
    },
    {
        "NL": "Automobiles use internal combustion engines, electric motors, or hybrid systems for propulsion.",
        "FOL": "∀x∀y∀z∀w (Automobile(x) → (InternalCombustionEngine(y) ∨ ElectricMotor(z) ∨ HybridSystem(w)) ∧ UsesForPropulsion(x, y, z, w))"
    },
    {
        "NL": "An electronic device is considered portable if it is lightweight and can be easily carried.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Lightweight(x) ∧ EasilyCarried(x) → Portable(x))"
    },
    {
        "NL": "A laptop operates on battery, whereas a desktop works on direct power.",
        "FOL": "∀x (Laptop(x) → OperatesOnBattery(x)) ∧ ∀y (Desktop(y) → WorksOnDirectPower(y))"
    },
    {
        "NL": "Natural resources such as coal, oil, and natural gas are non-renewable and will eventually be depleted.",
        "FOL": "∀x ((Coal(x) ∨ Oil(x) ∨ NaturalGas(x)) → (NonRenewable(x) ∧ WillBeDepleted(x)))"
    },
    {
        "NL": "A student learns from a teacher in a school setting.",
        "FOL": "∀x∀y∀z (Student(x) ∧ Teacher(y) ∧ School(z) ∧ LearnsFromIn(x, y, z) → LearningSituation(x, y, z))"
    },
    {
        "NL": "Every Sunflower is a plant, but not all plants are Sunflowers.",
        "FOL": "∀x (Sunflower(x) → Plant(x)) ∧ ¬∀x (Plant(x) → Sunflower(x))"
    },
    {
        "NL": "A beverage can be hot or cold, but not both sweet and bitter.",
        "FOL": "∀x (Beverage(x) → ((Hot(x) ⊕ Cold(x)) ∧ ¬(Sweet(x) ∧ Bitter(x))))"
    },
    {
        "NL": "A rocket is propelled into space using powerful engines that burn fuel and generate thrust.",
        "FOL": "∀x ∀y ∀z (Rocket(x) ∧ Space(y) ∧ Engine(z) ∧ Fuel(f) ∧ Thrust(t) → PropelledByBurningAndGenerating(x, y, z, f, t))"
    },
    {
        "NL": "A city is great for tourists if it has historical landmarks and vibrant nightlife or features beautiful natural scenery.",
        "FOL": "∀x (City(x) → (HasHistoricalLandmarks(x) ∧ VibrantNightlife(x) ∨ BeautifulNaturalScenery(x)) ↔ GreatForTourists(x))"
    },
    {
        "NL": "A doctor will recommend the surgery only if he does not find healthier alternatives.",
        "FOL": "∀x (Doctor(x) ∧ RecommendSurgery(x) → ¬FindHealthierAlternatives(x))"
    },
    {
        "NL": "A room is well-lit if it has natural light or bright artificial lights.",
        "FOL": "∀x (Room(x) ∧ (NaturalLight(x) ∨ BrightArtificialLights(x)) → WellLit(x))"
    },
    {
        "NL": "A comet becomes visible from Earth when its icy surface vaporizes, creating a glowing tail as it approaches the sun.",
        "FOL": "∀x∀y (Comet(x) ∧ Earth(y) ∧ IcySurfaceVaporizes(x) ∧ ApproachesSun(x) → (VisibleFromEarth(x, y) ∧ CreatesGlowingTail(x)))"
    },
    {
        "NL": "A planet orbits a star if it is affected by the star's gravitational pull.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ AffectedByGravitationalPull(x, y) → Orbits(x, y))"
    },
    {
        "NL": "A vehicle that can travel on land, water, and in the air is an all-terrain vehicle.",
        "FOL": "∀x∀y∀z (Vehicle(x) ∧ TravelsOnLand(x, y) ∧ TravelsOnWater(x, z) ∧ TravelsInAir(x) → AllTerrainVehicle(x))"
    },
    {
        "NL": "If all cars that are sold are second hand, then some vehicles will not be sold.",
        "FOL": "∀x (Car(x) ∧ Sold(x) → SecondHand(x)) → ∃y (Vehicle(y) ∧ ¬Sold(y))"
    },
    {
        "NL": "Mathematicians solve problems and create theories, while poets compose verses and express emotions.",
        "FOL": "∀x ∀y (Mathematician(x) ∧ Poet(y) → (SolvesProblems(x) ∧ CreatesTheories(x) ⊕ (ComposesVerses(y) ∧ ExpressesEmotions(y))))"
    },
    {
        "NL": "A person is considered a political scientist if they study political systems, processes, and the behavior of political actors.",
        "FOL": "∀x (Person(x) ∧ StudiesPoliticalSystems(x) ∧ StudiesPoliticalProcessesAndBehaviors(x) → PoliticalScientist(x))"
    },
    {
        "NL": "An artist paints a landscape using a particular style and technique, only if they have mastered both.",
        "FOL": "∀x∀y∀z (Artist(x) ∧ Landscape(y) ∧ Style(z) ∧ Technique(z) ∧ Mastered(x, z) → PaintsUsing(x, y, z))"
    },
    {
        "NL": "A pharmaceutical drug that requires a prescription and is used to treat a specific illness must be administered under the supervision of a healthcare professional.",
        "FOL": "∀x∀y (PharmaceuticalDrug(x) ∧ RequiresPrescription(x) ∧ TreatsIllness(x, y) → AdministeredUnderSupervision(x))"
    },
    {
        "NL": "A hammer is used to drive nails, while a screwdriver is used to turn screws.",
        "FOL": "∀x ∀y (Hammer(x) ∧ Screwdriver(y) → (DrivesNails(x) ∧ TurnsScrews(y)))"
    },
    {
        "NL": "A greenhouse is a structure with transparent walls and roof, allows sunlight to enter, and maintains a controlled environment for growing plants.",
        "FOL": "∀x (Greenhouse(x) → (TransparentWallsAndRoof(x) ∧ AllowsSunlightToEnter(x) ∧ MaintainsControlledEnvironmentForGrowingPlants(x)))"
    },
    {
        "NL": "Every doctor who has consulted with at least one doctor, who in turn has not completed a fellowship, has either published more than two researches or served at all national health forums.",
        "FOL": "∀x (Doctor(x) ∧ ∃y (Doctor(y) ∧ ¬CompletedFellowship(y) ∧ ConsultedWith(x, y)) → (PublishedMoreThanTwoResearches(x) ∨ ∀z (NationalHealthForum(z) → ServedAt(x, z))))"
    },
    {
        "NL": "A surface that reflects light, but does not transmit or absorb it, is a mirror.",
        "FOL": "∀x (Surface(x) ∧ ReflectsLight(x) ∧ ¬TransmitsLight(x) ∧ ¬AbsorbsLight(x) → Mirror(x))"
    },
    {
        "NL": "A dessert can have high sugar content and be unhealthy, or it can have low sugar content, be healthy, and contain nuts.",
        "FOL": "∃x (Dessert(x) ∧ ((HighSugarContent(x) ∧ Unhealthy(x)) ∨ (LowSugarContent(x) ∧ Healthy(x) ∧ ContainsNuts(x))))"
    },
    {
        "NL": "All swans are not black.",
        "FOL": "¬∀x (Swan(x) → Black(x))"
    },
    {
        "NL": "A satisfying vacation provides relaxation opportunities, offers enriching experiences, and creates lasting memories.",
        "FOL": "∀x (Vacation(x) ∧ RelaxationOpportunities(x) ∧ EnrichingExperiences(x) ∧ CreatesLastingMemories(x) → Satisfying(x))"
    },
    {
        "NL": "A tool is a hammer or a wrench, but not both.",
        "FOL": "∀x (Tool(x) → (Hammer(x) ⊕ Wrench(x)))"
    },
    {
        "NL": "A software x becomes obsolete when a newer version y is released and the older version is no longer supported or updated.",
        "FOL": "∀x ∀y (Software(x) ∧ Software(y) ∧ NewerVersion(y, x) ∧ NotSupported(x) ∧ NotUpdated(x) → Obsolete(x))"
    },
    {
        "NL": "A store attracts more customers if it has competitive prices or a convenient location, but not when it has poor customer service.",
        "FOL": "∃x (Store(x) ∧ ((CompetitivePrices(x) ∨ ConvenientLocation(x)) ∧ ¬PoorCustomerService(x) → AttractsMoreCustomers(x)))"
    },
    {
        "NL": "No meal is good unless it is healthy.",
        "FOL": "∀x (GoodMeal(x) ↔ Healthy(x))"
    },
    {
        "NL": "A lighthouse emits light to guide ships.",
        "FOL": "∀x (Lighthouse(x) → EmitsLightToGuideShips(x))"
    },
    {
        "NL": "An animal that is classified as an insect has six legs, an exoskeleton, and a three-part body.",
        "FOL": "∀x (Animal(x) ∧ Insect(x) → HasSixLegs(x) ∧ HasExoskeleton(x) ∧ HasThreePartBody(x))"
    },
    {
        "NL": "A doughnut is glazy if it has syrup or cream as a topping.",
        "FOL": "∀x (Doughnut(x) ∧ (HasSyrup(x) ∨ HasCream(x)) → Glazy(x))"
    },
    {
        "NL": "Owls are nocturnal and hunt at night, while hawks are diurnal and hunt during the day.",
        "FOL": "∀x (Owl(x) → (Nocturnal(x) ∧ HuntsAtNight(x))) ∧ ∀y (Hawk(y) → (Diurnal(y) ∧ HuntsDuringDay(y)))"
    },
    {
        "NL": "Mountains can influence weather patterns by affecting precipitation, temperature, and wind direction.",
        "FOL": "∀x (Mountain(x) → (AffectsPrecipitation(x) ∧ AffectsTemperature(x) ∧ AffectsWindDirection(x)))"
    },
    {
        "NL": "No pilot in the airplane is smoking.",
        "FOL": "∀x (Pilot(x) ∧ InAirplane(x) → ¬Smoke(x))"
    },
    {
        "NL": "An artist gains recognition if they create unique artwork, receive positive reviews, and participate in renowned exhibitions, or if their work is bought by prominent collectors, but not if their style is derivative.",
        "FOL": "∀x (Artist(x) → (GainsRecognition(x) ↔ (((UniqueArtwork(x) ∧ PositiveReviews(x) ∧ RenownedExhibitions(x)) ∨ ProminentCollectorsBuy(x)) ∧ ¬DerivativeStyle(x))))"
    },
    {
        "NL": "A robust transportation network facilitates efficient movement of goods, connects communities, and supports economic growth in a region.",
        "FOL": "∀x∀y∀z (TransportationNetwork(x) ∧ FacilitatesEfficientMovementOfGoods(x, y) ∧ ConnectsCommunities(x, z) ∧ SupportsEconomicGrowth(x, z) → Robust(x, y, z))"
    },
    {
        "NL": "A circle has a constant radius, whereas an ellipse has two distinct axes.",
        "FOL": "∀x (Circle(x) → ConstantRadius(x)) ∧ ∀y (Ellipse(y) → TwoDistinctAxes(y))"
    },
    {
        "NL": "Not all novels are thriller, and none of them are unpublished.",
        "FOL": "¬∀x (Novel(x) → Thriller(x)) ∧ ∀y (Novel(y) → ¬Unpublished(y))"
    },
    {
        "NL": "You need a ticket and proper attire to attend a formal event.",
        "FOL": "∀x∀y (Person(x) ∧ FormalEvent(y) → (HasTicket(x, y) ∧ ProperAttire(x)) → Attend(x, y))"
    },
    {
        "NL": "A software system is categorized as an operating system if it manages computer hardware, facilitates the execution of applications, and provides a user interface for interaction.",
        "FOL": "∀x (SoftwareSystem(x) ∧ ManagesHardware(x) ∧ FacilitatesApplicationExecution(x) ∧ ProvidesUserInterface(x) → OperatingSystem(x))"
    },
    {
        "NL": "An island is uninhabited if no humans live there.",
        "FOL": "∀x (Island(x) ∧ ¬HumansLiveThere(x) → Uninhabited(x))"
    },
    {
        "NL": "A flight from one city to another is either direct or has one or more layovers.",
        "FOL": "∀x∀y (Flight(x, y) → (Direct(x, y) ⊕ Layovers(x, y)))"
    },
    {
        "NL": "A person can be a vegan, or like listening Mozart, but not both",
        "FOL": "∀x (Vegan(x) ⊕ LikesListeningMozart(x))"
    },
    {
        "NL": "A medication can be effective, have side effects, or be ineffective and harmless.",
        "FOL": "∀x (Medication(x) → (Effective(x) ∨ (SideEffects(x) ∧ ¬Effective(x)) ∨ (¬Effective(x) ∧ ¬SideEffects(x))))"
    },
    {
        "NL": "A fruit can be either sweet or sour but not both.",
        "FOL": "∀x (Fruit(x) → (Sweet(x) ⊕ Sour(x)))"
    },
    {
        "NL": "Rain nourishes plants.",
        "FOL": "∀x (Plant(x) → NourishedByRain(x))"
    },
    {
        "NL": "A well-designed website is user-friendly, visually appealing, and has fast loading times.",
        "FOL": "∀x (Website(x) → (WellDesigned(x) ↔ (UserFriendly(x) ∧ VisuallyAppealing(x) ∧ FastLoading(x))))"
    },
    {
        "NL": "A book becomes a bestseller when it has a compelling storyline, receives positive reviews, and generates significant media attention.",
        "FOL": "∀x (Book(x) ∧ CompellingStoryline(x) ∧ PositiveReviews(x) ∧ SignificantMediaAttention(x) → Bestseller(x))"
    },
    {
        "NL": "If a person is a doctor, they either work in a hospital or a clinic.",
        "FOL": "∀x (Person(x) ∧ Doctor(x) → WorkInHospital(x) ⊕ WorkInClinic(x))"
    },
    {
        "NL": "When it rains, umbrellas are generally used outdoors.",
        "FOL": "∀x (Rain(x) → (Outdoor(x) ∧ GenerallyUsed(Umbrella, x)))"
    },
    {
        "NL": "A train arrives on time when it follows a strict schedule and experiences no delays.",
        "FOL": "∀x∀y∀z (Train(x) ∧ Schedule(y) ∧ Delays(z) ∧ Follows(x, y) ∧ No(x, z) → ArrivesOnTime(x))"
    },
    {
        "NL": "Cats have retractable claws and whiskers.",
        "FOL": "∀x (Cat(x) → (RetractableClaws(x) ∧ Whiskers(x)))"
    },
    {
        "NL": "If a house is neither big nor small, it's affordable.",
        "FOL": "∀x ((¬Big(x) ∨ ¬Small(x)) → Affordable(x))"
    },
    {
        "NL": "A musical instrument can be either a string instrument or a wind instrument.",
        "FOL": "∀x (MusicalInstrument(x) → StringInstrument(x) ⊕ WindInstrument(x))"
    },
    {
        "NL": "A library houses books, magazines, and digital resources, allowing patrons to borrow or access them.",
        "FOL": "∀x∀y∀z∀w (Library(x) ∧ (Book(y) ∨ Magazine(y) ∨ DigitalResource(y)) ∧ Patron(z) ∧ Borrow(w) → (Houses(x, y) ∧ Allows(x, z, w)))"
    },
    {
        "NL": "A child is happy or sad.",
        "FOL": "∀x (Child(x) → (Happy(x) ∨ Sad(x)))"
    },
    {
        "NL": "Each student can answer at least one question.",
        "FOL": "∀x (Student(x) → ∃y (Question(y) ∧ Answer(x, y)))"
    },
    {
        "NL": "A cat is lazy if it sleeps all day and ignores toys.",
        "FOL": "∀x (Cat(x) ∧ SleepsAllDay(x) ∧ IgnoresToys(x) → Lazy(x))"
    },
    {
        "NL": "A material is a conductor if it allows the flow of electricity.",
        "FOL": "∀x (Material(x) → (Conductor(x) ↔ AllowsFlowOfElectricity(x)))"
    },
    {
        "NL": "A tool is useful if it is not broken and can perform multiple functions.",
        "FOL": "∀x (Tool(x) ∧ ¬Broken(x) ∧ MultipleFunctions(x) → Useful(x))"
    },
    {
        "NL": "A book is written in a language and contains a collection of pages with printed text or illustrations.",
        "FOL": "∀x (Book(x) ∧ Language(x) ∧ (ContainsPrintedText(x) ∨ ContainsIllustrations(x)) → HasPages(x))"
    },
    {
        "NL": "A restaurant gains a Michelin star if it demonstrates culinary excellence and provides an exceptional dining experience.",
        "FOL": "∀x (Restaurant(x) ∧ CulinaryExcellence(x) ∧ ExceptionalDiningExperience(x) → MichelinStar(x))"
    },
    {
        "NL": "A volcano is active if it's erupting or showing signs of unrest.",
        "FOL": "∀x (Volcano(x) → (Erupting(x) ∨ ShowingSignsOfUnrest(x) → Active(x)))"
    },
    {
        "NL": "If an object is a smartphone, it must be a portable electronic device that combines the functions of a mobile phone, a computer, and a camera, typically featuring a touchscreen interface.",
        "FOL": "∀x ((PortableElectronicDevice(x) ∧ CombinesMobilePhoneComputerCameraFunctions(x) ∧ TypicallyFeaturesTouchscreenInterface(x)) → Smartphone(x))"
    },
    {
        "NL": "A person who can speak multiple languages fluently is considered multilingual.",
        "FOL": "∀x (Person(x) ∧ CanSpeakMultipleLanguagesFluently(x) → Multilingual(x))"
    },
    {
        "NL": "A planet's orbit around a star is determined by the gravitational forces between them.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ GravitationalForcesBetween(x, y) → DeterminesOrbit(x, y))"
    },
    {
        "NL": "A creature is a bird if it has feathers and can fly.",
        "FOL": "∀x (Creature(x) ∧ HasFeathers(x) ∧ CanFly(x) → Bird(x))"
    },
    {
        "NL": "A river, flowing from its source to its mouth, carries freshwater, provides habitat for various aquatic species, and often serves as a natural boundary between land areas.",
        "FOL": "∀x (River(x) → (FlowsFromSourceToMouth(x) ∧ CarriesFreshwater(x) ∧ ProvidesHabitatForAquaticSpecies(x) ∧ ServesAsNaturalBoundary(x)))"
    },
    {
        "NL": "A student is considered an undergraduate if they have not yet completed a bachelor's degree.",
        "FOL": "∀x (Student(x) ∧ ¬CompletedBachelorsDegree(x) → Undergraduate(x))"
    },
    {
        "NL": "A chef can specialize in French cuisine, Italian cuisine, or both.",
        "FOL": "∀x (Chef(x) → (SpecializeInFrenchCuisine(x) ∨ SpecializeInItalianCuisine(x) ∨ (SpecializeInFrenchCuisine(x) ∧ SpecializeInItalianCuisine(x))))"
    },
    {
        "NL": "It's possible for a meal to be vegetarian and gluten-free, but not all meals are.",
        "FOL": "∃x ∀y (Meal(x) ∧ Meal(y) → ((Vegetarian(x) ∧ GlutenFree(x)) ∧ ¬(Vegetarian(y) ∧ GlutenFree(y))))"
    },
    {
        "NL": "A garden attracts bees if it has flowering plants that produce nectar and pollen.",
        "FOL": "∀x (AttractsBees(x) ↔ (Garden(x) ∧ ∃y (FloweringPlant(y) ∧ ProducesNectar(y) ∧ ProducesPollen(y) ∧ Has(x, y))))"
    },
    {
        "NL": "A building is a museum if it houses a collection of artifacts and offers public access for viewing.",
        "FOL": "∀x (Building(x) ∧ HousesArtifacts(x) ∧ OffersPublicAccess(x) → Museum(x))"
    },
    {
        "NL": "A bakery bakes bread using flour, yeast, and water.",
        "FOL": "∀x (Bakery(x) → ∃y (Bread(y) ∧ BakesUsing(x, y, Flour, Yeast, Water)))"
    },
    {
        "NL": "A computer supports different operating systems, like Windows, macOS, and Linux, and is compatible with various types of peripherals, such as keyboards, mice, and printers.",
        "FOL": "∀x∀y∀z (Computer(x) ∧ (Windows(y) ∨ MacOS(y) ∨ Linux(y)) ∧ (Keyboard(z) ∨ Mouse(z) ∨ Printer(z)) → SupportsOperatingSystemsAndCompatibleWithPeripherals(x, y, z))"
    },
    {
        "NL": "A movie is intriguing if it has a well-developed plot and interesting characters.",
        "FOL": "∀x (Movie(x) ∧ HasWellDevelopedPlot(x) ∧ HasInterestingCharacters(x) → Intriguing(x))"
    },
    {
        "NL": "A substance can be a solid or a liquid, but not both at the same time.",
        "FOL": "∀x (Substance(x) → ((Solid(x) ∧ ¬Liquid(x)) ∨ (¬Solid(x) ∧ Liquid(x))))"
    },
    {
        "NL": "A solar eclipse occurs when the moon blocks the sun, while a lunar eclipse occurs when the earth casts a shadow on the moon.",
        "FOL": "∀x (SolarEclipse(x) → MoonBlocksSun(x)) ∧ ∀y (LunarEclipse(y) → EarthCastsShadowOnMoon(y))"
    },
    {
        "NL": "A political leader is effective when they implement policies that benefit the majority, foster international cooperation, and maintain fiscal responsibility, while not engaging in corruption or violating human rights.",
        "FOL": "∀x (PoliticalLeader(x) ∧ Effective(x) → ((BenefitMajority(x) ∧ FosterInternationalCooperation(x) ∧ MaintainFiscalResponsibility(x)) ∧ ¬(Corruption(x) ∨ ViolateHumanRights(x))))"
    },
    {
        "NL": "An article can be informative, persuasive, or narrative.",
        "FOL": "∃x (Article(x) ∧ (Informative(x) ∨ Persuasive(x) ∨ Narrative(x)))"
    },
    {
        "NL": "A substance is a metal if it's shiny, malleable, and conducts electricity and heat.",
        "FOL": "∀x (Substance(x) ∧ Shiny(x) ∧ Malleable(x) ∧ ConductsElectricity(x) ∧ ConductsHeat(x) → Metal(x))"
    },
    {
        "NL": "If a person is a pilot, they are trained to operate an aircraft.",
        "FOL": "∀x (Person(x) ∧ Pilot(x) → TrainedToOperateAircraft(x))"
    },
    {
        "NL": "A computer that has a high processing speed, large memory capacity, and advanced graphics capabilities is suitable for gaming purposes.",
        "FOL": "∀x (Computer(x) ∧ HighProcessingSpeed(x) ∧ LargeMemoryCapacity(x) ∧ AdvancedGraphicsCapabilities(x) → SuitableForGaming(x))"
    },
    {
        "NL": "A plant needs sunlight, water, and nutrients to grow healthily.",
        "FOL": "∀x (Plant(x) ∧ NeedsSunlight(x) ∧ NeedsWater(x) ∧ NeedsNutrients(x) → GrowsHealthily(x))"
    },
    {
        "NL": "A flower is a pollinator-friendly flower if it attracts pollinating insects like bees, butterflies, or other animals that help in the pollination process.",
        "FOL": "∀x (Flower(x) ∧ AttractsPollinators(x) ∧ (AttractsBees(x) ∨ AttractsButterflies(x) ∨ AttractsOtherAnimals(x)) → PollinatorFriendly(x))"
    },
    {
        "NL": "A battery stores electrical energy in chemical form and releases it as electricity when needed.",
        "FOL": "∀x (Battery(x) → (StoresElectricalEnergy(x) ∧ InChemicalForm(x) ∧ ReleasesAsElectricity(x) ∧ WhenNeeded(x)))"
    },
    {
        "NL": "Some people play both guitar and piano.",
        "FOL": "∃x (Person(x) ∧ PlayGuitar(x) ∧ PlayPiano(x))"
    },
    {
        "NL": "An airplane is considered fuel-efficient when it minimizes fuel consumption per mile traveled.",
        "FOL": "∀x (Airplane(x) ∧ MinimizesFuelConsumptionPerMile(x) → FuelEfficient(x))"
    },
    {
        "NL": "A person who knows how to swim is a swimmer.",
        "FOL": "∀x (KnowsHowToSwim(x) → Swimmer(x))"
    },
    {
        "NL": "A musical instrument is played by blowing air or plucking strings.",
        "FOL": "∀x (MusicalInstrument(x) → (PlayedByBlowingAir(x) ∨ PlayedByPluckingStrings(x)))"
    },
    {
        "NL": "A bird can be a predator, a scavenger, or a frugivore, but not more than one category.",
        "FOL": "∀x (Bird(x) → ((Predator(x) ⊕ Scavenger(x)) ⊕ Frugivore(x)))"
    },
    {
        "NL": "A vehicle that travels on a cushion of air and can move over land and water is known as a hovercraft.",
        "FOL": "∀x (Vehicle(x) ∧ TravelsOnCushionOfAir(x) ∧ MovesOverLandAndWater(x) → Hovercraft(x))"
    },
    {
        "NL": "Humans cultivate crops.",
        "FOL": "∀x ∀y (Human(x) ∧ Crop(y) → Cultivate(x, y))"
    },
    {
        "NL": "A store offers a discount on specific items if the items are on sale, or if the customer has a membership and the store has a membership discount program.",
        "FOL": "∀x∀y (DiscountOnItem(x, y) ↔ (Store(x) ∧ Item(y) ∧ (OnSale(y) ∨ (HasMembership(y) ∧ MembershipDiscountProgram(x)))))"
    },
    {
        "NL": "Cats chase mice when they are hungry.",
        "FOL": "∀x ∀y (Cat(x) ∧ Mouse(y) ∧ Hungry(x) → Chases(x, y))"
    },
    {
        "NL": "A vaccine protects against a specific disease by stimulating the immune system.",
        "FOL": "∀x ∀y (Vaccine(x, y) → ProtectsAgainstDisease(x, y) ∧ StimulatesImmuneSystem(x))"
    },
    {
        "NL": "A teacher instructs students, a chef cooks food, but a mechanic does not cook.",
        "FOL": "∀x (Teacher(x) → InstructsStudents(x)) ∧ ∀y (Chef(y) → CooksFood(y)) ∧ ∀z (Mechanic(z) → ¬Cooks(z))"
    },
    {
        "NL": "A store offers a loyalty program if it rewards frequent customers, but not if it has a no-discount policy.",
        "FOL": "∀x (Store(x) → (RewardsFrequentCustomers(x) ∧ ¬NoDiscountPolicy(x) → OffersLoyaltyProgram(x)))"
    },
    {
        "NL": "An airplane takes off from an airport, flies at a specific altitude, and lands at its destination.",
        "FOL": "∀x ∀y ∀z (Airplane(x) ∧ Airport(y) ∧ Destination(z) → (TakesOffFrom(x, y) ∧ FliesAtAltitude(x) ∧ LandsAt(x, z)))"
    },
    {
        "NL": "Every smartphone links to Wi-Fi and enables video calls and messaging.",
        "FOL": "∀x (Smartphone(x) → (LinksToWiFi(x) ∧ EnablesVideoCalls(x) ∧ EnablesMessaging(x)))"
    },
    {
        "NL": "A research project can focus on biology, physics, or chemistry, and it can be funded by government, private institutions, or both, but it cannot have no focus or no funding source.",
        "FOL": "∀x (ResearchProject(x) → ((FocusesBiology(x) ∨ FocusesPhysics(x) ∨ FocusesChemistry(x)) ∧ (GovernmentFunded(x) ∨ PrivateFunded(x) ∨ (GovernmentFunded(x) ∧ PrivateFunded(x)))))"
    },
    {
        "NL": "The restaurant is worth visiting if it serves delicious food, has friendly staff, or is in a convenient location.",
        "FOL": "∀x (Restaurant(x) → (WorthVisiting(x) ↔ (DeliciousFood(x) ∨ FriendlyStaff(x) ∨ ConvenientLocation(x))))"
    },
    {
        "NL": "Artificial intelligence systems learn from data, allowing them to improve their performance and capabilities over time.",
        "FOL": "∀x (ArtificialIntelligenceSystem(x) → (LearnsFromData(x) → (ImprovesPerformance(x) ∧ EnhancesCapabilities(x))))"
    },
    {
        "NL": "Countries that have abundant natural resources, such as oil or minerals, often experience economic growth.",
        "FOL": "∀x (Country(x) ∧ (AbundantOil(x) ∨ AbundantMinerals(x)) → EconomicGrowth(x))"
    },
    {
        "NL": "A photographer captures images of landscapes, people, or events using a camera, but not always in color.",
        "FOL": "∀x∀y∀z (Photographer(x) ∧ Image(y) ∧ Camera(z) → ((CapturesLandscape(x, y) ∨ CapturesPeople(x, y) ∨ CapturesEvent(x, y)) ∧ (¬AlwaysInColor(y)) ∧ Uses(x, z)))"
    },
    {
        "NL": "A company is a startup if it is newly established and not a subsidiary of a larger corporation.",
        "FOL": "∀x (Company(x) ∧ NewlyEstablished(x) ∧ ¬SubsidiaryOfLargerCorporation(x) → Startup(x))"
    },
    {
        "NL": "A student passes an exam if they score above a passing grade, attend the majority of classes, and submit all required assignments, but not if they miss a significant number of classes or fail to submit required assignments.",
        "FOL": "∀x (Student(x) ∧ PassesExam(x) ↔ (ScoreAbovePassingGrade(x) ∧ AttendsMajorityOfClasses(x) ∧ SubmitsAllAssignments(x) ∧ ¬MissesSignificantNumberOfClasses(x) ∧ ¬FailsToSubmitRequiredAssignments(x)))"
    },
    {
        "NL": "Some paintings are abstract and created by famous artists.",
        "FOL": "∃x (Painting(x) ∧ Abstract(x) ∧ CreatedByFamousArtist(x))"
    },
    {
        "NL": "A tropical rainforest is a biome characterized by high rainfall, biodiversity, and warm temperatures, while a tundra is a biome characterized by cold temperatures, low precipitation, and a limited growing season for plants.",
        "FOL": "∀x∀y (TropicalRainforest(x) ∧ Tundra(y) → (HighRainfall(x) ∧ Biodiversity(x) ∧ WarmTemperatures(x)) ∧ (ColdTemperatures(y) ∧ LowPrecipitation(y) ∧ LimitedGrowingSeasonForPlants(y)))"
    },
    {
        "NL": "A car moves on highways, whereas a submarine travels in oceans.",
        "FOL": "∀z (Car(z) → MovesOnHighways(z)) ∧ ∀w (Submarine(w) → TravelsInOceans(w))"
    },
    {
        "NL": "A man is reading newspaper at the coffee shop.",
        "FOL": "∃x ∃y (Man(x) ∧ Newspaper(y) ∧ Reading(x, y) ∧ AtTheCoffeeShop(x))"
    },
    {
        "NL": "There isn't a student who hasn't solved every problem in the book.",
        "FOL": "¬∃x (Student(x) ∧ ∀y (Problem(y) ∧ InBook(y) → Solved(x, y)))"
    },
    {
        "NL": "A planet with a thick atmosphere, a greenhouse effect, and high surface temperatures is a Venus-like planet.",
        "FOL": "∀x (Planet(x) ∧ ThickAtmosphere(x) ∧ GreenhouseEffect(x) ∧ HighSurfaceTemperature(x) → VenusLikePlanet(x))"
    },
    {
        "NL": "A city thrives with a strong economy and good infrastructure.",
        "FOL": "∀x (City(x) ∧ StrongEconomy(x) ∧ GoodInfrastructure(x) → Thrives(x))"
    },
    {
        "NL": "A geographic feature can be classified as a mountain range when it consists of a series of mountains, spans a considerable distance, and exhibits a distinct topographic pattern.",
        "FOL": "∀x (GeographicFeature(x) ∧ ConsistsOfSeriesOfMountains(x) ∧ SpansConsiderableDistance(x) ∧ ExhibitsDistinctTopographicPattern(x) → MountainRange(x))"
    },
    {
        "NL": "The book is either read or unread, never both.",
        "FOL": "∀x (Book(x) → (Read(x) ⊕ Unread(x)))"
    },
    {
        "NL": "A person is either an adult or a child.",
        "FOL": "∀x (Person(x) → (Adult(x) ∨ Child(x)))"
    },
    {
        "NL": "There is no rectangle that encloses all blue squares.",
        "FOL": "¬∃x (Rectangle(x) → ∀y (Blue(y) ∧ Square(y) → Encloses(x, y)))"
    },
    {
        "NL": "If any structure is a bridge, then all entities associate with a city.",
        "FOL": "∃x (Bridge(x) → ∀y ∃z (City(z) ∧ AssociatesWith(y, z)))"
    },
    {
        "NL": "A farmer grows crops in a field that relies on sunlight and water for growth and development.",
        "FOL": "∀x∀y∀z∀w (Farmer(x) ∧ Field(y) ∧ Crop(z) ∧ (Sunlight(w) ∨ Water(w)) → GrowsIn(x, y, z) ∧ ReliesOnForGrowth(z, w))"
    },
    {
        "NL": "Some substances are either acidic or basic, but not both.",
        "FOL": "∃x (Substance(x) ∧ (Acidic(x) ⊕ Basic(x)))"
    },
    {
        "NL": "An animal is considered an insect if it has a three-part body, six legs, and usually wings.",
        "FOL": "∀x (Animal(x) ∧ ThreePartBody(x) ∧ SixLegs(x) ∧ UsuallyWings(x) → Insect(x))"
    },
    {
        "NL": "Few doctors are empathetic, and some are not.",
        "FOL": "∃x (Doctor(x) ∧ Empathetic(x)) ∧ ∃x (Doctor(x) ∧ ¬Empathetic(x))"
    },
    {
        "NL": "A rectangle is not red and does not contain any blue object.",
        "FOL": "∀x (Rectangle(x) → (¬Red(x) ∧ ¬∃y (Blue(y) ∧ Contains(x, y))))"
    },
    {
        "NL": "An object is either a red cube or a yellow cylinder, but not both.",
        "FOL": "∀x ((Red(x) ∧ Cube(x)) ⊕ (Yellow(x) ∧ Cylinder(x)))"
    },
    {
        "NL": "A store is successful if it generates profit xor has loyal customers.",
        "FOL": "∀x (Store(x) ∧ (GeneratesProfit(x) ⊕ HasLoyalCustomers(x)) → Successful(x))"
    },
    {
        "NL": "Some vehicles are electric and designed for public transportation.",
        "FOL": "∃x (Vehicle(x) ∧ Electric(x) ∧ PublicTransportation(x))"
    },
    {
        "NL": "A frog is hopping near the pond in the garden.",
        "FOL": "∃x (Frog(x) ∧ NearThePond(x) ∧ Hopping(x) ∧ InTheGarden(x))"
    },
    {
        "NL": "A company that specializes in manufacturing electronic devices and has a global presence is likely a major electronics corporation.",
        "FOL": "∀x (Company(x) ∧ SpecializesInManufacturingElectronics(x) ∧ GlobalPresence(x) → MajorElectronicsCorporation(x))"
    },
    {
        "NL": "A team is victorious if they win more matches than their adversary.",
        "FOL": "∀x ∀y (Team(x) ∧ Adversary(y) ∧ WinMoreMatches(x, y) → Victorious(x))"
    },
    {
        "NL": "A bird is an eagle or a penguin.",
        "FOL": "∀x (Bird(x) → (Eagle(x) ∨ Penguin(x)))"
    },
    {
        "NL": "An individual who is open-minded and receptive to new ideas is more likely to be innovative and creative.",
        "FOL": "∀x (OpenMindedAndReceptiveToNewIdeas(x) → (Innovative(x) ∧ Creative(x)))"
    },
    {
        "NL": "If a substance is a gas, it has no fixed shape or volume.",
        "FOL": "∀x (Substance(x) ∧ Gas(x) → (NoFixedShape(x) ∧ NoFixedVolume(x)))"
    },
    {
        "NL": "An artist who works with oil paints does not use watercolors nor acrylics.",
        "FOL": "∀x∀y (Artist(x) ∧ WorksWith(x, y) ∧ OilPaints(y) → (¬Uses(x, Watercolors) ∧ ¬Uses(x, Acrylics)))"
    },
    {
        "NL": "All scholars who have dedication and deep understanding are efficient.",
        "FOL": "∀x (Scholar(x) ∧ HasDedication(x) ∧ HasDeepUnderstanding(x) → Efficient(x))"
    },
    {
        "NL": "A bicycle can be ridden comfortably when the tires are inflated properly, the saddle is adjusted to the rider's height, and the brakes are functioning.",
        "FOL": "∀x ∀y ∀z (Bicycle(x) ∧ ProperlyInflatedTires(x, y) ∧ SaddleAdjustedToHeight(x, z) ∧ FunctioningBrakes(x) → ComfortableRide(x))"
    },
    {
        "NL": "A type of food preservation method that involves treating food with heat and sealing it in an airtight container to prevent the growth of microorganisms is canning.",
        "FOL": "∀x∀y∀z (FoodPreservationMethod(x) ∧ TreatsFoodWithHeat(x, y) ∧ SealsInAirtightContainer(x, z) ∧ PreventsMicroorganismGrowth(x) → Canning(x))"
    },
    {
        "NL": "A fire extinguisher can put out a fire if it's not empty and is appropriate for the fire type.",
        "FOL": "∀x ∀y (FireExtinguisher(x) ∧ Fire(y) ∧ ¬Empty(x) ∧ AppropriateForFireType(x, y) → PutsOut(x, y))"
    },
    {
        "NL": "Gregory doesn't respect any German or Italian.",
        "FOL": "∀x (Person(x) ∧ (From(x, germany) ∨ From(x, italy)) → ¬Respect(gregory, x))"
    },
    {
        "NL": "A greenhouse is a structure made of glass or plastic, designed to provide a controlled environment for growing plants.",
        "FOL": "∀x (Greenhouse(x) → (StructureMadeOf(x) ∧ (Glass(x) ∨ Plastic(x)) ∧ DesignedForControlledEnvironment(x) ∧ ForGrowingPlants(x)))"
    },
    {
        "NL": "A computer is efficient if it has a fast processor, ample storage capacity, and an effective cooling system.",
        "FOL": "∀x (Computer(x) ∧ FastProcessor(x) ∧ AmpleStorageCapacity(x, y) ∧ EffectiveCoolingSystem(x, z) → Efficient(x))"
    },
    {
        "NL": "Every professional is either a lawyer or a teacher, but not both.",
        "FOL": "∀x (Professional(x) → (Lawyer(x) ⊕ Teacher(x)))"
    },
    {
        "NL": "A road is considered safe if it is well-maintained and has proper signage.",
        "FOL": "∀x (Road(x) ∧ WellMaintained(x) ∧ ProperSignage(x) → Safe(x))"
    },
    {
        "NL": "Honey is produced by bees that collect nectar from flowers and store it in their hives.",
        "FOL": "∀x∀y∀z (Honey(x) ∧ Bee(y) ∧ Flower(z) ∧ CollectsNectar(y, z) → StoresInHive(y, x))"
    },
    {
        "NL": "No building is both modern and ancient.",
        "FOL": "¬∀x (Building(x) → (Modern(x) ∧ Ancient(x)))"
    },
    {
        "NL": "A river flows into a lake, a sea, or an ocean.",
        "FOL": "∀x (River(x) → ∃y (Lake(y) ∨ Sea(y) ∨ Ocean(y)) ∧ FlowsInto(x, y))"
    },
    {
        "NL": "A fruit is delicious only if it's apple.",
        "FOL": "∀y (Delicious(y) → Apple(y))"
    },
    {
        "NL": "A painter is coloring a mural.",
        "FOL": "∃x ∃y (Painter(x) ∧ Mural(y) ∧ Coloring(x, y))"
    },
    {
        "NL": "A place is noisy if it has traffic, construction, or loud music.",
        "FOL": "∀x (Place(x) ∧ (Traffic(x) ∨ Construction(x) ∨ LoudMusic(x)) → Noisy(x))"
    },
    {
        "NL": "A comet is composed of ice, dust, and other particles, and as it approaches the Sun, its outer layers are heated, creating a glowing tail.",
        "FOL": "∀x (Comet(x) → (ComposedOfIceDustAndOtherParticles(x) ∧ ApproachesSun(x) ∧ HeatedOuterLayers(x) ∧ CreatesGlowingTail(x)))"
    },
    {
        "NL": "A film is captivating when it features outstanding performances, has an intriguing plot, and showcases exceptional cinematography.",
        "FOL": "∀x (Film(x) ∧ OutstandingPerformances(x) ∧ IntriguingPlot(x) ∧ ExceptionalCinematography(x) → Captivating(x))"
    },
    {
        "NL": "A country's government enforces laws and provides public services.",
        "FOL": "∀x (Government(x) → (EnforcesLaws(x) ∧ ProvidesPublicServices(x)))"
    },
    {
        "NL": "Vaccines prevent diseases by triggering immunity.",
        "FOL": "∀x∀y (Vaccine(x) ∧ Disease(y) → PreventsByTriggeringImmunity(x, y))"
    },
    {
        "NL": "An isosceles triangle has two equal sides.",
        "FOL": "∀x (IsoscelesTriangle(x) → TwoEqualSides(x))"
    },
    {
        "NL": "If a system is consistent, that system is reliable.",
        "FOL": "∀x (System(x) ∧ Consistent(x) → Reliable(x))"
    },
    {
        "NL": "A train can travel between two cities, but not without passing through stations.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ City(y) ∧ City(z) → (TravelsBetween(x, y, z) → PassesThroughStations(x)))"
    },
    {
        "NL": "All members of the club attend meetings or are uninterested in administration matters.",
        "FOL": "∀x (ClubMember(x) → (AttendsMeetings(x) ∨ UninterestedInAdministration(x)))"
    },
    {
        "NL": "A vehicle that operates on rails, transports passengers or cargo, and is powered by an electric or diesel engine is a train.",
        "FOL": "∀x (Vehicle(x) ∧ OperatesOnRails(x) ∧ TransportsPassengersOrCargo(x) ∧ (PoweredByElectricEngine(x) ∨ PoweredByDieselEngine(x)) → Train(x))"
    },
    {
        "NL": "A person who exercises regularly and eats healthily is likely to be fit.",
        "FOL": "∀x ((ExercisesRegularly(x) ∧ EatsHealthily(x)) → LikelyFit(x))"
    },
    {
        "NL": "A theater hosts performances.",
        "FOL": "∀x ∃y (Theater(x) ∧ Performance(y) ∧ Hosts(x, y))"
    },
    {
        "NL": "An athlete excels in a sport if they have natural talent, dedication, and proper coaching.",
        "FOL": "∀x ∀y ∀z (Athlete(x) ∧ Sport(y) ∧ Coach(z) → (ExcelsIn(x, y) ↔ (NaturalTalent(x) ∧ Dedicated(x) ∧ ProperCoaching(z))))"
    },
    {
        "NL": "There isn't a professor who has read every paper in the conference.",
        "FOL": "¬∃x (Professor(x) ∧ ∀y (Paper(y) ∧ InConference(y) → Read(x, y)))"
    },
    {
        "NL": "Not every car is a sedan.",
        "FOL": "¬∀x (Car(x) → Sedan(x))"
    },
    {
        "NL": "A fruit that is red can be an apple, a cherry, or a strawberry.",
        "FOL": "∀x (Fruit(x) ∧ Red(x) → Apple(x) ∨ Cherry(x) ∨ Strawberry(x))"
    },
    {
        "NL": "A chemical reaction x occurs between substances y and z under certain conditions if x is the result of the interaction of y and z, and the required conditions are met.",
        "FOL": "∀x ∀y ∀z (ChemicalReaction(x) ∧ Substance(y) ∧ Substance(z) ∧ InteractionResult(x, y, z) ∧ RequiredConditionsMet(x, y, z) → Occurs(x, y, z))"
    },
    {
        "NL": "A vehicle is a car or a truck.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Truck(x)))"
    },
    {
        "NL": "A tree is tall, its leaves are green, and it provides shade.",
        "FOL": "∃x (Tree(x) ∧ Tall(x) ∧ GreenLeaves(x) ∧ ProvidesShade(x))"
    },
    {
        "NL": "Everything is not a blue circle.",
        "FOL": "¬∀x (Circle(x) ∧ Blue(x))"
    },
    {
        "NL": "A fruit x is ripe if it is not green and not rotten.",
        "FOL": "∀x (Fruit(x) ∧ ¬Green(x) ∧ ¬Rotten(x) → Ripe(x))"
    },
    {
        "NL": "A province is in Canada or Brazil.",
        "FOL": "∀x (Province(x) → (InCanada(x) ∨ InBrazil(x)))"
    },
    {
        "NL": "An artist creates captivating art if their work is visually appealing and either thought-provoking or emotionally evocative.",
        "FOL": "∀x (Artist(x) → (CaptivatingArt(x) ↔ (VisuallyAppealingWork(x) ∧ (ThoughtProvoking(x) ∨ EmotionallyEvocative(x)))))"
    },
    {
        "NL": "A productive team collaborates effectively, distributes work evenly among members, and establishes clear goals and expectations.",
        "FOL": "∀x∀y (Team(x) ∧ TeamMember(y, x) ∧ CollaboratesEffectively(x) ∧ DistributesWorkEvenly(x, y) ∧ EstablishesClearGoalsAndExpectations(x) → Productive(x))"
    },
    {
        "NL": "An organism is a frugivore if and only if it eats berries or nuts, but not leaves.",
        "FOL": "∀x (Organism(x) → (Frugivore(x) ↔ (EatsBerries(x) ∨ EatsNuts(x)) ∧ ¬EatsLeaves(x)))"
    },
    {
        "NL": "If a mammal is not a bat, it cannot fly, but it can walk.",
        "FOL": "∀x (Mammal(x) ∧ ¬Bat(x) → (¬CanFly(x) ∧ CanWalk(x)))"
    },
    {
        "NL": "A store sells clothing, electronics, or groceries.",
        "FOL": "∀x (Store(x) → (SellsClothing(x) ∨ SellsElectronics(x) ∨ SellsGroceries(x)))"
    },
    {
        "NL": "A location is an art gallery if it exhibits artworks, is open for the public to view, and has an aesthetic purpose.",
        "FOL": "∀x (Location(x) ∧ ExhibitsArtworks(x) ∧ OpenForPublicViewing(x) ∧ HasAestheticPurpose(x) → ArtGallery(x))"
    },
    {
        "NL": "A chair provides seating.",
        "FOL": "∀x (Chair(x) → ProvidesSeating(x))"
    },
    {
        "NL": "A car engine produces power if it consumes fuel and converts it into mechanical energy.",
        "FOL": "∀x ∀y ∀z (CarEngine(x) ∧ Fuel(y) ∧ Consumes(x, y) ∧ ConvertsToMechanicalEnergy(x, z) → ProducesPower(x, z))"
    },
    {
        "NL": "A tutor can educate a student by conveying understanding in a specific area.",
        "FOL": "∀x ∀y (Tutor(x) ∧ Student(y) → (Educates(x, y) → ConveysUnderstandingInSpecificArea(x, y)))"
    },
    {
        "NL": "An instrument can be a string, a wind, or a percussion instrument.",
        "FOL": "∀x (Instrument(x) → (String(x) ∨ Wind(x) ∨ Percussion(x)))"
    },
    {
        "NL": "A national park protects unique ecosystems, featuring diverse plant and animal species, and provides recreational opportunities for visitors, such as hiking, birdwatching, and camping.",
        "FOL": "∀x ∀y ∀z (NationalPark(x) → (Protects(x, y) ∧ UniqueEcosystems(y) ∧ Features(y, z) ∧ (DiversePlantSpecies(z) ∨ DiverseAnimalSpecies(z)) ∧ ProvidesRecreationalOpportunities(x) ∧ (Hiking(x) ∨ Birdwatching(x) ∨ Camping(x))))"
    },
    {
        "NL": "A flight can take off when it has received clearance from air traffic control and completed all necessary pre-flight checks.",
        "FOL": "∀x (Flight(x) ∧ ReceivedClearance(x) ∧ CompletedPreFlightChecks(x) → CanTakeOff(x))"
    },
    {
        "NL": "An event is a concert if it features live music performances by one or more artists.",
        "FOL": "∀x ∃y (Event(x) ∧ LiveMusicPerformance(x, y) → Concert(x))"
    },
    {
        "NL": "A book can be borrowed from a library for a limited time, after which it must be returned or renewed.",
        "FOL": "∀x∀y (Book(x) ∧ BorrowedFromLibrary(x, y) → (LimitedTime(y) ∧ (Returned(x) ∨ Renewed(x))))"
    },
    {
        "NL": "A university teaches students through lectures and practical sessions, awarding degrees upon successful completion.",
        "FOL": "∀x∀y (University(x) ∧ Student(y) → (Teaches(x, y) ∧ AttendsLectures(y, x) ∧ AttendsPracticalSessions(y, x) ∧ AwardsDegrees(x, y)))"
    },
    {
        "NL": "A store sells clothing items, such as shirts or pants, but not both, and never sells electronic devices.",
        "FOL": "∀x∀y∀z (Store(x) ∧ ClothingItem(y) ∧ (Shirt(y) ⊕ Pants(y)) ∧ ¬ElectronicDevice(z) → Sells(x, y, z))"
    },
    {
        "NL": "Some chemicals are either organic or inorganic.",
        "FOL": "∃v (Chemical(v) ∧ (Organic(v) ⊕ Inorganic(v)))"
    },
    {
        "NL": "Doctors treat patients, while researchers study diseases.",
        "FOL": "∀x ∀y (Doctor(x) ∧ Patient(y) → Treats(x, y)) ∧ ∀z ∀w (Researcher(z) ∧ Disease(w) → Studies(z, w))"
    },
    {
        "NL": "A novel can be fiction or nonfiction, depending on its content.",
        "FOL": "∀x (Novel(x) → (Fiction(x) ⊕ Nonfiction(x)))"
    },
    {
        "NL": "An event that occurs annually, commemorates a significant historical event, and often involves festive celebrations is a national holiday or a cultural festival.",
        "FOL": "∀x (Event(x) ∧ OccursAnnually(x) ∧ CommemoratesHistoricalEvent(x) ∧ InvolvesFestiveCelebrations(x) → (NationalHoliday(x) ∨ CulturalFestival(x)))"
    },
    {
        "NL": "A blue fish swims in some water.",
        "FOL": "∃x (Blue(x) ∧ Fish(x) → ∃y (Swims(x, y)))"
    },
    {
        "NL": "No circles are round.",
        "FOL": "∀x (Circle(x) → ¬Round(x))"
    },
    {
        "NL": "A fountain sprays water.",
        "FOL": "∀x (Fountain(x) → SpraysWater(x))"
    },
    {
        "NL": "A farmer cultivates crops on a field.",
        "FOL": "∀x (Farmer(x) → CultivatesCrops(x))"
    },
    {
        "NL": "For a bakery to have a successful opening day, it must offer fresh pastries, advertise effectively, and have sufficient staff, or risk a disappointing turnout.",
        "FOL": "∀x (Bakery(x) → (SuccessfulOpeningDay(x) ↔ ((FreshPastries(x) ∧ EffectiveAdvertising(x) ∧ SufficientStaff(x)) ∧ ¬DisappointingTurnout(x))))"
    },
    {
        "NL": "There are cats.",
        "FOL": "∃x (Cat(x))"
    },
    {
        "NL": "A computer processes data and sends signal when it needs to communicate.",
        "FOL": "∀x (Computer(x) → (ProcessesData(x) ∧ (IsNeedToCommunicate(x) → SendsSignal(x))))"
    },
    {
        "NL": "A plant needs sunlight and either water or fertilizer to grow.",
        "FOL": "∀x (Plant(x) → (NeedsSunlight(x) ∧ (NeedsWater(x) ∨ NeedsFertilizer(x))))"
    },
    {
        "NL": "A museum displays artifacts.",
        "FOL": "∀x ∃y (Museum(x) → Displays(x, y))"
    },
    {
        "NL": "A laptop's battery life is long if it lasts more than 8 hours during regular use and is not quickly drained when running high-performance applications.",
        "FOL": "∀x (Laptop(x) → (LongBatteryLife(x) ↔ (LastsMoreThan8Hours(x) ∧ ¬QuicklyDrained(x))))"
    },
    {
        "NL": "A song is a ballad if it recounts the personal journey of a distinguished person, sung by the person themselves.",
        "FOL": "∀x ∃y (Song(x) ∧ Person(y) ∧ RecountsPersonalJourney(x, y) ∧ SungBy(x, y) → Ballad(x))"
    },
    {
        "NL": "If a person is a pilot, they either fly airplanes or helicopters.",
        "FOL": "∀x (Person(x) ∧ Pilot(x) → FlyAirplanes(x) ⊕ FlyHelicopters(x))"
    },
    {
        "NL": "If a car has a hybrid engine, it uses both gasoline and electricity as sources of energy.",
        "FOL": "∀x (HybridEngine(x) → (UsesGasoline(x) ∧ UsesElectricity(x)))"
    },
    {
        "NL": "A computer network consists of connected devices, routers, and switches that facilitate communication between the devices.",
        "FOL": "∀x ∀y ∀z (ComputerNetwork(x) ∧ Device(y) ∧ RouterAndSwitch(z) → (Connected(x, y, z) ∧ FacilitateCommunication(x, y, z)))"
    },
    {
        "NL": "If a person specializes in treating diseases and conditions of the eye, they are considered an ophthalmologist.",
        "FOL": "∀x (SpecializesInTreatingDiseasesAndConditionsOfEye(x) → Ophthalmologist(x))"
    },
    {
        "NL": "A construction company builds a structure using specific materials, tools, and techniques according to a blueprint.",
        "FOL": "∀x∀y∀z (ConstructionCompany(x) ∧ Structure(y) ∧ Blueprint(z) ∧ UsesMaterialsToolsTechniques(x, z) → Builds(x, y))"
    },
    {
        "NL": "A team wins a match if they score more goals than the opposing team and either have a strong defense or a skilled goalkeeper.",
        "FOL": "∀x∀y (Team(x) ∧ Team(y) ∧ ScoreMoreGoals(x, y) ∧ (StrongDefense(x) ∨ SkilledGoalkeeper(x)) → WinsMatch(x, y))"
    },
    {
        "NL": "All diamonds are made of carbon.",
        "FOL": "∀x (Diamond(x) → MadeOfCarbon(x))"
    },
    {
        "NL": "If a policy is effective, then it lowers crime rates and uplifts social welfare.",
        "FOL": "∀x (Policy(x) ∧ Effective(x) → LowersCrimeRates(x) ∧ UpliftsWelfare(x))"
    },
    {
        "NL": "A plant that is a succulent stores water in its leaves and thrives in arid environments.",
        "FOL": "∀x (Plant(x) ∧ Succulent(x) → StoresWaterInLeaves(x) ∧ ThrivesInAridEnvironments(x))"
    },
    {
        "NL": "Every programmer who has collaborated with at least one programmer, who hasn't been awarded a top award, has either authored more than three software or attended all tech conferences.",
        "FOL": "∀x (Programmer(x) ∧ ∃y (Programmer(y) ∧ ¬AwardedTopAward(y) ∧ CollaboratedWith(x, y)) → (AuthoredMoreThanThreeSoftware(x) ∨ ∀z (TechConference(z) → Attended(x, z))))"
    },
    {
        "NL": "A bakery produces bread, pastries, and other baked goods, which can be sweet or savory.",
        "FOL": "∀x ∀y (Bakery(x) ∧ BakedGood(y) → (Produces(x, y) ∧ (Sweet(y) ∨ Savory(y))))"
    },
    {
        "NL": "Herbivorous animals primarily consume plant material, such as leaves, fruits, and roots, for nourishment and energy.",
        "FOL": "∀x∀y∀z∀w (Herbivorous(x) ∧ PlantMaterial(y) ∧ (Leaves(z) ∨ Fruits(z) ∨ Roots(w)) → ConsumesForNourishmentAndEnergy(x, y, z, w))"
    },
    {
        "NL": "Every student who assists another student is assisted by that student.",
        "FOL": "∀x ∀y (Student(x) ∧ Student(y) ∧ Assists(x, y) → Assists(y, x))"
    },
    {
        "NL": "Students attend classes to learn and acquire knowledge.",
        "FOL": "∀x ∀y (Student(x) ∧ Class(y) → (Attends(x, y) ∧ Learns(x) ∧ AcquiresKnowledge(x)))"
    },
    {
        "NL": "A bird can migrate long distances if it has a strong wingspan, sufficient energy reserves, and can navigate using environmental cues.",
        "FOL": "∀x ∀y ∀z (Bird(x) ∧ StrongWingspan(x, y) ∧ SufficientEnergyReserves(x, z) ∧ NavigatesUsingEnvironmentalCues(x) → MigratesLongDistances(x))"
    },
    {
        "NL": "A gemstone can be either precious or semi-precious, but not both.",
        "FOL": "∀x (Gemstone(x) → (Precious(x) ⊕ SemiPrecious(x)))"
    },
    {
        "NL": "A plant x is native to a geographic region y if x occurs naturally in y and has not been introduced by humans.",
        "FOL": "∀x ∀y (Plant(x) ∧ GeographicRegion(y) ∧ OccursNaturallyIn(x, y) ∧ NotIntroducedByHumans(x) → NativeTo(x, y))"
    },
    {
        "NL": "A triangle with three equal sides is called an equilateral triangle.",
        "FOL": "∀x (Triangle(x) ∧ ThreeEqualSides(x) → Equilateral(x))"
    },
    {
        "NL": "A vehicle is considered fuel-efficient if it consumes less fuel and produces lower emissions than conventional vehicles.",
        "FOL": "∀x (Vehicle(x) ∧ ConsumesLessFuel(x) ∧ LowerEmissions(x) → FuelEfficient(x))"
    },
    {
        "NL": "A vehicle that can travel on land and water, has wheels and propellers, and is used for amphibious operations is an amphibious vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ CanTravelOnLandAndWater(x) ∧ HasWheels(x) ∧ HasPropellers(x) ∧ UsedForAmphibiousOperations(x) → AmphibiousVehicle(x))"
    },
    {
        "NL": "Not all academics are either historians or sociologists, and none of them dislikes universities.",
        "FOL": "¬∀x (Academic(x) → (Historian(x) ∨ Sociologist(x))) ∧ ∀y (Academic(y) → ¬DislikeUniversity(y))"
    },
    {
        "NL": "If a material is a metal, it conducts electricity and heat.",
        "FOL": "∀x (Material(x) ∧ Metal(x) → (ConductsElectricity(x) ∧ ConductsHeat(x)))"
    },
    {
        "NL": "A laptop can be open or closed.",
        "FOL": "∀x (Laptop(x) → (Open(x) ∨ Closed(x)))"
    },
    {
        "NL": "A course is challenging if it requires many hours of study and has difficult exams.",
        "FOL": "∀x (Course(x) ∧ ManyHoursOfStudy(x) ∧ DifficultExams(x) → Challenging(x))"
    },
    {
        "NL": "A few games are both single-player and multiplayer.",
        "FOL": "∃x (Game(x) ∧ SinglePlayer(x) ∧ MultiPlayer(x))"
    },
    {
        "NL": "No engineer is either a mechanical expert or a chemical specialist.",
        "FOL": "¬∀x (Engineer(x) → (MechanicalExpert(x) ∨ ChemicalSpecialist(x)))"
    },
    {
        "NL": "No tree with leaves lacks roots.",
        "FOL": "∀x (Tree(x) → (HaveLeaves(x) → ¬LackRoot(x)))"
    },
    {
        "NL": "A restaurant attracts customers with delicious food, friendly service, and a pleasant atmosphere.",
        "FOL": "∀x (Restaurant(x) → (AttractsCustomers(x) ↔ (DeliciousFood(x) ∧ FriendlyService(x) ∧ PleasantAtmosphere(x))))"
    },
    {
        "NL": "A book is classified as a novel if it is a work of fiction, has a narrative structure, and presents a story with characters and events.",
        "FOL": "∀x (Book(x) ∧ WorkOfFiction(x) ∧ NarrativeStructure(x) ∧ PresentsStoryWithCharactersAndEvents(x) → Novel(x))"
    },
    {
        "NL": "A balanced diet includes a variety of food items from different food groups, providing essential nutrients and maintaining overall health.",
        "FOL": "∀x (BalancedDiet(x) → (∀y (FoodItem(y) ∧ DifferentFoodGroups(y) → Includes(x, y)) ∧ ProvidesEssentialNutrients(x) ∧ MaintainsOverallHealth(x)))"
    },
    {
        "NL": "A musical instrument belongs to the percussion family if it produces sound when struck, shaken, or scraped.",
        "FOL": "∀x (MusicalInstrument(x) ∧ (ProducesSoundWhenStruck(x) ∨ ProducesSoundWhenShaken(x) ∨ ProducesSoundWhenScraped(x)) → PercussionFamily(x))"
    },
    {
        "NL": "An event is a festival if it involves a series of public events, such as performances, exhibitions, or competitions, celebrating a particular theme or cultural aspect.",
        "FOL": "∀x∀y (Event(x) ∧ SeriesOfPublicEvents(x, y) ∧ (Performances(y) ∨ Exhibitions(y) ∨ Competitions(y)) ∧ CelebratesThemeOrCulturalAspect(x, y) → Festival(x))"
    },
    {
        "NL": "Vehicles equipped with advanced safety features and driver-assist technology can reduce the likelihood of accidents and protect passengers more effectively.",
        "FOL": "∀x (Vehicle(x) ∧ AdvancedSafetyFeaturesAndDriverAssistTechnology(x) → (ReducesLikelihoodOfAccidents(x) ∧ ProtectsPassengersEffectively(x)))"
    },
    {
        "NL": "Food is either sweet or salty.",
        "FOL": "∀x (Food(x) → (Sweet(x) ∨ Salty(x)))"
    },
    {
        "NL": "A beverage that contains caffeine, is derived from the leaves of the Camellia sinensis plant, and is prepared by steeping dried leaves in hot water is a type of tea.",
        "FOL": "∀x∀y∀z (Beverage(x) ∧ ContainsCaffeine(x) ∧ DerivedFromLeavesOfCamelliaSinensisPlant(x, y) ∧ PreparedBySteepingDriedLeavesInHotWater(x, z) → TypeOfTea(x))"
    },
    {
        "NL": "A vacation destination is popular if it offers stunning landscapes, various recreational activities, and a pleasant climate.",
        "FOL": "∀x (VacationDestination(x) ∧ StunningLandscapes(x) ∧ RecreationalActivities(x, y) ∧ PleasantClimate(x, z) → Popular(x))"
    },
    {
        "NL": "A painting is mesmerizing if and only if it has vibrant colors, an impactful theme, but doesn't have a too chaotic composition.",
        "FOL": "∀x (Painting(x) ∧ Mesmerizing(x) ↔ (HasVibrantColors(x) ∧ HasImpactfulTheme(x) ∧ ¬TooChaoticComposition(x)))"
    },
    {
        "NL": "Scientists researching a hypothesis gather data and analyze it to draw conclusions.",
        "FOL": "∀s ∀h (Scientist(s) ∧ Hypothesis(h) → (GathersData(s, h) ∧ AnalyzesData(s, h) ∧ DrawsConclusions(s, h)))"
    },
    {
        "NL": "A chemical reaction that absorbs heat from the surrounding environment is called an endothermic reaction.",
        "FOL": "∀x (ChemicalReaction(x) ∧ AbsorbsHeatFromEnvironment(x) → EndothermicReaction(x))"
    },
    {
        "NL": "All artists who are creative and dedicated are successful.",
        "FOL": "∀x (Artist(x) ∧ Creative(x) ∧ Dedicated(x) → Successful(x))"
    },
    {
        "NL": "A place where people go to buy and sell goods or services is a market.",
        "FOL": "∀x (Place(x) ∧ PeopleBuyAndSellGoods(x) ∧ PeopleBuyAndSellServices(x) → Market(x))"
    },
    {
        "NL": "A river x flows into a lake y if x transports water to y, eventually joining it.",
        "FOL": "∀x ∀y (River(x) ∧ Lake(y) ∧ TransportsWaterTo(x, y) → FlowsInto(x, y))"
    },
    {
        "NL": "Some birds either sing melodies or tunes, but do not perform both.",
        "FOL": "∃x (Bird(x) ∧ (SingMelodies(x) ⊕ SingTunes(x)))"
    },
    {
        "NL": "Every teacher teaches at least one subject.",
        "FOL": "∀x (Teacher(x) → ∃y (Subject(y) ∧ Teaches(x, y)))"
    },
    {
        "NL": "Filmmakers create movies that tell stories, entertain, or inform audiences.",
        "FOL": "∀x (Filmmaker(x) → CreatesMovie(x, y) ∧ (TellsStory(y) ∨ Entertains(y) ∨ Informs(y)))"
    },
    {
        "NL": "A place is considered a tourist attraction if it is visited by many people for leisure or cultural interest.",
        "FOL": "∀x (VisitedByManyForLeisureOrCulturalInterest(x) → TouristAttraction(x))"
    },
    {
        "NL": "All painters are skilled artists and some artists are not good critics.",
        "FOL": "∀x (Painter(x) → SkilledArtist(x)) ∧ ∃y (Artist(y) ∧ ¬GoodCritic(y))"
    },
    {
        "NL": "A room is well-lit if it has natural light or enough artificial light sources.",
        "FOL": "∀x (Room(x) → (NaturalLight(x) ∨ EnoughArtificialLightSources(x)) ∧ WellLit(x))"
    },
    {
        "NL": "A location is safe for swimming if there are no sharks or dangerous currents present.",
        "FOL": "∀x (Location(x) ∧ ¬(SharksPresent(x) ∨ DangerousCurrents(x)) → SafeForSwimming(x))"
    },
    {
        "NL": "An artist creates paintings, sculptures, or installations, but not all three.",
        "FOL": "∀x (Artist(x) → (CreatesPaintings(x) ⊕ CreatesSculptures(x) ⊕ CreatesInstallations(x)))"
    },
    {
        "NL": "There is a dog who barks at all and only the cats who do not hiss at themselves.",
        "FOL": "∃x (Dog(x) ∧ ∀y (Cat(y) → (Bark(x, y) ↔ ¬Hiss(y, y))))"
    },
    {
        "NL": "A vehicle is deemed electric if it runs on electricity.",
        "FOL": "∀x (Vehicle(x) ∧ RunsOnElectricity(x) → Electric(x))"
    },
    {
        "NL": "There is a dessert that is both sweet and sour.",
        "FOL": "∃x (Dessert(x) ∧ Sweet(x) ∧ Sour(x))"
    },
    {
        "NL": "A museum exhibits artworks and historical artifacts.",
        "FOL": "∀x∀y (Museum(x) ∧ (Artwork(y) ∨ HistoricalArtifact(y)) → Exhibits(x, y))"
    },
    {
        "NL": "A vehicle is considered a boat if it is designed for traveling on water.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForTravelingOnWater(x) → Boat(x))"
    },
    {
        "NL": "Cars that run on electricity and emit no greenhouse gases contribute to a cleaner environment.",
        "FOL": "∀x (Car(x) ∧ RunsOnElectricity(x) ∧ EmitsNoGreenhouseGases(x) → ContributesToCleanEnvironment(x))"
    },
    {
        "NL": "Each rose is a flower, but not all flowers are roses.",
        "FOL": "∀x (Rose(x) → Flower(x)) ∧ ¬∀x (Flower(x) → Rose(x))"
    },
    {
        "NL": "Every computer has a monitor.",
        "FOL": "∀x ∃y (Computer(x) → Monitor(y) ∧ Has(x, y))"
    },
    {
        "NL": "Unless a book is both detailed and informative, it is not helpful.",
        "FOL": "∀x (¬(Detailed(x) ∧ Informative(x)) → ¬Helpful(x))"
    },
    {
        "NL": "A liquid is either hot or cold, but not both.",
        "FOL": "∀x (Liquid(x) → (Hot(x) ⊕ Cold(x)))"
    },
    {
        "NL": "Musicians compose, perform, or record music.",
        "FOL": "∀x (Musician(x) → (Composes(x) ∨ Performs(x) ∨ Records(x)))"
    },
    {
        "NL": "A spider creates a web to catch insects.",
        "FOL": "∀x ∀y (Spider(x) ∧ Insect(y) → ∃z (Web(z) ∧ Creates(x, z) ∧ Catches(z, y)))"
    },
    {
        "NL": "A meal that is vegetarian does not contain meat, fish, or poultry.",
        "FOL": "∀x (Meal(x) ∧ Vegetarian(x) → ¬Meat(x) ∧ ¬Fish(x) ∧ ¬Poultry(x))"
    },
    {
        "NL": "There is no artist who can paint both landscapes and portraits but has never exhibited in a gallery.",
        "FOL": "¬∃x (Artist(x) ∧ PaintsLandscape(x) ∧ PaintsPortraits(x) ∧ ¬ExhibitedInGallery(x))"
    },
    {
        "NL": "There isn't a triangle that points every circular object.",
        "FOL": "¬∃x (Triangle(x) ∧ ∀y (Circle(y) → Points(x, y)))"
    },
    {
        "NL": "Dolphins, whales, and sharks are marine animals.",
        "FOL": "∀x (Dolphin(x) ∨ Whale(x) ∨ Shark(x) → MarineAnimal(x))"
    },
    {
        "NL": "An object is a bicycle if it is a human-powered vehicle with two wheels that are attached to a frame, and the rider sits on a saddle and pedals to propel the bicycle forward.",
        "FOL": "∀x ((HumanPoweredVehicle(x) ∧ TwoWheels(x) ∧ Frame(x) ∧ Saddle(x) ∧ Pedals(x)) → Bicycle(x))"
    },
    {
        "NL": "An ocean is a vast body of saltwater that covers the majority of the Earth's surface, is home to diverse marine life, and plays a crucial role in regulating global climate.",
        "FOL": "∀x (Ocean(x) → VastBodyOfSaltwater(x) ∧ CoversMajorityOfEarthSurface(x) ∧ HomeToDiverseMarineLife(x) ∧ RegulatesGlobalClimate(x))"
    },
    {
        "NL": "A pharmacy dispenses prescription medications, over-the-counter drugs, and provides advice on their proper usage.",
        "FOL": "∀x (Pharmacy(x) → (Dispenses(x) ∧ (PrescriptionMedications(x) ∨ OverTheCounterDrugs(x)) ∧ ProvidesAdviceOnProperUsage(x)))"
    },
    {
        "NL": "A team is productive when its members collaborate effectively and share a clear goal.",
        "FOL": "∀x (Team(x) ∧ EffectiveCollaboration(x) ∧ ClearGoal(x) → Productive(x))"
    },
    {
        "NL": "All chefs who cook Italian food appreciate fine ingredients.",
        "FOL": "∀x (Chef(x) ∧ CooksItalianFood(x) → AppreciatesFineIngredients(x))"
    },
    {
        "NL": "A movie is popular if it has a large audience and receives positive word-of-mouth.",
        "FOL": "∀x (Movie(x) ∧ LargeAudience(x) ∧ PositiveWordOfMouth(x) → Popular(x))"
    },
    {
        "NL": "There is not a single chef that cooks all Italian dishes.",
        "FOL": "¬∃x (Chef(x) ∧ ∀y (Italian(y) ∧ Dish(y) → Cooks(x, y)))"
    },
    {
        "NL": "Some musicians play guitar, but not all musicians compose music or perform live.",
        "FOL": "∃x (Musician(x) ∧ PlayGuitar(x)) ∧ ¬∀y (Musician(y) → (ComposeMusic(y) ∨ PerformLive(y)))"
    },
    {
        "NL": "A movie becomes popular when it features a captivating storyline, has talented actors, and is directed by a skilled filmmaker.",
        "FOL": "∀x∀y∀z (Movie(x) ∧ CaptivatingStoryline(x, y) ∧ TalentedActors(x, z) ∧ SkilledFilmmaker(x) → Popular(x))"
    },
    {
        "NL": "A type of engine that uses the combustion of fuel and air to create a high-temperature, high-pressure gas, which is then used to generate mechanical work, is an internal combustion engine.",
        "FOL": "∀x (Engine(x) ∧ UsesCombustionOfFuelAndAir(x) ∧ GeneratesHighTemperatureHighPressureGas(x) ∧ ProducesMechanicalWork(x) → InternalCombustionEngine(x))"
    },
    {
        "NL": "A camera captures images, with digital cameras using electronic sensors, while film cameras use photographic film.",
        "FOL": "∀x ∀y ∀z (Camera(x) → CapturesImages(x)) ∧ (DigitalCamera(y) → Uses(y, ElectronicSensors)) ∧ (FilmCamera(z) → Uses(z, PhotographicFilm))"
    },
    {
        "NL": "If a vehicle is a bicycle, then it has two wheels.",
        "FOL": "∀x (Bicycle(x) → HasTwoWheels(x))"
    },
    {
        "NL": "A key unlocks a lock by aligning the internal pins or tumblers.",
        "FOL": "∀x ∀y (Key(x) ∧ Lock(y) ∧ AlignsPinsOrTumblers(x, y) → Unlocks(x, y))"
    },
    {
        "NL": "If not all movies are entertaining, there is a dish that everyone likes.",
        "FOL": "¬∀x (Movie(x) → Entertaining(x)) → ∃y (Dish(y) ∧ ∀z (Person(z) → Likes(z, y)))"
    },
    {
        "NL": "A bird can fly long distances when it has strong wings and high endurance.",
        "FOL": "∀x∀y∀z (Bird(x) ∧ StrongWings(y) ∧ HighEndurance(z) ∧ Has(x, y) ∧ Has(x, z) → CanFlyLongDistances(x))"
    },
    {
        "NL": "A flower blooms when it receives adequate sunlight, sufficient water, and is in an environment with the right temperature.",
        "FOL": "∀x (Flower(x) ∧ AdequateSunlight(x) ∧ SufficientWater(x) ∧ RightTemperature(x) → Blooms(x))"
    },
    {
        "NL": "An artist creates a painting using colors and different brush strokes.",
        "FOL": "∀x (Artist(x) → Creates(x, painting, colors, brushStrokes))"
    },
    {
        "NL": "Humans are intelligent, deer are cautious, and squirrels are agile.",
        "FOL": "∀x (Human(x) → Intelligent(x)) ∧ ∀y (Deer(y) → Cautious(y)) ∧ ∀z (Squirrel(z) → Agile(z))"
    },
    {
        "NL": "An animal is considered a carnivore if it primarily consumes other animals.",
        "FOL": "∀x (Animal(x) ∧ ConsumesOtherAnimals(x) → Carnivore(x))"
    },
    {
        "NL": "An object that can maintain its position in the air by generating lift is called a flying object.",
        "FOL": "∀x (Object(x) ∧ MaintainsPositionInAir(x) ∧ GeneratesLift(x) → FlyingObject(x))"
    },
    {
        "NL": "A community event that promotes social interaction, cultural exchange, and inclusivity fosters a sense of belonging among its attendees.",
        "FOL": "∀x (CommunityEvent(x) ∧ PromotesSocialInteraction(x) ∧ PromotesCulturalExchange(x) ∧ Inclusive(x) → FostersSenseOfBelonging(x))"
    },
    {
        "NL": "A person can travel from Paris to London either by train, airplane, or car.",
        "FOL": "∀x (Person(x) → TravelsByTrain(x) ⊕ TravelsByAirplane(x) ⊕ TravelsByCar(x))"
    },
    {
        "NL": "A train travels on rails, while a car uses roads and a boat navigates through water.",
        "FOL": "∀x ∀y ∀z (Train(x) ∧ Car(y) ∧ Boat(z) → (TravelsOnRails(x) ∧ UsesRoads(y) ∧ NavigatesThroughWater(z)))"
    },
    {
        "NL": "Healthy ecosystems support diverse species, maintain a balance of resources, and provide ecological services.",
        "FOL": "∀x (HealthyEcosystem(x) → (SupportsDiverseSpecies(x) ∧ MaintainsResourceBalance(x) ∧ ProvidesEcologicalServices(x)))"
    },
    {
        "NL": "A smartphone requires either Wi-Fi or cellular data to access the internet.",
        "FOL": "∀x (Smartphone(x) ∧ AccessInternet(x) → (RequiresWiFi(x) ∨ RequiresCellularData(x)))"
    },
    {
        "NL": "A person is considered an expert in a field if they have extensive knowledge and experience.",
        "FOL": "∀x ∀y (Person(x) ∧ Field(y) ∧ ExtensiveKnowledge(x, y) ∧ Experience(x, y) → Expert(x, y))"
    },
    {
        "NL": "A movie attracts audience's interest if it has engrossing cinematography, believable actors, and a shocking climax.",
        "FOL": "∀x (Movie(x) ∧ HasEngrossingCinematography(x) ∧ HasBelievableActors(x) ∧ HasShockingClimax(x) → AttractsAudiencesInterest(x))"
    },
    {
        "NL": "A cat is playing in the garden.",
        "FOL": "∃x ∃y (Cat(x) ∧ Garden(y) ∧ PlayingIn(x, y))"
    },
    {
        "NL": "A student graduates from a university after completing the required coursework and passing the necessary exams.",
        "FOL": "∀x∀y (GraduatesFrom(x, y) ↔ (Student(x) ∧ University(y) ∧ ∃z (RequiredCoursework(z) ∧ Completes(x, z)) ∧ ∃w (NecessaryExams(w) ∧ Passes(x, w))))"
    },
    {
        "NL": "A tropical rainforest ecosystem has high biodiversity, receives significant annual rainfall, and contains various plant and animal species adapted to its unique environment.",
        "FOL": "∀x (TropicalRainforest(x) → (HighBiodiversity(x) ∧ SignificantAnnualRainfall(x) ∧ VariousPlantSpecies(x) ∧ VariousAnimalSpecies(x) ∧ AdaptedToUniqueEnvironment(x)))"
    },
    {
        "NL": "Birds lay eggs and have feathers, while reptiles lay eggs and have scales.",
        "FOL": "∀x (Bird(x) → (LaysEggs(x) ∧ HasFeathers(x))) ∧ ∀y (Reptile(y) → (LaysEggs(y) ∧ HasScales(y)))"
    },
    {
        "NL": "There is no chef who cooks both Italian and French cuisine but has never worked in a Michelin star restaurant.",
        "FOL": "¬∃x (Chef(x) ∧ CooksItalian(x) ∧ CooksFrench(x) ∧ ¬WorkedInMichelinStarRestaurant(x))"
    },
    {
        "NL": "A desert is a region with low precipitation and extreme temperature variations, resulting in sparse vegetation and animal life.",
        "FOL": "∀x (Desert(x) → (LowPrecipitation(x) ∧ ExtremeTemperatureVariations(x) ∧ SparseVegetation(x) ∧ SparseAnimalLife(x)))"
    },
    {
        "NL": "A bird can fly long distances only if it has large wings and a light body.",
        "FOL": "∀x (Bird(x) ∧ LargeWings(x) ∧ LightBody(x) → CanFlyLongDistances(x))"
    },
    {
        "NL": "A national park safeguards wildlife, shielding vulnerable creatures and their environments, while facilitating opportunities for animal studies and nature observation.",
        "FOL": "∀x ∃y ∃z (NationalPark(x) → (VulnerableCreatures(y) ∧ Environment(z) ∧ Belongs(y, z) ∧ (SafeguardsWildlife(x) ∧ Shields(x, y) ∧ Shields(x, z) ∧ ProvidesAnimalStudiesOpportunities(x) ∧ ProvidesNatureObservationOpportunities(x))))"
    },
    {
        "NL": "A ski resort forecast is accurate if it properly predicts the snowfall, temperature, and possibility of avalanches.",
        "FOL": "∀x (SkiResortForecast(x) ∧ ProperlyPredictsSnowfall(x) ∧ ProperlyPredictsTemperature(x) ∧ ProperlyPredictsPossibilityOfAvalanches(x) → Accurate(x))"
    },
    {
        "NL": "A painting that is abstract often features non-representational shapes and colors, and may evoke emotions or ideas.",
        "FOL": "∀x (Painting(x) ∧ Abstract(x) → FeaturesNonRepresentationalShapesAndColors(x) ∧ MayEvokeEmotionsOrIdeas(x))"
    },
    {
        "NL": "Lions roar while frogs croak.",
        "FOL": "∀x (Lion(x) → Roars(x)) ∧ (Frog(x) → Croaks(x))"
    },
    {
        "NL": "A movie becomes a cult classic if it develops a passionate fanbase over time and features unconventional themes or characters.",
        "FOL": "∀x (Movie(x) ∧ DevelopsPassionateFanbaseOverTime(x) ∧ FeaturesUnconventionalThemesOrCharacters(x) → CultClassic(x))"
    },
    {
        "NL": "A yellow sun is always bright.",
        "FOL": "∀x (Yellow(x) ∧ Sun(x) → Bright(x))"
    },
    {
        "NL": "A smartphone needs charging when its battery level is low and it has been used extensively.",
        "FOL": "∀x∀y∀z (Smartphone(x) ∧ BatteryLevel(y) ∧ Usage(z) ∧ Low(y) ∧ Extensive(z) → NeedsCharging(x))"
    },
    {
        "NL": "A park provides green spaces, recreational facilities, and natural habitats for urban residents to enjoy outdoor activities and connect with nature.",
        "FOL": "∀x (Park(x) → (ProvidesGreenSpaces(x) ∧ ProvidesRecreationalFacilities(x) ∧ ProvidesNaturalHabitats(x) ∧ PromotesOutdoorActivities(x) ∧ ConnectsWithNature(x)))"
    },
    {
        "NL": "Healthy ecosystems, characterized by diverse species and stable populations, contribute to the balance of nature.",
        "FOL": "∀x (HealthyEcosystem(x) ∧ DiverseSpecies(x) ∧ StablePopulations(x) → ContributesToBalanceOfNature(x))"
    },
    {
        "NL": "Magnetic fields are generated by electric currents, either from the motion of charged particles or from changes in the electric field, affecting the behavior of nearby charged particles.",
        "FOL": "∀x ∀y (MagneticField(x) ∧ ElectricCurrents(y) → (GeneratedByCurrents(x, y) ∧ (MotionOfChargedParticles(y) ∨ ChangesInElectricField(y)) ∧ AffectsBehaviorOfNearbyChargedParticles(x)))"
    },
    {
        "NL": "A frog is croaking in the pond under the moonlight.",
        "FOL": "∃x ∃y ∃z (Frog(x) ∧ Pond(y) ∧ CroakingIn(x, y) ∧ Moonlight(z))"
    },
    {
        "NL": "Some scientific theories are supported by experimental evidence or theoretical arguments, but not both types of evidence.",
        "FOL": "∃x ∃y ∃z (ScientificTheory(x) ∧ Evidence(y) ∧ Evidence(z) ∧ Experimental(y) ∧ Theoretical(z) ∧ (SupportedBy(x, y) ⊕ SupportedBy(x, z)))"
    },
    {
        "NL": "A hammer drives nails into materials.",
        "FOL": "∀x (Hammer(x) → DrivesNails(x))"
    },
    {
        "NL": "Something is either a large triangle or a small square, but not both.",
        "FOL": "∀x ((Large(x) ∧ Triangle(x)) ⊕ (Small(x) ∧ Square(x)))"
    },
    {
        "NL": "A painting that is surreal can make people think.",
        "FOL": "∀x ∀y (Painting(x) ∧ Surreal(x) ∧ Person(y) → CanMakeThink(x, y))"
    },
    {
        "NL": "Libraries store books, offer study spaces, and provide access to computers for research.",
        "FOL": "∀x (Library(x) → (∃y (Book(y) ∧ Stores(x, y)) ∧ ∃z (StudySpace(z) ∧ Offers(x, z)) ∧ ∃w (Computer(w) ∧ ProvidesAccess(x, w))))"
    },
    {
        "NL": "Not every student who studies literature or learns music has passed an exam or completed a project.",
        "FOL": "¬∀x (Student(x) ∧ (StudiesLiterature(x) ∨ LearnsMusic(x)) → (PassedExam(x) ∨ CompletedProject(x)))"
    },
    {
        "NL": "A doctor prescribes medication to a patient for treatment.",
        "FOL": "∀x∀y∀z (Doctor(x) ∧ Patient(y) ∧ Medication(z) → Prescribes(x, y, z))"
    },
    {
        "NL": "A person is a vegetarian if they avoid eating meat.",
        "FOL": "∀x (Vegetarian(x) ↔ (∀y (Meat(y) → ¬Eats(x, y))))"
    },
    {
        "NL": "Tara sings in a choir or Tara is a lawyer.",
        "FOL": "SingChoir(tara) ∨ Lawyer(tara)"
    },
    {
        "NL": "A movie is a box office success if it generates substantial revenue and receives positive reviews from both critics and the audience.",
        "FOL": "∀x (Movie(x) ∧ SubstantialRevenue(x) ∧ PositiveReviews(x, critics) ∧ PositiveReviews(x, audience) → BoxOfficeSuccess(x))"
    },
    {
        "NL": "Every bird is not predatory or harmful.",
        "FOL": "∃x (Bird(x) ∧ (¬Predatory(x) ∨ ¬Harmful(x)))"
    },
    {
        "NL": "A gadget is deemed a toaster if it uses heating elements to brown and toast bread.",
        "FOL": "∀x (Gadget(x) ∧ UsesHeatingElements(x) ∧ BrownsBread(x) ∧ ToastsBread(x) → Toaster(x))"
    },
    {
        "NL": "A chef prepares dishes with ingredients following a recipe.",
        "FOL": "∀x ∀y ∀z (Chef(x) ∧ Dish(y) ∧ Ingredient(z) ∧ Recipe(r) → PreparesWithFollowing(x, y, z, r))"
    },
    {
        "NL": "A plant is a carnivorous plant if it derives some or all of its nutrients from trapping and consuming insects or other small animals.",
        "FOL": "∀x (Plant(x) ∧ (DerivesNutrientsFromTrapping(x) ∨ DerivesNutrientsFromConsuming(x)) ∧ (Insects(x) ∨ SmallAnimals(x)) → CarnivorousPlant(x))"
    },
    {
        "NL": "A type of footwear designed for running, with cushioning and support, is a running shoe.",
        "FOL": "∀x (Footwear(x) ∧ DesignedForRunning(x) ∧ Cushioning(x) ∧ Support(x) → RunningShoe(x))"
    },
    {
        "NL": "A meal is vegan if it contains no meat, dairy, or eggs.",
        "FOL": "∀x (Meal(x) ∧ Vegan(x) → (¬Meat(x) ∧ ¬Dairy(x) ∧ ¬Eggs(x)))"
    },
    {
        "NL": "A rectangle has four sides and opposite sides are equal.",
        "FOL": "∀x (Rectangle(x) → (HasFourSides(x) ∧ OppositeSidesEqual(x)))"
    },
    {
        "NL": "A truck is typically used for transporting goods, a bus is used for carrying passengers, and a race car is used for competing in races.",
        "FOL": "∀x (Truck(x) → UsedForTransportingGoods(x)) ∧ ∀y (Bus(y) → UsedForCarryingPassengers(y)) ∧ ∀z (RaceCar(z) → UsedForCompetingInRaces(z))"
    },
    {
        "NL": "A vehicle is classified as a race car if it competes in races.",
        "FOL": "∀x (Vehicle(x) ∧ CompetesInRaces(x) → RaceCar(x))"
    },
    {
        "NL": "Some animals are carnivorous, while others are herbivorous.",
        "FOL": "∀x (Animal(x) → (Carnivorous(x) ⊕ Herbivorous(x)))"
    },
    {
        "NL": "The stegosaurus is herbivorous.",
        "FOL": "∀x (Stegosaurus(x) → Herbivorous(x))"
    },
    {
        "NL": "A river flows into a lake, providing a source of freshwater and contributing to the lake's ecosystem.",
        "FOL": "∀x∀y (River(x) ∧ Lake(y) ∧ FlowsInto(x, y) → (ProvidesSourceOfFreshwater(x, y) ∧ ContributesToEcosystem(y)))"
    },
    {
        "NL": "An animal is a herbivore if its primary source of nutrients comes from consuming plant material.",
        "FOL": "∀x (Animal(x) ∧ PrimaryNutrientSourceFromPlants(x) → Herbivore(x))"
    },
    {
        "NL": "A material that allows electricity to flow through it with minimal resistance under specific conditions is deemed a superconductor.",
        "FOL": "∀x∀y∀z (Material(x) ∧ AllowsElectricityFlow(x, y) ∧ MinimalResistance(x) ∧ UnderSpecificConditions(x, z) → Superconductor(x))"
    },
    {
        "NL": "A hat protects from the sun and is worn on the head.",
        "FOL": "∀x (Hat(x) → (ProtectsFromSun(x) ∧ WornOnHead(x)))"
    },
    {
        "NL": "It's not the case that every book is interesting.",
        "FOL": "¬∀x (Book(x) → Interesting(x))"
    },
    {
        "NL": "A film is a documentary if it narrates the real-life experience of the director.",
        "FOL": "∀x ∃y (Film(x) ∧ Director(y) ∧ NarratesExperience(x, y) → Documentary(x))"
    },
    {
        "NL": "A city has a tropical climate if it experiences high temperatures and significant rainfall throughout the year.",
        "FOL": "∀x (City(x) ∧ HighTemperatures(x) ∧ SignificantRainfall(x) → TropicalClimate(x))"
    },
    {
        "NL": "A refrigerator keeps food cold and preserves it.",
        "FOL": "∀x ∀y (Refrigerator(x) ∧ Food(y) → (KeepsCold(x, y) ∧ Preserves(x, y)))"
    },
    {
        "NL": "All humans need oxygen to survive, while plants need carbon dioxide.",
        "FOL": "∀x∀y (Human(x) → NeedsOxygen(x)) ∧ (Plant(y) → NeedsCarbonDioxide(y))"
    },
    {
        "NL": "An ecosystem is healthy if it has a diverse range of species, stable populations, and minimal pollution.",
        "FOL": "∀x (Healthy(x) ↔ (Ecosystem(x) ∧ ∃y (DiverseRangeOfSpecies(y) ∧ Has(x, y)) ∧ ∃z (StablePopulations(z) ∧ Has(x, z)) ∧ ∃w (MinimalPollution(w) ∧ Has(x, w))))"
    },
    {
        "NL": "A book is borrowed from a library when a patron checks it out.",
        "FOL": "∀x∀y (Book(x) ∧ Patron(y) ∧ ChecksOut(y, x) → BorrowedFromLibrary(x, y))"
    },
    {
        "NL": "Skyscrapers have more floors than regular buildings.",
        "FOL": "∀x ∀y (Skyscraper(x) ∧ RegularBuilding(y) → MoreFloors(x, y))"
    },
    {
        "NL": "A cat is playing with a ball, while a dog is resting in the living room.",
        "FOL": "∃x ∃y (Cat(x) ∧ Ball(y) ∧ PlayingWith(x, y)) ∧ ∃z (Dog(z) ∧ Resting(z) ∧ InLivingRoom(z))"
    },
    {
        "NL": "A chemical reaction that absorbs heat from the surroundings is an endothermic reaction.",
        "FOL": "∀x (ChemicalReaction(x) ∧ AbsorbsHeat(x) → Endothermic(x))"
    },
    {
        "NL": "The universe is infinite and mysterious and cold.",
        "FOL": "∀x (Universe(x) → (Infinite(x) ∧ Mysterious(x) ∧ Cold(x)))"
    },
    {
        "NL": "An artwork is considered abstract if it does not represent recognizable objects, uses unconventional shapes and colors, and focuses on visual elements.",
        "FOL": "∀x (Artwork(x) ∧ ¬RepresentsRecognizableObjects(x) ∧ UnconventionalShapesAndColors(x) ∧ FocusesOnVisualElements(x) → Abstract(x))"
    },
    {
        "NL": "An employee is a good fit for a company if they have relevant skills, adapt well to the company culture, and demonstrate a strong work ethic, without being a source of workplace conflict.",
        "FOL": "∀x ∀y (Employee(x) ∧ Company(y) ∧ GoodFit(x, y) → ((RelevantSkills(x, y) ∧ AdaptsToCulture(x, y) ∧ StrongWorkEthic(x)) ∧ ¬SourceOfWorkplaceConflict(x, y)))"
    },
    {
        "NL": "There are desserts that are neither frozen nor baked, but not all desserts are like that.",
        "FOL": "(∃x (Dessert(x) ∧ ¬(Frozen(x) ∨ Baked(x)))) ∧ ¬∀y (Dessert(y) → ¬(Frozen(y) ∨ Baked(y)))"
    },
    {
        "NL": "All musicians are talented or some flowers are colorful when there is a novel which is interesting unless none are unkind.",
        "FOL": "(∀x (Musician(x) → Talented(x)) ∨ ∃y (Flower(y) ∧ Colorful(y))) ↔ (∃z (Novel(z) ∧ (Interesting(z) ∨ ∀w (¬Unkind(w)))))"
    },
    {
        "NL": "An animal x is nocturnal if it is primarily active during the night and rests during the day.",
        "FOL": "∀x (Animal(x) ∧ ActiveAtNight(x) ∧ RestsDuringDay(x) → Nocturnal(x))"
    },
    {
        "NL": "Tablets allow children to play games and connect to WiFi.",
        "FOL": "∀x (Tablet(x) → (PlayGames(x) ∧ ConnectToWiFi(x)))"
    },
    {
        "NL": "A durable electronic device withstands daily wear and tear, resists water damage, and maintains optimal performance throughout its lifespan.",
        "FOL": "∀x∀y∀z (ElectronicDevice(x) ∧ WithstandsDailyWearAndTear(x, y) ∧ ResistsWaterDamage(x, z) ∧ MaintainsOptimalPerformance(x, z) → Durable(x, y, z))"
    },
    {
        "NL": "Some plants are either flowering or non-flowering, but not both.",
        "FOL": "∃x (Plant(x) ∧ (Flowering(x) ⊕ NonFlowering(x)))"
    },
    {
        "NL": "A toy can be made of wood, plastic, or metal.",
        "FOL": "∃x (Toy(x) ∧ (MadeOfWood(x) ∨ MadeOfPlastic(x) ∨ MadeOfMetal(x)))"
    },
    {
        "NL": "A planet x orbits a star y if x is held in a path around y by the gravitational pull between them.",
        "FOL": "∀x ∀y (Planet(x) ∧ Star(y) ∧ HeldInPath(x, y) ∧ GravitationalPull(x, y) → Orbits(x, y))"
    },
    {
        "NL": "A language is spoken in a country if it is official, widely used, or indigenous.",
        "FOL": "∀x∀y (Language(x) ∧ Country(y) ∧ (Official(x, y) ∨ WidelyUsed(x, y) ∨ Indigenous(x, y)) → SpokenIn(x, y))"
    },
    {
        "NL": "A predator hunts prey for food, while a scavenger feeds on the remains of dead animals.",
        "FOL": "∀x ∀y (Predator(x) ∧ Prey(y) → HuntsForFood(x, y)) ∧ (Scavenger(x) ∧ DeadAnimal(y) → FeedsOnRemains(x, y))"
    },
    {
        "NL": "An animal is nocturnal if it is mostly active during the night.",
        "FOL": "∀x (Nocturnal(x) ↔ (Animal(x) ∧ ActiveDuringNight(x)))"
    },
    {
        "NL": "A fruit is ripe when it is soft, sweet, and has an intense aroma.",
        "FOL": "∀x (Fruit(x) ∧ Soft(x) ∧ Sweet(x) ∧ IntenseAroma(x) → Ripe(x))"
    },
    {
        "NL": "A house can have a pool, a garden, or both, but not neither.",
        "FOL": "∀x (House(x) → ((HasPool(x) ∧ ¬HasGarden(x)) ∨ (¬HasPool(x) ∧ HasGarden(x)) ∨ (HasPool(x) ∧ HasGarden(x))))"
    },
    {
        "NL": "An insect can be found in a specific habitat, and a researcher can study the insect by observing it in that habitat.",
        "FOL": "∀x ∀y ∀z (Insect(x) ∧ Habitat(y) ∧ Researcher(z) → (FoundIn(x, y) ∧ StudiesInsect(z, x) → ObservesInHabitat(z, y)))"
    },
    {
        "NL": "An individual is known as a gamer if they play on console or a high-end computer.",
        "FOL": "∀x (Individual(x) ∧ (PlaysOnConsole(x) ∨ UsesHighEndComputer(x)) → Gamer(x))"
    },
    {
        "NL": "A book with a suspenseful plot, unexpected twists, and focuses on solving a crime is a mystery novel.",
        "FOL": "∀x (Book(x) ∧ SuspensefulPlot(x) ∧ UnexpectedTwists(x) ∧ FocusesOnSolvingCrime(x) → MysteryNovel(x))"
    },
    {
        "NL": "An event is classified as a sporting event if it involves physical exertion, competition between participants, and adherence to a set of rules.",
        "FOL": "∀x (Event(x) ∧ InvolvesPhysicalExertion(x) ∧ CompetitionBetweenParticipants(x) ∧ AdherenceToRules(x) → SportingEvent(x))"
    },
    {
        "NL": "A cat chases a mouse and a dog barks at the cat.",
        "FOL": "∀x ∀y ∀z (Cat(x) ∧ Mouse(y) ∧ Dog(z) → (Chases(x, y) ∧ BarksAt(z, x)))"
    },
    {
        "NL": "An athlete qualifies for a competition when they achieve the required performance standard and meet the eligibility criteria.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Competition(y) ∧ AchievesRequiredPerformanceStandard(x, y) ∧ MeetsEligibilityCriteria(x, y) → QualifiesFor(x, y))"
    },
    {
        "NL": "A restaurant is either open or closed, but not both.",
        "FOL": "∀x (Restaurant(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "A tree has green leaves, produces fruit, and is deciduous, or it has needles, produces no fruit, and is evergreen.",
        "FOL": "∀x (Tree(x) → ((GreenLeaves(x) ∧ ProducesFruit(x) ∧ Deciduous(x)) ∨ (Needles(x) ∧ ¬ProducesFruit(x) ∧ Evergreen(x))))"
    },
    {
        "NL": "A chef cooks meals and designs menus.",
        "FOL": "∀x (Chef(x) → (∃y (Meal(y) ∧ Cooks(x, y)) ∧ ∃z (Menu(z) ∧ Designs(x, z))))"
    },
    {
        "NL": "An animal that has feathers, a beak, and lays eggs is classified as a bird.",
        "FOL": "∀x (Animal(x) ∧ HasFeathers(x) ∧ HasBeak(x) ∧ LaysEggs(x) → Bird(x))"
    },
    {
        "NL": "A bird can fly and lay eggs, but not swim.",
        "FOL": "∀x (Bird(x) → ((CanFly(x) ∧ CanLayEggs(x)) ∧ ¬CanSwim(x)))"
    },
    {
        "NL": "A rose is a flowering plant, while a cactus is a succulent plant.",
        "FOL": "∀x ∀y (Rose(x) ∧ Cactus(y) → (FloweringPlant(x) ∧ SucculentPlant(y)))"
    },
    {
        "NL": "A wind turbine generates electricity when the wind turns its blades.",
        "FOL": "∀x∀y (WindTurbine(x) ∧ WindTurnsBlades(x, y) → GeneratesElectricity(x, y))"
    },
    {
        "NL": "A company becomes a monopoly when it dominates a market and has no significant competitors.",
        "FOL": "∀x (Company(x) ∧ DominatesMarket(x) ∧ NoSignificantCompetitors(x) → Monopoly(x))"
    },
    {
        "NL": "A building is eco-friendly when it utilizes renewable energy sources, conserves water, and reduces waste.",
        "FOL": "∀x (Building(x) ∧ UtilizesRenewableEnergy(x) ∧ ConservesWater(x) ∧ ReducesWaste(x) → EcoFriendly(x))"
    },
    {
        "NL": "A structure with multiple floors, connected by stairs or elevators, and designed for office or commercial use is called an office building.",
        "FOL": "∀x (Structure(x) ∧ MultipleFloors(x) ∧ ConnectedByStairsOrElevators(x) ∧ DesignedForOfficeOrCommercialUse(x) → OfficeBuilding(x))"
    },
    {
        "NL": "A ladder allows climbing.",
        "FOL": "∀x (Ladder(x) → AllowsClimbing(x))"
    },
    {
        "NL": "Astronauts need to wear spacesuits when they are outside a spacecraft in the vacuum of space.",
        "FOL": "∀x (Astronaut(x) ∧ OutsideSpacecraft(x) ∧ InVacuumOfSpace(x) → WearSpacesuit(x))"
    },
    {
        "NL": "If a worker is diligent, that worker is productive.",
        "FOL": "∀x (Worker(x) ∧ Diligent(x) → Productive(x))"
    },
    {
        "NL": "An umbrella protects from rain, while sunscreen protects from UV radiation.",
        "FOL": "∀x∀y (Umbrella(x) ∧ Rain(y) → ProtectsFrom(x, y)) ⊕ ∀z∀w (Sunscreen(z) ∧ UVRadiation(w) → ProtectsFrom(z, w))"
    },
    {
        "NL": "A person is a translator if they convert written or spoken text from one language to another.",
        "FOL": "∀x (Translator(x) ↔ (Person(x) ∧ ConvertsText(x) ∧ LanguageConversion(x)))"
    },
    {
        "NL": "A vehicle is considered an electric vehicle if it is powered by electricity and does not use fossil fuels.",
        "FOL": "∀x (Vehicle(x) ∧ PoweredByElectricity(x) ∧ ¬UsesFossilFuels(x) → ElectricVehicle(x))"
    },
    {
        "NL": "All puppies are not pests or nuisances.",
        "FOL": "∀x (Puppy(x) ∧ (¬Pest(x) ∨ ¬Nuisance(x)))"
    },
    {
        "NL": "An art gallery exhibits diverse artwork, including oil paintings with rich colors and intricate details, sculptures with unique forms and textures, and photographs capturing striking moments.",
        "FOL": "∀x ∀y (ArtGallery(x) ∧ (OilPainting(x, y) ∧ (RichColors(y) ∧ IntricateDetails(y)) ∨ Sculpture(x, y) ∧ (UniqueForm(y) ∧ Texture(y)) ∨ Photograph(x, y) ∧ StrikingMoments(y)))"
    },
    {
        "NL": "No pink hexagons are large.",
        "FOL": "¬∃x (Pink(x) ∧ Hexagon(x) ∧ ¬Large(x))"
    },
    {
        "NL": "Every physician who is compassionate and skillful is reliable.",
        "FOL": "∀x (Physician(x) ∧ Compassionate(x) ∧ Skillful(x) → Reliable(x))"
    },
    {
        "NL": "There is a planet where all humans live.",
        "FOL": "∃x (Planet(x) ∧ ∀y (Human(y) → LiveOn(y, x)))"
    },
    {
        "NL": "A vehicle is a car or a bicycle.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Bicycle(x)))"
    },
    {
        "NL": "A song is mesmerizing if it has a catchy tune, does not have meaningful lyrics, and has a distinctive genre.",
        "FOL": "∀x (Song(x) ∧ HasCatchyTune(x) ∧ ¬HasMeaningfulLyrics(x) ∧ HasDistinctiveGenre(x) → IsMesmerizing(x))"
    },
    {
        "NL": "There are politicians who support climate change and also practice veganism.",
        "FOL": "∃x (Politician(x) ∧ SupportClimateChange(x) ∧ PracticeVeganism(x))"
    },
    {
        "NL": "A hike is considered challenging if it has a steep incline, rocky terrain, or a distance greater than 10 miles.",
        "FOL": "∀x (Hike(x) ∧ Challenging(x) → (SteepIncline(x) ∨ RockyTerrain(x) ∨ DistanceGreaterThanTenMiles(x)))"
    },
    {
        "NL": "A laptop with a high-resolution display, a powerful processor, and a dedicated graphics card is suitable for tasks such as video editing, gaming, and graphic design.",
        "FOL": "∀x (Laptop(x) ∧ HighResolutionDisplay(x) ∧ PowerfulProcessor(x) ∧ DedicatedGraphicsCard(x) → (SuitableForVideoEditing(x) ∨ SuitableForGaming(x) ∨ SuitableForGraphicDesign(x)))"
    },
    {
        "NL": "Some tools are powered by electricity, while others are hand-powered.",
        "FOL": "∃x (Tool(x) ∧ Electric(x)) ∧ ∃y (Tool(y) ∧ HandPowered(y))"
    },
    {
        "NL": "Not everyone loves to both cook and bake.",
        "FOL": "¬∀x (Person(x) → (LovesToCook(x) ∧ LovesToBake(x)))"
    },
    {
        "NL": "A man is a strength coach if he designs strength programs and promotes muscle building and performance.",
        "FOL": "∀x (Man(x) ∧ DesignsStrengthPrograms(x) ∧ PromotesMuscleBuilding(x) ∧ PromotesPerformance(x) → StrengthCoach(x))"
    },
    {
        "NL": "A durable backpack, suitable for hiking, can carry items such as a tent, sleeping bag, or cooking gear.",
        "FOL": "∀x ∀y ∀z (Backpack(x) ∧ Durable(x) ∧ SuitableForHiking(x) ∧ Item(y) ∧ (Tent(y) ∨ SleepingBag(y) ∨ CookingGear(y)) → CanCarry(x, y, z))"
    },
    {
        "NL": "If a person is a veterinarian, they diagnose and treat animal illnesses.",
        "FOL": "∀x (Person(x) ∧ Veterinarian(x) → (DiagnoseAnimalIllnesses(x) ∧ TreatAnimalIllnesses(x)))"
    },
    {
        "NL": "Not all stars are bright.",
        "FOL": "¬∀x (Star(x) → Bright(x))"
    },
    {
        "NL": "A smartphone has a camera and can access the internet, while a feature phone has limited internet capabilities.",
        "FOL": "∀x (Smartphone(x) ∧ Camera(x) ∧ InternetAccess(x)) ∧ ∀y (FeaturePhone(y) ∧ LimitedInternet(y))"
    },
    {
        "NL": "Talented artists do not procrastinate.",
        "FOL": "∀x (Artist(x) ∧ Talented(x) → ¬Procrastinate(x))"
    },
    {
        "NL": "In basketball, a player can score points by making a free throw, a two-point field goal, or a three-point field goal.",
        "FOL": "∀x∀y∀z∀w (Player(x) ∧ Basketball(y) → (ScoresFreeThrow(x, z) ∨ ScoresTwoPointFieldGoal(x, w) ∨ ScoresThreePointFieldGoal(x, w)))"
    },
    {
        "NL": "A square has four equal sides and four right angles, while a rectangle has four right angles but unequal sides.",
        "FOL": "∀x (Square(x) → (HasFourEqualSides(x) ∧ HasFourRightAngles(x))) ∧ ∀y (Rectangle(y) → (HasFourRightAngles(y) ∧ ¬HasFourEqualSides(y)))"
    },
    {
        "NL": "Every country has a leader, but none has a leader taller than the country.",
        "FOL": "∀x ∃y (HasLeader(x, y)) ∧ ¬∃z ∃w (HasLeader(z, w) ∧ TallerThan(w, z))"
    },
    {
        "NL": "There are drivers who are neither reckless nor unlicensed.",
        "FOL": "∃x (Driver(x) ∧ ¬(Reckless(x) ∨ Unlicensed(x)))"
    },
    {
        "NL": "A dish with no meat is vegetarian.",
        "FOL": "∀x (Dish(x) ∧ ¬Meat(x) → Vegetarian(x))"
    },
    {
        "NL": "Trees lose their leaves in autumn and grow new ones in spring.",
        "FOL": "∀x (Tree(x) → (LosesLeaves(x, autumn) ∧ GrowsLeaves(x, spring)))"
    },
    {
        "NL": "A store can be open or closed.",
        "FOL": "∀x (Store(x) → (Open(x) ∨ Closed(x)))"
    },
    {
        "NL": "A smartphone allows users to make calls, send messages, and access the internet, while a landline phone only allows users to make calls.",
        "FOL": "∀x ∀y (Smartphone(x) ∧ LandlinePhone(y) → ((MakeCalls(x) ∧ SendMessages(x) ∧ AccessInternet(x)) ∧ MakeCalls(y) ∧ ¬(SendMessages(y) ∨ AccessInternet(y))))"
    },
    {
        "NL": "A building primarily used for the display and preservation of works of art is an art museum.",
        "FOL": "∀x (Building(x) ∧ PrimarilyUsedForDisplayAndPreservation(x) ∧ ContainsWorksOfArt(x) → ArtMuseum(x))"
    },
    {
        "NL": "There is no programmer who codes in Java and Python but has never worked for a software company.",
        "FOL": "¬∃x (Programmer(x) ∧ CodesJava(x) ∧ CodesPython(x) ∧ ¬WorkedInSoftwareCompany(x))"
    },
    {
        "NL": "Not every cook who uses fresh ingredients makes a delicious meal, but those who make a delicious meal use fresh ingredients.",
        "FOL": "¬∀x (UsesFreshIngredients(x) → MakesDeliciousMeal(x)) ∧ ∀y (MakesDeliciousMeal(y) → UsesFreshIngredients(y))"
    },
    {
        "NL": "An artificial intelligence system achieves mastery in a domain when it outperforms human experts and adapts to new scenarios effectively.",
        "FOL": "∀x (ArtificialIntelligenceSystem(x) → (Mastery(x) ↔ (OutperformsHumanExperts(x) ∧ AdaptsNewScenarios(x))))"
    },
    {
        "NL": "Maria and Claire are doctors.",
        "FOL": "Doctor(maria) ∧ Doctor(claire)"
    },
    {
        "NL": "A piece is a part of puzzle only if it fits.",
        "FOL": "∀w (Piece(w) ∧ Puzzle(w) → Fits(w))"
    },
    {
        "NL": "A product becomes a bestseller if it has excellent reviews and sells a large number of units within a short time frame.",
        "FOL": "∀x (Product(x) → (Bestseller(x) ↔ (ExcellentReviews(x) ∧ LargeNumberOfUnitsSold(x) ∧ ShortTimeFrame(x))))"
    },
    {
        "NL": "Drinking green tea boosts immunity and aids digestion.",
        "FOL": "∀x (GreenTea(x) → BoostsImmunity(x) ∧ AidsDigestion(x))"
    },
    {
        "NL": "A camera captures images by focusing light through a lens onto a sensor.",
        "FOL": "∀x ∀y ∀z (Camera(x) ∧ Image(y) ∧ Lens(z) ∧ Sensor(s) → CapturesByFocusing(x, y, z, s))"
    },
    {
        "NL": "A pharmacy sells medication, while a convenience store sells everyday items and snacks.",
        "FOL": "∀x ∀y (Pharmacy(x) ∧ ConvenienceStore(y) → (SellsMedication(x) ∧ SellsEverydayItems(y) ∧ SellsSnacks(y)))"
    },
    {
        "NL": "A tree provides shade when it has leaves and is taller than its surrounding vegetation.",
        "FOL": "∀x (Tree(x) → (ProvidesShade(x) ↔ (HasLeaves(x) ∧ TallerThanSurroundingVegetation(x))))"
    },
    {
        "NL": "A device that can be carried easily, holds digital books, has a long battery life, and is portable is an e-reader.",
        "FOL": "∀x (Device(x) ∧ CanBeCarriedEasily(x) ∧ HoldsDigitalBooks(x) ∧ HasLongBatteryLife(x) ∧ Portable(x) → Ereader(x))"
    },
    {
        "NL": "A circle is not both yellow and purple.",
        "FOL": "∀x (Circle(x) → ¬(Yellow(x) ∧ Purple(x)))"
    },
    {
        "NL": "A book that provides step-by-step instructions, illustrations, and explanations for a specific topic is a guidebook.",
        "FOL": "∀x (Book(x) ∧ StepByStepInstructions(x) ∧ Illustrations(x) ∧ Explanations(x) ∧ SpecificTopic(x) → Guidebook(x))"
    },
    {
        "NL": "In a theatrical performance, actors portray characters while wearing costumes and makeup.",
        "FOL": "∀x ∀y (Actor(x) ∧ Character(y) ∧ TheatricalPerformance(z) → (Portrays(x, y, z) ∧ WearsCostume(x) ∧ WearsMakeup(x)))"
    },
    {
        "NL": "A smartphone includes features such as internet access, a touchscreen, and a high-quality camera.",
        "FOL": "∀x (Smartphone(x) → (IncludesInternetAccess(x) ∧ HasTouchscreen(x) ∧ HighQualityCamera(x)))"
    },
    {
        "NL": "A package is either fragile or durable.",
        "FOL": "∀x (Package(x) → (Fragile(x) ⊕ Durable(x)))"
    },
    {
        "NL": "An artwork gains recognition when it showcases exceptional craftsmanship, elicits emotional responses, and reflects a unique perspective.",
        "FOL": "∀x (Artwork(x) ∧ ExceptionalCraftsmanship(x) ∧ EmotionalResponses(x) ∧ UniquePerspective(x) → Recognition(x))"
    },
    {
        "NL": "A painting is impressive if it has a intricate details and bright colours.",
        "FOL": "∀x (Painting(x) ∧ HasIntricateDetails(x) ∧ HasBrightColours(x) → Impressive(x))"
    },
    {
        "NL": "Every apple that is juicy and freshly picked tastes superb when eaten instantaneously.",
        "FOL": "∀x (Apple(x) ∧ Juicy(x) ∧ FreshlyPicked(x) ∧ EatenImmediately(x) → TastesSuperb(x))"
    },
    {
        "NL": "A microwave oven heats food by using microwaves, is an electrical appliance, and is not a conventional oven.",
        "FOL": "∀x (MicrowaveOven(x) ↔ (HeatsFood(x) ∧ UsesMicrowaves(x) ∧ ElectricalAppliance(x) ∧ ¬ConventionalOven(x)))"
    },
    {
        "NL": "If Noah is a mechanic then Ava is an engineer.",
        "FOL": "Mechanic(noah) → Engineer(ava)"
    },
    {
        "NL": "A fabric that is made from natural fibers, is absorbent, and has a soft texture is cotton.",
        "FOL": "∀x (Fabric(x) ∧ MadeFromNaturalFibers(x) ∧ Absorbent(x) ∧ SoftTexture(x) → Cotton(x))"
    },
    {
        "NL": "A toy is safe for children if it does not have sharp edges and is made of non-toxic materials.",
        "FOL": "∀x (Toy(x) ∧ ¬SharpEdges(x) ∧ NonToxicMaterials(x) → SafeForChildren(x))"
    },
    {
        "NL": "Flowers bloom in response to specific environmental conditions, like temperature and sunlight.",
        "FOL": "∀x∀y∀z (Flower(x) ∧ EnvironmentalCondition(y) ∧ (Temperature(y) ∨ Sunlight(z)) → Blooms(x))"
    },
    {
        "NL": "An astronomical object that emits light and heat due to nuclear reactions in its core is a star.",
        "FOL": "∀x (AstronomicalObject(x) ∧ EmitsLight(x) ∧ EmitsHeat(x) ∧ NuclearReactionsInCore(x) → Star(x))"
    },
    {
        "NL": "A mammal gives birth to live young and feeds them with milk produced by the mother.",
        "FOL": "∀x∀y (Mammal(x) ∧ Mother(x, y) ∧ LiveBirth(x) ∧ ProducesMilk(y) → FeedsWithMilk(y))"
    },
    {
        "NL": "A light bulb can be either on, off, or blinking, but not in any combination of these states.",
        "FOL": "∀x (LightBulb(x) → (On(x) ⊕ Off(x) ⊕ Blinking(x)))"
    },
    {
        "NL": "A librarian organizes books and assists patrons in a library.",
        "FOL": "∀x∀y∀z (Librarian(x) ∧ Book(y) ∧ Library(z) → (Organizes(x, y) ∧ AssistsIn(x, y, z)))"
    },
    {
        "NL": "An athlete is a professional if they compete in a sport and earn a salary for their performance.",
        "FOL": "∀x (Athlete(x) ∧ CompetesInSport(x) ∧ EarnsSalary(x) → Professional(x))"
    },
    {
        "NL": "A building is a skyscraper if it has over 50 floors and is primarily used for commercial purposes.",
        "FOL": "∀x (Building(x) ∧ Over50Floors(x) ∧ CommercialPurposes(x) → Skyscraper(x))"
    },
    {
        "NL": "A chemical compound that has a specific molecular structure, exhibits unique properties, and is used in a particular industrial application is typically an organic or inorganic substance.",
        "FOL": "∀x∀y∀z (ChemicalCompound(x) ∧ SpecificMolecularStructure(x, y) ∧ ExhibitsUniqueProperties(x) ∧ UsedInIndustrialApplication(x, z) → (OrganicSubstance(x) ∨ InorganicSubstance(x)))"
    },
    {
        "NL": "A television displays video content by receiving a signal from a broadcast source or streaming service.",
        "FOL": "∀x (Television(x) ∧ (BroadcastSource(x) ∨ StreamingService(x)) → DisplaysVideoContent(x))"
    },
    {
        "NL": "A visual representation of an area, typically produced on a flat surface, showing geographic features and the relative position of different locations, is a map.",
        "FOL": "∀x (VisualRepresentation(x) ∧ AreaRepresentation(x) ∧ FlatSurface(x) ∧ ShowsGeographicFeatures(x) ∧ RelativePositions(x) → Map(x))"
    },
    {
        "NL": "If a person is a journalist, they either write articles or produce news reports.",
        "FOL": "∀x (Person(x) ∧ Journalist(x) → WriteArticles(x) ⊕ ProduceNewsReports(x))"
    },
    {
        "NL": "A book can be fiction or non-fiction.",
        "FOL": "∀x (Book(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "Some horses run quickly.",
        "FOL": "∃x (Horse(x) ∧ RunQuickly(x))"
    },
    {
        "NL": "A wind turbine converts the kinetic energy of moving air into mechanical energy, which can then be transformed into electricity by a generator.",
        "FOL": "∀x∀y (WindTurbine(x) ∧ (KineticEnergy(y) ∧ MechanicalEnergy(z) ∧ Generator(w)) → ConvertsEnergyAndGeneratesElectricity(x, y, z, w))"
    },
    {
        "NL": "A customer who buys an item online receives a digital receipt.",
        "FOL": "∀x∀y (Customer(x) ∧ BuyOnline(x, y) → ReceiveDigitalReceipt(x, y))"
    },
    {
        "NL": "A mountain range is a series of connected mountains, often formed by tectonic forces, and features high elevations and steep terrain.",
        "FOL": "∀x (MountainRange(x) → (SeriesOfConnectedMountains(x) ∧ FormedByTectonicForces(x) ∧ HighElevations(x) ∧ SteepTerrain(x)))"
    },
    {
        "NL": "To become a top athlete, one needs to practice regularly, possess natural talent, and have a dedicated coach.",
        "FOL": "∀x∀y (Athlete(x) ∧ Coach(y) ∧ PracticeRegularly(x) ∧ NaturalTalent(x) ∧ Dedicated(y) → TopAthlete(x))"
    },
    {
        "NL": "If a person is a coach, they train and guide athletes.",
        "FOL": "∀x (Person(x) ∧ Coach(x) → (TrainAthletes(x) ∧ GuideAthletes(x)))"
    },
    {
        "NL": "A smartphone battery lasts longer when it is charged regularly, the screen brightness is reduced, and power-intensive applications are closed.",
        "FOL": "∀x (SmartphoneBattery(x) ∧ ChargedRegularly(x) ∧ ReducedScreenBrightness(x) ∧ ClosedPowerIntensiveApps(x) → LastsLonger(x))"
    },
    {
        "NL": "A book is fiction or non-fiction.",
        "FOL": "∀x (Book(x) → Fiction(x) ∨ NonFiction(x))"
    },
    {
        "NL": "Actors perform in plays, films, and television shows to entertain audiences.",
        "FOL": "∀x (Actor(x) → (PerformInPlays(x) ∨ PerformInFilms(x) ∨ PerformInTVShows(x) ∧ EntertainAudiences(x)))"
    },
    {
        "NL": "An electronic device is a mobile phone if it is portable, supports wireless communication, and offers features such as voice calls, text messaging, and internet access.",
        "FOL": "∀x (ElectronicDevice(x) ∧ Portable(x) ∧ SupportsWirelessCommunication(x) ∧ OffersVoiceCallsTextMessagingInternetAccess(x) → MobilePhone(x))"
    },
    {
        "NL": "A coin is flipped or not flipped, never both.",
        "FOL": "∀x (Coin(x) → (Flipped(x) ⊕ ¬Flipped(x)))"
    },
    {
        "NL": "A musical instrument that has strings and is played with a bow is a stringed instrument.",
        "FOL": "∀x ((MusicalInstrument(x) ∧ HasStrings(x) ∧ PlayedWithBow(x)) → StringedInstrument(x))"
    },
    {
        "NL": "A gardener is working in some park.",
        "FOL": "∃x ∃y (Gardener(x) ∧ Working(x) ∧ Park(y) ∧ In(x, y))"
    },
    {
        "NL": "Every cat is either sleepy or playful, but not both.",
        "FOL": "∀x (Cat(x) ∧ (Sleepy(x) ⊕ Playful(x)))"
    },
    {
        "NL": "A movie can be exciting or boring, but not both simultaneously.",
        "FOL": "∀x (Movie(x) → (Exciting(x) ⊕ Boring(x)))"
    },
    {
        "NL": "A television broadcasts programs and displays images using a screen and audio through speakers.",
        "FOL": "∀x (Television(x) → (BroadcastsPrograms(x) ∧ DisplaysImagesUsingScreen(x) ∧ AudioThroughSpeakers(x)))"
    },
    {
        "NL": "An instructor can train a learner by imparting skills in a certain field.",
        "FOL": "∀x ∀y (Instructor(x) ∧ Learner(y) → (Trains(x, y) → ImpartsSkillsInCertainField(x, y)))"
    },
    {
        "NL": "If all humans are communicative then there are some humans who respect Olivia.",
        "FOL": "∀x (Human(x) → Communicative(x)) → ∃x (Human(x) ∧ Respect(x, olivia))"
    },
    {
        "NL": "A flower is blooming in the garden.",
        "FOL": "∃x (Flower(x) ∧ Blooming(x) ∧ InTheGarden(x))"
    },
    {
        "NL": "A person is considered a plumber if they install and repair pipes, fixtures, and other plumbing systems for water supply and waste removal.",
        "FOL": "∀x (Person(x) ∧ InstallsAndRepairsPipesAndFixtures(x) ∧ PlumbingSystems(x) ∧ WaterSupplyAndWasteRemoval(x) → Plumber(x))"
    },
    {
        "NL": "In a competition, athletes compete in events, and judges evaluate their performance.",
        "FOL": "∀x ∀y ∀z (Competition(x) ∧ Athlete(y) ∧ Judge(z) → (CompeteIn(y, x) ∧ EvaluatePerformance(z, y)))"
    },
    {
        "NL": "A window is either open or closed, but not both.",
        "FOL": "∀x (Window(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "A door is open or closed, but never both.",
        "FOL": "∀x (Door(x) → (Open(x) ⊕ Closed(x)))"
    },
    {
        "NL": "Not all animals are wild, but every wild animal lives in the forest.",
        "FOL": "¬∀x (Animal(x) → Wild(x)) ∧ ∀y (Wild(y) ∧ Animal(y) → LivesInForest(y))"
    },
    {
        "NL": "If there are no brilliant novels, then no literary analyst lauds any poem.",
        "FOL": "¬∃x (BrilliantNovel(x)) → ¬∃y (LiteraryAnalyst(y) ∧ ∃z (Poem(z) ∧ Laud(y, z)))"
    },
    {
        "NL": "A game played with a ball, where two teams attempt to score points by throwing the ball through a hoop mounted at a specific height, is basketball.",
        "FOL": "∀x (Game(x) ∧ PlayedWithBall(x) ∧ TwoTeams(x) ∧ ScorePoints(x) ∧ ThrowBallThroughHoop(x) ∧ SpecificHoopHeight(x) → Basketball(x))"
    },
    {
        "NL": "A garden is flourishing if it has healthy plants, attracts pollinators, and is well-kept.",
        "FOL": "∀x (Garden(x) ∧ HealthyPlants(x) ∧ AttractsPollinators(x) ∧ WellKept(x) → Flourishing(x))"
    },
    {
        "NL": "A diner dispenses main courses such as steak or pasta for payment, in the form of cheque or cash.",
        "FOL": "∀x ∃y ∃z (Diner(x) ∧ MainCourse(y) ∧ (Steak(y) ∨ Pasta(y)) ∧ Payment(z) ∧ (Cheque(z) ∨ Cash(z)) ∧ InExchangeFor(x, z) → Dispenses(x, y))"
    },
    {
        "NL": "A job candidate is qualified for a position if they have relevant experience and required education or certifications, but not if they have a history of unprofessional conduct.",
        "FOL": "∀x (JobCandidate(x) ∧ Qualified(x) ↔ (RelevantExperience(x) ∧ RequiredEducationOrCertifications(x)) ∧ ¬UnprofessionalConduct(x))"
    },
    {
        "NL": "Wolves howl, but foxes don't.",
        "FOL": "∀x ((Wolf(x) → Howls(x)) ∧ (Fox(x) → ¬Howls(x)))"
    },
    {
        "NL": "A plant requires water, sun, and good soil to grow properly.",
        "FOL": "∀x (Plant(x) → (ReceivesWater(x) ∧ ReceivesSun(x) ∧ OnGoodSoil(x)) → GrowsProperly(x))"
    },
    {
        "NL": "Several professional cricketers who practice cricket are also adept at rugby.",
        "FOL": "∃x (ProCricketer(x) ∧ PracticeCricket(x) ∧ AdeptAtRugby(x))"
    },
    {
        "NL": "Several musicians who play the guitar are also experts in songwriting.",
        "FOL": "∃x (Musician(x) ∧ PlayGuitar(x) ∧ ExpertInSongwriting(x))"
    },
    {
        "NL": "All doctors who treat cancer are empathetic.",
        "FOL": "∀x (Doctor(x) ∧ TreatsCancer(x) → Empathetic(x))"
    },
    {
        "NL": "Skyscrapers are tall, bungalows are single-story, and pyramids have a triangular base.",
        "FOL": "∀x (Skyscraper(x) → Tall(x)) ∧ ∀y (Bungalow(y) → SingleStory(y)) ∧ ∀z (Pyramid(z) → TriangularBase(z))"
    },
    {
        "NL": "Gardens display various plants and offer a peaceful environment.",
        "FOL": "∀x (Garden(x) → (DisplaysPlants(x) ∧ OffersPeacefulEnvironment(x)))"
    },
    {
        "NL": "Fire emits heat.",
        "FOL": "∀x (Fire(x) → EmitsHeat(x))"
    },
    {
        "NL": "An antibiotic treats bacterial infections by killing bacteria or inhibiting their growth.",
        "FOL": "∀x ∀y (Antibiotic(x) ∧ BacterialInfection(y) ∧ (KillsBacteria(x, y) ∨ InhibitsGrowth(x, y)) → Treats(x, y))"
    },
    {
        "NL": "A square is a rectangle with equal sides.",
        "FOL": "∀x (Square(x) ↔ (Rectangle(x) ∧ EqualSides(x)))"
    },
    {
        "NL": "A drink is alcoholic if it contains ethanol.",
        "FOL": "∀x (Drink(x) → (ContainsEthanol(x) → Alcoholic(x)))"
    },
    {
        "NL": "A television show is entertaining if it has an engaging storyline and talented actors.",
        "FOL": "∀x (TelevisionShow(x) ∧ EngagingStoryline(x) ∧ TalentedActors(x) → Entertaining(x))"
    },
    {
        "NL": "A cat sleeps during the day.",
        "FOL": "∃x (Cat(x) ∧ SleepsDuringDay(x))"
    },
    {
        "NL": "An object that has mass and takes up space is considered matter.",
        "FOL": "∀x (HasMass(x) ∧ TakesUpSpace(x) → Matter(x))"
    },
    {
        "NL": "An individual is recognized as an artist if they create artwork using colors.",
        "FOL": "∀x (Person(x) ∧ CreatesArtworkWithColors(x) → Artist(x))"
    },
    {
        "NL": "An athlete trains and competes in various sports, aiming for victory.",
        "FOL": "∀x∀y∀z (Athlete(x) ∧ Sport(y) ∧ Victory(z) → (TrainsIn(x, y) ∧ CompetesFor(x, y, z)))"
    },
    {
        "NL": "A celestial body can be either a star, a planet, or a moon, but not more than one of these types.",
        "FOL": "∀x (CelestialBody(x) → ((Star(x) ⊕ Planet(x)) ⊕ Moon(x)))"
    },
    {
        "NL": "In every basketball team, there is at least one player who knows how to do a slam dunk.",
        "FOL": "∀y (BasketballTeam(y) → ∃x (Player(x) ∧ PartOf(x, y) ∧ KnowsHowToSlamDunk(x)))"
    },
    {
        "NL": "A novel is a bestseller if it sells more than a million copies and receives widespread critical acclaim.",
        "FOL": "∀x (Novel(x) ∧ SellsMoreThan(x, 1000000) ∧ WidespreadCriticalAcclaim(x) → Bestseller(x))"
    },
    {
        "NL": "In a democracy, the citizens have the right to vote and participate in the political process.",
        "FOL": "∀x (Democracy(x) → (RightToVote(x, citizens) ∧ ParticipateInPolitics(x, citizens)))"
    },
    {
        "NL": "Mountains with snow caps are colder at the summit than at the base.",
        "FOL": "∀x∀y∀z (Mountain(x) ∧ SnowCap(x) ∧ Summit(y) ∧ Base(z) → ColderAt(y, x) ∧ WarmerAt(z, x))"
    },
    {
        "NL": "If it's not advantageous, it's not worth considering.",
        "FOL": "∀v (WorthConsidering(v) ↔ Advantageous(v))"
    },
    {
        "NL": "A healthy diet contains fruits, vegetables, and whole grains but limits sugar, salt, and saturated fats.",
        "FOL": "∀x (HealthyDiet(x) → (ContainsFruits(x) ∧ ContainsVegetables(x) ∧ ContainsWholeGrains(x) ∧ LimitsSugar(x) ∧ LimitsSalt(x) ∧ LimitsSaturatedFats(x)))"
    },
    {
        "NL": "A beverage is non-alcoholic if it doesn't contain any alcohol.",
        "FOL": "∀x (Beverage(x) ∧ ¬ContainsAlcohol(x) → NonAlcoholic(x))"
    },
    {
        "NL": "A square is not a circle.",
        "FOL": "∀x (Square(x) → ¬Circle(x))"
    },
    {
        "NL": "Either Mark is a chef or Julia admires Mark, but not both",
        "FOL": "Chef(mark) ⊕ Admire(julia, mark)"
    },
    {
        "NL": "A car is either gas-powered or electric, but not both.",
        "FOL": "∀x (Car(x) → (GasPowered(x) ⊕ Electric(x)))"
    },
    {
        "NL": "Dancers dance, while singers sing.",
        "FOL": "∀x (Dancer(x) → Dances(x)) ∧ (Singer(x) → Sings(x))"
    },
    {
        "NL": "A food item is classified as a fruit when it is a mature ovary of a flowering plant, typically sweet or sour, and consumed as a dessert or snack.",
        "FOL": "∀x (FoodItem(x) ∧ MatureOvaryOfFloweringPlant(x) ∧ (SweetOrSour(x)) ∧ ConsumedAsDessertOrSnack(x) → Fruit(x))"
    },
    {
        "NL": "A celestial body orbiting a star and having sufficient mass to maintain a nearly round shape but not enough mass to cause thermonuclear fusion is classified as a planet.",
        "FOL": "∀x (CelestialBody(x) ∧ OrbitsStar(x) ∧ SufficientMassForRoundShape(x) ∧ ¬ThermonuclearFusion(x) → Planet(x))"
    },
    {
        "NL": "A celestial event where one astronomical object passes in front of another, obscuring it from view, is an eclipse.",
        "FOL": "∀x ∀y (CelestialEvent(x, y) ∧ PassesInFrontOf(x, y) ∧ ObscuresFromView(x, y) → Eclipse(x, y))"
    },
    {
        "NL": "A city is a capital city if it is the official seat of government for a country.",
        "FOL": "∀x (CapitalCity(x) ↔ ∃y (City(x) ∧ Country(y) ∧ OfficialSeatOfGovernment(x, y)))"
    },
    {
        "NL": "A substance is flammable if it can easily ignite and burn.",
        "FOL": "∀x (Substance(x) ∧ EasilyIgnite(x) ∧ Burn(x) → Flammable(x))"
    },
    {
        "NL": "A zoo is diverse if it has lions, kangaroos, and dolphins with different environments.",
        "FOL": "∀x (Zoo(x) ∧ ∃y ∃z ∃w (Lion(y) ∧ Kangaroo(z) ∧ Dolphin(w) ∧ DifferentEnvironments(y, z, w) ∧ Houses(x, y, z, w)) → IsDiverse(x))"
    },
    {
        "NL": "No horse is carnivorous.",
        "FOL": "∀x (Horse(x) → ¬Carnivorous(x))"
    },
    {
        "NL": "All humans are happy only if they can either dance or sing.",
        "FOL": "∀x (Human(x) → (Happy(x) ↔ (Dance(x) ∨ Sing(x))))"
    },
    {
        "NL": "A marine ecosystem that contains coral reefs supports diverse marine life, provides coastal protection, and contributes to tourism.",
        "FOL": "∀x (MarineEcosystem(x) ∧ ContainsCoralReefs(x) → SupportsDiverseMarineLife(x) ∧ ProvidesCoastalProtection(x) ∧ ContributesToTourism(x))"
    },
    {
        "NL": "A store sells fruits, vegetables, and bread, while a pharmacy sells medicine and healthcare products.",
        "FOL": "∀x ((Store(x) → (SellsFruits(x) ∧ SellsVegetables(x) ∧ SellsBread(x))) ∧ (Pharmacy(x) → (SellsMedicine(x) ∧ SellsHealthcareProducts(x))))"
    },
    {
        "NL": "No student in the lecture raised objections.",
        "FOL": "¬∃x (Student(x) ∧ InLecture(x) ∧ RaisedObjection(x))"
    },
    {
        "NL": "In a school, teachers instruct students in various subjects, and administrators manage daily operations.",
        "FOL": "∀x ∀y ∀z (School(x) ∧ Teacher(y) ∧ Administrator(z) → (InstructsStudents(y, x) ∧ ManagesOperations(z, x)))"
    },
    {
        "NL": "A child is taught by a teacher that all parents trust.",
        "FOL": "∃x ∃y ∀z (Child(x) ∧ Teacher(y) ∧ Parent(z) ∧ Trust(z, y) → TaughtBy(x, y))"
    },
    {
        "NL": "A university that has a strong research program and an excellent faculty typically ranks high in academic standings.",
        "FOL": "∀x (University(x) ∧ StrongResearchProgram(x) ∧ ExcellentFaculty(x) → RanksHighInAcademicStandings(x))"
    },
    {
        "NL": "Engineers who design bridges need expertise in both mathematics and structural analysis.",
        "FOL": "∀x (Engineer(x) ∧ DesignsBridges(x) → (ExpertInMathematics(x) ∧ ExpertInStructuralAnalysis(x)))"
    },
    {
        "NL": "All artists create uniquely.",
        "FOL": "∀x (Artist(x) → CreateUniquely(x))"
    },
    {
        "NL": "Photographers use cameras to take pictures, while painters use brushes and paints to create artwork.",
        "FOL": "∀x ∀y ∀z (Photographer(x) ∧ Painter(y) ∧ Camera(z) → (Uses(x, z) ∧ Uses(y, Brushes) ∧ Uses(y, Paints)))"
    },
    {
        "NL": "A vehicle designed for underwater travel, able to control buoyancy, and used for research or military purposes, is a submarine.",
        "FOL": "∀x (Vehicle(x) ∧ DesignedForUnderwaterTravel(x) ∧ ControlsBuoyancy(x) ∧ (UsedForResearch(x) ∨ UsedForMilitaryPurposes(x)) → Submarine(x))"
    },
    {
        "NL": "If a character is a superhero, they either live in a city or at a secret base.",
        "FOL": "∀x (Character(x) ∧ Superhero(x) → LiveInCity(x) ∨ LiveAtSecretBase(x))"
    },
    {
        "NL": "All flights arriving at JFK airport are either domestic or international.",
        "FOL": "∀x (ArrivingAtJFK(x) → (Domestic(x) ⊕ International(x)))"
    },
    {
        "NL": "Dogs can bark, cats meow, and cows moo.",
        "FOL": "∀x ∀y ∀z (Dog(x) ∧ Cat(y) ∧ Cow(z) → (Barks(x) ∨ Meows(y) ∨ Moos(z)))"
    },
    {
        "NL": "A person is considered bilingual if they can understand and speak two languages fluently.",
        "FOL": "∀x (UnderstandsAndSpeaksTwoLanguagesFluently(x) → Bilingual(x))"
    },
    {
        "NL": "A musical instrument that produces sound by vibrating strings, has a hollow body, and is played with a bow or by plucking is a string instrument if it has a fingerboard for altering pitch.",
        "FOL": "∀x (MusicalInstrument(x) ∧ ProducesSoundByVibratingStrings(x) ∧ HasHollowBody(x) ∧ PlayedWithBowOrPlucking(x) ∧ HasFingerboardForAlteringPitch(x) → StringInstrument(x))"
    },
    {
        "NL": "A car has wheels, an engine, and runs on a fuel source.",
        "FOL": "∀x (Car(x) → (HasWheels(x) ∧ HasEngine(x) ∧ RunsOnFuelSource(x)))"
    },
    {
        "NL": "Either a product is eco-friendly or made of plastic, but not both.",
        "FOL": "∃x (Product(x) ∧ (EcoFriendly(x) ⊕ MadeOfPlastic(x)))"
    },
    {
        "NL": "Every smartphone has a battery.",
        "FOL": "∀x ∃y (Smartphone(x) → Battery(y) ∧ Has(x, y))"
    },
    {
        "NL": "Each person is either a child or an adult, but not both.",
        "FOL": "∀x (Person(x) → (Child(x) ⊕ Adult(x)))"
    },
    {
        "NL": "All of the students in the class need to study.",
        "FOL": "∀x (Student(x) ∧ InClass(x) → NeedToStudy(x))"
    },
    {
        "NL": "A museum displays an artifact when it is genuine, undamaged, and of historical or cultural significance.",
        "FOL": "∀x (Artifact(x) ∧ Genuine(x) ∧ ¬Damaged(x) ∧ (HistoricalSignificance(x) ∨ CulturalSignificance(x)) → DisplayedInMuseum(x))"
    },
    {
        "NL": "A vacation destination has beaches, mountains, or deserts, but not multiple terrains.",
        "FOL": "∀x (VacationDestination(x) → ((HasBeaches(x) ∨ HasMountains(x) ∨ HasDeserts(x)) ∧ ¬(HasBeaches(x) ∧ HasMountains(x)) ∧ ¬(HasBeaches(x) ∧ HasDeserts(x)) ∧ ¬(HasMountains(x) ∧ HasDeserts(x))))"
    },
    {
        "NL": "A building design is functional when it maximizes the use of available space, provides adequate lighting, and accommodates the needs of its occupants.",
        "FOL": "∀x (BuildingDesign(x) ∧ MaximizesUseOfAvailableSpace(x) ∧ ProvidesAdequateLighting(x) ∧ AccommodatesNeedsOfOccupants(x) → Functional(x))"
    },
    {
        "NL": "A person who has a fever or a cough might be sick.",
        "FOL": "∀x (Person(x) ∧ (Fever(x) ∨ Cough(x)) → MightBeSick(x))"
    },
    {
        "NL": "Exercising outdoors in green spaces, such as parks, helps to reduce stress and improve mental well-being.",
        "FOL": "∀x∀y (GreenSpace(x) ∧ Park(x) ∧ ExercisingOutdoors(y, x) → (ReducesStress(y) ∧ ImprovesMentalWellBeing(y)))"
    },
    {
        "NL": "If a dog is friendly and large, then it is owned by at least one child, unless it is a police dog.",
        "FOL": "∀x ((Friendly(x) ∧ Large(x)) → ∃y (Child(y) ∧ Owns(y, x) ∨ PoliceDog(x)))"
    },
    {
        "NL": "A job is well-paying when the salary is above average, and it is not temporary.",
        "FOL": "∀x (Job(x) ∧ WellPaying(x) ↔ (AboveAverageSalary(x) ∧ ¬Temporary(x)))"
    },
    {
        "NL": "A student passes a test if they answer a majority of the questions correctly or if the test is graded on a curve and they perform better than most of their peers.",
        "FOL": "∀x (Student(x) ∧ Test(y) → (Passes(x, y) ↔ (MajorityCorrect(x, y) ∨ (GradedOnCurve(y) ∧ OutperformsPeers(x, y)))))"
    },
    {
        "NL": "A chef will bake a cake only if he does not cook pasta.",
        "FOL": "∀x (Chef(x) ∧ BakeCake(x) → ¬CookPasta(x))"
    },
    {
        "NL": "If a device is waterproof, it can function properly when submerged in water.",
        "FOL": "∀x (Waterproof(x) → FunctionProperlySubmerged(x))"
    },
    {
        "NL": "A vehicle that uses solar power and electric power is considered a hybrid vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ UsesSolarPower(x) ∧ UsesElectricPower(x) → HybridVehicle(x))"
    },
    {
        "NL": "A room is a kitchen if it is designed for cooking and food preparation, and is equipped with appliances such as a stove, oven, or refrigerator.",
        "FOL": "∀x (Room(x) ∧ DesignedForCooking(x) ∧ FoodPreparation(x) ∧ (HasStove(x) ∨ HasOven(x) ∨ HasRefrigerator(x)) → Kitchen(x))"
    },
    {
        "NL": "A person who manages and oversees the construction of buildings is called a construction manager.",
        "FOL": "∀x (ManagesAndOverseesBuildingConstruction(x) → ConstructionManager(x))"
    },
    {
        "NL": "A battery stores electrical energy, which can be converted into other forms of energy, such as kinetic or thermal energy.",
        "FOL": "∀x ∀y (Battery(x) ∧ ElectricalEnergy(e) ∧ KineticEnergy(k) ∨ ThermalEnergy(t) → StoresAndConvertsEnergy(x, e, y, k, t))"
    },
    {
        "NL": "In a solar system, planets and their moons revolve around a central star.",
        "FOL": "∀x ∀y ∀z (SolarSystem(x) ∧ Planet(y) ∧ Moon(z) → RevolvesAround(y, x) ∧ RevolvesAround(z, x))"
    },
    {
        "NL": "An athlete is a professional if they earn money from their sports activities.",
        "FOL": "∀x (Athlete(x) ∧ EarnsMoneyFromSports(x) → Professional(x))"
    },
    {
        "NL": "A vehicle is a car or a bike.",
        "FOL": "∀x (Vehicle(x) → (Car(x) ∨ Bike(x)))"
    },
    {
        "NL": "No dinosaurs are mammals.",
        "FOL": "¬∃x (Dinosaur(x) ∧ Mammal(x))"
    },
    {
        "NL": "If all the books are not interesting, there is a song that every person listens to.",
        "FOL": "¬∀x (Book(x) → Interesting(x)) → ∃y (Song(y) ∧ ∀z (Person(z) → ListensTo(z, y)))"
    },
    {
        "NL": "Candles emit heat, radios emit sound, and televisions emit images.",
        "FOL": "∀x ∀y ∀z (Candle(x) ∧ Radio(y) ∧ Television(z) → (EmitsHeat(x) ∧ EmitsSound(y) ∧ EmitsImages(z)))"
    },
    {
        "NL": "A song x is a hit in country y if x has high sales figures and is frequently played on radio stations in y.",
        "FOL": "∀x ∀y (Song(x) ∧ Country(y) ∧ HighSalesFigures(x, y) ∧ FrequentlyPlayedOnRadio(x, y) → Hit(x, y))"
    },
    {
        "NL": "Big mountains have high peaks, while small hills have low peaks.",
        "FOL": "∀x (Mountain(x) ∧ Big(x) → HasHighPeaks(x)) ∧ ∀y (Hill(y) ∧ Small(y) → HasLowPeaks(y))"
    },
    {
        "NL": "A scientist discovers a new species when they document its existence and it was previously unknown to the scientific community.",
        "FOL": "∀x ∀y (Scientist(x) ∧ Species(y) ∧ DocumentsExistence(x, y) ∧ PreviouslyUnknown(y) → DiscoversNewSpecies(x, y))"
    },
    {
        "NL": "In a chess game, the objective is to checkmate the opponent's king.",
        "FOL": "∀x ∀y ∀z (ChessGame(x) ∧ Player(y) ∧ OpponentKing(z) → ObjectiveCheckmate(y, z))"
    },
    {
        "NL": "Ava and Emma are dancers.",
        "FOL": "Dancer(ava) ∧ Dancer(emma)"
    },
    {
        "NL": "A shape is a rectangle if and only if every shape it meets is enormous.",
        "FOL": "∀x (Rectangle(x) ↔ ∀y (Meets(x, y) → Enormous(y)))"
    },
    {
        "NL": "Lucy is an engineer or a scientist.",
        "FOL": "Engineer(lucy) ∨ Scientist(lucy)"
    },
    {
        "NL": "Only tools that are sharp and durable can be used for woodworking or metalworking.",
        "FOL": "∀x (Tool(x) ∧ Sharp(x) ∧ Durable(x) → (UsedForWoodworking(x) ∨ UsedForMetalworking(x)))"
    },
    {
        "NL": "A book is a bestseller if and only if it has high sales and it has received critical acclaim.",
        "FOL": "∀x (Book(x) → (Bestseller(x) ↔ (HighSales(x) ∧ CriticalAcclaim(x))))"
    },
    {
        "NL": "A tree provides shade when it has large branches and leaves.",
        "FOL": "∀x (Tree(x) ∧ LargeBranches(x) ∧ Leaves(x) → ProvidesShade(x))"
    },
    {
        "NL": "A job is a firefighter role when it involves extinguishing fires, rescuing individuals from dangerous situations, and providing emergency medical assistance when needed.",
        "FOL": "∀x (Job(x) ∧ InvolvesExtinguishingFires(x) ∧ RescuesIndividualsFromDanger(x) ∧ ProvidesEmergencyMedicalAssistance(x) → FirefighterRole(x))"
    },
    {
        "NL": "A museum displays exhibits.",
        "FOL": "∀x ∃y (Museum(x) ∧ Exhibit(y) ∧ Displays(x, y))"
    },
    {
        "NL": "If someone is a student and they study hard, they will likely get good grades.",
        "FOL": "∀x (Student(x) ∧ StudiesHard(x) → LikelyGetsGoodGrades(x))"
    },
    {
        "NL": "A drink is refreshing if it contains either mint or lemon as an ingredient.",
        "FOL": "∀x (Drink(x) ∧ (ContainsMint(x) ∨ ContainsLemon(x)) → Refreshing(x))"
    },
    {
        "NL": "A rectangle is not both yellow and purple.",
        "FOL": "∀x (Rectangle(x) → ¬(Yellow(x) ∧ Purple(x)))"
    },
    {
        "NL": "A well-designed building provides natural light, efficient use of space, and a comfortable environment.",
        "FOL": "∀x (WellDesignedBuilding(x) → (ProvidesNaturalLight(x) ∧ EfficientUseOfSpace(x) ∧ ComfortableEnvironment(x)))"
    },
    {
        "NL": "An anxious person is always worried.",
        "FOL": "∀x (Anxious(x) → Worried(x))"
    },
    {
        "NL": "A person who is a doctor and a musician can play a musical instrument and perform surgery.",
        "FOL": "∀x ((Doctor(x) ∧ Musician(x)) → (PlaysMusicalInstrument(x) ∧ PerformsSurgery(x)))"
    },
    {
        "NL": "A place is a museum when it is dedicated to the collection, preservation, and exhibition of objects of artistic, cultural, historical, or scientific importance.",
        "FOL": "∀x (Place(x) ∧ DedicatedToCollection(x) ∧ Preservation(x) ∧ Exhibition(x) ∧ ContainsObjects(x, artistic, cultural, historical, scientific) → Museum(x))"
    },
    {
        "NL": "If a person is a doctor, then he/she has a medical degree.",
        "FOL": "∀x (Doctor(x) → HaveDegree(x, medical))"
    },
    {
        "NL": "People either laugh or cry when they are emotional.",
        "FOL": "∀x (Emotional(x) → (Laughs(x) ⊕ Cries(x)))"
    },
    {
        "NL": "A theater presents live performances, such as plays or concerts, featuring actors, musicians, or dancers.",
        "FOL": "∀x∀y∀z (Theater(x) ∧ (Play(y) ∨ Concert(y)) ∧ (Actor(z) ∨ Musician(z) ∨ Dancer(z)) → (Presents(x, y) ∧ Features(x, z)))"
    },
    {
        "NL": "All fish reject bitter food.",
        "FOL": "∀x ∀y (Fish(x) ∧ Bitter(y) → ¬Reject(x, y))"
    },
    {
        "NL": "A school is accredited when it meets the educational standards, has qualified teachers, and offers a comprehensive curriculum.",
        "FOL": "∀x∀y∀z (School(x) ∧ EducationalStandards(y) ∧ Curriculum(z) → (Accredited(x) ↔ (MeetsStandards(x, y) ∧ QualifiedTeachers(x) ∧ ComprehensiveCurriculum(x, z))))"
    },
    {
        "NL": "Some hotels offer a swimming pool, a gym, and a restaurant on the premises.",
        "FOL": "∀x ∀y ∀z ∀w (Hotel(x) ∧ Offers(x, y) ∧ Offers(x, z) ∧ Offers(x, w) → (SwimmingPool(y) ∧ Gym(z) ∧ Restaurant(w)))"
    },
    {
        "NL": "An ice cream x melts if it is exposed to a temperature above its melting point.",
        "FOL": "∀x (IceCream(x) ∧ ExposedToTemperatureAboveMeltingPoint(x) → Melts(x))"
    },
    {
        "NL": "Not all musicians are either guitarists or drummers, and none of them hate practicing.",
        "FOL": "¬∀x (Musician(x) → (Guitarist(x) ∨ Drummer(x))) ∧ ∀y (Musician(y) → ¬HatePracticing(y))"
    },
    {
        "NL": "Bats use echolocation, birds use vision, and sharks use electroreception.",
        "FOL": "∀x∀y∀z (Bat(x) → UsesEcholocation(x)) ∧ (Bird(y) → UsesVision(y)) ∧ (Shark(z) → UsesElectroreception(z))"
    },
    {
        "NL": "A traveler must have a valid passport and visa to enter a foreign country.",
        "FOL": "∀x ∀y (Traveler(x) ∧ ForeignCountry(y) → (ValidPassport(x) ∧ ValidVisa(x, y)))"
    },
    {
        "NL": "A person is a pilot if they are trained and licensed to operate and navigate aircraft.",
        "FOL": "∀x (Pilot(x) ↔ (Person(x) ∧ Trained(x) ∧ Licensed(x) ∧ OperatesAircraft(x) ∧ NavigatesAircraft(x)))"
    },
    {
        "NL": "A photographer can capture portraits, landscapes, or events.",
        "FOL": "∀x (Photographer(x) → ∃y ∃z ∃w (CapturePortrait(x, y) ∨ CaptureLandscape(x, z) ∨ CaptureEvent(x, w)))"
    },
    {
        "NL": "A bird can migrate long distances, flying to different regions during certain seasons to find food and breeding sites.",
        "FOL": "∀x∀y∀z (Bird(x) ∧ MigratesLongDistances(x) ∧ FliesToDifferentRegions(x, y) ∧ CertainSeasons(y) → (FindsFood(x, z) ∧ FindsBreedingSites(x, z)))"
    },
    {
        "NL": "A video game that features engaging gameplay and an immersive storyline captures the attention of players and receives positive reviews.",
        "FOL": "∀x∀y (VideoGame(x) ∧ EngagingGameplay(x) ∧ ImmersiveStoryline(x) → (CapturesAttentionOfPlayers(y) ∧ ReceivesPositiveReviews(y)))"
    },
    {
        "NL": "An athlete participates in swimming only if they are not injured.",
        "FOL": "∀x (Athlete(x) ∧ ParticipatesInSwimming(x) → ¬Injured(x))"
    },
    {
        "NL": "A beverage is classified as alcoholic if it contains ethanol and is produced by the fermentation of sugars.",
        "FOL": "∀x (AlcoholicBeverage(x) ↔ (Beverage(x) ∧ ContainsEthanol(x) ∧ ProducedByFermentationOfSugars(x)))"
    },
    {
        "NL": "An object is considered a planet if it orbits around a star and has cleared its orbit of other debris.",
        "FOL": "∀x (Object(x) ∧ OrbitsStar(x) ∧ ClearedOrbit(x) → Planet(x))"
    },
    {
        "NL": "A vehicle that operates on electricity, has a high energy efficiency, and produces no tailpipe emissions is classified as an electric vehicle.",
        "FOL": "∀x (Vehicle(x) ∧ OperatesOnElectricity(x) ∧ HighEnergyEfficiency(x) ∧ NoTailpipeEmissions(x) → ElectricVehicle(x))"
    },
    {
        "NL": "There is no chef that cooks for all happy customers.",
        "FOL": "¬∃x (Chef(x) ∧ ∀y (Happy(y) ∧ Customer(y) → CooksFor(x, y)))"
    },
    {
        "NL": "A tree that produces edible fruit and has a thick trunk is a fruit tree.",
        "FOL": "∀x ((Tree(x) ∧ ProducesEdibleFruit(x) ∧ ThickTrunk(x)) → FruitTree(x))"
    },
    {
        "NL": "A mouse is standing on a wheel in a cage",
        "FOL": "∃x ∃y ∃z (Mouse(x) ∧ Wheel(y) ∧ Cage(z) ∧ StandingOn(x, y) ∧ In(x, z))"
    },
    {
        "NL": "A planet with a thin atmosphere is unable to support human life.",
        "FOL": "∀x (Planet(x) ∧ ThinAtmosphere(x) → ¬SupportsHumanLife(x))"
    },
    {
        "NL": "A room is well-lit if it has multiple light sources or natural sunlight, but not if it relies on a single dim bulb.",
        "FOL": "∀x (Room(x) ∧ ((MultipleLightSources(x) ∨ NaturalSunlight(x)) ∧ ¬SingleDimBulb(x)) → WellLit(x))"
    },
    {
        "NL": "An object is a solid if it has a definite shape and volume and does not flow easily.",
        "FOL": "∀x (Object(x) ∧ DefiniteShape(x) ∧ DefiniteVolume(x) ∧ ¬FlowsEasily(x) → Solid(x))"
    },
    {
        "NL": "A leaf does not exist that is directed towards a dry tree and is not green.",
        "FOL": "¬∀x ∃y (Dry(y) ∧ DirectedTo(x, y) → Green(x))"
    },
    {
        "NL": "A book consists of pages and a cover.",
        "FOL": "∀x (Book(x) → (∃y PagesOf(x, y) ∧ ∃z CoverOf(x, z)))"
    },
    {
        "NL": "A river flows into the ocean if it carries water from its source to a larger body of saltwater.",
        "FOL": "∀x ∀y (River(x) ∧ CarriesWater(x, y) ∧ Ocean(y) → FlowsIntoOcean(x))"
    },
    {
        "NL": "A sofa is comfortable for sitting but not for sleeping.",
        "FOL": "∀x (Sofa(x) → (ComfortableSitting(x) ∧ ¬ComfortableSleeping(x)))"
    },
    {
        "NL": "Every bird is an animal, but not every animal is a bird.",
        "FOL": "∀x (Bird(x) → Animal(x)) ∧ ¬∀x (Animal(x) → Bird(x))"
    },
    {
        "NL": "There is no student who reads all difficult books.",
        "FOL": "¬∃x (Student(x) ∧ ∀y (Difficult(y) ∧ Book(y) → Reads(x, y)))"
    },
    {
        "NL": "Some dogs are obedient, and some are not.",
        "FOL": "∃x (Dog(x) ∧ Obedient(x)) ∧ ∃x (Dog(x) ∧ ¬Obedient(x))"
    },
    {
        "NL": "A film is a comedy if it makes people laugh and has a light-hearted plot.",
        "FOL": "∀x (Film(x) ∧ MakesPeopleLaugh(x) ∧ LightHeartedPlot(x) → Comedy(x))"
    },
    {
        "NL": "A person is considered an engineer if they apply scientific principles to design and develop complex systems or structures.",
        "FOL": "∀x (Person(x) ∧ AppliesScientificPrinciples(x) ∧ DesignsComplexSystemsOrStructures(x) → Engineer(x))"
    },
    {
        "NL": "A room can be big or small.",
        "FOL": "∀x (Room(x) → (Big(x) ∨ Small(x)))"
    },
    {
        "NL": "A pen writes on paper when its ink is full and stops writing when it's empty.",
        "FOL": "∀x ∀y (Pen(x) ∧ Paper(y) → ((InkFull(x) → WritesOn(x, y)) ∧ (InkEmpty(x) → ¬WritesOn(x, y))))"
    },
    {
        "NL": "A company is international if it has business operations in more than one country.",
        "FOL": "∀x (Company(x) ∧ BusinessOperationsInMoreThanOneCountry(x) → International(x))"
    },
    {
        "NL": "A food can be organic, inorganic, or genetically modified.",
        "FOL": "∀x (Food(x) → (Organic(x) ∨ Inorganic(x) ∨ GMO(x)))"
    },
    {
        "NL": "A car has air conditioning if it can adjust temperature and has a cool air system.",
        "FOL": "∀x (Car(x) ∧ AdjustTemperature(x) ∧ HasCoolAirSystem(x) → HasAirConditioning(x))"
    },
    {
        "NL": "A mammal is either a human or an animal, but not both.",
        "FOL": "∀x (Mammal(x) → (Human(x) ⊕ Animal(x)))"
    },
    {
        "NL": "If a software application is reliable, then it has fewer bugs and performs better.",
        "FOL": "∀x (SoftwareApplication(x) ∧ Reliable(x) → HasFewerBugs(x) ∧ PerformsBetter(x))"
    },
    {
        "NL": "If an activity is done in a group, it's either recreational or competitive but not both.",
        "FOL": "∀x (Activity(x) ∧ DoneInGroup(x) → (Recreational(x) ⊕ Competitive(x)))"
    },
    {
        "NL": "Any chef who outcooks another chef is outcooked by that chef.",
        "FOL": "∀x ∀y (Chef(x) ∧ Chef(y) ∧ Outcooks(x, y) → Outcooks(y, x))"
    },
    {
        "NL": "Some shoes are designed for running and have good cushioning or are made for hiking with good traction.",
        "FOL": "∃x (Shoe(x) ∧ ((DesignedForRunning(x) ∧ GoodCushioning(x)) ∨ (DesignedForHiking(x) ∧ GoodTraction(x))))"
    },
    {
        "NL": "Sunflowers face the sun, bees pollinate flowers, and earthworms aerate the soil.",
        "FOL": "∀x (Sunflower(x) → FaceSun(x)) ∧ ∀y (Bee(y) → PollinateFlowers(y)) ∧ ∀z (Earthworm(z) → AerateSoil(z))"
    },
    {
        "NL": "A food item is categorized as a dessert when it is typically consumed after a meal, has a sweet taste, and may contain ingredients like sugar, dairy, and fruits.",
        "FOL": "∀x (FoodItem(x) ∧ TypicallyConsumedAfterMeal(x) ∧ SweetTaste(x) ∧ (ContainsSugar(x) ∨ ContainsDairy(x) ∨ ContainsFruits(x)) → Dessert(x))"
    },
    {
        "NL": "Animals inhale oxygen and exhale carbon dioxide.",
        "FOL": "∀x (Animal(x) → (InhalesOxygen(x) ∧ ExhalesCarbonDioxide(x)))"
    },
    {
        "NL": "Each nebula is endless, unruly, and freezing.",
        "FOL": "∀x (Nebula(x) → (Endless(x) ∧ Unruly(x) ∧ Freezing(x)))"
    },
    {
        "NL": "A storm causes flooding if it produces heavy rainfall and the drainage system is overwhelmed.",
        "FOL": "∀x ∀y (Storm(x) ∧ HeavyRainfall(x) ∧ DrainageSystem(y) ∧ Overwhelmed(y) → CausesFlooding(x, y))"
    },
    {
        "NL": "An object that is used for transportation, can travel at high speeds, and relies on a specific energy source is usually a vehicle or a high-speed train.",
        "FOL": "∀x∀y∀z (Object(x) ∧ UsedForTransportation(x) ∧ HighSpeedTravel(x) ∧ SpecificEnergySource(y) ∧ ReliesOn(x, y) ∧ HighSpeedTransportation(z) ∧ DesignedFor(x, z) → (Vehicle(x) ∨ HighSpeedTrain(x)))"
    },
    {
        "NL": "A smartphone is considered outdated if it lacks a high-resolution screen or has a slow processor.",
        "FOL": "∀x (Smartphone(x) ∧ (¬HighResolutionScreen(x) ∨ SlowProcessor(x)) → Outdated(x))"
    },
    {
        "NL": "An animal can be a mammal or a bird.",
        "FOL": "∀x (Animal(x) → (Mammal(x) ∨ Bird(x)))"
    },
    {
        "NL": "Birds that can fly and sing are songbirds.",
        "FOL": "∀x (Birds(x) ∧ CanFly(x) ∧ CanSing(x) → Songbird(x))"
    },
    {
        "NL": "A material that conducts electricity, generates heat when an electric current passes through it, and does not allow light to pass through is a metal.",
        "FOL": "∀x (Material(x) ∧ ConductsElectricity(x) ∧ GeneratesHeatWithElectricCurrent(x) ∧ ¬AllowsLightToPassThrough(x) → Metal(x))"
    },
    {
        "NL": "If an object is a guitar, it must be a musical instrument with strings that are plucked or strummed.",
        "FOL": "∀x ((MusicalInstrument(x) ∧ HasStrings(x) ∧ (Plucked(x) ∨ Strummed(x))) → Guitar(x))"
    },
    {
        "NL": "Books that are either mystery or science fiction belong to the fiction genre.",
        "FOL": "∀x (Book(x) ∧ (IsMystery(x) ⊕ IsScienceFiction(x)) → IsFiction(x))"
    },
    {
        "NL": "Someone who mentors a student will be backed up by someone.",
        "FOL": "∀x ∃y (People(x) ∧ Student(y) ∧ Mentors(x, y) → ∃z (People(z) ∧ WillBackUp(z, x)))"
    },
    {
        "NL": "A recipe that is easy to follow and yields delicious results is a favorite, but not if it requires rare ingredients.",
        "FOL": "∀x (Recipe(x) ∧ ((EasyToFollow(x) ∧ DeliciousResults(x)) ∧ ¬RareIngredients(x) → Favorite(x)))"
    },
    {
        "NL": "A detective is investigating a crime in the station, while an officer is writing a report in the office.",
        "FOL": "∃x ∃y (Detective(x) ∧ Crime(y) ∧ Investigating(x, y) ∧ InTheStation(x)) ∧ ∃z ∃w (Officer(z) ∧ Report(w) ∧ Writing(z, w) ∧ InTheOffice(z))"
    },
    {
        "NL": "All trains have a locomotive to provide propulsion.",
        "FOL": "∀x (Train(x) → HasLocomotive(x))"
    },
    {
        "NL": "A restaurant is renowned if it has a vibrant ambience and a broad menu.",
        "FOL": "∀x (Restaurant(x) ∧ HasVibrantAmbience(x) ∧ HasBroadMenu(x) → Renowned(x))"
    },
    {
        "NL": "There is a player who missed no shot he took.",
        "FOL": "∃x (Player(x) ∧ ∀y (Shot(y) ∧ Took(x, y) → ¬Miss(x, y)))"
    },
    {
        "NL": "A computer network connects multiple devices, enabling data transfer, communication, and resource sharing among users.",
        "FOL": "∀x∀y∀z (ComputerNetwork(x) ∧ ConnectsMultipleDevices(x, y) → (EnablesDataTransfer(x, z) ∧ EnablesCommunication(x, z) ∧ EnablesResourceSharing(x, z)))"
    },
    {
        "NL": "A novel is engaging if it features a compelling plot, well-developed characters, and is set in a unique world or explores interesting themes.",
        "FOL": "∀x∀y∀z (Novel(x) ∧ CompellingPlot(x, y) ∧ WellDevelopedCharacters(x, z) ∧ (SetInUniqueWorld(x) ∨ ExploresInterestingThemes(x)) → Engaging(x))"
    },
    {
        "NL": "Photovoltaic cells are used in solar panels to convert sunlight into electricity.",
        "FOL": "∀x ∀y (PhotovoltaicCell(x) ∧ UsedInSolarPanels(x) ∧ Sunlight(y) → ConvertsToElectricity(x, y))"
    },
    {
        "NL": "A key opens locks, while a password grants access to digital systems and doesn't open locks.",
        "FOL": "∀x∀y (Key(x) ∧ Password(y) → (OpensLocks(x) ∧ GrantsDigitalAccess(y) ∧ ¬OpensLocks(y)))"
    },
    {
        "NL": "Each thriller play can excite all audience.",
        "FOL": "∀x ∀y (Play(x) ∧ Thriller(x) ∧ Audience(y) → CanExcite(x, y))"
    },
    {
        "NL": "A computer processes data using a central processing unit, memory, and storage devices to perform various tasks and functions.",
        "FOL": "∀x∀y∀z (Computer(x) → (ProcessesDataUsingCPU(x) ∧ UsesMemory(x, y) ∧ UsesStorageDevices(x, z)))"
    },
    {
        "NL": "There is no chef who cooks both Italian and Mexican cuisine but is not renowned.",
        "FOL": "¬∃x (Chef(x) ∧ CooksItalian(x) ∧ CooksMexican(x) ∧ ¬Renowned(x))"
    },
    {
        "NL": "No painting technique is both simple and ineffective.",
        "FOL": "¬∃x (PaintingTechnique(x) ∧ Simple(x) ∧ Ineffective(x))"
    },
    {
        "NL": "Some books are written by a single author, while others are written by a team.",
        "FOL": "∀x (Book(x) → WrittenBySingleAuthor(x) ⊕ WrittenByTeam(x))"
    },
    {
        "NL": "A movie can be either animated or live-action.",
        "FOL": "∀x (Movie(x) → (Animated(x) ⊕ LiveAction(x)))"
    },
    {
        "NL": "Not all dancers are graceful.",
        "FOL": "¬∀w (Dancer(w) → Graceful(w))"
    },
    {
        "NL": "No guitars in the room are either tuned or expensive.",
        "FOL": "¬∃x (Guitar(x) ∧ InRoom(x) ∧ (Tuned(x) ∨ Expensive(x)))"
    },
    {
        "NL": "A novel that is a mystery can captivate readers' interest.",
        "FOL": "∀x ∀y (Novel(x) ∧ Mystery(x) ∧ Reader(y) → CanCaptivateInterest(x, y))"
    },
    {
        "NL": "There is a chef in every restaurant who is familiar with multiple cuisines.",
        "FOL": "∀y (Restaurant(y) → ∃x (Chef(x) ∧ WorksAt(x, y) ∧ FamiliarWithMultipleCuisines(x)))"
    },
    {
        "NL": "A business is successful with a loyal customer base and innovative products.",
        "FOL": "∀x (Business(x) → (Successful(x) ↔ (LoyalCustomers(x) ∧ InnovativeProducts(x))))"
    },
    {
        "NL": "A cat is sleeping on the sofa, while a child is reading in the bedroom.",
        "FOL": "∃x ∃y (Cat(x) ∧ Sofa(y) ∧ SleepingOn(x, y)) ∧ ∃z (Child(z) ∧ Reading(z) ∧ InTheBedroom(z))"
    },
    {
        "NL": "A store is popular if it offers a wide range of products and has competitive prices.",
        "FOL": "∀x (Store(x) ∧ WideRangeOfProducts(x) ∧ CompetitivePrices(x) → Popular(x))"
    },
    {
        "NL": "A vehicle that runs on electricity and emits no greenhouse gases is considered environmentally friendly.",
        "FOL": "∀x (Vehicle(x) ∧ RunsOnElectricity(x) ∧ EmitsNoGreenhouseGases(x) → EnvironmentallyFriendly(x))"
    },
    {
        "NL": "An asteroid is composed of rocks and metals, while a comet has a nucleus of ice, dust, and gases.",
        "FOL": "∀x ∀y (Asteroid(x) ∧ Comet(y) → ((Rocks(x) ∧ Metals(x)) ∧ (IceNucleus(y) ∧ Dust(y) ∧ Gases(y))))"
    },
    {
        "NL": "A solar panel converts sunlight into electrical energy for powering devices.",
        "FOL": "∀x ∀y (SolarPanel(x) ∧ Sunlight(y) ∧ ConvertsToElectricalEnergy(x, y) → PowersDevices(x))"
    },
    {
        "NL": "A place is considered a library if it is an institution that houses and lends books, periodicals, and other media for reading, reference, or study.",
        "FOL": "∀x (Library(x) ↔ (InstitutionThatHousesAndLendsBooksPeriodicalsAndOtherMedia(x) ∧ ForReadingReferenceOrStudy(x)))"
    },
    {
        "NL": "Fridges are used to store food at low temperatures to slow down bacterial growth.",
        "FOL": "∀x (Fridge(x) → (StoresFood(x) ∧ LowTemperature(x) ∧ SlowsBacterialGrowth(x)))"
    },
    {
        "NL": "Bats use echolocation to navigate, and birds use their vision to navigate.",
        "FOL": "∀x (Bat(x) → NavigateWithEcholocation(x)) ∧ ∀y (Bird(y) → NavigateWithVision(y))"
    },
    {
        "NL": "A building is secure if it has surveillance cameras and controlled access.",
        "FOL": "∀x (Building(x) → (Secure(x) ↔ (HasCameras(x) ∧ ControlledAccess(x))))"
    },
    {
        "NL": "When a cake is both gluten-free and sugar-free, it is suitable for people with dietary restrictions.",
        "FOL": "∀x∀y∀z∀w (Cake(x) ∧ GlutenFree(y) ∧ SugarFree(z) ∧ DietaryRestrictions(w) → (Is(x, y) ∧ Is(x, z) → SuitableFor(x, w)))"
    },
    {
        "NL": "A worker who aids a manager will be aided by another individual.",
        "FOL": "∀x ∃y (Worker(x) ∧ Manager(y) ∧ Aid(x, y) → ∃z (Individual(z) ∧ WillAid(z, x)))"
    },
    {
        "NL": "An athlete who trains regularly and maintains a balanced diet performs better than those who do not follow these habits.",
        "FOL": "∀x ∀y (Athlete(x) ∧ Athlete(y) ∧ TrainsRegularly(x) ∧ BalancedDiet(x) ∧ ¬TrainsRegularly(y) ∧ ¬BalancedDiet(y) → BetterPerformance(x, y))"
    },
    {
        "NL": "Every bird is either a sparrow or a finch, but it cannot be both.",
        "FOL": "∀x (Bird(x) → (Sparrow(x) ⊕ Finch(x)))"
    },
    {
        "NL": "A bird can fly and sing, while a snake cannot fly nor sing.",
        "FOL": "∀x (Bird(x) → CanFly(x) ∧ CanSing(x)) ∧ ∀y (Snake(y) → ¬CanFly(y) ∧ ¬CanSing(y))"
    },
    {
        "NL": "A cat is happy if it receives affection, has a clean environment, and is well-fed.",
        "FOL": "∀x (Cat(x) ∧ ReceivesAffection(x) ∧ CleanEnvironment(x) ∧ WellFed(x) → Happy(x))"
    },
    {
        "NL": "There exists a book that every book refers to, if all circles are not round.",
        "FOL": "¬∀x (Circle(x) → Round(x)) → ∃y (Book(y) ∧ ∀z (Book(z) → RefersTo(z, y)))"
    },
    {
        "NL": "A novel consists of chapters and a plot.",
        "FOL": "∀x (Novel(x) → ConsistsOfChapters(x) ∧ HasPlot(x))"
    },
    {
        "NL": "Each student is either a freshman or a sophomore, but not both.",
        "FOL": "∀x (Student(x) → (Freshman(x) ⊕ Sophomore(x)))"
    },
    {
        "NL": "All carnivorous animals hunt other animals for food, while herbivorous animals feed on plants.",
        "FOL": "∀x (Carnivorous(x) → (∃y (Animal(y) ∧ Animal(x) ∧ HuntsForFood(x, y)))) ∧ ∀z (Herbivorous(z) → (∃w (Plant(w) ∧ Animal(z) ∧ FeedsOn(z, w))))"
    },
    {
        "NL": "No dog that knows to fetch is lazy.",
        "FOL": "¬∀x (Dog(x) ∧ KnowsFetch(x) → Lazy(x))"
    },
    {
        "NL": "Any food that is neither sweet nor sour is an apple if and only if it is red.",
        "FOL": "∀x (¬Sweet(x) ∧ ¬Sour(x) → (Apple(x) ↔ Red(x)))"
    },
    {
        "NL": "Not every music genre is either rock or pop.",
        "FOL": "¬∀x (MusicGenre(x) → (Rock(x) ∨ Pop(x)))"
    },
    {
        "NL": "All fish have gills.",
        "FOL": "∀x (Fish(x) → HasGills(x))"
    },
    {
        "NL": "A room's temperature can be regulated using a thermostat, which can turn on heating when the temperature is too low or activate cooling when the temperature is too high.",
        "FOL": "∀x ∀y ∀z (Room(x) ∧ Thermostat(y) ∧ RegulatesTemperature(x, y) → ((TooLow(x) → ActivatesHeating(y, z)) ∨ (TooHigh(x) → ActivatesCooling(y, z))))"
    },
    {
        "NL": "A type of furniture can be either for indoor use or outdoor use.",
        "FOL": "∀x (FurnitureType(x) → IndoorUse(x) ⊕ OutdoorUse(x))"
    },
    {
        "NL": "A student may receive a scholarship if they demonstrate academic excellence or have financial need.",
        "FOL": "∀x ∀y (Student(x) ∧ Scholarship(y) → (AcademicExcellence(x) ∨ FinancialNeed(x) → ReceiveScholarship(x, y)))"
    },
    {
        "NL": "A language is extinct when there are no more native speakers.",
        "FOL": "∀x (Language(x) ∧ NoNativeSpeakers(x) → Extinct(x))"
    },
    {
        "NL": "A key opens a lock, and a button turns on a device, but neither can start a fire.",
        "FOL": "∀x∀y (Key(x) ∧ Lock(y) → Opens(x, y)) ∧ (Button(x) ∧ Device(y) → TurnsOn(x, y)) ∧ ¬(StartsFire(x) ∨ StartsFire(y))"
    },
    {
        "NL": "A photographer captures images, while a writer composes stories.",
        "FOL": "∀x ∀y (Photographer(x) ∧ Writer(y) → (∃z (Image(z) ∧ Captures(x, z)) ∧ ∃w (Story(w) ∧ Composes(y, w))))"
    },
    {
        "NL": "For a beverage to be refreshing, it should be cold, not contain alcohol, and be served with ice.",
        "FOL": "∀x (Beverage(x) ∧ Cold(x) ∧ ¬Alcoholic(x) ∧ ServedWithIce(x) → Refreshing(x))"
    },
    {
        "NL": "Birds build nests for eggs.",
        "FOL": "∀x ∀y (Bird(x) ∧ Egg(y) → Build(x, y))"
    },
    {
        "NL": "Books in a library are either fiction or non-fiction.",
        "FOL": "∀x (BookInLibrary(x) → (Fiction(x) ⊕ NonFiction(x)))"
    },
    {
        "NL": "No vehicle is both a car and a bike.",
        "FOL": "¬∃x (Vehicle(x) ∧ Car(x) ∧ Bike(x))"
    },
    {
        "NL": "Paintings depict scenes or subjects using colors and brushstrokes.",
        "FOL": "∀x (Painting(x) → (Depict(y) ∧ Scenes(y) ∨ Subjects(y) ∧ Using(z) ∧ Colors(z) ∧ Brushstrokes(z) ∧ In(x, y, z)))"
    },
    {
        "NL": "Not every restaurant serves breakfast but there exists a meal that all meals are associated with it.",
        "FOL": "¬∀x (Restaurant(x) → ServesBreakfast(x)) → ∃y (Meal(y) ∧ ∀z (Meal(z) → AssociatedWith(z, y)))"
    },
    {
        "NL": "Every circle is either small or large.",
        "FOL": "∀x (Circle(x) → (Small(x) ∨ Large(x)))"
    },
    {
        "NL": "A computer processes information and performs calculations using an integrated circuit called a microprocessor.",
        "FOL": "∀x∀y (Computer(x) ∧ Microprocessor(y) → (ProcessesInformation(x, y) ∧ PerformsCalculations(x, y)))"
    },
    {
        "NL": "A language is spoken in a country if it is an official language or widely spoken by the population.",
        "FOL": "∀x∀y (Language(x) ∧ Country(y) → (OfficialLanguage(x, y) ∨ WidelySpokenByPopulation(x, y)) → SpokenIn(x, y))"
    },
    {
        "NL": "A student passes an exam if they have studied and answered enough questions correctly.",
        "FOL": "∀x ∀y (Student(x) ∧ Exam(y) ∧ Studied(x, y) ∧ AnsweredCorrectly(x, y) → Passes(x, y))"
    },
    {
        "NL": "There are no creatures that can neither crawl nor jump.",
        "FOL": "¬∃x (Creature(x) ∧ ¬CanCrawl(x) ∧ ¬CanJump(x))"
    },
    {
        "NL": "A plant thrives when it receives adequate sunlight, has nutrient-rich soil, and is watered regularly.",
        "FOL": "∀x∀y∀z∀w (Plant(x) ∧ Sunlight(y) ∧ Soil(z) ∧ Water(w) ∧ Adequate(y) ∧ NutrientRich(z) ∧ RegularlyWatered(x, w) → Thrives(x))"
    },
    {
        "NL": "A type of shoe that is designed for athletic activities, has a flexible sole, and provides support and cushioning for the foot is a sports shoe.",
        "FOL": "∀x (Shoe(x) ∧ DesignedForAthleticActivities(x) ∧ FlexibleSole(x) ∧ ProvidesSupportAndCushioning(x) → SportsShoe(x))"
    },
    {
        "NL": "A tool is efficient if it achieves its purpose quickly and with minimal effort.",
        "FOL": "∀x (Tool(x) ∧ Efficient(x) ↔ (Quick(x) ∧ MinimalEffort(x)))"
    },
    {
        "NL": "An event is rare if it has a low frequency and is not predictable.",
        "FOL": "∀x (Event(x) ∧ LowFrequency(x) ∧ ¬Predictable(x) → Rare(x))"
    },
    {
        "NL": "A movie is successful if it has an engaging storyline and stunning visuals.",
        "FOL": "∀x (Movie(x) ∧ HasEngagingStoryline(x) ∧ HasStunningVisuals(x) → Successful(x))"
    },
    {
        "NL": "A square has all its sides equal in length.",
        "FOL": "∀x (Square(x) → AllSidesEqual(x))"
    },
    {
        "NL": "Certain plants can absorb heavy metals from the soil, which can help in the process of phytoremediation.",
        "FOL": "∀x ∀y (Plant(x) ∧ HeavyMetals(y) ∧ AbsorbsFromSoil(x, y) → Phytoremediation(x))"
    },
    {
        "NL": "A bee collects nectar from flowers to make honey, but a wasp doesn't make honey and preys on insects instead.",
        "FOL": "∀x ∀y ∀z (Bee(x) ∧ Flower(y) ∧ Nectar(z) → Collects(x, z) ∧ MakesHoney(x)) ∧ ∀a (Wasp(a) → (¬MakesHoney(a) ∧ PreysOnInsects(a)))"
    },
    {
        "NL": "An oven bakes food by heating it.",
        "FOL": "∀x (Oven(x) → BakesFood(x, Heating))"
    },
    {
        "NL": "A musical piece can be classical, jazz, or rock.",
        "FOL": "∀x (Classical(x) ∨ Jazz(x) ∨ Rock(x))"
    },
    {
        "NL": "If all apples are not red, there is a tree that every tree grows next to it.",
        "FOL": "¬∀x (Apple(x) → Red(x)) → ∃y (Tree(y) ∧ ∀z (Tree(z) → GrowsNextTo(z, y)))"
    },
    {
        "NL": "If one tree is taller than another, then there is a tree grown between them.",
        "FOL": "∀x ∀y ∃z (Tree(x) ∧ Tree(y) ∧ Tree(z) ∧ TallerThan(x, y) → GrownBetween(z, x, y))"
    },
    {
        "NL": "A park is well-maintained when it has clean facilities, healthy greenery, and safe playgrounds.",
        "FOL": "∀x (Park(x) ∧ WellMaintained(x) ↔ (CleanFacilities(x) ∧ HealthyGreenery(x) ∧ SafePlaygrounds(x)))"
    },
    {
        "NL": "A tablet is regarded prolific if it encompasses a speed-orientated core and plentiful storage.",
        "FOL": "∀x (Tablet(x) ∧ HasSpeedOrientatedCore(x) ∧ HasPlentifulStorage(x) → Prolific(x))"
    },
    {
        "NL": "A campsite has tents.",
        "FOL": "∀x ∃y (Campsite(x) ∧ Tent(y) ∧ LocatedIn(y, x))"
    },
    {
        "NL": "A fish is active if and only if it is not hungry and has a clean tank.",
        "FOL": "∀x (Fish(x) → (Active(x) ↔ (¬Hungry(x) ∧ HasCleanTank(x))))"
    },
    {
        "NL": "A solar eclipse occurs when the moon is between the sun and the Earth.",
        "FOL": "∀x∀y∀z (SolarEclipse(x) → (Moon(y) ∧ Sun(z) ∧ Between(y, z, x)))"
    },
    {
        "NL": "A pilot flies an aircraft on specific routes.",
        "FOL": "∀x ∀y ∀z (Pilot(x) ∧ Aircraft(y) ∧ Route(z) → Flies(x, y, z))"
    },
    {
        "NL": "Something being a sweet fruit doesn't necessarily mean it is an apple.",
        "FOL": "¬∀x (Sweet(x) ∧ Fruit(x) ↔ Apple(x))"
    },
    {
        "NL": "A software can execute commands, manage tasks, or automate processes.",
        "FOL": "∀x (Software(x) → ExecuteCommands(x) ∧ ManageTasks(x) ∧ AutomateProcesses(x))"
    },
    {
        "NL": "A phone has a display if it can call, text and receive data.",
        "FOL": "∀x (Phone(x) ∧ CanCall(x) ∧ CanText(x) ∧ CanReceiveData(x) → HasDisplay(x))"
    },
    {
        "NL": "A film is entertaining if and only if it's plot is captivating and the screenplay is fluent, without having overly complex dialogues.",
        "FOL": "∀x (Film(x) ∧ Entertaining(x) ↔ (CaptivatingPlot(x) ∧ FluentScreenplay(x) ∧ ¬HaveOverlyComplexDialogues(x)))"
    },
    {
        "NL": "A flower blooms when it receives sunlight, has adequate water, and is in the right temperature.",
        "FOL": "∀x (Flower(x) ∧ ReceivesSunlight(x) ∧ AdequateWater(x) ∧ RightTemperature(x) → Blooms(x))"
    },
    {
        "NL": "A book's genre may be influenced by its narrative style, subject matter, and intended audience, resulting in categories such as mystery, science fiction, or romance.",
        "FOL": "∀x (Book(x) → ((InfluencedByNarrativeStyle(x) ∧ InfluencedBySubjectMatter(x) ∧ InfluencedByIntendedAudience(x)) ↔ (Mystery(x) ∨ ScienceFiction(x) ∨ Romance(x))))"
    },
    {
        "NL": "Plants can produce oxygen through photosynthesis, while animals consume oxygen and release carbon dioxide through respiration.",
        "FOL": "∀x (Plant(x) → (ProducesOxygen(x) ∧ UsesPhotosynthesis(x))) ∧ ∀y (Animal(y) → (ConsumesOxygen(y) ∧ ReleasesCarbonDioxide(y) ∧ UsesRespiration(y)))"
    },
    {
        "NL": "A person is considered an architect if they design buildings and plan the spaces within them.",
        "FOL": "∀x (Person(x) ∧ DesignsBuildings(x) ∧ PlansSpaces(x) → Architect(x))"
    },
    {
        "NL": "A vehicle is a bicycle if it has two wheels and is human-powered.",
        "FOL": "∀x (Vehicle(x) ∧ TwoWheels(x) ∧ HumanPowered(x) → Bicycle(x))"
    },
    {
        "NL": "An object is a lamp if it provides light by using electricity or another energy source.",
        "FOL": "∀x ((ProvidesLight(x) ∧ UsesEnergySource(x)) → Lamp(x))"
    },
    {
        "NL": "Dogs are domesticated mammals.",
        "FOL": "∀x (Dog(x) → (Domesticated(x) ∧ Mammal(x)))"
    },
    {
        "NL": "A transportation method that travels on a fixed route, operates on a schedule, and carries multiple passengers is a bus or a train.",
        "FOL": "∀x (TransportationMethod(x) ∧ TravelsFixedRoute(x) ∧ OperatesOnSchedule(x) ∧ CarriesMultiplePassengers(x) → (Bus(x) ∨ Train(x)))"
    },
    {
        "NL": "Libraries store books, and librarians assist patrons in finding and borrowing them.",
        "FOL": "∀x∀y∀z (Library(x) ∧ Book(y) ∧ Librarian(z) ∧ Patron(w) → (Stores(x, y) ∧ Assists(z, w, y)))"
    },
    {
        "NL": "Some apples are red and sour.",
        "FOL": "∃x (Apple(x) ∧ RedColor(x) ∧ Sour(x))"
    },
    {
        "NL": "Desertification is a process by which fertile land becomes degraded and transformed into arid desert, often due to climate change, overgrazing, or unsustainable agricultural practices.",
        "FOL": "∀x ∀y (Desertification(x) ∧ FertileLand(y) → (BecomesDegraded(x, y) ∧ TransformsIntoAridDesert(x, y) ∧ (ClimateChange(x) ∨ Overgrazing(x) ∨ UnsustainableAgriculturalPractices(x))))"
    },
    {
        "NL": "Cameras capture images, microphones record sound, and thermometers measure temperature.",
        "FOL": "∀x (Camera(x) → CapturesImages(x)) ∧ ∀y (Microphone(y) → RecordsSound(y)) ∧ ∀z (Thermometer(z) → MeasuresTemperature(z))"
    },
    {
        "NL": "A building can be residential, commercial, or industrial, but not a combination of these categories.",
        "FOL": "∀x (Building(x) → ((Residential(x) ⊕ Commercial(x)) ⊕ Industrial(x)))"
    },
    {
        "NL": "Some basketball players actively play basketball and are proficient in Tennis.",
        "FOL": "∃x (BasketballPlayer(x) ∧ PlayBasketball(x) ∧ ProficientInTennis(x))"
    },
    {
        "NL": "Squirrels are mammals that have bushy tails and can climb trees.",
        "FOL": "∀x (Squirrel(x) → Mammal(x) ∧ HasBushyTail(x) ∧ CanClimbTrees(x))"
    },
    {
        "NL": "All birds are not reptiles.",
        "FOL": "¬∃x (Bird(x) ∧ Reptile(x))"
    },
    {
        "NL": "A building is tall and a park is large.",
        "FOL": "∃x ∃y (Building(x) ∧ Tall(x) ∧ Park(y) ∧ Large(y))"
    },
    {
        "NL": "A recipe is easy to make if it requires few ingredients and doesn't need complex cooking techniques.",
        "FOL": "∀x (Recipe(x) ∧ FewIngredients(x) ∧ ¬ComplexCookingTechniques(x) → EasyToMake(x))"
    },
    {
        "NL": "A person is a dentist if they are trained and licensed to diagnose and treat oral diseases and maintain dental health.",
        "FOL": "∀x (Dentist(x) ↔ (Person(x) ∧ Trained(x) ∧ Licensed(x) ∧ DiagnosesOralDiseases(x) ∧ TreatsOralDiseases(x) ∧ MaintainsDentalHealth(x)))"
    },
    {
        "NL": "Cars that are red and flashy often get more attention.",
        "FOL": "∀x (Car(x) ∧ Red(x) ∧ Flashy(x) → GetMoreAttention(x))"
    },
    {
        "NL": "A celestial event that occurs during the day and is not an eclipse can be a meteor shower or a solar flare.",
        "FOL": "∀x (CelestialEvent(x) ∧ OccursDuringDay(x) ∧ ¬Eclipse(x) → MeteorShower(x) ⊕ SolarFlare(x))"
    },
    {
        "NL": "A substance that is soluble in water, has a pH value greater than 7, and reacts with acids to form salts is considered a base.",
        "FOL": "∀x∀y∀z (Substance(x) ∧ SolubleInWater(x, y) ∧ HaspHGreaterThan7(x, z) ∧ ReactsWithAcidsToFormSalts(x) → Base(x))"
    },
    {
        "NL": "A television series becomes popular if it has a compelling story and a dedicated fan base.",
        "FOL": "∀x (TelevisionSeries(x) ∧ Popular(x) ↔ (CompellingStory(x) ∧ DedicatedFanBase(x)))"
    },
    {
        "NL": "There is a doctor who trusts no patient he diagnoses.",
        "FOL": "∃x (Doctor(x) ∧ ∀y (Patient(y) ∧ Diagnose(x, y) → ¬Trust(x, y)))"
    },
    {
        "NL": "No vegetables are tasteless.",
        "FOL": "∀x (Vegetable(x) → ¬Tasteless(x))"
    },
    {
        "NL": "If a person is a teacher, they must instruct and educate students in a particular subject or skill.",
        "FOL": "∀x (Teacher(x) → (InstructsStudents(x) ∧ EducatesStudents(x)))"
    },
    {
        "NL": "All except the poor respect the money.",
        "FOL": "∀w (¬Poor(w) → RespectMoney(w))"
    },
    {
        "NL": "An individual is considered a scholar if they are enrolled in an academic institution or a research facility.",
        "FOL": "∀x (Individual(x) ∧ (EnrolledInAcademicInstitution(x) ∨ EnrolledInResearchFacility(x)) → Scholar(x))"
    },
    {
        "NL": "A national park aims to conserve the natural environment, protect wildlife, and provide recreational opportunities for visitors.",
        "FOL": "∀x (NationalPark(x) ↔ (ConservesEnvironment(x) ∧ ProtectsWildlife(x) ∧ RecreationalOpportunities(x)))"
    },
    {
        "NL": "Smartphones are equipped with various sensors, such as accelerometers, gyroscopes, and proximity sensors, that collect data and enable features like screen rotation, gesture recognition, and energy-saving measures, thereby enhancing the user experience.",
        "FOL": "∀x∀y∀z (Smartphones(x) ∧ Sensors(y) ∧ Features(z) → (AccelerometersGyroscopesProximitySensors(y) ∧ CollectData(y, x) ∧ EnableFeatures(y, z) ∧ ScreenRotationGestureRecognitionEnergySavingMeasures(z) ∧ EnhanceUserExperience(x)))"
    },
    {
        "NL": "Every parent in the school has attended the parent-teacher meeting.",
        "FOL": "∀x (ParentInSchool(x) → AttendedParentTeacherMeeting(x))"
    },
    {
        "NL": "Assuming not all politicians are corrupt, there is a politician whom all politicians trust.",
        "FOL": "¬∀x (Politician(x) → Corrupt(x)) → ∃y (Politician(y) ∧ ∀z (Politician(z) → Trusts(z, y)))"
    },
    {
        "NL": "A library offers books, magazines, and newspapers for reading.",
        "FOL": "∀x∀y (Library(x) ∧ (Book(y) ∨ Magazine(y) ∨ Newspaper(y)) → OffersForReading(x, y))"
    },
    {
        "NL": "Stars emit light due to nuclear reactions in their cores.",
        "FOL": "∀x (Star(x) ↔ (EmitsLight(x) ∧ HasNuclearReactionsInCore(x)))"
    },
    {
        "NL": "A hot cup of tea can help soothe a sore throat.",
        "FOL": "∀x (HotTea(x) → SoothesSoreThroat(x))"
    },
    {
        "NL": "Trees absorb pollutants from the environment.",
        "FOL": "∀x (Tree(x) → (AbsorbsPollutants(x) → Environment(x)) ∧ CleansAir(x))"
    },
    {
        "NL": "A dog is sleeping on the rug.",
        "FOL": "∃x ∃y (Dog(x) ∧ Rug(y) ∧ SleepingOn(x, y))"
    },
    {
        "NL": "Either a building has a flat roof, a pitched roof, or a domed roof, but not multiple types of roofs.",
        "FOL": "∀x (Building(x) → ((FlatRoof(x) ∨ PitchedRoof(x) ∨ DomedRoof(x)) ∧ ¬(FlatRoof(x) ∧ PitchedRoof(x)) ∧ ¬(FlatRoof(x) ∧ DomedRoof(x)) ∧ ¬(PitchedRoof(x) ∧ DomedRoof(x))))"
    },
    {
        "NL": "George reads a book by Robert Jordan if and only if it was published before 2000.",
        "FOL": "∀x (Book(x) ∧ Author(x, robertjordan) → (PublishedBeforetwothousand(x) ↔ Reads(george, x)))"
    },
    {
        "NL": "If there is a single planet, then every star illuminates a massive object.",
        "FOL": "∃x (Planet(x)) → ∀y ∃z (Massive(z) ∧ Illuminates(y, z))"
    },
    {
        "NL": "A device can have a screen or speakers, and it can be portable or stationary, but some configurations are not observed.",
        "FOL": "∀x (Device(x) → ((Screen(x) ∨ Speakers(x)) ∧ (Portable(x) ∨ Stationary(x)) ∧ ¬(Screen(x) ∧ Portable(x) ∧ Stationary(x)) ∧ ¬(Speakers(x) ∧ Portable(x) ∧ Stationary(x))))"
    },
    {
        "NL": "A student receives a scholarship for a specific program at a university if they meet the eligibility criteria.",
        "FOL": "∀x∀y∀z (Student(x) ∧ Program(y) ∧ University(z) ∧ EligibilityCriteria(x, y, z) → ReceivesScholarship(x, y, z))"
    },
    {
        "NL": "A camera captures images and can store them digitally.",
        "FOL": "∀x (Camera(x) → (CapturesImages(x) ∧ CanStoreDigitally(x)))"
    },
    {
        "NL": "A rainbow is a meteorological phenomenon caused by the reflection, refraction, and dispersion of light in water droplets.",
        "FOL": "∀x∀y (Rainbow(x) ∧ Light(y) → (Reflection(y) ∧ Refraction(y) ∧ Dispersion(y) ∧ WaterDroplets(y)))"
    },
    {
        "NL": "A liquid substance that cleans and sterilizes surfaces or objects, killing or inactivating harmful microorganisms, is called a disinfectant.",
        "FOL": "∀x (LiquidSubstance(x) ∧ Cleans(x) ∧ Sterilizes(x) ∧ KillsOrInactivatesMicroorganisms(x) → Disinfectant(x))"
    },
    {
        "NL": "A place is considered a university if it is an institution of higher education and research, granting academic degrees in various fields of study.",
        "FOL": "∀x (Place(x) ∧ InstitutionOfHigherEducation(x) ∧ InstitutionOfResearch(x) ∧ GrantsAcademicDegrees(x) ∧ InVariousFieldsOfStudy(x) → University(x))"
    },
    {
        "NL": "A person can play the piano if they have taken lessons and practiced regularly.",
        "FOL": "∀x (Person(x) ∧ TakenPianoLessons(x) ∧ PracticesRegularly(x) → CanPlayPiano(x))"
    },
    {
        "NL": "All writers and the creative are imaginative.",
        "FOL": "∀x (Person(x) ∧ Imaginative(x) → Writer(x) ∨ Creative(x))"
    },
    {
        "NL": "A landform characterized by steep slopes and high elevation is a mountain.",
        "FOL": "∀x (Landform(x) ∧ SteepSlopes(x) ∧ HighElevation(x) → Mountain(x))"
    },
    {
        "NL": "Every bird sings, yet not every singer is a bird.",
        "FOL": "∀x (Bird(x) → Sing(x)) ∧ ∃y (Sing(y) ∧ ¬Bird(y))"
    },
    {
        "NL": "Certain plants, like cacti and succulents, can survive in arid conditions due to their ability to store water.",
        "FOL": "∀x ((Cactus(x) ∨ Succulent(x)) → SurvivesInAridConditions(x))"
    },
    {
        "NL": "A house is a building, but a tent is not.",
        "FOL": "∀x (House(x) → Building(x)) ∧ ∀y (Tent(y) → ¬Building(y))"
    },
    {
        "NL": "A teacher is writing equations on the board.",
        "FOL": "∃x ∃y (Teacher(x) ∧ Equations(y) ∧ Writing(x, y) ∧ OnTheBoard(x))"
    },
    {
        "NL": "A person knows coding if and only if they understand Python or Java, but not both.",
        "FOL": "∀x (Person(x) → (KnowsCoding(x) ↔ (UnderstandsPython(x) ⊕ UnderstandsJava(x))))"
    },
    {
        "NL": "No mammals are amphibians.",
        "FOL": "¬∃x (Mammal(x) ∧ Amphibian(x))"
    },
    {
        "NL": "A company that promotes a healthy work-life balance is more likely to have satisfied employees and lower turnover rates.",
        "FOL": "∀x (PromotesHealthyWorkLifeBalance(x) → (SatisfiedEmployees(x) ∧ LowerTurnoverRates(x)))"
    },
    {
        "NL": "A magazine is a chronicle if it records the history of a certain person, edited by the same person.",
        "FOL": "∀x ∃y (Magazine(x) ∧ Person(y) ∧ RecordsHistory(x, y) ∧ EditedBy(x, y) → Chronicle(x))"
    },
    {
        "NL": "A volcano x is active if it has erupted in the past and still shows signs of potential future eruptions.",
        "FOL": "∀x (Volcano(x) ∧ HasEruptedInThePast(x) ∧ ShowsSignsOfFutureEruptions(x) → Active(x))"
    },
    {
        "NL": "If a book is a mystery novel, it contains elements of suspense and crime-solving.",
        "FOL": "∀x (Book(x) ∧ MysteryNovel(x) → (ContainsSuspense(x) ∧ ContainsCrimeSolving(x)))"
    },
    {
        "NL": "Fossil fuels, such as coal, oil, and natural gas, are nonrenewable energy sources that release greenhouse gases when burned for energy production.",
        "FOL": "∀x (FossilFuel(x) → ((Coal(x) ∨ Oil(x) ∨ NaturalGas(x)) ∧ NonrenewableEnergySource(x) ∧ ReleaseGreenhouseGases(x) ∧ BurnedForEnergyProduction(x)))"
    },
    {
        "NL": "Fire is hot.",
        "FOL": "∀x (Fire(x) → Hot(x))"
    },
    {
        "NL": "An athlete will win the race if he doesn't have an injury.",
        "FOL": "∀x (Athlete(x) ∧ WinRace(x) → ¬HasInjury(x))"
    }
]